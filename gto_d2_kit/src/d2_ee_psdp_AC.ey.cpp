/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_psdp_AC.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1021_13(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C26122 = xA - xB;
    const double C26121 = ae + be;
    const double C26140 = 0 * ce;
    const double C26139 = ce * de;
    const double C26138 = 0 * de;
    const double C26137 = ce + de;
    const double C26136 = 0 * de;
    const double C26135 = xC - xD;
    const double C26190 = yC - yD;
    const double C26197 = zC - zD;
    const double C26209 = 0 * de;
    const double C26229 = 0 * ce;
    const double C26225 = 0 * de;
    const double C26256 = 0 * de;
    const double C26274 = 0 * ce;
    const double C26270 = 0 * de;
    const double C26332 = yA - yB;
    const double C26339 = zA - zB;
    const double C26345 = p + q;
    const double C26344 = p * q;
    const double C26350 = xP - xQ;
    const double C26349 = bs[2];
    const double C26359 = ae * ce;
    const double C26355 = bs[3];
    const double C26368 = bs[4];
    const double C26389 = bs[5];
    const double C26426 = yP - yQ;
    const double C26456 = zP - zQ;
    const double C89 = bs[0];
    const double C27479 = ae * be;
    const double C27478 = std::pow(C26122, 2);
    const double C27480 = 2 * C26121;
    const double C26145 = C26140 / C26137;
    const double C26142 = 2 * C26137;
    const double C26141 = std::pow(C26137, 2);
    const double C26351 = C26137 * C26121;
    const double C26144 = C26139 * C26135;
    const double C26143 = C26135 * C26138;
    const double C27274 = C26135 * de;
    const double C27273 = C26135 * ce;
    const double C27272 = std::pow(C26135, 2);
    const double C26210 = C26139 * C26190;
    const double C27317 = std::pow(C26190, 2);
    const double C27331 = C26190 * de;
    const double C27330 = C26190 * ce;
    const double C26257 = C26139 * C26197;
    const double C27343 = std::pow(C26197, 2);
    const double C27355 = C26197 * de;
    const double C27354 = C26197 * ce;
    const double C26226 = C26190 * C26209;
    const double C26234 = C26229 / C26137;
    const double C26271 = C26197 * C26256;
    const double C26279 = C26274 / C26137;
    const double C27488 = std::pow(C26332, 2);
    const double C27489 = std::pow(C26339, 2);
    const double C26346 = 2 * C26344;
    const double C26360 = C26350 * ae;
    const double C26358 = std::pow(C26350, 2);
    const double C26356 = C26350 * ce;
    const double C26429 = C26350 * C26426;
    const double C26428 = C26426 * ce;
    const double C26488 = C26426 * C26350;
    const double C26487 = C26426 * ae;
    const double C26516 = std::pow(C26426, 2);
    const double C26459 = C26350 * C26456;
    const double C26458 = C26456 * ce;
    const double C26530 = C26426 * C26456;
    const double C26543 = C26456 * C26350;
    const double C26542 = C26456 * ae;
    const double C26571 = C26456 * C26426;
    const double C26583 = std::pow(C26456, 2);
    const double C27503 = C27478 * C27479;
    const double C27504 = std::pow(C27480, -1);
    const double C27282 = std::pow(C26142, -1);
    const double C27490 = std::pow(C26142, -2);
    const double C26146 = 2 * C26141;
    const double C27487 = 4 * C26141;
    const double C26147 = C26143 / C26137;
    const double C27275 = C27272 * C26139;
    const double C27318 = C27317 * C26139;
    const double C27344 = C27343 * C26139;
    const double C26231 = C26226 / C26137;
    const double C26276 = C26271 / C26137;
    const double C27508 = C27488 * C27479;
    const double C27509 = C27489 * C27479;
    const double C26348 = C26346 / C26345;
    const double C104 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C26346 / C26345, 2) -
            (bs[1] * C26346) / C26345) *
           ae * ce) /
         C26137) /
        C26121;
    const double C90 = -(C26350 * bs[1] * C26346) / C26345;
    const double C601 = -(C26426 * bs[1] * C26346) / C26345;
    const double C1191 = -(C26456 * bs[1] * C26346) / C26345;
    const double C26363 = C26355 * C26360;
    const double C26374 = C26368 * C26360;
    const double C26398 = C26389 * C26360;
    const double C94 = (-(bs[1] * C26360 * C26346) / C26345) / C26121;
    const double C26370 = C26358 * C26368;
    const double C26393 = C26358 * C26389;
    const double C26362 = C26355 * C26356;
    const double C26371 = C26368 * C26356;
    const double C26394 = C26389 * C26356;
    const double C96 = (bs[1] * C26356 * C26346) / (C26345 * C26137);
    const double C26431 = C26429 * ae;
    const double C26430 = C26355 * C26428;
    const double C26436 = C26368 * C26428;
    const double C26443 = C26389 * C26428;
    const double C144 = (bs[1] * C26428 * C26346) / (C26345 * C26137);
    const double C26490 = C26488 * ae;
    const double C26489 = C26355 * C26487;
    const double C26495 = C26368 * C26487;
    const double C26502 = C26389 * C26487;
    const double C234 = (-(bs[1] * C26487 * C26346) / C26345) / C26121;
    const double C26518 = C26516 * C26368;
    const double C26523 = C26516 * C26389;
    const double C26461 = C26459 * ae;
    const double C26460 = C26355 * C26458;
    const double C26466 = C26368 * C26458;
    const double C26473 = C26389 * C26458;
    const double C189 = (bs[1] * C26458 * C26346) / (C26345 * C26137);
    const double C26531 = C26530 * ae;
    const double C26545 = C26543 * ae;
    const double C26544 = C26355 * C26542;
    const double C26550 = C26368 * C26542;
    const double C26557 = C26389 * C26542;
    const double C405 = (-(bs[1] * C26542 * C26346) / C26345) / C26121;
    const double C26572 = C26571 * ae;
    const double C26585 = C26583 * C26368;
    const double C26590 = C26583 * C26389;
    const double C27516 = C27503 / C26121;
    const double C26152 = C26138 / C26146;
    const double C26150 = C26136 / C26146;
    const double C26228 = C26209 / C26146;
    const double C26232 = C26225 / C26146;
    const double C26273 = C26256 / C26146;
    const double C26277 = C26270 / C26146;
    const double C26149 = 0 - C26147;
    const double C27276 = C27275 / C26137;
    const double C27319 = C27318 / C26137;
    const double C27345 = C27344 / C26137;
    const double C26235 = 0 - C26231;
    const double C26280 = 0 - C26276;
    const double C27518 = C27508 / C26121;
    const double C27519 = C27509 / C26121;
    const double C26352 = std::pow(C26348, 2);
    const double C26354 = -C26348;
    const double C26369 = std::pow(C26348, 4);
    const double C26433 = C26431 * ce;
    const double C26492 = C26490 * ce;
    const double C26463 = C26461 * ce;
    const double C26532 = C26531 * ce;
    const double C26547 = C26545 * ce;
    const double C26573 = C26572 * ce;
    const double C27522 = -C27516;
    const double C26154 = C26149 * ce;
    const double C27277 = -C27276;
    const double C27320 = -C27319;
    const double C27346 = -C27345;
    const double C26238 = C26235 * ce;
    const double C26283 = C26280 * ce;
    const double C27523 = -C27518;
    const double C27524 = -C27519;
    const double C26357 = C26349 * C26352;
    const double C105 =
        (-(C26352 * C26349 * C26350 * ae * ce) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26350 * ce) / C26351 -
        (C26350 *
         (C26349 * C26352 +
          std::pow(C26350, 2) * bs[3] * std::pow(-C26348, 3)) *
         ae * ce) /
            C26351;
    const double C149 =
        (-(C26352 * C26349 * C26350 * (yP - yQ) * ae * ce) / C26137) / C26121;
    const double C194 =
        (-(C26352 * C26349 * C26350 * (zP - zQ) * ae * ce) / C26137) / C26121;
    const double C239 =
        (-(C26352 * C26349 * C26426 * C26350 * ae * ce) / C26137) / C26121;
    const double C296 =
        (-((std::pow(C26426, 2) * C26349 * C26352 - (bs[1] * C26346) / C26345) *
           C26359) /
         C26137) /
        C26121;
    const double C350 =
        (-(C26352 * C26349 * C26426 * C26456 * ae * ce) / C26137) / C26121;
    const double C410 =
        (-(C26352 * C26349 * C26456 * C26350 * ae * ce) / C26137) / C26121;
    const double C467 =
        (-(C26352 * C26349 * C26456 * C26426 * ae * ce) / C26137) / C26121;
    const double C521 =
        (-((std::pow(C26456, 2) * C26349 * C26352 - (bs[1] * C26346) / C26345) *
           C26359) /
         C26137) /
        C26121;
    const double C95 = (C26350 * C26352 * C26349 * C26360) / C26121 -
                       (ae * bs[1] * C26346) / (C26345 * C26121);
    const double C97 = (ce * bs[1] * C26346) / (C26345 * C26137) -
                       (C26350 * C26352 * C26349 * C26356) / C26137;
    const double C145 = -(C26350 * C26352 * C26349 * C26428) / C26137;
    const double C190 = -(C26350 * C26352 * C26349 * C26458) / C26137;
    const double C235 = (C26350 * C26352 * C26349 * C26487) / C26121;
    const double C406 = (C26350 * C26352 * C26349 * C26542) / C26121;
    const double C606 = -(C26426 * C26352 * C26349 * C26356) / C26137;
    const double C607 = (C26426 * C26352 * C26349 * C26360) / C26121;
    const double C668 = (ce * bs[1] * C26346) / (C26345 * C26137) -
                        (C26426 * C26352 * C26349 * C26428) / C26137;
    const double C726 = -(C26426 * C26352 * C26349 * C26458) / C26137;
    const double C784 = (C26426 * C26352 * C26349 * C26487) / C26121 -
                        (ae * bs[1] * C26346) / (C26345 * C26121);
    const double C986 = (C26426 * C26352 * C26349 * C26542) / C26121;
    const double C1196 = -(C26456 * C26352 * C26349 * C26356) / C26137;
    const double C1197 = (C26456 * C26352 * C26349 * C26360) / C26121;
    const double C1257 = -(C26456 * C26352 * C26349 * C26428) / C26137;
    const double C1316 = (ce * bs[1] * C26346) / (C26345 * C26137) -
                         (C26456 * C26352 * C26349 * C26458) / C26137;
    const double C1374 = (C26456 * C26352 * C26349 * C26487) / C26121;
    const double C1576 = (C26456 * C26352 * C26349 * C26542) / C26121 -
                         (ae * bs[1] * C26346) / (C26345 * C26121);
    const double C26361 = std::pow(C26354, 3);
    const double C26390 = std::pow(C26354, 5);
    const double C26378 = C26369 * C26374;
    const double C26377 = C26369 * C26371;
    const double C26376 = C26370 * C26369;
    const double C26388 = C26368 * C26369;
    const double C26438 = C26369 * C26436;
    const double C26468 = C26369 * C26466;
    const double C26497 = C26369 * C26495;
    const double C26519 = C26518 * C26369;
    const double C26552 = C26369 * C26550;
    const double C26586 = C26585 * C26369;
    const double C26435 = C26368 * C26433;
    const double C26441 = C26389 * C26433;
    const double C26494 = C26368 * C26492;
    const double C26500 = C26389 * C26492;
    const double C26465 = C26368 * C26463;
    const double C26471 = C26389 * C26463;
    const double C26534 = C26368 * C26532;
    const double C26537 = C26389 * C26532;
    const double C26549 = C26368 * C26547;
    const double C26555 = C26389 * C26547;
    const double C26575 = C26368 * C26573;
    const double C26578 = C26389 * C26573;
    const double C27525 = std::exp(C27522);
    const double C26157 = C26154 / C26137;
    const double C27278 = std::exp(C27277);
    const double C27321 = std::exp(C27320);
    const double C27347 = std::exp(C27346);
    const double C26240 = C26238 / C26137;
    const double C26285 = C26283 / C26137;
    const double C27526 = std::exp(C27523);
    const double C27527 = std::exp(C27524);
    const double C91 = C26357 * C26358 - (bs[1] * C26346) / C26345;
    const double C599 = C26426 * C26350 * C26357;
    const double C1189 = C26456 * C26350 * C26357;
    const double C1784 = C26357 * C26516 - (bs[1] * C26346) / C26345;
    const double C2673 = C26456 * C26426 * C26357;
    const double C3190 = C26357 * C26583 - (bs[1] * C26346) / C26345;
    const double C26365 = C26361 * C26363;
    const double C26364 = C26361 * C26362;
    const double C26367 = C26355 * C26361;
    const double C26432 = C26361 * C26430;
    const double C26462 = C26361 * C26460;
    const double C26491 = C26361 * C26489;
    const double C26546 = C26361 * C26544;
    const double C150 =
        (-(C26350 * C26361 * C26355 * C26350 * C26426 * ae * ce) / C26137) /
            C26121 -
        (ae * C26352 * C26349 * C26426 * ce) / C26351;
    const double C195 =
        (-(C26350 * C26361 * C26355 * C26350 * C26456 * ae * ce) / C26137) /
            C26121 -
        (ae * C26352 * C26349 * C26456 * ce) / C26351;
    const double C240 =
        (-(C26350 * C26361 * C26355 * C26426 * C26350 * ae * ce) / C26137) /
            C26121 -
        (C26352 * C26349 * C26426 * ae * ce) / C26351;
    const double C297 =
        (-(C26350 * (C26357 + std::pow(C26426, 2) * C26355 * C26361) * C26359) /
         C26137) /
        C26121;
    const double C351 =
        (-(C26350 * C26361 * C26355 * C26426 * C26456 * ae * ce) / C26137) /
        C26121;
    const double C352 =
        (-(C26369 * C26368 * C26532 * C26358) / C26137) / C26121 -
        (C26361 * C26355 * C26532) / C26351;
    const double C411 =
        (-(C26350 * C26361 * C26355 * C26456 * C26350 * ae * ce) / C26137) /
            C26121 -
        (C26352 * C26349 * C26456 * ae * ce) / C26351;
    const double C468 =
        (-(C26350 * C26361 * C26355 * C26456 * C26426 * ae * ce) / C26137) /
        C26121;
    const double C469 =
        (-(C26369 * C26368 * C26573 * C26358) / C26137) / C26121 -
        (C26361 * C26355 * C26573) / C26351;
    const double C522 =
        (-(C26350 * (C26357 + std::pow(C26456, 2) * C26355 * C26361) * C26359) /
         C26137) /
        C26121;
    const double C612 =
        (-(C26426 * (C26357 + C26358 * C26355 * C26361) * C26359) / C26137) /
        C26121;
    const double C672 =
        (-(C26426 * C26361 * C26355 * C26433) / C26137) / C26121 -
        (C26352 * C26349 * C26360 * ce) / C26351;
    const double C730 =
        (-(C26426 * C26361 * C26355 * C26463) / C26137) / C26121;
    const double C787 =
        (-(C26426 * C26361 * C26355 * C26492) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26356) / C26351;
    const double C853 =
        (-(C26352 * C26349 * C26487 * ce) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26428) / C26351 -
        (C26426 * (C26357 + C26516 * C26355 * C26361) * C26359) / C26351;
    const double C922 =
        (-(C26426 * C26361 * C26355 * C26532) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26458) / C26351;
    const double C989 =
        (-(C26426 * C26361 * C26355 * C26547) / C26137) / C26121;
    const double C1055 =
        (-(C26426 * C26361 * C26355 * C26573) / C26137) / C26121 -
        (C26352 * C26349 * C26542 * ce) / C26351;
    const double C1124 =
        (-(C26426 * (C26357 + C26583 * C26355 * C26361) * C26359) / C26137) /
        C26121;
    const double C1202 =
        (-(C26456 * (C26357 + C26358 * C26355 * C26361) * C26359) / C26137) /
        C26121;
    const double C1261 =
        (-(C26456 * C26361 * C26355 * C26433) / C26137) / C26121;
    const double C1320 =
        (-(C26456 * C26361 * C26355 * C26463) / C26137) / C26121 -
        (C26352 * C26349 * C26360 * ce) / C26351;
    const double C1377 =
        (-(C26456 * C26361 * C26355 * C26492) / C26137) / C26121;
    const double C1445 =
        (-(C26456 * (C26357 + C26516 * C26355 * C26361) * C26359) / C26137) /
        C26121;
    const double C1507 =
        (-(C26456 * C26361 * C26355 * C26532) / C26137) / C26121 -
        (C26352 * C26349 * C26487 * ce) / C26351;
    const double C1579 =
        (-(C26456 * C26361 * C26355 * C26547) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26356) / C26351;
    const double C1647 =
        (-(C26456 * C26361 * C26355 * C26573) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26428) / C26351;
    const double C1709 =
        (-(C26352 * C26349 * C26542 * ce) / C26137) / C26121 -
        (ae * C26352 * C26349 * C26458) / C26351 -
        (C26456 * (C26357 + C26583 * C26355 * C26361) * C26359) / C26351;
    const double C26405 = C26390 * C26398;
    const double C26402 = C26390 * C26394;
    const double C26401 = C26393 * C26390;
    const double C26446 = C26390 * C26443;
    const double C26476 = C26390 * C26473;
    const double C26505 = C26390 * C26502;
    const double C26524 = C26523 * C26390;
    const double C26560 = C26390 * C26557;
    const double C26591 = C26590 * C26390;
    const double C26381 = C26350 * C26378;
    const double C26386 = C26378 * ce;
    const double C26801 = C26426 * C26378;
    const double C26966 = C26456 * C26378;
    const double C26380 = C26350 * C26377;
    const double C26387 = ae * C26377;
    const double C26811 = C26426 * C26377;
    const double C26981 = C26456 * C26377;
    const double C26399 = C26388 * ae;
    const double C26397 = C26388 * C26358;
    const double C26396 = C26350 * C26388;
    const double C26395 = C26388 * ce;
    const double C26881 = C26388 * C26516;
    const double C26880 = C26426 * C26388;
    const double C27003 = C26388 * C26583;
    const double C27002 = C26456 * C26388;
    const double C26442 = ae * C26438;
    const double C26440 = C26350 * C26438;
    const double C26704 = C26426 * C26438;
    const double C26990 = C26456 * C26438;
    const double C26472 = ae * C26468;
    const double C26470 = C26350 * C26468;
    const double C26815 = C26426 * C26468;
    const double C26837 = C26456 * C26468;
    const double C26501 = C26497 * ce;
    const double C26499 = C26350 * C26497;
    const double C26706 = C26426 * C26497;
    const double C26977 = C26456 * C26497;
    const double C26556 = C26552 * ce;
    const double C26554 = C26350 * C26552;
    const double C26816 = C26426 * C26552;
    const double C26839 = C26456 * C26552;
    const double C26437 = C26369 * C26435;
    const double C26444 = C26390 * C26441;
    const double C26496 = C26369 * C26494;
    const double C26503 = C26390 * C26500;
    const double C26467 = C26369 * C26465;
    const double C26474 = C26390 * C26471;
    const double C26535 = C26369 * C26534;
    const double C26538 = C26390 * C26537;
    const double C26551 = C26369 * C26549;
    const double C26558 = C26390 * C26555;
    const double C26576 = C26369 * C26575;
    const double C26579 = C26390 * C26578;
    const double C9513 = C27525 * C607;
    const double C18501 = C27525 * C1197;
    const double C83 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27525 - (C26122 * 2 * ae * be * C26122 * C27525) / C26121) * be) /
            C26121;
    const double C84 =
        (-(2 * ae * be * C26122 * C27525) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C9186 = -(2 * ae * be * C26122 * C27525) / C26121;
    const double C73 = -(C27525 * C26122 * be) / C26121;
    const double C74 = C27504 * C27525;
    const double C26159 = C26157 - C26150;
    const double C26148 = C26144 * C27278;
    const double C27279 = C27278 * C27273;
    const double C27283 = C27282 * C27278;
    const double C27483 = C27278 / C26142;
    const double C27482 = C27278 * C27274;
    const double C593 = C27490 * C27278;
    const double C26211 = C26210 * C27321;
    const double C143 = -(2 * C26139 * (yC - yD) * C27321) / C26137;
    const double C665 =
        ((C27321 - (C26190 * 2 * C26139 * C26190 * C27321) / C26137) * ce) /
            C26137 -
        (0 * de) / C26146;
    const double C666 = (0 * ce) / C26137 - (C26139 * C26190 * C27321) / C26141;
    const double C27332 = C27321 * C27330;
    const double C27335 = C27282 * C27321;
    const double C27494 = C27321 * C27331;
    const double C27493 = C27321 / C26142;
    const double C1781 = C27490 * C27321;
    const double C26258 = C26257 * C27347;
    const double C188 = -(2 * C26139 * (zC - zD) * C27347) / C26137;
    const double C1313 =
        ((C27347 - (C26197 * 2 * C26139 * C26197 * C27347) / C26137) * ce) /
            C26137 -
        (0 * de) / C26146;
    const double C1314 =
        (0 * ce) / C26137 - (C26139 * C26197 * C27347) / C26141;
    const double C27356 = C27347 * C27354;
    const double C27359 = C27282 * C27347;
    const double C27499 = C27347 * C27355;
    const double C27498 = C27347 / C26142;
    const double C3189 = C27490 * C27347;
    const double C26242 = C26240 - C26232;
    const double C26287 = C26285 - C26277;
    const double C246 = C27526 * C235;
    const double C18699 = C27526 * C1374;
    const double C233 = -(2 * ae * be * (yA - yB) * C27526) / C26121;
    const double C9289 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27526 - (C26332 * 2 * ae * be * C26332 * C27526) / C26121) * be) /
            C26121;
    const double C9290 =
        (-(2 * ae * be * C26332 * C27526) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C9184 = -(C27526 * C26332 * be) / C26121;
    const double C9185 = C27504 * C27526;
    const double C417 = C27527 * C406;
    const double C9861 = C27527 * C986;
    const double C404 = -(2 * ae * be * (zA - zB) * C27527) / C26121;
    const double C17929 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27527 - (C26339 * 2 * ae * be * C26339 * C27527) / C26121) * be) /
            C26121;
    const double C17930 =
        (-(2 * ae * be * C26339 * C27527) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C17723 = -(C27527 * C26339 * be) / C26121;
    const double C17724 = C27504 * C27527;
    const double C98 =
        (C26352 * C26349 * C26360 + C26350 * (C26350 * C26365 + C26357 * ae) +
         C26350 * C26357 * ae) /
        C26121;
    const double C603 = (C26426 * (C26350 * C26365 + C26357 * ae)) / C26121;
    const double C1193 = (C26456 * (C26350 * C26365 + C26357 * ae)) / C26121;
    const double C1787 = (C26352 * C26349 * C26360 + C26365 * C26516) / C26121;
    const double C2320 =
        (2 * C26426 * C26365 + C26426 * (C26365 + C26378 * C26516)) / C26121;
    const double C2677 = (C26456 * C26426 * C26365) / C26121;
    const double C2684 = (C26456 * (C26365 + C26378 * C26516)) / C26121;
    const double C3193 = (C26352 * C26349 * C26360 + C26365 * C26583) / C26121;
    const double C4206 =
        (2 * C26456 * C26365 + C26456 * (C26365 + C26378 * C26583)) / C26121;
    const double C106 =
        (-(ae * (C26350 * C26364 + C26357 * ce)) / C26137) / C26121 -
        ((C26357 + C26358 * C26355 * C26361) * C26359) / C26351 -
        ((C26350 * C26365 + C26357 * ae) * ce) / C26351 +
        C26350 * ((-(C26365 * ce) / C26137) / C26121 - (ae * C26364) / C26351 -
                  (C26350 *
                   (C26355 * C26361 + C26358 * bs[4] * std::pow(C26348, 4)) *
                   C26359) /
                      C26351);
    const double C99 = -(C26350 * (C26350 * C26364 + C26357 * ce) +
                         C26352 * C26349 * C26356 + C26350 * C26357 * ce) /
                       C26137;
    const double C605 = -(C26426 * (C26350 * C26364 + C26357 * ce)) / C26137;
    const double C1195 = -(C26456 * (C26350 * C26364 + C26357 * ce)) / C26137;
    const double C1789 = -(C26364 * C26516 + C26352 * C26349 * C26356) / C26137;
    const double C2318 = (-2 * C26426 * C26364) / C26137 -
                         (C26426 * (C26377 * C26516 + C26364)) / C26137;
    const double C2679 = -(C26456 * C26426 * C26364) / C26137;
    const double C2682 = -(C26456 * (C26377 * C26516 + C26364)) / C26137;
    const double C3195 = -(C26364 * C26583 + C26352 * C26349 * C26356) / C26137;
    const double C4204 = (-2 * C26456 * C26364) / C26137 -
                         (C26456 * (C26377 * C26583 + C26364)) / C26137;
    const double C26375 = C26367 * ae;
    const double C26373 = C26350 * C26367;
    const double C26372 = C26367 * ce;
    const double C26379 = C26367 + C26376;
    const double C26520 = C26367 + C26519;
    const double C26587 = C26367 + C26586;
    const double C26705 = C26426 * C26367;
    const double C26838 = C26456 * C26367;
    const double C298 =
        (-((C26367 + C26516 * C26368 * C26369) * C26359 * C26358) / C26137) /
            C26121 -
        ((C26357 + C26516 * C26355 * C26361) * C26359) / C26351;
    const double C523 =
        (-((C26367 + C26583 * C26368 * C26369) * C26359 * C26358) / C26137) /
            C26121 -
        ((C26357 + C26583 * C26355 * C26361) * C26359) / C26351;
    const double C92 =
        2 * C26350 * C26357 + C26350 * (C26357 + C26367 * C26358);
    const double C600 = C26426 * (C26357 + C26367 * C26358);
    const double C1190 = C26456 * (C26357 + C26367 * C26358);
    const double C2316 =
        2 * C26426 * C26357 + C26426 * (C26357 + C26367 * C26516);
    const double C2676 = C26456 * (C26357 + C26367 * C26516);
    const double C4202 =
        2 * C26456 * C26357 + C26456 * (C26357 + C26367 * C26583);
    const double C151 =
        (-(ae * C26350 * C26432) / C26137) / C26121 -
        (C26361 * C26355 * C26433) / C26351 +
        C26350 * ((-(C26350 * C26369 * C26368 * C26433) / C26137) / C26121 -
                  (ae * C26432) / C26351);
    const double C146 = -(C26432 * C26358 + C26352 * C26349 * C26428) / C26137;
    const double C147 = (-2 * C26350 * C26432) / C26137 -
                        (C26350 * (C26438 * C26358 + C26432)) / C26137;
    const double C667 =
        -(C26426 * C26350 * C26432 + C26350 * C26357 * ce) / C26137;
    const double C669 = -(C26426 * (C26438 * C26358 + C26432) +
                          (C26357 + C26367 * C26358) * ce) /
                        C26137;
    const double C1255 = -(C26456 * C26350 * C26432) / C26137;
    const double C1256 = -(C26456 * (C26438 * C26358 + C26432)) / C26137;
    const double C1849 = -(C26426 * (C26426 * C26432 + C26357 * ce) +
                           C26352 * C26349 * C26428 + C26426 * C26357 * ce) /
                         C26137;
    const double C2739 = -(C26456 * (C26426 * C26432 + C26357 * ce)) / C26137;
    const double C3252 = -(C26432 * C26583 + C26352 * C26349 * C26428) / C26137;
    const double C4244 = (-2 * C26456 * C26432) / C26137 -
                         (C26456 * (C26438 * C26583 + C26432)) / C26137;
    const double C196 =
        (-(ae * C26350 * C26462) / C26137) / C26121 -
        (C26361 * C26355 * C26463) / C26351 +
        C26350 * ((-(C26350 * C26369 * C26368 * C26463) / C26137) / C26121 -
                  (ae * C26462) / C26351);
    const double C191 = -(C26462 * C26358 + C26352 * C26349 * C26458) / C26137;
    const double C192 = (-2 * C26350 * C26462) / C26137 -
                        (C26350 * (C26468 * C26358 + C26462)) / C26137;
    const double C725 = -(C26426 * C26350 * C26462) / C26137;
    const double C727 = -(C26426 * (C26468 * C26358 + C26462)) / C26137;
    const double C1315 =
        -(C26456 * C26350 * C26462 + C26350 * C26357 * ce) / C26137;
    const double C1317 = -(C26456 * (C26468 * C26358 + C26462) +
                           (C26357 + C26367 * C26358) * ce) /
                         C26137;
    const double C1905 = -(C26462 * C26516 + C26352 * C26349 * C26458) / C26137;
    const double C2400 = (-2 * C26426 * C26462) / C26137 -
                         (C26426 * (C26468 * C26516 + C26462)) / C26137;
    const double C2797 =
        -(C26456 * C26426 * C26462 + C26426 * C26357 * ce) / C26137;
    const double C2800 = -(C26456 * (C26468 * C26516 + C26462) +
                           (C26357 + C26367 * C26516) * ce) /
                         C26137;
    const double C3311 = -(C26456 * (C26456 * C26462 + C26357 * ce) +
                           C26352 * C26349 * C26458 + C26456 * C26357 * ce) /
                         C26137;
    const double C241 =
        (-(C26350 * C26491 * ce) / C26137) / C26121 -
        (C26361 * C26355 * C26492) / C26351 +
        C26350 * ((-(C26350 * C26369 * C26368 * C26492) / C26137) / C26121 -
                  (C26491 * ce) / C26351);
    const double C236 = (C26352 * C26349 * C26487 + C26491 * C26358) / C26121;
    const double C237 =
        (2 * C26350 * C26491 + C26350 * (C26491 + C26497 * C26358)) / C26121;
    const double C783 =
        (C26426 * C26350 * C26491 + C26350 * C26357 * ae) / C26121;
    const double C785 = (C26426 * (C26491 + C26497 * C26358) +
                         (C26357 + C26367 * C26358) * ae) /
                        C26121;
    const double C1373 = (C26456 * C26350 * C26491) / C26121;
    const double C1375 = (C26456 * (C26491 + C26497 * C26358)) / C26121;
    const double C1961 =
        (C26352 * C26349 * C26487 + C26426 * (C26426 * C26491 + C26357 * ae) +
         C26426 * C26357 * ae) /
        C26121;
    const double C2855 = (C26456 * (C26426 * C26491 + C26357 * ae)) / C26121;
    const double C3367 = (C26352 * C26349 * C26487 + C26491 * C26583) / C26121;
    const double C4324 =
        (2 * C26456 * C26491 + C26456 * (C26491 + C26497 * C26583)) / C26121;
    const double C412 =
        (-(C26350 * C26546 * ce) / C26137) / C26121 -
        (C26361 * C26355 * C26547) / C26351 +
        C26350 * ((-(C26350 * C26369 * C26368 * C26547) / C26137) / C26121 -
                  (C26546 * ce) / C26351);
    const double C407 = (C26352 * C26349 * C26542 + C26546 * C26358) / C26121;
    const double C408 =
        (2 * C26350 * C26546 + C26350 * (C26546 + C26552 * C26358)) / C26121;
    const double C985 = (C26426 * C26350 * C26546) / C26121;
    const double C987 = (C26426 * (C26546 + C26552 * C26358)) / C26121;
    const double C1575 =
        (C26456 * C26350 * C26546 + C26350 * C26357 * ae) / C26121;
    const double C1577 = (C26456 * (C26546 + C26552 * C26358) +
                          (C26357 + C26367 * C26358) * ae) /
                         C26121;
    const double C2143 = (C26352 * C26349 * C26542 + C26546 * C26516) / C26121;
    const double C2548 =
        (2 * C26426 * C26546 + C26426 * (C26546 + C26552 * C26516)) / C26121;
    const double C3021 =
        (C26456 * C26426 * C26546 + C26426 * C26357 * ae) / C26121;
    const double C3024 = (C26456 * (C26546 + C26552 * C26516) +
                          (C26357 + C26367 * C26516) * ae) /
                         C26121;
    const double C3549 =
        (C26352 * C26349 * C26542 + C26456 * (C26456 * C26546 + C26357 * ae) +
         C26456 * C26357 * ae) /
        C26121;
    const double C248 = C27526 * C240;
    const double C304 = C27526 * C297;
    const double C358 = C27526 * C351;
    const double C360 = C27526 * C352;
    const double C419 = C27527 * C411;
    const double C475 = C27527 * C468;
    const double C477 = C27527 * C469;
    const double C529 = C27527 * C522;
    const double C9515 = C27525 * C612;
    const double C9587 = C27525 * C672;
    const double C9647 = C27525 * C730;
    const double C9863 = C27527 * C989;
    const double C9923 = C27527 * C1055;
    const double C9977 = C27527 * C1124;
    const double C18503 = C27525 * C1202;
    const double C18576 = C27525 * C1261;
    const double C18640 = C27525 * C1320;
    const double C18701 = C27526 * C1377;
    const double C18762 = C27526 * C1445;
    const double C18816 = C27526 * C1507;
    const double C26410 = C26350 * C26405;
    const double C26861 = C26405 * C26516;
    const double C26946 = C26426 * C26405;
    const double C26968 = C26405 * C26583;
    const double C26409 = C26350 * C26402;
    const double C26870 = C26402 * C26516;
    const double C26952 = C26426 * C26402;
    const double C26983 = C26402 * C26583;
    const double C26408 = C26388 + C26401;
    const double C26448 = C26446 * C26358;
    const double C26711 = C26350 * C26446;
    const double C26879 = C26426 * C26446;
    const double C26992 = C26446 * C26583;
    const double C26478 = C26476 * C26358;
    const double C26720 = C26350 * C26476;
    const double C26901 = C26476 * C26516;
    const double C26956 = C26426 * C26476;
    const double C27001 = C26456 * C26476;
    const double C26507 = C26505 * C26358;
    const double C26713 = C26350 * C26505;
    const double C26882 = C26426 * C26505;
    const double C26978 = C26505 * C26583;
    const double C26525 = C26388 + C26524;
    const double C26562 = C26560 * C26358;
    const double C26727 = C26350 * C26560;
    const double C26910 = C26560 * C26516;
    const double C26958 = C26426 * C26560;
    const double C27004 = C26456 * C26560;
    const double C26592 = C26388 + C26591;
    const double C26391 = C26386 / C26137;
    const double C26860 = C26386 / C26351;
    const double C3736 = (C26426 * C26365 + C26801 * C26583) / C26121;
    const double C26392 = C26387 / C26351;
    const double C3734 = -(C26811 * C26583 + C26426 * C26364) / C26137;
    const double C26404 = C26367 + C26397;
    const double C26406 = C26396 * ae;
    const double C26403 = C26396 * ce;
    const double C26712 = C26426 * C26396;
    const double C26844 = C26456 * C26396;
    const double C26887 = C26367 + C26881;
    const double C26889 = C26880 * ae;
    const double C26886 = C26880 * ce;
    const double C26957 = C26456 * C26880;
    const double C27009 = C26367 + C27003;
    const double C27011 = C27002 * ae;
    const double C27008 = C27002 * ce;
    const double C26445 = C26442 / C26351;
    const double C3253 = -(C26440 * C26583 + C26350 * C26432) / C26137;
    const double C26475 = C26472 / C26351;
    const double C1906 = -(C26470 * C26516 + C26350 * C26462) / C26137;
    const double C26504 = C26501 / C26351;
    const double C26877 = C26501 / C26137;
    const double C3368 = (C26350 * C26491 + C26499 * C26583) / C26121;
    const double C26559 = C26556 / C26351;
    const double C26999 = C26556 / C26137;
    const double C2144 = (C26350 * C26546 + C26554 * C26516) / C26121;
    const double C152 =
        2 * ((-(C26350 * C26437) / C26137) / C26121 - (ae * C26432) / C26351) -
        (ae * (C26438 * C26358 + C26432)) / C26351 +
        C26350 *
            ((-(ae * C26350 * C26438) / C26137) / C26121 - C26437 / C26351 +
             C26350 *
                 ((-(C26350 * C26390 * C26389 * C26433) / C26137) / C26121 -
                  (ae * C26438) / C26351));
    const double C671 = C26426 * ((-(C26350 * C26437) / C26137) / C26121 -
                                  (ae * C26432) / C26351) -
                        ((C26350 * C26365 + C26357 * ae) * ce) / C26351;
    const double C1259 = C26456 * ((-(C26350 * C26437) / C26137) / C26121 -
                                   (ae * C26432) / C26351);
    const double C1852 = (-(C26426 * C26365 * ce) / C26137) / C26121 -
                         (C26361 * C26355 * C26433) / C26351 +
                         C26426 * ((-(C26426 * C26437) / C26137) / C26121 -
                                   (C26365 * ce) / C26351);
    const double C2743 = C26456 * ((-(C26426 * C26437) / C26137) / C26121 -
                                   (C26365 * ce) / C26351);
    const double C3255 = (-(C26437 * C26583) / C26137) / C26121 -
                         (C26361 * C26355 * C26433) / C26351;
    const double C26447 = C26350 * C26444;
    const double C26859 = C26426 * C26444;
    const double C2364 =
        2 * ((-(C26426 * C26437) / C26137) / C26121 - (C26365 * ce) / C26351) -
        ((C26365 + C26378 * C26516) * ce) / C26351 +
        C26426 *
            ((-(C26426 * C26378 * ce) / C26137) / C26121 - C26437 / C26351 +
             C26426 *
                 ((-(C26426 * C26444) / C26137) / C26121 - C26386 / C26351));
    const double C2746 =
        C26456 *
        ((-(C26426 * C26378 * ce) / C26137) / C26121 - C26437 / C26351 +
         C26426 * ((-(C26426 * C26444) / C26137) / C26121 - C26386 / C26351));
    const double C3792 =
        (-(C26426 * C26437) / C26137) / C26121 - (C26365 * ce) / C26351 +
        ((-(C26426 * C26444) / C26137) / C26121 - C26386 / C26351) * C26583;
    const double C4246 =
        (-2 * C26456 * C26437) / C26351 +
        C26456 * ((-(C26444 * C26583) / C26137) / C26121 - C26437 / C26351);
    const double C21290 =
        3 * ((-(C26444 * C26583) / C26137) / C26121 - C26437 / C26351) +
        C26456 * ((-2 * C26456 * C26444) / C26351 +
                  C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26433 * C26583) /
                             C26137) /
                                C26121 -
                            C26444 / C26351));
    const double C242 =
        2 * ((-(C26350 * C26496) / C26137) / C26121 - (C26491 * ce) / C26351) -
        ((C26491 + C26497 * C26358) * ce) / C26351 +
        C26350 *
            ((-(C26350 * C26497 * ce) / C26137) / C26121 - C26496 / C26351 +
             C26350 *
                 ((-(C26350 * C26390 * C26389 * C26492) / C26137) / C26121 -
                  (C26497 * ce) / C26351));
    const double C788 = C26426 * ((-(C26350 * C26496) / C26137) / C26121 -
                                  (C26491 * ce) / C26351) -
                        (ae * (C26350 * C26364 + C26357 * ce)) / C26351;
    const double C1378 = C26456 * ((-(C26350 * C26496) / C26137) / C26121 -
                                   (C26491 * ce) / C26351);
    const double C1964 = (-(ae * C26426 * C26364) / C26137) / C26121 -
                         (C26361 * C26355 * C26492) / C26351 +
                         C26426 * ((-(C26426 * C26496) / C26137) / C26121 -
                                   (ae * C26364) / C26351);
    const double C2859 = (-(C26426 * C26456 * C26496) / C26137) / C26121 -
                         (ae * C26456 * C26364) / C26351;
    const double C3370 = (-(C26496 * C26583) / C26137) / C26121 -
                         (C26361 * C26355 * C26492) / C26351;
    const double C26506 = C26350 * C26503;
    const double C26869 = C26426 * C26503;
    const double C26921 = C26456 * C26503;
    const double C2862 =
        (-(ae * C26456 * C26426 * C26377) / C26137) / C26121 -
        (C26456 * C26496) / C26351 +
        C26426 * ((-(C26426 * C26456 * C26503) / C26137) / C26121 -
                  (ae * C26456 * C26377) / C26351);
    const double C3900 =
        C26426 * ((-(C26503 * C26583) / C26137) / C26121 - C26496 / C26351) -
        (ae * (C26377 * C26583 + C26364)) / C26351;
    const double C4326 =
        (-2 * C26456 * C26496) / C26351 +
        C26456 * ((-(C26503 * C26583) / C26137) / C26121 - C26496 / C26351);
    const double C12516 =
        (-(C26503 * C26583) / C26137) / C26121 - C26496 / C26351 -
        (ae * (C26426 * C26402 * C26583 + C26811)) / C26351 +
        C26426 * (C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26492 * C26583) /
                             C26137) /
                                C26121 -
                            C26503 / C26351) -
                  (ae * (C26402 * C26583 + C26377)) / C26351);
    const double C197 =
        2 * ((-(C26350 * C26467) / C26137) / C26121 - (ae * C26462) / C26351) -
        (ae * (C26468 * C26358 + C26462)) / C26351 +
        C26350 *
            ((-(ae * C26350 * C26468) / C26137) / C26121 - C26467 / C26351 +
             C26350 *
                 ((-(C26350 * C26390 * C26389 * C26463) / C26137) / C26121 -
                  (ae * C26468) / C26351));
    const double C729 = C26426 * ((-(C26350 * C26467) / C26137) / C26121 -
                                  (ae * C26462) / C26351);
    const double C1319 = C26456 * ((-(C26350 * C26467) / C26137) / C26121 -
                                   (ae * C26462) / C26351) -
                         ((C26350 * C26365 + C26357 * ae) * ce) / C26351;
    const double C1908 = (-(C26467 * C26516) / C26137) / C26121 -
                         (C26361 * C26355 * C26463) / C26351;
    const double C2801 = (-(C26456 * C26426 * C26467) / C26137) / C26121 -
                         (C26426 * C26365 * ce) / C26351;
    const double C3314 = (-(C26456 * C26365 * ce) / C26137) / C26121 -
                         (C26361 * C26355 * C26463) / C26351 +
                         C26456 * ((-(C26456 * C26467) / C26137) / C26121 -
                                   (C26365 * ce) / C26351);
    const double C26477 = C26350 * C26474;
    const double C26945 = C26426 * C26474;
    const double C26967 = C26456 * C26474;
    const double C2402 =
        (-2 * C26426 * C26467) / C26351 +
        C26426 * ((-(C26474 * C26516) / C26137) / C26121 - C26467 / C26351);
    const double C2804 =
        C26456 * ((-(C26474 * C26516) / C26137) / C26121 - C26467 / C26351) -
        ((C26365 + C26378 * C26516) * ce) / C26351;
    const double C3846 =
        (-(C26456 * C26801 * ce) / C26137) / C26121 -
        (C26426 * C26467) / C26351 +
        C26456 * ((-(C26456 * C26426 * C26474) / C26137) / C26121 -
                  (C26801 * ce) / C26351);
    const double C4288 =
        2 * ((-(C26456 * C26467) / C26137) / C26121 - (C26365 * ce) / C26351) -
        ((C26365 + C26378 * C26583) * ce) / C26351 +
        C26456 *
            ((-(C26456 * C26378 * ce) / C26137) / C26121 - C26467 / C26351 +
             C26456 *
                 ((-(C26456 * C26474) / C26137) / C26121 - C26386 / C26351));
    const double C11061 =
        3 * ((-(C26474 * C26516) / C26137) / C26121 - C26467 / C26351) +
        C26426 * ((-2 * C26426 * C26474) / C26351 +
                  C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26463 * C26516) /
                             C26137) /
                                C26121 -
                            C26474 / C26351));
    const double C353 =
        (-2 * C26350 * C26535) / C26351 +
        C26350 * ((-(C26390 * C26389 * C26532 * C26358) / C26137) / C26121 -
                  C26535 / C26351);
    const double C921 = (-(C26426 * C26350 * C26535) / C26137) / C26121 -
                        (ae * C26350 * C26462) / C26351;
    const double C1508 = (-(C26456 * C26350 * C26535) / C26137) / C26121 -
                         (C26350 * C26491 * ce) / C26351;
    const double C2085 = (-(ae * C26426 * C26462) / C26137) / C26121 -
                         (C26361 * C26355 * C26532) / C26351 +
                         C26426 * ((-(C26426 * C26535) / C26137) / C26121 -
                                   (ae * C26462) / C26351);
    const double C2967 = C26426 * ((-(C26456 * C26535) / C26137) / C26121 -
                                   (C26491 * ce) / C26351) -
                         (ae * (C26456 * C26462 + C26357 * ce)) / C26351;
    const double C3487 = (-(C26456 * C26491 * ce) / C26137) / C26121 -
                         (C26361 * C26355 * C26532) / C26351 +
                         C26456 * ((-(C26456 * C26535) / C26137) / C26121 -
                                   (C26491 * ce) / C26351);
    const double C26719 = C26350 * C26538;
    const double C26900 = C26426 * C26538;
    const double C26925 = C26456 * C26538;
    const double C354 =
        3 * ((-(C26538 * C26358) / C26137) / C26121 - C26535 / C26351) +
        C26350 * ((-2 * C26350 * C26538) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351));
    const double C923 =
        C26426 * ((-(C26538 * C26358) / C26137) / C26121 - C26535 / C26351) -
        (ae * (C26468 * C26358 + C26462)) / C26351;
    const double C1509 =
        C26456 * ((-(C26538 * C26358) / C26137) / C26121 - C26535 / C26351) -
        ((C26491 + C26497 * C26358) * ce) / C26351;
    const double C2086 =
        (-(ae * C26426 * C26470) / C26137) / C26121 -
        (C26350 * C26535) / C26351 +
        C26426 * ((-(C26426 * C26350 * C26538) / C26137) / C26121 -
                  (ae * C26470) / C26351);
    const double C413 =
        2 * ((-(C26350 * C26551) / C26137) / C26121 - (C26546 * ce) / C26351) -
        ((C26546 + C26552 * C26358) * ce) / C26351 +
        C26350 *
            ((-(C26350 * C26552 * ce) / C26137) / C26121 - C26551 / C26351 +
             C26350 *
                 ((-(C26350 * C26390 * C26389 * C26547) / C26137) / C26121 -
                  (C26552 * ce) / C26351));
    const double C990 = C26426 * ((-(C26350 * C26551) / C26137) / C26121 -
                                  (C26546 * ce) / C26351);
    const double C1580 = C26456 * ((-(C26350 * C26551) / C26137) / C26121 -
                                   (C26546 * ce) / C26351) -
                         (ae * (C26350 * C26364 + C26357 * ce)) / C26351;
    const double C2146 = (-(C26551 * C26516) / C26137) / C26121 -
                         (C26361 * C26355 * C26547) / C26351;
    const double C3025 = (-(C26456 * C26426 * C26551) / C26137) / C26121 -
                         (ae * C26426 * C26364) / C26351;
    const double C3552 = (-(ae * C26456 * C26364) / C26137) / C26121 -
                         (C26361 * C26355 * C26547) / C26351 +
                         C26456 * ((-(C26456 * C26551) / C26137) / C26121 -
                                   (ae * C26364) / C26351);
    const double C26561 = C26350 * C26558;
    const double C26951 = C26426 * C26558;
    const double C26982 = C26456 * C26558;
    const double C2550 =
        (-2 * C26426 * C26551) / C26351 +
        C26426 * ((-(C26558 * C26516) / C26137) / C26121 - C26551 / C26351);
    const double C3028 =
        C26456 * ((-(C26558 * C26516) / C26137) / C26121 - C26551 / C26351) -
        (ae * (C26377 * C26516 + C26364)) / C26351;
    const double C4058 =
        (-(ae * C26456 * C26811) / C26137) / C26121 -
        (C26426 * C26551) / C26351 +
        C26456 * ((-(C26456 * C26426 * C26558) / C26137) / C26121 -
                  (ae * C26811) / C26351);
    const double C11208 =
        3 * ((-(C26558 * C26516) / C26137) / C26121 - C26551 / C26351) +
        C26426 * ((-2 * C26426 * C26558) / C26351 +
                  C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26547 * C26516) /
                             C26137) /
                                C26121 -
                            C26558 / C26351));
    const double C470 =
        (-2 * C26350 * C26576) / C26351 +
        C26350 * ((-(C26390 * C26389 * C26573 * C26358) / C26137) / C26121 -
                  C26576 / C26351);
    const double C1056 = (-(C26426 * C26350 * C26576) / C26137) / C26121 -
                         (C26350 * C26546 * ce) / C26351;
    const double C1645 = (-(C26456 * C26350 * C26576) / C26137) / C26121 -
                         (ae * C26350 * C26432) / C26351;
    const double C2205 = (-(C26426 * C26546 * ce) / C26137) / C26121 -
                         (C26361 * C26355 * C26573) / C26351 +
                         C26426 * ((-(C26426 * C26576) / C26137) / C26121 -
                                   (C26546 * ce) / C26351);
    const double C3079 = C26456 * ((-(C26426 * C26576) / C26137) / C26121 -
                                   (C26546 * ce) / C26351) -
                         (ae * (C26426 * C26432 + C26357 * ce)) / C26351;
    const double C3611 = (-(ae * C26456 * C26432) / C26137) / C26121 -
                         (C26361 * C26355 * C26573) / C26351 +
                         C26456 * ((-(C26456 * C26576) / C26137) / C26121 -
                                   (ae * C26432) / C26351);
    const double C26726 = C26350 * C26579;
    const double C26909 = C26426 * C26579;
    const double C26991 = C26456 * C26579;
    const double C471 =
        3 * ((-(C26579 * C26358) / C26137) / C26121 - C26576 / C26351) +
        C26350 * ((-2 * C26350 * C26579) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351));
    const double C1057 =
        C26426 * ((-(C26579 * C26358) / C26137) / C26121 - C26576 / C26351) -
        ((C26546 + C26552 * C26358) * ce) / C26351;
    const double C1646 =
        C26456 * ((-(C26579 * C26358) / C26137) / C26121 - C26576 / C26351) -
        (ae * (C26438 * C26358 + C26432)) / C26351;
    const double C2206 =
        (-(C26426 * C26554 * ce) / C26137) / C26121 -
        (C26350 * C26576) / C26351 +
        C26426 * ((-(C26426 * C26350 * C26579) / C26137) / C26121 -
                  (C26554 * ce) / C26351);
    const double C9516 = C9186 * C599;
    const double C9514 = C9186 * C606;
    const double C9512 = C9186 * C601;
    const double C9586 = C9186 * C668;
    const double C9646 = C9186 * C726;
    const double C10488 = C9186 * C1784;
    const double C11356 = C9186 * C2673;
    const double C18504 = C9186 * C1189;
    const double C18502 = C9186 * C1196;
    const double C18500 = C9186 * C1191;
    const double C18575 = C9186 * C1257;
    const double C18639 = C9186 * C1316;
    const double C20276 = C9186 * C3190;
    const double C26153 = C26148 / C26141;
    const double C26151 = 2 * C26148;
    const double C27485 = C27279 / C26146;
    const double C27484 = C27279 * C27274;
    const double C27481 = C27279 / C26137;
    const double C27286 = C27283 * C27274;
    const double C78 = C27283 / C27487;
    const double C4561 = C27283 / C26142;
    const double C591 = (C27278 * std::pow(C27274, 2)) / C26141 + C27483;
    const double C27505 = C27482 / C26137;
    const double C592 = (-2 * C27282 * C27482) / C26137;
    const double C26212 = 2 * C26211;
    const double C26230 = C26211 / C26141;
    const double C27496 = C27332 / C26146;
    const double C27495 = C27332 * C27331;
    const double C27491 = C27332 / C26137;
    const double C27338 = C27335 * C27331;
    const double C2313 = C27335 / C27487;
    const double C5039 = C27335 / C26142;
    const double C27510 = C27494 / C26137;
    const double C1780 = (-2 * C27282 * C27494) / C26137;
    const double C1779 = (C27321 * std::pow(C27331, 2)) / C26141 + C27493;
    const double C26259 = 2 * C26258;
    const double C26275 = C26258 / C26141;
    const double C27501 = C27356 / C26146;
    const double C27500 = C27356 * C27355;
    const double C27492 = C27356 / C26137;
    const double C27362 = C27359 * C27355;
    const double C4200 = C27359 / C27487;
    const double C7239 = C27359 / C26142;
    const double C27513 = C27499 / C26137;
    const double C3188 = (-2 * C27282 * C27499) / C26137;
    const double C3187 = (C27347 * std::pow(C27355, 2)) / C26141 + C27498;
    const double C249 = C233 * C91;
    const double C247 = C233 * C97;
    const double C245 = C233 * C90;
    const double C303 = C233 * C145;
    const double C357 = C233 * C190;
    const double C792 = C233 * C599;
    const double C1382 = C233 * C1189;
    const double C18700 = C233 * C1196;
    const double C18698 = C233 * C1191;
    const double C18761 = C233 * C1257;
    const double C18815 = C233 * C1316;
    const double C19934 = C233 * C2673;
    const double C20461 = C233 * C3190;
    const double C420 = C404 * C91;
    const double C418 = C404 * C97;
    const double C416 = C404 * C90;
    const double C474 = C404 * C145;
    const double C528 = C404 * C190;
    const double C994 = C404 * C599;
    const double C1584 = C404 * C1189;
    const double C9862 = C404 * C606;
    const double C9860 = C404 * C601;
    const double C9922 = C404 * C668;
    const double C9976 = C404 * C726;
    const double C10823 = C404 * C1784;
    const double C11702 = C404 * C2673;
    const double C9517 = C27525 * C603;
    const double C18505 = C27525 * C1193;
    const double C10489 = C27525 * C1787;
    const double C10981 = C27525 * C2320;
    const double C11357 = C27525 * C2677;
    const double C11359 = C27525 * C2684;
    const double C20277 = C27525 * C3193;
    const double C21249 = C27525 * C4206;
    const double C251 = C233 * C99;
    const double C422 = C404 * C99;
    const double C794 = C233 * C605;
    const double C996 = C404 * C605;
    const double C9518 = C9186 * C605;
    const double C1384 = C233 * C1195;
    const double C1586 = C404 * C1195;
    const double C18506 = C9186 * C1195;
    const double C10486 = C9186 * C1789;
    const double C10821 = C404 * C1789;
    const double C10982 = C9186 * C2318;
    const double C11216 = C404 * C2318;
    const double C11354 = C9186 * C2679;
    const double C11700 = C404 * C2679;
    const double C19936 = C233 * C2679;
    const double C11360 = C9186 * C2682;
    const double C11706 = C404 * C2682;
    const double C19940 = C233 * C2682;
    const double C20274 = C9186 * C3195;
    const double C20459 = C233 * C3195;
    const double C21250 = C9186 * C4204;
    const double C21374 = C233 * C4204;
    const double C26384 = C26381 + C26375;
    const double C26708 = C26706 + C26375;
    const double C26841 = C26839 + C26375;
    const double C1850 = -(C26426 * (C26426 * C26440 + C26373 * ce) +
                           C26350 * C26432 + C26426 * C26373 * ce) /
                         C26137;
    const double C1962 =
        (C26350 * C26491 + C26426 * (C26426 * C26499 + C26373 * ae) +
         C26426 * C26373 * ae) /
        C26121;
    const double C2740 = -(C26456 * (C26426 * C26440 + C26373 * ce)) / C26137;
    const double C2798 =
        -(C26456 * C26426 * C26470 + C26426 * C26373 * ce) / C26137;
    const double C2856 = (C26456 * (C26426 * C26499 + C26373 * ae)) / C26121;
    const double C3022 =
        (C26456 * C26426 * C26554 + C26426 * C26373 * ae) / C26121;
    const double C3312 = -(C26456 * (C26456 * C26470 + C26373 * ce) +
                           C26350 * C26462 + C26456 * C26373 * ce) /
                         C26137;
    const double C3550 =
        (C26350 * C26546 + C26456 * (C26456 * C26554 + C26373 * ae) +
         C26456 * C26373 * ae) /
        C26121;
    const double C1785 = C26350 * C26357 + C26373 * C26516;
    const double C2315 =
        2 * C26426 * C26373 + C26426 * (C26373 + C26396 * C26516);
    const double C2674 = C26456 * C26426 * C26373;
    const double C2675 = C26456 * (C26373 + C26396 * C26516);
    const double C3191 = C26350 * C26357 + C26373 * C26583;
    const double C4201 =
        2 * C26456 * C26373 + C26456 * (C26373 + C26396 * C26583);
    const double C26383 = C26380 + C26372;
    const double C26707 = C26704 + C26372;
    const double C26840 = C26837 + C26372;
    const double C26382 = C26379 * C26359;
    const double C26521 = C26520 * C26359;
    const double C26588 = C26587 * C26359;
    const double C3844 = -(C26456 * (C26456 * C26815 + C26705 * ce) +
                           C26426 * C26462 + C26456 * C26705 * ce) /
                         C26137;
    const double C4056 =
        (C26426 * C26546 + C26456 * (C26456 * C26816 + C26705 * ae) +
         C26456 * C26705 * ae) /
        C26121;
    const double C3732 = C26426 * C26357 + C26705 * C26583;
    const double C12827 =
        2 * C26456 * C26705 + C26456 * (C26705 + C26880 * C26583);
    const double C306 = C27526 * C298;
    const double C531 = C27527 * C523;
    const double C253 = C233 * C92;
    const double C424 = C404 * C92;
    const double C796 = C233 * C600;
    const double C998 = C404 * C600;
    const double C9520 = C9186 * C600;
    const double C1386 = C233 * C1190;
    const double C1588 = C404 * C1190;
    const double C18508 = C9186 * C1190;
    const double C10980 = C9186 * C2316;
    const double C11214 = C404 * C2316;
    const double C11358 = C9186 * C2676;
    const double C11704 = C404 * C2676;
    const double C19938 = C233 * C2676;
    const double C21248 = C9186 * C4202;
    const double C21372 = C233 * C4202;
    const double C305 = C233 * C146;
    const double C476 = C404 * C146;
    const double C309 = C233 * C147;
    const double C480 = C404 * C147;
    const double C861 = C233 * C667;
    const double C1063 = C404 * C667;
    const double C9588 = C9186 * C667;
    const double C866 = C233 * C669;
    const double C1068 = C404 * C669;
    const double C9590 = C9186 * C669;
    const double C1449 = C233 * C1255;
    const double C1651 = C404 * C1255;
    const double C18577 = C9186 * C1255;
    const double C1452 = C233 * C1256;
    const double C1654 = C404 * C1256;
    const double C18581 = C9186 * C1256;
    const double C10550 = C9186 * C1849;
    const double C10880 = C404 * C1849;
    const double C11422 = C9186 * C2739;
    const double C11767 = C404 * C2739;
    const double C20003 = C233 * C2739;
    const double C20341 = C9186 * C3252;
    const double C20518 = C233 * C3252;
    const double C21293 = C9186 * C4244;
    const double C21416 = C233 * C4244;
    const double C359 = C233 * C191;
    const double C530 = C404 * C191;
    const double C363 = C233 * C192;
    const double C534 = C404 * C192;
    const double C926 = C233 * C725;
    const double C1128 = C404 * C725;
    const double C9649 = C9186 * C725;
    const double C930 = C233 * C727;
    const double C1132 = C404 * C727;
    const double C9652 = C9186 * C727;
    const double C1515 = C233 * C1315;
    const double C1717 = C404 * C1315;
    const double C18641 = C9186 * C1315;
    const double C1520 = C233 * C1317;
    const double C1722 = C404 * C1317;
    const double C18643 = C9186 * C1317;
    const double C10606 = C9186 * C1905;
    const double C10933 = C404 * C1905;
    const double C11064 = C9186 * C2400;
    const double C11296 = C404 * C2400;
    const double C11483 = C9186 * C2797;
    const double C11827 = C404 * C2797;
    const double C20062 = C233 * C2797;
    const double C11488 = C9186 * C2800;
    const double C11832 = C404 * C2800;
    const double C20064 = C233 * C2800;
    const double C20398 = C9186 * C3311;
    const double C20573 = C233 * C3311;
    const double C252 = C27526 * C241;
    const double C250 = C27526 * C236;
    const double C254 = C27526 * C237;
    const double C793 = C27526 * C783;
    const double C797 = C27526 * C785;
    const double C1383 = C27526 * C1373;
    const double C1387 = C27526 * C1375;
    const double C19935 = C27526 * C2855;
    const double C20462 = C27526 * C3367;
    const double C21373 = C27526 * C4324;
    const double C423 = C27527 * C412;
    const double C421 = C27527 * C407;
    const double C425 = C27527 * C408;
    const double C995 = C27527 * C985;
    const double C999 = C27527 * C987;
    const double C1585 = C27527 * C1575;
    const double C1589 = C27527 * C1577;
    const double C10824 = C27527 * C2143;
    const double C11215 = C27527 * C2548;
    const double C11703 = C27527 * C3021;
    const double C11705 = C27527 * C3024;
    const double C26414 = C26410 + C26399;
    const double C26863 = C26378 + C26861;
    const double C12829 =
        (2 * C26456 * C26801 + C26456 * (C26801 + C26946 * C26583)) / C26121;
    const double C26970 = C26378 + C26968;
    const double C26413 = C26409 + C26395;
    const double C26872 = C26870 + C26377;
    const double C12828 = (-2 * C26456 * C26811) / C26137 -
                          (C26456 * (C26952 * C26583 + C26811)) / C26137;
    const double C26985 = C26983 + C26377;
    const double C26412 = C26408 * C26359;
    const double C26450 = C26448 + C26438;
    const double C26714 = C26426 * C26711;
    const double C4243 = (-2 * C26456 * C26440) / C26137 -
                         (C26456 * (C26711 * C26583 + C26440)) / C26137;
    const double C26885 = C26879 + C26395;
    const double C26994 = C26992 + C26438;
    const double C26480 = C26478 + C26468;
    const double C26818 = C26426 * C26720;
    const double C26843 = C26456 * C26720;
    const double C2399 = (-2 * C26426 * C26470) / C26137 -
                         (C26426 * (C26720 * C26516 + C26470)) / C26137;
    const double C2799 = -(C26456 * (C26720 * C26516 + C26470) +
                           (C26373 + C26396 * C26516) * ce) /
                         C26137;
    const double C26903 = C26901 + C26468;
    const double C26959 = C26456 * C26956;
    const double C27007 = C27001 + C26395;
    const double C26509 = C26497 + C26507;
    const double C26715 = C26426 * C26713;
    const double C4323 =
        (2 * C26456 * C26499 + C26456 * (C26499 + C26713 * C26583)) / C26121;
    const double C26888 = C26882 + C26399;
    const double C26979 = C26497 + C26978;
    const double C26526 = C26525 * C26359;
    const double C26564 = C26552 + C26562;
    const double C26819 = C26426 * C26727;
    const double C26845 = C26456 * C26727;
    const double C2547 =
        (2 * C26426 * C26554 + C26426 * (C26554 + C26727 * C26516)) / C26121;
    const double C3023 = (C26456 * (C26554 + C26727 * C26516) +
                          (C26373 + C26396 * C26516) * ae) /
                         C26121;
    const double C26912 = C26552 + C26910;
    const double C26960 = C26456 * C26958;
    const double C27010 = C27004 + C26399;
    const double C26593 = C26592 * C26359;
    const double C26400 = -C26391;
    const double C12343 = C27525 * C3736;
    const double C2440 =
        2 * ((-(C26426 * C26496) / C26137) / C26121 - (ae * C26364) / C26351) -
        (ae * (C26377 * C26516 + C26364)) / C26351 +
        C26426 *
            ((-(ae * C26426 * C26377) / C26137) / C26121 - C26496 / C26351 +
             C26426 * ((-(C26426 * C26503) / C26137) / C26121 - C26392));
    const double C4436 =
        2 * ((-(C26456 * C26551) / C26137) / C26121 - (ae * C26364) / C26351) -
        (ae * (C26377 * C26583 + C26364)) / C26351 +
        C26456 *
            ((-(ae * C26456 * C26377) / C26137) / C26121 - C26551 / C26351 +
             C26456 * ((-(C26456 * C26558) / C26137) / C26121 - C26392));
    const double C12344 = C9186 * C3734;
    const double C12674 = C404 * C3734;
    const double C20940 = C233 * C3734;
    const double C93 = 3 * (C26357 + C26367 * C26358) +
                       C26350 * (2 * C26373 + C26350 * C26404);
    const double C602 = C26426 * (2 * C26373 + C26350 * C26404);
    const double C1192 = C26456 * (2 * C26373 + C26350 * C26404);
    const double C1786 = C26357 + C26367 * C26358 + C26404 * C26516;
    const double C3192 = C26357 + C26367 * C26358 + C26404 * C26583;
    const double C5523 = C26456 * C26426 * C26404;
    const double C3731 = C26426 * C26373 + C26712 * C26583;
    const double C10971 = 3 * (C26357 + C26367 * C26516) +
                          C26426 * (2 * C26705 + C26426 * C26887);
    const double C11349 = C26456 * (2 * C26705 + C26426 * C26887);
    const double C12337 = C26357 + C26367 * C26516 + C26887 * C26583;
    const double C21243 = 3 * (C26357 + C26367 * C26583) +
                          C26456 * (2 * C26838 + C26456 * C27009);
    const double C4472 =
        2 * ((-(C26456 * C26576) / C26137) / C26121 - (ae * C26432) / C26351) -
        (ae * (C26438 * C26583 + C26432)) / C26351 +
        C26456 *
            ((-(ae * C26456 * C26438) / C26137) / C26121 - C26576 / C26351 +
             C26456 * ((-(C26456 * C26579) / C26137) / C26121 - C26445));
    const double C3434 = C233 * C3253;
    const double C3616 = C404 * C3253;
    const double C20339 = C9186 * C3253;
    const double C2512 =
        2 * ((-(C26426 * C26535) / C26137) / C26121 - (ae * C26462) / C26351) -
        (ae * (C26468 * C26516 + C26462)) / C26351 +
        C26426 *
            ((-(ae * C26426 * C26468) / C26137) / C26121 - C26535 / C26351 +
             C26426 * ((-(C26426 * C26538) / C26137) / C26121 - C26475));
    const double C2090 = C233 * C1906;
    const double C2272 = C404 * C1906;
    const double C10610 = C9186 * C1906;
    const double C2969 =
        (-(C26456 * C26535) / C26137) / C26121 - (C26491 * ce) / C26351 -
        (ae * (C26456 * C26426 * C26468 + C26705 * ce)) / C26351 +
        C26426 * (C26426 * ((-(C26456 * C26538) / C26137) / C26121 - C26504) -
                  (ae * (C26456 * C26468 + C26372)) / C26351);
    const double C4003 =
        C26426 *
            ((-(C26456 * C26497 * ce) / C26137) / C26121 - C26535 / C26351 +
             C26456 * ((-(C26456 * C26538) / C26137) / C26121 - C26504)) -
        (ae * (C26456 * (C26456 * C26468 + C26372) + C26462 +
               C26456 * C26367 * ce)) /
            C26351;
    const double C4397 =
        2 * ((-(C26456 * C26535) / C26137) / C26121 - (C26491 * ce) / C26351) -
        ((C26491 + C26497 * C26583) * ce) / C26351 +
        C26456 *
            ((-(C26456 * C26497 * ce) / C26137) / C26121 - C26535 / C26351 +
             C26456 * ((-(C26456 * C26538) / C26137) / C26121 - C26504));
    const double C26883 = -C26877;
    const double C3375 = C27526 * C3368;
    const double C2585 =
        2 * ((-(C26426 * C26576) / C26137) / C26121 - (C26546 * ce) / C26351) -
        ((C26546 + C26552 * C26516) * ce) / C26351 +
        C26426 *
            ((-(C26426 * C26552 * ce) / C26137) / C26121 - C26576 / C26351 +
             C26426 * ((-(C26426 * C26579) / C26137) / C26121 - C26559));
    const double C27005 = -C26999;
    const double C2151 = C27527 * C2144;
    const double C9589 = C27525 * C671;
    const double C18578 = C27525 * C1259;
    const double C10551 = C27525 * C1852;
    const double C11423 = C27525 * C2743;
    const double C20342 = C27525 * C3255;
    const double C26449 = C26447 / C26137;
    const double C26862 = C26859 / C26137;
    const double C11025 = C27525 * C2364;
    const double C11425 = C27525 * C2746;
    const double C12403 = C27525 * C3792;
    const double C21294 = C27525 * C4246;
    const double C256 = C27526 * C242;
    const double C795 = C27526 * C788;
    const double C1385 = C27526 * C1378;
    const double C19937 = C27526 * C2859;
    const double C20460 = C27526 * C3370;
    const double C26508 = C26506 / C26137;
    const double C26871 = C26869 / C26137;
    const double C12938 =
        (((-2 * C26456 * C26377) / C26137 -
          (C26456 * (C26402 * C26583 + C26377)) / C26137) *
         ae) /
            C26121 +
        C26426 * ((-2 * C26921) / C26351 +
                  C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26492 * C26583) /
                             C26137) /
                                C26121 -
                            C26503 / C26351));
    const double C21370 =
        3 * ((-(C26503 * C26583) / C26137) / C26121 - C26496 / C26351) +
        C26456 * ((-2 * C26921) / C26351 +
                  C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26492 * C26583) /
                             C26137) /
                                C26121 -
                            C26503 / C26351));
    const double C19941 = C27526 * C2862;
    const double C20941 = C27526 * C3900;
    const double C21375 = C27526 * C4326;
    const double C9650 = C27525 * C729;
    const double C18642 = C27525 * C1319;
    const double C10607 = C27525 * C1908;
    const double C11484 = C27525 * C2801;
    const double C20399 = C27525 * C3314;
    const double C26479 = C26477 / C26137;
    const double C12902 =
        2 * ((-(C26456 * C26945) / C26137) / C26121 - (C26801 * ce) / C26351) -
        ((C26801 + C26946 * C26583) * ce) / C26351 +
        C26456 *
            ((-(C26456 * C26946 * ce) / C26137) / C26121 - C26945 / C26351 +
             C26456 *
                 ((-(C26456 * C26426 * std::pow(C26348, 6) * bs[6] * C26463) /
                   C26137) /
                      C26121 -
                  (C26946 * ce) / C26351));
    const double C26969 = C26967 / C26137;
    const double C11065 = C27525 * C2402;
    const double C11489 = C27525 * C2804;
    const double C12463 = C27525 * C3846;
    const double C21334 = C27525 * C4288;
    const double C364 = C27526 * C353;
    const double C927 = C27526 * C921;
    const double C1516 = C27526 * C1508;
    const double C20063 = C27526 * C2967;
    const double C20574 = C27526 * C3487;
    const double C2511 =
        2 * ((-(C26426 * C26719) / C26137) / C26121 - (ae * C26470) / C26351) -
        (ae * (C26720 * C26516 + C26470)) / C26351 +
        C26426 *
            ((-(ae * C26426 * C26720) / C26137) / C26121 - C26719 / C26351 +
             C26426 *
                 ((-(C26426 * C26350 * std::pow(C26348, 6) * bs[6] * C26532) /
                   C26137) /
                      C26121 -
                  (ae * C26720) / C26351));
    const double C2968 = C26426 * ((-(C26456 * C26719) / C26137) / C26121 -
                                   (C26499 * ce) / C26351) -
                         (ae * (C26456 * C26470 + C26373 * ce)) / C26351;
    const double C2970 =
        (-(C26456 * C26719) / C26137) / C26121 - (C26499 * ce) / C26351 -
        (ae * (C26456 * C26426 * C26720 + C26712 * ce)) / C26351 +
        C26426 *
            (C26426 *
                 ((-(C26456 * C26350 * std::pow(C26348, 6) * bs[6] * C26532) /
                   C26137) /
                      C26121 -
                  (C26713 * ce) / C26351) -
             (ae * (C26456 * C26720 + C26403)) / C26351);
    const double C3488 = (-(C26456 * C26499 * ce) / C26137) / C26121 -
                         (C26350 * C26535) / C26351 +
                         C26456 * ((-(C26456 * C26719) / C26137) / C26121 -
                                   (C26499 * ce) / C26351);
    const double C4004 =
        C26426 *
            ((-(C26456 * C26713 * ce) / C26137) / C26121 - C26719 / C26351 +
             C26456 *
                 ((-(C26456 * C26350 * std::pow(C26348, 6) * bs[6] * C26532) /
                   C26137) /
                      C26121 -
                  (C26713 * ce) / C26351)) -
        (ae * (C26456 * (C26456 * C26720 + C26403) + C26470 +
               C26456 * C26396 * ce)) /
            C26351;
    const double C4398 =
        2 * ((-(C26456 * C26719) / C26137) / C26121 - (C26499 * ce) / C26351) -
        ((C26499 + C26713 * C26583) * ce) / C26351 +
        C26456 *
            ((-(C26456 * C26713 * ce) / C26137) / C26121 - C26719 / C26351 +
             C26456 *
                 ((-(C26456 * C26350 * std::pow(C26348, 6) * bs[6] * C26532) /
                   C26137) /
                      C26121 -
                  (C26713 * ce) / C26351));
    const double C26902 = C26900 / C26137;
    const double C26926 = C26925 / C26137;
    const double C931 = C27526 * C923;
    const double C1521 = C27526 * C1509;
    const double C2091 = C27526 * C2086;
    const double C427 = C27527 * C413;
    const double C997 = C27527 * C990;
    const double C1587 = C27527 * C1580;
    const double C10822 = C27527 * C2146;
    const double C11701 = C27527 * C3025;
    const double C26563 = C26561 / C26137;
    const double C13044 =
        2 * ((-(C26456 * C26951) / C26137) / C26121 - (ae * C26811) / C26351) -
        (ae * (C26952 * C26583 + C26811)) / C26351 +
        C26456 *
            ((-(ae * C26456 * C26952) / C26137) / C26121 - C26951 / C26351 +
             C26456 *
                 ((-(C26456 * C26426 * std::pow(C26348, 6) * bs[6] * C26547) /
                   C26137) /
                      C26121 -
                  (ae * C26952) / C26351));
    const double C26984 = C26982 / C26137;
    const double C11217 = C27527 * C2550;
    const double C11707 = C27527 * C3028;
    const double C12675 = C27527 * C4058;
    const double C481 = C27527 * C470;
    const double C1064 = C27527 * C1056;
    const double C1652 = C27527 * C1645;
    const double C10881 = C27527 * C2205;
    const double C11768 = C27527 * C3079;
    const double C2586 =
        2 * ((-(C26426 * C26726) / C26137) / C26121 - (C26554 * ce) / C26351) -
        ((C26554 + C26727 * C26516) * ce) / C26351 +
        C26426 *
            ((-(C26426 * C26727 * ce) / C26137) / C26121 - C26726 / C26351 +
             C26426 *
                 ((-(C26426 * C26350 * std::pow(C26348, 6) * bs[6] * C26573) /
                   C26137) /
                      C26121 -
                  (C26727 * ce) / C26351));
    const double C3081 = C26456 * ((-(C26426 * C26726) / C26137) / C26121 -
                                   (C26554 * ce) / C26351) -
                         (ae * (C26426 * C26440 + C26373 * ce)) / C26351;
    const double C3612 = (-(ae * C26456 * C26440) / C26137) / C26121 -
                         (C26350 * C26576) / C26351 +
                         C26456 * ((-(C26456 * C26726) / C26137) / C26121 -
                                   (ae * C26440) / C26351);
    const double C4471 =
        2 * ((-(C26456 * C26726) / C26137) / C26121 - (ae * C26440) / C26351) -
        (ae * (C26711 * C26583 + C26440)) / C26351 +
        C26456 *
            ((-(ae * C26456 * C26711) / C26137) / C26121 - C26726 / C26351 +
             C26456 *
                 ((-(C26456 * C26350 * std::pow(C26348, 6) * bs[6] * C26573) /
                   C26137) /
                      C26121 -
                  (ae * C26711) / C26351));
    const double C26911 = C26909 / C26137;
    const double C26993 = C26991 / C26137;
    const double C1069 = C27527 * C1057;
    const double C1655 = C27527 * C1646;
    const double C2215 = C27527 * C2206;
    const double C9525 = C9514 + C9515;
    const double C9524 = C9512 + C9513;
    const double C9592 = C9586 + C9587;
    const double C9654 = C9646 + C9647;
    const double C18513 = C18502 + C18503;
    const double C18512 = C18500 + C18501;
    const double C18583 = C18575 + C18576;
    const double C18645 = C18639 + C18640;
    const double C26156 = C26145 - C26153;
    const double C26155 = C26135 * C26151;
    const double C598 =
        ((-C26151 / C26137) / C26142 - (0 * de) / C26137) / C26142 -
        (0 * de) / C26137;
    const double C2314 = -C26151 / C26137;
    const double C5041 = (-C26151 / C26137) / C26142 - (0 * de) / C26137;
    const double C27506 = C27484 / C26141;
    const double C27486 = C27286 / C26137;
    const double C5035 = -C27505;
    const double C26227 = C26190 * C26212;
    const double C1847 =
        ((-C26209 / C26137) / C26142 -
         ((C27321 - (C26190 * C26212) / C26137) * de) / C26137) /
            C26142 -
        ((C26190 * ((-C26212 / C26137) / C26142 - (0 * de) / C26137) + C27335) *
         de) /
            C26137;
    const double C1848 =
        ((-C26212 / C26137) / C26142 - (0 * de) / C26137) / C26142 -
        (0 * de) / C26137;
    const double C4618 = (-C26212 / C26137) / C26142 - (0 * de) / C26137;
    const double C26237 = C26234 - C26230;
    const double C27511 = C27495 / C26141;
    const double C27497 = C27338 / C26137;
    const double C4562 = -C27510;
    const double C26272 = C26197 * C26259;
    const double C3309 =
        ((-C26256 / C26137) / C26142 -
         ((C27347 - (C26197 * C26259) / C26137) * de) / C26137) /
            C26142 -
        ((C26197 * ((-C26259 / C26137) / C26142 - (0 * de) / C26137) + C27359) *
         de) /
            C26137;
    const double C3310 =
        ((-C26259 / C26137) / C26142 - (0 * de) / C26137) / C26142 -
        (0 * de) / C26137;
    const double C6260 = (-C26259 / C26137) / C26142 - (0 * de) / C26137;
    const double C26282 = C26279 - C26275;
    const double C27514 = C27500 / C26141;
    const double C27502 = C27362 / C26137;
    const double C6157 = -C27513;
    const double C258 = C247 + C248;
    const double C257 = C245 + C246;
    const double C311 = C303 + C304;
    const double C365 = C357 + C358;
    const double C18707 = C18700 + C18701;
    const double C18706 = C18698 + C18699;
    const double C18763 = C18761 + C18762;
    const double C18817 = C18815 + C18816;
    const double C429 = C418 + C419;
    const double C428 = C416 + C417;
    const double C482 = C474 + C475;
    const double C536 = C528 + C529;
    const double C9869 = C9862 + C9863;
    const double C9868 = C9860 + C9861;
    const double C9924 = C9922 + C9923;
    const double C9978 = C9976 + C9977;
    const double C9526 = C9516 + C9517;
    const double C18514 = C18504 + C18505;
    const double C10494 = C10488 + C10489;
    const double C11363 = C11356 + C11357;
    const double C20282 = C20276 + C20277;
    const double C100 = (2 * (C26350 * C26365 + C26357 * ae) +
                         C26350 * (C26365 + C26350 * C26384 + C26373 * ae) +
                         (C26357 + C26367 * C26358) * ae) /
                        C26121;
    const double C604 =
        (C26426 * (C26365 + C26350 * C26384 + C26373 * ae)) / C26121;
    const double C1194 =
        (C26456 * (C26365 + C26350 * C26384 + C26373 * ae)) / C26121;
    const double C1788 =
        (C26350 * C26365 + C26357 * ae + C26384 * C26516) / C26121;
    const double C2678 = (C26456 * C26426 * C26384) / C26121;
    const double C3194 =
        (C26350 * C26365 + C26357 * ae + C26384 * C26583) / C26121;
    const double C2438 = (2 * (C26426 * C26491 + C26357 * ae) +
                          C26426 * (C26491 + C26426 * C26708 + C26705 * ae) +
                          (C26357 + C26367 * C26516) * ae) /
                         C26121;
    const double C2858 =
        (C26456 * (C26491 + C26426 * C26708 + C26705 * ae)) / C26121;
    const double C3898 =
        (C26426 * C26491 + C26357 * ae + C26708 * C26583) / C26121;
    const double C4434 = (2 * (C26456 * C26546 + C26357 * ae) +
                          C26456 * (C26546 + C26456 * C26841 + C26838 * ae) +
                          (C26357 + C26367 * C26583) * ae) /
                         C26121;
    const double C2032 = C233 * C1850;
    const double C2214 = C404 * C1850;
    const double C10552 = C9186 * C1850;
    const double C1969 = C27526 * C1962;
    const double C5808 = C233 * C2740;
    const double C6030 = C404 * C2740;
    const double C14186 = C9186 * C2740;
    const double C5882 = C233 * C2798;
    const double C6104 = C404 * C2798;
    const double C14258 = C9186 * C2798;
    const double C5733 = C27526 * C2856;
    const double C5955 = C27527 * C3022;
    const double C3496 = C233 * C3312;
    const double C3678 = C404 * C3312;
    const double C20400 = C9186 * C3312;
    const double C3557 = C27527 * C3550;
    const double C1968 = C233 * C1785;
    const double C2150 = C404 * C1785;
    const double C10484 = C9186 * C1785;
    const double C5732 = C233 * C2674;
    const double C5954 = C404 * C2674;
    const double C14110 = C9186 * C2674;
    const double C3374 = C233 * C3191;
    const double C3556 = C404 * C3191;
    const double C20272 = C9186 * C3191;
    const double C101 =
        (-2 * (C26350 * C26364 + C26357 * ce)) / C26137 -
        (C26350 * (C26350 * C26383 + C26364 + C26373 * ce)) / C26137 -
        ((C26357 + C26367 * C26358) * ce) / C26137;
    const double C608 =
        -(C26426 * (C26350 * C26383 + C26364 + C26373 * ce)) / C26137;
    const double C1198 =
        -(C26456 * (C26350 * C26383 + C26364 + C26373 * ce)) / C26137;
    const double C1790 =
        -(C26383 * C26516 + C26350 * C26364 + C26357 * ce) / C26137;
    const double C2680 = -(C26456 * C26426 * C26383) / C26137;
    const double C3196 =
        -(C26383 * C26583 + C26350 * C26364 + C26357 * ce) / C26137;
    const double C3080 =
        C26456 *
            ((-(C26426 * C26552 * ce) / C26137) / C26121 - C26576 / C26351 +
             C26426 * ((-(C26426 * C26579) / C26137) / C26121 - C26559)) -
        (ae * (C26426 * C26707 + C26432 + C26705 * ce)) / C26351;
    const double C4109 =
        (-(C26426 * C26576) / C26137) / C26121 - (C26546 * ce) / C26351 -
        (ae * C26456 * C26707) / C26351 +
        C26456 * (C26456 * ((-(C26426 * C26579) / C26137) / C26121 - C26559) -
                  (ae * C26707) / C26351);
    const double C2362 =
        (-2 * (C26426 * C26432 + C26357 * ce)) / C26137 -
        (C26426 * (C26426 * C26707 + C26432 + C26705 * ce)) / C26137 -
        ((C26357 + C26367 * C26516) * ce) / C26137;
    const double C2742 =
        -(C26456 * (C26426 * C26707 + C26432 + C26705 * ce)) / C26137;
    const double C3790 =
        -(C26707 * C26583 + C26426 * C26432 + C26357 * ce) / C26137;
    const double C4286 =
        (-2 * (C26456 * C26462 + C26357 * ce)) / C26137 -
        (C26456 * (C26456 * C26840 + C26462 + C26838 * ce)) / C26137 -
        ((C26357 + C26367 * C26583) * ce) / C26137;
    const double C107 =
        2 * ((-(C26365 * ce) / C26137) / C26121 - (ae * C26364) / C26351 -
             (C26350 * C26382) / C26351) -
        (ae * (C26350 * C26383 + C26364 + C26373 * ce)) / C26351 -
        ((C26365 + C26350 * C26384 + C26373 * ae) * ce) / C26351 +
        C26350 *
            ((-(ae * C26383) / C26137) / C26121 - C26382 / C26351 -
             (C26384 * ce) / C26351 +
             C26350 *
                 ((-(C26378 * ce) / C26137) / C26121 - (ae * C26377) / C26351 -
                  (C26350 *
                   (C26368 * C26369 + C26358 * bs[5] * std::pow(C26354, 5)) *
                   C26359) /
                      C26351));
    const double C611 = (-(C26426 * C26365 * ce) / C26137) / C26121 -
                        (ae * C26426 * C26364) / C26351 -
                        (C26350 * C26426 * C26382) / C26351;
    const double C1201 = (-(C26456 * C26365 * ce) / C26137) / C26121 -
                         (ae * C26456 * C26364) / C26351 -
                         (C26350 * C26456 * C26382) / C26351;
    const double C1793 =
        (-(C26382 * C26516) / C26137) / C26121 -
        ((C26357 + C26358 * C26355 * C26361) * C26359) / C26351;
    const double C2685 = (-(C26456 * C26426 * C26382) / C26137) / C26121;
    const double C3199 =
        (-(C26382 * C26583) / C26137) / C26121 -
        ((C26357 + C26358 * C26355 * C26361) * C26359) / C26351;
    const double C299 =
        (-2 * C26350 * C26521) / C26351 +
        C26350 * ((-((C26388 + C26516 * C26389 * C26390) * C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26521 / C26351);
    const double C854 = (-(C26350 * C26491 * ce) / C26137) / C26121 -
                        (ae * C26350 * C26432) / C26351 -
                        (C26426 * C26350 * C26521) / C26351;
    const double C1443 = (-(C26456 * C26350 * C26521) / C26137) / C26121;
    const double C2023 =
        (-(ae * (C26426 * C26432 + C26357 * ce)) / C26137) / C26121 -
        ((C26357 + C26516 * C26355 * C26361) * C26359) / C26351 -
        ((C26426 * C26491 + C26357 * ae) * ce) / C26351 +
        C26426 * ((-(C26491 * ce) / C26137) / C26121 - (ae * C26432) / C26351 -
                  (C26426 * C26521) / C26351);
    const double C2913 = (-(C26456 * C26491 * ce) / C26137) / C26121 -
                         (ae * C26456 * C26432) / C26351 -
                         (C26426 * C26456 * C26521) / C26351;
    const double C3429 =
        (-(C26521 * C26583) / C26137) / C26121 -
        ((C26357 + C26516 * C26355 * C26361) * C26359) / C26351;
    const double C524 =
        (-2 * C26350 * C26588) / C26351 +
        C26350 * ((-((C26388 + C26583 * C26389 * C26390) * C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26588 / C26351);
    const double C1123 = (-(C26426 * C26350 * C26588) / C26137) / C26121;
    const double C1710 = (-(C26350 * C26546 * ce) / C26137) / C26121 -
                         (ae * C26350 * C26462) / C26351 -
                         (C26456 * C26350 * C26588) / C26351;
    const double C2267 =
        (-(C26588 * C26516) / C26137) / C26121 -
        ((C26357 + C26583 * C26355 * C26361) * C26359) / C26351;
    const double C3133 = (-(C26426 * C26546 * ce) / C26137) / C26121 -
                         (ae * C26426 * C26462) / C26351 -
                         (C26456 * C26426 * C26588) / C26351;
    const double C3669 =
        (-(ae * (C26456 * C26462 + C26357 * ce)) / C26137) / C26121 -
        ((C26357 + C26583 * C26355 * C26361) * C26359) / C26351 -
        ((C26456 * C26546 + C26357 * ae) * ce) / C26351 +
        C26456 * ((-(C26546 * ce) / C26137) / C26121 - (ae * C26462) / C26351 -
                  (C26456 * C26588) / C26351);
    const double C12462 = C9186 * C3844;
    const double C12790 = C404 * C3844;
    const double C21057 = C233 * C3844;
    const double C12673 = C27527 * C4056;
    const double C12342 = C9186 * C3732;
    const double C12672 = C404 * C3732;
    const double C20938 = C233 * C3732;
    const double C10984 = C10980 + C10981;
    const double C11364 = C11358 + C11359;
    const double C21252 = C21248 + C21249;
    const double C312 = C305 + C306;
    const double C483 = C476 + C477;
    const double C366 = C359 + C360;
    const double C537 = C530 + C531;
    const double C260 = C251 + C252;
    const double C259 = C249 + C250;
    const double C261 = C253 + C254;
    const double C800 = C792 + C793;
    const double C802 = C796 + C797;
    const double C1390 = C1382 + C1383;
    const double C1392 = C1386 + C1387;
    const double C19942 = C19934 + C19935;
    const double C20465 = C20461 + C20462;
    const double C21376 = C21372 + C21373;
    const double C431 = C422 + C423;
    const double C430 = C420 + C421;
    const double C432 = C424 + C425;
    const double C1002 = C994 + C995;
    const double C1004 = C998 + C999;
    const double C1592 = C1584 + C1585;
    const double C1594 = C1588 + C1589;
    const double C10827 = C10823 + C10824;
    const double C11218 = C11214 + C11215;
    const double C11709 = C11702 + C11703;
    const double C11710 = C11704 + C11705;
    const double C26417 = C26350 * C26414;
    const double C26799 = C26426 * C26414;
    const double C2319 =
        (2 * C26426 * C26384 + C26426 * (C26384 + C26414 * C26516)) / C26121;
    const double C2683 = (C26456 * (C26384 + C26414 * C26516)) / C26121;
    const double C4205 =
        (2 * C26456 * C26384 + C26456 * (C26384 + C26414 * C26583)) / C26121;
    const double C11478 =
        C26456 * ((-2 * C26426 * C26474) / C26351 +
                  C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26463 * C26516) /
                             C26137) /
                                C26121 -
                            C26474 / C26351)) -
        ((2 * C26801 + C26426 * C26863) * ce) / C26351;
    const double C12455 =
        (-(C26474 * C26516) / C26137) / C26121 - C26467 / C26351 -
        (C26456 * C26863 * ce) / C26351 +
        C26456 * (C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26463 * C26516) /
                             C26137) /
                                C26121 -
                            C26474 / C26351) -
                  (C26863 * ce) / C26351);
    const double C10973 = (3 * (C26365 + C26378 * C26516) +
                           C26426 * (2 * C26801 + C26426 * C26863)) /
                          C26121;
    const double C11351 = (C26456 * (2 * C26801 + C26426 * C26863)) / C26121;
    const double C12339 = (C26365 + C26378 * C26516 + C26863 * C26583) / C26121;
    const double C21245 = (3 * (C26365 + C26378 * C26583) +
                           C26456 * (2 * C26966 + C26456 * C26970)) /
                          C26121;
    const double C26416 = C26350 * C26413;
    const double C26809 = C26426 * C26413;
    const double C2317 = (-2 * C26426 * C26383) / C26137 -
                         (C26426 * (C26413 * C26516 + C26383)) / C26137;
    const double C2681 = -(C26456 * (C26413 * C26516 + C26383)) / C26137;
    const double C4203 = (-2 * C26456 * C26383) / C26137 -
                         (C26456 * (C26413 * C26583 + C26383)) / C26137;
    const double C11544 =
        2 * ((-(C26426 * C26921) / C26137) / C26121 -
             (ae * C26456 * C26377) / C26351) -
        (ae * C26456 * C26872) / C26351 +
        C26426 *
            ((-(ae * C26456 * C26426 * C26402) / C26137) / C26121 -
             C26921 / C26351 +
             C26426 *
                 ((-(C26426 * C26456 * std::pow(C26348, 6) * bs[6] * C26492) /
                   C26137) /
                      C26121 -
                  (ae * C26456 * C26402) / C26351));
    const double C11698 =
        (((-2 * C26811) / C26137 - (C26426 * C26872) / C26137) * ae) / C26121 +
        C26456 * ((-2 * C26426 * C26558) / C26351 +
                  C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26547 * C26516) /
                             C26137) /
                                C26121 -
                            C26558 / C26351));
    const double C12670 =
        (-(C26558 * C26516) / C26137) / C26121 - C26551 / C26351 -
        (ae * C26456 * C26872) / C26351 +
        C26456 * (C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26547 * C26516) /
                             C26137) /
                                C26121 -
                            C26558 / C26351) -
                  (ae * C26872) / C26351);
    const double C10972 =
        (-3 * (C26377 * C26516 + C26364)) / C26137 +
        C26426 * ((-2 * C26811) / C26137 - (C26426 * C26872) / C26137);
    const double C11350 =
        C26456 * ((-2 * C26811) / C26137 - (C26426 * C26872) / C26137);
    const double C12338 =
        -(C26872 * C26583 + C26377 * C26516 + C26364) / C26137;
    const double C21244 =
        (-3 * (C26377 * C26583 + C26364)) / C26137 +
        C26456 * ((-2 * C26981) / C26137 - (C26456 * C26985) / C26137);
    const double C26415 = C26350 * C26412;
    const double C26598 = C26426 * C26412;
    const double C26635 = C26456 * C26412;
    const double C613 = (-(ae * C26426 * C26383) / C26137) / C26121 -
                        (C26426 * C26382) / C26351 -
                        (C26426 * C26384 * ce) / C26351 +
                        C26350 * ((-(C26426 * C26378 * ce) / C26137) / C26121 -
                                  (ae * C26426 * C26377) / C26351 -
                                  (C26350 * C26426 * C26412) / C26351);
    const double C1203 = (-(ae * C26456 * C26383) / C26137) / C26121 -
                         (C26456 * C26382) / C26351 -
                         (C26456 * C26384 * ce) / C26351 +
                         C26350 * ((-(C26456 * C26378 * ce) / C26137) / C26121 -
                                   (ae * C26456 * C26377) / C26351 -
                                   (C26350 * C26456 * C26412) / C26351);
    const double C1794 =
        (-((C26365 + C26378 * C26516) * ce) / C26137) / C26121 -
        (ae * (C26377 * C26516 + C26364)) / C26351 +
        C26350 * ((-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351);
    const double C1795 =
        (-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351 -
        (ae * (C26413 * C26516 + C26383)) / C26351 -
        ((C26384 + C26414 * C26516) * ce) / C26351 +
        C26350 *
            ((-((C26378 + C26405 * C26516) * ce) / C26137) / C26121 -
             (ae * (C26402 * C26516 + C26377)) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C2322 =
        (-2 * C26426 * C26382) / C26351 +
        C26426 * ((-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351);
    const double C2687 =
        (-(C26456 * (C26378 + C26405 * C26516) * ce) / C26137) / C26121 -
        (ae * C26456 * (C26402 * C26516 + C26377)) / C26351 +
        C26350 * C26456 *
            ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                C26359 * C26516) /
              C26137) /
                 C26121 -
             C26412 / C26351);
    const double C2688 =
        C26456 * ((-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351);
    const double C3200 =
        (-((C26365 + C26378 * C26583) * ce) / C26137) / C26121 -
        (ae * (C26377 * C26583 + C26364)) / C26351 +
        C26350 * ((-(C26412 * C26583) / C26137) / C26121 - C26382 / C26351);
    const double C3201 =
        (-(C26412 * C26583) / C26137) / C26121 - C26382 / C26351 -
        (ae * (C26413 * C26583 + C26383)) / C26351 -
        ((C26384 + C26414 * C26583) * ce) / C26351 +
        C26350 *
            ((-((C26378 + C26405 * C26583) * ce) / C26137) / C26121 -
             (ae * (C26402 * C26583 + C26377)) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C4208 =
        (-2 * C26456 * C26382) / C26351 +
        C26456 * ((-(C26412 * C26583) / C26137) / C26121 - C26382 / C26351);
    const double C12340 =
        (-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351 +
        ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) * C26359 *
            C26516) /
          C26137) /
             C26121 -
         C26412 / C26351) *
            C26583;
    const double C1648 =
        (((-2 * C26440) / C26137 - (C26350 * C26450) / C26137) * ae) / C26121 +
        C26456 * ((-2 * C26350 * C26579) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351));
    const double C3613 =
        (-(C26579 * C26358) / C26137) / C26121 - C26576 / C26351 -
        (ae * C26456 * C26450) / C26351 +
        C26456 * (C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351) -
                  (ae * C26450) / C26351);
    const double C148 =
        (-3 * (C26438 * C26358 + C26432)) / C26137 +
        C26350 * ((-2 * C26440) / C26137 - (C26350 * C26450) / C26137);
    const double C670 =
        C26426 * ((-2 * C26440) / C26137 - (C26350 * C26450) / C26137) -
        ((2 * C26373 + C26350 * C26404) * ce) / C26137;
    const double C1258 =
        C26456 * ((-2 * C26440) / C26137 - (C26350 * C26450) / C26137);
    const double C1851 = -(C26426 * (C26426 * C26450 + C26404 * ce) +
                           C26438 * C26358 + C26432 + C26426 * C26404 * ce) /
                         C26137;
    const double C3254 = -(C26450 * C26583 + C26438 * C26358 + C26432) / C26137;
    const double C5593 = -(C26456 * (C26426 * C26450 + C26404 * ce)) / C26137;
    const double C26716 = C26714 + C26403;
    const double C26891 = C26426 * C26885;
    const double C12865 = (-2 * C26456 * C26707) / C26137 -
                          (C26456 * (C26885 * C26583 + C26707)) / C26137;
    const double C21289 =
        (-3 * (C26438 * C26583 + C26432)) / C26137 +
        C26456 * ((-2 * C26990) / C26137 - (C26456 * C26994) / C26137);
    const double C924 =
        (((-2 * C26470) / C26137 - (C26350 * C26480) / C26137) * ae) / C26121 +
        C26426 * ((-2 * C26350 * C26538) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351));
    const double C2087 =
        (-(C26538 * C26358) / C26137) / C26121 - C26535 / C26351 -
        (ae * C26426 * C26480) / C26351 +
        C26426 * (C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351) -
                  (ae * C26480) / C26351);
    const double C193 =
        (-3 * (C26468 * C26358 + C26462)) / C26137 +
        C26350 * ((-2 * C26470) / C26137 - (C26350 * C26480) / C26137);
    const double C728 =
        C26426 * ((-2 * C26470) / C26137 - (C26350 * C26480) / C26137);
    const double C1318 =
        C26456 * ((-2 * C26470) / C26137 - (C26350 * C26480) / C26137) -
        ((2 * C26373 + C26350 * C26404) * ce) / C26137;
    const double C1907 = -(C26480 * C26516 + C26468 * C26358 + C26462) / C26137;
    const double C3313 = -(C26456 * (C26456 * C26480 + C26404 * ce) +
                           C26468 * C26358 + C26462 + C26456 * C26404 * ce) /
                         C26137;
    const double C5661 =
        -(C26456 * C26426 * C26480 + C26426 * C26404 * ce) / C26137;
    const double C3843 = -(C26456 * (C26456 * C26818 + C26712 * ce) +
                           C26426 * C26470 + C26456 * C26712 * ce) /
                         C26137;
    const double C26846 = C26843 + C26403;
    const double C11060 =
        (-3 * (C26468 * C26516 + C26462)) / C26137 +
        C26426 * ((-2 * C26815) / C26137 - (C26426 * C26903) / C26137);
    const double C11477 =
        C26456 * ((-2 * C26815) / C26137 - (C26426 * C26903) / C26137) -
        ((2 * C26705 + C26426 * C26887) * ce) / C26137;
    const double C12454 = -(C26456 * (C26456 * C26903 + C26887 * ce) +
                            C26468 * C26516 + C26462 + C26456 * C26887 * ce) /
                          C26137;
    const double C26961 = C26959 + C26886;
    const double C27013 = C26456 * C27007;
    const double C1510 =
        C26456 * ((-2 * C26350 * C26538) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351)) -
        ((2 * C26499 + C26350 * C26509) * ce) / C26351;
    const double C3489 =
        (-(C26538 * C26358) / C26137) / C26121 - C26535 / C26351 -
        (C26456 * C26509 * ce) / C26351 +
        C26456 * (C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351) -
                  (C26509 * ce) / C26351);
    const double C5877 =
        C26426 * (C26456 * ((-(std::pow(C26348, 6) * bs[6] * C26532 * C26358) /
                             C26137) /
                                C26121 -
                            C26538 / C26351) -
                  (C26509 * ce) / C26351) -
        (ae * (C26456 * C26480 + C26404 * ce)) / C26351;
    const double C238 = (3 * (C26491 + C26497 * C26358) +
                         C26350 * (2 * C26499 + C26350 * C26509)) /
                        C26121;
    const double C786 = (C26426 * (2 * C26499 + C26350 * C26509) +
                         (2 * C26373 + C26350 * C26404) * ae) /
                        C26121;
    const double C1376 = (C26456 * (2 * C26499 + C26350 * C26509)) / C26121;
    const double C1963 =
        (C26491 + C26497 * C26358 + C26426 * (C26426 * C26509 + C26404 * ae) +
         C26426 * C26404 * ae) /
        C26121;
    const double C3369 = (C26491 + C26497 * C26358 + C26509 * C26583) / C26121;
    const double C5729 = (C26456 * (C26426 * C26509 + C26404 * ae)) / C26121;
    const double C26717 = C26715 + C26406;
    const double C26892 = C26426 * C26888;
    const double C12937 =
        (2 * C26456 * C26708 + C26456 * (C26708 + C26888 * C26583)) / C26121;
    const double C21369 = (3 * (C26491 + C26497 * C26583) +
                           C26456 * (2 * C26977 + C26456 * C26979)) /
                          C26121;
    const double C26710 = C26350 * C26526;
    const double C26878 = C26426 * C26526;
    const double C26923 = C26456 * C26526;
    const double C300 =
        3 * ((-(C26526 * C26358) / C26137) / C26121 - C26521 / C26351) +
        C26350 *
            ((-2 * C26350 * C26526) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C855 =
        (-((C26491 + C26497 * C26358) * ce) / C26137) / C26121 -
        (ae * (C26438 * C26358 + C26432)) / C26351 +
        C26426 * ((-(C26526 * C26358) / C26137) / C26121 - C26521 / C26351);
    const double C856 =
        (((-2 * C26440) / C26137 - (C26350 * C26450) / C26137) * ae) / C26121 -
        ((2 * C26499 + C26350 * C26509) * ce) / C26351 +
        C26426 *
            ((-2 * C26350 * C26526) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C1444 =
        C26456 * ((-(C26526 * C26358) / C26137) / C26121 - C26521 / C26351);
    const double C1446 =
        C26456 *
        ((-2 * C26350 * C26526) / C26351 +
         C26350 * ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                      C26359 * C26358) /
                    C26137) /
                       C26121 -
                   C26526 / C26351));
    const double C2024 =
        (-(ae * (C26426 * C26440 + C26373 * ce)) / C26137) / C26121 -
        (C26350 * C26521) / C26351 -
        ((C26426 * C26499 + C26373 * ae) * ce) / C26351 +
        C26426 * ((-(C26499 * ce) / C26137) / C26121 - (ae * C26440) / C26351 -
                  (C26426 * C26350 * C26526) / C26351);
    const double C2025 =
        (-(C26526 * C26358) / C26137) / C26121 - C26521 / C26351 -
        (ae * (C26426 * C26450 + C26404 * ce)) / C26351 -
        ((C26426 * C26509 + C26404 * ae) * ce) / C26351 +
        C26426 *
            ((-(C26509 * ce) / C26137) / C26121 - (ae * C26450) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C2475 =
        2 * ((-(C26491 * ce) / C26137) / C26121 - (ae * C26432) / C26351 -
             (C26426 * C26521) / C26351) -
        (ae * (C26426 * C26707 + C26432 + C26705 * ce)) / C26351 -
        ((C26491 + C26426 * C26708 + C26705 * ae) * ce) / C26351 +
        C26426 * ((-(ae * C26707) / C26137) / C26121 - C26521 / C26351 -
                  (C26708 * ce) / C26351 +
                  C26426 * ((-C26501 / C26137) / C26121 - C26445 -
                            (C26426 * C26526) / C26351));
    const double C2914 = (-(ae * C26456 * C26707) / C26137) / C26121 -
                         (C26456 * C26521) / C26351 -
                         (C26456 * C26708 * ce) / C26351 +
                         C26426 * ((-(C26456 * C26497 * ce) / C26137) / C26121 -
                                   (ae * C26456 * C26438) / C26351 -
                                   (C26426 * C26456 * C26526) / C26351);
    const double C3431 =
        (-(C26526 * C26358) / C26137) / C26121 - C26521 / C26351 +
        ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) * C26359 *
            C26358) /
          C26137) /
             C26121 -
         C26526 / C26351) *
            C26583;
    const double C3951 =
        (-((C26491 + C26497 * C26583) * ce) / C26137) / C26121 -
        (ae * (C26438 * C26583 + C26432)) / C26351 +
        C26426 * ((-(C26526 * C26583) / C26137) / C26121 - C26521 / C26351);
    const double C4362 =
        (-2 * C26456 * C26521) / C26351 +
        C26456 * ((-(C26526 * C26583) / C26137) / C26121 - C26521 / C26351);
    const double C5803 =
        (-(C26456 * C26509 * ce) / C26137) / C26121 -
        (ae * C26456 * C26450) / C26351 +
        C26426 * C26456 *
            ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                C26359 * C26358) /
              C26137) /
                 C26121 -
             C26526 / C26351);
    const double C12567 =
        (-(C26526 * C26583) / C26137) / C26121 - C26521 / C26351 -
        (ae * (C26885 * C26583 + C26707)) / C26351 -
        ((C26708 + C26888 * C26583) * ce) / C26351 +
        C26426 *
            ((-((C26497 + C26505 * C26583) * ce) / C26137) / C26121 -
             (ae * (C26446 * C26583 + C26438)) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C1058 =
        C26426 * ((-2 * C26350 * C26579) / C26351 +
                  C26350 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351)) -
        ((2 * C26554 + C26350 * C26564) * ce) / C26351;
    const double C2207 =
        (-(C26579 * C26358) / C26137) / C26121 - C26576 / C26351 -
        (C26426 * C26564 * ce) / C26351 +
        C26426 * (C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351) -
                  (C26564 * ce) / C26351);
    const double C6025 =
        C26456 * (C26426 * ((-(std::pow(C26348, 6) * bs[6] * C26573 * C26358) /
                             C26137) /
                                C26121 -
                            C26579 / C26351) -
                  (C26564 * ce) / C26351) -
        (ae * (C26426 * C26450 + C26404 * ce)) / C26351;
    const double C409 = (3 * (C26546 + C26552 * C26358) +
                         C26350 * (2 * C26554 + C26350 * C26564)) /
                        C26121;
    const double C988 = (C26426 * (2 * C26554 + C26350 * C26564)) / C26121;
    const double C1578 = (C26456 * (2 * C26554 + C26350 * C26564) +
                          (2 * C26373 + C26350 * C26404) * ae) /
                         C26121;
    const double C2145 = (C26546 + C26552 * C26358 + C26564 * C26516) / C26121;
    const double C3551 =
        (C26546 + C26552 * C26358 + C26456 * (C26456 * C26564 + C26404 * ae) +
         C26456 * C26404 * ae) /
        C26121;
    const double C5951 =
        (C26456 * C26426 * C26564 + C26426 * C26404 * ae) / C26121;
    const double C4055 =
        (C26426 * C26554 + C26456 * (C26456 * C26819 + C26712 * ae) +
         C26456 * C26712 * ae) /
        C26121;
    const double C26847 = C26845 + C26406;
    const double C11207 = (3 * (C26546 + C26552 * C26516) +
                           C26426 * (2 * C26816 + C26426 * C26912)) /
                          C26121;
    const double C11697 = (C26456 * (2 * C26816 + C26426 * C26912) +
                           (2 * C26705 + C26426 * C26887) * ae) /
                          C26121;
    const double C12669 =
        (C26546 + C26552 * C26516 + C26456 * (C26456 * C26912 + C26887 * ae) +
         C26456 * C26887 * ae) /
        C26121;
    const double C26962 = C26960 + C26889;
    const double C27014 = C26456 * C27010;
    const double C26729 = C26350 * C26593;
    const double C26955 = C26426 * C26593;
    const double C27000 = C26456 * C26593;
    const double C525 =
        3 * ((-(C26593 * C26358) / C26137) / C26121 - C26588 / C26351) +
        C26350 *
            ((-2 * C26350 * C26593) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C1125 =
        C26426 * ((-(C26593 * C26358) / C26137) / C26121 - C26588 / C26351);
    const double C1126 =
        C26426 *
        ((-2 * C26350 * C26593) / C26351 +
         C26350 * ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                      C26359 * C26358) /
                    C26137) /
                       C26121 -
                   C26593 / C26351));
    const double C1711 =
        (-((C26546 + C26552 * C26358) * ce) / C26137) / C26121 -
        (ae * (C26468 * C26358 + C26462)) / C26351 +
        C26456 * ((-(C26593 * C26358) / C26137) / C26121 - C26588 / C26351);
    const double C1712 =
        (((-2 * C26470) / C26137 - (C26350 * C26480) / C26137) * ae) / C26121 -
        ((2 * C26554 + C26350 * C26564) * ce) / C26351 +
        C26456 *
            ((-2 * C26350 * C26593) / C26351 +
             C26350 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C2268 = (-(C26350 * C26593 * C26516) / C26137) / C26121 -
                         (C26350 * C26588) / C26351;
    const double C2269 =
        (-(C26593 * C26358) / C26137) / C26121 - C26588 / C26351 +
        ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) * C26359 *
            C26358) /
          C26137) /
             C26121 -
         C26593 / C26351) *
            C26516;
    const double C2622 =
        (-2 * C26426 * C26588) / C26351 +
        C26426 * ((-(C26593 * C26516) / C26137) / C26121 - C26588 / C26351);
    const double C3135 =
        (-((C26546 + C26552 * C26516) * ce) / C26137) / C26121 -
        (ae * (C26468 * C26516 + C26462)) / C26351 +
        C26456 * ((-(C26593 * C26516) / C26137) / C26121 - C26588 / C26351);
    const double C3671 =
        (-(C26593 * C26358) / C26137) / C26121 - C26588 / C26351 -
        (ae * (C26456 * C26480 + C26404 * ce)) / C26351 -
        ((C26456 * C26564 + C26404 * ae) * ce) / C26351 +
        C26456 *
            ((-(C26564 * ce) / C26137) / C26121 - (ae * C26480) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26358) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C4161 =
        (-(ae * (C26456 * C26815 + C26705 * ce)) / C26137) / C26121 -
        (C26426 * C26588) / C26351 -
        ((C26456 * C26816 + C26705 * ae) * ce) / C26351 +
        C26456 * ((-(C26816 * ce) / C26137) / C26121 - (ae * C26815) / C26351 -
                  (C26456 * C26426 * C26593) / C26351);
    const double C4507 =
        2 * ((-(C26546 * ce) / C26137) / C26121 - (ae * C26462) / C26351 -
             (C26456 * C26588) / C26351) -
        (ae * (C26456 * C26840 + C26462 + C26838 * ce)) / C26351 -
        ((C26546 + C26456 * C26841 + C26838 * ae) * ce) / C26351 +
        C26456 * ((-(ae * C26840) / C26137) / C26121 - C26588 / C26351 -
                  (C26841 * ce) / C26351 +
                  C26456 * ((-C26556 / C26137) / C26121 - C26475 -
                            (C26456 * C26593) / C26351));
    const double C6099 =
        (-(C26426 * C26564 * ce) / C26137) / C26121 -
        (ae * C26426 * C26480) / C26351 +
        C26456 * C26426 *
            ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                C26359 * C26358) /
              C26137) /
                 C26121 -
             C26593 / C26351);
    const double C11293 =
        3 * ((-(C26593 * C26516) / C26137) / C26121 - C26588 / C26351) +
        C26426 *
            ((-2 * C26426 * C26593) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C11822 =
        (((-2 * C26815) / C26137 - (C26426 * C26903) / C26137) * ae) / C26121 -
        ((2 * C26816 + C26426 * C26912) * ce) / C26351 +
        C26456 *
            ((-2 * C26426 * C26593) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C12783 =
        (-(C26593 * C26516) / C26137) / C26121 - C26588 / C26351 -
        (ae * (C26456 * C26903 + C26887 * ce)) / C26351 -
        ((C26456 * C26912 + C26887 * ae) * ce) / C26351 +
        C26456 *
            ((-(C26912 * ce) / C26137) / C26121 - (ae * C26903) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26593 / C26351));
    const double C26407 = C26400 / C26121;
    const double C20065 = C27526 * C2969;
    const double C21058 = C27526 * C4003;
    const double C21456 = C27526 * C4397;
    const double C26890 = C26883 / C26121;
    const double C11258 = C27527 * C2585;
    const double C27012 = C27005 / C26121;
    const double C9593 = C9588 + C9589;
    const double C18584 = C18577 + C18578;
    const double C10554 = C10550 + C10551;
    const double C11426 = C11422 + C11423;
    const double C20345 = C20341 + C20342;
    const double C26451 = -C26449;
    const double C26864 = -C26862;
    const double C21295 = C21293 + C21294;
    const double C801 = C794 + C795;
    const double C1391 = C1384 + C1385;
    const double C19943 = C19936 + C19937;
    const double C20464 = C20459 + C20460;
    const double C26510 = -C26508;
    const double C26873 = -C26871;
    const double C19945 = C19940 + C19941;
    const double C20943 = C20940 + C20941;
    const double C21377 = C21374 + C21375;
    const double C9655 = C9649 + C9650;
    const double C18646 = C18641 + C18642;
    const double C10612 = C10606 + C10607;
    const double C11490 = C11483 + C11484;
    const double C20402 = C20398 + C20399;
    const double C26481 = -C26479;
    const double C26971 = -C26969;
    const double C11066 = C11064 + C11065;
    const double C11491 = C11488 + C11489;
    const double C367 = C363 + C364;
    const double C932 = C926 + C927;
    const double C1522 = C1515 + C1516;
    const double C20066 = C20062 + C20063;
    const double C20575 = C20573 + C20574;
    const double C5883 = C27526 * C2968;
    const double C3497 = C27526 * C3488;
    const double C26904 = -C26902;
    const double C26927 = -C26926;
    const double C933 = C930 + C931;
    const double C1523 = C1520 + C1521;
    const double C2092 = C2090 + C2091;
    const double C1003 = C996 + C997;
    const double C1593 = C1586 + C1587;
    const double C10826 = C10821 + C10822;
    const double C11708 = C11700 + C11701;
    const double C26565 = -C26563;
    const double C26986 = -C26984;
    const double C11219 = C11216 + C11217;
    const double C11711 = C11706 + C11707;
    const double C12677 = C12674 + C12675;
    const double C484 = C480 + C481;
    const double C1070 = C1063 + C1064;
    const double C1656 = C1651 + C1652;
    const double C10882 = C10880 + C10881;
    const double C11771 = C11767 + C11768;
    const double C6031 = C27527 * C3081;
    const double C3617 = C27527 * C3612;
    const double C26913 = -C26911;
    const double C26995 = -C26993;
    const double C1071 = C1068 + C1069;
    const double C1657 = C1654 + C1655;
    const double C9531 = C9525 * C591;
    const double C10481 = C9525 * C27481;
    const double C10977 = C9525 * C27278;
    const double C9645 = C9524 * C188;
    const double C11480 = C9524 * C1313;
    const double C9657 = C9654 * C27347;
    const double C11481 = C9654 * C27492;
    const double C12458 = C9654 * C3187;
    const double C18519 = C18513 * C591;
    const double C19775 = C18513 * C27278;
    const double C20269 = C18513 * C27481;
    const double C18574 = C18512 * C143;
    const double C20828 = C18512 * C665;
    const double C18586 = C18583 * C27321;
    const double C19827 = C18583 * C1779;
    const double C20829 = C18583 * C27491;
    const double C88 =
        (C26156 / C26142 - (0 * de) / C26137) / C26142 - (0 * de) / C26137;
    const double C4566 = C26156 / C26142 - (0 * de) / C26137;
    const double C26158 = C26155 / C26137;
    const double C10976 = C9524 * C2314;
    const double C19774 = C18512 * C2314;
    const double C27517 = C27483 - C27506;
    const double C27507 = C27485 - C27486;
    const double C13629 = C9525 * C5035;
    const double C22531 = C18513 * C5035;
    const double C26233 = C26227 / C26137;
    const double C2360 =
        (C26237 / C26142 - (0 * de) / C26137) / C26142 - (0 * de) / C26137;
    const double C5094 = C26237 / C26142 - (0 * de) / C26137;
    const double C27520 = C27493 - C27511;
    const double C27512 = C27496 - C27497;
    const double C22601 = C18583 * C4562;
    const double C1846 =
        ((-(0 * de) / C26137) / C26142 -
         ((0 - (C26190 * C26209) / C26137) * de) / C26137) /
            C26142 -
        ((C26190 * ((-C26209 / C26137) / C26142 -
                    ((C27321 - (C26190 * C26212) / C26137) * de) / C26137) +
          C4562) *
         de) /
            C26137 +
        (-C26212 / C26137) / C26142 - (0 * de) / C26137;
    const double C26278 = C26272 / C26137;
    const double C4284 =
        (C26282 / C26142 - (0 * de) / C26137) / C26142 - (0 * de) / C26137;
    const double C7342 = C26282 / C26142 - (0 * de) / C26137;
    const double C27521 = C27498 - C27514;
    const double C27515 = C27501 - C27502;
    const double C15311 = C9654 * C6157;
    const double C3308 =
        ((-(0 * de) / C26137) / C26142 -
         ((0 - (C26197 * C26256) / C26137) * de) / C26137) /
            C26142 -
        ((C26197 * ((-C26256 / C26137) / C26142 -
                    ((C27347 - (C26197 * C26259) / C26137) * de) / C26137) +
          C6157) *
         de) /
            C26137 +
        (-C26259 / C26137) / C26142 - (0 * de) / C26137;
    const double C302 = C257 * C143;
    const double C356 = C257 * C188;
    const double C858 = C257 * C665;
    const double C1512 = C257 * C1313;
    const double C314 = C311 * C27321;
    const double C859 = C311 * C27491;
    const double C2028 = C311 * C1779;
    const double C4771 = C311 * C4562;
    const double C368 = C365 * C27347;
    const double C1513 = C365 * C27492;
    const double C3492 = C365 * C3187;
    const double C6413 = C365 * C6157;
    const double C18709 = C18707 * C591;
    const double C19933 = C18707 * C27278;
    const double C20455 = C18707 * C27481;
    const double C22741 = C18707 * C5035;
    const double C18760 = C18706 * C143;
    const double C19932 = C18706 * C2314;
    const double C20996 = C18706 * C665;
    const double C18764 = C18763 * C27321;
    const double C20001 = C18763 * C1779;
    const double C20997 = C18763 * C27491;
    const double C22815 = C18763 * C4562;
    const double C473 = C428 * C143;
    const double C527 = C428 * C188;
    const double C1060 = C428 * C665;
    const double C1714 = C428 * C1313;
    const double C485 = C482 * C27321;
    const double C1061 = C482 * C27491;
    const double C2210 = C482 * C1779;
    const double C4929 = C482 * C4562;
    const double C539 = C536 * C27347;
    const double C1715 = C536 * C27492;
    const double C3674 = C536 * C3187;
    const double C6571 = C536 * C6157;
    const double C9871 = C9869 * C591;
    const double C10817 = C9869 * C27481;
    const double C11211 = C9869 * C27278;
    const double C13937 = C9869 * C5035;
    const double C9975 = C9868 * C188;
    const double C11210 = C9868 * C2314;
    const double C11824 = C9868 * C1313;
    const double C9979 = C9978 * C27347;
    const double C11825 = C9978 * C27492;
    const double C12786 = C9978 * C3187;
    const double C15715 = C9978 * C6157;
    const double C9648 = C9526 * C188;
    const double C10482 = C9526 * C26156;
    const double C13630 = C9526 * C5041;
    const double C14257 = C9526 * C1313;
    const double C18579 = C18514 * C143;
    const double C20270 = C18514 * C26156;
    const double C22532 = C18514 * C5041;
    const double C23678 = C18514 * C665;
    const double C10608 = C10494 * C188;
    const double C10979 = C10494 * C2314;
    const double C11487 = C10494 * C1313;
    const double C11367 = C11363 * C2314;
    const double C11482 = C11363 * C1314;
    const double C12459 = C11363 * C3309;
    const double C15312 = C11363 * C6260;
    const double C19828 = C11363 * C1847;
    const double C20830 = C11363 * C666;
    const double C22602 = C11363 * C4618;
    const double C20343 = C20282 * C143;
    const double C20777 = C20282 * C2314;
    const double C20834 = C20282 * C665;
    const double C9521 = C27525 * C604;
    const double C18509 = C27525 * C1194;
    const double C10485 = C27525 * C1788;
    const double C14111 = C27525 * C2678;
    const double C20273 = C27525 * C3194;
    const double C19939 = C27526 * C2858;
    const double C20939 = C27526 * C3898;
    const double C2216 = C2214 + C2215;
    const double C1972 = C1968 + C1969;
    const double C2154 = C2150 + C2151;
    const double C5736 = C5732 + C5733;
    const double C5958 = C5954 + C5955;
    const double C3378 = C3374 + C3375;
    const double C3560 = C3556 + C3557;
    const double C255 = C233 * C101;
    const double C426 = C404 * C101;
    const double C798 = C233 * C608;
    const double C1000 = C404 * C608;
    const double C9522 = C9186 * C608;
    const double C1388 = C233 * C1198;
    const double C1590 = C404 * C1198;
    const double C18510 = C9186 * C1198;
    const double C1970 = C233 * C1790;
    const double C2152 = C404 * C1790;
    const double C10490 = C9186 * C1790;
    const double C5734 = C233 * C2680;
    const double C5956 = C404 * C2680;
    const double C14114 = C9186 * C2680;
    const double C3376 = C233 * C3196;
    const double C3558 = C404 * C3196;
    const double C20278 = C9186 * C3196;
    const double C11770 = C27527 * C3080;
    const double C12732 = C27527 * C4109;
    const double C11024 = C9186 * C2362;
    const double C11257 = C404 * C2362;
    const double C11424 = C9186 * C2742;
    const double C11769 = C404 * C2742;
    const double C20006 = C233 * C2742;
    const double C12402 = C9186 * C3790;
    const double C12731 = C404 * C3790;
    const double C21003 = C233 * C3790;
    const double C21333 = C9186 * C4286;
    const double C21455 = C233 * C4286;
    const double C9519 = C27525 * C611;
    const double C18507 = C27525 * C1201;
    const double C10487 = C27525 * C1793;
    const double C11355 = C27525 * C2685;
    const double C20275 = C27525 * C3199;
    const double C310 = C27526 * C299;
    const double C862 = C27526 * C854;
    const double C1450 = C27526 * C1443;
    const double C20004 = C27526 * C2913;
    const double C20519 = C27526 * C3429;
    const double C535 = C27527 * C524;
    const double C1129 = C27527 * C1123;
    const double C1718 = C27527 * C1710;
    const double C10934 = C27527 * C2267;
    const double C11828 = C27527 * C3133;
    const double C12464 = C12462 + C12463;
    const double C12346 = C12342 + C12343;
    const double C12676 = C12672 + C12673;
    const double C10986 = C10984 * C2314;
    const double C11063 = C10984 * C188;
    const double C11368 = C11364 * C2314;
    const double C11485 = C11364 * C1314;
    const double C16920 = C11364 * C6260;
    const double C19830 = C11364 * C1848;
    const double C21254 = C21252 * C2314;
    const double C21292 = C21252 * C143;
    const double C315 = C312 * C27321;
    const double C864 = C312 * C27491;
    const double C4775 = C312 * C4562;
    const double C486 = C483 * C27321;
    const double C1066 = C483 * C27491;
    const double C4933 = C483 * C4562;
    const double C369 = C366 * C27347;
    const double C1518 = C366 * C27492;
    const double C6417 = C366 * C6157;
    const double C540 = C537 * C27347;
    const double C1720 = C537 * C27492;
    const double C6575 = C537 * C6157;
    const double C307 = C259 * C143;
    const double C361 = C259 * C188;
    const double C865 = C259 * C665;
    const double C1519 = C259 * C1313;
    const double C308 = C261 * C143;
    const double C362 = C261 * C188;
    const double C860 = C800 * C666;
    const double C928 = C800 * C188;
    const double C2029 = C800 * C1847;
    const double C4772 = C800 * C4618;
    const double C5881 = C800 * C1313;
    const double C863 = C802 * C666;
    const double C929 = C802 * C188;
    const double C4774 = C802 * C4618;
    const double C1448 = C1390 * C143;
    const double C1514 = C1390 * C1314;
    const double C3493 = C1390 * C3309;
    const double C6414 = C1390 * C6260;
    const double C6910 = C1390 * C665;
    const double C20456 = C1390 * C26156;
    const double C22742 = C1390 * C5041;
    const double C1451 = C1392 * C143;
    const double C1517 = C1392 * C1314;
    const double C6416 = C1392 * C6260;
    const double C18704 = C1392 * C598;
    const double C19946 = C19942 * C2314;
    const double C20002 = C19942 * C1847;
    const double C20998 = C19942 * C666;
    const double C22816 = C19942 * C4618;
    const double C20520 = C20465 * C143;
    const double C20937 = C20465 * C2314;
    const double C21002 = C20465 * C665;
    const double C21378 = C21376 * C2314;
    const double C21415 = C21376 * C143;
    const double C478 = C430 * C143;
    const double C532 = C430 * C188;
    const double C1067 = C430 * C665;
    const double C1721 = C430 * C1313;
    const double C479 = C432 * C143;
    const double C533 = C432 * C188;
    const double C1062 = C1002 * C666;
    const double C1130 = C1002 * C188;
    const double C2211 = C1002 * C1847;
    const double C4930 = C1002 * C4618;
    const double C6103 = C1002 * C1313;
    const double C10818 = C1002 * C26156;
    const double C13938 = C1002 * C5041;
    const double C1065 = C1004 * C666;
    const double C1131 = C1004 * C188;
    const double C4932 = C1004 * C4618;
    const double C9866 = C1004 * C598;
    const double C1650 = C1592 * C143;
    const double C1716 = C1592 * C1314;
    const double C3675 = C1592 * C3309;
    const double C6572 = C1592 * C6260;
    const double C7116 = C1592 * C665;
    const double C1653 = C1594 * C143;
    const double C1719 = C1594 * C1314;
    const double C6574 = C1594 * C6260;
    const double C10935 = C10827 * C188;
    const double C11213 = C10827 * C2314;
    const double C11831 = C10827 * C1313;
    const double C11220 = C11218 * C2314;
    const double C11295 = C11218 * C188;
    const double C11713 = C11709 * C2314;
    const double C11826 = C11709 * C1314;
    const double C12787 = C11709 * C3309;
    const double C15716 = C11709 * C6260;
    const double C11714 = C11710 * C2314;
    const double C11829 = C11710 * C1314;
    const double C17224 = C11710 * C6260;
    const double C26420 = C26378 + C26417;
    const double C3735 = (C26426 * C26384 + C26799 * C26583) / C26121;
    const double C26419 = C26416 + C26377;
    const double C3733 = -(C26809 * C26583 + C26426 * C26383) / C26137;
    const double C26418 = C26415 / C26351;
    const double C2321 =
        (((-2 * C26426 * C26377) / C26137 -
          (C26426 * (C26402 * C26516 + C26377)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26426 * C26378 + C26426 * (C26378 + C26405 * C26516)) * ce) /
            C26351 +
        C26350 *
            ((-2 * C26598) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C2686 = (-(C26456 * C26426 * C26378 * ce) / C26137) / C26121 -
                         (ae * C26456 * C26426 * C26377) / C26351 -
                         (C26350 * C26456 * C26598) / C26351;
    const double C3737 =
        (-((C26426 * C26378 + C26426 * C26405 * C26583) * ce) / C26137) /
            C26121 -
        (ae * (C26426 * C26402 * C26583 + C26426 * C26377)) / C26351 +
        C26350 * ((-(C26426 *
                     (C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26598 / C26351);
    const double C3738 =
        (-(C26598 * C26583) / C26137) / C26121 - (C26426 * C26382) / C26351;
    const double C5526 =
        (-(ae * C26456 * C26809) / C26137) / C26121 -
        (C26456 * C26598) / C26351 - (C26456 * C26799 * ce) / C26351 +
        C26350 * ((-(C26456 * C26426 * C26405 * ce) / C26137) / C26121 -
                  (ae * C26456 * C26426 * C26402) / C26351 -
                  (C26350 * C26456 * C26426 *
                   (C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351);
    const double C10974 =
        3 * ((-(C26412 * C26516) / C26137) / C26121 - C26382 / C26351) +
        C26426 *
            ((-2 * C26598) / C26351 +
             C26426 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C11352 =
        C26456 *
        ((-2 * C26598) / C26351 +
         C26426 * ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                      C26359 * C26516) /
                    C26137) /
                       C26121 -
                   C26412 / C26351));
    const double C12830 =
        (-2 * C26456 * C26598) / C26351 +
        C26456 * ((-(C26426 *
                     (C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26598 / C26351);
    const double C4207 =
        (((-2 * C26456 * C26377) / C26137 -
          (C26456 * (C26402 * C26583 + C26377)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26456 * C26378 + C26456 * (C26378 + C26405 * C26583)) * ce) /
            C26351 +
        C26350 *
            ((-2 * C26635) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C21246 =
        3 * ((-(C26412 * C26583) / C26137) / C26121 - C26382 / C26351) +
        C26456 *
            ((-2 * C26635) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26412 / C26351));
    const double C9523 = C27525 * C613;
    const double C18511 = C27525 * C1203;
    const double C10491 = C27525 * C1794;
    const double C10983 = C27525 * C2322;
    const double C11361 = C27525 * C2688;
    const double C20279 = C27525 * C3200;
    const double C21251 = C27525 * C4208;
    const double C3082 =
        C26456 *
            ((-(C26426 * C26727 * ce) / C26137) / C26121 - C26726 / C26351 +
             C26426 *
                 ((-(C26426 * C26350 * std::pow(C26348, 6) * bs[6] * C26573) /
                   C26137) /
                      C26121 -
                  (C26727 * ce) / C26351)) -
        (ae * (C26426 * C26716 + C26440 + C26712 * ce)) / C26351;
    const double C4110 =
        (-(C26426 * C26726) / C26137) / C26121 - (C26554 * ce) / C26351 -
        (ae * C26456 * C26716) / C26351 +
        C26456 *
            (C26456 *
                 ((-(C26426 * C26350 * std::pow(C26348, 6) * bs[6] * C26573) /
                   C26137) /
                      C26121 -
                  (C26727 * ce) / C26351) -
             (ae * C26716) / C26351);
    const double C2361 =
        (-2 * (C26426 * C26440 + C26373 * ce)) / C26137 -
        (C26426 * (C26426 * C26716 + C26440 + C26712 * ce)) / C26137 -
        ((C26373 + C26396 * C26516) * ce) / C26137;
    const double C2741 =
        -(C26456 * (C26426 * C26716 + C26440 + C26712 * ce)) / C26137;
    const double C3789 =
        -(C26716 * C26583 + C26426 * C26440 + C26373 * ce) / C26137;
    const double C26894 = C26891 + C26438;
    const double C4285 =
        (-2 * (C26456 * C26470 + C26373 * ce)) / C26137 -
        (C26456 * (C26456 * C26846 + C26470 + C26844 * ce)) / C26137 -
        ((C26373 + C26396 * C26583) * ce) / C26137;
    const double C12901 =
        (-2 * (C26456 * C26815 + C26705 * ce)) / C26137 -
        (C26456 * (C26456 * C26961 + C26815 + C26957 * ce)) / C26137 -
        ((C26705 + C26880 * C26583) * ce) / C26137;
    const double C27016 = C27013 + C26468;
    const double C2437 = (2 * (C26426 * C26499 + C26373 * ae) +
                          C26426 * (C26499 + C26426 * C26717 + C26712 * ae) +
                          (C26373 + C26396 * C26516) * ae) /
                         C26121;
    const double C2857 =
        (C26456 * (C26499 + C26426 * C26717 + C26712 * ae)) / C26121;
    const double C3897 =
        (C26426 * C26499 + C26373 * ae + C26717 * C26583) / C26121;
    const double C26895 = C26497 + C26892;
    const double C2476 =
        2 * ((-(C26499 * ce) / C26137) / C26121 - (ae * C26440) / C26351 -
             (C26426 * C26710) / C26351) -
        (ae * (C26426 * C26716 + C26440 + C26712 * ce)) / C26351 -
        ((C26499 + C26426 * C26717 + C26712 * ae) * ce) / C26351 +
        C26426 *
            ((-(ae * C26716) / C26137) / C26121 - C26710 / C26351 -
             (C26717 * ce) / C26351 +
             C26426 *
                 ((-(C26713 * ce) / C26137) / C26121 - (ae * C26711) / C26351 -
                  (C26426 * C26350 *
                   (C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C2915 = (-(C26456 * C26499 * ce) / C26137) / C26121 -
                         (ae * C26456 * C26440) / C26351 -
                         (C26426 * C26456 * C26710) / C26351;
    const double C2916 =
        (-(ae * C26456 * C26716) / C26137) / C26121 -
        (C26456 * C26710) / C26351 - (C26456 * C26717 * ce) / C26351 +
        C26426 * ((-(C26456 * C26713 * ce) / C26137) / C26121 -
                  (ae * C26456 * C26711) / C26351 -
                  (C26426 * C26456 * C26350 *
                   (C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351);
    const double C3430 =
        (-(C26710 * C26583) / C26137) / C26121 - (C26350 * C26521) / C26351;
    const double C3952 =
        (-((C26499 + C26713 * C26583) * ce) / C26137) / C26121 -
        (ae * (C26711 * C26583 + C26440)) / C26351 +
        C26426 * ((-(C26350 *
                     (C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26710 / C26351);
    const double C4361 =
        (-2 * C26456 * C26710) / C26351 +
        C26456 * ((-(C26350 *
                     (C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26710 / C26351);
    const double C26884 = C26878 / C26351;
    const double C12973 =
        (((-2 * C26456 * C26438) / C26137 -
          (C26456 * (C26446 * C26583 + C26438)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26456 * C26497 + C26456 * (C26497 + C26505 * C26583)) * ce) /
            C26351 +
        C26426 *
            ((-2 * C26923) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C21413 =
        3 * ((-(C26526 * C26583) / C26137) / C26121 - C26521 / C26351) +
        C26456 *
            ((-2 * C26923) / C26351 +
             C26456 *
                 ((-((C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26583) /
                   C26137) /
                      C26121 -
                  C26526 / C26351));
    const double C867 = C27526 * C855;
    const double C1453 = C27526 * C1444;
    const double C2033 = C27526 * C2024;
    const double C20007 = C27526 * C2914;
    const double C21004 = C27526 * C3951;
    const double C21417 = C27526 * C4362;
    const double C4433 = (2 * (C26456 * C26554 + C26373 * ae) +
                          C26456 * (C26554 + C26456 * C26847 + C26844 * ae) +
                          (C26373 + C26396 * C26583) * ae) /
                         C26121;
    const double C13043 = (2 * (C26456 * C26816 + C26705 * ae) +
                           C26456 * (C26816 + C26456 * C26962 + C26957 * ae) +
                           (C26705 + C26880 * C26583) * ae) /
                          C26121;
    const double C27017 = C26552 + C27014;
    const double C2621 =
        (-2 * C26426 * C26729) / C26351 +
        C26426 * ((-(C26350 *
                     (C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26729 / C26351);
    const double C3134 = (-(C26426 * C26554 * ce) / C26137) / C26121 -
                         (ae * C26426 * C26470) / C26351 -
                         (C26456 * C26426 * C26729) / C26351;
    const double C3136 =
        (-((C26554 + C26727 * C26516) * ce) / C26137) / C26121 -
        (ae * (C26720 * C26516 + C26470)) / C26351 +
        C26456 * ((-(C26350 *
                     (C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                     C26359 * C26516) /
                   C26137) /
                      C26121 -
                  C26729 / C26351);
    const double C3670 =
        (-(ae * (C26456 * C26470 + C26373 * ce)) / C26137) / C26121 -
        (C26350 * C26588) / C26351 -
        ((C26456 * C26554 + C26373 * ae) * ce) / C26351 +
        C26456 * ((-(C26554 * ce) / C26137) / C26121 - (ae * C26470) / C26351 -
                  (C26456 * C26729) / C26351);
    const double C4162 =
        (-(ae * (C26456 * C26818 + C26712 * ce)) / C26137) / C26121 -
        (C26426 * C26729) / C26351 -
        ((C26456 * C26819 + C26712 * ae) * ce) / C26351 +
        C26456 * ((-(C26819 * ce) / C26137) / C26121 - (ae * C26818) / C26351 -
                  (C26456 * C26426 * C26350 *
                   (C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351);
    const double C4508 =
        2 * ((-(C26554 * ce) / C26137) / C26121 - (ae * C26470) / C26351 -
             (C26456 * C26729) / C26351) -
        (ae * (C26456 * C26846 + C26470 + C26844 * ce)) / C26351 -
        ((C26554 + C26456 * C26847 + C26844 * ae) * ce) / C26351 +
        C26456 *
            ((-(ae * C26846) / C26137) / C26121 - C26729 / C26351 -
             (C26847 * ce) / C26351 +
             C26456 *
                 ((-(C26727 * ce) / C26137) / C26121 - (ae * C26720) / C26351 -
                  (C26456 * C26350 *
                   (C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C13114 =
        2 * ((-(C26816 * ce) / C26137) / C26121 - (ae * C26815) / C26351 -
             (C26456 * C26955) / C26351) -
        (ae * (C26456 * C26961 + C26815 + C26957 * ce)) / C26351 -
        ((C26816 + C26456 * C26962 + C26957 * ae) * ce) / C26351 +
        C26456 *
            ((-(ae * C26961) / C26137) / C26121 - C26955 / C26351 -
             (C26962 * ce) / C26351 +
             C26456 *
                 ((-(C26958 * ce) / C26137) / C26121 - (ae * C26956) / C26351 -
                  (C26456 * C26426 *
                   (C26389 * C26390 + C26583 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C27006 = C27000 / C26351;
    const double C1133 = C27527 * C1125;
    const double C1723 = C27527 * C1711;
    const double C2273 = C27527 * C2268;
    const double C11297 = C27527 * C2622;
    const double C11833 = C27527 * C3135;
    const double C12791 = C27527 * C4161;
    const double C26411 = C26407 - C26392;
    const double C20067 = C20064 + C20065;
    const double C21059 = C21057 + C21058;
    const double C26893 = C26890 - C26445;
    const double C27015 = C27012 - C26475;
    const double C18587 = C18584 * C27321;
    const double C22605 = C18584 * C4562;
    const double C23677 = C18584 * C27491;
    const double C19829 = C11426 * C1780;
    const double C20831 = C11426 * C27335;
    const double C22603 = C11426 * C27335;
    const double C20347 = C20345 * C27321;
    const double C20833 = C20345 * C27491;
    const double C25761 = C20345 * C4562;
    const double C26452 = C26451 / C26121;
    const double C26865 = C26864 / C26121;
    const double C21296 = C21295 * C27321;
    const double C18703 = C1391 * C592;
    const double C20457 = C1391 * C27283;
    const double C22743 = C1391 * C27283;
    const double C19947 = C19943 * C27278;
    const double C22745 = C19943 * C5035;
    const double C24865 = C19943 * C27481;
    const double C20466 = C20464 * C27481;
    const double C20936 = C20464 * C27278;
    const double C24347 = C20464 * C5035;
    const double C26511 = C26510 / C26121;
    const double C26874 = C26873 / C26121;
    const double C19949 = C19945 * C27278;
    const double C20945 = C20943 * C27278;
    const double C21379 = C21377 * C27278;
    const double C9658 = C9655 * C27347;
    const double C14256 = C9655 * C27492;
    const double C15315 = C9655 * C6157;
    const double C10614 = C10612 * C27347;
    const double C11486 = C10612 * C27492;
    const double C16921 = C10612 * C6157;
    const double C11492 = C11490 * C27359;
    const double C12460 = C11490 * C3188;
    const double C15313 = C11490 * C27359;
    const double C26482 = C26481 / C26121;
    const double C26972 = C26971 / C26121;
    const double C11067 = C11066 * C27347;
    const double C11493 = C11491 * C27359;
    const double C16923 = C11491 * C27359;
    const double C370 = C367 * C27347;
    const double C934 = C932 * C27347;
    const double C5880 = C932 * C27492;
    const double C6979 = C932 * C6157;
    const double C1524 = C1522 * C27359;
    const double C3494 = C1522 * C3188;
    const double C6415 = C1522 * C27359;
    const double C5884 = C5882 + C5883;
    const double C3498 = C3496 + C3497;
    const double C26905 = C26904 / C26121;
    const double C26928 = C26927 / C26121;
    const double C935 = C933 * C27347;
    const double C1525 = C1523 * C27359;
    const double C6419 = C1523 * C27359;
    const double C2093 = C2092 * C27347;
    const double C9865 = C1003 * C592;
    const double C10819 = C1003 * C27283;
    const double C13939 = C1003 * C27283;
    const double C10828 = C10826 * C27481;
    const double C11212 = C10826 * C27278;
    const double C13941 = C10826 * C5035;
    const double C11712 = C11708 * C27278;
    const double C14527 = C11708 * C5035;
    const double C16635 = C11708 * C27481;
    const double C26566 = C26565 / C26121;
    const double C26987 = C26986 / C26121;
    const double C11221 = C11219 * C27278;
    const double C11715 = C11711 * C27278;
    const double C12679 = C12677 * C27278;
    const double C487 = C484 * C27321;
    const double C1072 = C1070 * C27335;
    const double C2212 = C1070 * C1780;
    const double C4931 = C1070 * C27335;
    const double C1658 = C1656 * C27321;
    const double C6028 = C1656 * C4562;
    const double C7115 = C1656 * C27491;
    const double C6032 = C6030 + C6031;
    const double C3618 = C3616 + C3617;
    const double C26914 = C26913 / C26121;
    const double C26996 = C26995 / C26121;
    const double C1073 = C1071 * C27335;
    const double C4935 = C1071 * C27335;
    const double C1659 = C1657 * C27321;
    const double C13476 = C1004 * C4566;
    const double C23292 = C1392 * C4566;
    const double C26160 = C27278 - C26158;
    const double C13167 = C9525 * C27517;
    const double C13473 = C9869 * C27517;
    const double C23133 = C18513 * C27517;
    const double C23289 = C18707 * C27517;
    const double C75 = (C27481 - C27505) / C26142 - (C27517 * C27274) / C26137;
    const double C13475 = C1003 * C27507;
    const double C23291 = C1391 * C27507;
    const double C76 =
        (2 * C27283 + C27517) / C26142 - (C27507 * C27274) / C26137;
    const double C77 = C27507 / C26142 - C27286 / C26146;
    const double C26236 = C27321 - C26233;
    const double C25302 = C11364 * C5094;
    const double C5247 = C311 * C27520;
    const double C5403 = C482 * C27520;
    const double C25299 = C18583 * C27520;
    const double C25455 = C18763 * C27520;
    const double C2310 =
        (C27491 - C27510) / C26142 - (C27520 * C27331) / C26137;
    const double C5405 = C1070 * C27512;
    const double C25301 = C11426 * C27512;
    const double C2311 =
        (2 * C27335 + C27520) / C26142 - (C27512 * C27331) / C26137;
    const double C2312 = C27512 / C26142 - C27338 / C26146;
    const double C2027 = C257 * C1846;
    const double C2209 = C428 * C1846;
    const double C19826 = C18512 * C1846;
    const double C20000 = C18706 * C1846;
    const double C26281 = C27347 - C26278;
    const double C7495 = C365 * C27521;
    const double C7651 = C536 * C27521;
    const double C17379 = C9654 * C27521;
    const double C17685 = C9978 * C27521;
    const double C4197 =
        (C27492 - C27513) / C26142 - (C27521 * C27355) / C26137;
    const double C7497 = C1522 * C27515;
    const double C17381 = C11490 * C27515;
    const double C4198 =
        (2 * C27359 + C27521) / C26142 - (C27515 * C27355) / C26137;
    const double C4199 = C27515 / C26142 - C27362 / C26146;
    const double C3491 = C257 * C3308;
    const double C3673 = C428 * C3308;
    const double C12457 = C9524 * C3308;
    const double C12785 = C9868 * C3308;
    const double C9528 = C9520 + C9521;
    const double C18516 = C18508 + C18509;
    const double C10492 = C10484 + C10485;
    const double C14116 = C14110 + C14111;
    const double C20280 = C20272 + C20273;
    const double C19944 = C19938 + C19939;
    const double C20942 = C20938 + C20939;
    const double C2217 = C2216 * C1781;
    const double C5407 = C2216 * C5039;
    const double C2031 = C1972 * C1848;
    const double C2089 = C1972 * C188;
    const double C5250 = C1972 * C5094;
    const double C2213 = C2154 * C1848;
    const double C2271 = C2154 * C188;
    const double C5406 = C2154 * C5094;
    const double C10820 = C2154 * C26156;
    const double C13940 = C2154 * C5041;
    const double C5805 = C5736 * C4618;
    const double C5879 = C5736 * C1314;
    const double C6908 = C5736 * C666;
    const double C6978 = C5736 * C6260;
    const double C22744 = C5736 * C5041;
    const double C24864 = C5736 * C26156;
    const double C6027 = C5958 * C4618;
    const double C6101 = C5958 * C1314;
    const double C7114 = C5958 * C666;
    const double C7184 = C5958 * C6260;
    const double C14526 = C5958 * C5041;
    const double C16634 = C5958 * C26156;
    const double C3433 = C3378 * C143;
    const double C3495 = C3378 * C3310;
    const double C7498 = C3378 * C7342;
    const double C20458 = C3378 * C26156;
    const double C24346 = C3378 * C5041;
    const double C3615 = C3560 * C143;
    const double C3677 = C3560 * C3310;
    const double C7654 = C3560 * C7342;
    const double C262 = C255 + C256;
    const double C433 = C426 + C427;
    const double C11026 = C11024 + C11025;
    const double C11259 = C11257 + C11258;
    const double C11427 = C11424 + C11425;
    const double C11772 = C11769 + C11770;
    const double C12404 = C12402 + C12403;
    const double C12733 = C12731 + C12732;
    const double C21335 = C21333 + C21334;
    const double C21457 = C21455 + C21456;
    const double C9527 = C9518 + C9519;
    const double C18515 = C18506 + C18507;
    const double C10493 = C10486 + C10487;
    const double C11362 = C11354 + C11355;
    const double C20281 = C20274 + C20275;
    const double C313 = C309 + C310;
    const double C868 = C861 + C862;
    const double C1454 = C1449 + C1450;
    const double C20008 = C20003 + C20004;
    const double C20521 = C20518 + C20519;
    const double C538 = C534 + C535;
    const double C1134 = C1128 + C1129;
    const double C1724 = C1717 + C1718;
    const double C10936 = C10933 + C10934;
    const double C11834 = C11827 + C11828;
    const double C12465 = C12464 * C3189;
    const double C17383 = C12464 * C7239;
    const double C12348 = C12346 * C2314;
    const double C12461 = C12346 * C3310;
    const double C17382 = C12346 * C7342;
    const double C20832 = C12346 * C666;
    const double C25760 = C12346 * C4618;
    const double C12678 = C12676 * C2314;
    const double C12789 = C12676 * C3310;
    const double C17688 = C12676 * C7342;
    const double C26423 = C26420 + C26406;
    const double C26422 = C26419 + C26403;
    const double C14115 = C27525 * C2686;
    const double C12345 = C27525 * C3738;
    const double C9529 = C9522 + C9523;
    const double C18517 = C18510 + C18511;
    const double C10495 = C10490 + C10491;
    const double C10985 = C10982 + C10983;
    const double C11365 = C11360 + C11361;
    const double C20283 = C20278 + C20279;
    const double C21253 = C21250 + C21251;
    const double C26897 = C26894 + C26886;
    const double C27019 = C27016 + C27008;
    const double C26898 = C26895 + C26889;
    const double C5809 = C27526 * C2915;
    const double C3435 = C27526 * C3430;
    const double C869 = C866 + C867;
    const double C1455 = C1452 + C1453;
    const double C2034 = C2032 + C2033;
    const double C20009 = C20006 + C20007;
    const double C21005 = C21003 + C21004;
    const double C21418 = C21416 + C21417;
    const double C27020 = C27017 + C27011;
    const double C6105 = C27527 * C3134;
    const double C3679 = C27527 * C3670;
    const double C1135 = C1132 + C1133;
    const double C1725 = C1722 + C1723;
    const double C2274 = C2272 + C2273;
    const double C11298 = C11296 + C11297;
    const double C11835 = C11832 + C11833;
    const double C12792 = C12790 + C12791;
    const double C26421 = C26411 - C26418;
    const double C26896 = C26893 - C26884;
    const double C27018 = C27015 - C27006;
    const double C26453 = C26452 - C26445;
    const double C26866 = C26865 - C26860;
    const double C26512 = C26511 - C26504;
    const double C26875 = C26874 - C26392;
    const double C26483 = C26482 - C26475;
    const double C26973 = C26972 - C26860;
    const double C5885 = C5884 * C27359;
    const double C6981 = C5884 * C27359;
    const double C3499 = C3498 * C3189;
    const double C7499 = C3498 * C7239;
    const double C26906 = C26905 - C26475;
    const double C26929 = C26928 - C26504;
    const double C26567 = C26566 - C26559;
    const double C26988 = C26987 - C26392;
    const double C6033 = C6032 * C27335;
    const double C7117 = C6032 * C27335;
    const double C3619 = C3618 * C27321;
    const double C26915 = C26914 - C26559;
    const double C26997 = C26996 - C26445;
    const double C26161 = C26160 * ce;
    const double C596 =
        ((-C26136 / C26137) / C26142 - (C26149 * de) / C26137) / C26142 -
        ((C26135 * ((-C26138 / C26137) / C26142 - (C26160 * de) / C26137) +
          C5035) *
         de) /
            C26137 +
        (-C26151 / C26137) / C26142 - (0 * de) / C26137;
    const double C597 =
        ((-C26138 / C26137) / C26142 - (C26160 * de) / C26137) / C26142 -
        ((C26135 * ((-C26151 / C26137) / C26142 - (0 * de) / C26137) + C27283) *
         de) /
            C26137;
    const double C5040 = (-C26138 / C26137) / C26142 - (C26160 * de) / C26137;
    const double C26239 = C26236 * ce;
    const double C4617 = (-C26209 / C26137) / C26142 - (C26236 * de) / C26137;
    const double C26284 = C26281 * ce;
    const double C6259 = (-C26256 / C26137) / C26142 - (C26281 * de) / C26137;
    const double C9534 = C9528 * C598;
    const double C9651 = C9528 * C188;
    const double C13170 = C9528 * C4566;
    const double C18522 = C18516 * C598;
    const double C18580 = C18516 * C143;
    const double C23136 = C18516 * C4566;
    const double C10496 = C10492 * C26156;
    const double C10609 = C10492 * C188;
    const double C13632 = C10492 * C5041;
    const double C14118 = C14116 * C5041;
    const double C14255 = C14116 * C1314;
    const double C15314 = C14116 * C6260;
    const double C16234 = C14116 * C26156;
    const double C22604 = C14116 * C4618;
    const double C23676 = C14116 * C666;
    const double C20284 = C20280 * C26156;
    const double C20338 = C20280 * C143;
    const double C24192 = C20280 * C5041;
    const double C19948 = C19944 * C2314;
    const double C20005 = C19944 * C1848;
    const double C25458 = C19944 * C5094;
    const double C20944 = C20942 * C2314;
    const double C21000 = C20942 * C666;
    const double C25914 = C20942 * C4618;
    const double C19831 = C11427 * C1781;
    const double C25303 = C11427 * C5039;
    const double C20835 = C12404 * C27335;
    const double C25763 = C12404 * C27335;
    const double C9533 = C9527 * C592;
    const double C10483 = C9527 * C27283;
    const double C13169 = C9527 * C27507;
    const double C13631 = C9527 * C27283;
    const double C18521 = C18515 * C592;
    const double C20271 = C18515 * C27283;
    const double C22533 = C18515 * C27283;
    const double C23135 = C18515 * C27507;
    const double C10497 = C10493 * C27481;
    const double C10978 = C10493 * C27278;
    const double C13633 = C10493 * C5035;
    const double C11366 = C11362 * C27278;
    const double C14112 = C11362 * C5035;
    const double C16235 = C11362 * C27481;
    const double C20285 = C20281 * C27481;
    const double C20776 = C20281 * C27278;
    const double C24193 = C20281 * C5035;
    const double C316 = C313 * C27321;
    const double C870 = C868 * C27335;
    const double C2030 = C868 * C1780;
    const double C4773 = C868 * C27335;
    const double C5249 = C868 * C27512;
    const double C1456 = C1454 * C27321;
    const double C5806 = C1454 * C4562;
    const double C6909 = C1454 * C27491;
    const double C20010 = C20008 * C1780;
    const double C20999 = C20008 * C27335;
    const double C22817 = C20008 * C27335;
    const double C25457 = C20008 * C27512;
    const double C20522 = C20521 * C27321;
    const double C21001 = C20521 * C27491;
    const double C25915 = C20521 * C4562;
    const double C541 = C538 * C27347;
    const double C1136 = C1134 * C27347;
    const double C6102 = C1134 * C27492;
    const double C7185 = C1134 * C6157;
    const double C1726 = C1724 * C27359;
    const double C3676 = C1724 * C3188;
    const double C6573 = C1724 * C27359;
    const double C7653 = C1724 * C27515;
    const double C10937 = C10936 * C27347;
    const double C11830 = C10936 * C27492;
    const double C17225 = C10936 * C6157;
    const double C11836 = C11834 * C27359;
    const double C12788 = C11834 * C3188;
    const double C15717 = C11834 * C27359;
    const double C17687 = C11834 * C27515;
    const double C5594 =
        C26456 *
        (C26426 * ((-(ae * C26711) / C26137) / C26121 - C26444 / C26351 +
                   C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                              C26137) /
                                 C26121 -
                             (ae * C26446) / C26351)) -
         (C26423 * ce) / C26351);
    const double C5662 =
        C26456 * C26426 *
            ((-(ae * C26720) / C26137) / C26121 - C26474 / C26351 +
             C26350 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                      C26121 -
                  (ae * C26476) / C26351)) -
        (C26426 * C26423 * ce) / C26351;
    const double C102 = (3 * (C26365 + C26350 * C26384 + C26373 * ae) +
                         C26350 * (2 * C26384 + C26350 * C26423 + C26404 * ae) +
                         (2 * C26373 + C26350 * C26404) * ae) /
                        C26121;
    const double C609 =
        (C26426 * (2 * C26384 + C26350 * C26423 + C26404 * ae)) / C26121;
    const double C1199 =
        (C26456 * (2 * C26384 + C26350 * C26423 + C26404 * ae)) / C26121;
    const double C1791 =
        (C26365 + C26350 * C26384 + C26373 * ae + C26423 * C26516) / C26121;
    const double C3197 =
        (C26365 + C26350 * C26384 + C26373 * ae + C26423 * C26583) / C26121;
    const double C5524 = (C26456 * C26426 * C26423) / C26121;
    const double C614 =
        2 * ((-(C26426 * C26378 * ce) / C26137) / C26121 -
             (ae * C26426 * C26377) / C26351 - (C26350 * C26598) / C26351) -
        (ae * C26426 * C26422) / C26351 - (C26426 * C26423 * ce) / C26351 +
        C26350 *
            ((-(ae * C26426 * C26413) / C26137) / C26121 - C26598 / C26351 -
             (C26426 * C26414 * ce) / C26351 +
             C26350 *
                 ((-(C26426 * C26405 * ce) / C26137) / C26121 -
                  (ae * C26426 * C26402) / C26351 -
                  (C26350 * C26426 *
                   (C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C1204 =
        2 * ((-(C26456 * C26378 * ce) / C26137) / C26121 -
             (ae * C26456 * C26377) / C26351 - (C26350 * C26635) / C26351) -
        (ae * C26456 * C26422) / C26351 - (C26456 * C26423 * ce) / C26351 +
        C26350 *
            ((-(ae * C26456 * C26413) / C26137) / C26121 - C26635 / C26351 -
             (C26456 * C26414 * ce) / C26351 +
             C26350 *
                 ((-(C26456 * C26405 * ce) / C26137) / C26121 -
                  (ae * C26456 * C26402) / C26351 -
                  (C26350 * C26456 *
                   (C26389 * C26390 + C26358 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C5730 =
        C26426 * C26456 *
            ((-(C26713 * ce) / C26137) / C26121 - C26503 / C26351 +
             C26350 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                      C26121 -
                  (C26505 * ce) / C26351)) -
        (ae * C26456 * C26422) / C26351;
    const double C5952 =
        C26456 * C26426 *
            ((-(C26727 * ce) / C26137) / C26121 - C26558 / C26351 +
             C26350 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                      C26121 -
                  (C26560 * ce) / C26351)) -
        (ae * C26426 * C26422) / C26351;
    const double C103 =
        (-3 * (C26350 * C26383 + C26364 + C26373 * ce)) / C26137 +
        C26350 * ((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
                  (C26404 * ce) / C26137) -
        ((2 * C26373 + C26350 * C26404) * ce) / C26137;
    const double C610 =
        C26426 * ((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
                  (C26404 * ce) / C26137);
    const double C1200 =
        C26456 * ((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
                  (C26404 * ce) / C26137);
    const double C1792 =
        -(C26422 * C26516 + C26350 * C26383 + C26364 + C26373 * ce) / C26137;
    const double C3198 =
        -(C26422 * C26583 + C26350 * C26383 + C26364 + C26373 * ce) / C26137;
    const double C5525 = -(C26456 * C26426 * C26422) / C26137;
    const double C14117 = C14114 + C14115;
    const double C12347 = C12344 + C12345;
    const double C9535 = C9529 * C593;
    const double C13171 = C9529 * C4561;
    const double C18523 = C18517 * C593;
    const double C23137 = C18517 * C4561;
    const double C10499 = C10495 * C27283;
    const double C13635 = C10495 * C27283;
    const double C10987 = C10985 * C27278;
    const double C11369 = C11365 * C27278;
    const double C20287 = C20283 * C27283;
    const double C24195 = C20283 * C27283;
    const double C21255 = C21253 * C27278;
    const double C11021 =
        (-3 * (C26426 * C26707 + C26432 + C26705 * ce)) / C26137 +
        C26426 * ((-2 * C26707) / C26137 - (C26426 * C26897) / C26137 -
                  (C26887 * ce) / C26137) -
        ((2 * C26705 + C26426 * C26887) * ce) / C26137;
    const double C11419 =
        C26456 * ((-2 * C26707) / C26137 - (C26426 * C26897) / C26137 -
                  (C26887 * ce) / C26137);
    const double C12399 =
        -(C26897 * C26583 + C26426 * C26707 + C26432 + C26705 * ce) / C26137;
    const double C21330 =
        (-3 * (C26456 * C26840 + C26462 + C26838 * ce)) / C26137 +
        C26456 * ((-2 * C26840) / C26137 - (C26456 * C27019) / C26137 -
                  (C27009 * ce) / C26137) -
        ((2 * C26838 + C26456 * C27009) * ce) / C26137;
    const double C11595 =
        2 * ((-(C26456 * C26497 * ce) / C26137) / C26121 -
             (ae * C26456 * C26438) / C26351 - (C26426 * C26923) / C26351) -
        (ae * C26456 * C26897) / C26351 - (C26456 * C26898 * ce) / C26351 +
        C26426 *
            ((-(ae * C26456 * C26885) / C26137) / C26121 - C26923 / C26351 -
             (C26456 * C26888 * ce) / C26351 +
             C26426 *
                 ((-(C26456 * C26505 * ce) / C26137) / C26121 -
                  (ae * C26456 * C26446) / C26351 -
                  (C26426 * C26456 *
                   (C26389 * C26390 + C26516 * bs[6] * std::pow(C26348, 6)) *
                   C26359) /
                      C26351));
    const double C11101 =
        (3 * (C26491 + C26426 * C26708 + C26705 * ae) +
         C26426 * (2 * C26708 + C26426 * C26898 + C26887 * ae) +
         (2 * C26705 + C26426 * C26887) * ae) /
        C26121;
    const double C11543 =
        (C26456 * (2 * C26708 + C26426 * C26898 + C26887 * ae)) / C26121;
    const double C12515 =
        (C26491 + C26426 * C26708 + C26705 * ae + C26898 * C26583) / C26121;
    const double C5810 = C5808 + C5809;
    const double C3436 = C3434 + C3435;
    const double C871 = C869 * C27335;
    const double C4777 = C869 * C27335;
    const double C1457 = C1455 * C27321;
    const double C2035 = C2034 * C1781;
    const double C5251 = C2034 * C5039;
    const double C20011 = C20009 * C1781;
    const double C25459 = C20009 * C5039;
    const double C21006 = C21005 * C27335;
    const double C25917 = C21005 * C27335;
    const double C21419 = C21418 * C27321;
    const double C21491 =
        (3 * (C26546 + C26456 * C26841 + C26838 * ae) +
         C26456 * (2 * C26841 + C26456 * C27020 + C27009 * ae) +
         (2 * C26838 + C26456 * C27009) * ae) /
        C26121;
    const double C6106 = C6104 + C6105;
    const double C3680 = C3678 + C3679;
    const double C1137 = C1135 * C27347;
    const double C1727 = C1725 * C27359;
    const double C6577 = C1725 * C27359;
    const double C2275 = C2274 * C27347;
    const double C11299 = C11298 * C27347;
    const double C11837 = C11835 * C27359;
    const double C17227 = C11835 * C27359;
    const double C12793 = C12792 * C3189;
    const double C17689 = C12792 * C7239;
    const double C108 =
        3 * ((-(ae * C26383) / C26137) / C26121 - C26382 / C26351 -
             (C26384 * ce) / C26351 + C26350 * C26421) +
        (((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
          (C26404 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26384 + C26350 * C26423 + C26404 * ae) * ce) / C26351 +
        C26350 * (2 * C26421 - (ae * C26422) / C26351 - (C26423 * ce) / C26351 +
                  C26350 * ((-(ae * C26413) / C26137) / C26121 -
                            C26412 / C26351 - (C26414 * ce) / C26351 +
                            C26350 * ((-(C26405 * ce) / C26137) / C26121 -
                                      (ae * C26402) / C26351 -
                                      (C26350 *
                                       (C26389 * C26390 +
                                        C26358 * bs[6] * std::pow(C26348, 6)) *
                                       C26359) /
                                          C26351)));
    const double C11137 =
        3 * ((-(ae * C26707) / C26137) / C26121 - C26521 / C26351 -
             (C26708 * ce) / C26351 + C26426 * C26896) +
        (((-2 * C26707) / C26137 - (C26426 * C26897) / C26137 -
          (C26887 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26708 + C26426 * C26898 + C26887 * ae) * ce) / C26351 +
        C26426 * (2 * C26896 - (ae * C26897) / C26351 - (C26898 * ce) / C26351 +
                  C26426 * ((-(ae * C26885) / C26137) / C26121 -
                            C26526 / C26351 - (C26888 * ce) / C26351 +
                            C26426 * ((-(C26505 * ce) / C26137) / C26121 -
                                      (ae * C26446) / C26351 -
                                      (C26426 *
                                       (C26389 * C26390 +
                                        C26516 * bs[6] * std::pow(C26348, 6)) *
                                       C26359) /
                                          C26351)));
    const double C21562 =
        3 * ((-(ae * C26840) / C26137) / C26121 - C26588 / C26351 -
             (C26841 * ce) / C26351 + C26456 * C27018) +
        (((-2 * C26840) / C26137 - (C26456 * C27019) / C26137 -
          (C27009 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26841 + C26456 * C27020 + C27009 * ae) * ce) / C26351 +
        C26456 * (2 * C27018 - (ae * C27019) / C26351 - (C27020 * ce) / C26351 +
                  C26456 * ((-(ae * C27007) / C26137) / C26121 -
                            C26593 / C26351 - (C27010 * ce) / C26351 +
                            C26456 * ((-(C26560 * ce) / C26137) / C26121 -
                                      (ae * C26476) / C26351 -
                                      (C26456 *
                                       (C26389 * C26390 +
                                        C26583 * bs[6] * std::pow(C26348, 6)) *
                                       C26359) /
                                          C26351)));
    const double C153 =
        3 * ((-(ae * C26440) / C26137) / C26121 - C26437 / C26351 +
             C26350 * C26453) +
        (((-2 * C26440) / C26137 - (C26350 * C26450) / C26137) * ae) / C26121 +
        C26350 *
            (2 * C26453 - (ae * C26450) / C26351 +
             C26350 *
                 ((-(ae * C26350 * C26446) / C26137) / C26121 -
                  C26444 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                             C26137) /
                                C26121 -
                            (ae * C26446) / C26351)));
    const double C673 =
        C26426 * ((-(ae * C26440) / C26137) / C26121 - C26437 / C26351 +
                  C26350 * C26453) -
        ((C26365 + C26350 * C26384 + C26373 * ae) * ce) / C26351;
    const double C674 =
        C26426 *
            (2 * C26453 - (ae * C26450) / C26351 +
             C26350 *
                 ((-(ae * C26350 * C26446) / C26137) / C26121 -
                  C26444 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                             C26137) /
                                C26121 -
                            (ae * C26446) / C26351))) -
        ((2 * C26384 + C26350 * C26423 + C26404 * ae) * ce) / C26351;
    const double C1260 = C26456 * ((-(ae * C26440) / C26137) / C26121 -
                                   C26437 / C26351 + C26350 * C26453);
    const double C1262 =
        C26456 *
        (2 * C26453 - (ae * C26450) / C26351 +
         C26350 *
             ((-(ae * C26350 * C26446) / C26137) / C26121 - C26444 / C26351 +
              C26350 *
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (ae * C26446) / C26351)));
    const double C1853 = (-(C26350 * C26437) / C26137) / C26121 -
                         (ae * C26432) / C26351 -
                         (C26426 * C26384 * ce) / C26351 +
                         C26426 * (C26426 * C26453 - (C26384 * ce) / C26351);
    const double C1854 =
        (-(ae * C26440) / C26137) / C26121 - C26437 / C26351 + C26350 * C26453 -
        (C26426 * C26423 * ce) / C26351 +
        C26426 *
            (C26426 *
                 ((-(ae * C26350 * C26446) / C26137) / C26121 -
                  C26444 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                             C26137) /
                                C26121 -
                            (ae * C26446) / C26351)) -
             (C26423 * ce) / C26351);
    const double C2363 =
        2 * (C26426 * C26453 - (C26384 * ce) / C26351) -
        ((C26384 + C26414 * C26516) * ce) / C26351 +
        C26426 *
            (C26453 - (C26426 * C26414 * ce) / C26351 +
             C26426 *
                 (C26426 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                             C26137) /
                                C26121 -
                            (ae * C26446) / C26351) -
                  (C26414 * ce) / C26351));
    const double C2744 = C26456 * (C26426 * C26453 - (C26384 * ce) / C26351);
    const double C2745 =
        C26456 *
        (C26453 - (C26426 * C26414 * ce) / C26351 +
         C26426 * (C26426 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) /
                              C26137) /
                                 C26121 -
                             (ae * C26446) / C26351) -
                   (C26414 * ce) / C26351));
    const double C3256 = (-(C26350 * C26437) / C26137) / C26121 -
                         (ae * C26432) / C26351 + C26453 * C26583;
    const double C3257 =
        (-(ae * C26440) / C26137) / C26121 - C26437 / C26351 + C26350 * C26453 +
        ((-(ae * C26711) / C26137) / C26121 - C26444 / C26351 +
         C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (ae * C26446) / C26351)) *
            C26583;
    const double C3791 =
        C26426 * C26453 - (C26384 * ce) / C26351 +
        (C26426 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (ae * C26446) / C26351) -
         (C26414 * ce) / C26351) *
            C26583;
    const double C4245 =
        2 * C26456 * C26453 +
        C26456 * (C26453 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (ae * C26446) / C26351) *
                      C26583);
    const double C11022 =
        3 * ((-(C26801 * ce) / C26137) / C26121 - C26437 / C26351 +
             C26426 * C26866) -
        ((2 * C26801 + C26426 * C26863) * ce) / C26351 +
        C26426 *
            (2 * C26866 - (C26863 * ce) / C26351 +
             C26426 *
                 ((-(C26426 * C26405 * ce) / C26137) / C26121 -
                  C26444 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26433) /
                             C26137) /
                                C26121 -
                            (C26405 * ce) / C26351)));
    const double C11420 =
        C26456 *
        (2 * C26866 - (C26863 * ce) / C26351 +
         C26426 *
             ((-(C26426 * C26405 * ce) / C26137) / C26121 - C26444 / C26351 +
              C26426 *
                  ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (C26405 * ce) / C26351)));
    const double C12400 =
        (-(C26801 * ce) / C26137) / C26121 - C26437 / C26351 + C26426 * C26866 +
        ((-(C26426 * C26405 * ce) / C26137) / C26121 - C26444 / C26351 +
         C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (C26405 * ce) / C26351)) *
            C26583;
    const double C12866 =
        2 * C26456 * C26866 +
        C26456 * (C26866 +
                  ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26433) / C26137) /
                       C26121 -
                   (C26405 * ce) / C26351) *
                      C26583);
    const double C243 =
        3 * ((-(C26499 * ce) / C26137) / C26121 - C26496 / C26351 +
             C26350 * C26512) -
        ((2 * C26499 + C26350 * C26509) * ce) / C26351 +
        C26350 *
            (2 * C26512 - (C26509 * ce) / C26351 +
             C26350 *
                 ((-(C26350 * C26505 * ce) / C26137) / C26121 -
                  C26503 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)));
    const double C789 =
        C26426 * ((-(C26499 * ce) / C26137) / C26121 - C26496 / C26351 +
                  C26350 * C26512) -
        (ae * (C26350 * C26383 + C26364 + C26373 * ce)) / C26351;
    const double C790 =
        (((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
          (C26404 * ce) / C26137) *
         ae) /
            C26121 +
        C26426 *
            (2 * C26512 - (C26509 * ce) / C26351 +
             C26350 *
                 ((-(C26350 * C26505 * ce) / C26137) / C26121 -
                  C26503 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)));
    const double C1379 = C26456 * ((-(C26499 * ce) / C26137) / C26121 -
                                   C26496 / C26351 + C26350 * C26512);
    const double C1380 =
        C26456 *
        (2 * C26512 - (C26509 * ce) / C26351 +
         C26350 *
             ((-(C26350 * C26505 * ce) / C26137) / C26121 - C26503 / C26351 +
              C26350 *
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                       C26121 -
                   (C26505 * ce) / C26351)));
    const double C1965 = (-(C26350 * C26496) / C26137) / C26121 -
                         (C26491 * ce) / C26351 -
                         (ae * C26426 * C26383) / C26351 +
                         C26426 * (C26426 * C26512 - (ae * C26383) / C26351);
    const double C1966 =
        (-(C26499 * ce) / C26137) / C26121 - C26496 / C26351 + C26350 * C26512 -
        (ae * C26426 * C26422) / C26351 +
        C26426 *
            (C26426 *
                 ((-(C26350 * C26505 * ce) / C26137) / C26121 -
                  C26503 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)) -
             (ae * C26422) / C26351);
    const double C2439 =
        2 * (C26426 * C26512 - (ae * C26383) / C26351) -
        (ae * (C26413 * C26516 + C26383)) / C26351 +
        C26426 *
            (C26512 - (ae * C26426 * C26413) / C26351 +
             C26426 *
                 (C26426 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351) -
                  (ae * C26413) / C26351));
    const double C2860 =
        C26426 * C26456 * C26512 - (ae * C26456 * C26383) / C26351;
    const double C2861 =
        C26456 * C26512 - (ae * C26456 * C26426 * C26413) / C26351 +
        C26426 *
            (C26426 * C26456 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                      C26121 -
                  (C26505 * ce) / C26351) -
             (ae * C26456 * C26413) / C26351);
    const double C3371 = (-(C26350 * C26496) / C26137) / C26121 -
                         (C26491 * ce) / C26351 + C26512 * C26583;
    const double C3372 =
        (-(C26499 * ce) / C26137) / C26121 - C26496 / C26351 + C26350 * C26512 +
        ((-(C26713 * ce) / C26137) / C26121 - C26503 / C26351 +
         C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                       C26121 -
                   (C26505 * ce) / C26351)) *
            C26583;
    const double C3899 =
        C26426 * (C26512 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                       C26121 -
                   (C26505 * ce) / C26351) *
                      C26583) -
        (ae * (C26413 * C26583 + C26383)) / C26351;
    const double C4325 =
        2 * C26456 * C26512 +
        C26456 * (C26512 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26492) / C26137) /
                       C26121 -
                   (C26505 * ce) / C26351) *
                      C26583);
    const double C11102 =
        3 * ((-(ae * C26811) / C26137) / C26121 - C26496 / C26351 +
             C26426 * C26875) +
        (((-2 * C26811) / C26137 - (C26426 * C26872) / C26137) * ae) / C26121 +
        C26426 *
            (2 * C26875 - (ae * C26872) / C26351 +
             C26426 *
                 ((-(ae * C26426 * C26402) / C26137) / C26121 -
                  C26503 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26492) /
                             C26137) /
                                C26121 -
                            (ae * C26402) / C26351)));
    const double C198 =
        3 * ((-(ae * C26470) / C26137) / C26121 - C26467 / C26351 +
             C26350 * C26483) +
        (((-2 * C26470) / C26137 - (C26350 * C26480) / C26137) * ae) / C26121 +
        C26350 *
            (2 * C26483 - (ae * C26480) / C26351 +
             C26350 *
                 ((-(ae * C26350 * C26476) / C26137) / C26121 -
                  C26474 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) /
                             C26137) /
                                C26121 -
                            (ae * C26476) / C26351)));
    const double C731 = C26426 * ((-(ae * C26470) / C26137) / C26121 -
                                  C26467 / C26351 + C26350 * C26483);
    const double C732 =
        C26426 *
        (2 * C26483 - (ae * C26480) / C26351 +
         C26350 *
             ((-(ae * C26350 * C26476) / C26137) / C26121 - C26474 / C26351 +
              C26350 *
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                       C26121 -
                   (ae * C26476) / C26351)));
    const double C1321 =
        C26456 * ((-(ae * C26470) / C26137) / C26121 - C26467 / C26351 +
                  C26350 * C26483) -
        ((C26365 + C26350 * C26384 + C26373 * ae) * ce) / C26351;
    const double C1322 =
        C26456 *
            (2 * C26483 - (ae * C26480) / C26351 +
             C26350 *
                 ((-(ae * C26350 * C26476) / C26137) / C26121 -
                  C26474 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) /
                             C26137) /
                                C26121 -
                            (ae * C26476) / C26351))) -
        ((2 * C26384 + C26350 * C26423 + C26404 * ae) * ce) / C26351;
    const double C1909 = (-(C26350 * C26467) / C26137) / C26121 -
                         (ae * C26462) / C26351 + C26483 * C26516;
    const double C1910 =
        (-(ae * C26470) / C26137) / C26121 - C26467 / C26351 + C26350 * C26483 +
        ((-(ae * C26350 * C26476) / C26137) / C26121 - C26474 / C26351 +
         C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                       C26121 -
                   (ae * C26476) / C26351)) *
            C26516;
    const double C2401 =
        2 * C26426 * C26483 +
        C26426 * (C26483 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                       C26121 -
                   (ae * C26476) / C26351) *
                      C26516);
    const double C2802 =
        C26456 * C26426 * C26483 - (C26426 * C26384 * ce) / C26351;
    const double C2803 =
        C26456 * (C26483 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                       C26121 -
                   (ae * C26476) / C26351) *
                      C26516) -
        ((C26384 + C26414 * C26516) * ce) / C26351;
    const double C3315 = (-(C26350 * C26467) / C26137) / C26121 -
                         (ae * C26462) / C26351 -
                         (C26456 * C26384 * ce) / C26351 +
                         C26456 * (C26456 * C26483 - (C26384 * ce) / C26351);
    const double C3316 =
        (-(ae * C26470) / C26137) / C26121 - C26467 / C26351 + C26350 * C26483 -
        (C26456 * C26423 * ce) / C26351 +
        C26456 *
            (C26456 *
                 ((-(ae * C26720) / C26137) / C26121 - C26474 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) /
                             C26137) /
                                C26121 -
                            (ae * C26476) / C26351)) -
             (C26423 * ce) / C26351);
    const double C3845 =
        C26426 * C26483 - (C26456 * C26799 * ce) / C26351 +
        C26456 *
            (C26456 * C26426 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) / C26137) /
                      C26121 -
                  (ae * C26476) / C26351) -
             (C26799 * ce) / C26351);
    const double C4287 =
        2 * (C26456 * C26483 - (C26384 * ce) / C26351) -
        ((C26384 + C26414 * C26583) * ce) / C26351 +
        C26456 *
            (C26483 - (C26456 * C26414 * ce) / C26351 +
             C26456 *
                 (C26456 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26463) /
                             C26137) /
                                C26121 -
                            (ae * C26476) / C26351) -
                  (C26414 * ce) / C26351));
    const double C21331 =
        3 * ((-(C26966 * ce) / C26137) / C26121 - C26467 / C26351 +
             C26456 * C26973) -
        ((2 * C26966 + C26456 * C26970) * ce) / C26351 +
        C26456 *
            (2 * C26973 - (C26970 * ce) / C26351 +
             C26456 *
                 ((-(C26456 * C26405 * ce) / C26137) / C26121 -
                  C26474 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26463) /
                             C26137) /
                                C26121 -
                            (C26405 * ce) / C26351)));
    const double C11172 =
        3 * ((-(ae * C26815) / C26137) / C26121 - C26535 / C26351 +
             C26426 * C26906) +
        (((-2 * C26815) / C26137 - (C26426 * C26903) / C26137) * ae) / C26121 +
        C26426 *
            (2 * C26906 - (ae * C26903) / C26351 +
             C26426 *
                 ((-(ae * C26426 * C26476) / C26137) / C26121 -
                  C26538 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26532) /
                             C26137) /
                                C26121 -
                            (ae * C26476) / C26351)));
    const double C11646 =
        2 * (C26426 * C26929 - (ae * C26840) / C26351) -
        (ae * (C26456 * C26903 + C26887 * ce)) / C26351 +
        C26426 *
            (C26929 - (ae * (C26456 * C26426 * C26476 + C26886)) / C26351 +
             C26426 *
                 (C26426 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26532) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351) -
                  (ae * (C26456 * C26476 + C26395)) / C26351));
    const double C12618 =
        (-(C26456 * C26497 * ce) / C26137) / C26121 - C26535 / C26351 +
        C26456 * C26929 -
        (ae * (C26456 * (C26456 * C26426 * C26476 + C26886) + C26815 +
               C26456 * C26880 * ce)) /
            C26351 +
        C26426 *
            (C26426 *
                 ((-(C26456 * C26505 * ce) / C26137) / C26121 -
                  C26538 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26532) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)) -
             (ae * (C26456 * (C26456 * C26476 + C26395) + C26468 +
                    C26456 * C26388 * ce)) /
                 C26351);
    const double C13008 =
        (((-2 * C26840) / C26137 -
          (C26456 * (C26456 * (C26456 * C26476 + C26395) + C26468 +
                     C26456 * C26388 * ce)) /
              C26137 -
          ((C26367 + C26388 * C26583) * ce) / C26137) *
         ae) /
            C26121 +
        C26426 *
            (2 * C26929 - ((C26497 + C26505 * C26583) * ce) / C26351 +
             C26456 *
                 ((-(C26456 * C26505 * ce) / C26137) / C26121 -
                  C26538 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26532) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)));
    const double C21453 =
        3 * ((-(C26977 * ce) / C26137) / C26121 - C26535 / C26351 +
             C26456 * C26929) -
        ((2 * C26977 + C26456 * C26979) * ce) / C26351 +
        C26456 *
            (2 * C26929 - (C26979 * ce) / C26351 +
             C26456 *
                 ((-(C26456 * C26505 * ce) / C26137) / C26121 -
                  C26538 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26532) /
                             C26137) /
                                C26121 -
                            (C26505 * ce) / C26351)));
    const double C414 =
        3 * ((-(C26554 * ce) / C26137) / C26121 - C26551 / C26351 +
             C26350 * C26567) -
        ((2 * C26554 + C26350 * C26564) * ce) / C26351 +
        C26350 *
            (2 * C26567 - (C26564 * ce) / C26351 +
             C26350 *
                 ((-(C26350 * C26560 * ce) / C26137) / C26121 -
                  C26558 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)));
    const double C991 = C26426 * ((-(C26554 * ce) / C26137) / C26121 -
                                  C26551 / C26351 + C26350 * C26567);
    const double C992 =
        C26426 *
        (2 * C26567 - (C26564 * ce) / C26351 +
         C26350 *
             ((-(C26350 * C26560 * ce) / C26137) / C26121 - C26558 / C26351 +
              C26350 *
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                       C26121 -
                   (C26560 * ce) / C26351)));
    const double C1581 =
        C26456 * ((-(C26554 * ce) / C26137) / C26121 - C26551 / C26351 +
                  C26350 * C26567) -
        (ae * (C26350 * C26383 + C26364 + C26373 * ce)) / C26351;
    const double C1582 =
        (((-2 * C26383) / C26137 - (C26350 * C26422) / C26137 -
          (C26404 * ce) / C26137) *
         ae) /
            C26121 +
        C26456 *
            (2 * C26567 - (C26564 * ce) / C26351 +
             C26350 *
                 ((-(C26350 * C26560 * ce) / C26137) / C26121 -
                  C26558 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)));
    const double C2147 = (-(C26350 * C26551) / C26137) / C26121 -
                         (C26546 * ce) / C26351 + C26567 * C26516;
    const double C2148 =
        (-(C26554 * ce) / C26137) / C26121 - C26551 / C26351 + C26350 * C26567 +
        ((-(C26350 * C26560 * ce) / C26137) / C26121 - C26558 / C26351 +
         C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                       C26121 -
                   (C26560 * ce) / C26351)) *
            C26516;
    const double C2549 =
        2 * C26426 * C26567 +
        C26426 * (C26567 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                       C26121 -
                   (C26560 * ce) / C26351) *
                      C26516);
    const double C3026 =
        C26456 * C26426 * C26567 - (ae * C26426 * C26383) / C26351;
    const double C3027 =
        C26456 * (C26567 +
                  ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                       C26121 -
                   (C26560 * ce) / C26351) *
                      C26516) -
        (ae * (C26413 * C26516 + C26383)) / C26351;
    const double C3553 = (-(C26350 * C26551) / C26137) / C26121 -
                         (C26546 * ce) / C26351 -
                         (ae * C26456 * C26383) / C26351 +
                         C26456 * (C26456 * C26567 - (ae * C26383) / C26351);
    const double C3554 =
        (-(C26554 * ce) / C26137) / C26121 - C26551 / C26351 + C26350 * C26567 -
        (ae * C26456 * C26422) / C26351 +
        C26456 *
            (C26456 *
                 ((-(C26727 * ce) / C26137) / C26121 - C26558 / C26351 +
                  C26350 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)) -
             (ae * C26422) / C26351);
    const double C4057 =
        C26426 * C26567 - (ae * C26456 * C26809) / C26351 +
        C26456 *
            (C26456 * C26426 *
                 ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) / C26137) /
                      C26121 -
                  (C26560 * ce) / C26351) -
             (ae * C26809) / C26351);
    const double C4435 =
        2 * (C26456 * C26567 - (ae * C26383) / C26351) -
        (ae * (C26413 * C26583 + C26383)) / C26351 +
        C26456 *
            (C26567 - (ae * C26456 * C26413) / C26351 +
             C26456 *
                 (C26456 * ((-(C26350 * std::pow(C26348, 6) * bs[6] * C26547) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351) -
                  (ae * C26413) / C26351));
    const double C21492 =
        3 * ((-(ae * C26981) / C26137) / C26121 - C26551 / C26351 +
             C26456 * C26988) +
        (((-2 * C26981) / C26137 - (C26456 * C26985) / C26137) * ae) / C26121 +
        C26456 *
            (2 * C26988 - (ae * C26985) / C26351 +
             C26456 *
                 ((-(ae * C26456 * C26402) / C26137) / C26121 -
                  C26558 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26547) /
                             C26137) /
                                C26121 -
                            (ae * C26402) / C26351)));
    const double C11255 =
        3 * ((-(C26816 * ce) / C26137) / C26121 - C26576 / C26351 +
             C26426 * C26915) -
        ((2 * C26816 + C26426 * C26912) * ce) / C26351 +
        C26426 *
            (2 * C26915 - (C26912 * ce) / C26351 +
             C26426 *
                 ((-(C26426 * C26560 * ce) / C26137) / C26121 -
                  C26579 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26573) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)));
    const double C11765 =
        (((-2 * C26707) / C26137 - (C26426 * C26897) / C26137 -
          (C26887 * ce) / C26137) *
         ae) /
            C26121 +
        C26456 *
            (2 * C26915 - (C26912 * ce) / C26351 +
             C26426 *
                 ((-(C26426 * C26560 * ce) / C26137) / C26121 -
                  C26579 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26573) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)));
    const double C12729 =
        (-(C26816 * ce) / C26137) / C26121 - C26576 / C26351 + C26426 * C26915 -
        (ae * C26456 * C26897) / C26351 +
        C26456 *
            (C26456 *
                 ((-(C26426 * C26560 * ce) / C26137) / C26121 -
                  C26579 / C26351 +
                  C26426 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26573) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351)) -
             (ae * C26897) / C26351);
    const double C13079 =
        2 * (C26456 * C26915 - (ae * C26707) / C26351) -
        (ae * (C26885 * C26583 + C26707)) / C26351 +
        C26456 *
            (C26915 - (ae * C26456 * C26885) / C26351 +
             C26456 *
                 (C26456 * ((-(C26426 * std::pow(C26348, 6) * bs[6] * C26573) /
                             C26137) /
                                C26121 -
                            (C26560 * ce) / C26351) -
                  (ae * C26885) / C26351));
    const double C21527 =
        3 * ((-(ae * C26990) / C26137) / C26121 - C26576 / C26351 +
             C26456 * C26997) +
        (((-2 * C26990) / C26137 - (C26456 * C26994) / C26137) * ae) / C26121 +
        C26456 *
            (2 * C26997 - (ae * C26994) / C26351 +
             C26456 *
                 ((-(ae * C26456 * C26446) / C26137) / C26121 -
                  C26579 / C26351 +
                  C26456 * ((-(C26456 * std::pow(C26348, 6) * bs[6] * C26573) /
                             C26137) /
                                C26121 -
                            (ae * C26446) / C26351)));
    const double C26162 = C26161 / C26137;
    const double C9530 = C9524 * C596;
    const double C9870 = C9868 * C596;
    const double C18518 = C18512 * C596;
    const double C18708 = C18706 * C596;
    const double C9532 = C9526 * C597;
    const double C9864 = C1002 * C597;
    const double C18520 = C18514 * C597;
    const double C18702 = C1390 * C597;
    const double C13634 = C10494 * C5040;
    const double C13628 = C9524 * C5040;
    const double C13942 = C10827 * C5040;
    const double C13936 = C9868 * C5040;
    const double C14113 = C11363 * C5040;
    const double C14528 = C11709 * C5040;
    const double C22530 = C18512 * C5040;
    const double C22746 = C19942 * C5040;
    const double C22740 = C18706 * C5040;
    const double C24194 = C20282 * C5040;
    const double C24348 = C20465 * C5040;
    const double C26241 = C26239 / C26137;
    const double C4776 = C259 * C4617;
    const double C4770 = C257 * C4617;
    const double C4934 = C430 * C4617;
    const double C4928 = C428 * C4617;
    const double C5807 = C1390 * C4617;
    const double C6029 = C1592 * C4617;
    const double C22606 = C18514 * C4617;
    const double C22600 = C18512 * C4617;
    const double C22814 = C18706 * C4617;
    const double C25762 = C20282 * C4617;
    const double C25916 = C20465 * C4617;
    const double C26286 = C26284 / C26137;
    const double C6418 = C259 * C6259;
    const double C6412 = C257 * C6259;
    const double C6576 = C430 * C6259;
    const double C6570 = C428 * C6259;
    const double C6980 = C800 * C6259;
    const double C7186 = C1002 * C6259;
    const double C15316 = C9526 * C6259;
    const double C15310 = C9524 * C6259;
    const double C15714 = C9868 * C6259;
    const double C16922 = C10494 * C6259;
    const double C17226 = C10827 * C6259;
    const double C14119 = C14117 * C27283;
    const double C16237 = C14117 * C27283;
    const double C12349 = C12347 * C27278;
    const double C5811 = C5810 * C27335;
    const double C6911 = C5810 * C27335;
    const double C3437 = C3436 * C27321;
    const double C6107 = C6106 * C27359;
    const double C7187 = C6106 * C27359;
    const double C3681 = C3680 * C3189;
    const double C7655 = C3680 * C7239;
    const double C9591 = C27525 * C673;
    const double C18582 = C27525 * C1260;
    const double C10553 = C27525 * C1853;
    const double C14187 = C27525 * C2744;
    const double C20340 = C27525 * C3256;
    const double C799 = C27526 * C789;
    const double C1389 = C27526 * C1379;
    const double C1971 = C27526 * C1965;
    const double C5735 = C27526 * C2860;
    const double C3377 = C27526 * C3371;
    const double C9653 = C27525 * C731;
    const double C18644 = C27525 * C1321;
    const double C10611 = C27525 * C1909;
    const double C14259 = C27525 * C2802;
    const double C20401 = C27525 * C3315;
    const double C1001 = C27527 * C991;
    const double C1591 = C27527 * C1581;
    const double C2153 = C27527 * C2147;
    const double C5957 = C27527 * C3026;
    const double C3559 = C27527 * C3553;
    const double C26163 = C26162 - C26152;
    const double C26243 = C26241 - C26228;
    const double C26288 = C26286 - C26273;
    const double C9594 = C9590 + C9591;
    const double C18585 = C18581 + C18582;
    const double C10555 = C10552 + C10553;
    const double C14188 = C14186 + C14187;
    const double C20344 = C20339 + C20340;
    const double C803 = C798 + C799;
    const double C1393 = C1388 + C1389;
    const double C1973 = C1970 + C1971;
    const double C5737 = C5734 + C5735;
    const double C3379 = C3376 + C3377;
    const double C9656 = C9652 + C9653;
    const double C18647 = C18643 + C18644;
    const double C10613 = C10610 + C10611;
    const double C14260 = C14258 + C14259;
    const double C20403 = C20400 + C20401;
    const double C1005 = C1000 + C1001;
    const double C1595 = C1590 + C1591;
    const double C2155 = C2152 + C2153;
    const double C5959 = C5956 + C5957;
    const double C3561 = C3558 + C3559;
    const double C10480 = C9524 * C26163;
    const double C10498 = C10494 * C26163;
    const double C10816 = C9868 * C26163;
    const double C10829 = C10827 * C26163;
    const double C16236 = C11363 * C26163;
    const double C16636 = C11709 * C26163;
    const double C20268 = C18512 * C26163;
    const double C20286 = C20282 * C26163;
    const double C20454 = C18706 * C26163;
    const double C20467 = C20465 * C26163;
    const double C24866 = C19942 * C26163;
    const double C85 =
        ((((0 - (C26135 * C26136) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26138 / C26137) /
             C26142 -
         ((C26135 * C26159 + 0) * de) / C26137) /
            C26142 -
        ((C26135 * (C26159 / C26142 -
                    ((C26135 * C26163 + C27481) * de) / C26137 + C26156) +
          C27517) *
         de) /
            C26137 +
        C26163 / C26142 - ((C26135 * C26156 + C27283) * de) / C26137;
    const double C86 = (C26159 / C26142 -
                        ((C26135 * C26163 + C27481) * de) / C26137 + C26156) /
                           C26142 -
                       ((C26135 * (C26163 / C26142 -
                                   ((C26135 * C26156 + C27283) * de) / C26137) +
                         C27507) *
                        de) /
                           C26137 +
                       2 * (C26156 / C26142 - (0 * de) / C26137);
    const double C87 =
        (C26163 / C26142 - ((C26135 * C26156 + C27283) * de) / C26137) /
            C26142 -
        ((C26135 * (C26156 / C26142 - (0 * de) / C26137) + C4561) * de) /
            C26137;
    const double C4564 =
        C26159 / C26142 - ((C26135 * C26163 + C27481) * de) / C26137 + C26156;
    const double C4565 =
        C26163 / C26142 - ((C26135 * C26156 + C27283) * de) / C26137;
    const double C2357 =
        ((((0 - (C26190 * C26225) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26209 / C26137) /
             C26142 -
         ((C26190 * C26242 + 0) * de) / C26137) /
            C26142 -
        ((C26190 * (C26242 / C26142 -
                    ((C26190 * C26243 + C27491) * de) / C26137 + C26237) +
          C27520) *
         de) /
            C26137 +
        C26243 / C26142 - ((C26190 * C26237 + C27335) * de) / C26137;
    const double C2358 =
        (C26242 / C26142 - ((C26190 * C26243 + C27491) * de) / C26137 +
         C26237) /
            C26142 -
        ((C26190 *
              (C26243 / C26142 - ((C26190 * C26237 + C27335) * de) / C26137) +
          C27512) *
         de) /
            C26137 +
        2 * (C26237 / C26142 - (0 * de) / C26137);
    const double C2359 =
        (C26243 / C26142 - ((C26190 * C26237 + C27335) * de) / C26137) /
            C26142 -
        ((C26190 * (C26237 / C26142 - (0 * de) / C26137) + C5039) * de) /
            C26137;
    const double C5092 =
        C26242 / C26142 - ((C26190 * C26243 + C27491) * de) / C26137 + C26237;
    const double C5093 =
        C26243 / C26142 - ((C26190 * C26237 + C27335) * de) / C26137;
    const double C4281 =
        ((((0 - (C26197 * C26270) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26256 / C26137) /
             C26142 -
         ((C26197 * C26287 + 0) * de) / C26137) /
            C26142 -
        ((C26197 * (C26287 / C26142 -
                    ((C26197 * C26288 + C27492) * de) / C26137 + C26282) +
          C27521) *
         de) /
            C26137 +
        C26288 / C26142 - ((C26197 * C26282 + C27359) * de) / C26137;
    const double C4282 =
        (C26287 / C26142 - ((C26197 * C26288 + C27492) * de) / C26137 +
         C26282) /
            C26142 -
        ((C26197 *
              (C26288 / C26142 - ((C26197 * C26282 + C27359) * de) / C26137) +
          C27515) *
         de) /
            C26137 +
        2 * (C26282 / C26142 - (0 * de) / C26137);
    const double C4283 =
        (C26288 / C26142 - ((C26197 * C26282 + C27359) * de) / C26137) /
            C26142 -
        ((C26197 * (C26282 / C26142 - (0 * de) / C26137) + C7239) * de) /
            C26137;
    const double C7340 =
        C26287 / C26142 - ((C26197 * C26288 + C27492) * de) / C26137 + C26282;
    const double C7341 =
        C26288 / C26142 - ((C26197 * C26282 + C27359) * de) / C26137;
    const double C18588 = C18585 * C27321;
    const double C22607 = C14188 * C27335;
    const double C23679 = C14188 * C27335;
    const double C20346 = C20344 * C27321;
    const double C18705 = C1393 * C593;
    const double C23293 = C1393 * C4561;
    const double C22747 = C5737 * C27283;
    const double C24867 = C5737 * C27283;
    const double C20463 = C3379 * C27283;
    const double C24349 = C3379 * C27283;
    const double C9659 = C9656 * C27347;
    const double C10615 = C10613 * C27347;
    const double C14261 = C14260 * C27359;
    const double C15317 = C14260 * C27359;
    const double C9867 = C1005 * C593;
    const double C13477 = C1005 * C4561;
    const double C10825 = C2155 * C27283;
    const double C13943 = C2155 * C27283;
    const double C14529 = C5959 * C27283;
    const double C16637 = C5959 * C27283;
    const double C13166 = C9524 * C4564;
    const double C13472 = C9868 * C4564;
    const double C23132 = C18512 * C4564;
    const double C23288 = C18706 * C4564;
    const double C13168 = C9526 * C4565;
    const double C13474 = C1002 * C4565;
    const double C23134 = C18514 * C4565;
    const double C23290 = C1390 * C4565;
    const double C5246 = C257 * C5092;
    const double C5402 = C428 * C5092;
    const double C25298 = C18512 * C5092;
    const double C25454 = C18706 * C5092;
    const double C5248 = C800 * C5093;
    const double C5404 = C1002 * C5093;
    const double C25300 = C11363 * C5093;
    const double C25456 = C19942 * C5093;
    const double C7494 = C257 * C7340;
    const double C7650 = C428 * C7340;
    const double C17378 = C9524 * C7340;
    const double C17684 = C9868 * C7340;
    const double C7496 = C1390 * C7341;
    const double C7652 = C1592 * C7341;
    const double C17380 = C11363 * C7341;
    const double C17686 = C11709 * C7341;
    d2eexx[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4564 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27517 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4565 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27507 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C4566 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C4561) *
              C27526 * C27527 * C27347 * C4562 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C4565 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27517 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C4564) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27507 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C4566 -
           (C84 * C610 + C74 * C614 + C83 * C608 + C73 * C613) * C4561) *
              C27526 * C27527 * C27347 * C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4617 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4562 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C4618 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
              C27526 * C27527 * C27517 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C4618 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C4562 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4617) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
              C27526 * C27527 * C27507 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C4617 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C4562 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C4618 -
           (C84 * C670 + C74 * C674 + C83 * C669 + C73 * C673) * C27335) *
              C27526 * C27527 * C4561) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C4562 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C27335) *
              C27517 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C27335 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C4562) *
              C27507 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27347) *
               C27526 * C27527 * C4562 -
           ((C84 * C728 + C74 * C732 + C83 * C727 + C73 * C731) * C27347 +
            (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C188) *
               C27526 * C27527 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C4564 +
                     (C233 * C96 + C27526 * C239) * C27517 - C257 * C4565 -
                     C258 * C27507 + C259 * C4566 + C260 * C4561) *
                        C27527 * C73 +
                    (C257 * C4564 + C258 * C27517 - C259 * C4565 -
                     C260 * C27507 + C261 * C4566 + C262 * C4561) *
                        C27527 * C74) *
                       C27347 * C4562 +
                   ((C800 * C4565 -
                     ((C233 * C606 + C27526 * C787) * C27517 +
                      (C233 * C601 + C27526 * C784) * C4564) +
                     C801 * C27507 - C802 * C4566 - C803 * C4561) *
                        C27527 * C73 +
                    (C802 * C4565 - (C801 * C27517 + C800 * C4564) +
                     C803 * C27507 - (C233 * C602 + C27526 * C786) * C4566 -
                     (C233 * C610 + C27526 * C790) * C4561) *
                        C27527 * C74) *
                       C27347 * C27335)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C4617 +
                     (C233 * C144 + C27526 * C296) * C4562 -
                     (C233 * C601 + C27526 * C784) * C4618 -
                     (C233 * C668 + C27526 * C853) * C27335) *
                        C27527 * C73 +
                    (C4770 + C4771 - C4772 - C4773) * C27527 * C74) *
                       C27517 +
                   ((C4772 - (C4771 + C4770) + C4773) * C27527 * C73 +
                    (C4774 - (C4775 + C4776) + C4777) * C27527 * C74) *
                       C27507 +
                   ((C4776 + C4775 - C4774 - C4777) * C27527 * C73 +
                    (C261 * C4617 + C313 * C4562 -
                     (C233 * C602 + C27526 * C786) * C4618 -
                     (C233 * C670 + C27526 * C856) * C27335) *
                        C27527 * C74) *
                       C4561) *
                  C27347) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C4562 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C27335) *
              C27517 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C27335 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C4562) *
              C27507 +
          (((C361 + C369) * C27527 * C73 + (C362 + C370) * C27527 * C74) *
               C4562 -
           (((C233 * C728 + C27526 * C924) * C27347 +
             (C233 * C602 + C27526 * C786) * C188) *
                C27527 * C74 +
            (C935 + C929) * C27527 * C73) *
               C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C4564 +
                     (C404 * C96 + C27527 * C410) * C27517 - C428 * C4565 -
                     C429 * C27507 + C430 * C4566 + C431 * C4561) *
                        C73 +
                    (C428 * C4564 + C429 * C27517 - C430 * C4565 -
                     C431 * C27507 + C432 * C4566 + C433 * C4561) *
                        C74) *
                       C27526 * C27347 * C4562 +
                   ((C1002 * C4565 -
                     ((C404 * C606 + C27527 * C989) * C27517 +
                      (C404 * C601 + C27527 * C986) * C4564) +
                     C1003 * C27507 - C1004 * C4566 - C1005 * C4561) *
                        C73 +
                    (C1004 * C4565 - (C1003 * C27517 + C1002 * C4564) +
                     C1005 * C27507 - (C404 * C602 + C27527 * C988) * C4566 -
                     (C404 * C610 + C27527 * C992) * C4561) *
                        C74) *
                       C27526 * C27347 * C27335)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C4617 +
                     (C404 * C144 + C27527 * C467) * C4562 -
                     (C404 * C601 + C27527 * C986) * C4618 -
                     (C404 * C668 + C27527 * C1055) * C27335) *
                        C73 +
                    (C4928 + C4929 - C4930 - C4931) * C74) *
                       C27526 * C27517 +
                   ((C4930 - (C4929 + C4928) + C4931) * C73 +
                    (C4932 - (C4933 + C4934) + C4935) * C74) *
                       C27526 * C27507 +
                   ((C4934 + C4933 - C4932 - C4935) * C73 +
                    (C432 * C4617 + C484 * C4562 -
                     (C404 * C602 + C27527 * C988) * C4618 -
                     (C404 * C670 + C27527 * C1058) * C27335) *
                        C74) *
                       C27526 * C4561) *
                  C27347) /
                 (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C4562 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C27335) *
              C27517 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C27335 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C4562) *
              C27507 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27526 * C4562 -
           (((C404 * C728 + C27527 * C1126) * C27347 +
             (C404 * C602 + C27527 * C988) * C188) *
                C74 +
            (C1137 + C1131) * C73) *
               C27526 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5040 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C5035 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C5041 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
              C27526 * C27527 * C27347 * C27520 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C5041 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C5035 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C5040) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
              C27526 * C27527 * C27347 * C27512 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C5040 +
           (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C5035 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C5041 -
           (C84 * C1792 + C74 * C1795 + C83 * C1790 + C73 * C1794) * C27283) *
              C27526 * C27527 * C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eexy[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5092 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27520 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C5093 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27512 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C5094 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C5039) *
              C27526 * C27527 * C5035 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C5093 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27520 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C5092) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27512 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C5094 -
           (C84 * C1851 + C74 * C1854 + C83 * C1850 + C73 * C1853) * C5039) *
              C27526 * C27527 * C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eexz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C27520 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C27512 +
           ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C188 +
            (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27347) *
               C27526 * C27527 * C5039) *
              C5035 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C27512 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C27520 -
           ((C84 * C1907 + C74 * C1910 + C83 * C1906 + C73 * C1909) * C27347 +
            (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C188) *
               C27526 * C27527 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5040 +
            (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
            C258 * C27283) *
               C27527 * C73 +
           (C257 * C5040 + C258 * C5035 - C259 * C5041 - C260 * C27283) *
               C27527 * C74) *
              C27347 * C27520 +
          ((C800 * C5041 -
            ((C233 * C606 + C27526 * C787) * C5035 +
             (C233 * C601 + C27526 * C784) * C5040) +
            C801 * C27283) *
               C27527 * C73 +
           (C802 * C5041 - (C801 * C5035 + C800 * C5040) + C803 * C27283) *
               C27527 * C74) *
              C27347 * C27512 +
          (((C233 * C1784 + C27526 * C1961) * C5040 +
            (C233 * C1789 + C27526 * C1964) * C5035 - C1972 * C5041 -
            C1973 * C27283) *
               C27527 * C73 +
           (C1972 * C5040 + C1973 * C5035 -
            (C233 * C1786 + C27526 * C1963) * C5041 -
            (C233 * C1792 + C27526 * C1966) * C27283) *
               C27527 * C74) *
              C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5092 +
            (C233 * C144 + C27526 * C296) * C27520 -
            (C233 * C601 + C27526 * C784) * C5093 -
            (C233 * C668 + C27526 * C853) * C27512 +
            (C233 * C1784 + C27526 * C1961) * C5094 +
            (C233 * C1849 + C27526 * C2023) * C5039) *
               C27527 * C73 +
           (C5246 + C5247 - C5248 - C5249 + C5250 + C5251) * C27527 * C74) *
              C5035 +
          ((C5248 - (C5247 + C5246) + C5249 - C5250 - C5251) * C27527 * C73 +
           (C802 * C5093 - (C312 * C27520 + C259 * C5092) + C869 * C27512 -
            (C233 * C1786 + C27526 * C1963) * C5094 -
            (C233 * C1851 + C27526 * C2025) * C5039) *
               C27527 * C74) *
              C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eeyz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C27520 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C27512 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C27527 * C73 +
            (C2089 + C2093) * C27527 * C74) *
               C5039) *
              C5035 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C27512 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C27520 -
           (((C233 * C1907 + C27526 * C2087) * C27347 +
             (C233 * C1786 + C27526 * C1963) * C188) *
                C27527 * C74 +
            (C2093 + C2089) * C27527 * C73) *
               C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C5040 +
            (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
            C429 * C27283) *
               C73 +
           (C428 * C5040 + C429 * C5035 - C430 * C5041 - C431 * C27283) * C74) *
              C27526 * C27347 * C27520 +
          ((C1002 * C5041 -
            ((C404 * C606 + C27527 * C989) * C5035 +
             (C404 * C601 + C27527 * C986) * C5040) +
            C1003 * C27283) *
               C73 +
           (C1004 * C5041 - (C1003 * C5035 + C1002 * C5040) + C1005 * C27283) *
               C74) *
              C27526 * C27347 * C27512 +
          (((C404 * C1784 + C27527 * C2143) * C5040 +
            (C404 * C1789 + C27527 * C2146) * C5035 - C2154 * C5041 -
            C2155 * C27283) *
               C73 +
           (C2154 * C5040 + C2155 * C5035 -
            (C404 * C1786 + C27527 * C2145) * C5041 -
            (C404 * C1792 + C27527 * C2148) * C27283) *
               C74) *
              C27526 * C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eezy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C5092 +
                     (C404 * C144 + C27527 * C467) * C27520 -
                     (C404 * C601 + C27527 * C986) * C5093 -
                     (C404 * C668 + C27527 * C1055) * C27512 +
                     (C404 * C1784 + C27527 * C2143) * C5094 +
                     (C404 * C1849 + C27527 * C2205) * C5039) *
                        C73 +
                    (C5402 + C5403 - C5404 - C5405 + C5406 + C5407) * C74) *
                       C27526 * C5035 +
                   ((C5404 - (C5403 + C5402) + C5405 - C5406 - C5407) * C73 +
                    (C1004 * C5093 - (C483 * C27520 + C430 * C5092) +
                     C1071 * C27512 - (C404 * C1786 + C27527 * C2145) * C5094 -
                     (C404 * C1851 + C27527 * C2207) * C5039) *
                        C74) *
                       C27526 * C27283) *
                  C27347) /
                 (p * q * std::sqrt(p + q));
    d2eezz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C27520 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C27512 +
           (((C404 * C1784 + C27527 * C2143) * C188 +
             (C404 * C1905 + C27527 * C2267) * C27347) *
                C73 +
            (C2271 + C2275) * C74) *
               C27526 * C5039) *
              C5035 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C27512 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C27520 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C74 +
            (C2275 + C2271) * C73) *
               C27526 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[2] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5040 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C5035 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C5041 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
               C27526 * C27527 * C27492 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C5041 -
            ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C5035 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C5040) +
            (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27283) *
               C27526 * C27527 * C27359) *
              C4562 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C5041 -
            ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C5035 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C5040) +
            (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
               C27526 * C27527 * C27492 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C5040 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C5035 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C5041 -
            (C84 * C5525 + C74 * C5526 + C83 * C2680 + C73 * C2686) * C27283) *
               C27526 * C27527 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4617 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4562 -
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C4618 -
            (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
               C27526 * C27527 * C5035 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C4618 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C4562 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4617) +
            (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
               C27526 * C27527 * C27283) *
              C27492 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C4618 -
            ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C4562 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C4617) +
            (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27335) *
               C27526 * C27527 * C5035 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C4617 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C4562 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C4618 -
            (C84 * C5593 + C74 * C5594 + C83 * C2740 + C73 * C2744) * C27335) *
               C27526 * C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1313 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27492 -
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1314 -
            (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
               C27526 * C27527 * C4562 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C1314 -
            ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27492 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1313) +
            (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C5035 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C1314 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27492 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1313) +
            (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
               C27526 * C27527 * C4562 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C1313 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27492 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C1314 -
            (C84 * C5661 + C74 * C5662 + C83 * C2798 + C73 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C5040 +
             (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
             C258 * C27283) *
                C27527 * C73 +
            (C257 * C5040 + C258 * C5035 - C259 * C5041 - C260 * C27283) *
                C27527 * C74) *
               C27492 +
           ((C1390 * C5041 -
             ((C233 * C1196 + C27526 * C1377) * C5035 +
              (C233 * C1191 + C27526 * C1374) * C5040) +
             C1391 * C27283) *
                C27527 * C73 +
            (C1392 * C5041 - (C1391 * C5035 + C1390 * C5040) + C1393 * C27283) *
                C27527 * C74) *
               C27359) *
              C4562 +
          (((C800 * C5041 -
             ((C233 * C606 + C27526 * C787) * C5035 +
              (C233 * C601 + C27526 * C784) * C5040) +
             C801 * C27283) *
                C27527 * C73 +
            (C802 * C5041 - (C801 * C5035 + C800 * C5040) + C803 * C27283) *
                C27527 * C74) *
               C27492 +
           (((C233 * C2673 + C27526 * C2855) * C5040 +
             (C233 * C2679 + C27526 * C2859) * C5035 - C5736 * C5041 -
             C5737 * C27283) *
                C27527 * C73 +
            (C5736 * C5040 + C5737 * C5035 -
             (C233 * C5523 + C27526 * C5729) * C5041 -
             (C233 * C5525 + C27526 * C5730) * C27283) *
                C27527 * C74) *
               C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[2] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C4617 +
                      (C233 * C144 + C27526 * C296) * C4562 -
                      (C233 * C601 + C27526 * C784) * C4618 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C27527 * C73 +
                     (C4770 + C4771 - C4772 - C4773) * C27527 * C74) *
                        C5035 +
                    ((C4772 - (C4771 + C4770) + C4773) * C27527 * C73 +
                     (C4774 - (C4775 + C4776) + C4777) * C27527 * C74) *
                        C27283) *
                       C27492 +
                   ((((C233 * C2673 + C27526 * C2855) * C4618 -
                      ((C233 * C1257 + C27526 * C1445) * C4562 +
                       (C233 * C1191 + C27526 * C1374) * C4617) +
                      (C233 * C2739 + C27526 * C2913) * C27335) *
                         C27527 * C73 +
                     (C5805 - (C5806 + C5807) + C5811) * C27527 * C74) *
                        C5035 +
                    ((C5807 + C5806 - C5805 - C5811) * C27527 * C73 +
                     (C1392 * C4617 + C1455 * C4562 -
                      (C233 * C5523 + C27526 * C5729) * C4618 -
                      (C233 * C5593 + C27526 * C5803) * C27335) *
                         C27527 * C74) *
                        C27283) *
                       C27359)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[2] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C1313 +
                      (C233 * C189 + C27526 * C350) * C27492 -
                      (C233 * C1191 + C27526 * C1374) * C1314 -
                      (C233 * C1316 + C27526 * C1507) * C27359) *
                         C27527 * C73 +
                     (C1512 + C1513 - C1514 - C1524) * C27527 * C74) *
                        C4562 +
                    (((C233 * C2673 + C27526 * C2855) * C1314 -
                      ((C233 * C726 + C27526 * C922) * C27492 +
                       (C233 * C601 + C27526 * C784) * C1313) +
                      (C233 * C2797 + C27526 * C2967) * C27359) *
                         C27527 * C73 +
                     (C5879 - (C5880 + C5881) + C5885) * C27527 * C74) *
                        C27335) *
                       C5035 +
                   (((C1514 - (C1513 + C1512) + C1524) * C27527 * C73 +
                     (C1517 - (C1518 + C1519) + C1525) * C27527 * C74) *
                        C4562 +
                    ((C5881 + C5880 - C5879 - C5885) * C27527 * C73 +
                     (C802 * C1313 + C933 * C27492 -
                      (C233 * C5523 + C27526 * C5729) * C1314 -
                      (C233 * C5661 + C27526 * C5877) * C27359) *
                         C27527 * C74) *
                        C27335) *
                       C27283)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C5040 +
             (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
             C429 * C27283) *
                C73 +
            (C428 * C5040 + C429 * C5035 - C430 * C5041 - C431 * C27283) *
                C74) *
               C27526 * C27492 +
           ((C1592 * C5041 -
             ((C404 * C1196 + C27527 * C1579) * C5035 +
              (C404 * C1191 + C27527 * C1576) * C5040) +
             C1593 * C27283) *
                C73 +
            (C1594 * C5041 - (C1593 * C5035 + C1592 * C5040) + C1595 * C27283) *
                C74) *
               C27526 * C27359) *
              C4562 +
          (((C1002 * C5041 -
             ((C404 * C606 + C27527 * C989) * C5035 +
              (C404 * C601 + C27527 * C986) * C5040) +
             C1003 * C27283) *
                C73 +
            (C1004 * C5041 - (C1003 * C5035 + C1002 * C5040) + C1005 * C27283) *
                C74) *
               C27526 * C27492 +
           (((C404 * C2673 + C27527 * C3021) * C5040 +
             (C404 * C2679 + C27527 * C3025) * C5035 - C5958 * C5041 -
             C5959 * C27283) *
                C73 +
            (C5958 * C5040 + C5959 * C5035 -
             (C404 * C5523 + C27527 * C5951) * C5041 -
             (C404 * C5525 + C27527 * C5952) * C27283) *
                C74) *
               C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[2] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C4617 +
                      (C404 * C144 + C27527 * C467) * C4562 -
                      (C404 * C601 + C27527 * C986) * C4618 -
                      (C404 * C668 + C27527 * C1055) * C27335) *
                         C73 +
                     (C4928 + C4929 - C4930 - C4931) * C74) *
                        C27526 * C5035 +
                    ((C4930 - (C4929 + C4928) + C4931) * C73 +
                     (C4932 - (C4933 + C4934) + C4935) * C74) *
                        C27526 * C27283) *
                       C27492 +
                   ((((C404 * C2673 + C27527 * C3021) * C4618 -
                      ((C404 * C1257 + C27527 * C1647) * C4562 +
                       (C404 * C1191 + C27527 * C1576) * C4617) +
                      (C404 * C2739 + C27527 * C3079) * C27335) *
                         C73 +
                     (C6027 - (C6028 + C6029) + C6033) * C74) *
                        C27526 * C5035 +
                    ((C6029 + C6028 - C6027 - C6033) * C73 +
                     (C1594 * C4617 + C1657 * C4562 -
                      (C404 * C5523 + C27527 * C5951) * C4618 -
                      (C404 * C5593 + C27527 * C6025) * C27335) *
                         C74) *
                        C27526 * C27283) *
                       C27359)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[2] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C73 +
                     (C1714 + C1715 - C1716 - C1726) * C74) *
                        C27526 * C4562 +
                    (((C404 * C2673 + C27527 * C3021) * C1314 -
                      ((C404 * C726 + C27527 * C1124) * C27492 +
                       (C404 * C601 + C27527 * C986) * C1313) +
                      (C404 * C2797 + C27527 * C3133) * C27359) *
                         C73 +
                     (C6101 - (C6102 + C6103) + C6107) * C74) *
                        C27526 * C27335) *
                       C5035 +
                   (((C1716 - (C1715 + C1714) + C1726) * C73 +
                     (C1719 - (C1720 + C1721) + C1727) * C74) *
                        C27526 * C4562 +
                    ((C6103 + C6102 - C6101 - C6107) * C73 +
                     (C1004 * C1313 + C1135 * C27492 -
                      (C404 * C5523 + C27527 * C5951) * C1314 -
                      (C404 * C5661 + C27527 * C6099) * C27359) *
                         C74) *
                        C27526 * C27335) *
                       C27283)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27481 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
               C27526 * C27527 * C6157 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C26156 -
            ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27481 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C26163) +
            (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27283) *
               C27526 * C27527 * C27359) *
              C4562 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C26156 -
            ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27481 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C26163) +
            (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
               C27526 * C27527 * C6157 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C26163 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27481 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C26156 -
            (C84 * C5525 + C74 * C5526 + C83 * C2680 + C73 * C2686) * C27283) *
               C27526 * C27527 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4617 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4562 -
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C4618 -
            (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
               C27526 * C27527 * C27481 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C4618 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C4562 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4617) +
            (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
               C27526 * C27527 * C27283) *
              C6157 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C4618 -
            ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C4562 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C4617) +
            (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27335) *
               C27526 * C27527 * C27481 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C4617 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C4562 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C4618 -
            (C84 * C5593 + C74 * C5594 + C83 * C2740 + C73 * C2744) * C27335) *
               C27526 * C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6259 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6157 -
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C6260 -
            (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
               C27526 * C27527 * C4562 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C6260 -
            ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C6157 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C6259) +
            (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C27481 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C6260 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6157 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6259) +
            (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
               C27526 * C27527 * C4562 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C6259 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C6157 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C6260 -
            (C84 * C5661 + C74 * C5662 + C83 * C2798 + C73 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C26163 +
             (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
             C258 * C27283) *
                C27527 * C73 +
            (C257 * C26163 + C258 * C27481 - C259 * C26156 - C260 * C27283) *
                C27527 * C74) *
               C6157 +
           ((C1390 * C26156 -
             ((C233 * C1196 + C27526 * C1377) * C27481 +
              (C233 * C1191 + C27526 * C1374) * C26163) +
             C1391 * C27283) *
                C27527 * C73 +
            (C1392 * C26156 - (C1391 * C27481 + C1390 * C26163) +
             C1393 * C27283) *
                C27527 * C74) *
               C27359) *
              C4562 +
          (((C800 * C26156 -
             ((C233 * C606 + C27526 * C787) * C27481 +
              (C233 * C601 + C27526 * C784) * C26163) +
             C801 * C27283) *
                C27527 * C73 +
            (C802 * C26156 - (C801 * C27481 + C800 * C26163) + C803 * C27283) *
                C27527 * C74) *
               C6157 +
           (((C233 * C2673 + C27526 * C2855) * C26163 +
             (C233 * C2679 + C27526 * C2859) * C27481 - C5736 * C26156 -
             C5737 * C27283) *
                C27527 * C73 +
            (C5736 * C26163 + C5737 * C27481 -
             (C233 * C5523 + C27526 * C5729) * C26156 -
             (C233 * C5525 + C27526 * C5730) * C27283) *
                C27527 * C74) *
               C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C4617 +
                      (C233 * C144 + C27526 * C296) * C4562 -
                      (C233 * C601 + C27526 * C784) * C4618 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C27527 * C73 +
                     (C4770 + C4771 - C4772 - C4773) * C27527 * C74) *
                        C27481 +
                    ((C4772 - (C4771 + C4770) + C4773) * C27527 * C73 +
                     (C4774 - (C4775 + C4776) + C4777) * C27527 * C74) *
                        C27283) *
                       C6157 +
                   ((((C233 * C2673 + C27526 * C2855) * C4618 -
                      ((C233 * C1257 + C27526 * C1445) * C4562 +
                       (C233 * C1191 + C27526 * C1374) * C4617) +
                      (C233 * C2739 + C27526 * C2913) * C27335) *
                         C27527 * C73 +
                     (C5805 - (C5806 + C5807) + C5811) * C27527 * C74) *
                        C27481 +
                    ((C5807 + C5806 - C5805 - C5811) * C27527 * C73 +
                     (C1392 * C4617 + C1455 * C4562 -
                      (C233 * C5523 + C27526 * C5729) * C4618 -
                      (C233 * C5593 + C27526 * C5803) * C27335) *
                         C27527 * C74) *
                        C27283) *
                       C27359)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C6259 +
                      (C233 * C189 + C27526 * C350) * C6157 -
                      (C233 * C1191 + C27526 * C1374) * C6260 -
                      (C233 * C1316 + C27526 * C1507) * C27359) *
                         C27527 * C73 +
                     (C6412 + C6413 - C6414 - C6415) * C27527 * C74) *
                        C4562 +
                    (((C233 * C2673 + C27526 * C2855) * C6260 -
                      ((C233 * C726 + C27526 * C922) * C6157 +
                       (C233 * C601 + C27526 * C784) * C6259) +
                      (C233 * C2797 + C27526 * C2967) * C27359) *
                         C27527 * C73 +
                     (C6978 - (C6979 + C6980) + C6981) * C27527 * C74) *
                        C27335) *
                       C27481 +
                   (((C6414 - (C6413 + C6412) + C6415) * C27527 * C73 +
                     (C6416 - (C6417 + C6418) + C6419) * C27527 * C74) *
                        C4562 +
                    ((C6980 + C6979 - C6978 - C6981) * C27527 * C73 +
                     (C802 * C6259 + C933 * C6157 -
                      (C233 * C5523 + C27526 * C5729) * C6260 -
                      (C233 * C5661 + C27526 * C5877) * C27359) *
                         C27527 * C74) *
                        C27335) *
                       C27283)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C26163 +
             (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
             C429 * C27283) *
                C73 +
            (C428 * C26163 + C429 * C27481 - C430 * C26156 - C431 * C27283) *
                C74) *
               C27526 * C6157 +
           ((C1592 * C26156 -
             ((C404 * C1196 + C27527 * C1579) * C27481 +
              (C404 * C1191 + C27527 * C1576) * C26163) +
             C1593 * C27283) *
                C73 +
            (C1594 * C26156 - (C1593 * C27481 + C1592 * C26163) +
             C1595 * C27283) *
                C74) *
               C27526 * C27359) *
              C4562 +
          (((C1002 * C26156 -
             ((C404 * C606 + C27527 * C989) * C27481 +
              (C404 * C601 + C27527 * C986) * C26163) +
             C1003 * C27283) *
                C73 +
            (C1004 * C26156 - (C1003 * C27481 + C1002 * C26163) +
             C1005 * C27283) *
                C74) *
               C27526 * C6157 +
           (((C404 * C2673 + C27527 * C3021) * C26163 +
             (C404 * C2679 + C27527 * C3025) * C27481 - C5958 * C26156 -
             C5959 * C27283) *
                C73 +
            (C5958 * C26163 + C5959 * C27481 -
             (C404 * C5523 + C27527 * C5951) * C26156 -
             (C404 * C5525 + C27527 * C5952) * C27283) *
                C74) *
               C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C4617 +
                      (C404 * C144 + C27527 * C467) * C4562 -
                      (C404 * C601 + C27527 * C986) * C4618 -
                      (C404 * C668 + C27527 * C1055) * C27335) *
                         C73 +
                     (C4928 + C4929 - C4930 - C4931) * C74) *
                        C27526 * C27481 +
                    ((C4930 - (C4929 + C4928) + C4931) * C73 +
                     (C4932 - (C4933 + C4934) + C4935) * C74) *
                        C27526 * C27283) *
                       C6157 +
                   ((((C404 * C2673 + C27527 * C3021) * C4618 -
                      ((C404 * C1257 + C27527 * C1647) * C4562 +
                       (C404 * C1191 + C27527 * C1576) * C4617) +
                      (C404 * C2739 + C27527 * C3079) * C27335) *
                         C73 +
                     (C6027 - (C6028 + C6029) + C6033) * C74) *
                        C27526 * C27481 +
                    ((C6029 + C6028 - C6027 - C6033) * C73 +
                     (C1594 * C4617 + C1657 * C4562 -
                      (C404 * C5523 + C27527 * C5951) * C4618 -
                      (C404 * C5593 + C27527 * C6025) * C27335) *
                         C74) *
                        C27526 * C27283) *
                       C27359)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C6259 +
                      (C404 * C189 + C27527 * C521) * C6157 -
                      (C404 * C1191 + C27527 * C1576) * C6260 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C73 +
                     (C6570 + C6571 - C6572 - C6573) * C74) *
                        C27526 * C4562 +
                    (((C404 * C2673 + C27527 * C3021) * C6260 -
                      ((C404 * C726 + C27527 * C1124) * C6157 +
                       (C404 * C601 + C27527 * C986) * C6259) +
                      (C404 * C2797 + C27527 * C3133) * C27359) *
                         C73 +
                     (C7184 - (C7185 + C7186) + C7187) * C74) *
                        C27526 * C27335) *
                       C27481 +
                   (((C6572 - (C6571 + C6570) + C6573) * C73 +
                     (C6574 - (C6575 + C6576) + C6577) * C74) *
                        C27526 * C4562 +
                    ((C7186 + C7185 - C7184 - C7187) * C73 +
                     (C1004 * C6259 + C1135 * C6157 -
                      (C404 * C5523 + C27527 * C5951) * C6260 -
                      (C404 * C5661 + C27527 * C6099) * C27359) *
                         C74) *
                        C27526 * C27335) *
                       C27283)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[4] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
               C27526 * C27527 * C6157 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
               C27526 * C27527 * C27359) *
              C27520 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C2314 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27278) *
               C27526 * C27527 * C27359 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
               C27526 * C27527 * C6157) *
              C27512 +
          (((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2314 +
            (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27278) *
               C27526 * C27527 * C6157 -
           ((C84 * C2681 + C74 * C2687 + C83 * C2682 + C73 * C2688) * C27278 +
            (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C2314) *
               C27526 * C27527 * C27359) *
              C5039)) /
        (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5092 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27520 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C5093 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27512 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C5094 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C5039) *
              C27526 * C27527 * C27278 * C6157 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C5093 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27520 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C5092) +
           (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27512 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C5094 -
           (C84 * C2741 + C74 * C2745 + C83 * C2742 + C73 * C2746) * C5039) *
              C27526 * C27527 * C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6259 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6157 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C6260 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C27520 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C6260 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C6157 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C6259) +
           (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
              C27526 * C27527 * C27512 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C6259 +
           (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C6157 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C6260 -
           (C84 * C2799 + C74 * C2803 + C83 * C2800 + C73 * C2804) * C27359) *
              C27526 * C27527 * C5039) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eeyx[4] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C27527 * C73 +
                     (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                        C6157 -
                    ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                     ((C233 * C1196 + C27526 * C1377) * C27278 +
                      (C233 * C1191 + C27526 * C1374) * C2314) *
                         C27527 * C73) *
                        C27359) *
                       C27520 +
                   ((((C233 * C2673 + C27526 * C2855) * C2314 +
                      (C233 * C2679 + C27526 * C2859) * C27278) *
                         C27527 * C73 +
                     (C5736 * C2314 + C5737 * C27278) * C27527 * C74) *
                        C27359 -
                    ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C27527 * C73) *
                        C6157) *
                       C27512 +
                   ((((C233 * C1784 + C27526 * C1961) * C2314 +
                      (C233 * C1789 + C27526 * C1964) * C27278) *
                         C27527 * C73 +
                     (C1972 * C2314 + C1973 * C27278) * C27527 * C74) *
                        C6157 -
                    (((C233 * C2681 + C27526 * C2861) * C27278 +
                      (C233 * C2675 + C27526 * C2857) * C2314) *
                         C27527 * C74 +
                     ((C233 * C2682 + C27526 * C2862) * C27278 +
                      (C233 * C2676 + C27526 * C2858) * C2314) *
                         C27527 * C73) *
                        C27359) *
                       C5039)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5092 +
            (C233 * C144 + C27526 * C296) * C27520 -
            (C233 * C601 + C27526 * C784) * C5093 -
            (C233 * C668 + C27526 * C853) * C27512 +
            (C233 * C1784 + C27526 * C1961) * C5094 +
            (C233 * C1849 + C27526 * C2023) * C5039) *
               C27527 * C73 +
           (C5246 + C5247 - C5248 - C5249 + C5250 + C5251) * C27527 * C74) *
              C27278 * C6157 +
          (((C233 * C2673 + C27526 * C2855) * C5093 -
            ((C233 * C1257 + C27526 * C1445) * C27520 +
             (C233 * C1191 + C27526 * C1374) * C5092) +
            (C233 * C2739 + C27526 * C2913) * C27512 -
            (C233 * C2676 + C27526 * C2858) * C5094 -
            (C233 * C2742 + C27526 * C2914) * C5039) *
               C27527 * C73 +
           (C5736 * C5093 - (C1454 * C27520 + C1390 * C5092) + C5810 * C27512 -
            (C233 * C2675 + C27526 * C2857) * C5094 -
            (C233 * C2741 + C27526 * C2916) * C5039) *
               C27527 * C74) *
              C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[4] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C6259 +
                     (C233 * C189 + C27526 * C350) * C6157 -
                     (C233 * C1191 + C27526 * C1374) * C6260 -
                     (C233 * C1316 + C27526 * C1507) * C27359) *
                        C27527 * C73 +
                    (C6412 + C6413 - C6414 - C6415) * C27527 * C74) *
                       C27520 +
                   (((C233 * C2673 + C27526 * C2855) * C6260 -
                     ((C233 * C726 + C27526 * C922) * C6157 +
                      (C233 * C601 + C27526 * C784) * C6259) +
                     (C233 * C2797 + C27526 * C2967) * C27359) *
                        C27527 * C73 +
                    (C6978 - (C6979 + C6980) + C6981) * C27527 * C74) *
                       C27512 +
                   (((C233 * C1784 + C27526 * C1961) * C6259 +
                     (C233 * C1905 + C27526 * C2085) * C6157 -
                     (C233 * C2676 + C27526 * C2858) * C6260 -
                     (C233 * C2800 + C27526 * C2969) * C27359) *
                        C27527 * C73 +
                    (C1972 * C6259 + C2092 * C6157 -
                     (C233 * C2675 + C27526 * C2857) * C6260 -
                     (C233 * C2799 + C27526 * C2970) * C27359) *
                        C27527 * C74) *
                       C5039) *
                  C27278) /
                 (p * q * std::sqrt(p + q));
    d2eezx[4] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C2314 +
                      (C404 * C96 + C27527 * C410) * C27278) *
                         C73 +
                     (C428 * C2314 + C429 * C27278) * C74) *
                        C27526 * C6157 -
                    ((C1593 * C27278 + C1592 * C2314) * C74 +
                     ((C404 * C1196 + C27527 * C1579) * C27278 +
                      (C404 * C1191 + C27527 * C1576) * C2314) *
                         C73) *
                        C27526 * C27359) *
                       C27520 +
                   ((((C404 * C2673 + C27527 * C3021) * C2314 +
                      (C404 * C2679 + C27527 * C3025) * C27278) *
                         C73 +
                     (C5958 * C2314 + C5959 * C27278) * C74) *
                        C27526 * C27359 -
                    ((C1003 * C27278 + C1002 * C2314) * C74 +
                     ((C404 * C606 + C27527 * C989) * C27278 +
                      (C404 * C601 + C27527 * C986) * C2314) *
                         C73) *
                        C27526 * C6157) *
                       C27512 +
                   ((((C404 * C1784 + C27527 * C2143) * C2314 +
                      (C404 * C1789 + C27527 * C2146) * C27278) *
                         C73 +
                     (C2154 * C2314 + C2155 * C27278) * C74) *
                        C27526 * C6157 -
                    (((C404 * C2681 + C27527 * C3027) * C27278 +
                      (C404 * C2675 + C27527 * C3023) * C2314) *
                         C74 +
                     ((C404 * C2682 + C27527 * C3028) * C27278 +
                      (C404 * C2676 + C27527 * C3024) * C2314) *
                         C73) *
                        C27526 * C27359) *
                       C5039)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[4] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C5092 +
                     (C404 * C144 + C27527 * C467) * C27520 -
                     (C404 * C601 + C27527 * C986) * C5093 -
                     (C404 * C668 + C27527 * C1055) * C27512 +
                     (C404 * C1784 + C27527 * C2143) * C5094 +
                     (C404 * C1849 + C27527 * C2205) * C5039) *
                        C73 +
                    (C5402 + C5403 - C5404 - C5405 + C5406 + C5407) * C74) *
                       C27526 * C27278 * C6157 +
                   (((C404 * C2673 + C27527 * C3021) * C5093 -
                     ((C404 * C1257 + C27527 * C1647) * C27520 +
                      (C404 * C1191 + C27527 * C1576) * C5092) +
                     (C404 * C2739 + C27527 * C3079) * C27512 -
                     (C404 * C2676 + C27527 * C3024) * C5094 -
                     (C404 * C2742 + C27527 * C3080) * C5039) *
                        C73 +
                    (C5958 * C5093 - (C1656 * C27520 + C1592 * C5092) +
                     C6032 * C27512 - (C404 * C2675 + C27527 * C3023) * C5094 -
                     (C404 * C2741 + C27527 * C3082) * C5039) *
                        C74) *
                       C27526 * C27278 * C27359)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[4] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C6259 +
                     (C404 * C189 + C27527 * C521) * C6157 -
                     (C404 * C1191 + C27527 * C1576) * C6260 -
                     (C404 * C1316 + C27527 * C1709) * C27359) *
                        C73 +
                    (C6570 + C6571 - C6572 - C6573) * C74) *
                       C27526 * C27520 +
                   (((C404 * C2673 + C27527 * C3021) * C6260 -
                     ((C404 * C726 + C27527 * C1124) * C6157 +
                      (C404 * C601 + C27527 * C986) * C6259) +
                     (C404 * C2797 + C27527 * C3133) * C27359) *
                        C73 +
                    (C7184 - (C7185 + C7186) + C7187) * C74) *
                       C27526 * C27512 +
                   (((C404 * C1784 + C27527 * C2143) * C6259 +
                     (C404 * C1905 + C27527 * C2267) * C6157 -
                     (C404 * C2676 + C27527 * C3024) * C6260 -
                     (C404 * C2800 + C27527 * C3135) * C27359) *
                        C73 +
                    (C2154 * C6259 + C2274 * C6157 -
                     (C404 * C2675 + C27527 * C3023) * C6260 -
                     (C404 * C2799 + C27527 * C3136) * C27359) *
                        C74) *
                       C27526 * C5039) *
                  C27278) /
                 (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
               C27526 * C27527 * C27521 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
               C27526 * C27527 * C27515 +
           ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C2314 +
            (C83 * C3195 + C73 * C3199 + C84 * C3196 + C74 * C3200) * C27278) *
               C27526 * C27527 * C7239) *
              C4562 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C2314 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27278) *
               C27526 * C27527 * C27515 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
               C27526 * C27527 * C27521 -
           ((C84 * C3733 + C74 * C3737 + C83 * C3734 + C73 * C3738) * C27278 +
            (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C2314) *
               C27526 * C27527 * C7239) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4617 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4562 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C4618 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
              C27526 * C27527 * C27278 * C27521 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C4618 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C4562 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C4617) +
           (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27335) *
              C27526 * C27527 * C27278 * C27515 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C4617 +
           (C83 * C3252 + C73 * C3255 + C84 * C3253 + C74 * C3256) * C4562 -
           (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C4618 -
           (C84 * C3789 + C74 * C3791 + C83 * C3790 + C73 * C3792) * C27335) *
              C27526 * C27527 * C27278 * C7239)) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C7340 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27521 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C7341 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27515 +
           (C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C7342 +
           (C83 * C3311 + C73 * C3314 + C84 * C3312 + C74 * C3315) * C7239) *
              C27526 * C27527 * C4562 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C7341 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27521 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C7340) +
           (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27515 -
           (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C7342 -
           (C84 * C3843 + C74 * C3845 + C83 * C3844 + C73 * C3846) * C7239) *
              C27526 * C27527 * C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C27527 * C73 +
                     (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                        C27521 -
                    ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                     ((C233 * C1196 + C27526 * C1377) * C27278 +
                      (C233 * C1191 + C27526 * C1374) * C2314) *
                         C27527 * C73) *
                        C27515 +
                    (((C233 * C3190 + C27526 * C3367) * C2314 +
                      (C233 * C3195 + C27526 * C3370) * C27278) *
                         C27527 * C73 +
                     (C3378 * C2314 + C3379 * C27278) * C27527 * C74) *
                        C7239) *
                       C4562 +
                   ((((C233 * C2673 + C27526 * C2855) * C2314 +
                      (C233 * C2679 + C27526 * C2859) * C27278) *
                         C27527 * C73 +
                     (C5736 * C2314 + C5737 * C27278) * C27527 * C74) *
                        C27515 -
                    ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C27527 * C73) *
                        C27521 -
                    (((C233 * C3733 + C27526 * C3899) * C27278 +
                      (C233 * C3731 + C27526 * C3897) * C2314) *
                         C27527 * C74 +
                     ((C233 * C3734 + C27526 * C3900) * C27278 +
                      (C233 * C3732 + C27526 * C3898) * C2314) *
                         C27527 * C73) *
                        C7239) *
                       C27335)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C4617 +
                     (C233 * C144 + C27526 * C296) * C4562 -
                     (C233 * C601 + C27526 * C784) * C4618 -
                     (C233 * C668 + C27526 * C853) * C27335) *
                        C27527 * C73 +
                    (C4770 + C4771 - C4772 - C4773) * C27527 * C74) *
                       C27278 * C27521 +
                   (((C233 * C2673 + C27526 * C2855) * C4618 -
                     ((C233 * C1257 + C27526 * C1445) * C4562 +
                      (C233 * C1191 + C27526 * C1374) * C4617) +
                     (C233 * C2739 + C27526 * C2913) * C27335) *
                        C27527 * C73 +
                    (C5805 - (C5806 + C5807) + C5811) * C27527 * C74) *
                       C27278 * C27515 +
                   (((C233 * C3190 + C27526 * C3367) * C4617 +
                     (C233 * C3252 + C27526 * C3429) * C4562 -
                     (C233 * C3732 + C27526 * C3898) * C4618 -
                     (C233 * C3790 + C27526 * C3951) * C27335) *
                        C27527 * C73 +
                    (C3378 * C4617 + C3436 * C4562 -
                     (C233 * C3731 + C27526 * C3897) * C4618 -
                     (C233 * C3789 + C27526 * C3952) * C27335) *
                        C27527 * C74) *
                       C27278 * C7239)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C7340 +
            (C233 * C189 + C27526 * C350) * C27521 -
            (C233 * C1191 + C27526 * C1374) * C7341 -
            (C233 * C1316 + C27526 * C1507) * C27515 +
            (C233 * C3190 + C27526 * C3367) * C7342 +
            (C233 * C3311 + C27526 * C3487) * C7239) *
               C27527 * C73 +
           (C7494 + C7495 - C7496 - C7497 + C7498 + C7499) * C27527 * C74) *
              C4562 +
          (((C233 * C2673 + C27526 * C2855) * C7341 -
            ((C233 * C726 + C27526 * C922) * C27521 +
             (C233 * C601 + C27526 * C784) * C7340) +
            (C233 * C2797 + C27526 * C2967) * C27515 -
            (C233 * C3732 + C27526 * C3898) * C7342 -
            (C233 * C3844 + C27526 * C4003) * C7239) *
               C27527 * C73 +
           (C5736 * C7341 - (C932 * C27521 + C800 * C7340) + C5884 * C27515 -
            (C233 * C3731 + C27526 * C3897) * C7342 -
            (C233 * C3843 + C27526 * C4004) * C7239) *
               C27527 * C74) *
              C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27527 * C405) * C2314 +
                      (C404 * C96 + C27527 * C410) * C27278) *
                         C73 +
                     (C428 * C2314 + C429 * C27278) * C74) *
                        C27526 * C27521 -
                    ((C1593 * C27278 + C1592 * C2314) * C74 +
                     ((C404 * C1196 + C27527 * C1579) * C27278 +
                      (C404 * C1191 + C27527 * C1576) * C2314) *
                         C73) *
                        C27526 * C27515 +
                    (((C404 * C3190 + C27527 * C3549) * C2314 +
                      (C404 * C3195 + C27527 * C3552) * C27278) *
                         C73 +
                     (C3560 * C2314 + C3561 * C27278) * C74) *
                        C27526 * C7239) *
                       C4562 +
                   ((((C404 * C2673 + C27527 * C3021) * C2314 +
                      (C404 * C2679 + C27527 * C3025) * C27278) *
                         C73 +
                     (C5958 * C2314 + C5959 * C27278) * C74) *
                        C27526 * C27515 -
                    ((C1003 * C27278 + C1002 * C2314) * C74 +
                     ((C404 * C606 + C27527 * C989) * C27278 +
                      (C404 * C601 + C27527 * C986) * C2314) *
                         C73) *
                        C27526 * C27521 -
                    (((C404 * C3733 + C27527 * C4057) * C27278 +
                      (C404 * C3731 + C27527 * C4055) * C2314) *
                         C74 +
                     ((C404 * C3734 + C27527 * C4058) * C27278 +
                      (C404 * C3732 + C27527 * C4056) * C2314) *
                         C73) *
                        C27526 * C7239) *
                       C27335)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C4617 +
                     (C404 * C144 + C27527 * C467) * C4562 -
                     (C404 * C601 + C27527 * C986) * C4618 -
                     (C404 * C668 + C27527 * C1055) * C27335) *
                        C73 +
                    (C4928 + C4929 - C4930 - C4931) * C74) *
                       C27526 * C27278 * C27521 +
                   (((C404 * C2673 + C27527 * C3021) * C4618 -
                     ((C404 * C1257 + C27527 * C1647) * C4562 +
                      (C404 * C1191 + C27527 * C1576) * C4617) +
                     (C404 * C2739 + C27527 * C3079) * C27335) *
                        C73 +
                    (C6027 - (C6028 + C6029) + C6033) * C74) *
                       C27526 * C27278 * C27515 +
                   (((C404 * C3190 + C27527 * C3549) * C4617 +
                     (C404 * C3252 + C27527 * C3611) * C4562 -
                     (C404 * C3732 + C27527 * C4056) * C4618 -
                     (C404 * C3790 + C27527 * C4109) * C27335) *
                        C73 +
                    (C3560 * C4617 + C3618 * C4562 -
                     (C404 * C3731 + C27527 * C4055) * C4618 -
                     (C404 * C3789 + C27527 * C4110) * C27335) *
                        C74) *
                       C27526 * C27278 * C7239)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C7340 +
                     (C404 * C189 + C27527 * C521) * C27521 -
                     (C404 * C1191 + C27527 * C1576) * C7341 -
                     (C404 * C1316 + C27527 * C1709) * C27515 +
                     (C404 * C3190 + C27527 * C3549) * C7342 +
                     (C404 * C3311 + C27527 * C3669) * C7239) *
                        C73 +
                    (C7650 + C7651 - C7652 - C7653 + C7654 + C7655) * C74) *
                       C27526 * C4562 +
                   (((C404 * C2673 + C27527 * C3021) * C7341 -
                     ((C404 * C726 + C27527 * C1124) * C27521 +
                      (C404 * C601 + C27527 * C986) * C7340) +
                     (C404 * C2797 + C27527 * C3133) * C27515 -
                     (C404 * C3732 + C27527 * C4056) * C7342 -
                     (C404 * C3844 + C27527 * C4161) * C7239) *
                        C73 +
                    (C5958 * C7341 - (C1134 * C27521 + C1002 * C7340) +
                     C6106 * C27515 - (C404 * C3731 + C27527 * C4055) * C7342 -
                     (C404 * C3843 + C27527 * C4162) * C7239) *
                        C74) *
                       C27526 * C27335) *
                  C27278) /
                 (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27481 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
              C27526 * C27527 * C27347 * C1779 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C26156 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27481 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C26163) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
              C27526 * C27527 * C27347 * C1780 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C26163 +
           (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27481 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C26156 -
           (C84 * C1792 + C74 * C1795 + C83 * C1790 + C73 * C1794) * C27283) *
              C27526 * C27527 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C85 +
          (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C75 -
          (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C86 -
          (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C76 +
          (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C87 +
          (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C77 -
          (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C88 -
          (C84 * C103 + C74 * C108 + C83 * C101 + C73 * C107) * C78) *
         C27526 * C27527 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27481 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
              C27526 * C27527 * C3187 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C26156 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27481 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C26163) +
           (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27283) *
              C27526 * C27527 * C3188 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C26163 +
           (C83 * C3195 + C73 * C3199 + C84 * C3196 + C74 * C3200) * C27481 -
           (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C26156 -
           (C84 * C3198 + C74 * C3201 + C83 * C3196 + C73 * C3200) * C27283) *
              C27526 * C27527 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1846 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C1779 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1847 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C1780 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1848 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C1781) *
              C27526 * C27527 * C27481 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C1847 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C1779 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1846) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C1780 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C1848 -
           (C84 * C1851 + C74 * C1854 + C83 * C1850 + C73 * C1853) * C1781) *
              C27526 * C27527 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
              C27526 * C27527 * C75 -
          ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
              C27526 * C27527 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27321) *
              C27526 * C27527 * C77 -
          ((C84 * C148 + C74 * C153 + C83 * C147 + C73 * C152) * C27321 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C143) *
              C27526 * C27527 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
               C27526 * C27527 * C27481 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27526 * C27527 * C27283) *
              C3187 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C143 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27321) *
               C27526 * C27527 * C27283 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
               C27526 * C27527 * C27481) *
              C3188 +
          (((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C143 +
            (C83 * C3252 + C73 * C3255 + C84 * C3253 + C74 * C3256) * C27321) *
               C27526 * C27527 * C27481 -
           ((C84 * C3254 + C74 * C3257 + C83 * C3253 + C73 * C3256) * C27321 +
            (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C143) *
               C27526 * C27527 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (-std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C1779 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C1780 +
           ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C188 +
            (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27347) *
               C27526 * C27527 * C1781) *
              C27481 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C1780 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C1779 -
           ((C84 * C1907 + C74 * C1910 + C83 * C1906 + C73 * C1909) * C27347 +
            (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C188) *
               C27526 * C27527 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
              C27526 * C27527 * C27321 * C75 -
          ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
              C27526 * C27527 * C27321 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27347) *
              C27526 * C27527 * C27321 * C77 -
          ((C84 * C193 + C74 * C198 + C83 * C192 + C73 * C197) * C27347 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C188) *
              C27526 * C27527 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3308 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C3187 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C3309 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C3188 +
           (C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C3310 +
           (C83 * C3311 + C73 * C3314 + C84 * C3312 + C74 * C3315) * C3189) *
              C27526 * C27527 * C27321 * C27481 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C3309 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C3187 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3308) +
           (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C3188 -
           (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C3310 -
           (C84 * C3313 + C74 * C3316 + C83 * C3312 + C73 * C3315) * C3189) *
              C27526 * C27527 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[6] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C26163 +
            (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
            C258 * C27283) *
               C27527 * C73 +
           (C257 * C26163 + C258 * C27481 - C259 * C26156 - C260 * C27283) *
               C27527 * C74) *
              C27347 * C1779 +
          ((C800 * C26156 -
            ((C233 * C606 + C27526 * C787) * C27481 +
             (C233 * C601 + C27526 * C784) * C26163) +
            C801 * C27283) *
               C27527 * C73 +
           (C802 * C26156 - (C801 * C27481 + C800 * C26163) + C803 * C27283) *
               C27527 * C74) *
              C27347 * C1780 +
          (((C233 * C1784 + C27526 * C1961) * C26163 +
            (C233 * C1789 + C27526 * C1964) * C27481 - C1972 * C26156 -
            C1973 * C27283) *
               C27527 * C73 +
           (C1972 * C26163 + C1973 * C27481 -
            (C233 * C1786 + C27526 * C1963) * C26156 -
            (C233 * C1792 + C27526 * C1966) * C27283) *
               C27527 * C74) *
              C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C85 +
           (C233 * C96 + C27526 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C27527 * C73 +
          (C257 * C85 + C258 * C75 - C259 * C86 - C260 * C76 + C261 * C87 +
           C262 * C77 - (C233 * C93 + C27526 * C238) * C88 -
           (C233 * C103 + C27526 * C243) * C78) *
              C27527 * C74) *
         C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C26163 +
            (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
            C258 * C27283) *
               C27527 * C73 +
           (C257 * C26163 + C258 * C27481 - C259 * C26156 - C260 * C27283) *
               C27527 * C74) *
              C3187 +
          ((C1390 * C26156 -
            ((C233 * C1196 + C27526 * C1377) * C27481 +
             (C233 * C1191 + C27526 * C1374) * C26163) +
            C1391 * C27283) *
               C27527 * C73 +
           (C1392 * C26156 - (C1391 * C27481 + C1390 * C26163) +
            C1393 * C27283) *
               C27527 * C74) *
              C3188 +
          (((C233 * C3190 + C27526 * C3367) * C26163 +
            (C233 * C3195 + C27526 * C3370) * C27481 - C3378 * C26156 -
            C3379 * C27283) *
               C27527 * C73 +
           (C3378 * C26163 + C3379 * C27481 -
            (C233 * C3192 + C27526 * C3369) * C26156 -
            (C233 * C3198 + C27526 * C3372) * C27283) *
               C27527 * C74) *
              C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C27527 * C73 +
           (C2027 + C2028 - C2029 - C2030 + C2031 + C2035) * C27527 * C74) *
              C27481 +
          ((C2029 - (C2028 + C2027) + C2030 - C2031 - C2035) * C27527 * C73 +
           (C802 * C1847 - (C312 * C1779 + C259 * C1846) + C869 * C1780 -
            (C233 * C1786 + C27526 * C1963) * C1848 -
            (C233 * C1851 + C27526 * C2025) * C1781) *
               C27527 * C74) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C27527 * C73 +
           (C302 + C314) * C27527 * C74) *
              C75 -
          ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) * C76 +
          ((C307 + C315) * C27527 * C73 + (C308 + C316) * C27527 * C74) * C77 -
          (((C233 * C148 + C27526 * C300) * C27321 +
            (C233 * C93 + C27526 * C238) * C143) *
               C27527 * C74 +
           (C316 + C308) * C27527 * C73) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C27527 * C73 +
            (C302 + C314) * C27527 * C74) *
               C27481 -
           ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) *
               C27283) *
              C3187 +
          (((C1448 + C1456) * C27527 * C73 + (C1451 + C1457) * C27527 * C74) *
               C27283 -
           ((C1456 + C1448) * C27527 * C74 +
            ((C233 * C1257 + C27526 * C1445) * C27321 +
             (C233 * C1191 + C27526 * C1374) * C143) *
                C27527 * C73) *
               C27481) *
              C3188 +
          ((((C233 * C3190 + C27526 * C3367) * C143 +
             (C233 * C3252 + C27526 * C3429) * C27321) *
                C27527 * C73 +
            (C3433 + C3437) * C27527 * C74) *
               C27481 -
           (((C233 * C3254 + C27526 * C3431) * C27321 +
             (C233 * C3192 + C27526 * C3369) * C143) *
                C27527 * C74 +
            (C3437 + C3433) * C27527 * C73) *
               C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[6] +=
        (-std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C1779 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C1780 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C27527 * C73 +
            (C2089 + C2093) * C27527 * C74) *
               C1781) *
              C27481 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C1780 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C1779 -
           (((C233 * C1907 + C27526 * C2087) * C27347 +
             (C233 * C1786 + C27526 * C1963) * C188) *
                C27527 * C74 +
            (C2093 + C2089) * C27527 * C73) *
               C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C27527 * C73 +
           (C356 + C368) * C27527 * C74) *
              C27321 * C75 -
          ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
              C27321 * C76 +
          ((C361 + C369) * C27527 * C73 + (C362 + C370) * C27527 * C74) *
              C27321 * C77 -
          (((C233 * C193 + C27526 * C354) * C27347 +
            (C233 * C93 + C27526 * C238) * C188) *
               C27527 * C74 +
           (C370 + C362) * C27527 * C73) *
              C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C3308 +
            (C233 * C189 + C27526 * C350) * C3187 -
            (C233 * C1191 + C27526 * C1374) * C3309 -
            (C233 * C1316 + C27526 * C1507) * C3188 +
            (C233 * C3190 + C27526 * C3367) * C3310 +
            (C233 * C3311 + C27526 * C3487) * C3189) *
               C27527 * C73 +
           (C3491 + C3492 - C3493 - C3494 + C3495 + C3499) * C27527 * C74) *
              C27321 * C27481 +
          ((C3493 - (C3492 + C3491) + C3494 - C3495 - C3499) * C27527 * C73 +
           (C1392 * C3309 - (C366 * C3187 + C259 * C3308) + C1523 * C3188 -
            (C233 * C3192 + C27526 * C3369) * C3310 -
            (C233 * C3313 + C27526 * C3489) * C3189) *
               C27527 * C74) *
              C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[6] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C73 +
           (C428 * C26163 + C429 * C27481 - C430 * C26156 - C431 * C27283) *
               C74) *
              C27526 * C27347 * C1779 +
          ((C1002 * C26156 -
            ((C404 * C606 + C27527 * C989) * C27481 +
             (C404 * C601 + C27527 * C986) * C26163) +
            C1003 * C27283) *
               C73 +
           (C1004 * C26156 - (C1003 * C27481 + C1002 * C26163) +
            C1005 * C27283) *
               C74) *
              C27526 * C27347 * C1780 +
          (((C404 * C1784 + C27527 * C2143) * C26163 +
            (C404 * C1789 + C27527 * C2146) * C27481 - C2154 * C26156 -
            C2155 * C27283) *
               C73 +
           (C2154 * C26163 + C2155 * C27481 -
            (C404 * C1786 + C27527 * C2145) * C26156 -
            (C404 * C1792 + C27527 * C2148) * C27283) *
               C74) *
              C27526 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C85 +
           (C404 * C96 + C27527 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C73 +
          (C428 * C85 + C429 * C75 - C430 * C86 - C431 * C76 + C432 * C87 +
           C433 * C77 - (C404 * C93 + C27527 * C409) * C88 -
           (C404 * C103 + C27527 * C414) * C78) *
              C74) *
         C27526 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C73 +
           (C428 * C26163 + C429 * C27481 - C430 * C26156 - C431 * C27283) *
               C74) *
              C27526 * C3187 +
          ((C1592 * C26156 -
            ((C404 * C1196 + C27527 * C1579) * C27481 +
             (C404 * C1191 + C27527 * C1576) * C26163) +
            C1593 * C27283) *
               C73 +
           (C1594 * C26156 - (C1593 * C27481 + C1592 * C26163) +
            C1595 * C27283) *
               C74) *
              C27526 * C3188 +
          (((C404 * C3190 + C27527 * C3549) * C26163 +
            (C404 * C3195 + C27527 * C3552) * C27481 - C3560 * C26156 -
            C3561 * C27283) *
               C73 +
           (C3560 * C26163 + C3561 * C27481 -
            (C404 * C3192 + C27527 * C3551) * C26156 -
            (C404 * C3198 + C27527 * C3554) * C27283) *
               C74) *
              C27526 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[6] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 -
            (C404 * C601 + C27527 * C986) * C1847 -
            (C404 * C668 + C27527 * C1055) * C1780 +
            (C404 * C1784 + C27527 * C2143) * C1848 +
            (C404 * C1849 + C27527 * C2205) * C1781) *
               C73 +
           (C2209 + C2210 - C2211 - C2212 + C2213 + C2217) * C74) *
              C27526 * C27481 +
          ((C2211 - (C2210 + C2209) + C2212 - C2213 - C2217) * C73 +
           (C1004 * C1847 - (C483 * C1779 + C430 * C1846) + C1071 * C1780 -
            (C404 * C1786 + C27527 * C2145) * C1848 -
            (C404 * C1851 + C27527 * C2207) * C1781) *
               C74) *
              C27526 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C143 +
            (C404 * C144 + C27527 * C467) * C27321) *
               C73 +
           (C473 + C485) * C74) *
              C27526 * C75 -
          ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C76 +
          ((C478 + C486) * C73 + (C479 + C487) * C74) * C27526 * C77 -
          (((C404 * C148 + C27527 * C471) * C27321 +
            (C404 * C93 + C27527 * C409) * C143) *
               C74 +
           (C487 + C479) * C73) *
              C27526 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C73 +
            (C473 + C485) * C74) *
               C27526 * C27481 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C27283) *
              C3187 +
          (((C1650 + C1658) * C73 + (C1653 + C1659) * C74) * C27526 * C27283 -
           ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                     (C404 * C1191 + C27527 * C1576) * C143) *
                                        C73) *
               C27526 * C27481) *
              C3188 +
          ((((C404 * C3190 + C27527 * C3549) * C143 +
             (C404 * C3252 + C27527 * C3611) * C27321) *
                C73 +
            (C3615 + C3619) * C74) *
               C27526 * C27481 -
           (((C404 * C3254 + C27527 * C3613) * C27321 +
             (C404 * C3192 + C27527 * C3551) * C143) *
                C74 +
            (C3619 + C3615) * C73) *
               C27526 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[6] +=
        (-std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C1779 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C1780 +
           (((C404 * C1784 + C27527 * C2143) * C188 +
             (C404 * C1905 + C27527 * C2267) * C27347) *
                C73 +
            (C2271 + C2275) * C74) *
               C27526 * C1781) *
              C27481 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C1780 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C1779 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C74 +
            (C2275 + C2271) * C73) *
               C27526 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C73 +
           (C527 + C539) * C74) *
              C27526 * C27321 * C75 -
          ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C27321 * C76 +
          ((C532 + C540) * C73 + (C533 + C541) * C74) * C27526 * C27321 * C77 -
          (((C404 * C193 + C27527 * C525) * C27347 +
            (C404 * C93 + C27527 * C409) * C188) *
               C74 +
           (C541 + C533) * C73) *
              C27526 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C3308 +
            (C404 * C189 + C27527 * C521) * C3187 -
            (C404 * C1191 + C27527 * C1576) * C3309 -
            (C404 * C1316 + C27527 * C1709) * C3188 +
            (C404 * C3190 + C27527 * C3549) * C3310 +
            (C404 * C3311 + C27527 * C3669) * C3189) *
               C73 +
           (C3673 + C3674 - C3675 - C3676 + C3677 + C3681) * C74) *
              C27526 * C27321 * C27481 +
          ((C3675 - (C3674 + C3673) + C3676 - C3677 - C3681) * C73 +
           (C1594 * C3309 - (C537 * C3187 + C430 * C3308) + C1725 * C3188 -
            (C404 * C3192 + C27527 * C3551) * C3310 -
            (C404 * C3313 + C27527 * C3671) * C3189) *
               C74) *
              C27526 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
              C27526 * C27527 * C27347 * C2310 -
          ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
              C27526 * C27527 * C27347 * C2311 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2314 +
           (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27278) *
              C27526 * C27527 * C27347 * C2312 -
          ((C84 * C2317 + C74 * C2321 + C83 * C2318 + C73 * C2322) * C27278 +
           (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C2314) *
              C27526 * C27527 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C592 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C598 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C593) *
              C27526 * C27527 * C27347 * C27491 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C597 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C591 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C596) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C592 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C598 -
           (C84 * C610 + C74 * C614 + C83 * C608 + C73 * C613) * C593) *
              C27526 * C27527 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
               C27526 * C27527 * C3187 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
               C27526 * C27527 * C3188 +
           ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C2314 +
            (C83 * C3195 + C73 * C3199 + C84 * C3196 + C74 * C3200) * C27278) *
               C27526 * C27527 * C3189) *
              C27491 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C2314 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27278) *
               C27526 * C27527 * C3188 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
               C27526 * C27527 * C3187 -
           ((C84 * C3733 + C74 * C3737 + C83 * C3734 + C73 * C3738) * C27278 +
            (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C2314) *
               C27526 * C27527 * C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2357 +
          (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C2310 -
          (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2358 -
          (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C2311 +
          (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2359 +
          (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C2312 -
          (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C2360 -
          (C84 * C2361 + C74 * C2363 + C83 * C2362 + C73 * C2364) * C2313) *
         C27526 * C27527 * C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C665 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27491 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C666 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
              C27526 * C27527 * C591 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C666 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27491 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C665) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
              C27526 * C27527 * C592 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C665 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27491 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C666 -
           (C84 * C670 + C74 * C674 + C83 * C669 + C73 * C673) * C27335) *
              C27526 * C27527 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C665 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27491 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C666 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
              C27526 * C27527 * C27278 * C3187 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C666 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27491 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C665) +
           (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27335) *
              C27526 * C27527 * C27278 * C3188 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C665 +
           (C83 * C3252 + C73 * C3255 + C84 * C3253 + C74 * C3256) * C27491 -
           (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C666 -
           (C84 * C3789 + C74 * C3791 + C83 * C3790 + C73 * C3792) * C27335) *
              C27526 * C27527 * C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
              C27526 * C27527 * C2310 -
          ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
              C27526 * C27527 * C2311 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C188 +
           (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27347) *
              C27526 * C27527 * C2312 -
          ((C84 * C2399 + C74 * C2401 + C83 * C2400 + C73 * C2402) * C27347 +
           (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C188) *
              C27526 * C27527 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C27491 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C27335) *
              C591 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C27335 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C27491) *
              C592 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27347) *
               C27526 * C27527 * C27491 -
           ((C84 * C728 + C74 * C732 + C83 * C727 + C73 * C731) * C27347 +
            (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C188) *
               C27526 * C27527 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3308 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C3187 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C3309 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C3188 +
           (C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C3310 +
           (C83 * C3311 + C73 * C3314 + C84 * C3312 + C74 * C3315) * C3189) *
              C27526 * C27527 * C27491 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C3309 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C3187 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C3308) +
           (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C3188 -
           (C84 * C3731 + C74 * C3735 + C83 * C3732 + C73 * C3736) * C3310 -
           (C84 * C3843 + C74 * C3845 + C83 * C3844 + C73 * C3846) * C3189) *
              C27526 * C27527 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] += (-std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C2314 +
                     (C233 * C96 + C27526 * C239) * C27278) *
                        C27527 * C73 +
                    (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                       C27347 * C2310 -
                   ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                    ((C233 * C606 + C27526 * C787) * C27278 +
                     (C233 * C601 + C27526 * C784) * C2314) *
                        C27527 * C73) *
                       C27347 * C2311 +
                   (((C233 * C1784 + C27526 * C1961) * C2314 +
                     (C233 * C1789 + C27526 * C1964) * C27278) *
                        C27527 * C73 +
                    (C1972 * C2314 + C1973 * C27278) * C27527 * C74) *
                       C27347 * C2312 -
                   (((C233 * C2317 + C27526 * C2439) * C27278 +
                     (C233 * C2315 + C27526 * C2437) * C2314) *
                        C27527 * C74 +
                    ((C233 * C2318 + C27526 * C2440) * C27278 +
                     (C233 * C2316 + C27526 * C2438) * C2314) *
                        C27527 * C73) *
                       C27347 * C2313)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C596 +
                     (C233 * C96 + C27526 * C239) * C591 - C257 * C597 -
                     C258 * C592 + C259 * C598 + C260 * C593) *
                        C27527 * C73 +
                    (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C592 +
                     C261 * C598 + C262 * C593) *
                        C27527 * C74) *
                       C27347 * C27491 +
                   ((C800 * C597 -
                     ((C233 * C606 + C27526 * C787) * C591 +
                      (C233 * C601 + C27526 * C784) * C596) +
                     C801 * C592 - C802 * C598 - C803 * C593) *
                        C27527 * C73 +
                    (C802 * C597 - (C801 * C591 + C800 * C596) + C803 * C592 -
                     (C233 * C602 + C27526 * C786) * C598 -
                     (C233 * C610 + C27526 * C790) * C593) *
                        C27527 * C74) *
                       C27347 * C27335)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C27527 * C73 +
                     (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                        C3187 -
                    ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                     ((C233 * C1196 + C27526 * C1377) * C27278 +
                      (C233 * C1191 + C27526 * C1374) * C2314) *
                         C27527 * C73) *
                        C3188 +
                    (((C233 * C3190 + C27526 * C3367) * C2314 +
                      (C233 * C3195 + C27526 * C3370) * C27278) *
                         C27527 * C73 +
                     (C3378 * C2314 + C3379 * C27278) * C27527 * C74) *
                        C3189) *
                       C27491 +
                   ((((C233 * C2673 + C27526 * C2855) * C2314 +
                      (C233 * C2679 + C27526 * C2859) * C27278) *
                         C27527 * C73 +
                     ((C233 * C2674 + C27526 * C2856) * C2314 +
                      (C233 * C2680 + C27526 * C2860) * C27278) *
                         C27527 * C74) *
                        C3188 -
                    ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C27527 * C73) *
                        C3187 -
                    (((C233 * C3733 + C27526 * C3899) * C27278 +
                      (C233 * C3731 + C27526 * C3897) * C2314) *
                         C27527 * C74 +
                     ((C233 * C3734 + C27526 * C3900) * C27278 +
                      (C233 * C3732 + C27526 * C3898) * C2314) *
                         C27527 * C73) *
                        C3189) *
                       C27335)) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C2357 +
           (C233 * C144 + C27526 * C296) * C2310 -
           (C233 * C601 + C27526 * C784) * C2358 -
           (C233 * C668 + C27526 * C853) * C2311 +
           (C233 * C1784 + C27526 * C1961) * C2359 +
           (C233 * C1849 + C27526 * C2023) * C2312 -
           (C233 * C2316 + C27526 * C2438) * C2360 -
           (C233 * C2362 + C27526 * C2475) * C2313) *
              C27527 * C73 +
          (C257 * C2357 + C311 * C2310 - C800 * C2358 - C868 * C2311 +
           C1972 * C2359 + C2034 * C2312 -
           (C233 * C2315 + C27526 * C2437) * C2360 -
           (C233 * C2361 + C27526 * C2476) * C2313) *
              C27527 * C74) *
         C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C665 +
            (C233 * C144 + C27526 * C296) * C27491 -
            (C233 * C601 + C27526 * C784) * C666 -
            (C233 * C668 + C27526 * C853) * C27335) *
               C27527 * C73 +
           (C858 + C859 - C860 - C870) * C27527 * C74) *
              C591 +
          ((C860 - (C859 + C858) + C870) * C27527 * C73 +
           (C863 - (C864 + C865) + C871) * C27527 * C74) *
              C592 +
          ((C865 + C864 - C863 - C871) * C27527 * C73 +
           (C261 * C665 + C313 * C27491 - (C233 * C602 + C27526 * C786) * C666 -
            (C233 * C670 + C27526 * C856) * C27335) *
               C27527 * C74) *
              C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C665 +
            (C233 * C144 + C27526 * C296) * C27491 -
            (C233 * C601 + C27526 * C784) * C666 -
            (C233 * C668 + C27526 * C853) * C27335) *
               C27527 * C73 +
           (C858 + C859 - C860 - C870) * C27527 * C74) *
              C27278 * C3187 +
          (((C233 * C2673 + C27526 * C2855) * C666 -
            ((C233 * C1257 + C27526 * C1445) * C27491 +
             (C233 * C1191 + C27526 * C1374) * C665) +
            (C233 * C2739 + C27526 * C2913) * C27335) *
               C27527 * C73 +
           ((C233 * C2674 + C27526 * C2856) * C666 -
            (C1454 * C27491 + C1390 * C665) +
            (C233 * C2740 + C27526 * C2915) * C27335) *
               C27527 * C74) *
              C27278 * C3188 +
          (((C233 * C3190 + C27526 * C3367) * C665 +
            (C233 * C3252 + C27526 * C3429) * C27491 -
            (C233 * C3732 + C27526 * C3898) * C666 -
            (C233 * C3790 + C27526 * C3951) * C27335) *
               C27527 * C73 +
           (C3378 * C665 + C3436 * C27491 -
            (C233 * C3731 + C27526 * C3897) * C666 -
            (C233 * C3789 + C27526 * C3952) * C27335) *
               C27527 * C74) *
              C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C27527 * C73 +
           (C356 + C368) * C27527 * C74) *
              C2310 -
          ((C934 + C928) * C27527 * C74 +
           ((C233 * C726 + C27526 * C922) * C27347 +
            (C233 * C601 + C27526 * C784) * C188) *
               C27527 * C73) *
              C2311 +
          (((C233 * C1784 + C27526 * C1961) * C188 +
            (C233 * C1905 + C27526 * C2085) * C27347) *
               C27527 * C73 +
           (C2089 + C2093) * C27527 * C74) *
              C2312 -
          (((C233 * C2399 + C27526 * C2511) * C27347 +
            (C233 * C2315 + C27526 * C2437) * C188) *
               C27527 * C74 +
           ((C233 * C2400 + C27526 * C2512) * C27347 +
            (C233 * C2316 + C27526 * C2438) * C188) *
               C27527 * C73) *
              C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C27491 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C27335) *
              C591 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C27335 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C27491) *
              C592 +
          (((C361 + C369) * C27527 * C73 + (C362 + C370) * C27527 * C74) *
               C27491 -
           (((C233 * C728 + C27526 * C924) * C27347 +
             (C233 * C602 + C27526 * C786) * C188) *
                C27527 * C74 +
            (C935 + C929) * C27527 * C73) *
               C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C3308 +
            (C233 * C189 + C27526 * C350) * C3187 -
            (C233 * C1191 + C27526 * C1374) * C3309 -
            (C233 * C1316 + C27526 * C1507) * C3188 +
            (C233 * C3190 + C27526 * C3367) * C3310 +
            (C233 * C3311 + C27526 * C3487) * C3189) *
               C27527 * C73 +
           (C3491 + C3492 - C3493 - C3494 + C3495 + C3499) * C27527 * C74) *
              C27491 +
          (((C233 * C2673 + C27526 * C2855) * C3309 -
            ((C233 * C726 + C27526 * C922) * C3187 +
             (C233 * C601 + C27526 * C784) * C3308) +
            (C233 * C2797 + C27526 * C2967) * C3188 -
            (C233 * C3732 + C27526 * C3898) * C3310 -
            (C233 * C3844 + C27526 * C4003) * C3189) *
               C27527 * C73 +
           ((C233 * C2674 + C27526 * C2856) * C3309 -
            (C932 * C3187 + C800 * C3308) +
            (C233 * C2798 + C27526 * C2968) * C3188 -
            (C233 * C3731 + C27526 * C3897) * C3310 -
            (C233 * C3843 + C27526 * C4004) * C3189) *
               C27527 * C74) *
              C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::pow(Pi, 2.5) * ((((C404 * C89 + C27527 * C405) * C2314 +
                                 (C404 * C96 + C27527 * C410) * C27278) *
                                    C73 +
                                (C428 * C2314 + C429 * C27278) * C74) *
                                   C27526 * C27347 * C2310 -
                               ((C1003 * C27278 + C1002 * C2314) * C74 +
                                ((C404 * C606 + C27527 * C989) * C27278 +
                                 (C404 * C601 + C27527 * C986) * C2314) *
                                    C73) *
                                   C27526 * C27347 * C2311 +
                               (((C404 * C1784 + C27527 * C2143) * C2314 +
                                 (C404 * C1789 + C27527 * C2146) * C27278) *
                                    C73 +
                                (C2154 * C2314 + C2155 * C27278) * C74) *
                                   C27526 * C27347 * C2312 -
                               (((C404 * C2317 + C27527 * C2549) * C27278 +
                                 (C404 * C2315 + C27527 * C2547) * C2314) *
                                    C74 +
                                ((C404 * C2318 + C27527 * C2550) * C27278 +
                                 (C404 * C2316 + C27527 * C2548) * C2314) *
                                    C73) *
                                   C27526 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C73 +
           (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C592 +
            C432 * C598 + C433 * C593) *
               C74) *
              C27526 * C27347 * C27491 +
          ((C1002 * C597 -
            ((C404 * C606 + C27527 * C989) * C591 +
             (C404 * C601 + C27527 * C986) * C596) +
            C1003 * C592 - C1004 * C598 - C1005 * C593) *
               C73 +
           (C1004 * C597 - (C1003 * C591 + C1002 * C596) + C1005 * C592 -
            (C404 * C602 + C27527 * C988) * C598 -
            (C404 * C610 + C27527 * C992) * C593) *
               C74) *
              C27526 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C2314 +
             (C404 * C96 + C27527 * C410) * C27278) *
                C73 +
            (C428 * C2314 + C429 * C27278) * C74) *
               C27526 * C3187 -
           ((C1593 * C27278 + C1592 * C2314) * C74 +
            ((C404 * C1196 + C27527 * C1579) * C27278 +
             (C404 * C1191 + C27527 * C1576) * C2314) *
                C73) *
               C27526 * C3188 +
           (((C404 * C3190 + C27527 * C3549) * C2314 +
             (C404 * C3195 + C27527 * C3552) * C27278) *
                C73 +
            (C3560 * C2314 + C3561 * C27278) * C74) *
               C27526 * C3189) *
              C27491 +
          ((((C404 * C2673 + C27527 * C3021) * C2314 +
             (C404 * C2679 + C27527 * C3025) * C27278) *
                C73 +
            ((C404 * C2674 + C27527 * C3022) * C2314 +
             (C404 * C2680 + C27527 * C3026) * C27278) *
                C74) *
               C27526 * C3188 -
           ((C1003 * C27278 + C1002 * C2314) * C74 +
            ((C404 * C606 + C27527 * C989) * C27278 +
             (C404 * C601 + C27527 * C986) * C2314) *
                C73) *
               C27526 * C3187 -
           (((C404 * C3733 + C27527 * C4057) * C27278 +
             (C404 * C3731 + C27527 * C4055) * C2314) *
                C74 +
            ((C404 * C3734 + C27527 * C4058) * C27278 +
             (C404 * C3732 + C27527 * C4056) * C2314) *
                C73) *
               C27526 * C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C2357 +
           (C404 * C144 + C27527 * C467) * C2310 -
           (C404 * C601 + C27527 * C986) * C2358 -
           (C404 * C668 + C27527 * C1055) * C2311 +
           (C404 * C1784 + C27527 * C2143) * C2359 +
           (C404 * C1849 + C27527 * C2205) * C2312 -
           (C404 * C2316 + C27527 * C2548) * C2360 -
           (C404 * C2362 + C27527 * C2585) * C2313) *
              C73 +
          (C428 * C2357 + C482 * C2310 - C1002 * C2358 - C1070 * C2311 +
           C2154 * C2359 + C2216 * C2312 -
           (C404 * C2315 + C27527 * C2547) * C2360 -
           (C404 * C2361 + C27527 * C2586) * C2313) *
              C74) *
         C27526 * C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 -
            (C404 * C601 + C27527 * C986) * C666 -
            (C404 * C668 + C27527 * C1055) * C27335) *
               C73 +
           (C1060 + C1061 - C1062 - C1072) * C74) *
              C27526 * C591 +
          ((C1062 - (C1061 + C1060) + C1072) * C73 +
           (C1065 - (C1066 + C1067) + C1073) * C74) *
              C27526 * C592 +
          ((C1067 + C1066 - C1065 - C1073) * C73 +
           (C432 * C665 + C484 * C27491 - (C404 * C602 + C27527 * C988) * C666 -
            (C404 * C670 + C27527 * C1058) * C27335) *
               C74) *
              C27526 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 -
            (C404 * C601 + C27527 * C986) * C666 -
            (C404 * C668 + C27527 * C1055) * C27335) *
               C73 +
           (C1060 + C1061 - C1062 - C1072) * C74) *
              C27526 * C27278 * C3187 +
          (((C404 * C2673 + C27527 * C3021) * C666 -
            ((C404 * C1257 + C27527 * C1647) * C27491 +
             (C404 * C1191 + C27527 * C1576) * C665) +
            (C404 * C2739 + C27527 * C3079) * C27335) *
               C73 +
           ((C404 * C2674 + C27527 * C3022) * C666 -
            (C1656 * C27491 + C1592 * C665) +
            (C404 * C2740 + C27527 * C3081) * C27335) *
               C74) *
              C27526 * C27278 * C3188 +
          (((C404 * C3190 + C27527 * C3549) * C665 +
            (C404 * C3252 + C27527 * C3611) * C27491 -
            (C404 * C3732 + C27527 * C4056) * C666 -
            (C404 * C3790 + C27527 * C4109) * C27335) *
               C73 +
           (C3560 * C665 + C3618 * C27491 -
            (C404 * C3731 + C27527 * C4055) * C666 -
            (C404 * C3789 + C27527 * C4110) * C27335) *
               C74) *
              C27526 * C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C73 +
           (C527 + C539) * C74) *
              C27526 * C2310 -
          ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                    (C404 * C601 + C27527 * C986) * C188) *
                                       C73) *
              C27526 * C2311 +
          (((C404 * C1784 + C27527 * C2143) * C188 +
            (C404 * C1905 + C27527 * C2267) * C27347) *
               C73 +
           (C2271 + C2275) * C74) *
              C27526 * C2312 -
          (((C404 * C2399 + C27527 * C2621) * C27347 +
            (C404 * C2315 + C27527 * C2547) * C188) *
               C74 +
           ((C404 * C2400 + C27527 * C2622) * C27347 +
            (C404 * C2316 + C27527 * C2548) * C188) *
               C73) *
              C27526 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C27491 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C27335) *
              C591 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C27335 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C27491) *
              C592 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27526 * C27491 -
           (((C404 * C728 + C27527 * C1126) * C27347 +
             (C404 * C602 + C27527 * C988) * C188) *
                C74 +
            (C1137 + C1131) * C73) *
               C27526 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C3308 +
            (C404 * C189 + C27527 * C521) * C3187 -
            (C404 * C1191 + C27527 * C1576) * C3309 -
            (C404 * C1316 + C27527 * C1709) * C3188 +
            (C404 * C3190 + C27527 * C3549) * C3310 +
            (C404 * C3311 + C27527 * C3669) * C3189) *
               C73 +
           (C3673 + C3674 - C3675 - C3676 + C3677 + C3681) * C74) *
              C27526 * C27491 +
          (((C404 * C2673 + C27527 * C3021) * C3309 -
            ((C404 * C726 + C27527 * C1124) * C3187 +
             (C404 * C601 + C27527 * C986) * C3308) +
            (C404 * C2797 + C27527 * C3133) * C3188 -
            (C404 * C3732 + C27527 * C4056) * C3310 -
            (C404 * C3844 + C27527 * C4161) * C3189) *
               C73 +
           ((C404 * C2674 + C27527 * C3022) * C3309 -
            (C1134 * C3187 + C1002 * C3308) +
            (C404 * C2798 + C27527 * C3134) * C3188 -
            (C404 * C3731 + C27527 * C4055) * C3310 -
            (C404 * C3843 + C27527 * C4162) * C3189) *
               C74) *
              C27526 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (-std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
               C27526 * C27527 * C27492 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
               C27526 * C27527 * C27359) *
              C1779 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C2314 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27278) *
               C27526 * C27527 * C27359 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
               C27526 * C27527 * C27492) *
              C1780 +
          (((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2314 +
            (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27278) *
               C27526 * C27527 * C27492 -
           ((C84 * C2681 + C74 * C2687 + C83 * C2682 + C73 * C2688) * C27278 +
            (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C2314) *
               C27526 * C27527 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C592 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C598 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C593) *
              C27526 * C27527 * C27492 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C597 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C591 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C596) +
           (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C592 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C598 -
           (C84 * C1200 + C74 * C1204 + C83 * C1198 + C73 * C1203) * C593) *
              C27526 * C27527 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
              C27526 * C27527 * C4197 -
          ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
              C27526 * C27527 * C4198 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C2314 +
           (C83 * C3195 + C73 * C3199 + C84 * C3196 + C74 * C3200) * C27278) *
              C27526 * C27527 * C4199 -
          ((C84 * C4203 + C74 * C4207 + C83 * C4204 + C73 * C4208) * C27278 +
           (C84 * C4201 + C74 * C4205 + C83 * C4202 + C73 * C4206) * C2314) *
              C27526 * C27527 * C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1846 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C1779 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1847 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C1780 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1848 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C1781) *
              C27526 * C27527 * C27278 * C27492 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C1847 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C1779 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1846) +
           (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C1780 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C1848 -
           (C84 * C2741 + C74 * C2745 + C83 * C2742 + C73 * C2746) * C1781) *
              C27526 * C27527 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
               C27526 * C27527 * C591 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27526 * C27527 * C592 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27321) *
               C27526 * C27527 * C593) *
              C27492 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C143 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27321) *
               C27526 * C27527 * C592 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
               C27526 * C27527 * C591 -
           ((C84 * C1258 + C74 * C1262 + C83 * C1256 + C73 * C1260) * C27321 +
            (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C143) *
               C27526 * C27527 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
              C27526 * C27527 * C27278 * C4197 -
          ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
              C27526 * C27527 * C27278 * C4198 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C143 +
           (C83 * C3252 + C73 * C3255 + C84 * C3253 + C74 * C3256) * C27321) *
              C27526 * C27527 * C27278 * C4199 -
          ((C84 * C4243 + C74 * C4245 + C83 * C4244 + C73 * C4246) * C27321 +
           (C84 * C4201 + C74 * C4205 + C83 * C4202 + C73 * C4206) * C143) *
              C27526 * C27527 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1313 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27492 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1314 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C1779 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C1314 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27492 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1313) +
           (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
              C27526 * C27527 * C1780 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1313 +
           (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27492 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C1314 -
           (C84 * C2799 + C74 * C2803 + C83 * C2800 + C73 * C2804) * C27359) *
              C27526 * C27527 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1313 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27492 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1314 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C27321 * C591 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C1314 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27492 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1313) +
           (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C592 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C1313 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27492 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C1314 -
           (C84 * C1318 + C74 * C1322 + C83 * C1317 + C73 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4281 +
          (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C4197 -
          (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C4282 -
          (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C4198 +
          (C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C4283 +
          (C83 * C3311 + C73 * C3314 + C84 * C3312 + C74 * C3315) * C4199 -
          (C84 * C4201 + C74 * C4205 + C83 * C4202 + C73 * C4206) * C4284 -
          (C84 * C4285 + C74 * C4287 + C83 * C4286 + C73 * C4288) * C4200) *
         C27526 * C27527 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[8] += (-std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C27527 * C73 +
                     (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                        C27492 -
                    ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                     ((C233 * C1196 + C27526 * C1377) * C27278 +
                      (C233 * C1191 + C27526 * C1374) * C2314) *
                         C27527 * C73) *
                        C27359) *
                       C1779 +
                   ((((C233 * C2673 + C27526 * C2855) * C2314 +
                      (C233 * C2679 + C27526 * C2859) * C27278) *
                         C27527 * C73 +
                     ((C233 * C2674 + C27526 * C2856) * C2314 +
                      (C233 * C2680 + C27526 * C2860) * C27278) *
                         C27527 * C74) *
                        C27359 -
                    ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C27527 * C73) *
                        C27492) *
                       C1780 +
                   ((((C233 * C1784 + C27526 * C1961) * C2314 +
                      (C233 * C1789 + C27526 * C1964) * C27278) *
                         C27527 * C73 +
                     (C1972 * C2314 + C1973 * C27278) * C27527 * C74) *
                        C27492 -
                    (((C233 * C2681 + C27526 * C2861) * C27278 +
                      (C233 * C2675 + C27526 * C2857) * C2314) *
                         C27527 * C74 +
                     ((C233 * C2682 + C27526 * C2862) * C27278 +
                      (C233 * C2676 + C27526 * C2858) * C2314) *
                         C27527 * C73) *
                        C27359) *
                       C1781)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C596 +
                     (C233 * C96 + C27526 * C239) * C591 - C257 * C597 -
                     C258 * C592 + C259 * C598 + C260 * C593) *
                        C27527 * C73 +
                    (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C592 +
                     C261 * C598 + C262 * C593) *
                        C27527 * C74) *
                       C27492 +
                   ((C1390 * C597 -
                     ((C233 * C1196 + C27526 * C1377) * C591 +
                      (C233 * C1191 + C27526 * C1374) * C596) +
                     C1391 * C592 - C1392 * C598 - C1393 * C593) *
                        C27527 * C73 +
                    (C1392 * C597 - (C1391 * C591 + C1390 * C596) +
                     C1393 * C592 - (C233 * C1192 + C27526 * C1376) * C598 -
                     (C233 * C1200 + C27526 * C1380) * C593) *
                        C27527 * C74) *
                       C27359) *
                  C27321) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C2314 +
                     (C233 * C96 + C27526 * C239) * C27278) *
                        C27527 * C73 +
                    (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                       C4197 -
                   ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                    ((C233 * C1196 + C27526 * C1377) * C27278 +
                     (C233 * C1191 + C27526 * C1374) * C2314) *
                        C27527 * C73) *
                       C4198 +
                   (((C233 * C3190 + C27526 * C3367) * C2314 +
                     (C233 * C3195 + C27526 * C3370) * C27278) *
                        C27527 * C73 +
                    (C3378 * C2314 + C3379 * C27278) * C27527 * C74) *
                       C4199 -
                   (((C233 * C4203 + C27526 * C4325) * C27278 +
                     (C233 * C4201 + C27526 * C4323) * C2314) *
                        C27527 * C74 +
                    ((C233 * C4204 + C27526 * C4326) * C27278 +
                     (C233 * C4202 + C27526 * C4324) * C2314) *
                        C27527 * C73) *
                       C4200) *
                  C27321) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[8] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C27527 * C73 +
           (C2027 + C2028 - C2029 - C2030 + C2031 + C2035) * C27527 * C74) *
              C27278 * C27492 +
          (((C233 * C2673 + C27526 * C2855) * C1847 -
            ((C233 * C1257 + C27526 * C1445) * C1779 +
             (C233 * C1191 + C27526 * C1374) * C1846) +
            (C233 * C2739 + C27526 * C2913) * C1780 -
            (C233 * C2676 + C27526 * C2858) * C1848 -
            (C233 * C2742 + C27526 * C2914) * C1781) *
               C27527 * C73 +
           ((C233 * C2674 + C27526 * C2856) * C1847 -
            (C1454 * C1779 + C1390 * C1846) +
            (C233 * C2740 + C27526 * C2915) * C1780 -
            (C233 * C2675 + C27526 * C2857) * C1848 -
            (C233 * C2741 + C27526 * C2916) * C1781) *
               C27527 * C74) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C27527 * C73 +
            (C302 + C314) * C27527 * C74) *
               C591 -
           ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) *
               C592 +
           ((C307 + C315) * C27527 * C73 + (C308 + C316) * C27527 * C74) *
               C593) *
              C27492 +
          (((C1448 + C1456) * C27527 * C73 + (C1451 + C1457) * C27527 * C74) *
               C592 -
           ((C1456 + C1448) * C27527 * C74 +
            ((C233 * C1257 + C27526 * C1445) * C27321 +
             (C233 * C1191 + C27526 * C1374) * C143) *
                C27527 * C73) *
               C591 -
           (((C233 * C1258 + C27526 * C1446) * C27321 +
             (C233 * C1192 + C27526 * C1376) * C143) *
                C27527 * C74 +
            (C1457 + C1451) * C27527 * C73) *
               C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C27527 * C73 +
           (C302 + C314) * C27527 * C74) *
              C27278 * C4197 -
          ((C1456 + C1448) * C27527 * C74 +
           ((C233 * C1257 + C27526 * C1445) * C27321 +
            (C233 * C1191 + C27526 * C1374) * C143) *
               C27527 * C73) *
              C27278 * C4198 +
          (((C233 * C3190 + C27526 * C3367) * C143 +
            (C233 * C3252 + C27526 * C3429) * C27321) *
               C27527 * C73 +
           (C3433 + C3437) * C27527 * C74) *
              C27278 * C4199 -
          (((C233 * C4243 + C27526 * C4361) * C27321 +
            (C233 * C4201 + C27526 * C4323) * C143) *
               C27527 * C74 +
           ((C233 * C4244 + C27526 * C4362) * C27321 +
            (C233 * C4202 + C27526 * C4324) * C143) *
               C27527 * C73) *
              C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[8] += (-std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C1313 +
                     (C233 * C189 + C27526 * C350) * C27492 -
                     (C233 * C1191 + C27526 * C1374) * C1314 -
                     (C233 * C1316 + C27526 * C1507) * C27359) *
                        C27527 * C73 +
                    (C1512 + C1513 - C1514 - C1524) * C27527 * C74) *
                       C1779 +
                   (((C233 * C2673 + C27526 * C2855) * C1314 -
                     ((C233 * C726 + C27526 * C922) * C27492 +
                      (C233 * C601 + C27526 * C784) * C1313) +
                     (C233 * C2797 + C27526 * C2967) * C27359) *
                        C27527 * C73 +
                    ((C233 * C2674 + C27526 * C2856) * C1314 -
                     (C932 * C27492 + C800 * C1313) +
                     (C233 * C2798 + C27526 * C2968) * C27359) *
                        C27527 * C74) *
                       C1780 +
                   (((C233 * C1784 + C27526 * C1961) * C1313 +
                     (C233 * C1905 + C27526 * C2085) * C27492 -
                     (C233 * C2676 + C27526 * C2858) * C1314 -
                     (C233 * C2800 + C27526 * C2969) * C27359) *
                        C27527 * C73 +
                    (C1972 * C1313 + C2092 * C27492 -
                     (C233 * C2675 + C27526 * C2857) * C1314 -
                     (C233 * C2799 + C27526 * C2970) * C27359) *
                        C27527 * C74) *
                       C1781) *
                  C27278) /
                     (p * q * std::sqrt(p + q)) -
                 (std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C1313 +
                     (C233 * C189 + C27526 * C350) * C27492 -
                     (C233 * C1191 + C27526 * C1374) * C1314 -
                     (C233 * C1316 + C27526 * C1507) * C27359) *
                        C27527 * C73 +
                    (C1512 + C1513 - C1514 - C1524) * C27527 * C74) *
                       C27321 * C591 +
                   ((C1514 - (C1513 + C1512) + C1524) * C27527 * C73 +
                    (C1517 - (C1518 + C1519) + C1525) * C27527 * C74) *
                       C27321 * C592 +
                   ((C1519 + C1518 - C1517 - C1525) * C27527 * C73 +
                    (C261 * C1313 + C367 * C27492 -
                     (C233 * C1192 + C27526 * C1376) * C1314 -
                     (C233 * C1318 + C27526 * C1510) * C27359) *
                        C27527 * C74) *
                       C27321 * C593)) /
                     (p * q * std::sqrt(p + q)) +
                 (2 * std::pow(Pi, 2.5) *
                  (((C233 * C89 + C27526 * C234) * C4281 +
                    (C233 * C189 + C27526 * C350) * C4197 -
                    (C233 * C1191 + C27526 * C1374) * C4282 -
                    (C233 * C1316 + C27526 * C1507) * C4198 +
                    (C233 * C3190 + C27526 * C3367) * C4283 +
                    (C233 * C3311 + C27526 * C3487) * C4199 -
                    (C233 * C4202 + C27526 * C4324) * C4284 -
                    (C233 * C4286 + C27526 * C4397) * C4200) *
                       C27527 * C73 +
                   (C257 * C4281 + C365 * C4197 - C1390 * C4282 -
                    C1522 * C4198 + C3378 * C4283 + C3498 * C4199 -
                    (C233 * C4201 + C27526 * C4323) * C4284 -
                    (C233 * C4285 + C27526 * C4398) * C4200) *
                       C27527 * C74) *
                  C27321 * C27278) /
                     (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (-std::pow(Pi, 2.5) * (((((C404 * C89 + C27527 * C405) * C2314 +
                                  (C404 * C96 + C27527 * C410) * C27278) *
                                     C73 +
                                 (C428 * C2314 + C429 * C27278) * C74) *
                                    C27526 * C27492 -
                                ((C1593 * C27278 + C1592 * C2314) * C74 +
                                 ((C404 * C1196 + C27527 * C1579) * C27278 +
                                  (C404 * C1191 + C27527 * C1576) * C2314) *
                                     C73) *
                                    C27526 * C27359) *
                                   C1779 +
                               ((((C404 * C2673 + C27527 * C3021) * C2314 +
                                  (C404 * C2679 + C27527 * C3025) * C27278) *
                                     C73 +
                                 ((C404 * C2674 + C27527 * C3022) * C2314 +
                                  (C404 * C2680 + C27527 * C3026) * C27278) *
                                     C74) *
                                    C27526 * C27359 -
                                ((C1003 * C27278 + C1002 * C2314) * C74 +
                                 ((C404 * C606 + C27527 * C989) * C27278 +
                                  (C404 * C601 + C27527 * C986) * C2314) *
                                     C73) *
                                    C27526 * C27492) *
                                   C1780 +
                               ((((C404 * C1784 + C27527 * C2143) * C2314 +
                                  (C404 * C1789 + C27527 * C2146) * C27278) *
                                     C73 +
                                 (C2154 * C2314 + C2155 * C27278) * C74) *
                                    C27526 * C27492 -
                                (((C404 * C2681 + C27527 * C3027) * C27278 +
                                  (C404 * C2675 + C27527 * C3023) * C2314) *
                                     C74 +
                                 ((C404 * C2682 + C27527 * C3028) * C27278 +
                                  (C404 * C2676 + C27527 * C3024) * C2314) *
                                     C73) *
                                    C27526 * C27359) *
                                   C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C73 +
           (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C592 +
            C432 * C598 + C433 * C593) *
               C74) *
              C27526 * C27492 +
          ((C1592 * C597 -
            ((C404 * C1196 + C27527 * C1579) * C591 +
             (C404 * C1191 + C27527 * C1576) * C596) +
            C1593 * C592 - C1594 * C598 - C1595 * C593) *
               C73 +
           (C1594 * C597 - (C1593 * C591 + C1592 * C596) + C1595 * C592 -
            (C404 * C1192 + C27527 * C1578) * C598 -
            (C404 * C1200 + C27527 * C1582) * C593) *
               C74) *
              C27526 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C2314 +
            (C404 * C96 + C27527 * C410) * C27278) *
               C73 +
           (C428 * C2314 + C429 * C27278) * C74) *
              C27526 * C4197 -
          ((C1593 * C27278 + C1592 * C2314) * C74 +
           ((C404 * C1196 + C27527 * C1579) * C27278 +
            (C404 * C1191 + C27527 * C1576) * C2314) *
               C73) *
              C27526 * C4198 +
          (((C404 * C3190 + C27527 * C3549) * C2314 +
            (C404 * C3195 + C27527 * C3552) * C27278) *
               C73 +
           (C3560 * C2314 + C3561 * C27278) * C74) *
              C27526 * C4199 -
          (((C404 * C4203 + C27527 * C4435) * C27278 +
            (C404 * C4201 + C27527 * C4433) * C2314) *
               C74 +
           ((C404 * C4204 + C27527 * C4436) * C27278 +
            (C404 * C4202 + C27527 * C4434) * C2314) *
               C73) *
              C27526 * C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[8] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 -
            (C404 * C601 + C27527 * C986) * C1847 -
            (C404 * C668 + C27527 * C1055) * C1780 +
            (C404 * C1784 + C27527 * C2143) * C1848 +
            (C404 * C1849 + C27527 * C2205) * C1781) *
               C73 +
           (C2209 + C2210 - C2211 - C2212 + C2213 + C2217) * C74) *
              C27526 * C27278 * C27492 +
          (((C404 * C2673 + C27527 * C3021) * C1847 -
            ((C404 * C1257 + C27527 * C1647) * C1779 +
             (C404 * C1191 + C27527 * C1576) * C1846) +
            (C404 * C2739 + C27527 * C3079) * C1780 -
            (C404 * C2676 + C27527 * C3024) * C1848 -
            (C404 * C2742 + C27527 * C3080) * C1781) *
               C73 +
           ((C404 * C2674 + C27527 * C3022) * C1847 -
            (C1656 * C1779 + C1592 * C1846) +
            (C404 * C2740 + C27527 * C3081) * C1780 -
            (C404 * C2675 + C27527 * C3023) * C1848 -
            (C404 * C2741 + C27527 * C3082) * C1781) *
               C74) *
              C27526 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C73 +
            (C473 + C485) * C74) *
               C27526 * C591 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C592 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27526 * C593) *
              C27492 +
          (((C1650 + C1658) * C73 + (C1653 + C1659) * C74) * C27526 * C592 -
           ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                     (C404 * C1191 + C27527 * C1576) * C143) *
                                        C73) *
               C27526 * C591 -
           (((C404 * C1258 + C27527 * C1648) * C27321 +
             (C404 * C1192 + C27527 * C1578) * C143) *
                C74 +
            (C1659 + C1653) * C73) *
               C27526 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C143 +
            (C404 * C144 + C27527 * C467) * C27321) *
               C73 +
           (C473 + C485) * C74) *
              C27526 * C27278 * C4197 -
          ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                    (C404 * C1191 + C27527 * C1576) * C143) *
                                       C73) *
              C27526 * C27278 * C4198 +
          (((C404 * C3190 + C27527 * C3549) * C143 +
            (C404 * C3252 + C27527 * C3611) * C27321) *
               C73 +
           (C3615 + C3619) * C74) *
              C27526 * C27278 * C4199 -
          (((C404 * C4243 + C27527 * C4471) * C27321 +
            (C404 * C4201 + C27527 * C4433) * C143) *
               C74 +
           ((C404 * C4244 + C27527 * C4472) * C27321 +
            (C404 * C4202 + C27527 * C4434) * C143) *
               C73) *
              C27526 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eezz[8] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1313 +
            (C404 * C189 + C27527 * C521) * C27492 -
            (C404 * C1191 + C27527 * C1576) * C1314 -
            (C404 * C1316 + C27527 * C1709) * C27359) *
               C73 +
           (C1714 + C1715 - C1716 - C1726) * C74) *
              C27526 * C1779 +
          (((C404 * C2673 + C27527 * C3021) * C1314 -
            ((C404 * C726 + C27527 * C1124) * C27492 +
             (C404 * C601 + C27527 * C986) * C1313) +
            (C404 * C2797 + C27527 * C3133) * C27359) *
               C73 +
           ((C404 * C2674 + C27527 * C3022) * C1314 -
            (C1134 * C27492 + C1002 * C1313) +
            (C404 * C2798 + C27527 * C3134) * C27359) *
               C74) *
              C27526 * C1780 +
          (((C404 * C1784 + C27527 * C2143) * C1313 +
            (C404 * C1905 + C27527 * C2267) * C27492 -
            (C404 * C2676 + C27527 * C3024) * C1314 -
            (C404 * C2800 + C27527 * C3135) * C27359) *
               C73 +
           (C2154 * C1313 + C2274 * C27492 -
            (C404 * C2675 + C27527 * C3023) * C1314 -
            (C404 * C2799 + C27527 * C3136) * C27359) *
               C74) *
              C27526 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C404 * C89 + C27527 * C405) * C1313 +
                                (C404 * C189 + C27527 * C521) * C27492 -
                                (C404 * C1191 + C27527 * C1576) * C1314 -
                                (C404 * C1316 + C27527 * C1709) * C27359) *
                                   C73 +
                               (C1714 + C1715 - C1716 - C1726) * C74) *
                                  C27526 * C27321 * C591 +
                              ((C1716 - (C1715 + C1714) + C1726) * C73 +
                               (C1719 - (C1720 + C1721) + C1727) * C74) *
                                  C27526 * C27321 * C592 +
                              ((C1721 + C1720 - C1719 - C1727) * C73 +
                               (C432 * C1313 + C538 * C27492 -
                                (C404 * C1192 + C27527 * C1578) * C1314 -
                                (C404 * C1318 + C27527 * C1712) * C27359) *
                                   C74) *
                                  C27526 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C4281 +
           (C404 * C189 + C27527 * C521) * C4197 -
           (C404 * C1191 + C27527 * C1576) * C4282 -
           (C404 * C1316 + C27527 * C1709) * C4198 +
           (C404 * C3190 + C27527 * C3549) * C4283 +
           (C404 * C3311 + C27527 * C3669) * C4199 -
           (C404 * C4202 + C27527 * C4434) * C4284 -
           (C404 * C4286 + C27527 * C4507) * C4200) *
              C73 +
          (C428 * C4281 + C536 * C4197 - C1592 * C4282 - C1724 * C4198 +
           C3560 * C4283 + C3680 * C4199 -
           (C404 * C4201 + C27527 * C4433) * C4284 -
           (C404 * C4285 + C27527 * C4508) * C4200) *
              C74) *
         C27526 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4564 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27517 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4565 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27507 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C4566 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C4561) *
              C27526 * C27527 * C6157 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C4565 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27517 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C4564) +
           (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27507 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C4566 -
           (C84 * C1200 + C74 * C1204 + C83 * C1198 + C73 * C1203) * C4561) *
              C27526 * C27527 * C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
               C27526 * C27527 * C27517 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27526 * C27527 * C27507 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27321) *
               C27526 * C27527 * C4561) *
              C6157 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C143 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27321) *
               C27526 * C27527 * C27507 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
               C27526 * C27527 * C27517 -
           ((C84 * C1258 + C74 * C1262 + C83 * C1256 + C73 * C1260) * C27321 +
            (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C143) *
               C27526 * C27527 * C4561) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6259 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6157 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C6260 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C27321 * C27517 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C6260 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6157 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6259) +
           (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C27507 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C6259 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C6157 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C6260 -
           (C84 * C1318 + C74 * C1322 + C83 * C1317 + C73 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[9] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C4564 +
                     (C233 * C96 + C27526 * C239) * C27517 - C257 * C4565 -
                     C258 * C27507 + C259 * C4566 + C260 * C4561) *
                        C27527 * C73 +
                    (C257 * C4564 + C258 * C27517 - C259 * C4565 -
                     C260 * C27507 + C261 * C4566 + C262 * C4561) *
                        C27527 * C74) *
                       C6157 +
                   ((C1390 * C4565 -
                     ((C233 * C1196 + C27526 * C1377) * C27517 +
                      (C233 * C1191 + C27526 * C1374) * C4564) +
                     C1391 * C27507 - C1392 * C4566 - C1393 * C4561) *
                        C27527 * C73 +
                    (C1392 * C4565 - (C1391 * C27517 + C1390 * C4564) +
                     C1393 * C27507 - (C233 * C1192 + C27526 * C1376) * C4566 -
                     (C233 * C1200 + C27526 * C1380) * C4561) *
                        C27527 * C74) *
                       C27359) *
                  C27321) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[9] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C27527 * C73 +
            (C302 + C314) * C27527 * C74) *
               C27517 -
           ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) *
               C27507 +
           ((C307 + C315) * C27527 * C73 + (C308 + C316) * C27527 * C74) *
               C4561) *
              C6157 +
          (((C1448 + C1456) * C27527 * C73 + (C1451 + C1457) * C27527 * C74) *
               C27507 -
           ((C1456 + C1448) * C27527 * C74 +
            ((C233 * C1257 + C27526 * C1445) * C27321 +
             (C233 * C1191 + C27526 * C1374) * C143) *
                C27527 * C73) *
               C27517 -
           (((C233 * C1258 + C27526 * C1446) * C27321 +
             (C233 * C1192 + C27526 * C1376) * C143) *
                C27527 * C74 +
            (C1457 + C1451) * C27527 * C73) *
               C4561) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[9] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27526 * C234) * C6259 +
                     (C233 * C189 + C27526 * C350) * C6157 -
                     (C233 * C1191 + C27526 * C1374) * C6260 -
                     (C233 * C1316 + C27526 * C1507) * C27359) *
                        C27527 * C73 +
                    (C6412 + C6413 - C6414 - C6415) * C27527 * C74) *
                       C27321 * C27517 +
                   ((C6414 - (C6413 + C6412) + C6415) * C27527 * C73 +
                    (C6416 - (C6417 + C6418) + C6419) * C27527 * C74) *
                       C27321 * C27507 +
                   ((C6418 + C6417 - C6416 - C6419) * C27527 * C73 +
                    (C261 * C6259 + C367 * C6157 -
                     (C233 * C1192 + C27526 * C1376) * C6260 -
                     (C233 * C1318 + C27526 * C1510) * C27359) *
                        C27527 * C74) *
                       C27321 * C4561)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[9] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C4564 +
                     (C404 * C96 + C27527 * C410) * C27517 - C428 * C4565 -
                     C429 * C27507 + C430 * C4566 + C431 * C4561) *
                        C73 +
                    (C428 * C4564 + C429 * C27517 - C430 * C4565 -
                     C431 * C27507 + C432 * C4566 + C433 * C4561) *
                        C74) *
                       C27526 * C6157 +
                   ((C1592 * C4565 -
                     ((C404 * C1196 + C27527 * C1579) * C27517 +
                      (C404 * C1191 + C27527 * C1576) * C4564) +
                     C1593 * C27507 - C1594 * C4566 - C1595 * C4561) *
                        C73 +
                    (C1594 * C4565 - (C1593 * C27517 + C1592 * C4564) +
                     C1595 * C27507 - (C404 * C1192 + C27527 * C1578) * C4566 -
                     (C404 * C1200 + C27527 * C1582) * C4561) *
                        C74) *
                       C27526 * C27359) *
                  C27321) /
                 (p * q * std::sqrt(p + q));
    d2eezy[9] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C73 +
            (C473 + C485) * C74) *
               C27526 * C27517 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C27507 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27526 * C4561) *
              C6157 +
          (((C1650 + C1658) * C73 + (C1653 + C1659) * C74) * C27526 * C27507 -
           ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                     (C404 * C1191 + C27527 * C1576) * C143) *
                                        C73) *
               C27526 * C27517 -
           (((C404 * C1258 + C27527 * C1648) * C27321 +
             (C404 * C1192 + C27527 * C1578) * C143) *
                C74 +
            (C1659 + C1653) * C73) *
               C27526 * C4561) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[9] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27527 * C405) * C6259 +
                     (C404 * C189 + C27527 * C521) * C6157 -
                     (C404 * C1191 + C27527 * C1576) * C6260 -
                     (C404 * C1316 + C27527 * C1709) * C27359) *
                        C73 +
                    (C6570 + C6571 - C6572 - C6573) * C74) *
                       C27526 * C27321 * C27517 +
                   ((C6572 - (C6571 + C6570) + C6573) * C73 +
                    (C6574 - (C6575 + C6576) + C6577) * C74) *
                       C27526 * C27321 * C27507 +
                   ((C6576 + C6575 - C6574 - C6577) * C73 +
                    (C432 * C6259 + C538 * C6157 -
                     (C404 * C1192 + C27527 * C1578) * C6260 -
                     (C404 * C1318 + C27527 * C1712) * C27359) *
                        C74) *
                       C27526 * C27321 * C4561)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5040 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C5035 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C5041 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
               C27526 * C27527 * C6157 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C5041 -
            ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C5035 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C5040) +
            (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27283) *
               C27526 * C27527 * C27359) *
              C27491 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C5041 -
            ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C5035 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C5040) +
            (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
               C27526 * C27527 * C6157 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C5040 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C5035 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C5041 -
            (C84 * C5525 + C74 * C5526 + C83 * C2680 + C73 * C2686) * C27283) *
               C27526 * C27527 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C665 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27491 -
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C666 -
            (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
               C27526 * C27527 * C5035 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C666 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27491 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C665) +
            (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
               C27526 * C27527 * C27283) *
              C6157 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C666 -
            ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27491 +
             (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C665) +
            (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C27335) *
               C27526 * C27527 * C5035 +
           ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C665 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27491 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C666 -
            (C84 * C5593 + C74 * C5594 + C83 * C2740 + C73 * C2744) * C27335) *
               C27526 * C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6259 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6157 -
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C6260 -
            (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
               C27526 * C27527 * C27491 +
           ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C6260 -
            ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C6157 +
             (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C6259) +
            (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C5035 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C6260 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6157 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6259) +
            (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
               C27526 * C27527 * C27491 +
           ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C6259 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C6157 -
            (C84 * C5523 + C74 * C5524 + C83 * C2674 + C73 * C2678) * C6260 -
            (C84 * C5661 + C74 * C5662 + C83 * C2798 + C73 * C2802) * C27359) *
               C27526 * C27527 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C5040 +
             (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
             C258 * C27283) *
                C27527 * C73 +
            (C257 * C5040 + C258 * C5035 - C259 * C5041 - C260 * C27283) *
                C27527 * C74) *
               C6157 +
           ((C1390 * C5041 -
             ((C233 * C1196 + C27526 * C1377) * C5035 +
              (C233 * C1191 + C27526 * C1374) * C5040) +
             C1391 * C27283) *
                C27527 * C73 +
            (C1392 * C5041 - (C1391 * C5035 + C1390 * C5040) + C1393 * C27283) *
                C27527 * C74) *
               C27359) *
              C27491 +
          (((C800 * C5041 -
             ((C233 * C606 + C27526 * C787) * C5035 +
              (C233 * C601 + C27526 * C784) * C5040) +
             C801 * C27283) *
                C27527 * C73 +
            (C802 * C5041 - (C801 * C5035 + C800 * C5040) + C803 * C27283) *
                C27527 * C74) *
               C6157 +
           (((C233 * C2673 + C27526 * C2855) * C5040 +
             (C233 * C2679 + C27526 * C2859) * C5035 - C5736 * C5041 -
             C5737 * C27283) *
                C27527 * C73 +
            (C5736 * C5040 + C5737 * C5035 -
             (C233 * C5523 + C27526 * C5729) * C5041 -
             (C233 * C5525 + C27526 * C5730) * C27283) *
                C27527 * C74) *
               C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C665 +
                       (C233 * C144 + C27526 * C296) * C27491 -
                       (C233 * C601 + C27526 * C784) * C666 -
                       (C233 * C668 + C27526 * C853) * C27335) *
                          C27527 * C73 +
                      (C858 + C859 - C860 - C870) * C27527 * C74) *
                         C5035 +
                     ((C860 - (C859 + C858) + C870) * C27527 * C73 +
                      (C863 - (C864 + C865) + C871) * C27527 * C74) *
                         C27283) *
                        C6157 +
                    ((((C233 * C2673 + C27526 * C2855) * C666 -
                       ((C233 * C1257 + C27526 * C1445) * C27491 +
                        (C233 * C1191 + C27526 * C1374) * C665) +
                       (C233 * C2739 + C27526 * C2913) * C27335) *
                          C27527 * C73 +
                      (C6908 - (C6909 + C6910) + C6911) * C27527 * C74) *
                         C5035 +
                     ((C6910 + C6909 - C6908 - C6911) * C27527 * C73 +
                      (C1392 * C665 + C1455 * C27491 -
                       (C233 * C5523 + C27526 * C5729) * C666 -
                       (C233 * C5593 + C27526 * C5803) * C27335) *
                          C27527 * C74) *
                         C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C6259 +
                       (C233 * C189 + C27526 * C350) * C6157 -
                       (C233 * C1191 + C27526 * C1374) * C6260 -
                       (C233 * C1316 + C27526 * C1507) * C27359) *
                          C27527 * C73 +
                      (C6412 + C6413 - C6414 - C6415) * C27527 * C74) *
                         C27491 +
                     (((C233 * C2673 + C27526 * C2855) * C6260 -
                       ((C233 * C726 + C27526 * C922) * C6157 +
                        (C233 * C601 + C27526 * C784) * C6259) +
                       (C233 * C2797 + C27526 * C2967) * C27359) *
                          C27527 * C73 +
                      (C6978 - (C6979 + C6980) + C6981) * C27527 * C74) *
                         C27335) *
                        C5035 +
                    (((C6414 - (C6413 + C6412) + C6415) * C27527 * C73 +
                      (C6416 - (C6417 + C6418) + C6419) * C27527 * C74) *
                         C27491 +
                     ((C6980 + C6979 - C6978 - C6981) * C27527 * C73 +
                      (C802 * C6259 + C933 * C6157 -
                       (C233 * C5523 + C27526 * C5729) * C6260 -
                       (C233 * C5661 + C27526 * C5877) * C27359) *
                          C27527 * C74) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C5040 +
             (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
             C429 * C27283) *
                C73 +
            (C428 * C5040 + C429 * C5035 - C430 * C5041 - C431 * C27283) *
                C74) *
               C27526 * C6157 +
           ((C1592 * C5041 -
             ((C404 * C1196 + C27527 * C1579) * C5035 +
              (C404 * C1191 + C27527 * C1576) * C5040) +
             C1593 * C27283) *
                C73 +
            (C1594 * C5041 - (C1593 * C5035 + C1592 * C5040) + C1595 * C27283) *
                C74) *
               C27526 * C27359) *
              C27491 +
          (((C1002 * C5041 -
             ((C404 * C606 + C27527 * C989) * C5035 +
              (C404 * C601 + C27527 * C986) * C5040) +
             C1003 * C27283) *
                C73 +
            (C1004 * C5041 - (C1003 * C5035 + C1002 * C5040) + C1005 * C27283) *
                C74) *
               C27526 * C6157 +
           (((C404 * C2673 + C27527 * C3021) * C5040 +
             (C404 * C2679 + C27527 * C3025) * C5035 - C5958 * C5041 -
             C5959 * C27283) *
                C73 +
            (C5958 * C5040 + C5959 * C5035 -
             (C404 * C5523 + C27527 * C5951) * C5041 -
             (C404 * C5525 + C27527 * C5952) * C27283) *
                C74) *
               C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C665 +
                       (C404 * C144 + C27527 * C467) * C27491 -
                       (C404 * C601 + C27527 * C986) * C666 -
                       (C404 * C668 + C27527 * C1055) * C27335) *
                          C73 +
                      (C1060 + C1061 - C1062 - C1072) * C74) *
                         C27526 * C5035 +
                     ((C1062 - (C1061 + C1060) + C1072) * C73 +
                      (C1065 - (C1066 + C1067) + C1073) * C74) *
                         C27526 * C27283) *
                        C6157 +
                    ((((C404 * C2673 + C27527 * C3021) * C666 -
                       ((C404 * C1257 + C27527 * C1647) * C27491 +
                        (C404 * C1191 + C27527 * C1576) * C665) +
                       (C404 * C2739 + C27527 * C3079) * C27335) *
                          C73 +
                      (C7114 - (C7115 + C7116) + C7117) * C74) *
                         C27526 * C5035 +
                     ((C7116 + C7115 - C7114 - C7117) * C73 +
                      (C1594 * C665 + C1657 * C27491 -
                       (C404 * C5523 + C27527 * C5951) * C666 -
                       (C404 * C5593 + C27527 * C6025) * C27335) *
                          C74) *
                         C27526 * C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C6259 +
                       (C404 * C189 + C27527 * C521) * C6157 -
                       (C404 * C1191 + C27527 * C1576) * C6260 -
                       (C404 * C1316 + C27527 * C1709) * C27359) *
                          C73 +
                      (C6570 + C6571 - C6572 - C6573) * C74) *
                         C27526 * C27491 +
                     (((C404 * C2673 + C27527 * C3021) * C6260 -
                       ((C404 * C726 + C27527 * C1124) * C6157 +
                        (C404 * C601 + C27527 * C986) * C6259) +
                       (C404 * C2797 + C27527 * C3133) * C27359) *
                          C73 +
                      (C7184 - (C7185 + C7186) + C7187) * C74) *
                         C27526 * C27335) *
                        C5035 +
                    (((C6572 - (C6571 + C6570) + C6573) * C73 +
                      (C6574 - (C6575 + C6576) + C6577) * C74) *
                         C27526 * C27491 +
                     ((C7186 + C7185 - C7184 - C7187) * C73 +
                      (C1004 * C6259 + C1135 * C6157 -
                       (C404 * C5523 + C27527 * C5951) * C6260 -
                       (C404 * C5661 + C27527 * C6099) * C27359) *
                          C74) *
                         C27526 * C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C5040 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C5035 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C5041 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
              C27526 * C27527 * C27521 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C5041 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C5035 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C5040) +
           (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C27283) *
              C27526 * C27527 * C27515 +
          ((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C5040 +
           (C83 * C3195 + C73 * C3199 + C84 * C3196 + C74 * C3200) * C5035 -
           (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C5041 -
           (C84 * C3198 + C74 * C3201 + C83 * C3196 + C73 * C3200) * C27283) *
              C27526 * C27527 * C7239) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
               C27526 * C27527 * C5035 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27526 * C27527 * C27283) *
              C27521 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C143 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27321) *
               C27526 * C27527 * C27283 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
               C27526 * C27527 * C5035) *
              C27515 +
          (((C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C143 +
            (C83 * C3252 + C73 * C3255 + C84 * C3253 + C74 * C3256) * C27321) *
               C27526 * C27527 * C5035 -
           ((C84 * C3254 + C74 * C3257 + C83 * C3253 + C73 * C3256) * C27321 +
            (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C143) *
               C27526 * C27527 * C27283) *
              C7239)) /
        (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C7340 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27521 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C7341 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27515 +
           (C83 * C3190 + C73 * C3193 + C84 * C3191 + C74 * C3194) * C7342 +
           (C83 * C3311 + C73 * C3314 + C84 * C3312 + C74 * C3315) * C7239) *
              C27526 * C27527 * C27321 * C5035 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C7341 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27521 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C7340) +
           (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27515 -
           (C84 * C3192 + C74 * C3197 + C83 * C3191 + C73 * C3194) * C7342 -
           (C84 * C3313 + C74 * C3316 + C83 * C3312 + C73 * C3315) * C7239) *
              C27526 * C27527 * C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5040 +
            (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
            C258 * C27283) *
               C27527 * C73 +
           (C257 * C5040 + C258 * C5035 - C259 * C5041 - C260 * C27283) *
               C27527 * C74) *
              C27521 +
          ((C1390 * C5041 -
            ((C233 * C1196 + C27526 * C1377) * C5035 +
             (C233 * C1191 + C27526 * C1374) * C5040) +
            C1391 * C27283) *
               C27527 * C73 +
           (C1392 * C5041 - (C1391 * C5035 + C1390 * C5040) + C1393 * C27283) *
               C27527 * C74) *
              C27515 +
          (((C233 * C3190 + C27526 * C3367) * C5040 +
            (C233 * C3195 + C27526 * C3370) * C5035 - C3378 * C5041 -
            C3379 * C27283) *
               C27527 * C73 +
           (C3378 * C5040 + C3379 * C5035 -
            (C233 * C3192 + C27526 * C3369) * C5041 -
            (C233 * C3198 + C27526 * C3372) * C27283) *
               C27527 * C74) *
              C7239) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eeyy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C27527 * C73 +
            (C302 + C314) * C27527 * C74) *
               C5035 -
           ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) *
               C27283) *
              C27521 +
          (((C1448 + C1456) * C27527 * C73 + (C1451 + C1457) * C27527 * C74) *
               C27283 -
           ((C1456 + C1448) * C27527 * C74 +
            ((C233 * C1257 + C27526 * C1445) * C27321 +
             (C233 * C1191 + C27526 * C1374) * C143) *
                C27527 * C73) *
               C5035) *
              C27515 +
          ((((C233 * C3190 + C27526 * C3367) * C143 +
             (C233 * C3252 + C27526 * C3429) * C27321) *
                C27527 * C73 +
            (C3433 + C3437) * C27527 * C74) *
               C5035 -
           (((C233 * C3254 + C27526 * C3431) * C27321 +
             (C233 * C3192 + C27526 * C3369) * C143) *
                C27527 * C74 +
            (C3437 + C3433) * C27527 * C73) *
               C27283) *
              C7239)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C7340 +
            (C233 * C189 + C27526 * C350) * C27521 -
            (C233 * C1191 + C27526 * C1374) * C7341 -
            (C233 * C1316 + C27526 * C1507) * C27515 +
            (C233 * C3190 + C27526 * C3367) * C7342 +
            (C233 * C3311 + C27526 * C3487) * C7239) *
               C27527 * C73 +
           (C7494 + C7495 - C7496 - C7497 + C7498 + C7499) * C27527 * C74) *
              C27321 * C5035 +
          ((C7496 - (C7495 + C7494) + C7497 - C7498 - C7499) * C27527 * C73 +
           (C1392 * C7341 - (C366 * C27521 + C259 * C7340) + C1523 * C27515 -
            (C233 * C3192 + C27526 * C3369) * C7342 -
            (C233 * C3313 + C27526 * C3489) * C7239) *
               C27527 * C74) *
              C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C5040 +
            (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
            C429 * C27283) *
               C73 +
           (C428 * C5040 + C429 * C5035 - C430 * C5041 - C431 * C27283) * C74) *
              C27526 * C27521 +
          ((C1592 * C5041 -
            ((C404 * C1196 + C27527 * C1579) * C5035 +
             (C404 * C1191 + C27527 * C1576) * C5040) +
            C1593 * C27283) *
               C73 +
           (C1594 * C5041 - (C1593 * C5035 + C1592 * C5040) + C1595 * C27283) *
               C74) *
              C27526 * C27515 +
          (((C404 * C3190 + C27527 * C3549) * C5040 +
            (C404 * C3195 + C27527 * C3552) * C5035 - C3560 * C5041 -
            C3561 * C27283) *
               C73 +
           (C3560 * C5040 + C3561 * C5035 -
            (C404 * C3192 + C27527 * C3551) * C5041 -
            (C404 * C3198 + C27527 * C3554) * C27283) *
               C74) *
              C27526 * C7239) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eezy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C73 +
            (C473 + C485) * C74) *
               C27526 * C5035 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C27283) *
              C27521 +
          (((C1650 + C1658) * C73 + (C1653 + C1659) * C74) * C27526 * C27283 -
           ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                     (C404 * C1191 + C27527 * C1576) * C143) *
                                        C73) *
               C27526 * C5035) *
              C27515 +
          ((((C404 * C3190 + C27527 * C3549) * C143 +
             (C404 * C3252 + C27527 * C3611) * C27321) *
                C73 +
            (C3615 + C3619) * C74) *
               C27526 * C5035 -
           (((C404 * C3254 + C27527 * C3613) * C27321 +
             (C404 * C3192 + C27527 * C3551) * C143) *
                C74 +
            (C3619 + C3615) * C73) *
               C27526 * C27283) *
              C7239)) /
        (p * q * std::sqrt(p + q));
    d2eezz[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C7340 +
                      (C404 * C189 + C27527 * C521) * C27521 -
                      (C404 * C1191 + C27527 * C1576) * C7341 -
                      (C404 * C1316 + C27527 * C1709) * C27515 +
                      (C404 * C3190 + C27527 * C3549) * C7342 +
                      (C404 * C3311 + C27527 * C3669) * C7239) *
                         C73 +
                     (C7650 + C7651 - C7652 - C7653 + C7654 + C7655) * C74) *
                        C27526 * C27321 * C5035 +
                    ((C7652 - (C7651 + C7650) + C7653 - C7654 - C7655) * C73 +
                     (C1594 * C7341 - (C537 * C27521 + C430 * C7340) +
                      C1725 * C27515 - (C404 * C3192 + C27527 * C3551) * C7342 -
                      (C404 * C3313 + C27527 * C3671) * C7239) *
                         C74) *
                        C27526 * C27321 * C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C85 +
          (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C75 -
          (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C86 -
          (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C76 +
          (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C87 +
          (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C77 -
          (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C88 -
          (C84 * C103 + C74 * C108 + C83 * C101 + C73 * C107) * C78) *
         C27526 * C27527 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27481 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27283) *
              C27526 * C27527 * C27347 * C1779 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C26156 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27481 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C26163) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C27283) *
              C27526 * C27527 * C27347 * C1780 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C26163 +
           (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27481 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C26156 -
           (C84 * C1792 + C74 * C1795 + C83 * C1790 + C73 * C1794) * C27283) *
              C27526 * C27527 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
              C27526 * C27527 * C75 -
          ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
              C27526 * C27527 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27321) *
              C27526 * C27527 * C77 -
          ((C84 * C148 + C74 * C153 + C83 * C147 + C73 * C152) * C27321 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C143) *
              C27526 * C27527 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1846 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C1779 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1847 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C1780 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1848 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C1781) *
              C27526 * C27527 * C27481 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C1847 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C1779 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1846) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C1780 -
           (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C1848 -
           (C84 * C1851 + C74 * C1854 + C83 * C1850 + C73 * C1853) * C1781) *
              C27526 * C27527 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
              C27526 * C27527 * C27321 * C75 -
          ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
              C27526 * C27527 * C27321 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27347) *
              C27526 * C27527 * C27321 * C77 -
          ((C84 * C193 + C74 * C198 + C83 * C192 + C73 * C197) * C27347 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C188) *
              C27526 * C27527 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C1779 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C1780 +
           ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C188 +
            (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27347) *
               C27526 * C27527 * C1781) *
              C27481 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C1780 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C1779 -
           ((C84 * C1907 + C74 * C1910 + C83 * C1906 + C73 * C1909) * C27347 +
            (C84 * C1786 + C74 * C1791 + C83 * C1785 + C73 * C1788) * C188) *
               C27526 * C27527 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C85 +
           (C233 * C96 + C27526 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C27527 * C73 +
          (C257 * C85 + C258 * C75 - C259 * C86 - C260 * C76 + C261 * C87 +
           C262 * C77 - (C233 * C93 + C27526 * C238) * C88 -
           (C233 * C103 + C27526 * C243) * C78) *
              C27527 * C74) *
         C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C26163 +
            (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
            C258 * C27283) *
               C27527 * C73 +
           (C257 * C26163 + C258 * C27481 - C259 * C26156 - C260 * C27283) *
               C27527 * C74) *
              C27347 * C1779 +
          ((C800 * C26156 -
            ((C233 * C606 + C27526 * C787) * C27481 +
             (C233 * C601 + C27526 * C784) * C26163) +
            C801 * C27283) *
               C27527 * C73 +
           (C802 * C26156 - (C801 * C27481 + C800 * C26163) + C803 * C27283) *
               C27527 * C74) *
              C27347 * C1780 +
          (((C233 * C1784 + C27526 * C1961) * C26163 +
            (C233 * C1789 + C27526 * C1964) * C27481 - C1972 * C26156 -
            C1973 * C27283) *
               C27527 * C73 +
           (C1972 * C26163 + C1973 * C27481 -
            (C233 * C1786 + C27526 * C1963) * C26156 -
            (C233 * C1792 + C27526 * C1966) * C27283) *
               C27527 * C74) *
              C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C27527 * C73 +
           (C302 + C314) * C27527 * C74) *
              C75 -
          ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) * C76 +
          ((C307 + C315) * C27527 * C73 + (C308 + C316) * C27527 * C74) * C77 -
          (((C233 * C148 + C27526 * C300) * C27321 +
            (C233 * C93 + C27526 * C238) * C143) *
               C27527 * C74 +
           (C316 + C308) * C27527 * C73) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C27527 * C73 +
           (C2027 + C2028 - C2029 - C2030 + C2031 + C2035) * C27527 * C74) *
              C27481 +
          ((C2029 - (C2028 + C2027) + C2030 - C2031 - C2035) * C27527 * C73 +
           (C802 * C1847 - (C312 * C1779 + C259 * C1846) + C869 * C1780 -
            (C233 * C1786 + C27526 * C1963) * C1848 -
            (C233 * C1851 + C27526 * C2025) * C1781) *
               C27527 * C74) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C27527 * C73 +
           (C356 + C368) * C27527 * C74) *
              C27321 * C75 -
          ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
              C27321 * C76 +
          ((C361 + C369) * C27527 * C73 + (C362 + C370) * C27527 * C74) *
              C27321 * C77 -
          (((C233 * C193 + C27526 * C354) * C27347 +
            (C233 * C93 + C27526 * C238) * C188) *
               C27527 * C74 +
           (C370 + C362) * C27527 * C73) *
              C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C1779 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C1780 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C27527 * C73 +
            (C2089 + C2093) * C27527 * C74) *
               C1781) *
              C27481 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C1780 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C1779 -
           (((C233 * C1907 + C27526 * C2087) * C27347 +
             (C233 * C1786 + C27526 * C1963) * C188) *
                C27527 * C74 +
            (C2093 + C2089) * C27527 * C73) *
               C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C85 +
           (C404 * C96 + C27527 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C73 +
          (C428 * C85 + C429 * C75 - C430 * C86 - C431 * C76 + C432 * C87 +
           C433 * C77 - (C404 * C93 + C27527 * C409) * C88 -
           (C404 * C103 + C27527 * C414) * C78) *
              C74) *
         C27526 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C73 +
           (C428 * C26163 + C429 * C27481 - C430 * C26156 - C431 * C27283) *
               C74) *
              C27526 * C27347 * C1779 +
          ((C1002 * C26156 -
            ((C404 * C606 + C27527 * C989) * C27481 +
             (C404 * C601 + C27527 * C986) * C26163) +
            C1003 * C27283) *
               C73 +
           (C1004 * C26156 - (C1003 * C27481 + C1002 * C26163) +
            C1005 * C27283) *
               C74) *
              C27526 * C27347 * C1780 +
          (((C404 * C1784 + C27527 * C2143) * C26163 +
            (C404 * C1789 + C27527 * C2146) * C27481 - C2154 * C26156 -
            C2155 * C27283) *
               C73 +
           (C2154 * C26163 + C2155 * C27481 -
            (C404 * C1786 + C27527 * C2145) * C26156 -
            (C404 * C1792 + C27527 * C2148) * C27283) *
               C74) *
              C27526 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C143 +
                      (C404 * C144 + C27527 * C467) * C27321) *
                         C73 +
                     (C473 + C485) * C74) *
                        C27526 * C75 -
                    ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C76 +
                    ((C478 + C486) * C73 + (C479 + C487) * C74) * C27526 * C77 -
                    (((C404 * C148 + C27527 * C471) * C27321 +
                      (C404 * C93 + C27527 * C409) * C143) *
                         C74 +
                     (C487 + C479) * C73) *
                        C27526 * C78) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1846 +
                      (C404 * C144 + C27527 * C467) * C1779 -
                      (C404 * C601 + C27527 * C986) * C1847 -
                      (C404 * C668 + C27527 * C1055) * C1780 +
                      (C404 * C1784 + C27527 * C2143) * C1848 +
                      (C404 * C1849 + C27527 * C2205) * C1781) *
                         C73 +
                     (C2209 + C2210 - C2211 - C2212 + C2213 + C2217) * C74) *
                        C27526 * C27481 +
                    ((C2211 - (C2210 + C2209) + C2212 - C2213 - C2217) * C73 +
                     (C1004 * C1847 - (C483 * C1779 + C430 * C1846) +
                      C1071 * C1780 - (C404 * C1786 + C27527 * C2145) * C1848 -
                      (C404 * C1851 + C27527 * C2207) * C1781) *
                         C74) *
                        C27526 * C27283) *
                   C27347) /
                      (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C73 +
           (C527 + C539) * C74) *
              C27526 * C27321 * C75 -
          ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C27321 * C76 +
          ((C532 + C540) * C73 + (C533 + C541) * C74) * C27526 * C27321 * C77 -
          (((C404 * C193 + C27527 * C525) * C27347 +
            (C404 * C93 + C27527 * C409) * C188) *
               C74 +
           (C541 + C533) * C73) *
              C27526 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C1779 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C1780 +
           (((C404 * C1784 + C27527 * C2143) * C188 +
             (C404 * C1905 + C27527 * C2267) * C27347) *
                C73 +
            (C2271 + C2275) * C74) *
               C27526 * C1781) *
              C27481 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C1780 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C1779 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C74 +
            (C2275 + C2271) * C73) *
               C27526 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C592 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C598 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C593) *
              C27526 * C27527 * C27347 * C27491 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C597 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C591 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C596) +
           (C83 * C605 + C73 * C611 + C84 * C608 + C74 * C613) * C592 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C598 -
           (C84 * C610 + C74 * C614 + C83 * C608 + C73 * C613) * C593) *
              C27526 * C27527 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
              C27526 * C27527 * C27347 * C2310 -
          ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
              C27526 * C27527 * C27347 * C2311 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2314 +
           (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27278) *
              C27526 * C27527 * C27347 * C2312 -
          ((C84 * C2317 + C74 * C2321 + C83 * C2318 + C73 * C2322) * C27278 +
           (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C2314) *
              C27526 * C27527 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C665 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27491 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C666 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C27335) *
              C27526 * C27527 * C591 +
          ((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C666 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27491 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C665) +
           (C83 * C667 + C73 * C671 + C84 * C669 + C74 * C673) * C27335) *
              C27526 * C27527 * C592 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C665 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27491 -
           (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C666 -
           (C84 * C670 + C74 * C674 + C83 * C669 + C73 * C673) * C27335) *
              C27526 * C27527 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2357 +
          (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C2310 -
          (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2358 -
          (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C2311 +
          (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2359 +
          (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C2312 -
          (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C2360 -
          (C84 * C2361 + C74 * C2363 + C83 * C2362 + C73 * C2364) * C2313) *
         C27526 * C27527 * C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
               C27526 * C27527 * C27491 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
               C27526 * C27527 * C27335) *
              C591 +
          (((C83 * C599 + C73 * C603 + C84 * C600 + C74 * C604) * C188 +
            (C83 * C725 + C73 * C729 + C84 * C727 + C74 * C731) * C27347) *
               C27526 * C27527 * C27335 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27347 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27526 * C27527 * C27491) *
              C592 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27347) *
               C27526 * C27527 * C27491 -
           ((C84 * C728 + C74 * C732 + C83 * C727 + C73 * C731) * C27347 +
            (C84 * C602 + C74 * C609 + C83 * C600 + C73 * C604) * C188) *
               C27526 * C27527 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27347) *
              C27526 * C27527 * C2310 -
          ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27347 +
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C188) *
              C27526 * C27527 * C2311 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C188 +
           (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27347) *
              C27526 * C27527 * C2312 -
          ((C84 * C2399 + C74 * C2401 + C83 * C2400 + C73 * C2402) * C27347 +
           (C84 * C2315 + C74 * C2319 + C83 * C2316 + C73 * C2320) * C188) *
              C27526 * C27527 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[13] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C596 +
                      (C233 * C96 + C27526 * C239) * C591 - C257 * C597 -
                      C258 * C592 + C259 * C598 + C260 * C593) *
                         C27527 * C73 +
                     (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C592 +
                      C261 * C598 + C262 * C593) *
                         C27527 * C74) *
                        C27347 * C27491 +
                    ((C800 * C597 -
                      ((C233 * C606 + C27526 * C787) * C591 +
                       (C233 * C601 + C27526 * C784) * C596) +
                      C801 * C592 - C802 * C598 - C803 * C593) *
                         C27527 * C73 +
                     (C802 * C597 - (C801 * C591 + C800 * C596) + C803 * C592 -
                      (C233 * C602 + C27526 * C786) * C598 -
                      (C233 * C610 + C27526 * C790) * C593) *
                         C27527 * C74) *
                        C27347 * C27335)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C27527 * C73 +
                     (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                        C27347 * C2310 -
                    ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C27527 * C73) *
                        C27347 * C2311 +
                    (((C233 * C1784 + C27526 * C1961) * C2314 +
                      (C233 * C1789 + C27526 * C1964) * C27278) *
                         C27527 * C73 +
                     (C1972 * C2314 + C1973 * C27278) * C27527 * C74) *
                        C27347 * C2312 -
                    (((C233 * C2317 + C27526 * C2439) * C27278 +
                      (C233 * C2315 + C27526 * C2437) * C2314) *
                         C27527 * C74 +
                     ((C233 * C2318 + C27526 * C2440) * C27278 +
                      (C233 * C2316 + C27526 * C2438) * C2314) *
                         C27527 * C73) *
                        C27347 * C2313)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C665 +
            (C233 * C144 + C27526 * C296) * C27491 -
            (C233 * C601 + C27526 * C784) * C666 -
            (C233 * C668 + C27526 * C853) * C27335) *
               C27527 * C73 +
           (C858 + C859 - C860 - C870) * C27527 * C74) *
              C591 +
          ((C860 - (C859 + C858) + C870) * C27527 * C73 +
           (C863 - (C864 + C865) + C871) * C27527 * C74) *
              C592 +
          ((C865 + C864 - C863 - C871) * C27527 * C73 +
           (C261 * C665 + C313 * C27491 - (C233 * C602 + C27526 * C786) * C666 -
            (C233 * C670 + C27526 * C856) * C27335) *
               C27527 * C74) *
              C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C2357 +
           (C233 * C144 + C27526 * C296) * C2310 -
           (C233 * C601 + C27526 * C784) * C2358 -
           (C233 * C668 + C27526 * C853) * C2311 +
           (C233 * C1784 + C27526 * C1961) * C2359 +
           (C233 * C1849 + C27526 * C2023) * C2312 -
           (C233 * C2316 + C27526 * C2438) * C2360 -
           (C233 * C2362 + C27526 * C2475) * C2313) *
              C27527 * C73 +
          (C257 * C2357 + C311 * C2310 - C800 * C2358 - C868 * C2311 +
           C1972 * C2359 + C2034 * C2312 -
           (C233 * C2315 + C27526 * C2437) * C2360 -
           (C233 * C2361 + C27526 * C2476) * C2313) *
              C27527 * C74) *
         C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C27527 * C73 +
            (C356 + C368) * C27527 * C74) *
               C27491 -
           ((C934 + C928) * C27527 * C74 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C27527 * C73) *
               C27335) *
              C591 +
          (((C928 + C934) * C27527 * C73 + (C929 + C935) * C27527 * C74) *
               C27335 -
           ((C369 + C361) * C27527 * C74 + (C368 + C356) * C27527 * C73) *
               C27491) *
              C592 +
          (((C361 + C369) * C27527 * C73 + (C362 + C370) * C27527 * C74) *
               C27491 -
           (((C233 * C728 + C27526 * C924) * C27347 +
             (C233 * C602 + C27526 * C786) * C188) *
                C27527 * C74 +
            (C935 + C929) * C27527 * C73) *
               C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C27527 * C73 +
           (C356 + C368) * C27527 * C74) *
              C2310 -
          ((C934 + C928) * C27527 * C74 +
           ((C233 * C726 + C27526 * C922) * C27347 +
            (C233 * C601 + C27526 * C784) * C188) *
               C27527 * C73) *
              C2311 +
          (((C233 * C1784 + C27526 * C1961) * C188 +
            (C233 * C1905 + C27526 * C2085) * C27347) *
               C27527 * C73 +
           (C2089 + C2093) * C27527 * C74) *
              C2312 -
          (((C233 * C2399 + C27526 * C2511) * C27347 +
            (C233 * C2315 + C27526 * C2437) * C188) *
               C27527 * C74 +
           ((C233 * C2400 + C27526 * C2512) * C27347 +
            (C233 * C2316 + C27526 * C2438) * C188) *
               C27527 * C73) *
              C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[13] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C596 +
                      (C404 * C96 + C27527 * C410) * C591 - C428 * C597 -
                      C429 * C592 + C430 * C598 + C431 * C593) *
                         C73 +
                     (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C592 +
                      C432 * C598 + C433 * C593) *
                         C74) *
                        C27526 * C27347 * C27491 +
                    ((C1002 * C597 -
                      ((C404 * C606 + C27527 * C989) * C591 +
                       (C404 * C601 + C27527 * C986) * C596) +
                      C1003 * C592 - C1004 * C598 - C1005 * C593) *
                         C73 +
                     (C1004 * C597 - (C1003 * C591 + C1002 * C596) +
                      C1005 * C592 - (C404 * C602 + C27527 * C988) * C598 -
                      (C404 * C610 + C27527 * C992) * C593) *
                         C74) *
                        C27526 * C27347 * C27335)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C2314 +
                      (C404 * C96 + C27527 * C410) * C27278) *
                         C73 +
                     (C428 * C2314 + C429 * C27278) * C74) *
                        C27526 * C27347 * C2310 -
                    ((C1003 * C27278 + C1002 * C2314) * C74 +
                     ((C404 * C606 + C27527 * C989) * C27278 +
                      (C404 * C601 + C27527 * C986) * C2314) *
                         C73) *
                        C27526 * C27347 * C2311 +
                    (((C404 * C1784 + C27527 * C2143) * C2314 +
                      (C404 * C1789 + C27527 * C2146) * C27278) *
                         C73 +
                     (C2154 * C2314 + C2155 * C27278) * C74) *
                        C27526 * C27347 * C2312 -
                    (((C404 * C2317 + C27527 * C2549) * C27278 +
                      (C404 * C2315 + C27527 * C2547) * C2314) *
                         C74 +
                     ((C404 * C2318 + C27527 * C2550) * C27278 +
                      (C404 * C2316 + C27527 * C2548) * C2314) *
                         C73) *
                        C27526 * C27347 * C2313)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 -
            (C404 * C601 + C27527 * C986) * C666 -
            (C404 * C668 + C27527 * C1055) * C27335) *
               C73 +
           (C1060 + C1061 - C1062 - C1072) * C74) *
              C27526 * C591 +
          ((C1062 - (C1061 + C1060) + C1072) * C73 +
           (C1065 - (C1066 + C1067) + C1073) * C74) *
              C27526 * C592 +
          ((C1067 + C1066 - C1065 - C1073) * C73 +
           (C432 * C665 + C484 * C27491 - (C404 * C602 + C27527 * C988) * C666 -
            (C404 * C670 + C27527 * C1058) * C27335) *
               C74) *
              C27526 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C2357 +
           (C404 * C144 + C27527 * C467) * C2310 -
           (C404 * C601 + C27527 * C986) * C2358 -
           (C404 * C668 + C27527 * C1055) * C2311 +
           (C404 * C1784 + C27527 * C2143) * C2359 +
           (C404 * C1849 + C27527 * C2205) * C2312 -
           (C404 * C2316 + C27527 * C2548) * C2360 -
           (C404 * C2362 + C27527 * C2585) * C2313) *
              C73 +
          (C428 * C2357 + C482 * C2310 - C1002 * C2358 - C1070 * C2311 +
           C2154 * C2359 + C2216 * C2312 -
           (C404 * C2315 + C27527 * C2547) * C2360 -
           (C404 * C2361 + C27527 * C2586) * C2313) *
              C74) *
         C27526 * C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eezz[13] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C73 +
            (C527 + C539) * C74) *
               C27526 * C27491 -
           ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                     (C404 * C601 + C27527 * C986) * C188) *
                                        C73) *
               C27526 * C27335) *
              C591 +
          (((C1130 + C1136) * C73 + (C1131 + C1137) * C74) * C27526 * C27335 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27526 * C27491) *
              C592 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27526 * C27491 -
           (((C404 * C728 + C27527 * C1126) * C27347 +
             (C404 * C602 + C27527 * C988) * C188) *
                C74 +
            (C1137 + C1131) * C73) *
               C27526 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C73 +
           (C527 + C539) * C74) *
              C27526 * C2310 -
          ((C1136 + C1130) * C74 + ((C404 * C726 + C27527 * C1124) * C27347 +
                                    (C404 * C601 + C27527 * C986) * C188) *
                                       C73) *
              C27526 * C2311 +
          (((C404 * C1784 + C27527 * C2143) * C188 +
            (C404 * C1905 + C27527 * C2267) * C27347) *
               C73 +
           (C2271 + C2275) * C74) *
              C27526 * C2312 -
          (((C404 * C2399 + C27527 * C2621) * C27347 +
            (C404 * C2315 + C27527 * C2547) * C188) *
               C74 +
           ((C404 * C2400 + C27527 * C2622) * C27347 +
            (C404 * C2316 + C27527 * C2548) * C188) *
               C73) *
              C27526 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C592 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C598 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C593) *
              C27526 * C27527 * C27492 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C597 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C591 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C596) +
           (C83 * C1195 + C73 * C1201 + C84 * C1198 + C74 * C1203) * C592 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C598 -
           (C84 * C1200 + C74 * C1204 + C83 * C1198 + C73 * C1203) * C593) *
              C27526 * C27527 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2314 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27278) *
               C27526 * C27527 * C27492 -
           ((C84 * C1195 + C74 * C1201 + C83 * C1196 + C73 * C1202) * C27278 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C2314) *
               C27526 * C27527 * C27359) *
              C1779 +
          (((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C2314 +
            (C83 * C2679 + C73 * C2685 + C84 * C2680 + C74 * C2686) * C27278) *
               C27526 * C27527 * C27359 -
           ((C84 * C605 + C74 * C611 + C83 * C606 + C73 * C612) * C27278 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C2314) *
               C27526 * C27527 * C27492) *
              C1780 +
          (((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C2314 +
            (C83 * C1789 + C73 * C1793 + C84 * C1790 + C74 * C1794) * C27278) *
               C27526 * C27527 * C27492 -
           ((C84 * C2681 + C74 * C2687 + C83 * C2682 + C73 * C2688) * C27278 +
            (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C2314) *
               C27526 * C27527 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27321) *
               C27526 * C27527 * C591 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27321 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27526 * C27527 * C592 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27321) *
               C27526 * C27527 * C593) *
              C27492 +
          (((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C143 +
            (C83 * C1255 + C73 * C1259 + C84 * C1256 + C74 * C1260) * C27321) *
               C27526 * C27527 * C592 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C27321 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C143) *
               C27526 * C27527 * C591 -
           ((C84 * C1258 + C74 * C1262 + C83 * C1256 + C73 * C1260) * C27321 +
            (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C143) *
               C27526 * C27527 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1846 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C1779 -
           (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1847 -
           (C84 * C667 + C74 * C671 + C83 * C668 + C73 * C672) * C1780 +
           (C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1848 +
           (C83 * C1849 + C73 * C1852 + C84 * C1850 + C74 * C1853) * C1781) *
              C27526 * C27527 * C27278 * C27492 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C1847 -
           ((C84 * C1255 + C74 * C1259 + C83 * C1257 + C73 * C1261) * C1779 +
            (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1846) +
           (C83 * C2739 + C73 * C2743 + C84 * C2740 + C74 * C2744) * C1780 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C1848 -
           (C84 * C2741 + C74 * C2745 + C83 * C2742 + C73 * C2746) * C1781) *
              C27526 * C27527 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1313 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27492 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1314 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C27321 * C591 +
          ((C83 * C1189 + C73 * C1193 + C84 * C1190 + C74 * C1194) * C1314 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27492 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1313) +
           (C83 * C1315 + C73 * C1319 + C84 * C1317 + C74 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C592 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C1313 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27492 -
           (C84 * C1192 + C74 * C1199 + C83 * C1190 + C73 * C1194) * C1314 -
           (C84 * C1318 + C74 * C1322 + C83 * C1317 + C73 * C1321) * C27359) *
              C27526 * C27527 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1313 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27492 -
           (C84 * C1189 + C74 * C1193 + C83 * C1191 + C73 * C1197) * C1314 -
           (C84 * C1315 + C74 * C1319 + C83 * C1316 + C73 * C1320) * C27359) *
              C27526 * C27527 * C1779 +
          ((C83 * C2673 + C73 * C2677 + C84 * C2674 + C74 * C2678) * C1314 -
           ((C84 * C725 + C74 * C729 + C83 * C726 + C73 * C730) * C27492 +
            (C84 * C599 + C74 * C603 + C83 * C601 + C73 * C607) * C1313) +
           (C83 * C2797 + C73 * C2801 + C84 * C2798 + C74 * C2802) * C27359) *
              C27526 * C27527 * C1780 +
          ((C83 * C1784 + C73 * C1787 + C84 * C1785 + C74 * C1788) * C1313 +
           (C83 * C1905 + C73 * C1908 + C84 * C1906 + C74 * C1909) * C27492 -
           (C84 * C2675 + C74 * C2683 + C83 * C2676 + C73 * C2684) * C1314 -
           (C84 * C2799 + C74 * C2803 + C83 * C2800 + C73 * C2804) * C27359) *
              C27526 * C27527 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C596 +
                      (C233 * C96 + C27526 * C239) * C591 - C257 * C597 -
                      C258 * C592 + C259 * C598 + C260 * C593) *
                         C27527 * C73 +
                     (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C592 +
                      C261 * C598 + C262 * C593) *
                         C27527 * C74) *
                        C27492 +
                    ((C1390 * C597 -
                      ((C233 * C1196 + C27526 * C1377) * C591 +
                       (C233 * C1191 + C27526 * C1374) * C596) +
                      C1391 * C592 - C1392 * C598 - C1393 * C593) *
                         C27527 * C73 +
                     (C1392 * C597 - (C1391 * C591 + C1390 * C596) +
                      C1393 * C592 - (C233 * C1192 + C27526 * C1376) * C598 -
                      (C233 * C1200 + C27526 * C1380) * C593) *
                         C27527 * C74) *
                        C27359) *
                   C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C2314 +
                       (C233 * C96 + C27526 * C239) * C27278) *
                          C27527 * C73 +
                      (C257 * C2314 + C258 * C27278) * C27527 * C74) *
                         C27492 -
                     ((C1391 * C27278 + C1390 * C2314) * C27527 * C74 +
                      ((C233 * C1196 + C27526 * C1377) * C27278 +
                       (C233 * C1191 + C27526 * C1374) * C2314) *
                          C27527 * C73) *
                         C27359) *
                        C1779 +
                    ((((C233 * C2673 + C27526 * C2855) * C2314 +
                       (C233 * C2679 + C27526 * C2859) * C27278) *
                          C27527 * C73 +
                      ((C233 * C2674 + C27526 * C2856) * C2314 +
                       (C233 * C2680 + C27526 * C2860) * C27278) *
                          C27527 * C74) *
                         C27359 -
                     ((C801 * C27278 + C800 * C2314) * C27527 * C74 +
                      ((C233 * C606 + C27526 * C787) * C27278 +
                       (C233 * C601 + C27526 * C784) * C2314) *
                          C27527 * C73) *
                         C27492) *
                        C1780 +
                    ((((C233 * C1784 + C27526 * C1961) * C2314 +
                       (C233 * C1789 + C27526 * C1964) * C27278) *
                          C27527 * C73 +
                      (C1972 * C2314 + C1973 * C27278) * C27527 * C74) *
                         C27492 -
                     (((C233 * C2681 + C27526 * C2861) * C27278 +
                       (C233 * C2675 + C27526 * C2857) * C2314) *
                          C27527 * C74 +
                      ((C233 * C2682 + C27526 * C2862) * C27278 +
                       (C233 * C2676 + C27526 * C2858) * C2314) *
                          C27527 * C73) *
                         C27359) *
                        C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C27527 * C73 +
            (C302 + C314) * C27527 * C74) *
               C591 -
           ((C315 + C307) * C27527 * C74 + (C314 + C302) * C27527 * C73) *
               C592 +
           ((C307 + C315) * C27527 * C73 + (C308 + C316) * C27527 * C74) *
               C593) *
              C27492 +
          (((C1448 + C1456) * C27527 * C73 + (C1451 + C1457) * C27527 * C74) *
               C592 -
           ((C1456 + C1448) * C27527 * C74 +
            ((C233 * C1257 + C27526 * C1445) * C27321 +
             (C233 * C1191 + C27526 * C1374) * C143) *
                C27527 * C73) *
               C591 -
           (((C233 * C1258 + C27526 * C1446) * C27321 +
             (C233 * C1192 + C27526 * C1376) * C143) *
                C27527 * C74 +
            (C1457 + C1451) * C27527 * C73) *
               C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C27527 * C73 +
           (C2027 + C2028 - C2029 - C2030 + C2031 + C2035) * C27527 * C74) *
              C27278 * C27492 +
          (((C233 * C2673 + C27526 * C2855) * C1847 -
            ((C233 * C1257 + C27526 * C1445) * C1779 +
             (C233 * C1191 + C27526 * C1374) * C1846) +
            (C233 * C2739 + C27526 * C2913) * C1780 -
            (C233 * C2676 + C27526 * C2858) * C1848 -
            (C233 * C2742 + C27526 * C2914) * C1781) *
               C27527 * C73 +
           ((C233 * C2674 + C27526 * C2856) * C1847 -
            (C1454 * C1779 + C1390 * C1846) +
            (C233 * C2740 + C27526 * C2915) * C1780 -
            (C233 * C2675 + C27526 * C2857) * C1848 -
            (C233 * C2741 + C27526 * C2916) * C1781) *
               C27527 * C74) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C1313 +
                      (C233 * C189 + C27526 * C350) * C27492 -
                      (C233 * C1191 + C27526 * C1374) * C1314 -
                      (C233 * C1316 + C27526 * C1507) * C27359) *
                         C27527 * C73 +
                     (C1512 + C1513 - C1514 - C1524) * C27527 * C74) *
                        C27321 * C591 +
                    ((C1514 - (C1513 + C1512) + C1524) * C27527 * C73 +
                     (C1517 - (C1518 + C1519) + C1525) * C27527 * C74) *
                        C27321 * C592 +
                    ((C1519 + C1518 - C1517 - C1525) * C27527 * C73 +
                     (C261 * C1313 + C367 * C27492 -
                      (C233 * C1192 + C27526 * C1376) * C1314 -
                      (C233 * C1318 + C27526 * C1510) * C27359) *
                         C27527 * C74) *
                        C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C1313 +
                      (C233 * C189 + C27526 * C350) * C27492 -
                      (C233 * C1191 + C27526 * C1374) * C1314 -
                      (C233 * C1316 + C27526 * C1507) * C27359) *
                         C27527 * C73 +
                     (C1512 + C1513 - C1514 - C1524) * C27527 * C74) *
                        C1779 +
                    (((C233 * C2673 + C27526 * C2855) * C1314 -
                      ((C233 * C726 + C27526 * C922) * C27492 +
                       (C233 * C601 + C27526 * C784) * C1313) +
                      (C233 * C2797 + C27526 * C2967) * C27359) *
                         C27527 * C73 +
                     ((C233 * C2674 + C27526 * C2856) * C1314 -
                      (C932 * C27492 + C800 * C1313) +
                      (C233 * C2798 + C27526 * C2968) * C27359) *
                         C27527 * C74) *
                        C1780 +
                    (((C233 * C1784 + C27526 * C1961) * C1313 +
                      (C233 * C1905 + C27526 * C2085) * C27492 -
                      (C233 * C2676 + C27526 * C2858) * C1314 -
                      (C233 * C2800 + C27526 * C2969) * C27359) *
                         C27527 * C73 +
                     (C1972 * C1313 + C2092 * C27492 -
                      (C233 * C2675 + C27526 * C2857) * C1314 -
                      (C233 * C2799 + C27526 * C2970) * C27359) *
                         C27527 * C74) *
                        C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eezx[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C596 +
                      (C404 * C96 + C27527 * C410) * C591 - C428 * C597 -
                      C429 * C592 + C430 * C598 + C431 * C593) *
                         C73 +
                     (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C592 +
                      C432 * C598 + C433 * C593) *
                         C74) *
                        C27526 * C27492 +
                    ((C1592 * C597 -
                      ((C404 * C1196 + C27527 * C1579) * C591 +
                       (C404 * C1191 + C27527 * C1576) * C596) +
                      C1593 * C592 - C1594 * C598 - C1595 * C593) *
                         C73 +
                     (C1594 * C597 - (C1593 * C591 + C1592 * C596) +
                      C1595 * C592 - (C404 * C1192 + C27527 * C1578) * C598 -
                      (C404 * C1200 + C27527 * C1582) * C593) *
                         C74) *
                        C27526 * C27359) *
                   C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C2314 +
                       (C404 * C96 + C27527 * C410) * C27278) *
                          C73 +
                      (C428 * C2314 + C429 * C27278) * C74) *
                         C27526 * C27492 -
                     ((C1593 * C27278 + C1592 * C2314) * C74 +
                      ((C404 * C1196 + C27527 * C1579) * C27278 +
                       (C404 * C1191 + C27527 * C1576) * C2314) *
                          C73) *
                         C27526 * C27359) *
                        C1779 +
                    ((((C404 * C2673 + C27527 * C3021) * C2314 +
                       (C404 * C2679 + C27527 * C3025) * C27278) *
                          C73 +
                      ((C404 * C2674 + C27527 * C3022) * C2314 +
                       (C404 * C2680 + C27527 * C3026) * C27278) *
                          C74) *
                         C27526 * C27359 -
                     ((C1003 * C27278 + C1002 * C2314) * C74 +
                      ((C404 * C606 + C27527 * C989) * C27278 +
                       (C404 * C601 + C27527 * C986) * C2314) *
                          C73) *
                         C27526 * C27492) *
                        C1780 +
                    ((((C404 * C1784 + C27527 * C2143) * C2314 +
                       (C404 * C1789 + C27527 * C2146) * C27278) *
                          C73 +
                      (C2154 * C2314 + C2155 * C27278) * C74) *
                         C27526 * C27492 -
                     (((C404 * C2681 + C27527 * C3027) * C27278 +
                       (C404 * C2675 + C27527 * C3023) * C2314) *
                          C74 +
                      ((C404 * C2682 + C27527 * C3028) * C27278 +
                       (C404 * C2676 + C27527 * C3024) * C2314) *
                          C73) *
                         C27526 * C27359) *
                        C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C73 +
            (C473 + C485) * C74) *
               C27526 * C591 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27526 * C592 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27526 * C593) *
              C27492 +
          (((C1650 + C1658) * C73 + (C1653 + C1659) * C74) * C27526 * C592 -
           ((C1658 + C1650) * C74 + ((C404 * C1257 + C27527 * C1647) * C27321 +
                                     (C404 * C1191 + C27527 * C1576) * C143) *
                                        C73) *
               C27526 * C591 -
           (((C404 * C1258 + C27527 * C1648) * C27321 +
             (C404 * C1192 + C27527 * C1578) * C143) *
                C74 +
            (C1659 + C1653) * C73) *
               C27526 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 -
            (C404 * C601 + C27527 * C986) * C1847 -
            (C404 * C668 + C27527 * C1055) * C1780 +
            (C404 * C1784 + C27527 * C2143) * C1848 +
            (C404 * C1849 + C27527 * C2205) * C1781) *
               C73 +
           (C2209 + C2210 - C2211 - C2212 + C2213 + C2217) * C74) *
              C27526 * C27278 * C27492 +
          (((C404 * C2673 + C27527 * C3021) * C1847 -
            ((C404 * C1257 + C27527 * C1647) * C1779 +
             (C404 * C1191 + C27527 * C1576) * C1846) +
            (C404 * C2739 + C27527 * C3079) * C1780 -
            (C404 * C2676 + C27527 * C3024) * C1848 -
            (C404 * C2742 + C27527 * C3080) * C1781) *
               C73 +
           ((C404 * C2674 + C27527 * C3022) * C1847 -
            (C1656 * C1779 + C1592 * C1846) +
            (C404 * C2740 + C27527 * C3081) * C1780 -
            (C404 * C2675 + C27527 * C3023) * C1848 -
            (C404 * C2741 + C27527 * C3082) * C1781) *
               C74) *
              C27526 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C73 +
                     (C1714 + C1715 - C1716 - C1726) * C74) *
                        C27526 * C27321 * C591 +
                    ((C1716 - (C1715 + C1714) + C1726) * C73 +
                     (C1719 - (C1720 + C1721) + C1727) * C74) *
                        C27526 * C27321 * C592 +
                    ((C1721 + C1720 - C1719 - C1727) * C73 +
                     (C432 * C1313 + C538 * C27492 -
                      (C404 * C1192 + C27527 * C1578) * C1314 -
                      (C404 * C1318 + C27527 * C1712) * C27359) *
                         C74) *
                        C27526 * C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C73 +
                     (C1714 + C1715 - C1716 - C1726) * C74) *
                        C27526 * C1779 +
                    (((C404 * C2673 + C27527 * C3021) * C1314 -
                      ((C404 * C726 + C27527 * C1124) * C27492 +
                       (C404 * C601 + C27527 * C986) * C1313) +
                      (C404 * C2797 + C27527 * C3133) * C27359) *
                         C73 +
                     ((C404 * C2674 + C27527 * C3022) * C1314 -
                      (C1134 * C27492 + C1002 * C1313) +
                      (C404 * C2798 + C27527 * C3134) * C27359) *
                         C74) *
                        C27526 * C1780 +
                    (((C404 * C1784 + C27527 * C2143) * C1313 +
                      (C404 * C1905 + C27527 * C2267) * C27492 -
                      (C404 * C2676 + C27527 * C3024) * C1314 -
                      (C404 * C2800 + C27527 * C3135) * C27359) *
                         C73 +
                     (C2154 * C1313 + C2274 * C27492 -
                      (C404 * C2675 + C27527 * C3023) * C1314 -
                      (C404 * C2799 + C27527 * C3136) * C27359) *
                         C74) *
                        C27526 * C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4564 +
            (C9186 * C96 + C27525 * C104) * C27517 -
            (C9186 * C90 + C27525 * C95) * C4565 -
            (C9186 * C97 + C27525 * C105) * C27507 +
            (C9186 * C91 + C27525 * C98) * C4566 +
            (C9186 * C99 + C27525 * C106) * C4561) *
               C9184 +
           (C13166 + C13167 - C13168 - C13169 + C13170 + C13171) * C9185) *
              C27527 * C27347 * C4562 +
          ((C13168 - (C13167 + C13166) + C13169 - C13170 - C13171) * C9184 +
           (C10492 * C4565 - (C10493 * C27517 + C10494 * C4564) +
            C10495 * C27507 - (C9186 * C1786 + C27525 * C1791) * C4566 -
            (C9186 * C1792 + C27525 * C1795) * C4561) *
               C9185) *
              C27527 * C27347 * C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4617 +
            (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
            C9592 * C27335) *
               C9184 +
           (C9524 * C4617 + C9592 * C4562 - C10494 * C4618 - C10554 * C27335) *
               C9185) *
              C27527 * C27517 +
          ((C9526 * C4618 -
            ((C9186 * C145 + C27525 * C150) * C4562 +
             (C9186 * C90 + C27525 * C95) * C4617) +
            C9593 * C27335) *
               C9184 +
           (C10492 * C4618 - (C9593 * C4562 + C9526 * C4617) +
            C10555 * C27335) *
               C9185) *
              C27527 * C27507 +
          (((C9186 * C91 + C27525 * C98) * C4617 +
            (C9186 * C146 + C27525 * C151) * C4562 - C9528 * C4618 -
            C9594 * C27335) *
               C9184 +
           (C9528 * C4617 + C9594 * C4562 -
            (C9186 * C1786 + C27525 * C1791) * C4618 -
            (C9186 * C1851 + C27525 * C1854) * C27335) *
               C9185) *
              C27527 * C4561) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C4562 -
           ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
               C27335) *
              C27517 +
          (((C9648 + C9658) * C9184 + (C10609 + C10615) * C9185) * C27527 *
               C27335 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C4562) *
              C27507 +
          ((((C9186 * C91 + C27525 * C98) * C188 +
             (C9186 * C191 + C27525 * C196) * C27347) *
                C9184 +
            (C9651 + C9659) * C9185) *
               C27527 * C4562 -
           (((C9186 * C1907 + C27525 * C1910) * C27347 +
             (C9186 * C1786 + C27525 * C1791) * C188) *
                C9185 +
            (C9659 + C9651) * C9184) *
               C27527 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4564 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C27517 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C4565 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C27507 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C4566 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C4561) *
              C27527 * C27525 * C27347 * C4562 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C4565 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27517 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C4564) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C27507 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C4566 -
           (C9290 * C1792 + C9185 * C1966 + C9289 * C608 + C9184 * C789) *
               C4561) *
              C27527 * C27525 * C27347 * C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4617 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C4562 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C4618 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27335) *
              C27527 * C27525 * C27517 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C4618 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C4562 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C4617) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C27335) *
              C27527 * C27525 * C27507 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C4617 +
           (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) * C4562 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C4618 -
           (C9290 * C1851 + C9185 * C2025 + C9289 * C669 + C9184 * C855) *
               C27335) *
              C27527 * C27525 * C4561) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C4562 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C27335) *
              C27517 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C27335 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C4562) *
              C27507 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
                C27347) *
               C27527 * C27525 * C4562 -
           ((C9290 * C1907 + C9185 * C2087 + C9289 * C727 + C9184 * C923) *
                C27347 +
            (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
                C188) *
               C27527 * C27525 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C4564 +
                      (C404 * C96 + C27527 * C410) * C27517 - C428 * C4565 -
                      C429 * C27507 + C430 * C4566 + C431 * C4561) *
                         C27525 * C9184 +
                     (C13472 + C13473 - C13474 - C13475 + C13476 + C13477) *
                         C27525 * C9185) *
                        C27347 * C4562 +
                    ((C13474 - (C13473 + C13472) + C13475 - C13476 - C13477) *
                         C27525 * C9184 +
                     (C2154 * C4565 - (C10826 * C27517 + C10827 * C4564) +
                      C2155 * C27507 - (C404 * C1786 + C27527 * C2145) * C4566 -
                      (C404 * C1792 + C27527 * C2148) * C4561) *
                         C27525 * C9185) *
                        C27347 * C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C4617 +
            (C404 * C144 + C27527 * C467) * C4562 - C9868 * C4618 -
            C9924 * C27335) *
               C27525 * C9184 +
           (C9868 * C4617 + C9924 * C4562 - C10827 * C4618 - C10882 * C27335) *
               C27525 * C9185) *
              C27517 +
          ((C4930 - (C4929 + C4928) + C4931) * C27525 * C9184 +
           (C2154 * C4618 - (C1070 * C4562 + C1002 * C4617) + C2216 * C27335) *
               C27525 * C9185) *
              C27507 +
          ((C4934 + C4933 - C4932 - C4935) * C27525 * C9184 +
           (C1004 * C4617 + C1071 * C4562 -
            (C404 * C1786 + C27527 * C2145) * C4618 -
            (C404 * C1851 + C27527 * C2207) * C27335) *
               C27525 * C9185) *
              C4561) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C4562 -
           ((C10937 + C10935) * C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C27335) *
              C27517 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C27335 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C4562) *
              C27507 +
          (((C532 + C540) * C27525 * C9184 + (C1131 + C1137) * C27525 * C9185) *
               C4562 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C27525 * C9185 +
            (C1137 + C1131) * C27525 * C9184) *
               C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C5040 +
                      (C9186 * C96 + C27525 * C104) * C5035 -
                      (C9186 * C90 + C27525 * C95) * C5041 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C9184 +
                     (C13628 + C13629 - C13630 - C13631) * C9185) *
                        C27527 * C27347 * C27520 +
                    ((C13630 - (C13629 + C13628) + C13631) * C9184 +
                     (C13632 - (C13633 + C13634) + C13635) * C9185) *
                        C27527 * C27347 * C27512 +
                    ((C13634 + C13633 - C13632 - C13635) * C9184 +
                     (C10984 * C5040 + C10985 * C5035 -
                      (C9186 * C2315 + C27525 * C2319) * C5041 -
                      (C9186 * C2317 + C27525 * C2321) * C27283) *
                         C9185) *
                        C27527 * C27347 * C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C5092 +
            (C9186 * C144 + C27525 * C149) * C27520 - C9524 * C5093 -
            C9592 * C27512 + C10494 * C5094 + C10554 * C5039) *
               C9184 +
           (C9524 * C5092 + C9592 * C27520 - C10494 * C5093 - C10554 * C27512 +
            C10984 * C5094 + C11026 * C5039) *
               C9185) *
              C27527 * C5035 +
          ((C9526 * C5093 -
            ((C9186 * C145 + C27525 * C150) * C27520 +
             (C9186 * C90 + C27525 * C95) * C5092) +
            C9593 * C27512 - C10492 * C5094 - C10555 * C5039) *
               C9184 +
           (C10492 * C5093 - (C9593 * C27520 + C9526 * C5092) +
            C10555 * C27512 - (C9186 * C2315 + C27525 * C2319) * C5094 -
            (C9186 * C2361 + C27525 * C2363) * C5039) *
               C9185) *
              C27527 * C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C27520 -
           ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
               C27512 +
           ((C10608 + C10614) * C9184 + (C11063 + C11067) * C9185) * C27527 *
               C5039) *
              C5035 +
          (((C9648 + C9658) * C9184 + (C10609 + C10615) * C9185) * C27527 *
               C27512 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C27520 -
           (((C9186 * C2399 + C27525 * C2401) * C27347 +
             (C9186 * C2315 + C27525 * C2319) * C188) *
                C9185 +
            (C10615 + C10609) * C9184) *
               C27527 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5040 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C5035 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C5041 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
               C27283) *
              C27527 * C27525 * C27347 * C27520 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C5041 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C5035 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C5040) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C27512 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C5040 +
           (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
               C5035 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C5041 -
           (C9290 * C2317 + C9185 * C2439 + C9289 * C1790 + C9184 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5092 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27520 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C5093 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27512 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C5094 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C5039) *
              C27527 * C27525 * C5035 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C5093 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27520 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C5092) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C27512 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C5094 -
           (C9290 * C2361 + C9185 * C2476 + C9289 * C1850 + C9184 * C2024) *
               C5039) *
              C27527 * C27525 * C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C27520 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C27512 +
           ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C188 +
            (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
                C27347) *
               C27527 * C27525 * C5039) *
              C5035 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C27512 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C27520 -
           ((C9290 * C2399 + C9185 * C2511 + C9289 * C1906 + C9184 * C2086) *
                C27347 +
            (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
                C188) *
               C27527 * C27525 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C5040 +
                      (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
                      C429 * C27283) *
                         C27525 * C9184 +
                     (C13936 + C13937 - C13938 - C13939) * C27525 * C9185) *
                        C27347 * C27520 +
                    ((C13938 - (C13937 + C13936) + C13939) * C27525 * C9184 +
                     (C13940 - (C13941 + C13942) + C13943) * C27525 * C9185) *
                        C27347 * C27512 +
                    ((C13942 + C13941 - C13940 - C13943) * C27525 * C9184 +
                     (C11218 * C5040 + C11219 * C5035 -
                      (C404 * C2315 + C27527 * C2547) * C5041 -
                      (C404 * C2317 + C27527 * C2549) * C27283) *
                         C27525 * C9185) *
                        C27347 * C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C5092 +
            (C404 * C144 + C27527 * C467) * C27520 - C9868 * C5093 -
            C9924 * C27512 + C10827 * C5094 + C10882 * C5039) *
               C27525 * C9184 +
           (C9868 * C5092 + C9924 * C27520 - C10827 * C5093 - C10882 * C27512 +
            C11218 * C5094 + C11259 * C5039) *
               C27525 * C9185) *
              C5035 +
          ((C5404 - (C5403 + C5402) + C5405 - C5406 - C5407) * C27525 * C9184 +
           (C2154 * C5093 - (C1070 * C27520 + C1002 * C5092) + C2216 * C27512 -
            (C404 * C2315 + C27527 * C2547) * C5094 -
            (C404 * C2361 + C27527 * C2586) * C5039) *
               C27525 * C9185) *
              C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C27520 -
           ((C10937 + C10935) * C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C27512 +
           ((C10935 + C10937) * C27525 * C9184 +
            (C11295 + C11299) * C27525 * C9185) *
               C5039) *
              C5035 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C27512 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C27520 -
           (((C404 * C2399 + C27527 * C2621) * C27347 +
             (C404 * C2315 + C27527 * C2547) * C188) *
                C27525 * C9185 +
            (C2275 + C2271) * C27525 * C9184) *
               C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[17] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C5040 +
                       (C9186 * C96 + C27525 * C104) * C5035 -
                       (C9186 * C90 + C27525 * C95) * C5041 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C9184 +
                      (C13628 + C13629 - C13630 - C13631) * C9185) *
                         C27527 * C27492 +
                     (((C9186 * C1189 + C27525 * C1193) * C5041 -
                       ((C9186 * C1196 + C27525 * C1202) * C5035 +
                        (C9186 * C1191 + C27525 * C1197) * C5040) +
                       (C9186 * C1195 + C27525 * C1201) * C27283) *
                          C9184 +
                      (C14118 - (C14112 + C14113) + C14119) * C9185) *
                         C27527 * C27359) *
                        C4562 +
                    (((C13630 - (C13629 + C13628) + C13631) * C9184 +
                      (C13632 - (C13633 + C13634) + C13635) * C9185) *
                         C27527 * C27492 +
                     ((C14113 + C14112 - C14118 - C14119) * C9184 +
                      (C11364 * C5040 + C11365 * C5035 -
                       (C9186 * C2675 + C27525 * C2683) * C5041 -
                       (C9186 * C2681 + C27525 * C2687) * C27283) *
                          C9185) *
                         C27527 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[17] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C4617 +
             (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
             C9592 * C27335) *
                C9184 +
            (C9524 * C4617 + C9592 * C4562 - C10494 * C4618 - C10554 * C27335) *
                C9185) *
               C27527 * C5035 +
           ((C9526 * C4618 -
             ((C9186 * C145 + C27525 * C150) * C4562 +
              (C9186 * C90 + C27525 * C95) * C4617) +
             C9593 * C27335) *
                C9184 +
            (C10492 * C4618 - (C9593 * C4562 + C9526 * C4617) +
             C10555 * C27335) *
                C9185) *
               C27527 * C27283) *
              C27492 +
          (((C11363 * C4618 -
             ((C9186 * C1257 + C27525 * C1261) * C4562 +
              (C9186 * C1191 + C27525 * C1197) * C4617) +
             C11426 * C27335) *
                C9184 +
            (C11364 * C4618 - (C11426 * C4562 + C11363 * C4617) +
             C11427 * C27335) *
                C9185) *
               C27527 * C5035 +
           (((C9186 * C1189 + C27525 * C1193) * C4617 +
             (C9186 * C1255 + C27525 * C1259) * C4562 - C14116 * C4618 -
             C14188 * C27335) *
                C9184 +
            (C14116 * C4617 + C14188 * C4562 -
             (C9186 * C2675 + C27525 * C2683) * C4618 -
             (C9186 * C2741 + C27525 * C2745) * C27335) *
                C9185) *
               C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[17] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C1313 +
                       (C9186 * C189 + C27525 * C194) * C27492 -
                       (C9186 * C1191 + C27525 * C1197) * C1314 -
                       (C9186 * C1316 + C27525 * C1320) * C27359) *
                          C9184 +
                      (C11480 + C11481 - C11482 - C11492) * C9185) *
                         C27527 * C4562 +
                     ((C11482 - (C11481 + C11480) + C11492) * C9184 +
                      (C11485 - (C11486 + C11487) + C11493) * C9185) *
                         C27527 * C27335) *
                        C5035 +
                    ((((C9186 * C1189 + C27525 * C1193) * C1314 -
                       ((C9186 * C190 + C27525 * C195) * C27492 +
                        (C9186 * C90 + C27525 * C95) * C1313) +
                       (C9186 * C1315 + C27525 * C1319) * C27359) *
                          C9184 +
                      (C14255 - (C14256 + C14257) + C14261) * C9185) *
                         C27527 * C4562 +
                     ((C14257 + C14256 - C14255 - C14261) * C9184 +
                      (C10492 * C1313 + C10613 * C27492 -
                       (C9186 * C2675 + C27525 * C2683) * C1314 -
                       (C9186 * C2799 + C27525 * C2803) * C27359) *
                          C9185) *
                         C27527 * C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5040 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C5035 -
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C5041 -
            (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
                C27283) *
               C27527 * C27525 * C27492 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C5041 -
            ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                 C5035 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C5040) +
            (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C4562 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C5041 -
            ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                 C5035 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C5040) +
            (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
                C27283) *
               C27527 * C27525 * C27492 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C5040 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C5035 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C5041 -
            (C9290 * C2681 + C9185 * C2861 + C9289 * C2680 + C9184 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4617 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C4562 -
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C4618 -
            (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
                C27335) *
               C27527 * C27525 * C5035 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C4618 -
            ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                 C4562 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C4617) +
            (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
                C27335) *
               C27527 * C27525 * C27283) *
              C27492 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C4618 -
            ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                 C4562 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C4617) +
            (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
                C27335) *
               C27527 * C27525 * C5035 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C4617 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C4562 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C4618 -
            (C9290 * C2741 + C9185 * C2916 + C9289 * C2740 + C9184 * C2915) *
                C27335) *
               C27527 * C27525 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1313 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27492 -
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C1314 -
            (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
                C27359) *
               C27527 * C27525 * C4562 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C1314 -
            ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                 C27492 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C1313) +
            (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
                C27359) *
               C27527 * C27525 * C27335) *
              C5035 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C1314 -
            ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                 C27492 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C1313) +
            (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
                C27359) *
               C27527 * C27525 * C4562 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C1313 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27492 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C1314 -
            (C9290 * C2799 + C9185 * C2970 + C9289 * C2798 + C9184 * C2968) *
                C27359) *
               C27527 * C27525 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[17] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C5040 +
                       (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
                       C429 * C27283) *
                          C27525 * C9184 +
                      (C13936 + C13937 - C13938 - C13939) * C27525 * C9185) *
                         C27492 +
                     ((C1592 * C5041 -
                       ((C404 * C1196 + C27527 * C1579) * C5035 +
                        (C404 * C1191 + C27527 * C1576) * C5040) +
                       C1593 * C27283) *
                          C27525 * C9184 +
                      (C14526 - (C14527 + C14528) + C14529) * C27525 * C9185) *
                         C27359) *
                        C4562 +
                    (((C13938 - (C13937 + C13936) + C13939) * C27525 * C9184 +
                      (C13940 - (C13941 + C13942) + C13943) * C27525 * C9185) *
                         C27492 +
                     ((C14528 + C14527 - C14526 - C14529) * C27525 * C9184 +
                      (C11710 * C5040 + C11711 * C5035 -
                       (C404 * C2675 + C27527 * C3023) * C5041 -
                       (C404 * C2681 + C27527 * C3027) * C27283) *
                          C27525 * C9185) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C4617 +
             (C404 * C144 + C27527 * C467) * C4562 - C9868 * C4618 -
             C9924 * C27335) *
                C27525 * C9184 +
            (C9868 * C4617 + C9924 * C4562 - C10827 * C4618 - C10882 * C27335) *
                C27525 * C9185) *
               C5035 +
           ((C4930 - (C4929 + C4928) + C4931) * C27525 * C9184 +
            (C2154 * C4618 - (C1070 * C4562 + C1002 * C4617) + C2216 * C27335) *
                C27525 * C9185) *
               C27283) *
              C27492 +
          (((C11709 * C4618 -
             ((C404 * C1257 + C27527 * C1647) * C4562 +
              (C404 * C1191 + C27527 * C1576) * C4617) +
             C11771 * C27335) *
                C27525 * C9184 +
            (C11710 * C4618 - (C11771 * C4562 + C11709 * C4617) +
             C11772 * C27335) *
                C27525 * C9185) *
               C5035 +
           ((C6029 + C6028 - C6027 - C6033) * C27525 * C9184 +
            (C5958 * C4617 + C6032 * C4562 -
             (C404 * C2675 + C27527 * C3023) * C4618 -
             (C404 * C2741 + C27527 * C3082) * C27335) *
                C27525 * C9185) *
               C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[17] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C1313 +
                       (C404 * C189 + C27527 * C521) * C27492 -
                       (C404 * C1191 + C27527 * C1576) * C1314 -
                       (C404 * C1316 + C27527 * C1709) * C27359) *
                          C27525 * C9184 +
                      (C11824 + C11825 - C11826 - C11836) * C27525 * C9185) *
                         C4562 +
                     ((C11826 - (C11825 + C11824) + C11836) * C27525 * C9184 +
                      (C11829 - (C11830 + C11831) + C11837) * C27525 * C9185) *
                         C27335) *
                        C5035 +
                    (((C1716 - (C1715 + C1714) + C1726) * C27525 * C9184 +
                      (C6101 - (C6102 + C6103) + C6107) * C27525 * C9185) *
                         C4562 +
                     ((C6103 + C6102 - C6101 - C6107) * C27525 * C9184 +
                      (C2154 * C1313 + C2274 * C27492 -
                       (C404 * C2675 + C27527 * C3023) * C1314 -
                       (C404 * C2799 + C27527 * C3136) * C27359) *
                          C27525 * C9185) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C26163 +
                       (C9186 * C96 + C27525 * C104) * C27481 -
                       (C9186 * C90 + C27525 * C95) * C26156 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C9184 +
                      (C10480 + C10481 - C10482 - C10483) * C9185) *
                         C27527 * C6157 +
                     (((C9186 * C1189 + C27525 * C1193) * C26156 -
                       ((C9186 * C1196 + C27525 * C1202) * C27481 +
                        (C9186 * C1191 + C27525 * C1197) * C26163) +
                       (C9186 * C1195 + C27525 * C1201) * C27283) *
                          C9184 +
                      (C16234 - (C16235 + C16236) + C16237) * C9185) *
                         C27527 * C27359) *
                        C4562 +
                    (((C10482 - (C10481 + C10480) + C10483) * C9184 +
                      (C10496 - (C10497 + C10498) + C10499) * C9185) *
                         C27527 * C6157 +
                     ((C16236 + C16235 - C16234 - C16237) * C9184 +
                      (C11364 * C26163 + C11365 * C27481 -
                       (C9186 * C2675 + C27525 * C2683) * C26156 -
                       (C9186 * C2681 + C27525 * C2687) * C27283) *
                          C9185) *
                         C27527 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C4617 +
             (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
             C9592 * C27335) *
                C9184 +
            (C9524 * C4617 + C9592 * C4562 - C10494 * C4618 - C10554 * C27335) *
                C9185) *
               C27527 * C27481 +
           ((C9526 * C4618 -
             ((C9186 * C145 + C27525 * C150) * C4562 +
              (C9186 * C90 + C27525 * C95) * C4617) +
             C9593 * C27335) *
                C9184 +
            (C10492 * C4618 - (C9593 * C4562 + C9526 * C4617) +
             C10555 * C27335) *
                C9185) *
               C27527 * C27283) *
              C6157 +
          (((C11363 * C4618 -
             ((C9186 * C1257 + C27525 * C1261) * C4562 +
              (C9186 * C1191 + C27525 * C1197) * C4617) +
             C11426 * C27335) *
                C9184 +
            (C11364 * C4618 - (C11426 * C4562 + C11363 * C4617) +
             C11427 * C27335) *
                C9185) *
               C27527 * C27481 +
           (((C9186 * C1189 + C27525 * C1193) * C4617 +
             (C9186 * C1255 + C27525 * C1259) * C4562 - C14116 * C4618 -
             C14188 * C27335) *
                C9184 +
            (C14116 * C4617 + C14188 * C4562 -
             (C9186 * C2675 + C27525 * C2683) * C4618 -
             (C9186 * C2741 + C27525 * C2745) * C27335) *
                C9185) *
               C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C6259 +
                       (C9186 * C189 + C27525 * C194) * C6157 -
                       (C9186 * C1191 + C27525 * C1197) * C6260 -
                       (C9186 * C1316 + C27525 * C1320) * C27359) *
                          C9184 +
                      (C15310 + C15311 - C15312 - C15313) * C9185) *
                         C27527 * C4562 +
                     ((C15312 - (C15311 + C15310) + C15313) * C9184 +
                      (C11364 * C6260 - (C10612 * C6157 + C10494 * C6259) +
                       C11491 * C27359) *
                          C9185) *
                         C27527 * C27335) *
                        C27481 +
                    ((((C9186 * C1189 + C27525 * C1193) * C6260 -
                       ((C9186 * C190 + C27525 * C195) * C6157 +
                        (C9186 * C90 + C27525 * C95) * C6259) +
                       (C9186 * C1315 + C27525 * C1319) * C27359) *
                          C9184 +
                      (C15314 - (C15315 + C15316) + C15317) * C9185) *
                         C27527 * C4562 +
                     ((C15316 + C15315 - C15314 - C15317) * C9184 +
                      (C10492 * C6259 + C10613 * C6157 -
                       (C9186 * C2675 + C27525 * C2683) * C6260 -
                       (C9186 * C2799 + C27525 * C2803) * C27359) *
                          C9185) *
                         C27527 * C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) *
                C26163 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27481 -
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C26156 -
            (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
                C27283) *
               C27527 * C27525 * C6157 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C26156 -
            ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                 C27481 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C26163) +
            (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C4562 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C26156 -
            ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                 C27481 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C26163) +
            (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
                C27283) *
               C27527 * C27525 * C6157 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C26163 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27481 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C26156 -
            (C9290 * C2681 + C9185 * C2861 + C9289 * C2680 + C9184 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4617 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C4562 -
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C4618 -
            (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
                C27335) *
               C27527 * C27525 * C27481 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C4618 -
            ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                 C4562 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C4617) +
            (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
                C27335) *
               C27527 * C27525 * C27283) *
              C6157 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C4618 -
            ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                 C4562 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C4617) +
            (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
                C27335) *
               C27527 * C27525 * C27481 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C4617 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C4562 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C4618 -
            (C9290 * C2741 + C9185 * C2916 + C9289 * C2740 + C9184 * C2915) *
                C27335) *
               C27527 * C27525 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C6259 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C6157 -
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C6260 -
            (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
                C27359) *
               C27527 * C27525 * C4562 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C6260 -
            ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                 C6157 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C6259) +
            (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
                C27359) *
               C27527 * C27525 * C27335) *
              C27481 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C6260 -
            ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                 C6157 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C6259) +
            (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
                C27359) *
               C27527 * C27525 * C4562 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C6259 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C6157 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C6260 -
            (C9290 * C2799 + C9185 * C2970 + C9289 * C2798 + C9184 * C2968) *
                C27359) *
               C27527 * C27525 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C26163 +
                       (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
                       C429 * C27283) *
                          C27525 * C9184 +
                      (C10816 + C10817 - C10818 - C10819) * C27525 * C9185) *
                         C6157 +
                     ((C1592 * C26156 -
                       ((C404 * C1196 + C27527 * C1579) * C27481 +
                        (C404 * C1191 + C27527 * C1576) * C26163) +
                       C1593 * C27283) *
                          C27525 * C9184 +
                      (C16634 - (C16635 + C16636) + C16637) * C27525 * C9185) *
                         C27359) *
                        C4562 +
                    (((C10818 - (C10817 + C10816) + C10819) * C27525 * C9184 +
                      (C10820 - (C10828 + C10829) + C10825) * C27525 * C9185) *
                         C6157 +
                     ((C16636 + C16635 - C16634 - C16637) * C27525 * C9184 +
                      (C11710 * C26163 + C11711 * C27481 -
                       (C404 * C2675 + C27527 * C3023) * C26156 -
                       (C404 * C2681 + C27527 * C3027) * C27283) *
                          C27525 * C9185) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C4617 +
             (C404 * C144 + C27527 * C467) * C4562 - C9868 * C4618 -
             C9924 * C27335) *
                C27525 * C9184 +
            (C9868 * C4617 + C9924 * C4562 - C10827 * C4618 - C10882 * C27335) *
                C27525 * C9185) *
               C27481 +
           ((C4930 - (C4929 + C4928) + C4931) * C27525 * C9184 +
            (C2154 * C4618 - (C1070 * C4562 + C1002 * C4617) + C2216 * C27335) *
                C27525 * C9185) *
               C27283) *
              C6157 +
          (((C11709 * C4618 -
             ((C404 * C1257 + C27527 * C1647) * C4562 +
              (C404 * C1191 + C27527 * C1576) * C4617) +
             C11771 * C27335) *
                C27525 * C9184 +
            (C11710 * C4618 - (C11771 * C4562 + C11709 * C4617) +
             C11772 * C27335) *
                C27525 * C9185) *
               C27481 +
           ((C6029 + C6028 - C6027 - C6033) * C27525 * C9184 +
            (C5958 * C4617 + C6032 * C4562 -
             (C404 * C2675 + C27527 * C3023) * C4618 -
             (C404 * C2741 + C27527 * C3082) * C27335) *
                C27525 * C9185) *
               C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C6259 +
                       (C404 * C189 + C27527 * C521) * C6157 -
                       (C404 * C1191 + C27527 * C1576) * C6260 -
                       (C404 * C1316 + C27527 * C1709) * C27359) *
                          C27525 * C9184 +
                      (C15714 + C15715 - C15716 - C15717) * C27525 * C9185) *
                         C4562 +
                     ((C15716 - (C15715 + C15714) + C15717) * C27525 * C9184 +
                      (C11710 * C6260 - (C10936 * C6157 + C10827 * C6259) +
                       C11835 * C27359) *
                          C27525 * C9185) *
                         C27335) *
                        C27481 +
                    (((C6572 - (C6571 + C6570) + C6573) * C27525 * C9184 +
                      (C7184 - (C7185 + C7186) + C7187) * C27525 * C9185) *
                         C4562 +
                     ((C7186 + C7185 - C7184 - C7187) * C27525 * C9184 +
                      (C2154 * C6259 + C2274 * C6157 -
                       (C404 * C2675 + C27527 * C3023) * C6260 -
                       (C404 * C2799 + C27527 * C3136) * C27359) *
                          C27525 * C9185) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[19] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C9184 +
                      (C10976 + C10977) * C9185) *
                         C27527 * C6157 -
                     ((C11366 + C11367) * C9185 +
                      ((C9186 * C1196 + C27525 * C1202) * C27278 +
                       (C9186 * C1191 + C27525 * C1197) * C2314) *
                          C9184) *
                         C27527 * C27359) *
                        C27520 +
                    (((C11367 + C11366) * C9184 + (C11368 + C11369) * C9185) *
                         C27527 * C27359 -
                     ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                         C27527 * C6157) *
                        C27512 +
                    (((C10979 + C10978) * C9184 + (C10986 + C10987) * C9185) *
                         C27527 * C6157 -
                     (((C9186 * C11350 + C27525 * C11352) * C27278 +
                       (C9186 * C11349 + C27525 * C11351) * C2314) *
                          C9185 +
                      (C11369 + C11368) * C9184) *
                         C27527 * C27359) *
                        C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[19] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C5092 +
            (C9186 * C144 + C27525 * C149) * C27520 - C9524 * C5093 -
            C9592 * C27512 + C10494 * C5094 + C10554 * C5039) *
               C9184 +
           (C9524 * C5092 + C9592 * C27520 - C10494 * C5093 - C10554 * C27512 +
            C10984 * C5094 + C11026 * C5039) *
               C9185) *
              C27527 * C27278 * C6157 +
          ((C11363 * C5093 -
            ((C9186 * C1257 + C27525 * C1261) * C27520 +
             (C9186 * C1191 + C27525 * C1197) * C5092) +
            C11426 * C27512 - C11364 * C5094 - C11427 * C5039) *
               C9184 +
           (C11364 * C5093 - (C11426 * C27520 + C11363 * C5092) +
            C11427 * C27512 - (C9186 * C11349 + C27525 * C11351) * C5094 -
            (C9186 * C11419 + C27525 * C11420) * C5039) *
               C9185) *
              C27527 * C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[19] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C6259 +
                      (C9186 * C189 + C27525 * C194) * C6157 -
                      (C9186 * C1191 + C27525 * C1197) * C6260 -
                      (C9186 * C1316 + C27525 * C1320) * C27359) *
                         C9184 +
                     (C15310 + C15311 - C15312 - C15313) * C9185) *
                        C27527 * C27520 +
                    ((C15312 - (C15311 + C15310) + C15313) * C9184 +
                     (C16920 - (C16921 + C16922) + C16923) * C9185) *
                        C27527 * C27512 +
                    ((C16922 + C16921 - C16920 - C16923) * C9184 +
                     (C10984 * C6259 + C11066 * C6157 -
                      (C9186 * C11349 + C27525 * C11351) * C6260 -
                      (C9186 * C11477 + C27525 * C11478) * C27359) *
                         C9185) *
                        C27527 * C5039) *
                   C27278) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27278) *
               C27527 * C27525 * C6157 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27278 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C2314) *
               C27527 * C27525 * C27359) *
              C27520 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C2314 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27278) *
               C27527 * C27525 * C27359 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27278 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C2314) *
               C27527 * C27525 * C6157) *
              C27512 +
          (((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C2314 +
            (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
                C27278) *
               C27527 * C27525 * C6157 -
           ((C9290 * C11350 + C9185 * C11544 + C9289 * C2682 + C9184 * C2862) *
                C27278 +
            (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
                C2314) *
               C27527 * C27525 * C27359) *
              C5039)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5092 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27520 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C5093 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27512 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C5094 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C5039) *
              C27527 * C27525 * C27278 * C6157 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C5093 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27520 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C5092) +
           (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
               C27512 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C5094 -
           (C9290 * C11419 + C9185 * C11595 + C9289 * C2742 + C9184 * C2914) *
               C5039) *
              C27527 * C27525 * C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C6259 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) * C6157 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C6260 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C27520 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C6260 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C6157 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C6259) +
           (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
               C27359) *
              C27527 * C27525 * C27512 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C6259 +
           (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
               C6157 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C6260 -
           (C9290 * C11477 + C9185 * C11646 + C9289 * C2800 + C9184 * C2969) *
               C27359) *
              C27527 * C27525 * C5039) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eezx[19] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C2314 +
                       (C404 * C96 + C27527 * C410) * C27278) *
                          C27525 * C9184 +
                      (C11210 + C11211) * C27525 * C9185) *
                         C6157 -
                     ((C11712 + C11713) * C27525 * C9185 +
                      ((C404 * C1196 + C27527 * C1579) * C27278 +
                       (C404 * C1191 + C27527 * C1576) * C2314) *
                          C27525 * C9184) *
                         C27359) *
                        C27520 +
                    (((C11713 + C11712) * C27525 * C9184 +
                      (C11714 + C11715) * C27525 * C9185) *
                         C27359 -
                     ((C11212 + C11213) * C27525 * C9185 +
                      (C11211 + C11210) * C27525 * C9184) *
                         C6157) *
                        C27512 +
                    (((C11213 + C11212) * C27525 * C9184 +
                      (C11220 + C11221) * C27525 * C9185) *
                         C6157 -
                     (((C404 * C11350 + C27527 * C11698) * C27278 +
                       (C404 * C11349 + C27527 * C11697) * C2314) *
                          C27525 * C9185 +
                      (C11715 + C11714) * C27525 * C9184) *
                         C27359) *
                        C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C5092 +
            (C404 * C144 + C27527 * C467) * C27520 - C9868 * C5093 -
            C9924 * C27512 + C10827 * C5094 + C10882 * C5039) *
               C27525 * C9184 +
           (C9868 * C5092 + C9924 * C27520 - C10827 * C5093 - C10882 * C27512 +
            C11218 * C5094 + C11259 * C5039) *
               C27525 * C9185) *
              C27278 * C6157 +
          ((C11709 * C5093 -
            ((C404 * C1257 + C27527 * C1647) * C27520 +
             (C404 * C1191 + C27527 * C1576) * C5092) +
            C11771 * C27512 - C11710 * C5094 - C11772 * C5039) *
               C27525 * C9184 +
           (C11710 * C5093 - (C11771 * C27520 + C11709 * C5092) +
            C11772 * C27512 - (C404 * C11349 + C27527 * C11697) * C5094 -
            (C404 * C11419 + C27527 * C11765) * C5039) *
               C27525 * C9185) *
              C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[19] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C6259 +
                      (C404 * C189 + C27527 * C521) * C6157 -
                      (C404 * C1191 + C27527 * C1576) * C6260 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C27525 * C9184 +
                     (C15714 + C15715 - C15716 - C15717) * C27525 * C9185) *
                        C27520 +
                    ((C15716 - (C15715 + C15714) + C15717) * C27525 * C9184 +
                     (C17224 - (C17225 + C17226) + C17227) * C27525 * C9185) *
                        C27512 +
                    ((C17226 + C17225 - C17224 - C17227) * C27525 * C9184 +
                     (C11218 * C6259 + C11298 * C6157 -
                      (C404 * C11349 + C27527 * C11697) * C6260 -
                      (C404 * C11477 + C27527 * C11822) * C27359) *
                         C27525 * C9185) *
                        C5039) *
                   C27278) /
                  (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C9184 +
                      (C10976 + C10977) * C9185) *
                         C27527 * C27521 -
                     ((C11366 + C11367) * C9185 +
                      ((C9186 * C1196 + C27525 * C1202) * C27278 +
                       (C9186 * C1191 + C27525 * C1197) * C2314) *
                          C9184) *
                         C27527 * C27515 +
                     (((C9186 * C3190 + C27525 * C3193) * C2314 +
                       (C9186 * C3195 + C27525 * C3199) * C27278) *
                          C9184 +
                      (C12348 + C12349) * C9185) *
                         C27527 * C7239) *
                        C4562 +
                    (((C11367 + C11366) * C9184 + (C11368 + C11369) * C9185) *
                         C27527 * C27515 -
                     ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                         C27527 * C27521 -
                     (((C9186 * C12338 + C27525 * C12340) * C27278 +
                       (C9186 * C12337 + C27525 * C12339) * C2314) *
                          C9185 +
                      (C12349 + C12348) * C9184) *
                         C27527 * C7239) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4617 +
            (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
            C9592 * C27335) *
               C9184 +
           (C9524 * C4617 + C9592 * C4562 - C10494 * C4618 - C10554 * C27335) *
               C9185) *
              C27527 * C27278 * C27521 +
          ((C11363 * C4618 -
            ((C9186 * C1257 + C27525 * C1261) * C4562 +
             (C9186 * C1191 + C27525 * C1197) * C4617) +
            C11426 * C27335) *
               C9184 +
           (C11364 * C4618 - (C11426 * C4562 + C11363 * C4617) +
            C11427 * C27335) *
               C9185) *
              C27527 * C27278 * C27515 +
          (((C9186 * C3190 + C27525 * C3193) * C4617 +
            (C9186 * C3252 + C27525 * C3255) * C4562 - C12346 * C4618 -
            C12404 * C27335) *
               C9184 +
           (C12346 * C4617 + C12404 * C4562 -
            (C9186 * C12337 + C27525 * C12339) * C4618 -
            (C9186 * C12399 + C27525 * C12400) * C27335) *
               C9185) *
              C27527 * C27278 * C7239)) /
        (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C7340 +
            (C9186 * C189 + C27525 * C194) * C27521 -
            (C9186 * C1191 + C27525 * C1197) * C7341 -
            (C9186 * C1316 + C27525 * C1320) * C27515 +
            (C9186 * C3190 + C27525 * C3193) * C7342 +
            (C9186 * C3311 + C27525 * C3314) * C7239) *
               C9184 +
           (C17378 + C17379 - C17380 - C17381 + C17382 + C17383) * C9185) *
              C27527 * C4562 +
          ((C17380 - (C17379 + C17378) + C17381 - C17382 - C17383) * C9184 +
           (C11364 * C7341 - (C10612 * C27521 + C10494 * C7340) +
            C11491 * C27515 - (C9186 * C12337 + C27525 * C12339) * C7342 -
            (C9186 * C12454 + C27525 * C12455) * C7239) *
               C9185) *
              C27527 * C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eeyx[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27278) *
               C27527 * C27525 * C27521 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27278 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C2314) *
               C27527 * C27525 * C27515 +
           ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
                C2314 +
            (C9289 * C3195 + C9184 * C3370 + C9290 * C3734 + C9185 * C3900) *
                C27278) *
               C27527 * C27525 * C7239) *
              C4562 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C2314 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27278) *
               C27527 * C27525 * C27515 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27278 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C2314) *
               C27527 * C27525 * C27521 -
           ((C9290 * C12338 + C9185 * C12516 + C9289 * C3734 + C9184 * C3900) *
                C27278 +
            (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
                C2314) *
               C27527 * C27525 * C7239) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4617 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C4562 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C4618 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27335) *
              C27527 * C27525 * C27278 * C27521 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C4618 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C4562 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C4617) +
           (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
               C27335) *
              C27527 * C27525 * C27278 * C27515 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C4617 +
           (C9289 * C3252 + C9184 * C3429 + C9290 * C3790 + C9185 * C3951) *
               C4562 -
           (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
               C4618 -
           (C9290 * C12399 + C9185 * C12567 + C9289 * C3790 + C9184 * C3951) *
               C27335) *
              C27527 * C27525 * C27278 * C7239)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C7340 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27521 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C7341 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27515 +
           (C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C7342 +
           (C9289 * C3311 + C9184 * C3487 + C9290 * C3844 + C9185 * C4003) *
               C7239) *
              C27527 * C27525 * C4562 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C7341 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27521 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C7340) +
           (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
               C27515 -
           (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
               C7342 -
           (C9290 * C12454 + C9185 * C12618 + C9289 * C3844 + C9184 * C4003) *
               C7239) *
              C27527 * C27525 * C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eezx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C2314 +
                       (C404 * C96 + C27527 * C410) * C27278) *
                          C27525 * C9184 +
                      (C11210 + C11211) * C27525 * C9185) *
                         C27521 -
                     ((C11712 + C11713) * C27525 * C9185 +
                      ((C404 * C1196 + C27527 * C1579) * C27278 +
                       (C404 * C1191 + C27527 * C1576) * C2314) *
                          C27525 * C9184) *
                         C27515 +
                     (((C404 * C3190 + C27527 * C3549) * C2314 +
                       (C404 * C3195 + C27527 * C3552) * C27278) *
                          C27525 * C9184 +
                      (C12678 + C12679) * C27525 * C9185) *
                         C7239) *
                        C4562 +
                    (((C11713 + C11712) * C27525 * C9184 +
                      (C11714 + C11715) * C27525 * C9185) *
                         C27515 -
                     ((C11212 + C11213) * C27525 * C9185 +
                      (C11211 + C11210) * C27525 * C9184) *
                         C27521 -
                     (((C404 * C12338 + C27527 * C12670) * C27278 +
                       (C404 * C12337 + C27527 * C12669) * C2314) *
                          C27525 * C9185 +
                      (C12679 + C12678) * C27525 * C9184) *
                         C7239) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C4617 +
            (C404 * C144 + C27527 * C467) * C4562 - C9868 * C4618 -
            C9924 * C27335) *
               C27525 * C9184 +
           (C9868 * C4617 + C9924 * C4562 - C10827 * C4618 - C10882 * C27335) *
               C27525 * C9185) *
              C27278 * C27521 +
          ((C11709 * C4618 -
            ((C404 * C1257 + C27527 * C1647) * C4562 +
             (C404 * C1191 + C27527 * C1576) * C4617) +
            C11771 * C27335) *
               C27525 * C9184 +
           (C11710 * C4618 - (C11771 * C4562 + C11709 * C4617) +
            C11772 * C27335) *
               C27525 * C9185) *
              C27278 * C27515 +
          (((C404 * C3190 + C27527 * C3549) * C4617 +
            (C404 * C3252 + C27527 * C3611) * C4562 - C12676 * C4618 -
            C12733 * C27335) *
               C27525 * C9184 +
           (C12676 * C4617 + C12733 * C4562 -
            (C404 * C12337 + C27527 * C12669) * C4618 -
            (C404 * C12399 + C27527 * C12729) * C27335) *
               C27525 * C9185) *
              C27278 * C7239)) /
        (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C7340 +
            (C404 * C189 + C27527 * C521) * C27521 -
            (C404 * C1191 + C27527 * C1576) * C7341 -
            (C404 * C1316 + C27527 * C1709) * C27515 +
            (C404 * C3190 + C27527 * C3549) * C7342 +
            (C404 * C3311 + C27527 * C3669) * C7239) *
               C27525 * C9184 +
           (C17684 + C17685 - C17686 - C17687 + C17688 + C17689) * C27525 *
               C9185) *
              C4562 +
          ((C17686 - (C17685 + C17684) + C17687 - C17688 - C17689) * C27525 *
               C9184 +
           (C11710 * C7341 - (C10936 * C27521 + C10827 * C7340) +
            C11835 * C27515 - (C404 * C12337 + C27527 * C12669) * C7342 -
            (C404 * C12454 + C27527 * C12783) * C7239) *
               C27525 * C9185) *
              C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eexx[21] +=
        (-std::pow(Pi, 2.5) * ((((C9186 * C89 + C27525 * C94) * C26163 +
                                 (C9186 * C96 + C27525 * C104) * C27481 -
                                 (C9186 * C90 + C27525 * C95) * C26156 -
                                 (C9186 * C97 + C27525 * C105) * C27283) *
                                    C9184 +
                                (C10480 + C10481 - C10482 - C10483) * C9185) *
                                   C27527 * C27347 * C1779 +
                               ((C10482 - (C10481 + C10480) + C10483) * C9184 +
                                (C10496 - (C10497 + C10498) + C10499) * C9185) *
                                   C27527 * C27347 * C1780 +
                               ((C10498 + C10497 - C10496 - C10499) * C9184 +
                                ((C9186 * C2316 + C27525 * C2320) * C26163 +
                                 (C9186 * C2318 + C27525 * C2322) * C27481 -
                                 (C9186 * C2315 + C27525 * C2319) * C26156 -
                                 (C9186 * C2317 + C27525 * C2321) * C27283) *
                                    C9185) *
                                   C27527 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27525 * C94) * C85 +
           (C9186 * C96 + C27525 * C104) * C75 -
           (C9186 * C90 + C27525 * C95) * C86 -
           (C9186 * C97 + C27525 * C105) * C76 +
           (C9186 * C91 + C27525 * C98) * C87 +
           (C9186 * C99 + C27525 * C106) * C77 -
           (C9186 * C92 + C27525 * C100) * C88 -
           (C9186 * C101 + C27525 * C107) * C78) *
              C9184 +
          ((C9186 * C601 + C27525 * C607) * C85 +
           (C9186 * C606 + C27525 * C612) * C75 -
           (C9186 * C599 + C27525 * C603) * C86 -
           (C9186 * C605 + C27525 * C611) * C76 +
           (C9186 * C600 + C27525 * C604) * C87 +
           (C9186 * C608 + C27525 * C613) * C77 -
           (C9186 * C602 + C27525 * C609) * C88 -
           (C9186 * C610 + C27525 * C614) * C78) *
              C9185) *
         C27527 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C26163 +
            (C9186 * C96 + C27525 * C104) * C27481 -
            (C9186 * C90 + C27525 * C95) * C26156 -
            (C9186 * C97 + C27525 * C105) * C27283) *
               C9184 +
           (C10480 + C10481 - C10482 - C10483) * C9185) *
              C27527 * C3187 +
          (((C9186 * C1189 + C27525 * C1193) * C26156 -
            ((C9186 * C1196 + C27525 * C1202) * C27481 +
             (C9186 * C1191 + C27525 * C1197) * C26163) +
            (C9186 * C1195 + C27525 * C1201) * C27283) *
               C9184 +
           ((C9186 * C2674 + C27525 * C2678) * C26156 -
            (C11362 * C27481 + C11363 * C26163) +
            (C9186 * C2680 + C27525 * C2686) * C27283) *
               C9185) *
              C27527 * C3188 +
          (((C9186 * C3190 + C27525 * C3193) * C26163 +
            (C9186 * C3195 + C27525 * C3199) * C27481 -
            (C9186 * C3191 + C27525 * C3194) * C26156 -
            (C9186 * C3196 + C27525 * C3200) * C27283) *
               C9184 +
           ((C9186 * C3732 + C27525 * C3736) * C26163 +
            (C9186 * C3734 + C27525 * C3738) * C27481 -
            (C9186 * C3731 + C27525 * C3735) * C26156 -
            (C9186 * C3733 + C27525 * C3737) * C27283) *
               C9185) *
              C27527 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C9184 +
           (C9524 * C1846 + C9592 * C1779 - C10494 * C1847 - C10554 * C1780 +
            (C9186 * C2316 + C27525 * C2320) * C1848 +
            (C9186 * C2362 + C27525 * C2364) * C1781) *
               C9185) *
              C27527 * C27481 +
          ((C9526 * C1847 -
            ((C9186 * C145 + C27525 * C150) * C1779 +
             (C9186 * C90 + C27525 * C95) * C1846) +
            C9593 * C1780 - C10492 * C1848 - C10555 * C1781) *
               C9184 +
           (C10492 * C1847 - (C9593 * C1779 + C9526 * C1846) + C10555 * C1780 -
            (C9186 * C2315 + C27525 * C2319) * C1848 -
            (C9186 * C2361 + C27525 * C2363) * C1781) *
               C9185) *
              C27527 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C9184 +
           ((C9186 * C601 + C27525 * C607) * C143 +
            (C9186 * C668 + C27525 * C672) * C27321) *
               C9185) *
              C27527 * C75 -
          (((C9186 * C667 + C27525 * C671) * C27321 +
            (C9186 * C599 + C27525 * C603) * C143) *
               C9185 +
           ((C9186 * C145 + C27525 * C150) * C27321 +
            (C9186 * C90 + C27525 * C95) * C143) *
               C9184) *
              C27527 * C76 +
          (((C9186 * C91 + C27525 * C98) * C143 +
            (C9186 * C146 + C27525 * C151) * C27321) *
               C9184 +
           ((C9186 * C600 + C27525 * C604) * C143 +
            (C9186 * C669 + C27525 * C673) * C27321) *
               C9185) *
              C27527 * C77 -
          (((C9186 * C670 + C27525 * C674) * C27321 +
            (C9186 * C602 + C27525 * C609) * C143) *
               C9185 +
           ((C9186 * C147 + C27525 * C152) * C27321 +
            (C9186 * C92 + C27525 * C100) * C143) *
               C9184) *
              C27527 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C143 +
             (C9186 * C144 + C27525 * C149) * C27321) *
                C9184 +
            (C9524 * C143 + C9592 * C27321) * C9185) *
               C27527 * C27481 -
           ((C9593 * C27321 + C9526 * C143) * C9185 +
            ((C9186 * C145 + C27525 * C150) * C27321 +
             (C9186 * C90 + C27525 * C95) * C143) *
                C9184) *
               C27527 * C27283) *
              C3187 +
          ((((C9186 * C1189 + C27525 * C1193) * C143 +
             (C9186 * C1255 + C27525 * C1259) * C27321) *
                C9184 +
            ((C9186 * C2674 + C27525 * C2678) * C143 +
             (C9186 * C2740 + C27525 * C2744) * C27321) *
                C9185) *
               C27527 * C27283 -
           ((C11426 * C27321 + C11363 * C143) * C9185 +
            ((C9186 * C1257 + C27525 * C1261) * C27321 +
             (C9186 * C1191 + C27525 * C1197) * C143) *
                C9184) *
               C27527 * C27481) *
              C3188 +
          ((((C9186 * C3190 + C27525 * C3193) * C143 +
             (C9186 * C3252 + C27525 * C3255) * C27321) *
                C9184 +
            ((C9186 * C3732 + C27525 * C3736) * C143 +
             (C9186 * C3790 + C27525 * C3792) * C27321) *
                C9185) *
               C27527 * C27481 -
           (((C9186 * C3789 + C27525 * C3791) * C27321 +
             (C9186 * C3731 + C27525 * C3735) * C143) *
                C9185 +
            ((C9186 * C3253 + C27525 * C3256) * C27321 +
             (C9186 * C3191 + C27525 * C3194) * C143) *
                C9184) *
               C27527 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eexz[21] +=
        (-std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C1779 -
           ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
               C1780 +
           ((C10608 + C10614) * C9184 +
            ((C9186 * C2316 + C27525 * C2320) * C188 +
             (C9186 * C2400 + C27525 * C2402) * C27347) *
                C9185) *
               C27527 * C1781) *
              C27481 +
          (((C9648 + C9658) * C9184 + (C10609 + C10615) * C9185) * C27527 *
               C1780 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C1779 -
           (((C9186 * C2399 + C27525 * C2401) * C27347 +
             (C9186 * C2315 + C27525 * C2319) * C188) *
                C9185 +
            (C10615 + C10609) * C9184) *
               C27527 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27525 * C94) * C188 +
                                (C9186 * C189 + C27525 * C194) * C27347) *
                                   C9184 +
                               ((C9186 * C601 + C27525 * C607) * C188 +
                                (C9186 * C726 + C27525 * C730) * C27347) *
                                   C9185) *
                                  C27527 * C27321 * C75 -
                              (((C9186 * C725 + C27525 * C729) * C27347 +
                                (C9186 * C599 + C27525 * C603) * C188) *
                                   C9185 +
                               ((C9186 * C190 + C27525 * C195) * C27347 +
                                (C9186 * C90 + C27525 * C95) * C188) *
                                   C9184) *
                                  C27527 * C27321 * C76 +
                              (((C9186 * C91 + C27525 * C98) * C188 +
                                (C9186 * C191 + C27525 * C196) * C27347) *
                                   C9184 +
                               ((C9186 * C600 + C27525 * C604) * C188 +
                                (C9186 * C727 + C27525 * C731) * C27347) *
                                   C9185) *
                                  C27527 * C27321 * C77 -
                              (((C9186 * C728 + C27525 * C732) * C27347 +
                                (C9186 * C602 + C27525 * C609) * C188) *
                                   C9185 +
                               ((C9186 * C192 + C27525 * C197) * C27347 +
                                (C9186 * C92 + C27525 * C100) * C188) *
                                   C9184) *
                                  C27527 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C3308 +
            (C9186 * C189 + C27525 * C194) * C3187 -
            (C9186 * C1191 + C27525 * C1197) * C3309 -
            (C9186 * C1316 + C27525 * C1320) * C3188 +
            (C9186 * C3190 + C27525 * C3193) * C3310 +
            (C9186 * C3311 + C27525 * C3314) * C3189) *
               C9184 +
           (C9524 * C3308 + C9654 * C3187 - C11363 * C3309 - C11490 * C3188 +
            (C9186 * C3732 + C27525 * C3736) * C3310 +
            (C9186 * C3844 + C27525 * C3846) * C3189) *
               C9185) *
              C27527 * C27321 * C27481 +
          (((C9186 * C1189 + C27525 * C1193) * C3309 -
            ((C9186 * C190 + C27525 * C195) * C3187 +
             (C9186 * C90 + C27525 * C95) * C3308) +
            (C9186 * C1315 + C27525 * C1319) * C3188 -
            (C9186 * C3191 + C27525 * C3194) * C3310 -
            (C9186 * C3312 + C27525 * C3315) * C3189) *
               C9184 +
           ((C9186 * C2674 + C27525 * C2678) * C3309 -
            (C9655 * C3187 + C9526 * C3308) +
            (C9186 * C2798 + C27525 * C2802) * C3188 -
            (C9186 * C3731 + C27525 * C3735) * C3310 -
            (C9186 * C3843 + C27525 * C3845) * C3189) *
               C9185) *
              C27527 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[21] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C26163 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C27481 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C26156 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
               C27283) *
              C27527 * C27525 * C27347 * C1779 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C26156 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27481 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C26163) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C1780 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C26163 +
           (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
               C27481 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C26156 -
           (C9290 * C2317 + C9185 * C2439 + C9289 * C1790 + C9184 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C85 +
          (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C75 -
          (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C86 -
          (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C76 +
          (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C87 +
          (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C77 -
          (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C88 -
          (C9290 * C610 + C9185 * C790 + C9289 * C101 + C9184 * C242) * C78) *
         C27527 * C27525 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C26163 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C27481 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C26156 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
               C27283) *
              C27527 * C27525 * C3187 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C26156 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27481 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C26163) +
           (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
               C27283) *
              C27527 * C27525 * C3188 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C26163 +
           (C9289 * C3195 + C9184 * C3370 + C9290 * C3734 + C9185 * C3900) *
               C27481 -
           (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
               C26156 -
           (C9290 * C3733 + C9185 * C3899 + C9289 * C3196 + C9184 * C3371) *
               C27283) *
              C27527 * C27525 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eeyy[21] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1846 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C1779 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C1847 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C1780 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1848 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C1781) *
              C27527 * C27525 * C27481 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C1847 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C1779 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C1846) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C1780 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C1848 -
           (C9290 * C2361 + C9185 * C2476 + C9289 * C1850 + C9184 * C2024) *
               C1781) *
              C27527 * C27525 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27321) *
              C27527 * C27525 * C75 -
          ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
               C27321 +
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
              C27527 * C27525 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C143 +
           (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
               C27321) *
              C27527 * C27525 * C77 -
          ((C9290 * C670 + C9185 * C856 + C9289 * C147 + C9184 * C299) *
               C27321 +
           (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C143) *
              C27527 * C27525 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27321) *
               C27527 * C27525 * C27481 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27321 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
               C27527 * C27525 * C27283) *
              C3187 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C143 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27321) *
               C27527 * C27525 * C27283 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27321 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C143) *
               C27527 * C27525 * C27481) *
              C3188 +
          (((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
                C143 +
            (C9289 * C3252 + C9184 * C3429 + C9290 * C3790 + C9185 * C3951) *
                C27321) *
               C27527 * C27525 * C27481 -
           ((C9290 * C3789 + C9185 * C3952 + C9289 * C3253 + C9184 * C3430) *
                C27321 +
            (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
                C143) *
               C27527 * C27525 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (-std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C1779 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C1780 +
           ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C188 +
            (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
                C27347) *
               C27527 * C27525 * C1781) *
              C27481 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C1780 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C1779 -
           ((C9290 * C2399 + C9185 * C2511 + C9289 * C1906 + C9184 * C2086) *
                C27347 +
            (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
                C188) *
               C27527 * C27525 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27347) *
              C27527 * C27525 * C27321 * C75 -
          ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
               C27347 +
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
              C27527 * C27525 * C27321 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C188 +
           (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
               C27347) *
              C27527 * C27525 * C27321 * C77 -
          ((C9290 * C728 + C9185 * C924 + C9289 * C192 + C9184 * C353) *
               C27347 +
           (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C188) *
              C27527 * C27525 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C3308 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) * C3187 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C3309 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C3188 +
           (C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C3310 +
           (C9289 * C3311 + C9184 * C3487 + C9290 * C3844 + C9185 * C4003) *
               C3189) *
              C27527 * C27525 * C27321 * C27481 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C3309 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C3187 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C3308) +
           (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
               C3188 -
           (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
               C3310 -
           (C9290 * C3843 + C9185 * C4004 + C9289 * C3312 + C9184 * C3488) *
               C3189) *
              C27527 * C27525 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[21] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C27525 * C9184 +
           (C10816 + C10817 - C10818 - C10819) * C27525 * C9185) *
              C27347 * C1779 +
          ((C10818 - (C10817 + C10816) + C10819) * C27525 * C9184 +
           (C10820 - (C10828 + C10829) + C10825) * C27525 * C9185) *
              C27347 * C1780 +
          ((C10829 + C10828 - C10820 - C10825) * C27525 * C9184 +
           ((C404 * C2316 + C27527 * C2548) * C26163 +
            (C404 * C2318 + C27527 * C2550) * C27481 -
            (C404 * C2315 + C27527 * C2547) * C26156 -
            (C404 * C2317 + C27527 * C2549) * C27283) *
               C27525 * C9185) *
              C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C85 +
           (C404 * C96 + C27527 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C27525 * C9184 +
          ((C404 * C601 + C27527 * C986) * C85 +
           (C404 * C606 + C27527 * C989) * C75 - C1002 * C86 - C1003 * C76 +
           C1004 * C87 + C1005 * C77 - (C404 * C602 + C27527 * C988) * C88 -
           (C404 * C610 + C27527 * C992) * C78) *
              C27525 * C9185) *
         C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C27525 * C9184 +
           (C10816 + C10817 - C10818 - C10819) * C27525 * C9185) *
              C3187 +
          ((C1592 * C26156 -
            ((C404 * C1196 + C27527 * C1579) * C27481 +
             (C404 * C1191 + C27527 * C1576) * C26163) +
            C1593 * C27283) *
               C27525 * C9184 +
           (C5958 * C26156 - (C11708 * C27481 + C11709 * C26163) +
            C5959 * C27283) *
               C27525 * C9185) *
              C3188 +
          (((C404 * C3190 + C27527 * C3549) * C26163 +
            (C404 * C3195 + C27527 * C3552) * C27481 - C3560 * C26156 -
            C3561 * C27283) *
               C27525 * C9184 +
           ((C404 * C3732 + C27527 * C4056) * C26163 +
            (C404 * C3734 + C27527 * C4058) * C27481 -
            (C404 * C3731 + C27527 * C4055) * C26156 -
            (C404 * C3733 + C27527 * C4057) * C27283) *
               C27525 * C9185) *
              C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 - C9868 * C1847 -
            C9924 * C1780 + C10827 * C1848 + C10882 * C1781) *
               C27525 * C9184 +
           (C9868 * C1846 + C9924 * C1779 - C10827 * C1847 - C10882 * C1780 +
            (C404 * C2316 + C27527 * C2548) * C1848 +
            (C404 * C2362 + C27527 * C2585) * C1781) *
               C27525 * C9185) *
              C27481 +
          ((C2211 - (C2210 + C2209) + C2212 - C2213 - C2217) * C27525 * C9184 +
           (C2154 * C1847 - (C1070 * C1779 + C1002 * C1846) + C2216 * C1780 -
            (C404 * C2315 + C27527 * C2547) * C1848 -
            (C404 * C2361 + C27527 * C2586) * C1781) *
               C27525 * C9185) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C143 +
            (C404 * C144 + C27527 * C467) * C27321) *
               C27525 * C9184 +
           ((C404 * C601 + C27527 * C986) * C143 +
            (C404 * C668 + C27527 * C1055) * C27321) *
               C27525 * C9185) *
              C75 -
          ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
           (C485 + C473) * C27525 * C9184) *
              C76 +
          ((C478 + C486) * C27525 * C9184 +
           (C1004 * C143 + C1071 * C27321) * C27525 * C9185) *
              C77 -
          (((C404 * C670 + C27527 * C1058) * C27321 +
            (C404 * C602 + C27527 * C988) * C143) *
               C27525 * C9185 +
           (C487 + C479) * C27525 * C9184) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C27525 * C9184 +
            (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
               C27481 -
           ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
            (C485 + C473) * C27525 * C9184) *
               C27283) *
              C3187 +
          (((C1650 + C1658) * C27525 * C9184 +
            (C5958 * C143 + C6032 * C27321) * C27525 * C9185) *
               C27283 -
           ((C11771 * C27321 + C11709 * C143) * C27525 * C9185 +
            ((C404 * C1257 + C27527 * C1647) * C27321 +
             (C404 * C1191 + C27527 * C1576) * C143) *
                C27525 * C9184) *
               C27481) *
              C3188 +
          ((((C404 * C3190 + C27527 * C3549) * C143 +
             (C404 * C3252 + C27527 * C3611) * C27321) *
                C27525 * C9184 +
            ((C404 * C3732 + C27527 * C4056) * C143 +
             (C404 * C3790 + C27527 * C4109) * C27321) *
                C27525 * C9185) *
               C27481 -
           (((C404 * C3789 + C27527 * C4110) * C27321 +
             (C404 * C3731 + C27527 * C4055) * C143) *
                C27525 * C9185 +
            (C3619 + C3615) * C27525 * C9184) *
               C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[21] +=
        (-std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C1779 -
           ((C10937 + C10935) * C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C1780 +
           ((C10935 + C10937) * C27525 * C9184 +
            ((C404 * C2316 + C27527 * C2548) * C188 +
             (C404 * C2400 + C27527 * C2622) * C27347) *
                C27525 * C9185) *
               C1781) *
              C27481 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C1780 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C1779 -
           (((C404 * C2399 + C27527 * C2621) * C27347 +
             (C404 * C2315 + C27527 * C2547) * C188) *
                C27525 * C9185 +
            (C2275 + C2271) * C27525 * C9184) *
               C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C27525 * C9184 +
           ((C404 * C601 + C27527 * C986) * C188 +
            (C404 * C726 + C27527 * C1124) * C27347) *
               C27525 * C9185) *
              C27321 * C75 -
          ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
              C27321 * C76 +
          ((C532 + C540) * C27525 * C9184 + (C1131 + C1137) * C27525 * C9185) *
              C27321 * C77 -
          (((C404 * C728 + C27527 * C1126) * C27347 +
            (C404 * C602 + C27527 * C988) * C188) *
               C27525 * C9185 +
           (C541 + C533) * C27525 * C9184) *
              C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C3308 +
            (C404 * C189 + C27527 * C521) * C3187 -
            (C404 * C1191 + C27527 * C1576) * C3309 -
            (C404 * C1316 + C27527 * C1709) * C3188 +
            (C404 * C3190 + C27527 * C3549) * C3310 +
            (C404 * C3311 + C27527 * C3669) * C3189) *
               C27525 * C9184 +
           (C9868 * C3308 + C9978 * C3187 - C11709 * C3309 - C11834 * C3188 +
            (C404 * C3732 + C27527 * C4056) * C3310 +
            (C404 * C3844 + C27527 * C4161) * C3189) *
               C27525 * C9185) *
              C27321 * C27481 +
          ((C3675 - (C3674 + C3673) + C3676 - C3677 - C3681) * C27525 * C9184 +
           (C5958 * C3309 - (C1134 * C3187 + C1002 * C3308) + C6106 * C3188 -
            (C404 * C3731 + C27527 * C4055) * C3310 -
            (C404 * C3843 + C27527 * C4162) * C3189) *
               C27525 * C9185) *
              C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[22] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C2314 +
                      (C9186 * C96 + C27525 * C104) * C27278) *
                         C9184 +
                     (C10976 + C10977) * C9185) *
                        C27527 * C27347 * C2310 -
                    ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                        C27527 * C27347 * C2311 +
                    ((C10979 + C10978) * C9184 + (C10986 + C10987) * C9185) *
                        C27527 * C27347 * C2312 -
                    (((C9186 * C10972 + C27525 * C10974) * C27278 +
                      (C9186 * C10971 + C27525 * C10973) * C2314) *
                         C9185 +
                     (C10987 + C10986) * C9184) *
                        C27527 * C27347 * C2313)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C596 +
                      (C9186 * C96 + C27525 * C104) * C591 -
                      (C9186 * C90 + C27525 * C95) * C597 -
                      (C9186 * C97 + C27525 * C105) * C592 +
                      (C9186 * C91 + C27525 * C98) * C598 +
                      (C9186 * C99 + C27525 * C106) * C593) *
                         C9184 +
                     (C9530 + C9531 - C9532 - C9533 + C9534 + C9535) * C9185) *
                        C27527 * C27347 * C27491 +
                    ((C9532 - (C9531 + C9530) + C9533 - C9534 - C9535) * C9184 +
                     ((C9186 * C1785 + C27525 * C1788) * C597 -
                      ((C9186 * C1789 + C27525 * C1793) * C591 +
                       (C9186 * C1784 + C27525 * C1787) * C596) +
                      (C9186 * C1790 + C27525 * C1794) * C592 -
                      (C9186 * C1786 + C27525 * C1791) * C598 -
                      (C9186 * C1792 + C27525 * C1795) * C593) *
                         C9185) *
                        C27527 * C27347 * C27335)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C9184 +
                      (C10976 + C10977) * C9185) *
                         C27527 * C3187 -
                     ((C11366 + C11367) * C9185 +
                      ((C9186 * C1196 + C27525 * C1202) * C27278 +
                       (C9186 * C1191 + C27525 * C1197) * C2314) *
                          C9184) *
                         C27527 * C3188 +
                     (((C9186 * C3190 + C27525 * C3193) * C2314 +
                       (C9186 * C3195 + C27525 * C3199) * C27278) *
                          C9184 +
                      (C12348 + C12349) * C9185) *
                         C27527 * C3189) *
                        C27491 +
                    (((C11367 + C11366) * C9184 + (C11368 + C11369) * C9185) *
                         C27527 * C3188 -
                     ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                         C27527 * C3187 -
                     (((C9186 * C12338 + C27525 * C12340) * C27278 +
                       (C9186 * C12337 + C27525 * C12339) * C2314) *
                          C9185 +
                      (C12349 + C12348) * C9184) *
                         C27527 * C3189) *
                        C27335)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27525 * C94) * C2357 +
           (C9186 * C144 + C27525 * C149) * C2310 - C9524 * C2358 -
           C9592 * C2311 + C10494 * C2359 + C10554 * C2312 - C10984 * C2360 -
           C11026 * C2313) *
              C9184 +
          (C9524 * C2357 + C9592 * C2310 - C10494 * C2358 - C10554 * C2311 +
           C10984 * C2359 + C11026 * C2312 -
           (C9186 * C10971 + C27525 * C10973) * C2360 -
           (C9186 * C11021 + C27525 * C11022) * C2313) *
              C9185) *
         C27527 * C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C665 +
            (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
            C9592 * C27335) *
               C9184 +
           (C9524 * C665 + C9592 * C27491 -
            (C9186 * C1784 + C27525 * C1787) * C666 -
            (C9186 * C1849 + C27525 * C1852) * C27335) *
               C9185) *
              C27527 * C591 +
          ((C9526 * C666 -
            ((C9186 * C145 + C27525 * C150) * C27491 +
             (C9186 * C90 + C27525 * C95) * C665) +
            C9593 * C27335) *
               C9184 +
           ((C9186 * C1785 + C27525 * C1788) * C666 -
            (C9593 * C27491 + C9526 * C665) +
            (C9186 * C1850 + C27525 * C1853) * C27335) *
               C9185) *
              C27527 * C592 +
          (((C9186 * C91 + C27525 * C98) * C665 +
            (C9186 * C146 + C27525 * C151) * C27491 - C9528 * C666 -
            C9594 * C27335) *
               C9184 +
           (C9528 * C665 + C9594 * C27491 -
            (C9186 * C1786 + C27525 * C1791) * C666 -
            (C9186 * C1851 + C27525 * C1854) * C27335) *
               C9185) *
              C27527 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C665 +
            (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
            C9592 * C27335) *
               C9184 +
           (C9524 * C665 + C9592 * C27491 - C10494 * C666 - C10554 * C27335) *
               C9185) *
              C27527 * C27278 * C3187 +
          ((C11363 * C666 -
            ((C9186 * C1257 + C27525 * C1261) * C27491 +
             (C9186 * C1191 + C27525 * C1197) * C665) +
            C11426 * C27335) *
               C9184 +
           (C11364 * C666 - (C11426 * C27491 + C11363 * C665) +
            C11427 * C27335) *
               C9185) *
              C27527 * C27278 * C3188 +
          (((C9186 * C3190 + C27525 * C3193) * C665 +
            (C9186 * C3252 + C27525 * C3255) * C27491 - C12346 * C666 -
            C12404 * C27335) *
               C9184 +
           (C12346 * C665 + C12404 * C27491 -
            (C9186 * C12337 + C27525 * C12339) * C666 -
            (C9186 * C12399 + C27525 * C12400) * C27335) *
               C9185) *
              C27527 * C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C188 +
            (C9186 * C189 + C27525 * C194) * C27347) *
               C9184 +
           (C9645 + C9657) * C9185) *
              C27527 * C2310 -
          ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
              C2311 +
          ((C10608 + C10614) * C9184 + (C11063 + C11067) * C9185) * C27527 *
              C2312 -
          (((C9186 * C11060 + C27525 * C11061) * C27347 +
            (C9186 * C10971 + C27525 * C10973) * C188) *
               C9185 +
           (C11067 + C11063) * C9184) *
              C27527 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C27491 -
           (((C9186 * C1905 + C27525 * C1908) * C27347 +
             (C9186 * C1784 + C27525 * C1787) * C188) *
                C9185 +
            (C9657 + C9645) * C9184) *
               C27527 * C27335) *
              C591 +
          (((C9648 + C9658) * C9184 +
            ((C9186 * C1785 + C27525 * C1788) * C188 +
             (C9186 * C1906 + C27525 * C1909) * C27347) *
                C9185) *
               C27527 * C27335 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C27491) *
              C592 +
          ((((C9186 * C91 + C27525 * C98) * C188 +
             (C9186 * C191 + C27525 * C196) * C27347) *
                C9184 +
            (C9651 + C9659) * C9185) *
               C27527 * C27491 -
           (((C9186 * C1907 + C27525 * C1910) * C27347 +
             (C9186 * C1786 + C27525 * C1791) * C188) *
                C9185 +
            (C9659 + C9651) * C9184) *
               C27527 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C3308 +
            (C9186 * C189 + C27525 * C194) * C3187 -
            (C9186 * C1191 + C27525 * C1197) * C3309 -
            (C9186 * C1316 + C27525 * C1320) * C3188 +
            (C9186 * C3190 + C27525 * C3193) * C3310 +
            (C9186 * C3311 + C27525 * C3314) * C3189) *
               C9184 +
           (C12457 + C12458 - C12459 - C12460 + C12461 + C12465) * C9185) *
              C27527 * C27491 +
          ((C12459 - (C12458 + C12457) + C12460 - C12461 - C12465) * C9184 +
           (C11364 * C3309 - (C10612 * C3187 + C10494 * C3308) +
            C11491 * C3188 - (C9186 * C12337 + C27525 * C12339) * C3310 -
            (C9186 * C12454 + C27525 * C12455) * C3189) *
               C9185) *
              C27527 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
               C27278) *
              C27527 * C27525 * C27347 * C2310 -
          ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
               C27278 +
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C2314) *
              C27527 * C27525 * C27347 * C2311 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C2314 +
           (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
               C27278) *
              C27527 * C27525 * C27347 * C2312 -
          ((C9290 * C10972 + C9185 * C11102 + C9289 * C2318 + C9184 * C2440) *
               C27278 +
           (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
               C2314) *
              C27527 * C27525 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C591 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C592 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C598 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C593) *
              C27527 * C27525 * C27347 * C27491 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C597 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C591 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C596) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C592 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C598 -
           (C9290 * C1792 + C9185 * C1966 + C9289 * C608 + C9184 * C789) *
               C593) *
              C27527 * C27525 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27278) *
               C27527 * C27525 * C3187 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27278 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C2314) *
               C27527 * C27525 * C3188 +
           ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
                C2314 +
            (C9289 * C3195 + C9184 * C3370 + C9290 * C3734 + C9185 * C3900) *
                C27278) *
               C27527 * C27525 * C3189) *
              C27491 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C2314 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27278) *
               C27527 * C27525 * C3188 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27278 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C2314) *
               C27527 * C27525 * C3187 -
           ((C9290 * C12338 + C9185 * C12516 + C9289 * C3734 + C9184 * C3900) *
                C27278 +
            (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
                C2314) *
               C27527 * C27525 * C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2357 +
          (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C2310 -
          (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
              C2358 -
          (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
              C2311 +
          (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
              C2359 +
          (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
              C2312 -
          (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
              C2360 -
          (C9290 * C11021 + C9185 * C11137 + C9289 * C2362 + C9184 * C2475) *
              C2313) *
         C27527 * C27525 * C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C665 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27491 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C666 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27335) *
              C27527 * C27525 * C591 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C666 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27491 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C665) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C27335) *
              C27527 * C27525 * C592 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C665 +
           (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
               C27491 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C666 -
           (C9290 * C1851 + C9185 * C2025 + C9289 * C669 + C9184 * C855) *
               C27335) *
              C27527 * C27525 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C665 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27491 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C666 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27335) *
              C27527 * C27525 * C27278 * C3187 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C666 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27491 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C665) +
           (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
               C27335) *
              C27527 * C27525 * C27278 * C3188 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C665 +
           (C9289 * C3252 + C9184 * C3429 + C9290 * C3790 + C9185 * C3951) *
               C27491 -
           (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
               C666 -
           (C9290 * C12399 + C9185 * C12567 + C9289 * C3790 + C9184 * C3951) *
               C27335) *
              C27527 * C27525 * C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27347) *
              C27527 * C27525 * C2310 -
          ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
               C27347 +
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C188) *
              C27527 * C27525 * C2311 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C188 +
           (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
               C27347) *
              C27527 * C27525 * C2312 -
          ((C9290 * C11060 + C9185 * C11172 + C9289 * C2400 + C9184 * C2512) *
               C27347 +
           (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
               C188) *
              C27527 * C27525 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C27491 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C27335) *
              C591 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C27335 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C27491) *
              C592 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
                C27347) *
               C27527 * C27525 * C27491 -
           ((C9290 * C1907 + C9185 * C2087 + C9289 * C727 + C9184 * C923) *
                C27347 +
            (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
                C188) *
               C27527 * C27525 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C3308 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) * C3187 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C3309 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C3188 +
           (C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C3310 +
           (C9289 * C3311 + C9184 * C3487 + C9290 * C3844 + C9185 * C4003) *
               C3189) *
              C27527 * C27525 * C27491 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C3309 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C3187 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C3308) +
           (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
               C3188 -
           (C9290 * C12337 + C9185 * C12515 + C9289 * C3732 + C9184 * C3898) *
               C3310 -
           (C9290 * C12454 + C9185 * C12618 + C9289 * C3844 + C9184 * C4003) *
               C3189) *
              C27527 * C27525 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::pow(Pi, 2.5) * ((((C404 * C89 + C27527 * C405) * C2314 +
                                 (C404 * C96 + C27527 * C410) * C27278) *
                                    C27525 * C9184 +
                                (C11210 + C11211) * C27525 * C9185) *
                                   C27347 * C2310 -
                               ((C11212 + C11213) * C27525 * C9185 +
                                (C11211 + C11210) * C27525 * C9184) *
                                   C27347 * C2311 +
                               ((C11213 + C11212) * C27525 * C9184 +
                                (C11220 + C11221) * C27525 * C9185) *
                                   C27347 * C2312 -
                               (((C404 * C10972 + C27527 * C11208) * C27278 +
                                 (C404 * C10971 + C27527 * C11207) * C2314) *
                                    C27525 * C9185 +
                                (C11221 + C11220) * C27525 * C9184) *
                                   C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C27525 * C9184 +
           (C9870 + C9871 - C9864 - C9865 + C9866 + C9867) * C27525 * C9185) *
              C27347 * C27491 +
          ((C9864 - (C9871 + C9870) + C9865 - C9866 - C9867) * C27525 * C9184 +
           (C2154 * C597 -
            ((C404 * C1789 + C27527 * C2146) * C591 +
             (C404 * C1784 + C27527 * C2143) * C596) +
            C2155 * C592 - (C404 * C1786 + C27527 * C2145) * C598 -
            (C404 * C1792 + C27527 * C2148) * C593) *
               C27525 * C9185) *
              C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C2314 +
             (C404 * C96 + C27527 * C410) * C27278) *
                C27525 * C9184 +
            (C11210 + C11211) * C27525 * C9185) *
               C3187 -
           ((C11712 + C11713) * C27525 * C9185 +
            ((C404 * C1196 + C27527 * C1579) * C27278 +
             (C404 * C1191 + C27527 * C1576) * C2314) *
                C27525 * C9184) *
               C3188 +
           (((C404 * C3190 + C27527 * C3549) * C2314 +
             (C404 * C3195 + C27527 * C3552) * C27278) *
                C27525 * C9184 +
            (C12678 + C12679) * C27525 * C9185) *
               C3189) *
              C27491 +
          (((C11713 + C11712) * C27525 * C9184 +
            (C11714 + C11715) * C27525 * C9185) *
               C3188 -
           ((C11212 + C11213) * C27525 * C9185 +
            (C11211 + C11210) * C27525 * C9184) *
               C3187 -
           (((C404 * C12338 + C27527 * C12670) * C27278 +
             (C404 * C12337 + C27527 * C12669) * C2314) *
                C27525 * C9185 +
            (C12679 + C12678) * C27525 * C9184) *
               C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C2357 +
           (C404 * C144 + C27527 * C467) * C2310 - C9868 * C2358 -
           C9924 * C2311 + C10827 * C2359 + C10882 * C2312 - C11218 * C2360 -
           C11259 * C2313) *
              C27525 * C9184 +
          (C9868 * C2357 + C9924 * C2310 - C10827 * C2358 - C10882 * C2311 +
           C11218 * C2359 + C11259 * C2312 -
           (C404 * C10971 + C27527 * C11207) * C2360 -
           (C404 * C11021 + C27527 * C11255) * C2313) *
              C27525 * C9185) *
         C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 - C9868 * C666 -
            C9924 * C27335) *
               C27525 * C9184 +
           (C9868 * C665 + C9924 * C27491 -
            (C404 * C1784 + C27527 * C2143) * C666 -
            (C404 * C1849 + C27527 * C2205) * C27335) *
               C27525 * C9185) *
              C591 +
          ((C1062 - (C1061 + C1060) + C1072) * C27525 * C9184 +
           (C2154 * C666 - (C1070 * C27491 + C1002 * C665) + C2216 * C27335) *
               C27525 * C9185) *
              C592 +
          ((C1067 + C1066 - C1065 - C1073) * C27525 * C9184 +
           (C1004 * C665 + C1071 * C27491 -
            (C404 * C1786 + C27527 * C2145) * C666 -
            (C404 * C1851 + C27527 * C2207) * C27335) *
               C27525 * C9185) *
              C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 - C9868 * C666 -
            C9924 * C27335) *
               C27525 * C9184 +
           (C9868 * C665 + C9924 * C27491 - C10827 * C666 - C10882 * C27335) *
               C27525 * C9185) *
              C27278 * C3187 +
          ((C11709 * C666 -
            ((C404 * C1257 + C27527 * C1647) * C27491 +
             (C404 * C1191 + C27527 * C1576) * C665) +
            C11771 * C27335) *
               C27525 * C9184 +
           (C11710 * C666 - (C11771 * C27491 + C11709 * C665) +
            C11772 * C27335) *
               C27525 * C9185) *
              C27278 * C3188 +
          (((C404 * C3190 + C27527 * C3549) * C665 +
            (C404 * C3252 + C27527 * C3611) * C27491 - C12676 * C666 -
            C12733 * C27335) *
               C27525 * C9184 +
           (C12676 * C665 + C12733 * C27491 -
            (C404 * C12337 + C27527 * C12669) * C666 -
            (C404 * C12399 + C27527 * C12729) * C27335) *
               C27525 * C9185) *
              C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C27525 * C9184 +
           (C9975 + C9979) * C27525 * C9185) *
              C2310 -
          ((C10937 + C10935) * C27525 * C9185 +
           (C9979 + C9975) * C27525 * C9184) *
              C2311 +
          ((C10935 + C10937) * C27525 * C9184 +
           (C11295 + C11299) * C27525 * C9185) *
              C2312 -
          (((C404 * C11060 + C27527 * C11293) * C27347 +
            (C404 * C10971 + C27527 * C11207) * C188) *
               C27525 * C9185 +
           (C11299 + C11295) * C27525 * C9184) *
              C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C27491 -
           (((C404 * C1905 + C27527 * C2267) * C27347 +
             (C404 * C1784 + C27527 * C2143) * C188) *
                C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C27335) *
              C591 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C27335 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C27491) *
              C592 +
          (((C532 + C540) * C27525 * C9184 + (C1131 + C1137) * C27525 * C9185) *
               C27491 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C27525 * C9185 +
            (C1137 + C1131) * C27525 * C9184) *
               C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C3308 +
            (C404 * C189 + C27527 * C521) * C3187 -
            (C404 * C1191 + C27527 * C1576) * C3309 -
            (C404 * C1316 + C27527 * C1709) * C3188 +
            (C404 * C3190 + C27527 * C3549) * C3310 +
            (C404 * C3311 + C27527 * C3669) * C3189) *
               C27525 * C9184 +
           (C12785 + C12786 - C12787 - C12788 + C12789 + C12793) * C27525 *
               C9185) *
              C27491 +
          ((C12787 - (C12786 + C12785) + C12788 - C12789 - C12793) * C27525 *
               C9184 +
           (C11710 * C3309 - (C10936 * C3187 + C10827 * C3308) +
            C11835 * C3188 - (C404 * C12337 + C27527 * C12669) * C3310 -
            (C404 * C12454 + C27527 * C12783) * C3189) *
               C27525 * C9185) *
              C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] += (-std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C9184 +
                      (C10976 + C10977) * C9185) *
                         C27527 * C27492 -
                     ((C11366 + C11367) * C9185 +
                      ((C9186 * C1196 + C27525 * C1202) * C27278 +
                       (C9186 * C1191 + C27525 * C1197) * C2314) *
                          C9184) *
                         C27527 * C27359) *
                        C1779 +
                    (((C11367 + C11366) * C9184 + (C11368 + C11369) * C9185) *
                         C27527 * C27359 -
                     ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                         C27527 * C27492) *
                        C1780 +
                    (((C10979 + C10978) * C9184 + (C10986 + C10987) * C9185) *
                         C27527 * C27492 -
                     (((C9186 * C11350 + C27525 * C11352) * C27278 +
                       (C9186 * C11349 + C27525 * C11351) * C2314) *
                          C9185 +
                      (C11369 + C11368) * C9184) *
                         C27527 * C27359) *
                        C1781)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C596 +
                      (C9186 * C96 + C27525 * C104) * C591 -
                      (C9186 * C90 + C27525 * C95) * C597 -
                      (C9186 * C97 + C27525 * C105) * C592 +
                      (C9186 * C91 + C27525 * C98) * C598 +
                      (C9186 * C99 + C27525 * C106) * C593) *
                         C9184 +
                     (C9530 + C9531 - C9532 - C9533 + C9534 + C9535) * C9185) *
                        C27527 * C27492 +
                    (((C9186 * C1189 + C27525 * C1193) * C597 -
                      ((C9186 * C1196 + C27525 * C1202) * C591 +
                       (C9186 * C1191 + C27525 * C1197) * C596) +
                      (C9186 * C1195 + C27525 * C1201) * C592 -
                      (C9186 * C1190 + C27525 * C1194) * C598 -
                      (C9186 * C1198 + C27525 * C1203) * C593) *
                         C9184 +
                     ((C9186 * C2674 + C27525 * C2678) * C597 -
                      ((C9186 * C2679 + C27525 * C2685) * C591 +
                       (C9186 * C2673 + C27525 * C2677) * C596) +
                      (C9186 * C2680 + C27525 * C2686) * C592 -
                      (C9186 * C5523 + C27525 * C5524) * C598 -
                      (C9186 * C5525 + C27525 * C5526) * C593) *
                         C9185) *
                        C27527 * C27359) *
                   C27321) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C2314 +
                      (C9186 * C96 + C27525 * C104) * C27278) *
                         C9184 +
                     (C10976 + C10977) * C9185) *
                        C27527 * C4197 -
                    ((C11366 + C11367) * C9185 +
                     ((C9186 * C1196 + C27525 * C1202) * C27278 +
                      (C9186 * C1191 + C27525 * C1197) * C2314) *
                         C9184) *
                        C27527 * C4198 +
                    (((C9186 * C3190 + C27525 * C3193) * C2314 +
                      (C9186 * C3195 + C27525 * C3199) * C27278) *
                         C9184 +
                     (C12348 + C12349) * C9185) *
                        C27527 * C4199 -
                    (((C9186 * C12828 + C27525 * C12830) * C27278 +
                      (C9186 * C12827 + C27525 * C12829) * C2314) *
                         C9185 +
                     ((C9186 * C4204 + C27525 * C4208) * C27278 +
                      (C9186 * C4202 + C27525 * C4206) * C2314) *
                         C9184) *
                        C27527 * C4200) *
                   C27321) /
                      (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C9184 +
           (C9524 * C1846 + C9592 * C1779 - C10494 * C1847 - C10554 * C1780 +
            C10984 * C1848 + C11026 * C1781) *
               C9185) *
              C27527 * C27278 * C27492 +
          ((C11363 * C1847 -
            ((C9186 * C1257 + C27525 * C1261) * C1779 +
             (C9186 * C1191 + C27525 * C1197) * C1846) +
            C11426 * C1780 - C11364 * C1848 - C11427 * C1781) *
               C9184 +
           (C11364 * C1847 - (C11426 * C1779 + C11363 * C1846) +
            C11427 * C1780 - (C9186 * C11349 + C27525 * C11351) * C1848 -
            (C9186 * C11419 + C27525 * C11420) * C1781) *
               C9185) *
              C27527 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C9186 * C89 + C27525 * C94) * C143 +
                                 (C9186 * C144 + C27525 * C149) * C27321) *
                                    C9184 +
                                (C9524 * C143 + C9592 * C27321) * C9185) *
                                   C27527 * C591 -
                               ((C9593 * C27321 + C9526 * C143) * C9185 +
                                ((C9186 * C145 + C27525 * C150) * C27321 +
                                 (C9186 * C90 + C27525 * C95) * C143) *
                                    C9184) *
                                   C27527 * C592 +
                               (((C9186 * C91 + C27525 * C98) * C143 +
                                 (C9186 * C146 + C27525 * C151) * C27321) *
                                    C9184 +
                                (C9528 * C143 + C9594 * C27321) * C9185) *
                                   C27527 * C593) *
                                  C27492 +
                              ((((C9186 * C1189 + C27525 * C1193) * C143 +
                                 (C9186 * C1255 + C27525 * C1259) * C27321) *
                                    C9184 +
                                ((C9186 * C2674 + C27525 * C2678) * C143 +
                                 (C9186 * C2740 + C27525 * C2744) * C27321) *
                                    C9185) *
                                   C27527 * C592 -
                               (((C9186 * C2739 + C27525 * C2743) * C27321 +
                                 (C9186 * C2673 + C27525 * C2677) * C143) *
                                    C9185 +
                                ((C9186 * C1257 + C27525 * C1261) * C27321 +
                                 (C9186 * C1191 + C27525 * C1197) * C143) *
                                    C9184) *
                                   C27527 * C591 -
                               (((C9186 * C5593 + C27525 * C5594) * C27321 +
                                 (C9186 * C5523 + C27525 * C5524) * C143) *
                                    C9185 +
                                ((C9186 * C1256 + C27525 * C1260) * C27321 +
                                 (C9186 * C1190 + C27525 * C1194) * C143) *
                                    C9184) *
                                   C27527 * C593) *
                                  C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C9184 +
           (C9524 * C143 + C9592 * C27321) * C9185) *
              C27527 * C27278 * C4197 -
          ((C11426 * C27321 + C11363 * C143) * C9185 +
           ((C9186 * C1257 + C27525 * C1261) * C27321 +
            (C9186 * C1191 + C27525 * C1197) * C143) *
               C9184) *
              C27527 * C27278 * C4198 +
          (((C9186 * C3190 + C27525 * C3193) * C143 +
            (C9186 * C3252 + C27525 * C3255) * C27321) *
               C9184 +
           (C12346 * C143 + C12404 * C27321) * C9185) *
              C27527 * C27278 * C4199 -
          (((C9186 * C12865 + C27525 * C12866) * C27321 +
            (C9186 * C12827 + C27525 * C12829) * C143) *
               C9185 +
           ((C9186 * C4244 + C27525 * C4246) * C27321 +
            (C9186 * C4202 + C27525 * C4206) * C143) *
               C9184) *
              C27527 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eexz[23] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1313 +
            (C9186 * C189 + C27525 * C194) * C27492 -
            (C9186 * C1191 + C27525 * C1197) * C1314 -
            (C9186 * C1316 + C27525 * C1320) * C27359) *
               C9184 +
           (C11480 + C11481 - C11482 - C11492) * C9185) *
              C27527 * C1779 +
          ((C11482 - (C11481 + C11480) + C11492) * C9184 +
           (C11485 - (C11486 + C11487) + C11493) * C9185) *
              C27527 * C1780 +
          ((C11487 + C11486 - C11485 - C11493) * C9184 +
           (C10984 * C1313 + C11066 * C27492 -
            (C9186 * C11349 + C27525 * C11351) * C1314 -
            (C9186 * C11477 + C27525 * C11478) * C27359) *
               C9185) *
              C27527 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27525 * C94) * C1313 +
                                (C9186 * C189 + C27525 * C194) * C27492 -
                                (C9186 * C1191 + C27525 * C1197) * C1314 -
                                (C9186 * C1316 + C27525 * C1320) * C27359) *
                                   C9184 +
                               (C9524 * C1313 + C9654 * C27492 -
                                (C9186 * C2673 + C27525 * C2677) * C1314 -
                                (C9186 * C2797 + C27525 * C2801) * C27359) *
                                   C9185) *
                                  C27527 * C27321 * C591 +
                              (((C9186 * C1189 + C27525 * C1193) * C1314 -
                                ((C9186 * C190 + C27525 * C195) * C27492 +
                                 (C9186 * C90 + C27525 * C95) * C1313) +
                                (C9186 * C1315 + C27525 * C1319) * C27359) *
                                   C9184 +
                               ((C9186 * C2674 + C27525 * C2678) * C1314 -
                                (C9655 * C27492 + C9526 * C1313) +
                                (C9186 * C2798 + C27525 * C2802) * C27359) *
                                   C9185) *
                                  C27527 * C27321 * C592 +
                              (((C9186 * C91 + C27525 * C98) * C1313 +
                                (C9186 * C191 + C27525 * C196) * C27492 -
                                (C9186 * C1190 + C27525 * C1194) * C1314 -
                                (C9186 * C1317 + C27525 * C1321) * C27359) *
                                   C9184 +
                               (C9528 * C1313 + C9656 * C27492 -
                                (C9186 * C5523 + C27525 * C5524) * C1314 -
                                (C9186 * C5661 + C27525 * C5662) * C27359) *
                                   C9185) *
                                  C27527 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27525 * C94) * C4281 +
           (C9186 * C189 + C27525 * C194) * C4197 -
           (C9186 * C1191 + C27525 * C1197) * C4282 -
           (C9186 * C1316 + C27525 * C1320) * C4198 +
           (C9186 * C3190 + C27525 * C3193) * C4283 +
           (C9186 * C3311 + C27525 * C3314) * C4199 -
           (C9186 * C4202 + C27525 * C4206) * C4284 -
           (C9186 * C4286 + C27525 * C4288) * C4200) *
              C9184 +
          (C9524 * C4281 + C9654 * C4197 - C11363 * C4282 - C11490 * C4198 +
           C12346 * C4283 + C12464 * C4199 -
           (C9186 * C12827 + C27525 * C12829) * C4284 -
           (C9186 * C12901 + C27525 * C12902) * C4200) *
              C9185) *
         C27527 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[23] +=
        (-std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27278) *
               C27527 * C27525 * C27492 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27278 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C2314) *
               C27527 * C27525 * C27359) *
              C1779 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C2314 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27278) *
               C27527 * C27525 * C27359 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27278 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C2314) *
               C27527 * C27525 * C27492) *
              C1780 +
          (((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C2314 +
            (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
                C27278) *
               C27527 * C27525 * C27492 -
           ((C9290 * C11350 + C9185 * C11544 + C9289 * C2682 + C9184 * C2862) *
                C27278 +
            (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
                C2314) *
               C27527 * C27525 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C591 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C592 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C598 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C593) *
              C27527 * C27525 * C27492 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C597 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C591 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C596) +
           (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
               C592 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C598 -
           (C9290 * C5525 + C9185 * C5730 + C9289 * C1198 + C9184 * C1379) *
               C593) *
              C27527 * C27525 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
               C27278) *
              C27527 * C27525 * C4197 -
          ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
               C27278 +
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C2314) *
              C27527 * C27525 * C4198 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C2314 +
           (C9289 * C3195 + C9184 * C3370 + C9290 * C3734 + C9185 * C3900) *
               C27278) *
              C27527 * C27525 * C4199 -
          ((C9290 * C12828 + C9185 * C12938 + C9289 * C4204 + C9184 * C4326) *
               C27278 +
           (C9290 * C12827 + C9185 * C12937 + C9289 * C4202 + C9184 * C4324) *
               C2314) *
              C27527 * C27525 * C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eeyy[23] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1846 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C1779 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C1847 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C1780 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1848 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C1781) *
              C27527 * C27525 * C27278 * C27492 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C1847 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C1779 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C1846) +
           (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
               C1780 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C1848 -
           (C9290 * C11419 + C9185 * C11595 + C9289 * C2742 + C9184 * C2914) *
               C1781) *
              C27527 * C27525 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27321) *
               C27527 * C27525 * C591 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27321 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
               C27527 * C27525 * C592 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
                C27321) *
               C27527 * C27525 * C593) *
              C27492 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C143 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27321) *
               C27527 * C27525 * C592 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27321 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C143) *
               C27527 * C27525 * C591 -
           ((C9290 * C5593 + C9185 * C5803 + C9289 * C1256 + C9184 * C1444) *
                C27321 +
            (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
                C143) *
               C27527 * C27525 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27321) *
              C27527 * C27525 * C27278 * C4197 -
          ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
               C27321 +
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C143) *
              C27527 * C27525 * C27278 * C4198 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C143 +
           (C9289 * C3252 + C9184 * C3429 + C9290 * C3790 + C9185 * C3951) *
               C27321) *
              C27527 * C27525 * C27278 * C4199 -
          ((C9290 * C12865 + C9185 * C12973 + C9289 * C4244 + C9184 * C4362) *
               C27321 +
           (C9290 * C12827 + C9185 * C12937 + C9289 * C4202 + C9184 * C4324) *
               C143) *
              C27527 * C27525 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1313 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27492 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C1314 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C1779 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C1314 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27492 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C1313) +
           (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
               C27359) *
              C27527 * C27525 * C1780 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1313 +
           (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
               C27492 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C1314 -
           (C9290 * C11477 + C9185 * C11646 + C9289 * C2800 + C9184 * C2969) *
               C27359) *
              C27527 * C27525 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1313 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27492 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C1314 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C27321 * C591 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C1314 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27492 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C1313) +
           (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
               C27359) *
              C27527 * C27525 * C27321 * C592 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C1313 +
           (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
               C27492 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C1314 -
           (C9290 * C5661 + C9185 * C5877 + C9289 * C1317 + C9184 * C1509) *
               C27359) *
              C27527 * C27525 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4281 +
          (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) * C4197 -
          (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
              C4282 -
          (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
              C4198 +
          (C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
              C4283 +
          (C9289 * C3311 + C9184 * C3487 + C9290 * C3844 + C9185 * C4003) *
              C4199 -
          (C9290 * C12827 + C9185 * C12937 + C9289 * C4202 + C9184 * C4324) *
              C4284 -
          (C9290 * C12901 + C9185 * C13008 + C9289 * C4286 + C9184 * C4397) *
              C4200) *
         C27527 * C27525 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[23] +=
        (-std::pow(Pi, 2.5) * (((((C404 * C89 + C27527 * C405) * C2314 +
                                  (C404 * C96 + C27527 * C410) * C27278) *
                                     C27525 * C9184 +
                                 (C11210 + C11211) * C27525 * C9185) *
                                    C27492 -
                                ((C11712 + C11713) * C27525 * C9185 +
                                 ((C404 * C1196 + C27527 * C1579) * C27278 +
                                  (C404 * C1191 + C27527 * C1576) * C2314) *
                                     C27525 * C9184) *
                                    C27359) *
                                   C1779 +
                               (((C11713 + C11712) * C27525 * C9184 +
                                 (C11714 + C11715) * C27525 * C9185) *
                                    C27359 -
                                ((C11212 + C11213) * C27525 * C9185 +
                                 (C11211 + C11210) * C27525 * C9184) *
                                    C27492) *
                                   C1780 +
                               (((C11213 + C11212) * C27525 * C9184 +
                                 (C11220 + C11221) * C27525 * C9185) *
                                    C27492 -
                                (((C404 * C11350 + C27527 * C11698) * C27278 +
                                  (C404 * C11349 + C27527 * C11697) * C2314) *
                                     C27525 * C9185 +
                                 (C11715 + C11714) * C27525 * C9184) *
                                    C27359) *
                                   C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C27525 * C9184 +
           (C9870 + C9871 - C9864 - C9865 + C9866 + C9867) * C27525 * C9185) *
              C27492 +
          ((C1592 * C597 -
            ((C404 * C1196 + C27527 * C1579) * C591 +
             (C404 * C1191 + C27527 * C1576) * C596) +
            C1593 * C592 - C1594 * C598 - C1595 * C593) *
               C27525 * C9184 +
           (C5958 * C597 -
            ((C404 * C2679 + C27527 * C3025) * C591 +
             (C404 * C2673 + C27527 * C3021) * C596) +
            C5959 * C592 - (C404 * C5523 + C27527 * C5951) * C598 -
            (C404 * C5525 + C27527 * C5952) * C593) *
               C27525 * C9185) *
              C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C2314 +
            (C404 * C96 + C27527 * C410) * C27278) *
               C27525 * C9184 +
           (C11210 + C11211) * C27525 * C9185) *
              C4197 -
          ((C11712 + C11713) * C27525 * C9185 +
           ((C404 * C1196 + C27527 * C1579) * C27278 +
            (C404 * C1191 + C27527 * C1576) * C2314) *
               C27525 * C9184) *
              C4198 +
          (((C404 * C3190 + C27527 * C3549) * C2314 +
            (C404 * C3195 + C27527 * C3552) * C27278) *
               C27525 * C9184 +
           (C12678 + C12679) * C27525 * C9185) *
              C4199 -
          (((C404 * C12828 + C27527 * C13044) * C27278 +
            (C404 * C12827 + C27527 * C13043) * C2314) *
               C27525 * C9185 +
           ((C404 * C4204 + C27527 * C4436) * C27278 +
            (C404 * C4202 + C27527 * C4434) * C2314) *
               C27525 * C9184) *
              C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 - C9868 * C1847 -
            C9924 * C1780 + C10827 * C1848 + C10882 * C1781) *
               C27525 * C9184 +
           (C9868 * C1846 + C9924 * C1779 - C10827 * C1847 - C10882 * C1780 +
            C11218 * C1848 + C11259 * C1781) *
               C27525 * C9185) *
              C27278 * C27492 +
          ((C11709 * C1847 -
            ((C404 * C1257 + C27527 * C1647) * C1779 +
             (C404 * C1191 + C27527 * C1576) * C1846) +
            C11771 * C1780 - C11710 * C1848 - C11772 * C1781) *
               C27525 * C9184 +
           (C11710 * C1847 - (C11771 * C1779 + C11709 * C1846) +
            C11772 * C1780 - (C404 * C11349 + C27527 * C11697) * C1848 -
            (C404 * C11419 + C27527 * C11765) * C1781) *
               C27525 * C9185) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C27525 * C9184 +
            (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
               C591 -
           ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
            (C485 + C473) * C27525 * C9184) *
               C592 +
           ((C478 + C486) * C27525 * C9184 +
            (C1004 * C143 + C1071 * C27321) * C27525 * C9185) *
               C593) *
              C27492 +
          (((C1650 + C1658) * C27525 * C9184 +
            (C5958 * C143 + C6032 * C27321) * C27525 * C9185) *
               C592 -
           (((C404 * C2739 + C27527 * C3079) * C27321 +
             (C404 * C2673 + C27527 * C3021) * C143) *
                C27525 * C9185 +
            ((C404 * C1257 + C27527 * C1647) * C27321 +
             (C404 * C1191 + C27527 * C1576) * C143) *
                C27525 * C9184) *
               C591 -
           (((C404 * C5593 + C27527 * C6025) * C27321 +
             (C404 * C5523 + C27527 * C5951) * C143) *
                C27525 * C9185 +
            (C1659 + C1653) * C27525 * C9184) *
               C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C143 +
            (C404 * C144 + C27527 * C467) * C27321) *
               C27525 * C9184 +
           (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
              C27278 * C4197 -
          ((C11771 * C27321 + C11709 * C143) * C27525 * C9185 +
           ((C404 * C1257 + C27527 * C1647) * C27321 +
            (C404 * C1191 + C27527 * C1576) * C143) *
               C27525 * C9184) *
              C27278 * C4198 +
          (((C404 * C3190 + C27527 * C3549) * C143 +
            (C404 * C3252 + C27527 * C3611) * C27321) *
               C27525 * C9184 +
           (C12676 * C143 + C12733 * C27321) * C27525 * C9185) *
              C27278 * C4199 -
          (((C404 * C12865 + C27527 * C13079) * C27321 +
            (C404 * C12827 + C27527 * C13043) * C143) *
               C27525 * C9185 +
           ((C404 * C4244 + C27527 * C4472) * C27321 +
            (C404 * C4202 + C27527 * C4434) * C143) *
               C27525 * C9184) *
              C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eezz[23] += (-std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C27525 * C9184 +
                     (C11824 + C11825 - C11826 - C11836) * C27525 * C9185) *
                        C1779 +
                    ((C11826 - (C11825 + C11824) + C11836) * C27525 * C9184 +
                     (C11829 - (C11830 + C11831) + C11837) * C27525 * C9185) *
                        C1780 +
                    ((C11831 + C11830 - C11829 - C11837) * C27525 * C9184 +
                     (C11218 * C1313 + C11298 * C27492 -
                      (C404 * C11349 + C27527 * C11697) * C1314 -
                      (C404 * C11477 + C27527 * C11822) * C27359) *
                         C27525 * C9185) *
                        C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C27525 * C9184 +
                     (C9868 * C1313 + C9978 * C27492 -
                      (C404 * C2673 + C27527 * C3021) * C1314 -
                      (C404 * C2797 + C27527 * C3133) * C27359) *
                         C27525 * C9185) *
                        C27321 * C591 +
                    ((C1716 - (C1715 + C1714) + C1726) * C27525 * C9184 +
                     (C6101 - (C6102 + C6103) + C6107) * C27525 * C9185) *
                        C27321 * C592 +
                    ((C1721 + C1720 - C1719 - C1727) * C27525 * C9184 +
                     (C1004 * C1313 + C1135 * C27492 -
                      (C404 * C5523 + C27527 * C5951) * C1314 -
                      (C404 * C5661 + C27527 * C6099) * C27359) *
                         C27525 * C9185) *
                        C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C404 * C89 + C27527 * C405) * C4281 +
                     (C404 * C189 + C27527 * C521) * C4197 -
                     (C404 * C1191 + C27527 * C1576) * C4282 -
                     (C404 * C1316 + C27527 * C1709) * C4198 +
                     (C404 * C3190 + C27527 * C3549) * C4283 +
                     (C404 * C3311 + C27527 * C3669) * C4199 -
                     (C404 * C4202 + C27527 * C4434) * C4284 -
                     (C404 * C4286 + C27527 * C4507) * C4200) *
                        C27525 * C9184 +
                    (C9868 * C4281 + C9978 * C4197 - C11709 * C4282 -
                     C11834 * C4198 + C12676 * C4283 + C12792 * C4199 -
                     (C404 * C12827 + C27527 * C13043) * C4284 -
                     (C404 * C12901 + C27527 * C13114) * C4200) *
                        C27525 * C9185) *
                   C27321 * C27278) /
                      (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4564 +
            (C9186 * C96 + C27525 * C104) * C27517 -
            (C9186 * C90 + C27525 * C95) * C4565 -
            (C9186 * C97 + C27525 * C105) * C27507 +
            (C9186 * C91 + C27525 * C98) * C4566 +
            (C9186 * C99 + C27525 * C106) * C4561) *
               C9184 +
           (C13166 + C13167 - C13168 - C13169 + C13170 + C13171) * C9185) *
              C27527 * C6157 +
          (((C9186 * C1189 + C27525 * C1193) * C4565 -
            ((C9186 * C1196 + C27525 * C1202) * C27517 +
             (C9186 * C1191 + C27525 * C1197) * C4564) +
            (C9186 * C1195 + C27525 * C1201) * C27507 -
            (C9186 * C1190 + C27525 * C1194) * C4566 -
            (C9186 * C1198 + C27525 * C1203) * C4561) *
               C9184 +
           (C14116 * C4565 - (C11362 * C27517 + C11363 * C4564) +
            C14117 * C27507 - (C9186 * C5523 + C27525 * C5524) * C4566 -
            (C9186 * C5525 + C27525 * C5526) * C4561) *
               C9185) *
              C27527 * C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eexy[24] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C143 +
                       (C9186 * C144 + C27525 * C149) * C27321) *
                          C9184 +
                      (C9524 * C143 + C9592 * C27321) * C9185) *
                         C27527 * C27517 -
                     ((C9593 * C27321 + C9526 * C143) * C9185 +
                      ((C9186 * C145 + C27525 * C150) * C27321 +
                       (C9186 * C90 + C27525 * C95) * C143) *
                          C9184) *
                         C27527 * C27507 +
                     (((C9186 * C91 + C27525 * C98) * C143 +
                       (C9186 * C146 + C27525 * C151) * C27321) *
                          C9184 +
                      (C9528 * C143 + C9594 * C27321) * C9185) *
                         C27527 * C4561) *
                        C6157 +
                    ((((C9186 * C1189 + C27525 * C1193) * C143 +
                       (C9186 * C1255 + C27525 * C1259) * C27321) *
                          C9184 +
                      (C14116 * C143 + C14188 * C27321) * C9185) *
                         C27527 * C27507 -
                     ((C11426 * C27321 + C11363 * C143) * C9185 +
                      ((C9186 * C1257 + C27525 * C1261) * C27321 +
                       (C9186 * C1191 + C27525 * C1197) * C143) *
                          C9184) *
                         C27527 * C27517 -
                     (((C9186 * C5593 + C27525 * C5594) * C27321 +
                       (C9186 * C5523 + C27525 * C5524) * C143) *
                          C9185 +
                      ((C9186 * C1256 + C27525 * C1260) * C27321 +
                       (C9186 * C1190 + C27525 * C1194) * C143) *
                          C9184) *
                         C27527 * C4561) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C6259 +
            (C9186 * C189 + C27525 * C194) * C6157 -
            (C9186 * C1191 + C27525 * C1197) * C6260 -
            (C9186 * C1316 + C27525 * C1320) * C27359) *
               C9184 +
           (C9524 * C6259 + C9654 * C6157 - C11363 * C6260 - C11490 * C27359) *
               C9185) *
              C27527 * C27321 * C27517 +
          (((C9186 * C1189 + C27525 * C1193) * C6260 -
            ((C9186 * C190 + C27525 * C195) * C6157 +
             (C9186 * C90 + C27525 * C95) * C6259) +
            (C9186 * C1315 + C27525 * C1319) * C27359) *
               C9184 +
           (C14116 * C6260 - (C9655 * C6157 + C9526 * C6259) +
            C14260 * C27359) *
               C9185) *
              C27527 * C27321 * C27507 +
          (((C9186 * C91 + C27525 * C98) * C6259 +
            (C9186 * C191 + C27525 * C196) * C6157 -
            (C9186 * C1190 + C27525 * C1194) * C6260 -
            (C9186 * C1317 + C27525 * C1321) * C27359) *
               C9184 +
           (C9528 * C6259 + C9656 * C6157 -
            (C9186 * C5523 + C27525 * C5524) * C6260 -
            (C9186 * C5661 + C27525 * C5662) * C27359) *
               C9185) *
              C27527 * C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C4564 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C27517 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C4565 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C27507 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C4566 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C4561) *
              C27527 * C27525 * C6157 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C4565 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27517 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C4564) +
           (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
               C27507 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C4566 -
           (C9290 * C5525 + C9185 * C5730 + C9289 * C1198 + C9184 * C1379) *
               C4561) *
              C27527 * C27525 * C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27321) *
               C27527 * C27525 * C27517 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27321 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
               C27527 * C27525 * C27507 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
                C27321) *
               C27527 * C27525 * C4561) *
              C6157 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C143 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27321) *
               C27527 * C27525 * C27507 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27321 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C143) *
               C27527 * C27525 * C27517 -
           ((C9290 * C5593 + C9185 * C5803 + C9289 * C1256 + C9184 * C1444) *
                C27321 +
            (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
                C143) *
               C27527 * C27525 * C4561) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C6259 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) * C6157 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C6260 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C27321 * C27517 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C6260 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C6157 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C6259) +
           (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
               C27359) *
              C27527 * C27525 * C27321 * C27507 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C6259 +
           (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) * C6157 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C6260 -
           (C9290 * C5661 + C9185 * C5877 + C9289 * C1317 + C9184 * C1509) *
               C27359) *
              C27527 * C27525 * C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eezx[24] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C4564 +
                      (C404 * C96 + C27527 * C410) * C27517 - C428 * C4565 -
                      C429 * C27507 + C430 * C4566 + C431 * C4561) *
                         C27525 * C9184 +
                     (C13472 + C13473 - C13474 - C13475 + C13476 + C13477) *
                         C27525 * C9185) *
                        C6157 +
                    ((C1592 * C4565 -
                      ((C404 * C1196 + C27527 * C1579) * C27517 +
                       (C404 * C1191 + C27527 * C1576) * C4564) +
                      C1593 * C27507 - C1594 * C4566 - C1595 * C4561) *
                         C27525 * C9184 +
                     (C5958 * C4565 - (C11708 * C27517 + C11709 * C4564) +
                      C5959 * C27507 - (C404 * C5523 + C27527 * C5951) * C4566 -
                      (C404 * C5525 + C27527 * C5952) * C4561) *
                         C27525 * C9185) *
                        C27359) *
                   C27321) /
                  (p * q * std::sqrt(p + q));
    d2eezy[24] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C143 +
                       (C404 * C144 + C27527 * C467) * C27321) *
                          C27525 * C9184 +
                      (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
                         C27517 -
                     ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
                      (C485 + C473) * C27525 * C9184) *
                         C27507 +
                     ((C478 + C486) * C27525 * C9184 +
                      (C1004 * C143 + C1071 * C27321) * C27525 * C9185) *
                         C4561) *
                        C6157 +
                    (((C1650 + C1658) * C27525 * C9184 +
                      (C5958 * C143 + C6032 * C27321) * C27525 * C9185) *
                         C27507 -
                     ((C11771 * C27321 + C11709 * C143) * C27525 * C9185 +
                      ((C404 * C1257 + C27527 * C1647) * C27321 +
                       (C404 * C1191 + C27527 * C1576) * C143) *
                          C27525 * C9184) *
                         C27517 -
                     (((C404 * C5593 + C27527 * C6025) * C27321 +
                       (C404 * C5523 + C27527 * C5951) * C143) *
                          C27525 * C9185 +
                      (C1659 + C1653) * C27525 * C9184) *
                         C4561) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C6259 +
            (C404 * C189 + C27527 * C521) * C6157 -
            (C404 * C1191 + C27527 * C1576) * C6260 -
            (C404 * C1316 + C27527 * C1709) * C27359) *
               C27525 * C9184 +
           (C9868 * C6259 + C9978 * C6157 - C11709 * C6260 - C11834 * C27359) *
               C27525 * C9185) *
              C27321 * C27517 +
          ((C6572 - (C6571 + C6570) + C6573) * C27525 * C9184 +
           (C7184 - (C7185 + C7186) + C7187) * C27525 * C9185) *
              C27321 * C27507 +
          ((C6576 + C6575 - C6574 - C6577) * C27525 * C9184 +
           (C1004 * C6259 + C1135 * C6157 -
            (C404 * C5523 + C27527 * C5951) * C6260 -
            (C404 * C5661 + C27527 * C6099) * C27359) *
               C27525 * C9185) *
              C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eexx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C5040 +
                       (C9186 * C96 + C27525 * C104) * C5035 -
                       (C9186 * C90 + C27525 * C95) * C5041 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C9184 +
                      (C13628 + C13629 - C13630 - C13631) * C9185) *
                         C27527 * C6157 +
                     (((C9186 * C1189 + C27525 * C1193) * C5041 -
                       ((C9186 * C1196 + C27525 * C1202) * C5035 +
                        (C9186 * C1191 + C27525 * C1197) * C5040) +
                       (C9186 * C1195 + C27525 * C1201) * C27283) *
                          C9184 +
                      (C14118 - (C14112 + C14113) + C14119) * C9185) *
                         C27527 * C27359) *
                        C27491 +
                    (((C13630 - (C13629 + C13628) + C13631) * C9184 +
                      (C13632 - (C13633 + C13634) + C13635) * C9185) *
                         C27527 * C6157 +
                     ((C14113 + C14112 - C14118 - C14119) * C9184 +
                      (C11364 * C5040 + C11365 * C5035 -
                       (C9186 * C2675 + C27525 * C2683) * C5041 -
                       (C9186 * C2681 + C27525 * C2687) * C27283) *
                          C9185) *
                         C27527 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C665 +
             (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
             C9592 * C27335) *
                C9184 +
            (C9524 * C665 + C9592 * C27491 - C10494 * C666 - C10554 * C27335) *
                C9185) *
               C27527 * C5035 +
           ((C9526 * C666 -
             ((C9186 * C145 + C27525 * C150) * C27491 +
              (C9186 * C90 + C27525 * C95) * C665) +
             C9593 * C27335) *
                C9184 +
            (C10492 * C666 - (C9593 * C27491 + C9526 * C665) +
             C10555 * C27335) *
                C9185) *
               C27527 * C27283) *
              C6157 +
          (((C11363 * C666 -
             ((C9186 * C1257 + C27525 * C1261) * C27491 +
              (C9186 * C1191 + C27525 * C1197) * C665) +
             C11426 * C27335) *
                C9184 +
            (C11364 * C666 - (C11426 * C27491 + C11363 * C665) +
             C11427 * C27335) *
                C9185) *
               C27527 * C5035 +
           (((C9186 * C1189 + C27525 * C1193) * C665 +
             (C9186 * C1255 + C27525 * C1259) * C27491 - C14116 * C666 -
             C14188 * C27335) *
                C9184 +
            (C14116 * C665 + C14188 * C27491 -
             (C9186 * C2675 + C27525 * C2683) * C666 -
             (C9186 * C2741 + C27525 * C2745) * C27335) *
                C9185) *
               C27527 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C6259 +
                       (C9186 * C189 + C27525 * C194) * C6157 -
                       (C9186 * C1191 + C27525 * C1197) * C6260 -
                       (C9186 * C1316 + C27525 * C1320) * C27359) *
                          C9184 +
                      (C15310 + C15311 - C15312 - C15313) * C9185) *
                         C27527 * C27491 +
                     ((C15312 - (C15311 + C15310) + C15313) * C9184 +
                      (C11364 * C6260 - (C10612 * C6157 + C10494 * C6259) +
                       C11491 * C27359) *
                          C9185) *
                         C27527 * C27335) *
                        C5035 +
                    ((((C9186 * C1189 + C27525 * C1193) * C6260 -
                       ((C9186 * C190 + C27525 * C195) * C6157 +
                        (C9186 * C90 + C27525 * C95) * C6259) +
                       (C9186 * C1315 + C27525 * C1319) * C27359) *
                          C9184 +
                      (C15314 - (C15315 + C15316) + C15317) * C9185) *
                         C27527 * C27491 +
                     ((C15316 + C15315 - C15314 - C15317) * C9184 +
                      (C10492 * C6259 + C10613 * C6157 -
                       (C9186 * C2675 + C27525 * C2683) * C6260 -
                       (C9186 * C2799 + C27525 * C2803) * C27359) *
                          C9185) *
                         C27527 * C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5040 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C5035 -
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C5041 -
            (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
                C27283) *
               C27527 * C27525 * C6157 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C5041 -
            ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                 C5035 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C5040) +
            (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C27491 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C5041 -
            ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                 C5035 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C5040) +
            (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
                C27283) *
               C27527 * C27525 * C6157 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C5040 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C5035 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C5041 -
            (C9290 * C2681 + C9185 * C2861 + C9289 * C2680 + C9184 * C2860) *
                C27283) *
               C27527 * C27525 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C665 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27491 -
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C666 -
            (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
                C27335) *
               C27527 * C27525 * C5035 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C666 -
            ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                 C27491 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C665) +
            (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
                C27335) *
               C27527 * C27525 * C27283) *
              C6157 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C666 -
            ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                 C27491 +
             (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                 C665) +
            (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
                C27335) *
               C27527 * C27525 * C5035 +
           ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C665 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27491 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C666 -
            (C9290 * C2741 + C9185 * C2916 + C9289 * C2740 + C9184 * C2915) *
                C27335) *
               C27527 * C27525 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C6259 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C6157 -
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C6260 -
            (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
                C27359) *
               C27527 * C27525 * C27491 +
           ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C6260 -
            ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                 C6157 +
             (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                 C6259) +
            (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
                C27359) *
               C27527 * C27525 * C27335) *
              C5035 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C6260 -
            ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                 C6157 +
             (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                 C6259) +
            (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
                C27359) *
               C27527 * C27525 * C27491 +
           ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C6259 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C6157 -
            (C9290 * C2675 + C9185 * C2857 + C9289 * C2674 + C9184 * C2856) *
                C6260 -
            (C9290 * C2799 + C9185 * C2970 + C9289 * C2798 + C9184 * C2968) *
                C27359) *
               C27527 * C27525 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C5040 +
                       (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
                       C429 * C27283) *
                          C27525 * C9184 +
                      (C13936 + C13937 - C13938 - C13939) * C27525 * C9185) *
                         C6157 +
                     ((C1592 * C5041 -
                       ((C404 * C1196 + C27527 * C1579) * C5035 +
                        (C404 * C1191 + C27527 * C1576) * C5040) +
                       C1593 * C27283) *
                          C27525 * C9184 +
                      (C14526 - (C14527 + C14528) + C14529) * C27525 * C9185) *
                         C27359) *
                        C27491 +
                    (((C13938 - (C13937 + C13936) + C13939) * C27525 * C9184 +
                      (C13940 - (C13941 + C13942) + C13943) * C27525 * C9185) *
                         C6157 +
                     ((C14528 + C14527 - C14526 - C14529) * C27525 * C9184 +
                      (C11710 * C5040 + C11711 * C5035 -
                       (C404 * C2675 + C27527 * C3023) * C5041 -
                       (C404 * C2681 + C27527 * C3027) * C27283) *
                          C27525 * C9185) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C665 +
             (C404 * C144 + C27527 * C467) * C27491 - C9868 * C666 -
             C9924 * C27335) *
                C27525 * C9184 +
            (C9868 * C665 + C9924 * C27491 - C10827 * C666 - C10882 * C27335) *
                C27525 * C9185) *
               C5035 +
           ((C1062 - (C1061 + C1060) + C1072) * C27525 * C9184 +
            (C2154 * C666 - (C1070 * C27491 + C1002 * C665) + C2216 * C27335) *
                C27525 * C9185) *
               C27283) *
              C6157 +
          (((C11709 * C666 -
             ((C404 * C1257 + C27527 * C1647) * C27491 +
              (C404 * C1191 + C27527 * C1576) * C665) +
             C11771 * C27335) *
                C27525 * C9184 +
            (C11710 * C666 - (C11771 * C27491 + C11709 * C665) +
             C11772 * C27335) *
                C27525 * C9185) *
               C5035 +
           ((C7116 + C7115 - C7114 - C7117) * C27525 * C9184 +
            (C5958 * C665 + C6032 * C27491 -
             (C404 * C2675 + C27527 * C3023) * C666 -
             (C404 * C2741 + C27527 * C3082) * C27335) *
                C27525 * C9185) *
               C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C6259 +
                       (C404 * C189 + C27527 * C521) * C6157 -
                       (C404 * C1191 + C27527 * C1576) * C6260 -
                       (C404 * C1316 + C27527 * C1709) * C27359) *
                          C27525 * C9184 +
                      (C15714 + C15715 - C15716 - C15717) * C27525 * C9185) *
                         C27491 +
                     ((C15716 - (C15715 + C15714) + C15717) * C27525 * C9184 +
                      (C11710 * C6260 - (C10936 * C6157 + C10827 * C6259) +
                       C11835 * C27359) *
                          C27525 * C9185) *
                         C27335) *
                        C5035 +
                    (((C6572 - (C6571 + C6570) + C6573) * C27525 * C9184 +
                      (C7184 - (C7185 + C7186) + C7187) * C27525 * C9185) *
                         C27491 +
                     ((C7186 + C7185 - C7184 - C7187) * C27525 * C9184 +
                      (C2154 * C6259 + C2274 * C6157 -
                       (C404 * C2675 + C27527 * C3023) * C6260 -
                       (C404 * C2799 + C27527 * C3136) * C27359) *
                          C27525 * C9185) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C5040 +
                      (C9186 * C96 + C27525 * C104) * C5035 -
                      (C9186 * C90 + C27525 * C95) * C5041 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C9184 +
                     (C13628 + C13629 - C13630 - C13631) * C9185) *
                        C27527 * C27521 +
                    (((C9186 * C1189 + C27525 * C1193) * C5041 -
                      ((C9186 * C1196 + C27525 * C1202) * C5035 +
                       (C9186 * C1191 + C27525 * C1197) * C5040) +
                      (C9186 * C1195 + C27525 * C1201) * C27283) *
                         C9184 +
                     (C14118 - (C14112 + C14113) + C14119) * C9185) *
                        C27527 * C27515 +
                    (((C9186 * C3190 + C27525 * C3193) * C5040 +
                      (C9186 * C3195 + C27525 * C3199) * C5035 -
                      (C9186 * C3191 + C27525 * C3194) * C5041 -
                      (C9186 * C3196 + C27525 * C3200) * C27283) *
                         C9184 +
                     (C12346 * C5040 + C12347 * C5035 -
                      (C9186 * C3731 + C27525 * C3735) * C5041 -
                      (C9186 * C3733 + C27525 * C3737) * C27283) *
                         C9185) *
                        C27527 * C7239) *
                   C27321) /
                  (p * q * std::sqrt(p + q));
    d2eexy[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C143 +
                       (C9186 * C144 + C27525 * C149) * C27321) *
                          C9184 +
                      (C9524 * C143 + C9592 * C27321) * C9185) *
                         C27527 * C5035 -
                     ((C9593 * C27321 + C9526 * C143) * C9185 +
                      ((C9186 * C145 + C27525 * C150) * C27321 +
                       (C9186 * C90 + C27525 * C95) * C143) *
                          C9184) *
                         C27527 * C27283) *
                        C27521 +
                    ((((C9186 * C1189 + C27525 * C1193) * C143 +
                       (C9186 * C1255 + C27525 * C1259) * C27321) *
                          C9184 +
                      (C14116 * C143 + C14188 * C27321) * C9185) *
                         C27527 * C27283 -
                     ((C11426 * C27321 + C11363 * C143) * C9185 +
                      ((C9186 * C1257 + C27525 * C1261) * C27321 +
                       (C9186 * C1191 + C27525 * C1197) * C143) *
                          C9184) *
                         C27527 * C5035) *
                        C27515 +
                    ((((C9186 * C3190 + C27525 * C3193) * C143 +
                       (C9186 * C3252 + C27525 * C3255) * C27321) *
                          C9184 +
                      (C12346 * C143 + C12404 * C27321) * C9185) *
                         C27527 * C5035 -
                     (((C9186 * C3789 + C27525 * C3791) * C27321 +
                       (C9186 * C3731 + C27525 * C3735) * C143) *
                          C9185 +
                      ((C9186 * C3253 + C27525 * C3256) * C27321 +
                       (C9186 * C3191 + C27525 * C3194) * C143) *
                          C9184) *
                         C27527 * C27283) *
                        C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C7340 +
            (C9186 * C189 + C27525 * C194) * C27521 -
            (C9186 * C1191 + C27525 * C1197) * C7341 -
            (C9186 * C1316 + C27525 * C1320) * C27515 +
            (C9186 * C3190 + C27525 * C3193) * C7342 +
            (C9186 * C3311 + C27525 * C3314) * C7239) *
               C9184 +
           (C9524 * C7340 + C9654 * C27521 - C11363 * C7341 - C11490 * C27515 +
            C12346 * C7342 + C12464 * C7239) *
               C9185) *
              C27527 * C27321 * C5035 +
          (((C9186 * C1189 + C27525 * C1193) * C7341 -
            ((C9186 * C190 + C27525 * C195) * C27521 +
             (C9186 * C90 + C27525 * C95) * C7340) +
            (C9186 * C1315 + C27525 * C1319) * C27515 -
            (C9186 * C3191 + C27525 * C3194) * C7342 -
            (C9186 * C3312 + C27525 * C3315) * C7239) *
               C9184 +
           (C14116 * C7341 - (C9655 * C27521 + C9526 * C7340) +
            C14260 * C27515 - (C9186 * C3731 + C27525 * C3735) * C7342 -
            (C9186 * C3843 + C27525 * C3845) * C7239) *
               C9185) *
              C27527 * C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C5040 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C5035 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C5041 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
               C27283) *
              C27527 * C27525 * C27521 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C5041 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C5035 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C5040) +
           (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
               C27283) *
              C27527 * C27525 * C27515 +
          ((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C5040 +
           (C9289 * C3195 + C9184 * C3370 + C9290 * C3734 + C9185 * C3900) *
               C5035 -
           (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
               C5041 -
           (C9290 * C3733 + C9185 * C3899 + C9289 * C3196 + C9184 * C3371) *
               C27283) *
              C27527 * C27525 * C7239) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27321) *
               C27527 * C27525 * C5035 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27321 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
               C27527 * C27525 * C27283) *
              C27521 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C143 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27321) *
               C27527 * C27525 * C27283 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27321 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C143) *
               C27527 * C27525 * C5035) *
              C27515 +
          (((C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
                C143 +
            (C9289 * C3252 + C9184 * C3429 + C9290 * C3790 + C9185 * C3951) *
                C27321) *
               C27527 * C27525 * C5035 -
           ((C9290 * C3789 + C9185 * C3952 + C9289 * C3253 + C9184 * C3430) *
                C27321 +
            (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
                C143) *
               C27527 * C27525 * C27283) *
              C7239)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C7340 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27521 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C7341 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27515 +
           (C9289 * C3190 + C9184 * C3367 + C9290 * C3732 + C9185 * C3898) *
               C7342 +
           (C9289 * C3311 + C9184 * C3487 + C9290 * C3844 + C9185 * C4003) *
               C7239) *
              C27527 * C27525 * C27321 * C5035 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C7341 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27521 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C7340) +
           (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
               C27515 -
           (C9290 * C3731 + C9185 * C3897 + C9289 * C3191 + C9184 * C3368) *
               C7342 -
           (C9290 * C3843 + C9185 * C4004 + C9289 * C3312 + C9184 * C3488) *
               C7239) *
              C27527 * C27525 * C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C5040 +
                      (C404 * C96 + C27527 * C410) * C5035 - C428 * C5041 -
                      C429 * C27283) *
                         C27525 * C9184 +
                     (C13936 + C13937 - C13938 - C13939) * C27525 * C9185) *
                        C27521 +
                    ((C1592 * C5041 -
                      ((C404 * C1196 + C27527 * C1579) * C5035 +
                       (C404 * C1191 + C27527 * C1576) * C5040) +
                      C1593 * C27283) *
                         C27525 * C9184 +
                     (C14526 - (C14527 + C14528) + C14529) * C27525 * C9185) *
                        C27515 +
                    (((C404 * C3190 + C27527 * C3549) * C5040 +
                      (C404 * C3195 + C27527 * C3552) * C5035 - C3560 * C5041 -
                      C3561 * C27283) *
                         C27525 * C9184 +
                     (C12676 * C5040 + C12677 * C5035 -
                      (C404 * C3731 + C27527 * C4055) * C5041 -
                      (C404 * C3733 + C27527 * C4057) * C27283) *
                         C27525 * C9185) *
                        C7239) *
                   C27321) /
                  (p * q * std::sqrt(p + q));
    d2eezy[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27527 * C405) * C143 +
                       (C404 * C144 + C27527 * C467) * C27321) *
                          C27525 * C9184 +
                      (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
                         C5035 -
                     ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
                      (C485 + C473) * C27525 * C9184) *
                         C27283) *
                        C27521 +
                    (((C1650 + C1658) * C27525 * C9184 +
                      (C5958 * C143 + C6032 * C27321) * C27525 * C9185) *
                         C27283 -
                     ((C11771 * C27321 + C11709 * C143) * C27525 * C9185 +
                      ((C404 * C1257 + C27527 * C1647) * C27321 +
                       (C404 * C1191 + C27527 * C1576) * C143) *
                          C27525 * C9184) *
                         C5035) *
                        C27515 +
                    ((((C404 * C3190 + C27527 * C3549) * C143 +
                       (C404 * C3252 + C27527 * C3611) * C27321) *
                          C27525 * C9184 +
                      (C12676 * C143 + C12733 * C27321) * C27525 * C9185) *
                         C5035 -
                     (((C404 * C3789 + C27527 * C4110) * C27321 +
                       (C404 * C3731 + C27527 * C4055) * C143) *
                          C27525 * C9185 +
                      (C3619 + C3615) * C27525 * C9184) *
                         C27283) *
                        C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C7340 +
            (C404 * C189 + C27527 * C521) * C27521 -
            (C404 * C1191 + C27527 * C1576) * C7341 -
            (C404 * C1316 + C27527 * C1709) * C27515 +
            (C404 * C3190 + C27527 * C3549) * C7342 +
            (C404 * C3311 + C27527 * C3669) * C7239) *
               C27525 * C9184 +
           (C9868 * C7340 + C9978 * C27521 - C11709 * C7341 - C11834 * C27515 +
            C12676 * C7342 + C12792 * C7239) *
               C27525 * C9185) *
              C27321 * C5035 +
          ((C7652 - (C7651 + C7650) + C7653 - C7654 - C7655) * C27525 * C9184 +
           (C5958 * C7341 - (C1134 * C27521 + C1002 * C7340) + C6106 * C27515 -
            (C404 * C3731 + C27527 * C4055) * C7342 -
            (C404 * C3843 + C27527 * C4162) * C7239) *
               C27525 * C9185) *
              C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C85 +
                     (C9186 * C96 + C27525 * C104) * C75 -
                     (C9186 * C90 + C27525 * C95) * C86 -
                     (C9186 * C97 + C27525 * C105) * C76 +
                     (C9186 * C91 + C27525 * C98) * C87 +
                     (C9186 * C99 + C27525 * C106) * C77 -
                     (C9186 * C92 + C27525 * C100) * C88 -
                     (C9186 * C101 + C27525 * C107) * C78) *
                        C9184 +
                    ((C9186 * C601 + C27525 * C607) * C85 +
                     (C9186 * C606 + C27525 * C612) * C75 -
                     (C9186 * C599 + C27525 * C603) * C86 -
                     (C9186 * C605 + C27525 * C611) * C76 +
                     (C9186 * C600 + C27525 * C604) * C87 +
                     (C9186 * C608 + C27525 * C613) * C77 -
                     (C9186 * C602 + C27525 * C609) * C88 -
                     (C9186 * C610 + C27525 * C614) * C78) *
                        C9185) *
                   C27527 * C27347 * C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C26163 +
                      (C9186 * C96 + C27525 * C104) * C27481 -
                      (C9186 * C90 + C27525 * C95) * C26156 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C9184 +
                     (C10480 + C10481 - C10482 - C10483) * C9185) *
                        C27527 * C27347 * C1779 +
                    ((C10482 - (C10481 + C10480) + C10483) * C9184 +
                     (C10496 - (C10497 + C10498) + C10499) * C9185) *
                        C27527 * C27347 * C1780 +
                    ((C10498 + C10497 - C10496 - C10499) * C9184 +
                     ((C9186 * C2316 + C27525 * C2320) * C26163 +
                      (C9186 * C2318 + C27525 * C2322) * C27481 -
                      (C9186 * C2315 + C27525 * C2319) * C26156 -
                      (C9186 * C2317 + C27525 * C2321) * C27283) *
                         C9185) *
                        C27527 * C27347 * C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C9184 +
           ((C9186 * C601 + C27525 * C607) * C143 +
            (C9186 * C668 + C27525 * C672) * C27321) *
               C9185) *
              C27527 * C75 -
          (((C9186 * C667 + C27525 * C671) * C27321 +
            (C9186 * C599 + C27525 * C603) * C143) *
               C9185 +
           ((C9186 * C145 + C27525 * C150) * C27321 +
            (C9186 * C90 + C27525 * C95) * C143) *
               C9184) *
              C27527 * C76 +
          (((C9186 * C91 + C27525 * C98) * C143 +
            (C9186 * C146 + C27525 * C151) * C27321) *
               C9184 +
           ((C9186 * C600 + C27525 * C604) * C143 +
            (C9186 * C669 + C27525 * C673) * C27321) *
               C9185) *
              C27527 * C77 -
          (((C9186 * C670 + C27525 * C674) * C27321 +
            (C9186 * C602 + C27525 * C609) * C143) *
               C9185 +
           ((C9186 * C147 + C27525 * C152) * C27321 +
            (C9186 * C92 + C27525 * C100) * C143) *
               C9184) *
              C27527 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C9184 +
           (C9524 * C1846 + C9592 * C1779 - C10494 * C1847 - C10554 * C1780 +
            (C9186 * C2316 + C27525 * C2320) * C1848 +
            (C9186 * C2362 + C27525 * C2364) * C1781) *
               C9185) *
              C27527 * C27481 +
          ((C9526 * C1847 -
            ((C9186 * C145 + C27525 * C150) * C1779 +
             (C9186 * C90 + C27525 * C95) * C1846) +
            C9593 * C1780 - C10492 * C1848 - C10555 * C1781) *
               C9184 +
           (C10492 * C1847 - (C9593 * C1779 + C9526 * C1846) + C10555 * C1780 -
            (C9186 * C2315 + C27525 * C2319) * C1848 -
            (C9186 * C2361 + C27525 * C2363) * C1781) *
               C9185) *
              C27527 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C188 +
            (C9186 * C189 + C27525 * C194) * C27347) *
               C9184 +
           ((C9186 * C601 + C27525 * C607) * C188 +
            (C9186 * C726 + C27525 * C730) * C27347) *
               C9185) *
              C27527 * C27321 * C75 -
          (((C9186 * C725 + C27525 * C729) * C27347 +
            (C9186 * C599 + C27525 * C603) * C188) *
               C9185 +
           ((C9186 * C190 + C27525 * C195) * C27347 +
            (C9186 * C90 + C27525 * C95) * C188) *
               C9184) *
              C27527 * C27321 * C76 +
          (((C9186 * C91 + C27525 * C98) * C188 +
            (C9186 * C191 + C27525 * C196) * C27347) *
               C9184 +
           ((C9186 * C600 + C27525 * C604) * C188 +
            (C9186 * C727 + C27525 * C731) * C27347) *
               C9185) *
              C27527 * C27321 * C77 -
          (((C9186 * C728 + C27525 * C732) * C27347 +
            (C9186 * C602 + C27525 * C609) * C188) *
               C9185 +
           ((C9186 * C192 + C27525 * C197) * C27347 +
            (C9186 * C92 + C27525 * C100) * C188) *
               C9184) *
              C27527 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C1779 -
           ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
               C1780 +
           ((C10608 + C10614) * C9184 +
            ((C9186 * C2316 + C27525 * C2320) * C188 +
             (C9186 * C2400 + C27525 * C2402) * C27347) *
                C9185) *
               C27527 * C1781) *
              C27481 +
          (((C9648 + C9658) * C9184 + (C10609 + C10615) * C9185) * C27527 *
               C1780 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C1779 -
           (((C9186 * C2399 + C27525 * C2401) * C27347 +
             (C9186 * C2315 + C27525 * C2319) * C188) *
                C9185 +
            (C10615 + C10609) * C9184) *
               C27527 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C85 +
          (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C75 -
          (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C86 -
          (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C76 +
          (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C87 +
          (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C77 -
          (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C88 -
          (C9290 * C610 + C9185 * C790 + C9289 * C101 + C9184 * C242) * C78) *
         C27527 * C27525 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C26163 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C27481 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C26156 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) *
               C27283) *
              C27527 * C27525 * C27347 * C1779 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C26156 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27481 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C26163) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C1780 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C26163 +
           (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
               C27481 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C26156 -
           (C9290 * C2317 + C9185 * C2439 + C9289 * C1790 + C9184 * C1965) *
               C27283) *
              C27527 * C27525 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27321) *
              C27527 * C27525 * C75 -
          ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
               C27321 +
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
              C27527 * C27525 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C143 +
           (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
               C27321) *
              C27527 * C27525 * C77 -
          ((C9290 * C670 + C9185 * C856 + C9289 * C147 + C9184 * C299) *
               C27321 +
           (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C143) *
              C27527 * C27525 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1846 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C1779 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C1847 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C1780 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1848 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C1781) *
              C27527 * C27525 * C27481 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C1847 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C1779 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C1846) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C1780 -
           (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
               C1848 -
           (C9290 * C2361 + C9185 * C2476 + C9289 * C1850 + C9184 * C2024) *
               C1781) *
              C27527 * C27525 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27347) *
              C27527 * C27525 * C27321 * C75 -
          ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
               C27347 +
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
              C27527 * C27525 * C27321 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C188 +
           (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
               C27347) *
              C27527 * C27525 * C27321 * C77 -
          ((C9290 * C728 + C9185 * C924 + C9289 * C192 + C9184 * C353) *
               C27347 +
           (C9290 * C602 + C9185 * C786 + C9289 * C92 + C9184 * C237) * C188) *
              C27527 * C27525 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C1779 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C1780 +
           ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C188 +
            (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
                C27347) *
               C27527 * C27525 * C1781) *
              C27481 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C1780 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C1779 -
           ((C9290 * C2399 + C9185 * C2511 + C9289 * C1906 + C9184 * C2086) *
                C27347 +
            (C9290 * C2315 + C9185 * C2437 + C9289 * C1785 + C9184 * C1962) *
                C188) *
               C27527 * C27525 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C85 +
           (C404 * C96 + C27527 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C27525 * C9184 +
          ((C404 * C601 + C27527 * C986) * C85 +
           (C404 * C606 + C27527 * C989) * C75 - C1002 * C86 - C1003 * C76 +
           C1004 * C87 + C1005 * C77 - (C404 * C602 + C27527 * C988) * C88 -
           (C404 * C610 + C27527 * C992) * C78) *
              C27525 * C9185) *
         C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C26163 +
            (C404 * C96 + C27527 * C410) * C27481 - C428 * C26156 -
            C429 * C27283) *
               C27525 * C9184 +
           (C10816 + C10817 - C10818 - C10819) * C27525 * C9185) *
              C27347 * C1779 +
          ((C10818 - (C10817 + C10816) + C10819) * C27525 * C9184 +
           (C10820 - (C10828 + C10829) + C10825) * C27525 * C9185) *
              C27347 * C1780 +
          ((C10829 + C10828 - C10820 - C10825) * C27525 * C9184 +
           ((C404 * C2316 + C27527 * C2548) * C26163 +
            (C404 * C2318 + C27527 * C2550) * C27481 -
            (C404 * C2315 + C27527 * C2547) * C26156 -
            (C404 * C2317 + C27527 * C2549) * C27283) *
               C27525 * C9185) *
              C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C143 +
            (C404 * C144 + C27527 * C467) * C27321) *
               C27525 * C9184 +
           ((C404 * C601 + C27527 * C986) * C143 +
            (C404 * C668 + C27527 * C1055) * C27321) *
               C27525 * C9185) *
              C75 -
          ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
           (C485 + C473) * C27525 * C9184) *
              C76 +
          ((C478 + C486) * C27525 * C9184 +
           (C1004 * C143 + C1071 * C27321) * C27525 * C9185) *
              C77 -
          (((C404 * C670 + C27527 * C1058) * C27321 +
            (C404 * C602 + C27527 * C988) * C143) *
               C27525 * C9185 +
           (C487 + C479) * C27525 * C9184) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 - C9868 * C1847 -
            C9924 * C1780 + C10827 * C1848 + C10882 * C1781) *
               C27525 * C9184 +
           (C9868 * C1846 + C9924 * C1779 - C10827 * C1847 - C10882 * C1780 +
            (C404 * C2316 + C27527 * C2548) * C1848 +
            (C404 * C2362 + C27527 * C2585) * C1781) *
               C27525 * C9185) *
              C27481 +
          ((C2211 - (C2210 + C2209) + C2212 - C2213 - C2217) * C27525 * C9184 +
           (C2154 * C1847 - (C1070 * C1779 + C1002 * C1846) + C2216 * C1780 -
            (C404 * C2315 + C27527 * C2547) * C1848 -
            (C404 * C2361 + C27527 * C2586) * C1781) *
               C27525 * C9185) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C27525 * C9184 +
           ((C404 * C601 + C27527 * C986) * C188 +
            (C404 * C726 + C27527 * C1124) * C27347) *
               C27525 * C9185) *
              C27321 * C75 -
          ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
              C27321 * C76 +
          ((C532 + C540) * C27525 * C9184 + (C1131 + C1137) * C27525 * C9185) *
              C27321 * C77 -
          (((C404 * C728 + C27527 * C1126) * C27347 +
            (C404 * C602 + C27527 * C988) * C188) *
               C27525 * C9185 +
           (C541 + C533) * C27525 * C9184) *
              C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C1779 -
           ((C10937 + C10935) * C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C1780 +
           ((C10935 + C10937) * C27525 * C9184 +
            ((C404 * C2316 + C27527 * C2548) * C188 +
             (C404 * C2400 + C27527 * C2622) * C27347) *
                C27525 * C9185) *
               C1781) *
              C27481 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C1780 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C1779 -
           (((C404 * C2399 + C27527 * C2621) * C27347 +
             (C404 * C2315 + C27527 * C2547) * C188) *
                C27525 * C9185 +
            (C2275 + C2271) * C27525 * C9184) *
               C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C596 +
                      (C9186 * C96 + C27525 * C104) * C591 -
                      (C9186 * C90 + C27525 * C95) * C597 -
                      (C9186 * C97 + C27525 * C105) * C592 +
                      (C9186 * C91 + C27525 * C98) * C598 +
                      (C9186 * C99 + C27525 * C106) * C593) *
                         C9184 +
                     (C9530 + C9531 - C9532 - C9533 + C9534 + C9535) * C9185) *
                        C27527 * C27347 * C27491 +
                    ((C9532 - (C9531 + C9530) + C9533 - C9534 - C9535) * C9184 +
                     ((C9186 * C1785 + C27525 * C1788) * C597 -
                      ((C9186 * C1789 + C27525 * C1793) * C591 +
                       (C9186 * C1784 + C27525 * C1787) * C596) +
                      (C9186 * C1790 + C27525 * C1794) * C592 -
                      (C9186 * C1786 + C27525 * C1791) * C598 -
                      (C9186 * C1792 + C27525 * C1795) * C593) *
                         C9185) *
                        C27527 * C27347 * C27335)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C2314 +
                      (C9186 * C96 + C27525 * C104) * C27278) *
                         C9184 +
                     (C10976 + C10977) * C9185) *
                        C27527 * C27347 * C2310 -
                    ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                        C27527 * C27347 * C2311 +
                    ((C10979 + C10978) * C9184 + (C10986 + C10987) * C9185) *
                        C27527 * C27347 * C2312 -
                    (((C9186 * C10972 + C27525 * C10974) * C27278 +
                      (C9186 * C10971 + C27525 * C10973) * C2314) *
                         C9185 +
                     (C10987 + C10986) * C9184) *
                        C27527 * C27347 * C2313)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[28] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C665 +
                      (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
                      C9592 * C27335) *
                         C9184 +
                     (C9524 * C665 + C9592 * C27491 -
                      (C9186 * C1784 + C27525 * C1787) * C666 -
                      (C9186 * C1849 + C27525 * C1852) * C27335) *
                         C9185) *
                        C27527 * C591 +
                    ((C9526 * C666 -
                      ((C9186 * C145 + C27525 * C150) * C27491 +
                       (C9186 * C90 + C27525 * C95) * C665) +
                      C9593 * C27335) *
                         C9184 +
                     ((C9186 * C1785 + C27525 * C1788) * C666 -
                      (C9593 * C27491 + C9526 * C665) +
                      (C9186 * C1850 + C27525 * C1853) * C27335) *
                         C9185) *
                        C27527 * C592 +
                    (((C9186 * C91 + C27525 * C98) * C665 +
                      (C9186 * C146 + C27525 * C151) * C27491 - C9528 * C666 -
                      C9594 * C27335) *
                         C9184 +
                     (C9528 * C665 + C9594 * C27491 -
                      (C9186 * C1786 + C27525 * C1791) * C666 -
                      (C9186 * C1851 + C27525 * C1854) * C27335) *
                         C9185) *
                        C27527 * C593) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C2357 +
                     (C9186 * C144 + C27525 * C149) * C2310 - C9524 * C2358 -
                     C9592 * C2311 + C10494 * C2359 + C10554 * C2312 -
                     C10984 * C2360 - C11026 * C2313) *
                        C9184 +
                    (C9524 * C2357 + C9592 * C2310 - C10494 * C2358 -
                     C10554 * C2311 + C10984 * C2359 + C11026 * C2312 -
                     (C9186 * C10971 + C27525 * C10973) * C2360 -
                     (C9186 * C11021 + C27525 * C11022) * C2313) *
                        C9185) *
                   C27527 * C27278 * C27347) /
                      (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C9184 +
            (C9645 + C9657) * C9185) *
               C27527 * C27491 -
           (((C9186 * C1905 + C27525 * C1908) * C27347 +
             (C9186 * C1784 + C27525 * C1787) * C188) *
                C9185 +
            (C9657 + C9645) * C9184) *
               C27527 * C27335) *
              C591 +
          (((C9648 + C9658) * C9184 +
            ((C9186 * C1785 + C27525 * C1788) * C188 +
             (C9186 * C1906 + C27525 * C1909) * C27347) *
                C9185) *
               C27527 * C27335 -
           ((C9658 + C9648) * C9185 + ((C9186 * C190 + C27525 * C195) * C27347 +
                                       (C9186 * C90 + C27525 * C95) * C188) *
                                          C9184) *
               C27527 * C27491) *
              C592 +
          ((((C9186 * C91 + C27525 * C98) * C188 +
             (C9186 * C191 + C27525 * C196) * C27347) *
                C9184 +
            (C9651 + C9659) * C9185) *
               C27527 * C27491 -
           (((C9186 * C1907 + C27525 * C1910) * C27347 +
             (C9186 * C1786 + C27525 * C1791) * C188) *
                C9185 +
            (C9659 + C9651) * C9184) *
               C27527 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C188 +
            (C9186 * C189 + C27525 * C194) * C27347) *
               C9184 +
           (C9645 + C9657) * C9185) *
              C27527 * C2310 -
          ((C10614 + C10608) * C9185 + (C9657 + C9645) * C9184) * C27527 *
              C2311 +
          ((C10608 + C10614) * C9184 + (C11063 + C11067) * C9185) * C27527 *
              C2312 -
          (((C9186 * C11060 + C27525 * C11061) * C27347 +
            (C9186 * C10971 + C27525 * C10973) * C188) *
               C9185 +
           (C11067 + C11063) * C9184) *
              C27527 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C591 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C592 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C598 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C593) *
              C27527 * C27525 * C27347 * C27491 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C597 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C591 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C596) +
           (C9289 * C605 + C9184 * C788 + C9290 * C1790 + C9185 * C1965) *
               C592 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C598 -
           (C9290 * C1792 + C9185 * C1966 + C9289 * C608 + C9184 * C789) *
               C593) *
              C27527 * C27525 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
               C27278) *
              C27527 * C27525 * C27347 * C2310 -
          ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
               C27278 +
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C2314) *
              C27527 * C27525 * C27347 * C2311 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C2314 +
           (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
               C27278) *
              C27527 * C27525 * C27347 * C2312 -
          ((C9290 * C10972 + C9185 * C11102 + C9289 * C2318 + C9184 * C2440) *
               C27278 +
           (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
               C2314) *
              C27527 * C27525 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C665 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
               C27491 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C666 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C27335) *
              C27527 * C27525 * C591 +
          ((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
               C666 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27491 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C665) +
           (C9289 * C667 + C9184 * C854 + C9290 * C1850 + C9185 * C2024) *
               C27335) *
              C27527 * C27525 * C592 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C665 +
           (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
               C27491 -
           (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
               C666 -
           (C9290 * C1851 + C9185 * C2025 + C9289 * C669 + C9184 * C855) *
               C27335) *
              C27527 * C27525 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2357 +
          (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C2310 -
          (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
              C2358 -
          (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
              C2311 +
          (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
              C2359 +
          (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
              C2312 -
          (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
              C2360 -
          (C9290 * C11021 + C9185 * C11137 + C9289 * C2362 + C9184 * C2475) *
              C2313) *
         C27527 * C27525 * C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
                C27347) *
               C27527 * C27525 * C27491 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27347 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C188) *
               C27527 * C27525 * C27335) *
              C591 +
          (((C9289 * C599 + C9184 * C783 + C9290 * C1785 + C9185 * C1962) *
                C188 +
            (C9289 * C725 + C9184 * C921 + C9290 * C1906 + C9185 * C2086) *
                C27347) *
               C27527 * C27525 * C27335 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27347 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C188) *
               C27527 * C27525 * C27491) *
              C592 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
                C27347) *
               C27527 * C27525 * C27491 -
           ((C9290 * C1907 + C9185 * C2087 + C9289 * C727 + C9184 * C923) *
                C27347 +
            (C9290 * C1786 + C9185 * C1963 + C9289 * C600 + C9184 * C785) *
                C188) *
               C27527 * C27525 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27347) *
              C27527 * C27525 * C2310 -
          ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
               C27347 +
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C188) *
              C27527 * C27525 * C2311 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C188 +
           (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
               C27347) *
              C27527 * C27525 * C2312 -
          ((C9290 * C11060 + C9185 * C11172 + C9289 * C2400 + C9184 * C2512) *
               C27347 +
           (C9290 * C10971 + C9185 * C11101 + C9289 * C2316 + C9184 * C2438) *
               C188) *
              C27527 * C27525 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C27525 * C9184 +
           (C9870 + C9871 - C9864 - C9865 + C9866 + C9867) * C27525 * C9185) *
              C27347 * C27491 +
          ((C9864 - (C9871 + C9870) + C9865 - C9866 - C9867) * C27525 * C9184 +
           (C2154 * C597 -
            ((C404 * C1789 + C27527 * C2146) * C591 +
             (C404 * C1784 + C27527 * C2143) * C596) +
            C2155 * C592 - (C404 * C1786 + C27527 * C2145) * C598 -
            (C404 * C1792 + C27527 * C2148) * C593) *
               C27525 * C9185) *
              C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C2314 +
            (C404 * C96 + C27527 * C410) * C27278) *
               C27525 * C9184 +
           (C11210 + C11211) * C27525 * C9185) *
              C27347 * C2310 -
          ((C11212 + C11213) * C27525 * C9185 +
           (C11211 + C11210) * C27525 * C9184) *
              C27347 * C2311 +
          ((C11213 + C11212) * C27525 * C9184 +
           (C11220 + C11221) * C27525 * C9185) *
              C27347 * C2312 -
          (((C404 * C10972 + C27527 * C11208) * C27278 +
            (C404 * C10971 + C27527 * C11207) * C2314) *
               C27525 * C9185 +
           (C11221 + C11220) * C27525 * C9184) *
              C27347 * C2313)) /
            (p * q * std::sqrt(p + q));
    d2eezy[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C665 +
            (C404 * C144 + C27527 * C467) * C27491 - C9868 * C666 -
            C9924 * C27335) *
               C27525 * C9184 +
           (C9868 * C665 + C9924 * C27491 -
            (C404 * C1784 + C27527 * C2143) * C666 -
            (C404 * C1849 + C27527 * C2205) * C27335) *
               C27525 * C9185) *
              C591 +
          ((C1062 - (C1061 + C1060) + C1072) * C27525 * C9184 +
           (C2154 * C666 - (C1070 * C27491 + C1002 * C665) + C2216 * C27335) *
               C27525 * C9185) *
              C592 +
          ((C1067 + C1066 - C1065 - C1073) * C27525 * C9184 +
           (C1004 * C665 + C1071 * C27491 -
            (C404 * C1786 + C27527 * C2145) * C666 -
            (C404 * C1851 + C27527 * C2207) * C27335) *
               C27525 * C9185) *
              C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27527 * C405) * C2357 +
           (C404 * C144 + C27527 * C467) * C2310 - C9868 * C2358 -
           C9924 * C2311 + C10827 * C2359 + C10882 * C2312 - C11218 * C2360 -
           C11259 * C2313) *
              C27525 * C9184 +
          (C9868 * C2357 + C9924 * C2310 - C10827 * C2358 - C10882 * C2311 +
           C11218 * C2359 + C11259 * C2312 -
           (C404 * C10971 + C27527 * C11207) * C2360 -
           (C404 * C11021 + C27527 * C11255) * C2313) *
              C27525 * C9185) *
         C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C188 +
             (C404 * C189 + C27527 * C521) * C27347) *
                C27525 * C9184 +
            (C9975 + C9979) * C27525 * C9185) *
               C27491 -
           (((C404 * C1905 + C27527 * C2267) * C27347 +
             (C404 * C1784 + C27527 * C2143) * C188) *
                C27525 * C9185 +
            (C9979 + C9975) * C27525 * C9184) *
               C27335) *
              C591 +
          (((C1130 + C1136) * C27525 * C9184 +
            (C2271 + C2275) * C27525 * C9185) *
               C27335 -
           ((C1136 + C1130) * C27525 * C9185 + (C539 + C527) * C27525 * C9184) *
               C27491) *
              C592 +
          (((C532 + C540) * C27525 * C9184 + (C1131 + C1137) * C27525 * C9185) *
               C27491 -
           (((C404 * C1907 + C27527 * C2269) * C27347 +
             (C404 * C1786 + C27527 * C2145) * C188) *
                C27525 * C9185 +
            (C1137 + C1131) * C27525 * C9184) *
               C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C188 +
            (C404 * C189 + C27527 * C521) * C27347) *
               C27525 * C9184 +
           (C9975 + C9979) * C27525 * C9185) *
              C2310 -
          ((C10937 + C10935) * C27525 * C9185 +
           (C9979 + C9975) * C27525 * C9184) *
              C2311 +
          ((C10935 + C10937) * C27525 * C9184 +
           (C11295 + C11299) * C27525 * C9185) *
              C2312 -
          (((C404 * C11060 + C27527 * C11293) * C27347 +
            (C404 * C10971 + C27527 * C11207) * C188) *
               C27525 * C9185 +
           (C11299 + C11295) * C27525 * C9184) *
              C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C596 +
                      (C9186 * C96 + C27525 * C104) * C591 -
                      (C9186 * C90 + C27525 * C95) * C597 -
                      (C9186 * C97 + C27525 * C105) * C592 +
                      (C9186 * C91 + C27525 * C98) * C598 +
                      (C9186 * C99 + C27525 * C106) * C593) *
                         C9184 +
                     (C9530 + C9531 - C9532 - C9533 + C9534 + C9535) * C9185) *
                        C27527 * C27492 +
                    (((C9186 * C1189 + C27525 * C1193) * C597 -
                      ((C9186 * C1196 + C27525 * C1202) * C591 +
                       (C9186 * C1191 + C27525 * C1197) * C596) +
                      (C9186 * C1195 + C27525 * C1201) * C592 -
                      (C9186 * C1190 + C27525 * C1194) * C598 -
                      (C9186 * C1198 + C27525 * C1203) * C593) *
                         C9184 +
                     ((C9186 * C2674 + C27525 * C2678) * C597 -
                      ((C9186 * C2679 + C27525 * C2685) * C591 +
                       (C9186 * C2673 + C27525 * C2677) * C596) +
                      (C9186 * C2680 + C27525 * C2686) * C592 -
                      (C9186 * C5523 + C27525 * C5524) * C598 -
                      (C9186 * C5525 + C27525 * C5526) * C593) *
                         C9185) *
                        C27527 * C27359) *
                   C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C9184 +
                      (C10976 + C10977) * C9185) *
                         C27527 * C27492 -
                     ((C11366 + C11367) * C9185 +
                      ((C9186 * C1196 + C27525 * C1202) * C27278 +
                       (C9186 * C1191 + C27525 * C1197) * C2314) *
                          C9184) *
                         C27527 * C27359) *
                        C1779 +
                    (((C11367 + C11366) * C9184 + (C11368 + C11369) * C9185) *
                         C27527 * C27359 -
                     ((C10978 + C10979) * C9185 + (C10977 + C10976) * C9184) *
                         C27527 * C27492) *
                        C1780 +
                    (((C10979 + C10978) * C9184 + (C10986 + C10987) * C9185) *
                         C27527 * C27492 -
                     (((C9186 * C11350 + C27525 * C11352) * C27278 +
                       (C9186 * C11349 + C27525 * C11351) * C2314) *
                          C9185 +
                      (C11369 + C11368) * C9184) *
                         C27527 * C27359) *
                        C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C143 +
             (C9186 * C144 + C27525 * C149) * C27321) *
                C9184 +
            (C9524 * C143 + C9592 * C27321) * C9185) *
               C27527 * C591 -
           ((C9593 * C27321 + C9526 * C143) * C9185 +
            ((C9186 * C145 + C27525 * C150) * C27321 +
             (C9186 * C90 + C27525 * C95) * C143) *
                C9184) *
               C27527 * C592 +
           (((C9186 * C91 + C27525 * C98) * C143 +
             (C9186 * C146 + C27525 * C151) * C27321) *
                C9184 +
            (C9528 * C143 + C9594 * C27321) * C9185) *
               C27527 * C593) *
              C27492 +
          ((((C9186 * C1189 + C27525 * C1193) * C143 +
             (C9186 * C1255 + C27525 * C1259) * C27321) *
                C9184 +
            ((C9186 * C2674 + C27525 * C2678) * C143 +
             (C9186 * C2740 + C27525 * C2744) * C27321) *
                C9185) *
               C27527 * C592 -
           (((C9186 * C2739 + C27525 * C2743) * C27321 +
             (C9186 * C2673 + C27525 * C2677) * C143) *
                C9185 +
            ((C9186 * C1257 + C27525 * C1261) * C27321 +
             (C9186 * C1191 + C27525 * C1197) * C143) *
                C9184) *
               C27527 * C591 -
           (((C9186 * C5593 + C27525 * C5594) * C27321 +
             (C9186 * C5523 + C27525 * C5524) * C143) *
                C9185 +
            ((C9186 * C1256 + C27525 * C1260) * C27321 +
             (C9186 * C1190 + C27525 * C1194) * C143) *
                C9184) *
               C27527 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C9184 +
           (C9524 * C1846 + C9592 * C1779 - C10494 * C1847 - C10554 * C1780 +
            C10984 * C1848 + C11026 * C1781) *
               C9185) *
              C27527 * C27278 * C27492 +
          ((C11363 * C1847 -
            ((C9186 * C1257 + C27525 * C1261) * C1779 +
             (C9186 * C1191 + C27525 * C1197) * C1846) +
            C11426 * C1780 - C11364 * C1848 - C11427 * C1781) *
               C9184 +
           (C11364 * C1847 - (C11426 * C1779 + C11363 * C1846) +
            C11427 * C1780 - (C9186 * C11349 + C27525 * C11351) * C1848 -
            (C9186 * C11419 + C27525 * C11420) * C1781) *
               C9185) *
              C27527 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C1313 +
                      (C9186 * C189 + C27525 * C194) * C27492 -
                      (C9186 * C1191 + C27525 * C1197) * C1314 -
                      (C9186 * C1316 + C27525 * C1320) * C27359) *
                         C9184 +
                     (C9524 * C1313 + C9654 * C27492 -
                      (C9186 * C2673 + C27525 * C2677) * C1314 -
                      (C9186 * C2797 + C27525 * C2801) * C27359) *
                         C9185) *
                        C27527 * C27321 * C591 +
                    (((C9186 * C1189 + C27525 * C1193) * C1314 -
                      ((C9186 * C190 + C27525 * C195) * C27492 +
                       (C9186 * C90 + C27525 * C95) * C1313) +
                      (C9186 * C1315 + C27525 * C1319) * C27359) *
                         C9184 +
                     ((C9186 * C2674 + C27525 * C2678) * C1314 -
                      (C9655 * C27492 + C9526 * C1313) +
                      (C9186 * C2798 + C27525 * C2802) * C27359) *
                         C9185) *
                        C27527 * C27321 * C592 +
                    (((C9186 * C91 + C27525 * C98) * C1313 +
                      (C9186 * C191 + C27525 * C196) * C27492 -
                      (C9186 * C1190 + C27525 * C1194) * C1314 -
                      (C9186 * C1317 + C27525 * C1321) * C27359) *
                         C9184 +
                     (C9528 * C1313 + C9656 * C27492 -
                      (C9186 * C5523 + C27525 * C5524) * C1314 -
                      (C9186 * C5661 + C27525 * C5662) * C27359) *
                         C9185) *
                        C27527 * C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C1313 +
                      (C9186 * C189 + C27525 * C194) * C27492 -
                      (C9186 * C1191 + C27525 * C1197) * C1314 -
                      (C9186 * C1316 + C27525 * C1320) * C27359) *
                         C9184 +
                     (C11480 + C11481 - C11482 - C11492) * C9185) *
                        C27527 * C1779 +
                    ((C11482 - (C11481 + C11480) + C11492) * C9184 +
                     (C11485 - (C11486 + C11487) + C11493) * C9185) *
                        C27527 * C1780 +
                    ((C11487 + C11486 - C11485 - C11493) * C9184 +
                     (C10984 * C1313 + C11066 * C27492 -
                      (C9186 * C11349 + C27525 * C11351) * C1314 -
                      (C9186 * C11477 + C27525 * C11478) * C27359) *
                         C9185) *
                        C27527 * C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) * C591 -
           (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C605 + C9185 * C788 + C9289 * C97 + C9184 * C240) * C592 +
           (C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C598 +
           (C9289 * C99 + C9184 * C241 + C9290 * C608 + C9185 * C789) * C593) *
              C27527 * C27525 * C27492 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C597 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C591 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C596) +
           (C9289 * C1195 + C9184 * C1378 + C9290 * C2680 + C9185 * C2860) *
               C592 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C598 -
           (C9290 * C5525 + C9185 * C5730 + C9289 * C1198 + C9184 * C1379) *
               C593) *
              C27527 * C27525 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C2314 +
            (C9289 * C96 + C9184 * C239 + C9290 * C606 + C9185 * C787) *
                C27278) *
               C27527 * C27525 * C27492 -
           ((C9290 * C2679 + C9185 * C2859 + C9289 * C1196 + C9184 * C1377) *
                C27278 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C2314) *
               C27527 * C27525 * C27359) *
              C1779 +
          (((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
                C2314 +
            (C9289 * C2679 + C9184 * C2859 + C9290 * C2682 + C9185 * C2862) *
                C27278) *
               C27527 * C27525 * C27359 -
           ((C9290 * C1789 + C9185 * C1964 + C9289 * C606 + C9184 * C787) *
                C27278 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C2314) *
               C27527 * C27525 * C27492) *
              C1780 +
          (((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
                C2314 +
            (C9289 * C1789 + C9184 * C1964 + C9290 * C2318 + C9185 * C2440) *
                C27278) *
               C27527 * C27525 * C27492 -
           ((C9290 * C11350 + C9185 * C11544 + C9289 * C2682 + C9184 * C2862) *
                C27278 +
            (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
                C2314) *
               C27527 * C27525 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) *
                C27321) *
               C27527 * C27525 * C591 -
           ((C9290 * C667 + C9185 * C854 + C9289 * C145 + C9184 * C297) *
                C27321 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) * C143) *
               C27527 * C27525 * C592 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C669 + C9185 * C855) *
                C27321) *
               C27527 * C27525 * C593) *
              C27492 +
          (((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
                C143 +
            (C9289 * C1255 + C9184 * C1443 + C9290 * C2740 + C9185 * C2915) *
                C27321) *
               C27527 * C27525 * C592 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C27321 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C143) *
               C27527 * C27525 * C591 -
           ((C9290 * C5593 + C9185 * C5803 + C9289 * C1256 + C9184 * C1444) *
                C27321 +
            (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
                C143) *
               C27527 * C27525 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1846 +
           (C9289 * C144 + C9184 * C296 + C9290 * C668 + C9185 * C853) * C1779 -
           (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
               C1847 -
           (C9290 * C1849 + C9185 * C2023 + C9289 * C668 + C9184 * C853) *
               C1780 +
           (C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1848 +
           (C9289 * C1849 + C9184 * C2023 + C9290 * C2362 + C9185 * C2475) *
               C1781) *
              C27527 * C27525 * C27278 * C27492 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C1847 -
           ((C9290 * C2739 + C9185 * C2913 + C9289 * C1257 + C9184 * C1445) *
                C1779 +
            (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
                C1846) +
           (C9289 * C2739 + C9184 * C2913 + C9290 * C2742 + C9185 * C2914) *
               C1780 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C1848 -
           (C9290 * C11419 + C9185 * C11595 + C9289 * C2742 + C9184 * C2914) *
               C1781) *
              C27527 * C27525 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1313 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27492 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C1314 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C27321 * C591 +
          ((C9289 * C1189 + C9184 * C1373 + C9290 * C2674 + C9185 * C2856) *
               C1314 -
           ((C9290 * C725 + C9185 * C921 + C9289 * C190 + C9184 * C351) *
                C27492 +
            (C9290 * C599 + C9185 * C783 + C9289 * C90 + C9184 * C235) *
                C1313) +
           (C9289 * C1315 + C9184 * C1508 + C9290 * C2798 + C9185 * C2968) *
               C27359) *
              C27527 * C27525 * C27321 * C592 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C600 + C9185 * C785) * C1313 +
           (C9289 * C191 + C9184 * C352 + C9290 * C727 + C9185 * C923) *
               C27492 -
           (C9290 * C5523 + C9185 * C5729 + C9289 * C1190 + C9184 * C1375) *
               C1314 -
           (C9290 * C5661 + C9185 * C5877 + C9289 * C1317 + C9184 * C1509) *
               C27359) *
              C27527 * C27525 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C601 + C9185 * C784) * C1313 +
           (C9289 * C189 + C9184 * C350 + C9290 * C726 + C9185 * C922) *
               C27492 -
           (C9290 * C2673 + C9185 * C2855 + C9289 * C1191 + C9184 * C1374) *
               C1314 -
           (C9290 * C2797 + C9185 * C2967 + C9289 * C1316 + C9184 * C1507) *
               C27359) *
              C27527 * C27525 * C1779 +
          ((C9289 * C2673 + C9184 * C2855 + C9290 * C2676 + C9185 * C2858) *
               C1314 -
           ((C9290 * C1905 + C9185 * C2085 + C9289 * C726 + C9184 * C922) *
                C27492 +
            (C9290 * C1784 + C9185 * C1961 + C9289 * C601 + C9184 * C784) *
                C1313) +
           (C9289 * C2797 + C9184 * C2967 + C9290 * C2800 + C9185 * C2969) *
               C27359) *
              C27527 * C27525 * C1780 +
          ((C9289 * C1784 + C9184 * C1961 + C9290 * C2316 + C9185 * C2438) *
               C1313 +
           (C9289 * C1905 + C9184 * C2085 + C9290 * C2400 + C9185 * C2512) *
               C27492 -
           (C9290 * C11349 + C9185 * C11543 + C9289 * C2676 + C9184 * C2858) *
               C1314 -
           (C9290 * C11477 + C9185 * C11646 + C9289 * C2800 + C9184 * C2969) *
               C27359) *
              C27527 * C27525 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C596 +
            (C404 * C96 + C27527 * C410) * C591 - C428 * C597 - C429 * C592 +
            C430 * C598 + C431 * C593) *
               C27525 * C9184 +
           (C9870 + C9871 - C9864 - C9865 + C9866 + C9867) * C27525 * C9185) *
              C27492 +
          ((C1592 * C597 -
            ((C404 * C1196 + C27527 * C1579) * C591 +
             (C404 * C1191 + C27527 * C1576) * C596) +
            C1593 * C592 - C1594 * C598 - C1595 * C593) *
               C27525 * C9184 +
           (C5958 * C597 -
            ((C404 * C2679 + C27527 * C3025) * C591 +
             (C404 * C2673 + C27527 * C3021) * C596) +
            C5959 * C592 - (C404 * C5523 + C27527 * C5951) * C598 -
            (C404 * C5525 + C27527 * C5952) * C593) *
               C27525 * C9185) *
              C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C2314 +
             (C404 * C96 + C27527 * C410) * C27278) *
                C27525 * C9184 +
            (C11210 + C11211) * C27525 * C9185) *
               C27492 -
           ((C11712 + C11713) * C27525 * C9185 +
            ((C404 * C1196 + C27527 * C1579) * C27278 +
             (C404 * C1191 + C27527 * C1576) * C2314) *
                C27525 * C9184) *
               C27359) *
              C1779 +
          (((C11713 + C11712) * C27525 * C9184 +
            (C11714 + C11715) * C27525 * C9185) *
               C27359 -
           ((C11212 + C11213) * C27525 * C9185 +
            (C11211 + C11210) * C27525 * C9184) *
               C27492) *
              C1780 +
          (((C11213 + C11212) * C27525 * C9184 +
            (C11220 + C11221) * C27525 * C9185) *
               C27492 -
           (((C404 * C11350 + C27527 * C11698) * C27278 +
             (C404 * C11349 + C27527 * C11697) * C2314) *
                C27525 * C9185 +
            (C11715 + C11714) * C27525 * C9184) *
               C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q));
    d2eezy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27527 * C405) * C143 +
             (C404 * C144 + C27527 * C467) * C27321) *
                C27525 * C9184 +
            (C9868 * C143 + C9924 * C27321) * C27525 * C9185) *
               C591 -
           ((C1070 * C27321 + C1002 * C143) * C27525 * C9185 +
            (C485 + C473) * C27525 * C9184) *
               C592 +
           ((C478 + C486) * C27525 * C9184 +
            (C1004 * C143 + C1071 * C27321) * C27525 * C9185) *
               C593) *
              C27492 +
          (((C1650 + C1658) * C27525 * C9184 +
            (C5958 * C143 + C6032 * C27321) * C27525 * C9185) *
               C592 -
           (((C404 * C2739 + C27527 * C3079) * C27321 +
             (C404 * C2673 + C27527 * C3021) * C143) *
                C27525 * C9185 +
            ((C404 * C1257 + C27527 * C1647) * C27321 +
             (C404 * C1191 + C27527 * C1576) * C143) *
                C27525 * C9184) *
               C591 -
           (((C404 * C5593 + C27527 * C6025) * C27321 +
             (C404 * C5523 + C27527 * C5951) * C143) *
                C27525 * C9185 +
            (C1659 + C1653) * C27525 * C9184) *
               C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27527 * C405) * C1846 +
            (C404 * C144 + C27527 * C467) * C1779 - C9868 * C1847 -
            C9924 * C1780 + C10827 * C1848 + C10882 * C1781) *
               C27525 * C9184 +
           (C9868 * C1846 + C9924 * C1779 - C10827 * C1847 - C10882 * C1780 +
            C11218 * C1848 + C11259 * C1781) *
               C27525 * C9185) *
              C27278 * C27492 +
          ((C11709 * C1847 -
            ((C404 * C1257 + C27527 * C1647) * C1779 +
             (C404 * C1191 + C27527 * C1576) * C1846) +
            C11771 * C1780 - C11710 * C1848 - C11772 * C1781) *
               C27525 * C9184 +
           (C11710 * C1847 - (C11771 * C1779 + C11709 * C1846) +
            C11772 * C1780 - (C404 * C11349 + C27527 * C11697) * C1848 -
            (C404 * C11419 + C27527 * C11765) * C1781) *
               C27525 * C9185) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eezz[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C27525 * C9184 +
                     (C9868 * C1313 + C9978 * C27492 -
                      (C404 * C2673 + C27527 * C3021) * C1314 -
                      (C404 * C2797 + C27527 * C3133) * C27359) *
                         C27525 * C9185) *
                        C27321 * C591 +
                    ((C1716 - (C1715 + C1714) + C1726) * C27525 * C9184 +
                     (C6101 - (C6102 + C6103) + C6107) * C27525 * C9185) *
                        C27321 * C592 +
                    ((C1721 + C1720 - C1719 - C1727) * C27525 * C9184 +
                     (C1004 * C1313 + C1135 * C27492 -
                      (C404 * C5523 + C27527 * C5951) * C1314 -
                      (C404 * C5661 + C27527 * C6099) * C27359) *
                         C27525 * C9185) *
                        C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27527 * C405) * C1313 +
                      (C404 * C189 + C27527 * C521) * C27492 -
                      (C404 * C1191 + C27527 * C1576) * C1314 -
                      (C404 * C1316 + C27527 * C1709) * C27359) *
                         C27525 * C9184 +
                     (C11824 + C11825 - C11826 - C11836) * C27525 * C9185) *
                        C1779 +
                    ((C11826 - (C11825 + C11824) + C11836) * C27525 * C9184 +
                     (C11829 - (C11830 + C11831) + C11837) * C27525 * C9185) *
                        C1780 +
                    ((C11831 + C11830 - C11829 - C11837) * C27525 * C9184 +
                     (C11218 * C1313 + C11298 * C27492 -
                      (C404 * C11349 + C27527 * C11697) * C1314 -
                      (C404 * C11477 + C27527 * C11822) * C27359) *
                         C27525 * C9185) *
                        C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4564 +
            (C9186 * C96 + C27525 * C104) * C27517 -
            (C9186 * C90 + C27525 * C95) * C4565 -
            (C9186 * C97 + C27525 * C105) * C27507 +
            (C9186 * C91 + C27525 * C98) * C4566 +
            (C9186 * C99 + C27525 * C106) * C4561) *
               C27526 * C17723 +
           (C18512 * C4564 + C18513 * C27517 - C18514 * C4565 -
            C18515 * C27507 + C18516 * C4566 + C18517 * C4561) *
               C27526 * C17724) *
              C27347 * C4562 +
          ((C13168 - (C13167 + C13166) + C13169 - C13170 - C13171) * C27526 *
               C17723 +
           (C14116 * C4565 - (C11362 * C27517 + C11363 * C4564) +
            C14117 * C27507 - (C9186 * C5523 + C27525 * C5524) * C4566 -
            (C9186 * C5525 + C27525 * C5526) * C4561) *
               C27526 * C17724) *
              C27347 * C27335)) /
        (p * q * std::sqrt(p + q));
    d2eexy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C4617 +
                      (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
                      C9592 * C27335) *
                         C27526 * C17723 +
                     (C18512 * C4617 + C18583 * C4562 - C11363 * C4618 -
                      C11426 * C27335) *
                         C27526 * C17724) *
                        C27517 +
                    ((C9526 * C4618 -
                      ((C9186 * C145 + C27525 * C150) * C4562 +
                       (C9186 * C90 + C27525 * C95) * C4617) +
                      C9593 * C27335) *
                         C27526 * C17723 +
                     (C14116 * C4618 - (C18584 * C4562 + C18514 * C4617) +
                      C14188 * C27335) *
                         C27526 * C17724) *
                        C27507 +
                    (((C9186 * C91 + C27525 * C98) * C4617 +
                      (C9186 * C146 + C27525 * C151) * C4562 - C9528 * C4618 -
                      C9594 * C27335) *
                         C27526 * C17723 +
                     (C18516 * C4617 + C18585 * C4562 -
                      (C9186 * C5523 + C27525 * C5524) * C4618 -
                      (C9186 * C5593 + C27525 * C5594) * C27335) *
                         C27526 * C17724) *
                        C4561) *
                   C27347) /
                  (p * q * std::sqrt(p + q));
    d2eexz[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C188 +
                       (C9186 * C189 + C27525 * C194) * C27347) *
                          C27526 * C17723 +
                      (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
                         C4562 -
                     ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
                      (C9657 + C9645) * C27526 * C17723) *
                         C27335) *
                        C27517 +
                    (((C9648 + C9658) * C27526 * C17723 +
                      (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
                         C27335 -
                     ((C18646 * C27347 + C18514 * C188) * C27526 * C17724 +
                      ((C9186 * C190 + C27525 * C195) * C27347 +
                       (C9186 * C90 + C27525 * C95) * C188) *
                          C27526 * C17723) *
                         C4562) *
                        C27507 +
                    ((((C9186 * C91 + C27525 * C98) * C188 +
                       (C9186 * C191 + C27525 * C196) * C27347) *
                          C27526 * C17723 +
                      (C18516 * C188 + C18647 * C27347) * C27526 * C17724) *
                         C4562 -
                     (((C9186 * C5661 + C27525 * C5662) * C27347 +
                       (C9186 * C5523 + C27525 * C5524) * C188) *
                          C27526 * C17724 +
                      (C9659 + C9651) * C27526 * C17723) *
                         C27335) *
                        C4561)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C4564 +
                      (C233 * C96 + C27526 * C239) * C27517 - C257 * C4565 -
                      C258 * C27507 + C259 * C4566 + C260 * C4561) *
                         C17723 +
                     (C18706 * C4564 + C18707 * C27517 - C1390 * C4565 -
                      C1391 * C27507 + C1392 * C4566 + C1393 * C4561) *
                         C17724) *
                        C27525 * C27347 * C4562 +
                    ((C800 * C4565 -
                      ((C233 * C606 + C27526 * C787) * C27517 +
                       (C233 * C601 + C27526 * C784) * C4564) +
                      C801 * C27507 - C802 * C4566 - C803 * C4561) *
                         C17723 +
                     (C5736 * C4565 - (C19943 * C27517 + C19942 * C4564) +
                      C5737 * C27507 - (C233 * C5523 + C27526 * C5729) * C4566 -
                      (C233 * C5525 + C27526 * C5730) * C4561) *
                         C17724) *
                        C27525 * C27347 * C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C4617 +
                      (C233 * C144 + C27526 * C296) * C4562 -
                      (C233 * C601 + C27526 * C784) * C4618 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C17723 +
                     (C18706 * C4617 + C18763 * C4562 - C19942 * C4618 -
                      C20008 * C27335) *
                         C17724) *
                        C27525 * C27517 +
                    ((C4772 - (C4771 + C4770) + C4773) * C17723 +
                     (C5805 - (C5806 + C5807) + C5811) * C17724) *
                        C27525 * C27507 +
                    ((C4776 + C4775 - C4774 - C4777) * C17723 +
                     (C1392 * C4617 + C1455 * C4562 -
                      (C233 * C5523 + C27526 * C5729) * C4618 -
                      (C233 * C5593 + C27526 * C5803) * C27335) *
                         C17724) *
                        C27525 * C4561) *
                   C27347) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            (C18706 * C188 + C18817 * C27347) * C17724) *
               C27525 * C4562 -
           ((C20066 * C27347 + C19942 * C188) * C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C27335) *
              C27517 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C27335 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C4562) *
              C27507 +
          (((C361 + C369) * C17723 + (C1392 * C188 + C1523 * C27347) * C17724) *
               C27525 * C4562 -
           (((C233 * C5661 + C27526 * C5877) * C27347 +
             (C233 * C5523 + C27526 * C5729) * C188) *
                C17724 +
            (C935 + C929) * C17723) *
               C27525 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C4564 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27517 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C4565 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27507 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C4566 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C4561) *
              C27525 * C27526 * C27347 * C4562 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C4565 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27517 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C4564) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C27507 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C4566 -
           (C17930 * C5525 + C17724 * C5952 + C17929 * C608 + C17723 * C991) *
               C4561) *
              C27525 * C27526 * C27347 * C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C4617 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C4562 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C4618 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27335) *
              C27525 * C27526 * C27517 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C4618 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C4562 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C4617) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C27335) *
              C27525 * C27526 * C27507 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C4617 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
               C4562 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C4618 -
           (C17930 * C5593 + C17724 * C6025 + C17929 * C669 + C17723 * C1057) *
               C27335) *
              C27525 * C27526 * C4561) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C4562 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C27335) *
              C27517 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C27335 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C4562) *
              C27507 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
                C27347) *
               C27525 * C27526 * C4562 -
           ((C17930 * C5661 + C17724 * C6099 + C17929 * C727 + C17723 * C1125) *
                C27347 +
            (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
                C188) *
               C27525 * C27526 * C27335) *
              C4561)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C5040 +
                      (C9186 * C96 + C27525 * C104) * C5035 -
                      (C9186 * C90 + C27525 * C95) * C5041 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C27526 * C17723 +
                     (C18512 * C5040 + C18513 * C5035 - C18514 * C5041 -
                      C18515 * C27283) *
                         C27526 * C17724) *
                        C27347 * C27520 +
                    ((C13630 - (C13629 + C13628) + C13631) * C27526 * C17723 +
                     (C14118 - (C14112 + C14113) + C14119) * C27526 * C17724) *
                        C27347 * C27512 +
                    ((C13634 + C13633 - C13632 - C13635) * C27526 * C17723 +
                     (C11364 * C5040 + C11365 * C5035 -
                      (C9186 * C2675 + C27525 * C2683) * C5041 -
                      (C9186 * C2681 + C27525 * C2687) * C27283) *
                         C27526 * C17724) *
                        C27347 * C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C5092 +
            (C9186 * C144 + C27525 * C149) * C27520 - C9524 * C5093 -
            C9592 * C27512 + C10494 * C5094 + C10554 * C5039) *
               C27526 * C17723 +
           (C18512 * C5092 + C18583 * C27520 - C11363 * C5093 -
            C11426 * C27512 + C11364 * C5094 + C11427 * C5039) *
               C27526 * C17724) *
              C5035 +
          ((C9526 * C5093 -
            ((C9186 * C145 + C27525 * C150) * C27520 +
             (C9186 * C90 + C27525 * C95) * C5092) +
            C9593 * C27512 - C10492 * C5094 - C10555 * C5039) *
               C27526 * C17723 +
           (C14116 * C5093 - (C18584 * C27520 + C18514 * C5092) +
            C14188 * C27512 - (C9186 * C2675 + C27525 * C2683) * C5094 -
            (C9186 * C2741 + C27525 * C2745) * C5039) *
               C27526 * C17724) *
              C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eexz[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C188 +
                       (C9186 * C189 + C27525 * C194) * C27347) *
                          C27526 * C17723 +
                      (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
                         C27520 -
                     ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
                      (C9657 + C9645) * C27526 * C17723) *
                         C27512 +
                     ((C10608 + C10614) * C27526 * C17723 +
                      (C11364 * C188 + C11491 * C27347) * C27526 * C17724) *
                         C5039) *
                        C5035 +
                    (((C9648 + C9658) * C27526 * C17723 +
                      (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
                         C27512 -
                     ((C18646 * C27347 + C18514 * C188) * C27526 * C17724 +
                      ((C9186 * C190 + C27525 * C195) * C27347 +
                       (C9186 * C90 + C27525 * C95) * C188) *
                          C27526 * C17723) *
                         C27520 -
                     (((C9186 * C2799 + C27525 * C2803) * C27347 +
                       (C9186 * C2675 + C27525 * C2683) * C188) *
                          C27526 * C17724 +
                      (C10615 + C10609) * C27526 * C17723) *
                         C5039) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5040 +
            (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
            C258 * C27283) *
               C17723 +
           (C18706 * C5040 + C18707 * C5035 - C1390 * C5041 - C1391 * C27283) *
               C17724) *
              C27525 * C27347 * C27520 +
          ((C800 * C5041 -
            ((C233 * C606 + C27526 * C787) * C5035 +
             (C233 * C601 + C27526 * C784) * C5040) +
            C801 * C27283) *
               C17723 +
           (C5736 * C5041 - (C19943 * C5035 + C19942 * C5040) +
            C5737 * C27283) *
               C17724) *
              C27525 * C27347 * C27512 +
          (((C233 * C1784 + C27526 * C1961) * C5040 +
            (C233 * C1789 + C27526 * C1964) * C5035 - C1972 * C5041 -
            C1973 * C27283) *
               C17723 +
           (C19944 * C5040 + C19945 * C5035 -
            (C233 * C2675 + C27526 * C2857) * C5041 -
            (C233 * C2681 + C27526 * C2861) * C27283) *
               C17724) *
              C27525 * C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5092 +
            (C233 * C144 + C27526 * C296) * C27520 -
            (C233 * C601 + C27526 * C784) * C5093 -
            (C233 * C668 + C27526 * C853) * C27512 +
            (C233 * C1784 + C27526 * C1961) * C5094 +
            (C233 * C1849 + C27526 * C2023) * C5039) *
               C17723 +
           (C18706 * C5092 + C18763 * C27520 - C19942 * C5093 -
            C20008 * C27512 + C19944 * C5094 + C20009 * C5039) *
               C17724) *
              C27525 * C5035 +
          ((C5248 - (C5247 + C5246) + C5249 - C5250 - C5251) * C17723 +
           (C5736 * C5093 - (C1454 * C27520 + C1390 * C5092) + C5810 * C27512 -
            (C233 * C2675 + C27526 * C2857) * C5094 -
            (C233 * C2741 + C27526 * C2916) * C5039) *
               C17724) *
              C27525 * C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eeyz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            (C18706 * C188 + C18817 * C27347) * C17724) *
               C27525 * C27520 -
           ((C20066 * C27347 + C19942 * C188) * C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C27512 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C17723 +
            (C19944 * C188 + C20067 * C27347) * C17724) *
               C27525 * C5039) *
              C5035 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C27512 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C27520 -
           (((C233 * C2799 + C27526 * C2970) * C27347 +
             (C233 * C2675 + C27526 * C2857) * C188) *
                C17724 +
            (C2093 + C2089) * C17723) *
               C27525 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C5040 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C5035 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C5041 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27283) *
              C27525 * C27526 * C27347 * C27520 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C5041 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C5035 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C5040) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C27283) *
              C27525 * C27526 * C27347 * C27512 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C5040 +
           (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 + C17724 * C3028) *
               C5035 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C5041 -
           (C17930 * C2681 + C17724 * C3027 + C17929 * C1790 + C17723 * C2147) *
               C27283) *
              C27525 * C27526 * C27347 * C5039)) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C5092 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27520 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C5093 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27512 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C5094 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C5039) *
              C27525 * C27526 * C5035 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C5093 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27520 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C5092) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C27512 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C5094 -
           (C17930 * C2741 + C17724 * C3082 + C17929 * C1850 + C17723 * C2206) *
               C5039) *
              C27525 * C27526 * C27283) *
         C27347) /
        (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C27520 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C27512 +
           ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C188 +
            (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 +
             C17724 * C3135) *
                C27347) *
               C27525 * C27526 * C5039) *
              C5035 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C27512 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C27520 -
           ((C17930 * C2799 + C17724 * C3136 + C17929 * C1906 +
             C17723 * C2268) *
                C27347 +
            (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 +
             C17723 * C2144) *
                C188) *
               C27525 * C27526 * C5039) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C5040 +
                       (C9186 * C96 + C27525 * C104) * C5035 -
                       (C9186 * C90 + C27525 * C95) * C5041 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C27526 * C17723 +
                      (C22530 + C22531 - C22532 - C22533) * C27526 * C17724) *
                         C27492 +
                     ((C22532 - (C22531 + C22530) + C22533) * C27526 * C17723 +
                      (C20280 * C5041 - (C20281 * C5035 + C20282 * C5040) +
                       C20283 * C27283) *
                          C27526 * C17724) *
                         C27359) *
                        C4562 +
                    (((C13630 - (C13629 + C13628) + C13631) * C27526 * C17723 +
                      (C14118 - (C14112 + C14113) + C14119) * C27526 * C17724) *
                         C27492 +
                     ((C14113 + C14112 - C14118 - C14119) * C27526 * C17723 +
                      (C12346 * C5040 + C12347 * C5035 -
                       (C9186 * C3731 + C27525 * C3735) * C5041 -
                       (C9186 * C3733 + C27525 * C3737) * C27283) *
                          C27526 * C17724) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C4617 +
                       (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
                       C9592 * C27335) *
                          C27526 * C17723 +
                      (C22600 + C22601 - C22602 - C22603) * C27526 * C17724) *
                         C5035 +
                     ((C9526 * C4618 -
                       ((C9186 * C145 + C27525 * C150) * C4562 +
                        (C9186 * C90 + C27525 * C95) * C4617) +
                       C9593 * C27335) *
                          C27526 * C17723 +
                      (C22604 - (C22605 + C22606) + C22607) * C27526 * C17724) *
                         C27283) *
                        C27492 +
                    (((C22602 - (C22601 + C22600) + C22603) * C27526 * C17723 +
                      (C12346 * C4618 - (C20345 * C4562 + C20282 * C4617) +
                       C12404 * C27335) *
                          C27526 * C17724) *
                         C5035 +
                     ((C22606 + C22605 - C22604 - C22607) * C27526 * C17723 +
                      (C20280 * C4617 + C20344 * C4562 -
                       (C9186 * C3731 + C27525 * C3735) * C4618 -
                       (C9186 * C3789 + C27525 * C3791) * C27335) *
                          C27526 * C17724) *
                         C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C1313 +
                       (C9186 * C189 + C27525 * C194) * C27492 -
                       C18512 * C1314 - C18645 * C27359) *
                          C27526 * C17723 +
                      (C18512 * C1313 + C18645 * C27492 - C20282 * C1314 -
                       C20402 * C27359) *
                          C27526 * C17724) *
                         C4562 +
                     ((C11482 - (C11481 + C11480) + C11492) * C27526 * C17723 +
                      (C12346 * C1314 - (C11490 * C27492 + C11363 * C1313) +
                       C12464 * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C5035 +
                    (((C18514 * C1314 -
                       ((C9186 * C190 + C27525 * C195) * C27492 +
                        (C9186 * C90 + C27525 * C95) * C1313) +
                       C18646 * C27359) *
                          C27526 * C17723 +
                      (C20280 * C1314 - (C18646 * C27492 + C18514 * C1313) +
                       C20403 * C27359) *
                          C27526 * C17724) *
                         C4562 +
                     ((C14257 + C14256 - C14255 - C14261) * C27526 * C17723 +
                      (C14116 * C1313 + C14260 * C27492 -
                       (C9186 * C3731 + C27525 * C3735) * C1314 -
                       (C9186 * C3843 + C27525 * C3845) * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C5040 +
                       (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
                       C258 * C27283) *
                          C17723 +
                      (C22740 + C22741 - C22742 - C22743) * C17724) *
                         C27525 * C27492 +
                     ((C22742 - (C22741 + C22740) + C22743) * C17723 +
                      (C3378 * C5041 - (C20464 * C5035 + C20465 * C5040) +
                       C3379 * C27283) *
                          C17724) *
                         C27525 * C27359) *
                        C4562 +
                    (((C800 * C5041 -
                       ((C233 * C606 + C27526 * C787) * C5035 +
                        (C233 * C601 + C27526 * C784) * C5040) +
                       C801 * C27283) *
                          C17723 +
                      (C22744 - (C22745 + C22746) + C22747) * C17724) *
                         C27525 * C27492 +
                     ((C22746 + C22745 - C22744 - C22747) * C17723 +
                      (C20942 * C5040 + C20943 * C5035 -
                       (C233 * C3731 + C27526 * C3897) * C5041 -
                       (C233 * C3733 + C27526 * C3899) * C27283) *
                          C17724) *
                         C27525 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C4617 +
                       (C233 * C144 + C27526 * C296) * C4562 -
                       (C233 * C601 + C27526 * C784) * C4618 -
                       (C233 * C668 + C27526 * C853) * C27335) *
                          C17723 +
                      (C22814 + C22815 - C22816 - C22817) * C17724) *
                         C27525 * C5035 +
                     ((C4772 - (C4771 + C4770) + C4773) * C17723 +
                      (C5805 - (C5806 + C5807) + C5811) * C17724) *
                         C27525 * C27283) *
                        C27492 +
                    (((C22816 - (C22815 + C22814) + C22817) * C17723 +
                      (C20942 * C4618 - (C20521 * C4562 + C20465 * C4617) +
                       C21005 * C27335) *
                          C17724) *
                         C27525 * C5035 +
                     ((C5807 + C5806 - C5805 - C5811) * C17723 +
                      (C3378 * C4617 + C3436 * C4562 -
                       (C233 * C3731 + C27526 * C3897) * C4618 -
                       (C233 * C3789 + C27526 * C3952) * C27335) *
                          C17724) *
                         C27525 * C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[32] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C1313 +
                       (C233 * C189 + C27526 * C350) * C27492 - C18706 * C1314 -
                       C18817 * C27359) *
                          C17723 +
                      (C18706 * C1313 + C18817 * C27492 - C20465 * C1314 -
                       C20575 * C27359) *
                          C17724) *
                         C27525 * C4562 +
                     ((C19942 * C1314 -
                       ((C233 * C726 + C27526 * C922) * C27492 +
                        (C233 * C601 + C27526 * C784) * C1313) +
                       C20066 * C27359) *
                          C17723 +
                      (C20942 * C1314 - (C20066 * C27492 + C19942 * C1313) +
                       C21059 * C27359) *
                          C17724) *
                         C27525 * C27335) *
                        C5035 +
                    (((C1514 - (C1513 + C1512) + C1524) * C17723 +
                      (C3378 * C1314 - (C1522 * C27492 + C1390 * C1313) +
                       C3498 * C27359) *
                          C17724) *
                         C27525 * C4562 +
                     ((C5881 + C5880 - C5879 - C5885) * C17723 +
                      (C5736 * C1313 + C5884 * C27492 -
                       (C233 * C3731 + C27526 * C3897) * C1314 -
                       (C233 * C3843 + C27526 * C4004) * C27359) *
                          C17724) *
                         C27525 * C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C5040 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C5035 -
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C5041 -
            (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
                C27283) *
               C27525 * C27526 * C27492 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C5041 -
            ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
              C17723 * C1579) *
                 C5035 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C5040) +
            (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 +
             C17724 * C3553) *
                C27283) *
               C27525 * C27526 * C27359) *
              C4562 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C5041 -
            ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                 C5035 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C5040) +
            (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
                C27283) *
               C27525 * C27526 * C27492 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C5040 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C5035 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C5041 -
            (C17930 * C3733 + C17724 * C4057 + C17929 * C2680 +
             C17723 * C3026) *
                C27283) *
               C27525 * C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C4617 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C4562 -
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C4618 -
            (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
                C27335) *
               C27525 * C27526 * C5035 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C4618 -
            ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                 C4562 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C4617) +
            (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C27492 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C4618 -
            ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
              C17723 * C1647) *
                 C4562 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C4617) +
            (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 +
             C17724 * C4109) *
                C27335) *
               C27525 * C27526 * C5035 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C4617 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C4562 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C4618 -
            (C17930 * C3789 + C17724 * C4110 + C17929 * C2740 +
             C17723 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C1313 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27492 -
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C1314 -
            (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 +
             C17723 * C1709) *
                C27359) *
               C27525 * C27526 * C4562 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C1314 -
            ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 +
              C17723 * C1124) *
                 C27492 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C1313) +
            (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 +
             C17724 * C4161) *
                C27359) *
               C27525 * C27526 * C27335) *
              C5035 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C1314 -
            ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                 C27492 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C1313) +
            (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 +
             C17724 * C3670) *
                C27359) *
               C27525 * C27526 * C4562 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C1313 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27492 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C1314 -
            (C17930 * C3843 + C17724 * C4162 + C17929 * C2798 +
             C17723 * C3134) *
                C27359) *
               C27525 * C27526 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C26163 +
                       (C9186 * C96 + C27525 * C104) * C27481 -
                       (C9186 * C90 + C27525 * C95) * C26156 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C27526 * C17723 +
                      (C20268 + C20269 - C20270 - C20271) * C27526 * C17724) *
                         C6157 +
                     ((C20270 - (C20269 + C20268) + C20271) * C27526 * C17723 +
                      (C20284 - (C20285 + C20286) + C20287) * C27526 * C17724) *
                         C27359) *
                        C4562 +
                    (((C10482 - (C10481 + C10480) + C10483) * C27526 * C17723 +
                      (C16234 - (C16235 + C16236) + C16237) * C27526 * C17724) *
                         C6157 +
                     ((C16236 + C16235 - C16234 - C16237) * C27526 * C17723 +
                      (C12346 * C26163 + C12347 * C27481 -
                       (C9186 * C3731 + C27525 * C3735) * C26156 -
                       (C9186 * C3733 + C27525 * C3737) * C27283) *
                          C27526 * C17724) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C4617 +
                       (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
                       C9592 * C27335) *
                          C27526 * C17723 +
                      (C22600 + C22601 - C22602 - C22603) * C27526 * C17724) *
                         C27481 +
                     ((C9526 * C4618 -
                       ((C9186 * C145 + C27525 * C150) * C4562 +
                        (C9186 * C90 + C27525 * C95) * C4617) +
                       C9593 * C27335) *
                          C27526 * C17723 +
                      (C22604 - (C22605 + C22606) + C22607) * C27526 * C17724) *
                         C27283) *
                        C6157 +
                    (((C22602 - (C22601 + C22600) + C22603) * C27526 * C17723 +
                      (C12346 * C4618 - (C20345 * C4562 + C20282 * C4617) +
                       C12404 * C27335) *
                          C27526 * C17724) *
                         C27481 +
                     ((C22606 + C22605 - C22604 - C22607) * C27526 * C17723 +
                      (C20280 * C4617 + C20344 * C4562 -
                       (C9186 * C3731 + C27525 * C3735) * C4618 -
                       (C9186 * C3789 + C27525 * C3791) * C27335) *
                          C27526 * C17724) *
                         C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C6259 +
                       (C9186 * C189 + C27525 * C194) * C6157 - C18512 * C6260 -
                       C18645 * C27359) *
                          C27526 * C17723 +
                      (C18512 * C6259 + C18645 * C6157 - C20282 * C6260 -
                       C20402 * C27359) *
                          C27526 * C17724) *
                         C4562 +
                     ((C15312 - (C15311 + C15310) + C15313) * C27526 * C17723 +
                      (C12346 * C6260 - (C11490 * C6157 + C11363 * C6259) +
                       C12464 * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C27481 +
                    (((C18514 * C6260 -
                       ((C9186 * C190 + C27525 * C195) * C6157 +
                        (C9186 * C90 + C27525 * C95) * C6259) +
                       C18646 * C27359) *
                          C27526 * C17723 +
                      (C20280 * C6260 - (C18646 * C6157 + C18514 * C6259) +
                       C20403 * C27359) *
                          C27526 * C17724) *
                         C4562 +
                     ((C15316 + C15315 - C15314 - C15317) * C27526 * C17723 +
                      (C14116 * C6259 + C14260 * C6157 -
                       (C9186 * C3731 + C27525 * C3735) * C6260 -
                       (C9186 * C3843 + C27525 * C3845) * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C26163 +
                       (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
                       C258 * C27283) *
                          C17723 +
                      (C20454 + C20455 - C20456 - C20457) * C17724) *
                         C27525 * C6157 +
                     ((C20456 - (C20455 + C20454) + C20457) * C17723 +
                      (C20458 - (C20466 + C20467) + C20463) * C17724) *
                         C27525 * C27359) *
                        C4562 +
                    (((C800 * C26156 -
                       ((C233 * C606 + C27526 * C787) * C27481 +
                        (C233 * C601 + C27526 * C784) * C26163) +
                       C801 * C27283) *
                          C17723 +
                      (C24864 - (C24865 + C24866) + C24867) * C17724) *
                         C27525 * C6157 +
                     ((C24866 + C24865 - C24864 - C24867) * C17723 +
                      (C20942 * C26163 + C20943 * C27481 -
                       (C233 * C3731 + C27526 * C3897) * C26156 -
                       (C233 * C3733 + C27526 * C3899) * C27283) *
                          C17724) *
                         C27525 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C4617 +
                       (C233 * C144 + C27526 * C296) * C4562 -
                       (C233 * C601 + C27526 * C784) * C4618 -
                       (C233 * C668 + C27526 * C853) * C27335) *
                          C17723 +
                      (C22814 + C22815 - C22816 - C22817) * C17724) *
                         C27525 * C27481 +
                     ((C4772 - (C4771 + C4770) + C4773) * C17723 +
                      (C5805 - (C5806 + C5807) + C5811) * C17724) *
                         C27525 * C27283) *
                        C6157 +
                    (((C22816 - (C22815 + C22814) + C22817) * C17723 +
                      (C20942 * C4618 - (C20521 * C4562 + C20465 * C4617) +
                       C21005 * C27335) *
                          C17724) *
                         C27525 * C27481 +
                     ((C5807 + C5806 - C5805 - C5811) * C17723 +
                      (C3378 * C4617 + C3436 * C4562 -
                       (C233 * C3731 + C27526 * C3897) * C4618 -
                       (C233 * C3789 + C27526 * C3952) * C27335) *
                          C17724) *
                         C27525 * C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C6259 +
             (C233 * C189 + C27526 * C350) * C6157 - C18706 * C6260 -
             C18817 * C27359) *
                C17723 +
            (C18706 * C6259 + C18817 * C6157 - C20465 * C6260 -
             C20575 * C27359) *
                C17724) *
               C27525 * C4562 +
           ((C19942 * C6260 -
             ((C233 * C726 + C27526 * C922) * C6157 +
              (C233 * C601 + C27526 * C784) * C6259) +
             C20066 * C27359) *
                C17723 +
            (C20942 * C6260 - (C20066 * C6157 + C19942 * C6259) +
             C21059 * C27359) *
                C17724) *
               C27525 * C27335) *
              C27481 +
          (((C6414 - (C6413 + C6412) + C6415) * C17723 +
            (C3378 * C6260 - (C1522 * C6157 + C1390 * C6259) + C3498 * C27359) *
                C17724) *
               C27525 * C4562 +
           ((C6980 + C6979 - C6978 - C6981) * C17723 +
            (C5736 * C6259 + C5884 * C6157 -
             (C233 * C3731 + C27526 * C3897) * C6260 -
             (C233 * C3843 + C27526 * C4004) * C27359) *
                C17724) *
               C27525 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C26163 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27481 -
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C26156 -
            (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
                C27283) *
               C27525 * C27526 * C6157 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C26156 -
            ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
              C17723 * C1579) *
                 C27481 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C26163) +
            (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 +
             C17724 * C3553) *
                C27283) *
               C27525 * C27526 * C27359) *
              C4562 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C26156 -
            ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                 C27481 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C26163) +
            (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
                C27283) *
               C27525 * C27526 * C6157 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C26163 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27481 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C26156 -
            (C17930 * C3733 + C17724 * C4057 + C17929 * C2680 +
             C17723 * C3026) *
                C27283) *
               C27525 * C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C4617 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C4562 -
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C4618 -
            (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
                C27335) *
               C27525 * C27526 * C27481 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C4618 -
            ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                 C4562 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C4617) +
            (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C6157 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C4618 -
            ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
              C17723 * C1647) *
                 C4562 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C4617) +
            (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 +
             C17724 * C4109) *
                C27335) *
               C27525 * C27526 * C27481 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C4617 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C4562 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C4618 -
            (C17930 * C3789 + C17724 * C4110 + C17929 * C2740 +
             C17723 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C6259 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C6157 -
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C6260 -
            (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 +
             C17723 * C1709) *
                C27359) *
               C27525 * C27526 * C4562 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C6260 -
            ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 +
              C17723 * C1124) *
                 C6157 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C6259) +
            (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 +
             C17724 * C4161) *
                C27359) *
               C27525 * C27526 * C27335) *
              C27481 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C6260 -
            ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                 C6157 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C6259) +
            (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 +
             C17724 * C3670) *
                C27359) *
               C27525 * C27526 * C4562 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C6259 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C6157 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C6260 -
            (C17930 * C3843 + C17724 * C4162 + C17929 * C2798 +
             C17723 * C3134) *
                C27359) *
               C27525 * C27526 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[34] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C27526 * C17723 +
                      (C19774 + C19775) * C27526 * C17724) *
                         C6157 -
                     ((C20776 + C20777) * C27526 * C17724 +
                      (C19775 + C19774) * C27526 * C17723) *
                         C27359) *
                        C27520 +
                    (((C11367 + C11366) * C27526 * C17723 +
                      (C12348 + C12349) * C27526 * C17724) *
                         C27359 -
                     ((C11366 + C11367) * C27526 * C17724 +
                      (C10977 + C10976) * C27526 * C17723) *
                         C6157) *
                        C27512 +
                    (((C10979 + C10978) * C27526 * C17723 +
                      (C11368 + C11369) * C27526 * C17724) *
                         C6157 -
                     (((C9186 * C12338 + C27525 * C12340) * C27278 +
                       (C9186 * C12337 + C27525 * C12339) * C2314) *
                          C27526 * C17724 +
                      (C11369 + C11368) * C27526 * C17723) *
                         C27359) *
                        C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[34] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C5092 +
            (C9186 * C144 + C27525 * C149) * C27520 - C9524 * C5093 -
            C9592 * C27512 + C10494 * C5094 + C10554 * C5039) *
               C27526 * C17723 +
           (C25298 + C25299 - C25300 - C25301 + C25302 + C25303) * C27526 *
               C17724) *
              C27278 * C6157 +
          ((C25300 - (C25299 + C25298) + C25301 - C25302 - C25303) * C27526 *
               C17723 +
           (C12346 * C5093 - (C20345 * C27520 + C20282 * C5092) +
            C12404 * C27512 - (C9186 * C12337 + C27525 * C12339) * C5094 -
            (C9186 * C12399 + C27525 * C12400) * C5039) *
               C27526 * C17724) *
              C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eexz[34] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C6259 +
                      (C9186 * C189 + C27525 * C194) * C6157 - C18512 * C6260 -
                      C18645 * C27359) *
                         C27526 * C17723 +
                     (C18512 * C6259 + C18645 * C6157 - C20282 * C6260 -
                      C20402 * C27359) *
                         C27526 * C17724) *
                        C27520 +
                    ((C15312 - (C15311 + C15310) + C15313) * C27526 * C17723 +
                     (C12346 * C6260 - (C11490 * C6157 + C11363 * C6259) +
                      C12464 * C27359) *
                         C27526 * C17724) *
                        C27512 +
                    ((C16922 + C16921 - C16920 - C16923) * C27526 * C17723 +
                     (C11364 * C6259 + C11491 * C6157 -
                      (C9186 * C12337 + C27525 * C12339) * C6260 -
                      (C9186 * C12454 + C27525 * C12455) * C27359) *
                         C27526 * C17724) *
                        C5039) *
                   C27278) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[34] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C2314 +
                       (C233 * C96 + C27526 * C239) * C27278) *
                          C17723 +
                      (C19932 + C19933) * C17724) *
                         C27525 * C6157 -
                     ((C20936 + C20937) * C17724 + (C19933 + C19932) * C17723) *
                         C27525 * C27359) *
                        C27520 +
                    (((C19946 + C19947) * C17723 + (C20944 + C20945) * C17724) *
                         C27525 * C27359 -
                     ((C19947 + C19946) * C17724 +
                      ((C233 * C606 + C27526 * C787) * C27278 +
                       (C233 * C601 + C27526 * C784) * C2314) *
                          C17723) *
                         C27525 * C6157) *
                        C27512 +
                    ((((C233 * C1784 + C27526 * C1961) * C2314 +
                       (C233 * C1789 + C27526 * C1964) * C27278) *
                          C17723 +
                      (C19948 + C19949) * C17724) *
                         C27525 * C6157 -
                     (((C233 * C12338 + C27526 * C12516) * C27278 +
                       (C233 * C12337 + C27526 * C12515) * C2314) *
                          C17724 +
                      (C19949 + C19948) * C17723) *
                         C27525 * C27359) *
                        C5039)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C5092 +
            (C233 * C144 + C27526 * C296) * C27520 -
            (C233 * C601 + C27526 * C784) * C5093 -
            (C233 * C668 + C27526 * C853) * C27512 +
            (C233 * C1784 + C27526 * C1961) * C5094 +
            (C233 * C1849 + C27526 * C2023) * C5039) *
               C17723 +
           (C25454 + C25455 - C25456 - C25457 + C25458 + C25459) * C17724) *
              C27525 * C27278 * C6157 +
          ((C25456 - (C25455 + C25454) + C25457 - C25458 - C25459) * C17723 +
           (C20942 * C5093 - (C20521 * C27520 + C20465 * C5092) +
            C21005 * C27512 - (C233 * C12337 + C27526 * C12515) * C5094 -
            (C233 * C12399 + C27526 * C12567) * C5039) *
               C17724) *
              C27525 * C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[34] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C6259 +
                      (C233 * C189 + C27526 * C350) * C6157 - C18706 * C6260 -
                      C18817 * C27359) *
                         C17723 +
                     (C18706 * C6259 + C18817 * C6157 - C20465 * C6260 -
                      C20575 * C27359) *
                         C17724) *
                        C27525 * C27520 +
                    ((C19942 * C6260 -
                      ((C233 * C726 + C27526 * C922) * C6157 +
                       (C233 * C601 + C27526 * C784) * C6259) +
                      C20066 * C27359) *
                         C17723 +
                     (C20942 * C6260 - (C20066 * C6157 + C19942 * C6259) +
                      C21059 * C27359) *
                         C17724) *
                        C27525 * C27512 +
                    (((C233 * C1784 + C27526 * C1961) * C6259 +
                      (C233 * C1905 + C27526 * C2085) * C6157 - C19944 * C6260 -
                      C20067 * C27359) *
                         C17723 +
                     (C19944 * C6259 + C20067 * C6157 -
                      (C233 * C12337 + C27526 * C12515) * C6260 -
                      (C233 * C12454 + C27526 * C12618) * C27359) *
                         C17724) *
                        C27525 * C5039) *
                   C27278) /
                  (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C2314 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27278) *
               C27525 * C27526 * C6157 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27278 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C2314) *
               C27525 * C27526 * C27359) *
              C27520 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C2314 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27278) *
               C27525 * C27526 * C27359 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27278 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C2314) *
               C27525 * C27526 * C6157) *
              C27512 +
          (((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C2314 +
            (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 +
             C17724 * C3028) *
                C27278) *
               C27525 * C27526 * C6157 -
           ((C17930 * C12338 + C17724 * C12670 + C17929 * C2682 +
             C17723 * C3028) *
                C27278 +
            (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
             C17723 * C3024) *
                C2314) *
               C27525 * C27526 * C27359) *
              C5039)) /
        (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C5092 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27520 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C5093 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27512 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C5094 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C5039) *
              C27525 * C27526 * C27278 * C6157 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C5093 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27520 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C5092) +
           (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 + C17724 * C4109) *
               C27512 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C5094 -
           (C17930 * C12399 + C17724 * C12729 + C17929 * C2742 +
            C17723 * C3080) *
               C5039) *
              C27525 * C27526 * C27278 * C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C6259 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C6157 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C6260 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C27520 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C6260 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C6157 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C6259) +
           (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 + C17724 * C4161) *
               C27359) *
              C27525 * C27526 * C27512 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C6259 +
           (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 + C17724 * C3135) *
               C6157 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C6260 -
           (C17930 * C12454 + C17724 * C12783 + C17929 * C2800 +
            C17723 * C3135) *
               C27359) *
              C27525 * C27526 * C5039) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eexx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C27526 * C17723 +
                      (C19774 + C19775) * C27526 * C17724) *
                         C27521 -
                     ((C20776 + C20777) * C27526 * C17724 +
                      (C19775 + C19774) * C27526 * C17723) *
                         C27515 +
                     ((C20777 + C20776) * C27526 * C17723 +
                      (C21254 + C21255) * C27526 * C17724) *
                         C7239) *
                        C4562 +
                    (((C11367 + C11366) * C27526 * C17723 +
                      (C12348 + C12349) * C27526 * C17724) *
                         C27515 -
                     ((C11366 + C11367) * C27526 * C17724 +
                      (C10977 + C10976) * C27526 * C17723) *
                         C27521 -
                     (((C9186 * C12828 + C27525 * C12830) * C27278 +
                       (C9186 * C12827 + C27525 * C12829) * C2314) *
                          C27526 * C17724 +
                      (C12349 + C12348) * C27526 * C17723) *
                         C7239) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C4617 +
                      (C9186 * C144 + C27525 * C149) * C4562 - C9524 * C4618 -
                      C9592 * C27335) *
                         C27526 * C17723 +
                     (C22600 + C22601 - C22602 - C22603) * C27526 * C17724) *
                        C27278 * C27521 +
                    ((C22602 - (C22601 + C22600) + C22603) * C27526 * C17723 +
                     (C25760 - (C25761 + C25762) + C25763) * C27526 * C17724) *
                        C27278 * C27515 +
                    ((C25762 + C25761 - C25760 - C25763) * C27526 * C17723 +
                     (C21252 * C4617 + C21295 * C4562 -
                      (C9186 * C12827 + C27525 * C12829) * C4618 -
                      (C9186 * C12865 + C27525 * C12866) * C27335) *
                         C27526 * C17724) *
                        C27278 * C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C7340 +
            (C9186 * C189 + C27525 * C194) * C27521 - C18512 * C7341 -
            C18645 * C27515 + C20282 * C7342 + C20402 * C7239) *
               C27526 * C17723 +
           (C18512 * C7340 + C18645 * C27521 - C20282 * C7341 -
            C20402 * C27515 + C21252 * C7342 + C21335 * C7239) *
               C27526 * C17724) *
              C4562 +
          ((C17380 - (C17379 + C17378) + C17381 - C17382 - C17383) * C27526 *
               C17723 +
           (C12346 * C7341 - (C11490 * C27521 + C11363 * C7340) +
            C12464 * C27515 - (C9186 * C12827 + C27525 * C12829) * C7342 -
            (C9186 * C12901 + C27525 * C12902) * C7239) *
               C27526 * C17724) *
              C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eeyx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C2314 +
                       (C233 * C96 + C27526 * C239) * C27278) *
                          C17723 +
                      (C19932 + C19933) * C17724) *
                         C27525 * C27521 -
                     ((C20936 + C20937) * C17724 + (C19933 + C19932) * C17723) *
                         C27525 * C27515 +
                     ((C20937 + C20936) * C17723 + (C21378 + C21379) * C17724) *
                         C27525 * C7239) *
                        C4562 +
                    (((C19946 + C19947) * C17723 + (C20944 + C20945) * C17724) *
                         C27525 * C27515 -
                     ((C19947 + C19946) * C17724 +
                      ((C233 * C606 + C27526 * C787) * C27278 +
                       (C233 * C601 + C27526 * C784) * C2314) *
                          C17723) *
                         C27525 * C27521 -
                     (((C233 * C12828 + C27526 * C12938) * C27278 +
                       (C233 * C12827 + C27526 * C12937) * C2314) *
                          C17724 +
                      (C20945 + C20944) * C17723) *
                         C27525 * C7239) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C4617 +
                      (C233 * C144 + C27526 * C296) * C4562 -
                      (C233 * C601 + C27526 * C784) * C4618 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C17723 +
                     (C22814 + C22815 - C22816 - C22817) * C17724) *
                        C27525 * C27278 * C27521 +
                    ((C22816 - (C22815 + C22814) + C22817) * C17723 +
                     (C25914 - (C25915 + C25916) + C25917) * C17724) *
                        C27525 * C27278 * C27515 +
                    ((C25916 + C25915 - C25914 - C25917) * C17723 +
                     (C21376 * C4617 + C21418 * C4562 -
                      (C233 * C12827 + C27526 * C12937) * C4618 -
                      (C233 * C12865 + C27526 * C12973) * C27335) *
                         C17724) *
                        C27525 * C27278 * C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C7340 +
            (C233 * C189 + C27526 * C350) * C27521 - C18706 * C7341 -
            C18817 * C27515 + C20465 * C7342 + C20575 * C7239) *
               C17723 +
           (C18706 * C7340 + C18817 * C27521 - C20465 * C7341 -
            C20575 * C27515 + C21376 * C7342 + C21457 * C7239) *
               C17724) *
              C27525 * C4562 +
          ((C19942 * C7341 -
            ((C233 * C726 + C27526 * C922) * C27521 +
             (C233 * C601 + C27526 * C784) * C7340) +
            C20066 * C27515 - C20942 * C7342 - C21059 * C7239) *
               C17723 +
           (C20942 * C7341 - (C20066 * C27521 + C19942 * C7340) +
            C21059 * C27515 - (C233 * C12827 + C27526 * C12937) * C7342 -
            (C233 * C12901 + C27526 * C13008) * C7239) *
               C17724) *
              C27525 * C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C2314 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27278) *
               C27525 * C27526 * C27521 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27278 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C2314) *
               C27525 * C27526 * C27515 +
           ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 +
             C17724 * C4434) *
                C2314 +
            (C17929 * C3195 + C17723 * C3552 + C17930 * C4204 +
             C17724 * C4436) *
                C27278) *
               C27525 * C27526 * C7239) *
              C4562 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C2314 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27278) *
               C27525 * C27526 * C27515 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27278 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C2314) *
               C27525 * C27526 * C27521 -
           ((C17930 * C12828 + C17724 * C13044 + C17929 * C3734 +
             C17723 * C4058) *
                C27278 +
            (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
             C17723 * C4056) *
                C2314) *
               C27525 * C27526 * C7239) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C4617 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C4562 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C4618 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27335) *
              C27525 * C27526 * C27278 * C27521 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C4618 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C4562 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C4617) +
           (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 + C17724 * C4109) *
               C27335) *
              C27525 * C27526 * C27278 * C27515 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C4617 +
           (C17929 * C3252 + C17723 * C3611 + C17930 * C4244 + C17724 * C4472) *
               C4562 -
           (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
            C17723 * C4056) *
               C4618 -
           (C17930 * C12865 + C17724 * C13079 + C17929 * C3790 +
            C17723 * C4109) *
               C27335) *
              C27525 * C27526 * C27278 * C7239)) /
        (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C7340 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27521 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C7341 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27515 +
           (C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C7342 +
           (C17929 * C3311 + C17723 * C3669 + C17930 * C4286 + C17724 * C4507) *
               C7239) *
              C27525 * C27526 * C4562 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C7341 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27521 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C7340) +
           (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 + C17724 * C4161) *
               C27515 -
           (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
            C17723 * C4056) *
               C7342 -
           (C17930 * C12901 + C17724 * C13114 + C17929 * C3844 +
            C17723 * C4161) *
               C7239) *
              C27525 * C27526 * C27335) *
         C27278) /
        (p * q * std::sqrt(p + q));
    d2eexx[36] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C26163 +
                      (C9186 * C96 + C27525 * C104) * C27481 -
                      (C9186 * C90 + C27525 * C95) * C26156 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C27526 * C17723 +
                     (C18512 * C26163 + C18513 * C27481 - C18514 * C26156 -
                      C18515 * C27283) *
                         C27526 * C17724) *
                        C27347 * C1779 +
                    ((C10482 - (C10481 + C10480) + C10483) * C27526 * C17723 +
                     (C16234 - (C16235 + C16236) + C16237) * C27526 * C17724) *
                        C27347 * C1780 +
                    ((C10498 + C10497 - C10496 - C10499) * C27526 * C17723 +
                     (C11364 * C26163 + C11365 * C27481 -
                      (C9186 * C2675 + C27525 * C2683) * C26156 -
                      (C9186 * C2681 + C27525 * C2687) * C27283) *
                         C27526 * C17724) *
                        C27347 * C1781)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C85 +
                     (C9186 * C96 + C27525 * C104) * C75 -
                     (C9186 * C90 + C27525 * C95) * C86 -
                     (C9186 * C97 + C27525 * C105) * C76 +
                     (C9186 * C91 + C27525 * C98) * C87 +
                     (C9186 * C99 + C27525 * C106) * C77 -
                     (C9186 * C92 + C27525 * C100) * C88 -
                     (C9186 * C101 + C27525 * C107) * C78) *
                        C27526 * C17723 +
                    ((C9186 * C1191 + C27525 * C1197) * C85 +
                     (C9186 * C1196 + C27525 * C1202) * C75 -
                     (C9186 * C1189 + C27525 * C1193) * C86 -
                     (C9186 * C1195 + C27525 * C1201) * C76 +
                     (C9186 * C1190 + C27525 * C1194) * C87 +
                     (C9186 * C1198 + C27525 * C1203) * C77 -
                     (C9186 * C1192 + C27525 * C1199) * C88 -
                     (C9186 * C1200 + C27525 * C1204) * C78) *
                        C27526 * C17724) *
                   C27347 * C27321) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C26163 +
                      (C9186 * C96 + C27525 * C104) * C27481 -
                      (C9186 * C90 + C27525 * C95) * C26156 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C27526 * C17723 +
                     (C20268 + C20269 - C20270 - C20271) * C27526 * C17724) *
                        C3187 +
                    ((C20270 - (C20269 + C20268) + C20271) * C27526 * C17723 +
                     (C20284 - (C20285 + C20286) + C20287) * C27526 * C17724) *
                        C3188 +
                    ((C20286 + C20285 - C20284 - C20287) * C27526 * C17723 +
                     ((C9186 * C4202 + C27525 * C4206) * C26163 +
                      (C9186 * C4204 + C27525 * C4208) * C27481 -
                      (C9186 * C4201 + C27525 * C4205) * C26156 -
                      (C9186 * C4203 + C27525 * C4207) * C27283) *
                         C27526 * C17724) *
                        C3189) *
                   C27321) /
                      (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C27526 * C17723 +
           (C18512 * C1846 + C18583 * C1779 - C11363 * C1847 - C11426 * C1780 +
            C11364 * C1848 + C11427 * C1781) *
               C27526 * C17724) *
              C27481 +
          ((C9526 * C1847 -
            ((C9186 * C145 + C27525 * C150) * C1779 +
             (C9186 * C90 + C27525 * C95) * C1846) +
            C9593 * C1780 - C10492 * C1848 - C10555 * C1781) *
               C27526 * C17723 +
           (C14116 * C1847 - (C18584 * C1779 + C18514 * C1846) +
            C14188 * C1780 - (C9186 * C2675 + C27525 * C2683) * C1848 -
            (C9186 * C2741 + C27525 * C2745) * C1781) *
               C27526 * C17724) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C27526 * C17723 +
           ((C9186 * C1191 + C27525 * C1197) * C143 +
            (C9186 * C1257 + C27525 * C1261) * C27321) *
               C27526 * C17724) *
              C75 -
          (((C9186 * C1255 + C27525 * C1259) * C27321 +
            (C9186 * C1189 + C27525 * C1193) * C143) *
               C27526 * C17724 +
           ((C9186 * C145 + C27525 * C150) * C27321 +
            (C9186 * C90 + C27525 * C95) * C143) *
               C27526 * C17723) *
              C76 +
          (((C9186 * C91 + C27525 * C98) * C143 +
            (C9186 * C146 + C27525 * C151) * C27321) *
               C27526 * C17723 +
           ((C9186 * C1190 + C27525 * C1194) * C143 +
            (C9186 * C1256 + C27525 * C1260) * C27321) *
               C27526 * C17724) *
              C77 -
          (((C9186 * C1258 + C27525 * C1262) * C27321 +
            (C9186 * C1192 + C27525 * C1199) * C143) *
               C27526 * C17724 +
           ((C9186 * C147 + C27525 * C152) * C27321 +
            (C9186 * C92 + C27525 * C100) * C143) *
               C27526 * C17723) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C143 +
             (C9186 * C144 + C27525 * C149) * C27321) *
                C27526 * C17723 +
            (C18574 + C18586) * C27526 * C17724) *
               C27481 -
           ((C18587 + C18579) * C27526 * C17724 +
            ((C9186 * C145 + C27525 * C150) * C27321 +
             (C9186 * C90 + C27525 * C95) * C143) *
                C27526 * C17723) *
               C27283) *
              C3187 +
          (((C18579 + C18587) * C27526 * C17723 +
            (C20338 + C20346) * C27526 * C17724) *
               C27283 -
           ((C20347 + C20343) * C27526 * C17724 +
            (C18586 + C18574) * C27526 * C17723) *
               C27481) *
              C3188 +
          (((C20343 + C20347) * C27526 * C17723 +
            ((C9186 * C4202 + C27525 * C4206) * C143 +
             (C9186 * C4244 + C27525 * C4246) * C27321) *
                C27526 * C17724) *
               C27481 -
           (((C9186 * C4243 + C27525 * C4245) * C27321 +
             (C9186 * C4201 + C27525 * C4205) * C143) *
                C27526 * C17724 +
            (C20346 + C20338) * C27526 * C17723) *
               C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eexz[36] +=
        (-std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C27526 * C17723 +
            (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
               C1779 -
           ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
            (C9657 + C9645) * C27526 * C17723) *
               C1780 +
           ((C10608 + C10614) * C27526 * C17723 +
            (C11364 * C188 + C11491 * C27347) * C27526 * C17724) *
               C1781) *
              C27481 +
          (((C9648 + C9658) * C27526 * C17723 +
            (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
               C1780 -
           ((C18646 * C27347 + C18514 * C188) * C27526 * C17724 +
            ((C9186 * C190 + C27525 * C195) * C27347 +
             (C9186 * C90 + C27525 * C95) * C188) *
                C27526 * C17723) *
               C1779 -
           (((C9186 * C2799 + C27525 * C2803) * C27347 +
             (C9186 * C2675 + C27525 * C2683) * C188) *
                C27526 * C17724 +
            (C10615 + C10609) * C27526 * C17723) *
               C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27525 * C94) * C188 +
                                (C9186 * C189 + C27525 * C194) * C27347) *
                                   C27526 * C17723 +
                               ((C9186 * C1191 + C27525 * C1197) * C188 +
                                (C9186 * C1316 + C27525 * C1320) * C27347) *
                                   C27526 * C17724) *
                                  C27321 * C75 -
                              (((C9186 * C1315 + C27525 * C1319) * C27347 +
                                (C9186 * C1189 + C27525 * C1193) * C188) *
                                   C27526 * C17724 +
                               ((C9186 * C190 + C27525 * C195) * C27347 +
                                (C9186 * C90 + C27525 * C95) * C188) *
                                   C27526 * C17723) *
                                  C27321 * C76 +
                              (((C9186 * C91 + C27525 * C98) * C188 +
                                (C9186 * C191 + C27525 * C196) * C27347) *
                                   C27526 * C17723 +
                               ((C9186 * C1190 + C27525 * C1194) * C188 +
                                (C9186 * C1317 + C27525 * C1321) * C27347) *
                                   C27526 * C17724) *
                                  C27321 * C77 -
                              (((C9186 * C1318 + C27525 * C1322) * C27347 +
                                (C9186 * C1192 + C27525 * C1199) * C188) *
                                   C27526 * C17724 +
                               ((C9186 * C192 + C27525 * C197) * C27347 +
                                (C9186 * C92 + C27525 * C100) * C188) *
                                   C27526 * C17723) *
                                  C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C3308 +
            (C9186 * C189 + C27525 * C194) * C3187 - C18512 * C3309 -
            C18645 * C3188 + C20282 * C3310 + C20402 * C3189) *
               C27526 * C17723 +
           (C18512 * C3308 + C18645 * C3187 - C20282 * C3309 - C20402 * C3188 +
            (C9186 * C4202 + C27525 * C4206) * C3310 +
            (C9186 * C4286 + C27525 * C4288) * C3189) *
               C27526 * C17724) *
              C27321 * C27481 +
          ((C18514 * C3309 -
            ((C9186 * C190 + C27525 * C195) * C3187 +
             (C9186 * C90 + C27525 * C95) * C3308) +
            C18646 * C3188 - C20280 * C3310 - C20403 * C3189) *
               C27526 * C17723 +
           (C20280 * C3309 - (C18646 * C3187 + C18514 * C3308) +
            C20403 * C3188 - (C9186 * C4201 + C27525 * C4205) * C3310 -
            (C9186 * C4285 + C27525 * C4287) * C3189) *
               C27526 * C17724) *
              C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[36] +=
        (-std::pow(Pi, 2.5) * ((((C233 * C89 + C27526 * C234) * C26163 +
                                 (C233 * C96 + C27526 * C239) * C27481 -
                                 C257 * C26156 - C258 * C27283) *
                                    C17723 +
                                (C18706 * C26163 + C18707 * C27481 -
                                 C1390 * C26156 - C1391 * C27283) *
                                    C17724) *
                                   C27525 * C27347 * C1779 +
                               ((C800 * C26156 -
                                 ((C233 * C606 + C27526 * C787) * C27481 +
                                  (C233 * C601 + C27526 * C784) * C26163) +
                                 C801 * C27283) *
                                    C17723 +
                                (C5736 * C26156 -
                                 ((C233 * C2679 + C27526 * C2859) * C27481 +
                                  (C233 * C2673 + C27526 * C2855) * C26163) +
                                 C5737 * C27283) *
                                    C17724) *
                                   C27525 * C27347 * C1780 +
                               (((C233 * C1784 + C27526 * C1961) * C26163 +
                                 (C233 * C1789 + C27526 * C1964) * C27481 -
                                 C1972 * C26156 - C1973 * C27283) *
                                    C17723 +
                                ((C233 * C2676 + C27526 * C2858) * C26163 +
                                 (C233 * C2682 + C27526 * C2862) * C27481 -
                                 (C233 * C2675 + C27526 * C2857) * C26156 -
                                 (C233 * C2681 + C27526 * C2861) * C27283) *
                                    C17724) *
                                   C27525 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C85 +
           (C233 * C96 + C27526 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C17723 +
          ((C233 * C1191 + C27526 * C1374) * C85 +
           (C233 * C1196 + C27526 * C1377) * C75 - C1390 * C86 - C1391 * C76 +
           C1392 * C87 + C1393 * C77 - (C233 * C1192 + C27526 * C1376) * C88 -
           (C233 * C1200 + C27526 * C1380) * C78) *
              C17724) *
         C27525 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C26163 +
            (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
            C258 * C27283) *
               C17723 +
           (C20454 + C20455 - C20456 - C20457) * C17724) *
              C27525 * C3187 +
          ((C20456 - (C20455 + C20454) + C20457) * C17723 +
           (C20458 - (C20466 + C20467) + C20463) * C17724) *
              C27525 * C3188 +
          ((C20467 + C20466 - C20458 - C20463) * C17723 +
           ((C233 * C4202 + C27526 * C4324) * C26163 +
            (C233 * C4204 + C27526 * C4326) * C27481 -
            (C233 * C4201 + C27526 * C4323) * C26156 -
            (C233 * C4203 + C27526 * C4325) * C27283) *
               C17724) *
              C27525 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C17723 +
           (C18706 * C1846 + C18763 * C1779 -
            (C233 * C2673 + C27526 * C2855) * C1847 -
            (C233 * C2739 + C27526 * C2913) * C1780 +
            (C233 * C2676 + C27526 * C2858) * C1848 +
            (C233 * C2742 + C27526 * C2914) * C1781) *
               C17724) *
              C27525 * C27481 +
          ((C2029 - (C2028 + C2027) + C2030 - C2031 - C2035) * C17723 +
           (C5736 * C1847 - (C1454 * C1779 + C1390 * C1846) + C5810 * C1780 -
            (C233 * C2675 + C27526 * C2857) * C1848 -
            (C233 * C2741 + C27526 * C2916) * C1781) *
               C17724) *
              C27525 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C17723 +
           ((C233 * C1191 + C27526 * C1374) * C143 +
            (C233 * C1257 + C27526 * C1445) * C27321) *
               C17724) *
              C27525 * C75 -
          ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) * C27525 * C76 +
          ((C307 + C315) * C17723 + (C1451 + C1457) * C17724) * C27525 * C77 -
          (((C233 * C1258 + C27526 * C1446) * C27321 +
            (C233 * C1192 + C27526 * C1376) * C143) *
               C17724 +
           (C316 + C308) * C17723) *
              C27525 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C17723 +
            (C18760 + C18764) * C17724) *
               C27525 * C27481 -
           ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) * C27525 *
               C27283) *
              C3187 +
          (((C1448 + C1456) * C17723 + (C3433 + C3437) * C17724) * C27525 *
               C27283 -
           ((C20522 + C20520) * C17724 + (C18764 + C18760) * C17723) * C27525 *
               C27481) *
              C3188 +
          (((C20520 + C20522) * C17723 +
            ((C233 * C4202 + C27526 * C4324) * C143 +
             (C233 * C4244 + C27526 * C4362) * C27321) *
                C17724) *
               C27525 * C27481 -
           (((C233 * C4243 + C27526 * C4361) * C27321 +
             (C233 * C4201 + C27526 * C4323) * C143) *
                C17724 +
            (C3437 + C3433) * C17723) *
               C27525 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[36] +=
        (-std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            (C18706 * C188 + C18817 * C27347) * C17724) *
               C27525 * C1779 -
           (((C233 * C2797 + C27526 * C2967) * C27347 +
             (C233 * C2673 + C27526 * C2855) * C188) *
                C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C1780 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C17723 +
            ((C233 * C2676 + C27526 * C2858) * C188 +
             (C233 * C2800 + C27526 * C2969) * C27347) *
                C17724) *
               C27525 * C1781) *
              C27481 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C1780 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C1779 -
           (((C233 * C2799 + C27526 * C2970) * C27347 +
             (C233 * C2675 + C27526 * C2857) * C188) *
                C17724 +
            (C2093 + C2089) * C17723) *
               C27525 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C17723 +
           ((C233 * C1191 + C27526 * C1374) * C188 +
            (C233 * C1316 + C27526 * C1507) * C27347) *
               C17724) *
              C27525 * C27321 * C75 -
          ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
              C27525 * C27321 * C76 +
          ((C361 + C369) * C17723 + (C1392 * C188 + C1523 * C27347) * C17724) *
              C27525 * C27321 * C77 -
          (((C233 * C1318 + C27526 * C1510) * C27347 +
            (C233 * C1192 + C27526 * C1376) * C188) *
               C17724 +
           (C370 + C362) * C17723) *
              C27525 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C3308 +
            (C233 * C189 + C27526 * C350) * C3187 - C18706 * C3309 -
            C18817 * C3188 + C20465 * C3310 + C20575 * C3189) *
               C17723 +
           (C18706 * C3308 + C18817 * C3187 - C20465 * C3309 - C20575 * C3188 +
            (C233 * C4202 + C27526 * C4324) * C3310 +
            (C233 * C4286 + C27526 * C4397) * C3189) *
               C17724) *
              C27525 * C27321 * C27481 +
          ((C3493 - (C3492 + C3491) + C3494 - C3495 - C3499) * C17723 +
           (C3378 * C3309 - (C1522 * C3187 + C1390 * C3308) + C3498 * C3188 -
            (C233 * C4201 + C27526 * C4323) * C3310 -
            (C233 * C4285 + C27526 * C4398) * C3189) *
               C17724) *
              C27525 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C26163 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27481 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C26156 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27283) *
              C27525 * C27526 * C27347 * C1779 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C26156 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27481 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C26163) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C27283) *
              C27525 * C27526 * C27347 * C1780 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C26163 +
           (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 + C17724 * C3028) *
               C27481 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C26156 -
           (C17930 * C2681 + C17724 * C3027 + C17929 * C1790 + C17723 * C2147) *
               C27283) *
              C27525 * C27526 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
              C85 +
          (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
              C75 -
          (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
              C86 -
          (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
              C76 +
          (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
              C87 +
          (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
              C77 -
          (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
              C88 -
          (C17930 * C1200 + C17724 * C1582 + C17929 * C101 + C17723 * C413) *
              C78) *
         C27525 * C27526 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C26163 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27481 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C26156 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27283) *
              C27525 * C27526 * C3187 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C26156 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27481 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C26163) +
           (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 + C17724 * C3553) *
               C27283) *
              C27525 * C27526 * C3188 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C26163 +
           (C17929 * C3195 + C17723 * C3552 + C17930 * C4204 + C17724 * C4436) *
               C27481 -
           (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 + C17723 * C3550) *
               C26156 -
           (C17930 * C4203 + C17724 * C4435 + C17929 * C3196 + C17723 * C3553) *
               C27283) *
              C27525 * C27526 * C3189) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1846 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C1779 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C1847 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C1780 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1848 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C1781) *
              C27525 * C27526 * C27481 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C1847 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C1779 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C1846) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C1780 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C1848 -
           (C17930 * C2741 + C17724 * C3082 + C17929 * C1850 + C17723 * C2206) *
               C1781) *
              C27525 * C27526 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27321) *
              C27525 * C27526 * C75 -
          ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
               C27321 +
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C143) *
              C27525 * C27526 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C143 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
               C27321) *
              C27525 * C27526 * C77 -
          ((C17930 * C1258 + C17724 * C1648 + C17929 * C147 + C17723 * C470) *
               C27321 +
           (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
               C143) *
              C27525 * C27526 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27321) *
               C27525 * C27526 * C27481 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27321 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27525 * C27526 * C27283) *
              C3187 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C143 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27321) *
               C27525 * C27526 * C27283 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27321 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C143) *
               C27525 * C27526 * C27481) *
              C3188 +
          (((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 +
             C17724 * C4434) *
                C143 +
            (C17929 * C3252 + C17723 * C3611 + C17930 * C4244 +
             C17724 * C4472) *
                C27321) *
               C27525 * C27526 * C27481 -
           ((C17930 * C4243 + C17724 * C4471 + C17929 * C3253 +
             C17723 * C3612) *
                C27321 +
            (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 +
             C17723 * C3550) *
                C143) *
               C27525 * C27526 * C27283) *
              C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (-std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C1779 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C1780 +
           ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C188 +
            (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 +
             C17724 * C3135) *
                C27347) *
               C27525 * C27526 * C1781) *
              C27481 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C1780 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C1779 -
           ((C17930 * C2799 + C17724 * C3136 + C17929 * C1906 +
             C17723 * C2268) *
                C27347 +
            (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 +
             C17723 * C2144) *
                C188) *
               C27525 * C27526 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27347) *
              C27525 * C27526 * C27321 * C75 -
          ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
               C27347 +
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C188) *
              C27525 * C27526 * C27321 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C188 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
               C27347) *
              C27525 * C27526 * C27321 * C77 -
          ((C17930 * C1318 + C17724 * C1712 + C17929 * C192 + C17723 * C524) *
               C27347 +
           (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
               C188) *
              C27525 * C27526 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C3308 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C3187 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C3309 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C3188 +
           (C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C3310 +
           (C17929 * C3311 + C17723 * C3669 + C17930 * C4286 + C17724 * C4507) *
               C3189) *
              C27525 * C27526 * C27321 * C27481 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C3309 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C3187 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C3308) +
           (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 + C17724 * C3670) *
               C3188 -
           (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 + C17723 * C3550) *
               C3310 -
           (C17930 * C4285 + C17724 * C4508 + C17929 * C3312 + C17723 * C3670) *
               C3189) *
              C27525 * C27526 * C27321 * C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C2314 +
            (C9186 * C96 + C27525 * C104) * C27278) *
               C27526 * C17723 +
           (C18512 * C2314 + C18513 * C27278) * C27526 * C17724) *
              C27347 * C2310 -
          ((C11366 + C11367) * C27526 * C17724 +
           (C10977 + C10976) * C27526 * C17723) *
              C27347 * C2311 +
          ((C10979 + C10978) * C27526 * C17723 +
           (C11368 + C11369) * C27526 * C17724) *
              C27347 * C2312 -
          (((C9186 * C11350 + C27525 * C11352) * C27278 +
            (C9186 * C11349 + C27525 * C11351) * C2314) *
               C27526 * C17724 +
           (C10987 + C10986) * C27526 * C17723) *
              C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C596 +
            (C9186 * C96 + C27525 * C104) * C591 -
            (C9186 * C90 + C27525 * C95) * C597 -
            (C9186 * C97 + C27525 * C105) * C592 +
            (C9186 * C91 + C27525 * C98) * C598 +
            (C9186 * C99 + C27525 * C106) * C593) *
               C27526 * C17723 +
           ((C9186 * C1191 + C27525 * C1197) * C596 +
            (C9186 * C1196 + C27525 * C1202) * C591 -
            (C9186 * C1189 + C27525 * C1193) * C597 -
            (C9186 * C1195 + C27525 * C1201) * C592 +
            (C9186 * C1190 + C27525 * C1194) * C598 +
            (C9186 * C1198 + C27525 * C1203) * C593) *
               C27526 * C17724) *
              C27347 * C27491 +
          ((C9532 - (C9531 + C9530) + C9533 - C9534 - C9535) * C27526 * C17723 +
           (C14116 * C597 - (C11362 * C591 + C11363 * C596) + C14117 * C592 -
            (C9186 * C5523 + C27525 * C5524) * C598 -
            (C9186 * C5525 + C27525 * C5526) * C593) *
               C27526 * C17724) *
              C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C2314 +
             (C9186 * C96 + C27525 * C104) * C27278) *
                C27526 * C17723 +
            (C19774 + C19775) * C27526 * C17724) *
               C3187 -
           ((C20776 + C20777) * C27526 * C17724 +
            (C19775 + C19774) * C27526 * C17723) *
               C3188 +
           ((C20777 + C20776) * C27526 * C17723 +
            ((C9186 * C4202 + C27525 * C4206) * C2314 +
             (C9186 * C4204 + C27525 * C4208) * C27278) *
                C27526 * C17724) *
               C3189) *
              C27491 +
          (((C11367 + C11366) * C27526 * C17723 +
            (C12348 + C12349) * C27526 * C17724) *
               C3188 -
           ((C11366 + C11367) * C27526 * C17724 +
            (C10977 + C10976) * C27526 * C17723) *
               C3187 -
           (((C9186 * C12828 + C27525 * C12830) * C27278 +
             (C9186 * C12827 + C27525 * C12829) * C2314) *
                C27526 * C17724 +
            (C12349 + C12348) * C27526 * C17723) *
               C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] += (-std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C2357 +
                     (C9186 * C144 + C27525 * C149) * C2310 - C9524 * C2358 -
                     C9592 * C2311 + C10494 * C2359 + C10554 * C2312 -
                     C10984 * C2360 - C11026 * C2313) *
                        C27526 * C17723 +
                    (C18512 * C2357 + C18583 * C2310 - C11363 * C2358 -
                     C11426 * C2311 + C11364 * C2359 + C11427 * C2312 -
                     (C9186 * C11349 + C27525 * C11351) * C2360 -
                     (C9186 * C11419 + C27525 * C11420) * C2313) *
                        C27526 * C17724) *
                   C27278 * C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C665 +
                      (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
                      C9592 * C27335) *
                         C27526 * C17723 +
                     ((C9186 * C1191 + C27525 * C1197) * C665 +
                      (C9186 * C1257 + C27525 * C1261) * C27491 -
                      C11363 * C666 - C11426 * C27335) *
                         C27526 * C17724) *
                        C591 +
                    ((C9526 * C666 -
                      ((C9186 * C145 + C27525 * C150) * C27491 +
                       (C9186 * C90 + C27525 * C95) * C665) +
                      C9593 * C27335) *
                         C27526 * C17723 +
                     (C14116 * C666 -
                      ((C9186 * C1255 + C27525 * C1259) * C27491 +
                       (C9186 * C1189 + C27525 * C1193) * C665) +
                      C14188 * C27335) *
                         C27526 * C17724) *
                        C592 +
                    (((C9186 * C91 + C27525 * C98) * C665 +
                      (C9186 * C146 + C27525 * C151) * C27491 - C9528 * C666 -
                      C9594 * C27335) *
                         C27526 * C17723 +
                     ((C9186 * C1190 + C27525 * C1194) * C665 +
                      (C9186 * C1256 + C27525 * C1260) * C27491 -
                      (C9186 * C5523 + C27525 * C5524) * C666 -
                      (C9186 * C5593 + C27525 * C5594) * C27335) *
                         C27526 * C17724) *
                        C593) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C665 +
                      (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
                      C9592 * C27335) *
                         C27526 * C17723 +
                     (C20828 + C20829 - C20830 - C20831) * C27526 * C17724) *
                        C27278 * C3187 +
                    ((C20830 - (C20829 + C20828) + C20831) * C27526 * C17723 +
                     (C20832 - (C20833 + C20834) + C20835) * C27526 * C17724) *
                        C27278 * C3188 +
                    ((C20834 + C20833 - C20832 - C20835) * C27526 * C17723 +
                     ((C9186 * C4202 + C27525 * C4206) * C665 +
                      (C9186 * C4244 + C27525 * C4246) * C27491 -
                      (C9186 * C12827 + C27525 * C12829) * C666 -
                      (C9186 * C12865 + C27525 * C12866) * C27335) *
                         C27526 * C17724) *
                        C27278 * C3189)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C188 +
            (C9186 * C189 + C27525 * C194) * C27347) *
               C27526 * C17723 +
           (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
              C2310 -
          ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
           (C9657 + C9645) * C27526 * C17723) *
              C2311 +
          ((C10608 + C10614) * C27526 * C17723 +
           (C11364 * C188 + C11491 * C27347) * C27526 * C17724) *
              C2312 -
          (((C9186 * C11477 + C27525 * C11478) * C27347 +
            (C9186 * C11349 + C27525 * C11351) * C188) *
               C27526 * C17724 +
           (C11067 + C11063) * C27526 * C17723) *
              C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C188 +
             (C9186 * C189 + C27525 * C194) * C27347) *
                C27526 * C17723 +
            ((C9186 * C1191 + C27525 * C1197) * C188 +
             (C9186 * C1316 + C27525 * C1320) * C27347) *
                C27526 * C17724) *
               C27491 -
           ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
            (C9657 + C9645) * C27526 * C17723) *
               C27335) *
              C591 +
          (((C9648 + C9658) * C27526 * C17723 +
            (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
               C27335 -
           (((C9186 * C1315 + C27525 * C1319) * C27347 +
             (C9186 * C1189 + C27525 * C1193) * C188) *
                C27526 * C17724 +
            ((C9186 * C190 + C27525 * C195) * C27347 +
             (C9186 * C90 + C27525 * C95) * C188) *
                C27526 * C17723) *
               C27491) *
              C592 +
          ((((C9186 * C91 + C27525 * C98) * C188 +
             (C9186 * C191 + C27525 * C196) * C27347) *
                C27526 * C17723 +
            ((C9186 * C1190 + C27525 * C1194) * C188 +
             (C9186 * C1317 + C27525 * C1321) * C27347) *
                C27526 * C17724) *
               C27491 -
           (((C9186 * C5661 + C27525 * C5662) * C27347 +
             (C9186 * C5523 + C27525 * C5524) * C188) *
                C27526 * C17724 +
            (C9659 + C9651) * C27526 * C17723) *
               C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C3308 +
            (C9186 * C189 + C27525 * C194) * C3187 - C18512 * C3309 -
            C18645 * C3188 + C20282 * C3310 + C20402 * C3189) *
               C27526 * C17723 +
           (C18512 * C3308 + C18645 * C3187 - C20282 * C3309 - C20402 * C3188 +
            (C9186 * C4202 + C27525 * C4206) * C3310 +
            (C9186 * C4286 + C27525 * C4288) * C3189) *
               C27526 * C17724) *
              C27491 +
          ((C12459 - (C12458 + C12457) + C12460 - C12461 - C12465) * C27526 *
               C17723 +
           (C12346 * C3309 - (C11490 * C3187 + C11363 * C3308) +
            C12464 * C3188 - (C9186 * C12827 + C27525 * C12829) * C3310 -
            (C9186 * C12901 + C27525 * C12902) * C3189) *
               C27526 * C17724) *
              C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (-std::pow(Pi, 2.5) * ((((C233 * C89 + C27526 * C234) * C2314 +
                                 (C233 * C96 + C27526 * C239) * C27278) *
                                    C17723 +
                                (C18706 * C2314 + C18707 * C27278) * C17724) *
                                   C27525 * C27347 * C2310 -
                               (((C233 * C2679 + C27526 * C2859) * C27278 +
                                 (C233 * C2673 + C27526 * C2855) * C2314) *
                                    C17724 +
                                ((C233 * C606 + C27526 * C787) * C27278 +
                                 (C233 * C601 + C27526 * C784) * C2314) *
                                    C17723) *
                                   C27525 * C27347 * C2311 +
                               (((C233 * C1784 + C27526 * C1961) * C2314 +
                                 (C233 * C1789 + C27526 * C1964) * C27278) *
                                    C17723 +
                                ((C233 * C2676 + C27526 * C2858) * C2314 +
                                 (C233 * C2682 + C27526 * C2862) * C27278) *
                                    C17724) *
                                   C27525 * C27347 * C2312 -
                               (((C233 * C11350 + C27526 * C11544) * C27278 +
                                 (C233 * C11349 + C27526 * C11543) * C2314) *
                                    C17724 +
                                ((C233 * C2318 + C27526 * C2440) * C27278 +
                                 (C233 * C2316 + C27526 * C2438) * C2314) *
                                    C17723) *
                                   C27525 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C596 +
            (C233 * C96 + C27526 * C239) * C591 - C257 * C597 - C258 * C592 +
            C259 * C598 + C260 * C593) *
               C17723 +
           ((C233 * C1191 + C27526 * C1374) * C596 +
            (C233 * C1196 + C27526 * C1377) * C591 - C1390 * C597 -
            C1391 * C592 + C1392 * C598 + C1393 * C593) *
               C17724) *
              C27525 * C27347 * C27491 +
          ((C800 * C597 -
            ((C233 * C606 + C27526 * C787) * C591 +
             (C233 * C601 + C27526 * C784) * C596) +
            C801 * C592 - C802 * C598 - C803 * C593) *
               C17723 +
           (C5736 * C597 -
            ((C233 * C2679 + C27526 * C2859) * C591 +
             (C233 * C2673 + C27526 * C2855) * C596) +
            C5737 * C592 - (C233 * C5523 + C27526 * C5729) * C598 -
            (C233 * C5525 + C27526 * C5730) * C593) *
               C17724) *
              C27525 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C2314 +
             (C233 * C96 + C27526 * C239) * C27278) *
                C17723 +
            (C19932 + C19933) * C17724) *
               C27525 * C3187 -
           ((C20936 + C20937) * C17724 + (C19933 + C19932) * C17723) * C27525 *
               C3188 +
           ((C20937 + C20936) * C17723 +
            ((C233 * C4202 + C27526 * C4324) * C2314 +
             (C233 * C4204 + C27526 * C4326) * C27278) *
                C17724) *
               C27525 * C3189) *
              C27491 +
          (((C19946 + C19947) * C17723 + (C20944 + C20945) * C17724) * C27525 *
               C3188 -
           ((C19947 + C19946) * C17724 +
            ((C233 * C606 + C27526 * C787) * C27278 +
             (C233 * C601 + C27526 * C784) * C2314) *
                C17723) *
               C27525 * C3187 -
           (((C233 * C12828 + C27526 * C12938) * C27278 +
             (C233 * C12827 + C27526 * C12937) * C2314) *
                C17724 +
            (C20945 + C20944) * C17723) *
               C27525 * C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] += (-std::pow(Pi, 2.5) *
                   (((C233 * C89 + C27526 * C234) * C2357 +
                     (C233 * C144 + C27526 * C296) * C2310 -
                     (C233 * C601 + C27526 * C784) * C2358 -
                     (C233 * C668 + C27526 * C853) * C2311 +
                     (C233 * C1784 + C27526 * C1961) * C2359 +
                     (C233 * C1849 + C27526 * C2023) * C2312 -
                     (C233 * C2316 + C27526 * C2438) * C2360 -
                     (C233 * C2362 + C27526 * C2475) * C2313) *
                        C17723 +
                    (C18706 * C2357 + C18763 * C2310 -
                     (C233 * C2673 + C27526 * C2855) * C2358 -
                     (C233 * C2739 + C27526 * C2913) * C2311 +
                     (C233 * C2676 + C27526 * C2858) * C2359 +
                     (C233 * C2742 + C27526 * C2914) * C2312 -
                     (C233 * C11349 + C27526 * C11543) * C2360 -
                     (C233 * C11419 + C27526 * C11595) * C2313) *
                        C17724) *
                   C27525 * C27278 * C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C665 +
                      (C233 * C144 + C27526 * C296) * C27491 -
                      (C233 * C601 + C27526 * C784) * C666 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C17723 +
                     ((C233 * C1191 + C27526 * C1374) * C665 +
                      (C233 * C1257 + C27526 * C1445) * C27491 -
                      (C233 * C2673 + C27526 * C2855) * C666 -
                      (C233 * C2739 + C27526 * C2913) * C27335) *
                         C17724) *
                        C27525 * C591 +
                    ((C860 - (C859 + C858) + C870) * C17723 +
                     (C6908 - (C6909 + C6910) + C6911) * C17724) *
                        C27525 * C592 +
                    ((C865 + C864 - C863 - C871) * C17723 +
                     (C1392 * C665 + C1455 * C27491 -
                      (C233 * C5523 + C27526 * C5729) * C666 -
                      (C233 * C5593 + C27526 * C5803) * C27335) *
                         C17724) *
                        C27525 * C593) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C665 +
                      (C233 * C144 + C27526 * C296) * C27491 -
                      (C233 * C601 + C27526 * C784) * C666 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C17723 +
                     (C20996 + C20997 - C20998 - C20999) * C17724) *
                        C27525 * C27278 * C3187 +
                    ((C20998 - (C20997 + C20996) + C20999) * C17723 +
                     (C21000 - (C21001 + C21002) + C21006) * C17724) *
                        C27525 * C27278 * C3188 +
                    ((C21002 + C21001 - C21000 - C21006) * C17723 +
                     ((C233 * C4202 + C27526 * C4324) * C665 +
                      (C233 * C4244 + C27526 * C4362) * C27491 -
                      (C233 * C12827 + C27526 * C12937) * C666 -
                      (C233 * C12865 + C27526 * C12973) * C27335) *
                         C17724) *
                        C27525 * C27278 * C3189)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C17723 +
           (C18706 * C188 + C18817 * C27347) * C17724) *
              C27525 * C2310 -
          (((C233 * C2797 + C27526 * C2967) * C27347 +
            (C233 * C2673 + C27526 * C2855) * C188) *
               C17724 +
           ((C233 * C726 + C27526 * C922) * C27347 +
            (C233 * C601 + C27526 * C784) * C188) *
               C17723) *
              C27525 * C2311 +
          (((C233 * C1784 + C27526 * C1961) * C188 +
            (C233 * C1905 + C27526 * C2085) * C27347) *
               C17723 +
           ((C233 * C2676 + C27526 * C2858) * C188 +
            (C233 * C2800 + C27526 * C2969) * C27347) *
               C17724) *
              C27525 * C2312 -
          (((C233 * C11477 + C27526 * C11646) * C27347 +
            (C233 * C11349 + C27526 * C11543) * C188) *
               C17724 +
           ((C233 * C2400 + C27526 * C2512) * C27347 +
            (C233 * C2316 + C27526 * C2438) * C188) *
               C17723) *
              C27525 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            ((C233 * C1191 + C27526 * C1374) * C188 +
             (C233 * C1316 + C27526 * C1507) * C27347) *
                C17724) *
               C27525 * C27491 -
           (((C233 * C2797 + C27526 * C2967) * C27347 +
             (C233 * C2673 + C27526 * C2855) * C188) *
                C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C27335) *
              C591 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C27335 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C27491) *
              C592 +
          (((C361 + C369) * C17723 + (C1392 * C188 + C1523 * C27347) * C17724) *
               C27525 * C27491 -
           (((C233 * C5661 + C27526 * C5877) * C27347 +
             (C233 * C5523 + C27526 * C5729) * C188) *
                C17724 +
            (C935 + C929) * C17723) *
               C27525 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C3308 +
            (C233 * C189 + C27526 * C350) * C3187 - C18706 * C3309 -
            C18817 * C3188 + C20465 * C3310 + C20575 * C3189) *
               C17723 +
           (C18706 * C3308 + C18817 * C3187 - C20465 * C3309 - C20575 * C3188 +
            (C233 * C4202 + C27526 * C4324) * C3310 +
            (C233 * C4286 + C27526 * C4397) * C3189) *
               C17724) *
              C27525 * C27491 +
          ((C19942 * C3309 -
            ((C233 * C726 + C27526 * C922) * C3187 +
             (C233 * C601 + C27526 * C784) * C3308) +
            C20066 * C3188 - C20942 * C3310 - C21059 * C3189) *
               C17723 +
           (C20942 * C3309 - (C20066 * C3187 + C19942 * C3308) +
            C21059 * C3188 - (C233 * C12827 + C27526 * C12937) * C3310 -
            (C233 * C12901 + C27526 * C13008) * C3189) *
               C17724) *
              C27525 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C2314 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27278) *
              C27525 * C27526 * C27347 * C2310 -
          ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
               C27278 +
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C2314) *
              C27525 * C27526 * C27347 * C2311 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C2314 +
           (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 + C17724 * C3028) *
               C27278) *
              C27525 * C27526 * C27347 * C2312 -
          ((C17930 * C11350 + C17724 * C11698 + C17929 * C2318 +
            C17723 * C2550) *
               C27278 +
           (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
            C17723 * C2548) *
               C2314) *
              C27525 * C27526 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C591 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C592 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C598 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C593) *
              C27525 * C27526 * C27347 * C27491 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C597 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C591 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C596) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C592 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C598 -
           (C17930 * C5525 + C17724 * C5952 + C17929 * C608 + C17723 * C991) *
               C593) *
              C27525 * C27526 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C2314 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27278) *
               C27525 * C27526 * C3187 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27278 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C2314) *
               C27525 * C27526 * C3188 +
           ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 +
             C17724 * C4434) *
                C2314 +
            (C17929 * C3195 + C17723 * C3552 + C17930 * C4204 +
             C17724 * C4436) *
                C27278) *
               C27525 * C27526 * C3189) *
              C27491 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C2314 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27278) *
               C27525 * C27526 * C3188 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27278 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C2314) *
               C27525 * C27526 * C3187 -
           ((C17930 * C12828 + C17724 * C13044 + C17929 * C3734 +
             C17723 * C4058) *
                C27278 +
            (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
             C17723 * C4056) *
                C2314) *
               C27525 * C27526 * C3189) *
              C27335)) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (-std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
              C2357 +
          (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
              C2310 -
          (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
              C2358 -
          (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
              C2311 +
          (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
              C2359 +
          (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
              C2312 -
          (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
           C17723 * C2548) *
              C2360 -
          (C17930 * C11419 + C17724 * C11765 + C17929 * C2362 +
           C17723 * C2585) *
              C2313) *
         C27525 * C27526 * C27278 * C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C665 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27491 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C666 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27335) *
              C27525 * C27526 * C591 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C666 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27491 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C665) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C27335) *
              C27525 * C27526 * C592 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C665 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
               C27491 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C666 -
           (C17930 * C5593 + C17724 * C6025 + C17929 * C669 + C17723 * C1057) *
               C27335) *
              C27525 * C27526 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C665 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27491 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C666 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27335) *
              C27525 * C27526 * C27278 * C3187 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C666 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27491 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C665) +
           (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 + C17724 * C4109) *
               C27335) *
              C27525 * C27526 * C27278 * C3188 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C665 +
           (C17929 * C3252 + C17723 * C3611 + C17930 * C4244 + C17724 * C4472) *
               C27491 -
           (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
            C17723 * C4056) *
               C666 -
           (C17930 * C12865 + C17724 * C13079 + C17929 * C3790 +
            C17723 * C4109) *
               C27335) *
              C27525 * C27526 * C27278 * C3189)) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27347) *
              C27525 * C27526 * C2310 -
          ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
               C27347 +
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C188) *
              C27525 * C27526 * C2311 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C188 +
           (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 + C17724 * C3135) *
               C27347) *
              C27525 * C27526 * C2312 -
          ((C17930 * C11477 + C17724 * C11822 + C17929 * C2400 +
            C17723 * C2622) *
               C27347 +
           (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
            C17723 * C2548) *
               C188) *
              C27525 * C27526 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C27491 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C27335) *
              C591 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C27335 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C27491) *
              C592 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
                C27347) *
               C27525 * C27526 * C27491 -
           ((C17930 * C5661 + C17724 * C6099 + C17929 * C727 + C17723 * C1125) *
                C27347 +
            (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
                C188) *
               C27525 * C27526 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C3308 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C3187 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C3309 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C3188 +
           (C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C3310 +
           (C17929 * C3311 + C17723 * C3669 + C17930 * C4286 + C17724 * C4507) *
               C3189) *
              C27525 * C27526 * C27491 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C3309 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C3187 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C3308) +
           (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 + C17724 * C4161) *
               C3188 -
           (C17930 * C12827 + C17724 * C13043 + C17929 * C3732 +
            C17723 * C4056) *
               C3310 -
           (C17930 * C12901 + C17724 * C13114 + C17929 * C3844 +
            C17723 * C4161) *
               C3189) *
              C27525 * C27526 * C27335) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] +=
        (-std::pow(Pi, 2.5) * (((((C9186 * C89 + C27525 * C94) * C2314 +
                                  (C9186 * C96 + C27525 * C104) * C27278) *
                                     C27526 * C17723 +
                                 (C19774 + C19775) * C27526 * C17724) *
                                    C27492 -
                                (((C9186 * C3195 + C27525 * C3199) * C27278 +
                                  (C9186 * C3190 + C27525 * C3193) * C2314) *
                                     C27526 * C17724 +
                                 (C19775 + C19774) * C27526 * C17723) *
                                    C27359) *
                                   C1779 +
                               (((C11367 + C11366) * C27526 * C17723 +
                                 (C12348 + C12349) * C27526 * C17724) *
                                    C27359 -
                                ((C11366 + C11367) * C27526 * C17724 +
                                 (C10977 + C10976) * C27526 * C17723) *
                                    C27492) *
                                   C1780 +
                               (((C10979 + C10978) * C27526 * C17723 +
                                 (C11368 + C11369) * C27526 * C17724) *
                                    C27492 -
                                (((C9186 * C12338 + C27525 * C12340) * C27278 +
                                  (C9186 * C12337 + C27525 * C12339) * C2314) *
                                     C27526 * C17724 +
                                 (C11369 + C11368) * C27526 * C17723) *
                                    C27359) *
                                   C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C596 +
            (C9186 * C96 + C27525 * C104) * C591 -
            (C9186 * C90 + C27525 * C95) * C597 -
            (C9186 * C97 + C27525 * C105) * C592 +
            (C9186 * C91 + C27525 * C98) * C598 +
            (C9186 * C99 + C27525 * C106) * C593) *
               C27526 * C17723 +
           (C18518 + C18519 - C18520 - C18521 + C18522 + C18523) * C27526 *
               C17724) *
              C27492 +
          ((C18520 - (C18519 + C18518) + C18521 - C18522 - C18523) * C27526 *
               C17723 +
           ((C9186 * C3191 + C27525 * C3194) * C597 -
            ((C9186 * C3195 + C27525 * C3199) * C591 +
             (C9186 * C3190 + C27525 * C3193) * C596) +
            (C9186 * C3196 + C27525 * C3200) * C592 -
            (C9186 * C3192 + C27525 * C3197) * C598 -
            (C9186 * C3198 + C27525 * C3201) * C593) *
               C27526 * C17724) *
              C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C2314 +
            (C9186 * C96 + C27525 * C104) * C27278) *
               C27526 * C17723 +
           (C19774 + C19775) * C27526 * C17724) *
              C4197 -
          ((C20776 + C20777) * C27526 * C17724 +
           (C19775 + C19774) * C27526 * C17723) *
              C4198 +
          ((C20777 + C20776) * C27526 * C17723 +
           (C21254 + C21255) * C27526 * C17724) *
              C4199 -
          (((C9186 * C21244 + C27525 * C21246) * C27278 +
            (C9186 * C21243 + C27525 * C21245) * C2314) *
               C27526 * C17724 +
           (C21255 + C21254) * C27526 * C17723) *
              C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eexy[38] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C27526 * C17723 +
           (C19826 + C19827 - C19828 - C19829 + C19830 + C19831) * C27526 *
               C17724) *
              C27278 * C27492 +
          ((C19828 - (C19827 + C19826) + C19829 - C19830 - C19831) * C27526 *
               C17723 +
           (C12346 * C1847 -
            ((C9186 * C3252 + C27525 * C3255) * C1779 +
             (C9186 * C3190 + C27525 * C3193) * C1846) +
            C12404 * C1780 - (C9186 * C12337 + C27525 * C12339) * C1848 -
            (C9186 * C12399 + C27525 * C12400) * C1781) *
               C27526 * C17724) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C9186 * C89 + C27525 * C94) * C143 +
                                 (C9186 * C144 + C27525 * C149) * C27321) *
                                    C27526 * C17723 +
                                (C18574 + C18586) * C27526 * C17724) *
                                   C591 -
                               ((C18587 + C18579) * C27526 * C17724 +
                                ((C9186 * C145 + C27525 * C150) * C27321 +
                                 (C9186 * C90 + C27525 * C95) * C143) *
                                    C27526 * C17723) *
                                   C592 +
                               (((C9186 * C91 + C27525 * C98) * C143 +
                                 (C9186 * C146 + C27525 * C151) * C27321) *
                                    C27526 * C17723 +
                                (C18580 + C18588) * C27526 * C17724) *
                                   C593) *
                                  C27492 +
                              (((C18579 + C18587) * C27526 * C17723 +
                                ((C9186 * C3191 + C27525 * C3194) * C143 +
                                 (C9186 * C3253 + C27525 * C3256) * C27321) *
                                    C27526 * C17724) *
                                   C592 -
                               (((C9186 * C3252 + C27525 * C3255) * C27321 +
                                 (C9186 * C3190 + C27525 * C3193) * C143) *
                                    C27526 * C17724 +
                                (C18586 + C18574) * C27526 * C17723) *
                                   C591 -
                               (((C9186 * C3254 + C27525 * C3257) * C27321 +
                                 (C9186 * C3192 + C27525 * C3197) * C143) *
                                    C27526 * C17724 +
                                (C18588 + C18580) * C27526 * C17723) *
                                   C593) *
                                  C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C27526 * C17723 +
           (C18574 + C18586) * C27526 * C17724) *
              C27278 * C4197 -
          ((C20347 + C20343) * C27526 * C17724 +
           (C18586 + C18574) * C27526 * C17723) *
              C27278 * C4198 +
          ((C20343 + C20347) * C27526 * C17723 +
           (C21292 + C21296) * C27526 * C17724) *
              C27278 * C4199 -
          (((C9186 * C21289 + C27525 * C21290) * C27321 +
            (C9186 * C21243 + C27525 * C21245) * C143) *
               C27526 * C17724 +
           (C21296 + C21292) * C27526 * C17723) *
              C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eexz[38] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1313 +
            (C9186 * C189 + C27525 * C194) * C27492 - C18512 * C1314 -
            C18645 * C27359) *
               C27526 * C17723 +
           (C18512 * C1313 + C18645 * C27492 -
            (C9186 * C3190 + C27525 * C3193) * C1314 -
            (C9186 * C3311 + C27525 * C3314) * C27359) *
               C27526 * C17724) *
              C1779 +
          ((C11482 - (C11481 + C11480) + C11492) * C27526 * C17723 +
           (C12346 * C1314 - (C11490 * C27492 + C11363 * C1313) +
            C12464 * C27359) *
               C27526 * C17724) *
              C1780 +
          ((C11487 + C11486 - C11485 - C11493) * C27526 * C17723 +
           (C11364 * C1313 + C11491 * C27492 -
            (C9186 * C12337 + C27525 * C12339) * C1314 -
            (C9186 * C12454 + C27525 * C12455) * C27359) *
               C27526 * C17724) *
              C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27525 * C94) * C1313 +
                                (C9186 * C189 + C27525 * C194) * C27492 -
                                C18512 * C1314 - C18645 * C27359) *
                                   C27526 * C17723 +
                               (C18512 * C1313 + C18645 * C27492 -
                                (C9186 * C3190 + C27525 * C3193) * C1314 -
                                (C9186 * C3311 + C27525 * C3314) * C27359) *
                                   C27526 * C17724) *
                                  C27321 * C591 +
                              ((C18514 * C1314 -
                                ((C9186 * C190 + C27525 * C195) * C27492 +
                                 (C9186 * C90 + C27525 * C95) * C1313) +
                                C18646 * C27359) *
                                   C27526 * C17723 +
                               ((C9186 * C3191 + C27525 * C3194) * C1314 -
                                (C18646 * C27492 + C18514 * C1313) +
                                (C9186 * C3312 + C27525 * C3315) * C27359) *
                                   C27526 * C17724) *
                                  C27321 * C592 +
                              (((C9186 * C91 + C27525 * C98) * C1313 +
                                (C9186 * C191 + C27525 * C196) * C27492 -
                                C18516 * C1314 - C18647 * C27359) *
                                   C27526 * C17723 +
                               (C18516 * C1313 + C18647 * C27492 -
                                (C9186 * C3192 + C27525 * C3197) * C1314 -
                                (C9186 * C3313 + C27525 * C3316) * C27359) *
                                   C27526 * C17724) *
                                  C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27525 * C94) * C4281 +
           (C9186 * C189 + C27525 * C194) * C4197 - C18512 * C4282 -
           C18645 * C4198 + C20282 * C4283 + C20402 * C4199 - C21252 * C4284 -
           C21335 * C4200) *
              C27526 * C17723 +
          (C18512 * C4281 + C18645 * C4197 - C20282 * C4282 - C20402 * C4198 +
           C21252 * C4283 + C21335 * C4199 -
           (C9186 * C21243 + C27525 * C21245) * C4284 -
           (C9186 * C21330 + C27525 * C21331) * C4200) *
              C27526 * C17724) *
         C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eeyx[38] +=
        (-std::pow(Pi, 2.5) * (((((C233 * C89 + C27526 * C234) * C2314 +
                                  (C233 * C96 + C27526 * C239) * C27278) *
                                     C17723 +
                                 (C19932 + C19933) * C17724) *
                                    C27525 * C27492 -
                                (((C233 * C3195 + C27526 * C3370) * C27278 +
                                  (C233 * C3190 + C27526 * C3367) * C2314) *
                                     C17724 +
                                 (C19933 + C19932) * C17723) *
                                    C27525 * C27359) *
                                   C1779 +
                               (((C19946 + C19947) * C17723 +
                                 ((C233 * C3732 + C27526 * C3898) * C2314 +
                                  (C233 * C3734 + C27526 * C3900) * C27278) *
                                     C17724) *
                                    C27525 * C27359 -
                                ((C19947 + C19946) * C17724 +
                                 ((C233 * C606 + C27526 * C787) * C27278 +
                                  (C233 * C601 + C27526 * C784) * C2314) *
                                     C17723) *
                                    C27525 * C27492) *
                                   C1780 +
                               ((((C233 * C1784 + C27526 * C1961) * C2314 +
                                  (C233 * C1789 + C27526 * C1964) * C27278) *
                                     C17723 +
                                 (C19948 + C19949) * C17724) *
                                    C27525 * C27492 -
                                (((C233 * C12338 + C27526 * C12516) * C27278 +
                                  (C233 * C12337 + C27526 * C12515) * C2314) *
                                     C17724 +
                                 (C19949 + C19948) * C17723) *
                                    C27525 * C27359) *
                                   C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C596 +
            (C233 * C96 + C27526 * C239) * C591 - C257 * C597 - C258 * C592 +
            C259 * C598 + C260 * C593) *
               C17723 +
           (C18708 + C18709 - C18702 - C18703 + C18704 + C18705) * C17724) *
              C27525 * C27492 +
          ((C18702 - (C18709 + C18708) + C18703 - C18704 - C18705) * C17723 +
           (C3378 * C597 -
            ((C233 * C3195 + C27526 * C3370) * C591 +
             (C233 * C3190 + C27526 * C3367) * C596) +
            C3379 * C592 - (C233 * C3192 + C27526 * C3369) * C598 -
            (C233 * C3198 + C27526 * C3372) * C593) *
               C17724) *
              C27525 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C2314 +
            (C233 * C96 + C27526 * C239) * C27278) *
               C17723 +
           (C19932 + C19933) * C17724) *
              C27525 * C4197 -
          ((C20936 + C20937) * C17724 + (C19933 + C19932) * C17723) * C27525 *
              C4198 +
          ((C20937 + C20936) * C17723 + (C21378 + C21379) * C17724) * C27525 *
              C4199 -
          (((C233 * C21244 + C27526 * C21370) * C27278 +
            (C233 * C21243 + C27526 * C21369) * C2314) *
               C17724 +
           (C21379 + C21378) * C17723) *
              C27525 * C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eeyy[38] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C17723 +
           (C20000 + C20001 - C20002 - C20010 + C20005 + C20011) * C17724) *
              C27525 * C27278 * C27492 +
          ((C20002 - (C20001 + C20000) + C20010 - C20005 - C20011) * C17723 +
           ((C233 * C3732 + C27526 * C3898) * C1847 -
            ((C233 * C3252 + C27526 * C3429) * C1779 +
             (C233 * C3190 + C27526 * C3367) * C1846) +
            (C233 * C3790 + C27526 * C3951) * C1780 -
            (C233 * C12337 + C27526 * C12515) * C1848 -
            (C233 * C12399 + C27526 * C12567) * C1781) *
               C17724) *
              C27525 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C17723 +
            (C18760 + C18764) * C17724) *
               C27525 * C591 -
           ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) * C27525 * C592 +
           ((C307 + C315) * C17723 + (C1451 + C1457) * C17724) * C27525 *
               C593) *
              C27492 +
          (((C1448 + C1456) * C17723 + (C3433 + C3437) * C17724) * C27525 *
               C592 -
           (((C233 * C3252 + C27526 * C3429) * C27321 +
             (C233 * C3190 + C27526 * C3367) * C143) *
                C17724 +
            (C18764 + C18760) * C17723) *
               C27525 * C591 -
           (((C233 * C3254 + C27526 * C3431) * C27321 +
             (C233 * C3192 + C27526 * C3369) * C143) *
                C17724 +
            (C1457 + C1451) * C17723) *
               C27525 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C17723 +
           (C18760 + C18764) * C17724) *
              C27525 * C27278 * C4197 -
          ((C20522 + C20520) * C17724 + (C18764 + C18760) * C17723) * C27525 *
              C27278 * C4198 +
          ((C20520 + C20522) * C17723 + (C21415 + C21419) * C17724) * C27525 *
              C27278 * C4199 -
          (((C233 * C21289 + C27526 * C21413) * C27321 +
            (C233 * C21243 + C27526 * C21369) * C143) *
               C17724 +
           (C21419 + C21415) * C17723) *
              C27525 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[38] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1313 +
            (C233 * C189 + C27526 * C350) * C27492 - C18706 * C1314 -
            C18817 * C27359) *
               C17723 +
           (C18706 * C1313 + C18817 * C27492 -
            (C233 * C3190 + C27526 * C3367) * C1314 -
            (C233 * C3311 + C27526 * C3487) * C27359) *
               C17724) *
              C27525 * C1779 +
          ((C19942 * C1314 -
            ((C233 * C726 + C27526 * C922) * C27492 +
             (C233 * C601 + C27526 * C784) * C1313) +
            C20066 * C27359) *
               C17723 +
           ((C233 * C3732 + C27526 * C3898) * C1314 -
            (C20066 * C27492 + C19942 * C1313) +
            (C233 * C3844 + C27526 * C4003) * C27359) *
               C17724) *
              C27525 * C1780 +
          (((C233 * C1784 + C27526 * C1961) * C1313 +
            (C233 * C1905 + C27526 * C2085) * C27492 - C19944 * C1314 -
            C20067 * C27359) *
               C17723 +
           (C19944 * C1313 + C20067 * C27492 -
            (C233 * C12337 + C27526 * C12515) * C1314 -
            (C233 * C12454 + C27526 * C12618) * C27359) *
               C17724) *
              C27525 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1313 +
            (C233 * C189 + C27526 * C350) * C27492 - C18706 * C1314 -
            C18817 * C27359) *
               C17723 +
           (C18706 * C1313 + C18817 * C27492 -
            (C233 * C3190 + C27526 * C3367) * C1314 -
            (C233 * C3311 + C27526 * C3487) * C27359) *
               C17724) *
              C27525 * C27321 * C591 +
          ((C1514 - (C1513 + C1512) + C1524) * C17723 +
           (C3378 * C1314 - (C1522 * C27492 + C1390 * C1313) + C3498 * C27359) *
               C17724) *
              C27525 * C27321 * C592 +
          ((C1519 + C1518 - C1517 - C1525) * C17723 +
           (C1392 * C1313 + C1523 * C27492 -
            (C233 * C3192 + C27526 * C3369) * C1314 -
            (C233 * C3313 + C27526 * C3489) * C27359) *
               C17724) *
              C27525 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C4281 +
           (C233 * C189 + C27526 * C350) * C4197 - C18706 * C4282 -
           C18817 * C4198 + C20465 * C4283 + C20575 * C4199 - C21376 * C4284 -
           C21457 * C4200) *
              C17723 +
          (C18706 * C4281 + C18817 * C4197 - C20465 * C4282 - C20575 * C4198 +
           C21376 * C4283 + C21457 * C4199 -
           (C233 * C21243 + C27526 * C21369) * C4284 -
           (C233 * C21330 + C27526 * C21453) * C4200) *
              C17724) *
         C27525 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (-std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C2314 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27278) *
               C27525 * C27526 * C27492 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27278 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C2314) *
               C27525 * C27526 * C27359) *
              C1779 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C2314 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27278) *
               C27525 * C27526 * C27359 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27278 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C2314) *
               C27525 * C27526 * C27492) *
              C1780 +
          (((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C2314 +
            (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 +
             C17724 * C3028) *
                C27278) *
               C27525 * C27526 * C27492 -
           ((C17930 * C12338 + C17724 * C12670 + C17929 * C2682 +
             C17723 * C3028) *
                C27278 +
            (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
             C17723 * C3024) *
                C2314) *
               C27525 * C27526 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C591 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C592 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C598 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C593) *
              C27525 * C27526 * C27492 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C597 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C591 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C596) +
           (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 + C17724 * C3553) *
               C592 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C598 -
           (C17930 * C3198 + C17724 * C3554 + C17929 * C1198 + C17723 * C1581) *
               C593) *
              C27525 * C27526 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C2314 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27278) *
              C27525 * C27526 * C4197 -
          ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 + C17723 * C1579) *
               C27278 +
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C2314) *
              C27525 * C27526 * C4198 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C2314 +
           (C17929 * C3195 + C17723 * C3552 + C17930 * C4204 + C17724 * C4436) *
               C27278) *
              C27525 * C27526 * C4199 -
          ((C17930 * C21244 + C17724 * C21492 + C17929 * C4204 +
            C17723 * C4436) *
               C27278 +
           (C17930 * C21243 + C17724 * C21491 + C17929 * C4202 +
            C17723 * C4434) *
               C2314) *
              C27525 * C27526 * C4200) *
         C27321) /
            (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1846 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C1779 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C1847 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C1780 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1848 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C1781) *
              C27525 * C27526 * C27278 * C27492 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C1847 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C1779 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C1846) +
           (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 + C17724 * C4109) *
               C1780 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C1848 -
           (C17930 * C12399 + C17724 * C12729 + C17929 * C2742 +
            C17723 * C3080) *
               C1781) *
              C27525 * C27526 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27321) *
               C27525 * C27526 * C591 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27321 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27525 * C27526 * C592 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
                C27321) *
               C27525 * C27526 * C593) *
              C27492 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C143 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27321) *
               C27525 * C27526 * C592 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27321 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C143) *
               C27525 * C27526 * C591 -
           ((C17930 * C3254 + C17724 * C3613 + C17929 * C1256 +
             C17723 * C1646) *
                C27321 +
            (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 +
             C17723 * C1577) *
                C143) *
               C27525 * C27526 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27321) *
              C27525 * C27526 * C27278 * C4197 -
          ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 + C17723 * C1647) *
               C27321 +
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C143) *
              C27525 * C27526 * C27278 * C4198 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C143 +
           (C17929 * C3252 + C17723 * C3611 + C17930 * C4244 + C17724 * C4472) *
               C27321) *
              C27525 * C27526 * C27278 * C4199 -
          ((C17930 * C21289 + C17724 * C21527 + C17929 * C4244 +
            C17723 * C4472) *
               C27321 +
           (C17930 * C21243 + C17724 * C21491 + C17929 * C4202 +
            C17723 * C4434) *
               C143) *
              C27525 * C27526 * C27278 * C4200)) /
            (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1313 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27492 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C1314 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C1779 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C1314 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27492 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C1313) +
           (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 + C17724 * C4161) *
               C27359) *
              C27525 * C27526 * C1780 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1313 +
           (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 + C17724 * C3135) *
               C27492 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C1314 -
           (C17930 * C12454 + C17724 * C12783 + C17929 * C2800 +
            C17723 * C3135) *
               C27359) *
              C27525 * C27526 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1313 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27492 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C1314 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C27321 * C591 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C1314 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27492 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C1313) +
           (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 + C17724 * C3670) *
               C27359) *
              C27525 * C27526 * C27321 * C592 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C1313 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
               C27492 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C1314 -
           (C17930 * C3313 + C17724 * C3671 + C17929 * C1317 + C17723 * C1711) *
               C27359) *
              C27525 * C27526 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
              C4281 +
          (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
              C4197 -
          (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
              C4282 -
          (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
              C4198 +
          (C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
              C4283 +
          (C17929 * C3311 + C17723 * C3669 + C17930 * C4286 + C17724 * C4507) *
              C4199 -
          (C17930 * C21243 + C17724 * C21491 + C17929 * C4202 +
           C17723 * C4434) *
              C4284 -
          (C17930 * C21330 + C17724 * C21562 + C17929 * C4286 +
           C17723 * C4507) *
              C4200) *
         C27525 * C27526 * C27321 * C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C4564 +
            (C9186 * C96 + C27525 * C104) * C27517 -
            (C9186 * C90 + C27525 * C95) * C4565 -
            (C9186 * C97 + C27525 * C105) * C27507 +
            (C9186 * C91 + C27525 * C98) * C4566 +
            (C9186 * C99 + C27525 * C106) * C4561) *
               C27526 * C17723 +
           (C23132 + C23133 - C23134 - C23135 + C23136 + C23137) * C27526 *
               C17724) *
              C6157 +
          ((C23134 - (C23133 + C23132) + C23135 - C23136 - C23137) * C27526 *
               C17723 +
           (C20280 * C4565 - (C20281 * C27517 + C20282 * C4564) +
            C20283 * C27507 - (C9186 * C3192 + C27525 * C3197) * C4566 -
            (C9186 * C3198 + C27525 * C3201) * C4561) *
               C27526 * C17724) *
              C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eexy[39] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C143 +
                       (C9186 * C144 + C27525 * C149) * C27321) *
                          C27526 * C17723 +
                      (C18574 + C18586) * C27526 * C17724) *
                         C27517 -
                     ((C18587 + C18579) * C27526 * C17724 +
                      ((C9186 * C145 + C27525 * C150) * C27321 +
                       (C9186 * C90 + C27525 * C95) * C143) *
                          C27526 * C17723) *
                         C27507 +
                     (((C9186 * C91 + C27525 * C98) * C143 +
                       (C9186 * C146 + C27525 * C151) * C27321) *
                          C27526 * C17723 +
                      (C18580 + C18588) * C27526 * C17724) *
                         C4561) *
                        C6157 +
                    (((C18579 + C18587) * C27526 * C17723 +
                      (C20338 + C20346) * C27526 * C17724) *
                         C27507 -
                     ((C20347 + C20343) * C27526 * C17724 +
                      (C18586 + C18574) * C27526 * C17723) *
                         C27517 -
                     (((C9186 * C3254 + C27525 * C3257) * C27321 +
                       (C9186 * C3192 + C27525 * C3197) * C143) *
                          C27526 * C17724 +
                      (C18588 + C18580) * C27526 * C17723) *
                         C4561) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[39] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C6259 +
                      (C9186 * C189 + C27525 * C194) * C6157 - C18512 * C6260 -
                      C18645 * C27359) *
                         C27526 * C17723 +
                     (C18512 * C6259 + C18645 * C6157 - C20282 * C6260 -
                      C20402 * C27359) *
                         C27526 * C17724) *
                        C27321 * C27517 +
                    ((C18514 * C6260 -
                      ((C9186 * C190 + C27525 * C195) * C6157 +
                       (C9186 * C90 + C27525 * C95) * C6259) +
                      C18646 * C27359) *
                         C27526 * C17723 +
                     (C20280 * C6260 - (C18646 * C6157 + C18514 * C6259) +
                      C20403 * C27359) *
                         C27526 * C17724) *
                        C27321 * C27507 +
                    (((C9186 * C91 + C27525 * C98) * C6259 +
                      (C9186 * C191 + C27525 * C196) * C6157 - C18516 * C6260 -
                      C18647 * C27359) *
                         C27526 * C17723 +
                     (C18516 * C6259 + C18647 * C6157 -
                      (C9186 * C3192 + C27525 * C3197) * C6260 -
                      (C9186 * C3313 + C27525 * C3316) * C27359) *
                         C27526 * C17724) *
                        C27321 * C4561)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C4564 +
            (C233 * C96 + C27526 * C239) * C27517 - C257 * C4565 -
            C258 * C27507 + C259 * C4566 + C260 * C4561) *
               C17723 +
           (C23288 + C23289 - C23290 - C23291 + C23292 + C23293) * C17724) *
              C27525 * C6157 +
          ((C23290 - (C23289 + C23288) + C23291 - C23292 - C23293) * C17723 +
           (C3378 * C4565 - (C20464 * C27517 + C20465 * C4564) +
            C3379 * C27507 - (C233 * C3192 + C27526 * C3369) * C4566 -
            (C233 * C3198 + C27526 * C3372) * C4561) *
               C17724) *
              C27525 * C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eeyy[39] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C143 +
                       (C233 * C144 + C27526 * C296) * C27321) *
                          C17723 +
                      (C18760 + C18764) * C17724) *
                         C27525 * C27517 -
                     ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) *
                         C27525 * C27507 +
                     ((C307 + C315) * C17723 + (C1451 + C1457) * C17724) *
                         C27525 * C4561) *
                        C6157 +
                    (((C1448 + C1456) * C17723 + (C3433 + C3437) * C17724) *
                         C27525 * C27507 -
                     ((C20522 + C20520) * C17724 + (C18764 + C18760) * C17723) *
                         C27525 * C27517 -
                     (((C233 * C3254 + C27526 * C3431) * C27321 +
                       (C233 * C3192 + C27526 * C3369) * C143) *
                          C17724 +
                      (C1457 + C1451) * C17723) *
                         C27525 * C4561) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C6259 +
            (C233 * C189 + C27526 * C350) * C6157 - C18706 * C6260 -
            C18817 * C27359) *
               C17723 +
           (C18706 * C6259 + C18817 * C6157 - C20465 * C6260 -
            C20575 * C27359) *
               C17724) *
              C27525 * C27321 * C27517 +
          ((C6414 - (C6413 + C6412) + C6415) * C17723 +
           (C3378 * C6260 - (C1522 * C6157 + C1390 * C6259) + C3498 * C27359) *
               C17724) *
              C27525 * C27321 * C27507 +
          ((C6418 + C6417 - C6416 - C6419) * C17723 +
           (C1392 * C6259 + C1523 * C6157 -
            (C233 * C3192 + C27526 * C3369) * C6260 -
            (C233 * C3313 + C27526 * C3489) * C27359) *
               C17724) *
              C27525 * C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C4564 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27517 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C4565 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27507 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C4566 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C4561) *
              C27525 * C27526 * C6157 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C4565 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27517 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C4564) +
           (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 + C17724 * C3553) *
               C27507 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C4566 -
           (C17930 * C3198 + C17724 * C3554 + C17929 * C1198 + C17723 * C1581) *
               C4561) *
              C27525 * C27526 * C27359) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27321) *
               C27525 * C27526 * C27517 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27321 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27525 * C27526 * C27507 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
                C27321) *
               C27525 * C27526 * C4561) *
              C6157 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C143 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27321) *
               C27525 * C27526 * C27507 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27321 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C143) *
               C27525 * C27526 * C27517 -
           ((C17930 * C3254 + C17724 * C3613 + C17929 * C1256 +
             C17723 * C1646) *
                C27321 +
            (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 +
             C17723 * C1577) *
                C143) *
               C27525 * C27526 * C4561) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C6259 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C6157 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C6260 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C27321 * C27517 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C6260 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C6157 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C6259) +
           (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 + C17724 * C3670) *
               C27359) *
              C27525 * C27526 * C27321 * C27507 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C6259 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
               C6157 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C6260 -
           (C17930 * C3313 + C17724 * C3671 + C17929 * C1317 + C17723 * C1711) *
               C27359) *
              C27525 * C27526 * C27321 * C4561)) /
        (p * q * std::sqrt(p + q));
    d2eexx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C5040 +
                       (C9186 * C96 + C27525 * C104) * C5035 -
                       (C9186 * C90 + C27525 * C95) * C5041 -
                       (C9186 * C97 + C27525 * C105) * C27283) *
                          C27526 * C17723 +
                      (C22530 + C22531 - C22532 - C22533) * C27526 * C17724) *
                         C6157 +
                     ((C22532 - (C22531 + C22530) + C22533) * C27526 * C17723 +
                      (C20280 * C5041 - (C20281 * C5035 + C20282 * C5040) +
                       C20283 * C27283) *
                          C27526 * C17724) *
                         C27359) *
                        C27491 +
                    (((C13630 - (C13629 + C13628) + C13631) * C27526 * C17723 +
                      (C14118 - (C14112 + C14113) + C14119) * C27526 * C17724) *
                         C6157 +
                     ((C14113 + C14112 - C14118 - C14119) * C27526 * C17723 +
                      (C12346 * C5040 + C12347 * C5035 -
                       (C9186 * C3731 + C27525 * C3735) * C5041 -
                       (C9186 * C3733 + C27525 * C3737) * C27283) *
                          C27526 * C17724) *
                         C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C665 +
                       (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
                       C9592 * C27335) *
                          C27526 * C17723 +
                      (C20828 + C20829 - C20830 - C20831) * C27526 * C17724) *
                         C5035 +
                     ((C9526 * C666 -
                       ((C9186 * C145 + C27525 * C150) * C27491 +
                        (C9186 * C90 + C27525 * C95) * C665) +
                       C9593 * C27335) *
                          C27526 * C17723 +
                      (C23676 - (C23677 + C23678) + C23679) * C27526 * C17724) *
                         C27283) *
                        C6157 +
                    (((C20830 - (C20829 + C20828) + C20831) * C27526 * C17723 +
                      (C20832 - (C20833 + C20834) + C20835) * C27526 * C17724) *
                         C5035 +
                     ((C23678 + C23677 - C23676 - C23679) * C27526 * C17723 +
                      (C20280 * C665 + C20344 * C27491 -
                       (C9186 * C3731 + C27525 * C3735) * C666 -
                       (C9186 * C3789 + C27525 * C3791) * C27335) *
                          C27526 * C17724) *
                         C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C6259 +
                       (C9186 * C189 + C27525 * C194) * C6157 - C18512 * C6260 -
                       C18645 * C27359) *
                          C27526 * C17723 +
                      (C18512 * C6259 + C18645 * C6157 - C20282 * C6260 -
                       C20402 * C27359) *
                          C27526 * C17724) *
                         C27491 +
                     ((C15312 - (C15311 + C15310) + C15313) * C27526 * C17723 +
                      (C12346 * C6260 - (C11490 * C6157 + C11363 * C6259) +
                       C12464 * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C5035 +
                    (((C18514 * C6260 -
                       ((C9186 * C190 + C27525 * C195) * C6157 +
                        (C9186 * C90 + C27525 * C95) * C6259) +
                       C18646 * C27359) *
                          C27526 * C17723 +
                      (C20280 * C6260 - (C18646 * C6157 + C18514 * C6259) +
                       C20403 * C27359) *
                          C27526 * C17724) *
                         C27491 +
                     ((C15316 + C15315 - C15314 - C15317) * C27526 * C17723 +
                      (C14116 * C6259 + C14260 * C6157 -
                       (C9186 * C3731 + C27525 * C3735) * C6260 -
                       (C9186 * C3843 + C27525 * C3845) * C27359) *
                          C27526 * C17724) *
                         C27335) *
                        C27283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C5040 +
                       (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
                       C258 * C27283) *
                          C17723 +
                      (C22740 + C22741 - C22742 - C22743) * C17724) *
                         C27525 * C6157 +
                     ((C22742 - (C22741 + C22740) + C22743) * C17723 +
                      (C3378 * C5041 - (C20464 * C5035 + C20465 * C5040) +
                       C3379 * C27283) *
                          C17724) *
                         C27525 * C27359) *
                        C27491 +
                    (((C800 * C5041 -
                       ((C233 * C606 + C27526 * C787) * C5035 +
                        (C233 * C601 + C27526 * C784) * C5040) +
                       C801 * C27283) *
                          C17723 +
                      (C22744 - (C22745 + C22746) + C22747) * C17724) *
                         C27525 * C6157 +
                     ((C22746 + C22745 - C22744 - C22747) * C17723 +
                      (C20942 * C5040 + C20943 * C5035 -
                       (C233 * C3731 + C27526 * C3897) * C5041 -
                       (C233 * C3733 + C27526 * C3899) * C27283) *
                          C17724) *
                         C27525 * C27359) *
                        C27335)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C665 +
                       (C233 * C144 + C27526 * C296) * C27491 -
                       (C233 * C601 + C27526 * C784) * C666 -
                       (C233 * C668 + C27526 * C853) * C27335) *
                          C17723 +
                      (C20996 + C20997 - C20998 - C20999) * C17724) *
                         C27525 * C5035 +
                     ((C860 - (C859 + C858) + C870) * C17723 +
                      (C6908 - (C6909 + C6910) + C6911) * C17724) *
                         C27525 * C27283) *
                        C6157 +
                    (((C20998 - (C20997 + C20996) + C20999) * C17723 +
                      (C21000 - (C21001 + C21002) + C21006) * C17724) *
                         C27525 * C5035 +
                     ((C6910 + C6909 - C6908 - C6911) * C17723 +
                      (C3378 * C665 + C3436 * C27491 -
                       (C233 * C3731 + C27526 * C3897) * C666 -
                       (C233 * C3789 + C27526 * C3952) * C27335) *
                          C17724) *
                         C27525 * C27283) *
                        C27359)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C6259 +
             (C233 * C189 + C27526 * C350) * C6157 - C18706 * C6260 -
             C18817 * C27359) *
                C17723 +
            (C18706 * C6259 + C18817 * C6157 - C20465 * C6260 -
             C20575 * C27359) *
                C17724) *
               C27525 * C27491 +
           ((C19942 * C6260 -
             ((C233 * C726 + C27526 * C922) * C6157 +
              (C233 * C601 + C27526 * C784) * C6259) +
             C20066 * C27359) *
                C17723 +
            (C20942 * C6260 - (C20066 * C6157 + C19942 * C6259) +
             C21059 * C27359) *
                C17724) *
               C27525 * C27335) *
              C5035 +
          (((C6414 - (C6413 + C6412) + C6415) * C17723 +
            (C3378 * C6260 - (C1522 * C6157 + C1390 * C6259) + C3498 * C27359) *
                C17724) *
               C27525 * C27491 +
           ((C6980 + C6979 - C6978 - C6981) * C17723 +
            (C5736 * C6259 + C5884 * C6157 -
             (C233 * C3731 + C27526 * C3897) * C6260 -
             (C233 * C3843 + C27526 * C4004) * C27359) *
                C17724) *
               C27525 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C5040 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C5035 -
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C5041 -
            (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
                C27283) *
               C27525 * C27526 * C6157 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C5041 -
            ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
              C17723 * C1579) *
                 C5035 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C5040) +
            (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 +
             C17724 * C3553) *
                C27283) *
               C27525 * C27526 * C27359) *
              C27491 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C5041 -
            ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                 C5035 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C5040) +
            (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
                C27283) *
               C27525 * C27526 * C6157 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C5040 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C5035 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C5041 -
            (C17930 * C3733 + C17724 * C4057 + C17929 * C2680 +
             C17723 * C3026) *
                C27283) *
               C27525 * C27526 * C27359) *
              C27335)) /
        (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C665 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27491 -
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C666 -
            (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
                C27335) *
               C27525 * C27526 * C5035 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C666 -
            ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                 C27491 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C665) +
            (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C6157 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C666 -
            ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
              C17723 * C1647) *
                 C27491 +
             (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
              C17723 * C1576) *
                 C665) +
            (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 +
             C17724 * C4109) *
                C27335) *
               C27525 * C27526 * C5035 +
           ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C665 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27491 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C666 -
            (C17930 * C3789 + C17724 * C4110 + C17929 * C2740 +
             C17723 * C3081) *
                C27335) *
               C27525 * C27526 * C27283) *
              C27359)) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C6259 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C6157 -
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C6260 -
            (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 +
             C17723 * C1709) *
                C27359) *
               C27525 * C27526 * C27491 +
           ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C6260 -
            ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 +
              C17723 * C1124) *
                 C6157 +
             (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                 C6259) +
            (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 +
             C17724 * C4161) *
                C27359) *
               C27525 * C27526 * C27335) *
              C5035 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C6260 -
            ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                 C6157 +
             (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                 C6259) +
            (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 +
             C17724 * C3670) *
                C27359) *
               C27525 * C27526 * C27491 +
           ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C6259 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C6157 -
            (C17930 * C3731 + C17724 * C4055 + C17929 * C2674 +
             C17723 * C3022) *
                C6260 -
            (C17930 * C3843 + C17724 * C4162 + C17929 * C2798 +
             C17723 * C3134) *
                C27359) *
               C27525 * C27526 * C27335) *
              C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C5040 +
                      (C9186 * C96 + C27525 * C104) * C5035 -
                      (C9186 * C90 + C27525 * C95) * C5041 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C27526 * C17723 +
                     (C22530 + C22531 - C22532 - C22533) * C27526 * C17724) *
                        C27521 +
                    ((C22532 - (C22531 + C22530) + C22533) * C27526 * C17723 +
                     (C24192 - (C24193 + C24194) + C24195) * C27526 * C17724) *
                        C27515 +
                    ((C24194 + C24193 - C24192 - C24195) * C27526 * C17723 +
                     (C21252 * C5040 + C21253 * C5035 -
                      (C9186 * C4201 + C27525 * C4205) * C5041 -
                      (C9186 * C4203 + C27525 * C4207) * C27283) *
                         C27526 * C17724) *
                        C7239) *
                   C27321) /
                  (p * q * std::sqrt(p + q));
    d2eexy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C143 +
                       (C9186 * C144 + C27525 * C149) * C27321) *
                          C27526 * C17723 +
                      (C18574 + C18586) * C27526 * C17724) *
                         C5035 -
                     ((C18587 + C18579) * C27526 * C17724 +
                      ((C9186 * C145 + C27525 * C150) * C27321 +
                       (C9186 * C90 + C27525 * C95) * C143) *
                          C27526 * C17723) *
                         C27283) *
                        C27521 +
                    (((C18579 + C18587) * C27526 * C17723 +
                      (C20338 + C20346) * C27526 * C17724) *
                         C27283 -
                     ((C20347 + C20343) * C27526 * C17724 +
                      (C18586 + C18574) * C27526 * C17723) *
                         C5035) *
                        C27515 +
                    (((C20343 + C20347) * C27526 * C17723 +
                      (C21292 + C21296) * C27526 * C17724) *
                         C5035 -
                     (((C9186 * C4243 + C27525 * C4245) * C27321 +
                       (C9186 * C4201 + C27525 * C4205) * C143) *
                          C27526 * C17724 +
                      (C20346 + C20338) * C27526 * C17723) *
                         C27283) *
                        C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C7340 +
            (C9186 * C189 + C27525 * C194) * C27521 - C18512 * C7341 -
            C18645 * C27515 + C20282 * C7342 + C20402 * C7239) *
               C27526 * C17723 +
           (C18512 * C7340 + C18645 * C27521 - C20282 * C7341 -
            C20402 * C27515 + C21252 * C7342 + C21335 * C7239) *
               C27526 * C17724) *
              C27321 * C5035 +
          ((C18514 * C7341 -
            ((C9186 * C190 + C27525 * C195) * C27521 +
             (C9186 * C90 + C27525 * C95) * C7340) +
            C18646 * C27515 - C20280 * C7342 - C20403 * C7239) *
               C27526 * C17723 +
           (C20280 * C7341 - (C18646 * C27521 + C18514 * C7340) +
            C20403 * C27515 - (C9186 * C4201 + C27525 * C4205) * C7342 -
            (C9186 * C4285 + C27525 * C4287) * C7239) *
               C27526 * C17724) *
              C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C5040 +
                      (C233 * C96 + C27526 * C239) * C5035 - C257 * C5041 -
                      C258 * C27283) *
                         C17723 +
                     (C22740 + C22741 - C22742 - C22743) * C17724) *
                        C27525 * C27521 +
                    ((C22742 - (C22741 + C22740) + C22743) * C17723 +
                     (C24346 - (C24347 + C24348) + C24349) * C17724) *
                        C27525 * C27515 +
                    ((C24348 + C24347 - C24346 - C24349) * C17723 +
                     (C21376 * C5040 + C21377 * C5035 -
                      (C233 * C4201 + C27526 * C4323) * C5041 -
                      (C233 * C4203 + C27526 * C4325) * C27283) *
                         C17724) *
                        C27525 * C7239) *
                   C27321) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27526 * C234) * C143 +
                       (C233 * C144 + C27526 * C296) * C27321) *
                          C17723 +
                      (C18760 + C18764) * C17724) *
                         C27525 * C5035 -
                     ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) *
                         C27525 * C27283) *
                        C27521 +
                    (((C1448 + C1456) * C17723 + (C3433 + C3437) * C17724) *
                         C27525 * C27283 -
                     ((C20522 + C20520) * C17724 + (C18764 + C18760) * C17723) *
                         C27525 * C5035) *
                        C27515 +
                    (((C20520 + C20522) * C17723 + (C21415 + C21419) * C17724) *
                         C27525 * C5035 -
                     (((C233 * C4243 + C27526 * C4361) * C27321 +
                       (C233 * C4201 + C27526 * C4323) * C143) *
                          C17724 +
                      (C3437 + C3433) * C17723) *
                         C27525 * C27283) *
                        C7239)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C7340 +
            (C233 * C189 + C27526 * C350) * C27521 - C18706 * C7341 -
            C18817 * C27515 + C20465 * C7342 + C20575 * C7239) *
               C17723 +
           (C18706 * C7340 + C18817 * C27521 - C20465 * C7341 -
            C20575 * C27515 + C21376 * C7342 + C21457 * C7239) *
               C17724) *
              C27525 * C27321 * C5035 +
          ((C7496 - (C7495 + C7494) + C7497 - C7498 - C7499) * C17723 +
           (C3378 * C7341 - (C1522 * C27521 + C1390 * C7340) + C3498 * C27515 -
            (C233 * C4201 + C27526 * C4323) * C7342 -
            (C233 * C4285 + C27526 * C4398) * C7239) *
               C17724) *
              C27525 * C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C5040 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C5035 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C5041 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27283) *
              C27525 * C27526 * C27521 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C5041 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C5035 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C5040) +
           (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 + C17724 * C3553) *
               C27283) *
              C27525 * C27526 * C27515 +
          ((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C5040 +
           (C17929 * C3195 + C17723 * C3552 + C17930 * C4204 + C17724 * C4436) *
               C5035 -
           (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 + C17723 * C3550) *
               C5041 -
           (C17930 * C4203 + C17724 * C4435 + C17929 * C3196 + C17723 * C3553) *
               C27283) *
              C27525 * C27526 * C7239) *
         C27321) /
        (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27321) *
               C27525 * C27526 * C5035 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27321 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27525 * C27526 * C27283) *
              C27521 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C143 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27321) *
               C27525 * C27526 * C27283 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27321 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C143) *
               C27525 * C27526 * C5035) *
              C27515 +
          (((C17929 * C3190 + C17723 * C3549 + C17930 * C4202 +
             C17724 * C4434) *
                C143 +
            (C17929 * C3252 + C17723 * C3611 + C17930 * C4244 +
             C17724 * C4472) *
                C27321) *
               C27525 * C27526 * C5035 -
           ((C17930 * C4243 + C17724 * C4471 + C17929 * C3253 +
             C17723 * C3612) *
                C27321 +
            (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 +
             C17723 * C3550) *
                C143) *
               C27525 * C27526 * C27283) *
              C7239)) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C7340 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27521 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C7341 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27515 +
           (C17929 * C3190 + C17723 * C3549 + C17930 * C4202 + C17724 * C4434) *
               C7342 +
           (C17929 * C3311 + C17723 * C3669 + C17930 * C4286 + C17724 * C4507) *
               C7239) *
              C27525 * C27526 * C27321 * C5035 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C7341 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27521 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C7340) +
           (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 + C17724 * C3670) *
               C27515 -
           (C17930 * C4201 + C17724 * C4433 + C17929 * C3191 + C17723 * C3550) *
               C7342 -
           (C17930 * C4285 + C17724 * C4508 + C17929 * C3312 + C17723 * C3670) *
               C7239) *
              C27525 * C27526 * C27321 * C27283)) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C85 +
                     (C9186 * C96 + C27525 * C104) * C75 -
                     (C9186 * C90 + C27525 * C95) * C86 -
                     (C9186 * C97 + C27525 * C105) * C76 +
                     (C9186 * C91 + C27525 * C98) * C87 +
                     (C9186 * C99 + C27525 * C106) * C77 -
                     (C9186 * C92 + C27525 * C100) * C88 -
                     (C9186 * C101 + C27525 * C107) * C78) *
                        C27526 * C17723 +
                    ((C9186 * C1191 + C27525 * C1197) * C85 +
                     (C9186 * C1196 + C27525 * C1202) * C75 -
                     (C9186 * C1189 + C27525 * C1193) * C86 -
                     (C9186 * C1195 + C27525 * C1201) * C76 +
                     (C9186 * C1190 + C27525 * C1194) * C87 +
                     (C9186 * C1198 + C27525 * C1203) * C77 -
                     (C9186 * C1192 + C27525 * C1199) * C88 -
                     (C9186 * C1200 + C27525 * C1204) * C78) *
                        C27526 * C17724) *
                   C27347 * C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C26163 +
                      (C9186 * C96 + C27525 * C104) * C27481 -
                      (C9186 * C90 + C27525 * C95) * C26156 -
                      (C9186 * C97 + C27525 * C105) * C27283) *
                         C27526 * C17723 +
                     (C18512 * C26163 + C18513 * C27481 - C18514 * C26156 -
                      C18515 * C27283) *
                         C27526 * C17724) *
                        C27347 * C1779 +
                    ((C10482 - (C10481 + C10480) + C10483) * C27526 * C17723 +
                     (C16234 - (C16235 + C16236) + C16237) * C27526 * C17724) *
                        C27347 * C1780 +
                    ((C10498 + C10497 - C10496 - C10499) * C27526 * C17723 +
                     (C11364 * C26163 + C11365 * C27481 -
                      (C9186 * C2675 + C27525 * C2683) * C26156 -
                      (C9186 * C2681 + C27525 * C2687) * C27283) *
                         C27526 * C17724) *
                        C27347 * C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C143 +
            (C9186 * C144 + C27525 * C149) * C27321) *
               C27526 * C17723 +
           ((C9186 * C1191 + C27525 * C1197) * C143 +
            (C9186 * C1257 + C27525 * C1261) * C27321) *
               C27526 * C17724) *
              C75 -
          (((C9186 * C1255 + C27525 * C1259) * C27321 +
            (C9186 * C1189 + C27525 * C1193) * C143) *
               C27526 * C17724 +
           ((C9186 * C145 + C27525 * C150) * C27321 +
            (C9186 * C90 + C27525 * C95) * C143) *
               C27526 * C17723) *
              C76 +
          (((C9186 * C91 + C27525 * C98) * C143 +
            (C9186 * C146 + C27525 * C151) * C27321) *
               C27526 * C17723 +
           ((C9186 * C1190 + C27525 * C1194) * C143 +
            (C9186 * C1256 + C27525 * C1260) * C27321) *
               C27526 * C17724) *
              C77 -
          (((C9186 * C1258 + C27525 * C1262) * C27321 +
            (C9186 * C1192 + C27525 * C1199) * C143) *
               C27526 * C17724 +
           ((C9186 * C147 + C27525 * C152) * C27321 +
            (C9186 * C92 + C27525 * C100) * C143) *
               C27526 * C17723) *
              C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C27526 * C17723 +
           (C18512 * C1846 + C18583 * C1779 - C11363 * C1847 - C11426 * C1780 +
            C11364 * C1848 + C11427 * C1781) *
               C27526 * C17724) *
              C27481 +
          ((C9526 * C1847 -
            ((C9186 * C145 + C27525 * C150) * C1779 +
             (C9186 * C90 + C27525 * C95) * C1846) +
            C9593 * C1780 - C10492 * C1848 - C10555 * C1781) *
               C27526 * C17723 +
           (C14116 * C1847 - (C18584 * C1779 + C18514 * C1846) +
            C14188 * C1780 - (C9186 * C2675 + C27525 * C2683) * C1848 -
            (C9186 * C2741 + C27525 * C2745) * C1781) *
               C27526 * C17724) *
              C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C188 +
                      (C9186 * C189 + C27525 * C194) * C27347) *
                         C27526 * C17723 +
                     ((C9186 * C1191 + C27525 * C1197) * C188 +
                      (C9186 * C1316 + C27525 * C1320) * C27347) *
                         C27526 * C17724) *
                        C27321 * C75 -
                    (((C9186 * C1315 + C27525 * C1319) * C27347 +
                      (C9186 * C1189 + C27525 * C1193) * C188) *
                         C27526 * C17724 +
                     ((C9186 * C190 + C27525 * C195) * C27347 +
                      (C9186 * C90 + C27525 * C95) * C188) *
                         C27526 * C17723) *
                        C27321 * C76 +
                    (((C9186 * C91 + C27525 * C98) * C188 +
                      (C9186 * C191 + C27525 * C196) * C27347) *
                         C27526 * C17723 +
                     ((C9186 * C1190 + C27525 * C1194) * C188 +
                      (C9186 * C1317 + C27525 * C1321) * C27347) *
                         C27526 * C17724) *
                        C27321 * C77 -
                    (((C9186 * C1318 + C27525 * C1322) * C27347 +
                      (C9186 * C1192 + C27525 * C1199) * C188) *
                         C27526 * C17724 +
                     ((C9186 * C192 + C27525 * C197) * C27347 +
                      (C9186 * C92 + C27525 * C100) * C188) *
                         C27526 * C17723) *
                        C27321 * C78)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C188 +
                       (C9186 * C189 + C27525 * C194) * C27347) *
                          C27526 * C17723 +
                      (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
                         C1779 -
                     ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
                      (C9657 + C9645) * C27526 * C17723) *
                         C1780 +
                     ((C10608 + C10614) * C27526 * C17723 +
                      (C11364 * C188 + C11491 * C27347) * C27526 * C17724) *
                         C1781) *
                        C27481 +
                    (((C9648 + C9658) * C27526 * C17723 +
                      (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
                         C1780 -
                     ((C18646 * C27347 + C18514 * C188) * C27526 * C17724 +
                      ((C9186 * C190 + C27525 * C195) * C27347 +
                       (C9186 * C90 + C27525 * C95) * C188) *
                          C27526 * C17723) *
                         C1779 -
                     (((C9186 * C2799 + C27525 * C2803) * C27347 +
                       (C9186 * C2675 + C27525 * C2683) * C188) *
                          C27526 * C17724 +
                      (C10615 + C10609) * C27526 * C17723) *
                         C1781) *
                        C27283)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27526 * C234) * C85 +
           (C233 * C96 + C27526 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C17723 +
          ((C233 * C1191 + C27526 * C1374) * C85 +
           (C233 * C1196 + C27526 * C1377) * C75 - C1390 * C86 - C1391 * C76 +
           C1392 * C87 + C1393 * C77 - (C233 * C1192 + C27526 * C1376) * C88 -
           (C233 * C1200 + C27526 * C1380) * C78) *
              C17724) *
         C27525 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C26163 +
            (C233 * C96 + C27526 * C239) * C27481 - C257 * C26156 -
            C258 * C27283) *
               C17723 +
           (C18706 * C26163 + C18707 * C27481 - C1390 * C26156 -
            C1391 * C27283) *
               C17724) *
              C27525 * C27347 * C1779 +
          ((C800 * C26156 -
            ((C233 * C606 + C27526 * C787) * C27481 +
             (C233 * C601 + C27526 * C784) * C26163) +
            C801 * C27283) *
               C17723 +
           (C5736 * C26156 -
            ((C233 * C2679 + C27526 * C2859) * C27481 +
             (C233 * C2673 + C27526 * C2855) * C26163) +
            C5737 * C27283) *
               C17724) *
              C27525 * C27347 * C1780 +
          (((C233 * C1784 + C27526 * C1961) * C26163 +
            (C233 * C1789 + C27526 * C1964) * C27481 - C1972 * C26156 -
            C1973 * C27283) *
               C17723 +
           ((C233 * C2676 + C27526 * C2858) * C26163 +
            (C233 * C2682 + C27526 * C2862) * C27481 -
            (C233 * C2675 + C27526 * C2857) * C26156 -
            (C233 * C2681 + C27526 * C2861) * C27283) *
               C17724) *
              C27525 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C143 +
            (C233 * C144 + C27526 * C296) * C27321) *
               C17723 +
           ((C233 * C1191 + C27526 * C1374) * C143 +
            (C233 * C1257 + C27526 * C1445) * C27321) *
               C17724) *
              C27525 * C75 -
          ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) * C27525 * C76 +
          ((C307 + C315) * C17723 + (C1451 + C1457) * C17724) * C27525 * C77 -
          (((C233 * C1258 + C27526 * C1446) * C27321 +
            (C233 * C1192 + C27526 * C1376) * C143) *
               C17724 +
           (C316 + C308) * C17723) *
              C27525 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C17723 +
           (C18706 * C1846 + C18763 * C1779 -
            (C233 * C2673 + C27526 * C2855) * C1847 -
            (C233 * C2739 + C27526 * C2913) * C1780 +
            (C233 * C2676 + C27526 * C2858) * C1848 +
            (C233 * C2742 + C27526 * C2914) * C1781) *
               C17724) *
              C27525 * C27481 +
          ((C2029 - (C2028 + C2027) + C2030 - C2031 - C2035) * C17723 +
           (C5736 * C1847 - (C1454 * C1779 + C1390 * C1846) + C5810 * C1780 -
            (C233 * C2675 + C27526 * C2857) * C1848 -
            (C233 * C2741 + C27526 * C2916) * C1781) *
               C17724) *
              C27525 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C17723 +
           ((C233 * C1191 + C27526 * C1374) * C188 +
            (C233 * C1316 + C27526 * C1507) * C27347) *
               C17724) *
              C27525 * C27321 * C75 -
          ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
              C27525 * C27321 * C76 +
          ((C361 + C369) * C17723 + (C1392 * C188 + C1523 * C27347) * C17724) *
              C27525 * C27321 * C77 -
          (((C233 * C1318 + C27526 * C1510) * C27347 +
            (C233 * C1192 + C27526 * C1376) * C188) *
               C17724 +
           (C370 + C362) * C17723) *
              C27525 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            (C18706 * C188 + C18817 * C27347) * C17724) *
               C27525 * C1779 -
           (((C233 * C2797 + C27526 * C2967) * C27347 +
             (C233 * C2673 + C27526 * C2855) * C188) *
                C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C1780 +
           (((C233 * C1784 + C27526 * C1961) * C188 +
             (C233 * C1905 + C27526 * C2085) * C27347) *
                C17723 +
            ((C233 * C2676 + C27526 * C2858) * C188 +
             (C233 * C2800 + C27526 * C2969) * C27347) *
                C17724) *
               C27525 * C1781) *
              C27481 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C1780 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C1779 -
           (((C233 * C2799 + C27526 * C2970) * C27347 +
             (C233 * C2675 + C27526 * C2857) * C188) *
                C17724 +
            (C2093 + C2089) * C17723) *
               C27525 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
              C85 +
          (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
              C75 -
          (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
              C86 -
          (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
              C76 +
          (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
              C87 +
          (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
              C77 -
          (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
              C88 -
          (C17930 * C1200 + C17724 * C1582 + C17929 * C101 + C17723 * C413) *
              C78) *
         C27525 * C27526 * C27347 * C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C26163 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27481 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C26156 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C27283) *
              C27525 * C27526 * C27347 * C1779 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C26156 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27481 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C26163) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C27283) *
              C27525 * C27526 * C27347 * C1780 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C26163 +
           (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 + C17724 * C3028) *
               C27481 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C26156 -
           (C17930 * C2681 + C17724 * C3027 + C17929 * C1790 + C17723 * C2147) *
               C27283) *
              C27525 * C27526 * C27347 * C1781)) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27321) *
              C27525 * C27526 * C75 -
          ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
               C27321 +
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C143) *
              C27525 * C27526 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C143 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
               C27321) *
              C27525 * C27526 * C77 -
          ((C17930 * C1258 + C17724 * C1648 + C17929 * C147 + C17723 * C470) *
               C27321 +
           (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
               C143) *
              C27525 * C27526 * C78) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1846 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C1779 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C1847 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C1780 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1848 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C1781) *
              C27525 * C27526 * C27481 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C1847 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C1779 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C1846) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C1780 -
           (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 + C17723 * C2144) *
               C1848 -
           (C17930 * C2741 + C17724 * C3082 + C17929 * C1850 + C17723 * C2206) *
               C1781) *
              C27525 * C27526 * C27283) *
         C27347) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27347) *
              C27525 * C27526 * C27321 * C75 -
          ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
               C27347 +
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C188) *
              C27525 * C27526 * C27321 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C188 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
               C27347) *
              C27525 * C27526 * C27321 * C77 -
          ((C17930 * C1318 + C17724 * C1712 + C17929 * C192 + C17723 * C524) *
               C27347 +
           (C17930 * C1192 + C17724 * C1578 + C17929 * C92 + C17723 * C408) *
               C188) *
              C27525 * C27526 * C27321 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C1779 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C1780 +
           ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C188 +
            (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 +
             C17724 * C3135) *
                C27347) *
               C27525 * C27526 * C1781) *
              C27481 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C1780 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C1779 -
           ((C17930 * C2799 + C17724 * C3136 + C17929 * C1906 +
             C17723 * C2268) *
                C27347 +
            (C17930 * C2675 + C17724 * C3023 + C17929 * C1785 +
             C17723 * C2144) *
                C188) *
               C27525 * C27526 * C1781) *
              C27283)) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C596 +
            (C9186 * C96 + C27525 * C104) * C591 -
            (C9186 * C90 + C27525 * C95) * C597 -
            (C9186 * C97 + C27525 * C105) * C592 +
            (C9186 * C91 + C27525 * C98) * C598 +
            (C9186 * C99 + C27525 * C106) * C593) *
               C27526 * C17723 +
           ((C9186 * C1191 + C27525 * C1197) * C596 +
            (C9186 * C1196 + C27525 * C1202) * C591 -
            (C9186 * C1189 + C27525 * C1193) * C597 -
            (C9186 * C1195 + C27525 * C1201) * C592 +
            (C9186 * C1190 + C27525 * C1194) * C598 +
            (C9186 * C1198 + C27525 * C1203) * C593) *
               C27526 * C17724) *
              C27347 * C27491 +
          ((C9532 - (C9531 + C9530) + C9533 - C9534 - C9535) * C27526 * C17723 +
           (C14116 * C597 - (C11362 * C591 + C11363 * C596) + C14117 * C592 -
            (C9186 * C5523 + C27525 * C5524) * C598 -
            (C9186 * C5525 + C27525 * C5526) * C593) *
               C27526 * C17724) *
              C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C2314 +
            (C9186 * C96 + C27525 * C104) * C27278) *
               C27526 * C17723 +
           (C18512 * C2314 + C18513 * C27278) * C27526 * C17724) *
              C27347 * C2310 -
          ((C11366 + C11367) * C27526 * C17724 +
           (C10977 + C10976) * C27526 * C17723) *
              C27347 * C2311 +
          ((C10979 + C10978) * C27526 * C17723 +
           (C11368 + C11369) * C27526 * C17724) *
              C27347 * C2312 -
          (((C9186 * C11350 + C27525 * C11352) * C27278 +
            (C9186 * C11349 + C27525 * C11351) * C2314) *
               C27526 * C17724 +
           (C10987 + C10986) * C27526 * C17723) *
              C27347 * C2313)) /
            (p * q * std::sqrt(p + q));
    d2eexy[43] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C665 +
                      (C9186 * C144 + C27525 * C149) * C27491 - C9524 * C666 -
                      C9592 * C27335) *
                         C27526 * C17723 +
                     ((C9186 * C1191 + C27525 * C1197) * C665 +
                      (C9186 * C1257 + C27525 * C1261) * C27491 -
                      C11363 * C666 - C11426 * C27335) *
                         C27526 * C17724) *
                        C591 +
                    ((C9526 * C666 -
                      ((C9186 * C145 + C27525 * C150) * C27491 +
                       (C9186 * C90 + C27525 * C95) * C665) +
                      C9593 * C27335) *
                         C27526 * C17723 +
                     (C14116 * C666 -
                      ((C9186 * C1255 + C27525 * C1259) * C27491 +
                       (C9186 * C1189 + C27525 * C1193) * C665) +
                      C14188 * C27335) *
                         C27526 * C17724) *
                        C592 +
                    (((C9186 * C91 + C27525 * C98) * C665 +
                      (C9186 * C146 + C27525 * C151) * C27491 - C9528 * C666 -
                      C9594 * C27335) *
                         C27526 * C17723 +
                     ((C9186 * C1190 + C27525 * C1194) * C665 +
                      (C9186 * C1256 + C27525 * C1260) * C27491 -
                      (C9186 * C5523 + C27525 * C5524) * C666 -
                      (C9186 * C5593 + C27525 * C5594) * C27335) *
                         C27526 * C17724) *
                        C593) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27525 * C94) * C2357 +
                     (C9186 * C144 + C27525 * C149) * C2310 - C9524 * C2358 -
                     C9592 * C2311 + C10494 * C2359 + C10554 * C2312 -
                     C10984 * C2360 - C11026 * C2313) *
                        C27526 * C17723 +
                    (C18512 * C2357 + C18583 * C2310 - C11363 * C2358 -
                     C11426 * C2311 + C11364 * C2359 + C11427 * C2312 -
                     (C9186 * C11349 + C27525 * C11351) * C2360 -
                     (C9186 * C11419 + C27525 * C11420) * C2313) *
                        C27526 * C17724) *
                   C27278 * C27347) /
                      (p * q * std::sqrt(p + q));
    d2eexz[43] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C188 +
                       (C9186 * C189 + C27525 * C194) * C27347) *
                          C27526 * C17723 +
                      ((C9186 * C1191 + C27525 * C1197) * C188 +
                       (C9186 * C1316 + C27525 * C1320) * C27347) *
                          C27526 * C17724) *
                         C27491 -
                     ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
                      (C9657 + C9645) * C27526 * C17723) *
                         C27335) *
                        C591 +
                    (((C9648 + C9658) * C27526 * C17723 +
                      (C14116 * C188 + C14260 * C27347) * C27526 * C17724) *
                         C27335 -
                     (((C9186 * C1315 + C27525 * C1319) * C27347 +
                       (C9186 * C1189 + C27525 * C1193) * C188) *
                          C27526 * C17724 +
                      ((C9186 * C190 + C27525 * C195) * C27347 +
                       (C9186 * C90 + C27525 * C95) * C188) *
                          C27526 * C17723) *
                         C27491) *
                        C592 +
                    ((((C9186 * C91 + C27525 * C98) * C188 +
                       (C9186 * C191 + C27525 * C196) * C27347) *
                          C27526 * C17723 +
                      ((C9186 * C1190 + C27525 * C1194) * C188 +
                       (C9186 * C1317 + C27525 * C1321) * C27347) *
                          C27526 * C17724) *
                         C27491 -
                     (((C9186 * C5661 + C27525 * C5662) * C27347 +
                       (C9186 * C5523 + C27525 * C5524) * C188) *
                          C27526 * C17724 +
                      (C9659 + C9651) * C27526 * C17723) *
                         C27335) *
                        C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C188 +
                      (C9186 * C189 + C27525 * C194) * C27347) *
                         C27526 * C17723 +
                     (C18512 * C188 + C18645 * C27347) * C27526 * C17724) *
                        C2310 -
                    ((C11490 * C27347 + C11363 * C188) * C27526 * C17724 +
                     (C9657 + C9645) * C27526 * C17723) *
                        C2311 +
                    ((C10608 + C10614) * C27526 * C17723 +
                     (C11364 * C188 + C11491 * C27347) * C27526 * C17724) *
                        C2312 -
                    (((C9186 * C11477 + C27525 * C11478) * C27347 +
                      (C9186 * C11349 + C27525 * C11351) * C188) *
                         C27526 * C17724 +
                     (C11067 + C11063) * C27526 * C17723) *
                        C2313) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[43] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C596 +
                      (C233 * C96 + C27526 * C239) * C591 - C257 * C597 -
                      C258 * C592 + C259 * C598 + C260 * C593) *
                         C17723 +
                     ((C233 * C1191 + C27526 * C1374) * C596 +
                      (C233 * C1196 + C27526 * C1377) * C591 - C1390 * C597 -
                      C1391 * C592 + C1392 * C598 + C1393 * C593) *
                         C17724) *
                        C27525 * C27347 * C27491 +
                    ((C800 * C597 -
                      ((C233 * C606 + C27526 * C787) * C591 +
                       (C233 * C601 + C27526 * C784) * C596) +
                      C801 * C592 - C802 * C598 - C803 * C593) *
                         C17723 +
                     (C5736 * C597 -
                      ((C233 * C2679 + C27526 * C2859) * C591 +
                       (C233 * C2673 + C27526 * C2855) * C596) +
                      C5737 * C592 - (C233 * C5523 + C27526 * C5729) * C598 -
                      (C233 * C5525 + C27526 * C5730) * C593) *
                         C17724) *
                        C27525 * C27347 * C27335)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C2314 +
                      (C233 * C96 + C27526 * C239) * C27278) *
                         C17723 +
                     (C18706 * C2314 + C18707 * C27278) * C17724) *
                        C27525 * C27347 * C2310 -
                    (((C233 * C2679 + C27526 * C2859) * C27278 +
                      (C233 * C2673 + C27526 * C2855) * C2314) *
                         C17724 +
                     ((C233 * C606 + C27526 * C787) * C27278 +
                      (C233 * C601 + C27526 * C784) * C2314) *
                         C17723) *
                        C27525 * C27347 * C2311 +
                    (((C233 * C1784 + C27526 * C1961) * C2314 +
                      (C233 * C1789 + C27526 * C1964) * C27278) *
                         C17723 +
                     ((C233 * C2676 + C27526 * C2858) * C2314 +
                      (C233 * C2682 + C27526 * C2862) * C27278) *
                         C17724) *
                        C27525 * C27347 * C2312 -
                    (((C233 * C11350 + C27526 * C11544) * C27278 +
                      (C233 * C11349 + C27526 * C11543) * C2314) *
                         C17724 +
                     ((C233 * C2318 + C27526 * C2440) * C27278 +
                      (C233 * C2316 + C27526 * C2438) * C2314) *
                         C17723) *
                        C27525 * C27347 * C2313)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[43] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27526 * C234) * C665 +
                      (C233 * C144 + C27526 * C296) * C27491 -
                      (C233 * C601 + C27526 * C784) * C666 -
                      (C233 * C668 + C27526 * C853) * C27335) *
                         C17723 +
                     ((C233 * C1191 + C27526 * C1374) * C665 +
                      (C233 * C1257 + C27526 * C1445) * C27491 -
                      (C233 * C2673 + C27526 * C2855) * C666 -
                      (C233 * C2739 + C27526 * C2913) * C27335) *
                         C17724) *
                        C27525 * C591 +
                    ((C860 - (C859 + C858) + C870) * C17723 +
                     (C6908 - (C6909 + C6910) + C6911) * C17724) *
                        C27525 * C592 +
                    ((C865 + C864 - C863 - C871) * C17723 +
                     (C1392 * C665 + C1455 * C27491 -
                      (C233 * C5523 + C27526 * C5729) * C666 -
                      (C233 * C5593 + C27526 * C5803) * C27335) *
                         C17724) *
                        C27525 * C593) *
                   C27347) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C233 * C89 + C27526 * C234) * C2357 +
                     (C233 * C144 + C27526 * C296) * C2310 -
                     (C233 * C601 + C27526 * C784) * C2358 -
                     (C233 * C668 + C27526 * C853) * C2311 +
                     (C233 * C1784 + C27526 * C1961) * C2359 +
                     (C233 * C1849 + C27526 * C2023) * C2312 -
                     (C233 * C2316 + C27526 * C2438) * C2360 -
                     (C233 * C2362 + C27526 * C2475) * C2313) *
                        C17723 +
                    (C18706 * C2357 + C18763 * C2310 -
                     (C233 * C2673 + C27526 * C2855) * C2358 -
                     (C233 * C2739 + C27526 * C2913) * C2311 +
                     (C233 * C2676 + C27526 * C2858) * C2359 +
                     (C233 * C2742 + C27526 * C2914) * C2312 -
                     (C233 * C11349 + C27526 * C11543) * C2360 -
                     (C233 * C11419 + C27526 * C11595) * C2313) *
                        C17724) *
                   C27525 * C27278 * C27347) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C188 +
             (C233 * C189 + C27526 * C350) * C27347) *
                C17723 +
            ((C233 * C1191 + C27526 * C1374) * C188 +
             (C233 * C1316 + C27526 * C1507) * C27347) *
                C17724) *
               C27525 * C27491 -
           (((C233 * C2797 + C27526 * C2967) * C27347 +
             (C233 * C2673 + C27526 * C2855) * C188) *
                C17724 +
            ((C233 * C726 + C27526 * C922) * C27347 +
             (C233 * C601 + C27526 * C784) * C188) *
                C17723) *
               C27525 * C27335) *
              C591 +
          (((C928 + C934) * C17723 + (C5736 * C188 + C5884 * C27347) * C17724) *
               C27525 * C27335 -
           ((C1522 * C27347 + C1390 * C188) * C17724 + (C368 + C356) * C17723) *
               C27525 * C27491) *
              C592 +
          (((C361 + C369) * C17723 + (C1392 * C188 + C1523 * C27347) * C17724) *
               C27525 * C27491 -
           (((C233 * C5661 + C27526 * C5877) * C27347 +
             (C233 * C5523 + C27526 * C5729) * C188) *
                C17724 +
            (C935 + C929) * C17723) *
               C27525 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C188 +
            (C233 * C189 + C27526 * C350) * C27347) *
               C17723 +
           (C18706 * C188 + C18817 * C27347) * C17724) *
              C27525 * C2310 -
          (((C233 * C2797 + C27526 * C2967) * C27347 +
            (C233 * C2673 + C27526 * C2855) * C188) *
               C17724 +
           ((C233 * C726 + C27526 * C922) * C27347 +
            (C233 * C601 + C27526 * C784) * C188) *
               C17723) *
              C27525 * C2311 +
          (((C233 * C1784 + C27526 * C1961) * C188 +
            (C233 * C1905 + C27526 * C2085) * C27347) *
               C17723 +
           ((C233 * C2676 + C27526 * C2858) * C188 +
            (C233 * C2800 + C27526 * C2969) * C27347) *
               C17724) *
              C27525 * C2312 -
          (((C233 * C11477 + C27526 * C11646) * C27347 +
            (C233 * C11349 + C27526 * C11543) * C188) *
               C17724 +
           ((C233 * C2400 + C27526 * C2512) * C27347 +
            (C233 * C2316 + C27526 * C2438) * C188) *
               C17723) *
              C27525 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C591 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C592 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C598 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C593) *
              C27525 * C27526 * C27347 * C27491 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C597 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C591 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C596) +
           (C17929 * C605 + C17723 * C990 + C17930 * C2680 + C17724 * C3026) *
               C592 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C598 -
           (C17930 * C5525 + C17724 * C5952 + C17929 * C608 + C17723 * C991) *
               C593) *
              C27525 * C27526 * C27347 * C27335)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C2314 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C27278) *
              C27525 * C27526 * C27347 * C2310 -
          ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
               C27278 +
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C2314) *
              C27525 * C27526 * C27347 * C2311 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C2314 +
           (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 + C17724 * C3028) *
               C27278) *
              C27525 * C27526 * C27347 * C2312 -
          ((C17930 * C11350 + C17724 * C11698 + C17929 * C2318 +
            C17723 * C2550) *
               C27278 +
           (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
            C17723 * C2548) *
               C2314) *
              C27525 * C27526 * C27347 * C2313)) /
            (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C665 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C27491 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C666 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C27335) *
              C27525 * C27526 * C591 +
          ((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
               C666 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27491 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C665) +
           (C17929 * C667 + C17723 * C1056 + C17930 * C2740 + C17724 * C3081) *
               C27335) *
              C27525 * C27526 * C592 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C665 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
               C27491 -
           (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
               C666 -
           (C17930 * C5593 + C17724 * C6025 + C17929 * C669 + C17723 * C1057) *
               C27335) *
              C27525 * C27526 * C593) *
         C27347) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
              C2357 +
          (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
              C2310 -
          (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
              C2358 -
          (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
              C2311 +
          (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
              C2359 +
          (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
              C2312 -
          (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
           C17723 * C2548) *
              C2360 -
          (C17930 * C11419 + C17724 * C11765 + C17929 * C2362 +
           C17723 * C2585) *
              C2313) *
         C27525 * C27526 * C27278 * C27347) /
            (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
                C27347) *
               C27525 * C27526 * C27491 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27347 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C188) *
               C27525 * C27526 * C27335) *
              C591 +
          (((C17929 * C599 + C17723 * C985 + C17930 * C2674 + C17724 * C3022) *
                C188 +
            (C17929 * C725 + C17723 * C1123 + C17930 * C2798 + C17724 * C3134) *
                C27347) *
               C27525 * C27526 * C27335 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27347 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27525 * C27526 * C27491) *
              C592 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
                C27347) *
               C27525 * C27526 * C27491 -
           ((C17930 * C5661 + C17724 * C6099 + C17929 * C727 + C17723 * C1125) *
                C27347 +
            (C17930 * C5523 + C17724 * C5951 + C17929 * C600 + C17723 * C987) *
                C188) *
               C27525 * C27526 * C27335) *
              C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27347) *
              C27525 * C27526 * C2310 -
          ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
               C27347 +
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C188) *
              C27525 * C27526 * C2311 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C188 +
           (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 + C17724 * C3135) *
               C27347) *
              C27525 * C27526 * C2312 -
          ((C17930 * C11477 + C17724 * C11822 + C17929 * C2400 +
            C17723 * C2622) *
               C27347 +
           (C17930 * C11349 + C17724 * C11697 + C17929 * C2316 +
            C17723 * C2548) *
               C188) *
              C27525 * C27526 * C2313) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eexx[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C596 +
                      (C9186 * C96 + C27525 * C104) * C591 -
                      (C9186 * C90 + C27525 * C95) * C597 -
                      (C9186 * C97 + C27525 * C105) * C592 +
                      (C9186 * C91 + C27525 * C98) * C598 +
                      (C9186 * C99 + C27525 * C106) * C593) *
                         C27526 * C17723 +
                     (C18518 + C18519 - C18520 - C18521 + C18522 + C18523) *
                         C27526 * C17724) *
                        C27492 +
                    ((C18520 - (C18519 + C18518) + C18521 - C18522 - C18523) *
                         C27526 * C17723 +
                     ((C9186 * C3191 + C27525 * C3194) * C597 -
                      ((C9186 * C3195 + C27525 * C3199) * C591 +
                       (C9186 * C3190 + C27525 * C3193) * C596) +
                      (C9186 * C3196 + C27525 * C3200) * C592 -
                      (C9186 * C3192 + C27525 * C3197) * C598 -
                      (C9186 * C3198 + C27525 * C3201) * C593) *
                         C27526 * C17724) *
                        C27359) *
                   C27321) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27525 * C94) * C2314 +
                       (C9186 * C96 + C27525 * C104) * C27278) *
                          C27526 * C17723 +
                      (C19774 + C19775) * C27526 * C17724) *
                         C27492 -
                     (((C9186 * C3195 + C27525 * C3199) * C27278 +
                       (C9186 * C3190 + C27525 * C3193) * C2314) *
                          C27526 * C17724 +
                      (C19775 + C19774) * C27526 * C17723) *
                         C27359) *
                        C1779 +
                    (((C11367 + C11366) * C27526 * C17723 +
                      (C12348 + C12349) * C27526 * C17724) *
                         C27359 -
                     ((C11366 + C11367) * C27526 * C17724 +
                      (C10977 + C10976) * C27526 * C17723) *
                         C27492) *
                        C1780 +
                    (((C10979 + C10978) * C27526 * C17723 +
                      (C11368 + C11369) * C27526 * C17724) *
                         C27492 -
                     (((C9186 * C12338 + C27525 * C12340) * C27278 +
                       (C9186 * C12337 + C27525 * C12339) * C2314) *
                          C27526 * C17724 +
                      (C11369 + C11368) * C27526 * C17723) *
                         C27359) *
                        C1781)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27525 * C94) * C143 +
             (C9186 * C144 + C27525 * C149) * C27321) *
                C27526 * C17723 +
            (C18574 + C18586) * C27526 * C17724) *
               C591 -
           ((C18587 + C18579) * C27526 * C17724 +
            ((C9186 * C145 + C27525 * C150) * C27321 +
             (C9186 * C90 + C27525 * C95) * C143) *
                C27526 * C17723) *
               C592 +
           (((C9186 * C91 + C27525 * C98) * C143 +
             (C9186 * C146 + C27525 * C151) * C27321) *
                C27526 * C17723 +
            (C18580 + C18588) * C27526 * C17724) *
               C593) *
              C27492 +
          (((C18579 + C18587) * C27526 * C17723 +
            ((C9186 * C3191 + C27525 * C3194) * C143 +
             (C9186 * C3253 + C27525 * C3256) * C27321) *
                C27526 * C17724) *
               C592 -
           (((C9186 * C3252 + C27525 * C3255) * C27321 +
             (C9186 * C3190 + C27525 * C3193) * C143) *
                C27526 * C17724 +
            (C18586 + C18574) * C27526 * C17723) *
               C591 -
           (((C9186 * C3254 + C27525 * C3257) * C27321 +
             (C9186 * C3192 + C27525 * C3197) * C143) *
                C27526 * C17724 +
            (C18588 + C18580) * C27526 * C17723) *
               C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27525 * C94) * C1846 +
            (C9186 * C144 + C27525 * C149) * C1779 - C9524 * C1847 -
            C9592 * C1780 + C10494 * C1848 + C10554 * C1781) *
               C27526 * C17723 +
           (C19826 + C19827 - C19828 - C19829 + C19830 + C19831) * C27526 *
               C17724) *
              C27278 * C27492 +
          ((C19828 - (C19827 + C19826) + C19829 - C19830 - C19831) * C27526 *
               C17723 +
           (C12346 * C1847 -
            ((C9186 * C3252 + C27525 * C3255) * C1779 +
             (C9186 * C3190 + C27525 * C3193) * C1846) +
            C12404 * C1780 - (C9186 * C12337 + C27525 * C12339) * C1848 -
            (C9186 * C12399 + C27525 * C12400) * C1781) *
               C27526 * C17724) *
              C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C1313 +
                      (C9186 * C189 + C27525 * C194) * C27492 - C18512 * C1314 -
                      C18645 * C27359) *
                         C27526 * C17723 +
                     (C18512 * C1313 + C18645 * C27492 -
                      (C9186 * C3190 + C27525 * C3193) * C1314 -
                      (C9186 * C3311 + C27525 * C3314) * C27359) *
                         C27526 * C17724) *
                        C27321 * C591 +
                    ((C18514 * C1314 -
                      ((C9186 * C190 + C27525 * C195) * C27492 +
                       (C9186 * C90 + C27525 * C95) * C1313) +
                      C18646 * C27359) *
                         C27526 * C17723 +
                     ((C9186 * C3191 + C27525 * C3194) * C1314 -
                      (C18646 * C27492 + C18514 * C1313) +
                      (C9186 * C3312 + C27525 * C3315) * C27359) *
                         C27526 * C17724) *
                        C27321 * C592 +
                    (((C9186 * C91 + C27525 * C98) * C1313 +
                      (C9186 * C191 + C27525 * C196) * C27492 - C18516 * C1314 -
                      C18647 * C27359) *
                         C27526 * C17723 +
                     (C18516 * C1313 + C18647 * C27492 -
                      (C9186 * C3192 + C27525 * C3197) * C1314 -
                      (C9186 * C3313 + C27525 * C3316) * C27359) *
                         C27526 * C17724) *
                        C27321 * C593)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27525 * C94) * C1313 +
                      (C9186 * C189 + C27525 * C194) * C27492 - C18512 * C1314 -
                      C18645 * C27359) *
                         C27526 * C17723 +
                     (C18512 * C1313 + C18645 * C27492 -
                      (C9186 * C3190 + C27525 * C3193) * C1314 -
                      (C9186 * C3311 + C27525 * C3314) * C27359) *
                         C27526 * C17724) *
                        C1779 +
                    ((C11482 - (C11481 + C11480) + C11492) * C27526 * C17723 +
                     (C12346 * C1314 - (C11490 * C27492 + C11363 * C1313) +
                      C12464 * C27359) *
                         C27526 * C17724) *
                        C1780 +
                    ((C11487 + C11486 - C11485 - C11493) * C27526 * C17723 +
                     (C11364 * C1313 + C11491 * C27492 -
                      (C9186 * C12337 + C27525 * C12339) * C1314 -
                      (C9186 * C12454 + C27525 * C12455) * C27359) *
                         C27526 * C17724) *
                        C1781) *
                   C27278) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C596 +
            (C233 * C96 + C27526 * C239) * C591 - C257 * C597 - C258 * C592 +
            C259 * C598 + C260 * C593) *
               C17723 +
           (C18708 + C18709 - C18702 - C18703 + C18704 + C18705) * C17724) *
              C27525 * C27492 +
          ((C18702 - (C18709 + C18708) + C18703 - C18704 - C18705) * C17723 +
           (C3378 * C597 -
            ((C233 * C3195 + C27526 * C3370) * C591 +
             (C233 * C3190 + C27526 * C3367) * C596) +
            C3379 * C592 - (C233 * C3192 + C27526 * C3369) * C598 -
            (C233 * C3198 + C27526 * C3372) * C593) *
               C17724) *
              C27525 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C2314 +
             (C233 * C96 + C27526 * C239) * C27278) *
                C17723 +
            (C19932 + C19933) * C17724) *
               C27525 * C27492 -
           (((C233 * C3195 + C27526 * C3370) * C27278 +
             (C233 * C3190 + C27526 * C3367) * C2314) *
                C17724 +
            (C19933 + C19932) * C17723) *
               C27525 * C27359) *
              C1779 +
          (((C19946 + C19947) * C17723 +
            ((C233 * C3732 + C27526 * C3898) * C2314 +
             (C233 * C3734 + C27526 * C3900) * C27278) *
                C17724) *
               C27525 * C27359 -
           ((C19947 + C19946) * C17724 +
            ((C233 * C606 + C27526 * C787) * C27278 +
             (C233 * C601 + C27526 * C784) * C2314) *
                C17723) *
               C27525 * C27492) *
              C1780 +
          ((((C233 * C1784 + C27526 * C1961) * C2314 +
             (C233 * C1789 + C27526 * C1964) * C27278) *
                C17723 +
            (C19948 + C19949) * C17724) *
               C27525 * C27492 -
           (((C233 * C12338 + C27526 * C12516) * C27278 +
             (C233 * C12337 + C27526 * C12515) * C2314) *
                C17724 +
            (C19949 + C19948) * C17723) *
               C27525 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27526 * C234) * C143 +
             (C233 * C144 + C27526 * C296) * C27321) *
                C17723 +
            (C18760 + C18764) * C17724) *
               C27525 * C591 -
           ((C1456 + C1448) * C17724 + (C314 + C302) * C17723) * C27525 * C592 +
           ((C307 + C315) * C17723 + (C1451 + C1457) * C17724) * C27525 *
               C593) *
              C27492 +
          (((C1448 + C1456) * C17723 + (C3433 + C3437) * C17724) * C27525 *
               C592 -
           (((C233 * C3252 + C27526 * C3429) * C27321 +
             (C233 * C3190 + C27526 * C3367) * C143) *
                C17724 +
            (C18764 + C18760) * C17723) *
               C27525 * C591 -
           (((C233 * C3254 + C27526 * C3431) * C27321 +
             (C233 * C3192 + C27526 * C3369) * C143) *
                C17724 +
            (C1457 + C1451) * C17723) *
               C27525 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1846 +
            (C233 * C144 + C27526 * C296) * C1779 -
            (C233 * C601 + C27526 * C784) * C1847 -
            (C233 * C668 + C27526 * C853) * C1780 +
            (C233 * C1784 + C27526 * C1961) * C1848 +
            (C233 * C1849 + C27526 * C2023) * C1781) *
               C17723 +
           (C20000 + C20001 - C20002 - C20010 + C20005 + C20011) * C17724) *
              C27525 * C27278 * C27492 +
          ((C20002 - (C20001 + C20000) + C20010 - C20005 - C20011) * C17723 +
           ((C233 * C3732 + C27526 * C3898) * C1847 -
            ((C233 * C3252 + C27526 * C3429) * C1779 +
             (C233 * C3190 + C27526 * C3367) * C1846) +
            (C233 * C3790 + C27526 * C3951) * C1780 -
            (C233 * C12337 + C27526 * C12515) * C1848 -
            (C233 * C12399 + C27526 * C12567) * C1781) *
               C17724) *
              C27525 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1313 +
            (C233 * C189 + C27526 * C350) * C27492 - C18706 * C1314 -
            C18817 * C27359) *
               C17723 +
           (C18706 * C1313 + C18817 * C27492 -
            (C233 * C3190 + C27526 * C3367) * C1314 -
            (C233 * C3311 + C27526 * C3487) * C27359) *
               C17724) *
              C27525 * C27321 * C591 +
          ((C1514 - (C1513 + C1512) + C1524) * C17723 +
           (C3378 * C1314 - (C1522 * C27492 + C1390 * C1313) + C3498 * C27359) *
               C17724) *
              C27525 * C27321 * C592 +
          ((C1519 + C1518 - C1517 - C1525) * C17723 +
           (C1392 * C1313 + C1523 * C27492 -
            (C233 * C3192 + C27526 * C3369) * C1314 -
            (C233 * C3313 + C27526 * C3489) * C27359) *
               C17724) *
              C27525 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27526 * C234) * C1313 +
            (C233 * C189 + C27526 * C350) * C27492 - C18706 * C1314 -
            C18817 * C27359) *
               C17723 +
           (C18706 * C1313 + C18817 * C27492 -
            (C233 * C3190 + C27526 * C3367) * C1314 -
            (C233 * C3311 + C27526 * C3487) * C27359) *
               C17724) *
              C27525 * C1779 +
          ((C19942 * C1314 -
            ((C233 * C726 + C27526 * C922) * C27492 +
             (C233 * C601 + C27526 * C784) * C1313) +
            C20066 * C27359) *
               C17723 +
           ((C233 * C3732 + C27526 * C3898) * C1314 -
            (C20066 * C27492 + C19942 * C1313) +
            (C233 * C3844 + C27526 * C4003) * C27359) *
               C17724) *
              C27525 * C1780 +
          (((C233 * C1784 + C27526 * C1961) * C1313 +
            (C233 * C1905 + C27526 * C2085) * C27492 - C19944 * C1314 -
            C20067 * C27359) *
               C17723 +
           (C19944 * C1313 + C20067 * C27492 -
            (C233 * C12337 + C27526 * C12515) * C1314 -
            (C233 * C12454 + C27526 * C12618) * C27359) *
               C17724) *
              C27525 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
               C591 -
           (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1195 + C17724 * C1580 + C17929 * C97 + C17723 * C411) *
               C592 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C598 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1198 + C17724 * C1581) *
               C593) *
              C27525 * C27526 * C27492 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C597 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C591 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C596) +
           (C17929 * C1195 + C17723 * C1580 + C17930 * C3196 + C17724 * C3553) *
               C592 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C598 -
           (C17930 * C3198 + C17724 * C3554 + C17929 * C1198 + C17723 * C1581) *
               C593) *
              C27525 * C27526 * C27359) *
         C27321) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C2314 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1196 + C17724 * C1579) *
                C27278) *
               C27525 * C27526 * C27492 -
           ((C17930 * C3195 + C17724 * C3552 + C17929 * C1196 +
             C17723 * C1579) *
                C27278 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C2314) *
               C27525 * C27526 * C27359) *
              C1779 +
          (((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 +
             C17724 * C4056) *
                C2314 +
            (C17929 * C2679 + C17723 * C3025 + C17930 * C3734 +
             C17724 * C4058) *
                C27278) *
               C27525 * C27526 * C27359 -
           ((C17930 * C2679 + C17724 * C3025 + C17929 * C606 + C17723 * C989) *
                C27278 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C2314) *
               C27525 * C27526 * C27492) *
              C1780 +
          (((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 +
             C17724 * C3024) *
                C2314 +
            (C17929 * C1789 + C17723 * C2146 + C17930 * C2682 +
             C17724 * C3028) *
                C27278) *
               C27525 * C27526 * C27492 -
           ((C17930 * C12338 + C17724 * C12670 + C17929 * C2682 +
             C17723 * C3028) *
                C27278 +
            (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
             C17723 * C3024) *
                C2314) *
               C27525 * C27526 * C27359) *
              C1781)) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
                C27321) *
               C27525 * C27526 * C591 -
           ((C17930 * C1255 + C17724 * C1645 + C17929 * C145 + C17723 * C468) *
                C27321 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27525 * C27526 * C592 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1256 + C17724 * C1646) *
                C27321) *
               C27525 * C27526 * C593) *
              C27492 +
          (((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 +
             C17724 * C3550) *
                C143 +
            (C17929 * C1255 + C17723 * C1645 + C17930 * C3253 +
             C17724 * C3612) *
                C27321) *
               C27525 * C27526 * C592 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C27321 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C143) *
               C27525 * C27526 * C591 -
           ((C17930 * C3254 + C17724 * C3613 + C17929 * C1256 +
             C17723 * C1646) *
                C27321 +
            (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 +
             C17723 * C1577) *
                C143) *
               C27525 * C27526 * C593) *
              C27359)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1846 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1257 + C17724 * C1647) *
               C1779 -
           (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
               C1847 -
           (C17930 * C2739 + C17724 * C3079 + C17929 * C668 + C17723 * C1055) *
               C1780 +
           (C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1848 +
           (C17929 * C1849 + C17723 * C2205 + C17930 * C2742 + C17724 * C3080) *
               C1781) *
              C27525 * C27526 * C27278 * C27492 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C1847 -
           ((C17930 * C3252 + C17724 * C3611 + C17929 * C1257 +
             C17723 * C1647) *
                C1779 +
            (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 +
             C17723 * C1576) *
                C1846) +
           (C17929 * C2739 + C17723 * C3079 + C17930 * C3790 + C17724 * C4109) *
               C1780 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C1848 -
           (C17930 * C12399 + C17724 * C12729 + C17929 * C2742 +
            C17723 * C3080) *
               C1781) *
              C27525 * C27526 * C27278 * C27359)) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1313 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27492 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C1314 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C27321 * C591 +
          ((C17929 * C1189 + C17723 * C1575 + C17930 * C3191 + C17724 * C3550) *
               C1314 -
           ((C17930 * C1315 + C17724 * C1710 + C17929 * C190 + C17723 * C522) *
                C27492 +
            (C17930 * C1189 + C17724 * C1575 + C17929 * C90 + C17723 * C406) *
                C1313) +
           (C17929 * C1315 + C17723 * C1710 + C17930 * C3312 + C17724 * C3670) *
               C27359) *
              C27525 * C27526 * C27321 * C592 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1190 + C17724 * C1577) *
               C1313 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1317 + C17724 * C1711) *
               C27492 -
           (C17930 * C3192 + C17724 * C3551 + C17929 * C1190 + C17723 * C1577) *
               C1314 -
           (C17930 * C3313 + C17724 * C3671 + C17929 * C1317 + C17723 * C1711) *
               C27359) *
              C27525 * C27526 * C27321 * C593)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1191 + C17724 * C1576) *
               C1313 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1316 + C17724 * C1709) *
               C27492 -
           (C17930 * C3190 + C17724 * C3549 + C17929 * C1191 + C17723 * C1576) *
               C1314 -
           (C17930 * C3311 + C17724 * C3669 + C17929 * C1316 + C17723 * C1709) *
               C27359) *
              C27525 * C27526 * C1779 +
          ((C17929 * C2673 + C17723 * C3021 + C17930 * C3732 + C17724 * C4056) *
               C1314 -
           ((C17930 * C2797 + C17724 * C3133 + C17929 * C726 + C17723 * C1124) *
                C27492 +
            (C17930 * C2673 + C17724 * C3021 + C17929 * C601 + C17723 * C986) *
                C1313) +
           (C17929 * C2797 + C17723 * C3133 + C17930 * C3844 + C17724 * C4161) *
               C27359) *
              C27525 * C27526 * C1780 +
          ((C17929 * C1784 + C17723 * C2143 + C17930 * C2676 + C17724 * C3024) *
               C1313 +
           (C17929 * C1905 + C17723 * C2267 + C17930 * C2800 + C17724 * C3135) *
               C27492 -
           (C17930 * C12337 + C17724 * C12669 + C17929 * C2676 +
            C17723 * C3024) *
               C1314 -
           (C17930 * C12454 + C17724 * C12783 + C17929 * C2800 +
            C17723 * C3135) *
               C27359) *
              C27525 * C27526 * C1781) *
         C27278) /
            (p * q * std::sqrt(p + q));
}
