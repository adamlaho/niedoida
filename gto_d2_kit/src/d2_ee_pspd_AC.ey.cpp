/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_pspd_AC.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
//
void second_derivative_ee_1012_13(const double ae,
                                  const double xA,
                                  const double yA,
                                  const double zA,
                                  const double be,
                                  const double xB,
                                  const double yB,
                                  const double zB,
                                  const double ce,
                                  const double xC,
                                  const double yC,
                                  const double zC,
                                  const double de,
                                  const double xD,
                                  const double yD,
                                  const double zD,
                                  const double* const bs,
                                  double* const d2eexx,
                                  double* const d2eexy,
                                  double* const d2eexz,
                                  double* const d2eeyx,
                                  double* const d2eeyy,
                                  double* const d2eeyz,
                                  double* const d2eezx,
                                  double* const d2eezy,
                                  double* const d2eezz)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C26122 = xA - xB;
    const double C26121 = ae + be;
    const double C26140 = 0 * ce;
    const double C26139 = ce * de;
    const double C26138 = 0 * de;
    const double C26137 = ce + de;
    const double C26136 = 0 * de;
    const double C26135 = xC - xD;
    const double C26191 = 0 * de;
    const double C26190 = yC - yD;
    const double C26206 = 0 * de;
    const double C26205 = zC - zD;
    const double C26249 = 0 * ce;
    const double C26245 = 0 * de;
    const double C26295 = 0 * ce;
    const double C26291 = 0 * de;
    const double C26329 = yA - yB;
    const double C26336 = zA - zB;
    const double C26342 = p + q;
    const double C26341 = p * q;
    const double C26347 = xP - xQ;
    const double C26346 = bs[2];
    const double C26356 = ae * ce;
    const double C26352 = bs[3];
    const double C26365 = bs[4];
    const double C26386 = bs[5];
    const double C26423 = yP - yQ;
    const double C26453 = zP - zQ;
    const double C89 = bs[0];
    const double C27467 = ae * be;
    const double C27466 = std::pow(C26122, 2);
    const double C27468 = 2 * C26121;
    const double C26145 = C26140 / C26137;
    const double C26142 = 2 * C26137;
    const double C26141 = std::pow(C26137, 2);
    const double C26348 = C26137 * C26121;
    const double C26144 = C26139 * C26135;
    const double C26143 = C26135 * C26138;
    const double C27271 = C26135 * de;
    const double C27270 = C26135 * ce;
    const double C27269 = std::pow(C26135, 2);
    const double C26192 = C26139 * C26190;
    const double C26246 = C26190 * C26191;
    const double C27299 = std::pow(C26190, 2);
    const double C27348 = C26190 * de;
    const double C27347 = C26190 * ce;
    const double C26207 = C26139 * C26205;
    const double C26292 = C26205 * C26206;
    const double C27310 = std::pow(C26205, 2);
    const double C27374 = C26205 * de;
    const double C27373 = C26205 * ce;
    const double C26254 = C26249 / C26137;
    const double C26300 = C26295 / C26137;
    const double C27476 = std::pow(C26329, 2);
    const double C27477 = std::pow(C26336, 2);
    const double C26343 = 2 * C26341;
    const double C26357 = C26347 * ae;
    const double C26355 = std::pow(C26347, 2);
    const double C26353 = C26347 * ce;
    const double C26426 = C26347 * C26423;
    const double C26425 = C26423 * ce;
    const double C26485 = C26423 * C26347;
    const double C26484 = C26423 * ae;
    const double C26513 = std::pow(C26423, 2);
    const double C26456 = C26347 * C26453;
    const double C26455 = C26453 * ce;
    const double C26527 = C26423 * C26453;
    const double C26540 = C26453 * C26347;
    const double C26539 = C26453 * ae;
    const double C26568 = C26453 * C26423;
    const double C26580 = std::pow(C26453, 2);
    const double C27491 = C27466 * C27467;
    const double C27492 = std::pow(C27468, -1);
    const double C27279 = std::pow(C26142, -1);
    const double C27479 = std::pow(C26142, -2);
    const double C26146 = 2 * C26141;
    const double C27475 = 4 * C26141;
    const double C26147 = C26143 / C26137;
    const double C27272 = C27269 * C26139;
    const double C26251 = C26246 / C26137;
    const double C27300 = C27299 * C26139;
    const double C26297 = C26292 / C26137;
    const double C27311 = C27310 * C26139;
    const double C27496 = C27476 * C27467;
    const double C27497 = C27477 * C27467;
    const double C26345 = C26343 / C26342;
    const double C104 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C26343 / C26342, 2) -
            (bs[1] * C26343) / C26342) *
           ae * ce) /
         C26137) /
        C26121;
    const double C90 = -(C26347 * bs[1] * C26343) / C26342;
    const double C600 = -(C26423 * bs[1] * C26343) / C26342;
    const double C1220 = -(C26453 * bs[1] * C26343) / C26342;
    const double C26360 = C26352 * C26357;
    const double C26371 = C26365 * C26357;
    const double C26395 = C26386 * C26357;
    const double C94 = (-(bs[1] * C26357 * C26343) / C26342) / C26121;
    const double C26367 = C26355 * C26365;
    const double C26390 = C26355 * C26386;
    const double C26359 = C26352 * C26353;
    const double C26368 = C26365 * C26353;
    const double C26391 = C26386 * C26353;
    const double C96 = (bs[1] * C26353 * C26343) / (C26342 * C26137);
    const double C26428 = C26426 * ae;
    const double C26427 = C26352 * C26425;
    const double C26433 = C26365 * C26425;
    const double C26440 = C26386 * C26425;
    const double C144 = (bs[1] * C26425 * C26343) / (C26342 * C26137);
    const double C26487 = C26485 * ae;
    const double C26486 = C26352 * C26484;
    const double C26492 = C26365 * C26484;
    const double C26499 = C26386 * C26484;
    const double C234 = (-(bs[1] * C26484 * C26343) / C26342) / C26121;
    const double C26515 = C26513 * C26365;
    const double C26520 = C26513 * C26386;
    const double C26458 = C26456 * ae;
    const double C26457 = C26352 * C26455;
    const double C26463 = C26365 * C26455;
    const double C26470 = C26386 * C26455;
    const double C189 = (bs[1] * C26455 * C26343) / (C26342 * C26137);
    const double C26528 = C26527 * ae;
    const double C26542 = C26540 * ae;
    const double C26541 = C26352 * C26539;
    const double C26547 = C26365 * C26539;
    const double C26554 = C26386 * C26539;
    const double C405 = (-(bs[1] * C26539 * C26343) / C26342) / C26121;
    const double C26569 = C26568 * ae;
    const double C26582 = C26580 * C26365;
    const double C26587 = C26580 * C26386;
    const double C27504 = C27491 / C26121;
    const double C26152 = C26138 / C26146;
    const double C26150 = C26136 / C26146;
    const double C26248 = C26191 / C26146;
    const double C26252 = C26245 / C26146;
    const double C26294 = C26206 / C26146;
    const double C26298 = C26291 / C26146;
    const double C26149 = 0 - C26147;
    const double C27273 = C27272 / C26137;
    const double C26255 = 0 - C26251;
    const double C27301 = C27300 / C26137;
    const double C26301 = 0 - C26297;
    const double C27312 = C27311 / C26137;
    const double C27507 = C27496 / C26121;
    const double C27508 = C27497 / C26121;
    const double C26349 = std::pow(C26345, 2);
    const double C26351 = -C26345;
    const double C26366 = std::pow(C26345, 4);
    const double C26430 = C26428 * ce;
    const double C26489 = C26487 * ce;
    const double C26460 = C26458 * ce;
    const double C26529 = C26528 * ce;
    const double C26544 = C26542 * ce;
    const double C26570 = C26569 * ce;
    const double C27513 = -C27504;
    const double C26154 = C26149 * ce;
    const double C27274 = -C27273;
    const double C26258 = C26255 * ce;
    const double C27302 = -C27301;
    const double C26304 = C26301 * ce;
    const double C27313 = -C27312;
    const double C27514 = -C27507;
    const double C27515 = -C27508;
    const double C26354 = C26346 * C26349;
    const double C105 =
        (-(C26349 * C26346 * C26347 * ae * ce) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26347 * ce) / C26348 -
        (C26347 *
         (C26346 * C26349 +
          std::pow(C26347, 2) * bs[3] * std::pow(-C26345, 3)) *
         ae * ce) /
            C26348;
    const double C149 =
        (-(C26349 * C26346 * C26347 * (yP - yQ) * ae * ce) / C26137) / C26121;
    const double C194 =
        (-(C26349 * C26346 * C26347 * (zP - zQ) * ae * ce) / C26137) / C26121;
    const double C239 =
        (-(C26349 * C26346 * C26423 * C26347 * ae * ce) / C26137) / C26121;
    const double C296 =
        (-((std::pow(C26423, 2) * C26346 * C26349 - (bs[1] * C26343) / C26342) *
           C26356) /
         C26137) /
        C26121;
    const double C350 =
        (-(C26349 * C26346 * C26423 * C26453 * ae * ce) / C26137) / C26121;
    const double C410 =
        (-(C26349 * C26346 * C26453 * C26347 * ae * ce) / C26137) / C26121;
    const double C467 =
        (-(C26349 * C26346 * C26453 * C26423 * ae * ce) / C26137) / C26121;
    const double C521 =
        (-((std::pow(C26453, 2) * C26346 * C26349 - (bs[1] * C26343) / C26342) *
           C26356) /
         C26137) /
        C26121;
    const double C95 = (C26347 * C26349 * C26346 * C26357) / C26121 -
                       (ae * bs[1] * C26343) / (C26342 * C26121);
    const double C97 = (ce * bs[1] * C26343) / (C26342 * C26137) -
                       (C26347 * C26349 * C26346 * C26353) / C26137;
    const double C145 = -(C26347 * C26349 * C26346 * C26425) / C26137;
    const double C190 = -(C26347 * C26349 * C26346 * C26455) / C26137;
    const double C235 = (C26347 * C26349 * C26346 * C26484) / C26121;
    const double C406 = (C26347 * C26349 * C26346 * C26539) / C26121;
    const double C607 = -(C26423 * C26349 * C26346 * C26353) / C26137;
    const double C608 = (C26423 * C26349 * C26346 * C26357) / C26121;
    const double C676 = (ce * bs[1] * C26343) / (C26342 * C26137) -
                        (C26423 * C26349 * C26346 * C26425) / C26137;
    const double C738 = -(C26423 * C26349 * C26346 * C26455) / C26137;
    const double C800 = (C26423 * C26349 * C26346 * C26484) / C26121 -
                        (ae * bs[1] * C26343) / (C26342 * C26121);
    const double C1008 = (C26423 * C26349 * C26346 * C26539) / C26121;
    const double C1227 = -(C26453 * C26349 * C26346 * C26353) / C26137;
    const double C1228 = (C26453 * C26349 * C26346 * C26357) / C26121;
    const double C1294 = -(C26453 * C26349 * C26346 * C26425) / C26137;
    const double C1358 = (ce * bs[1] * C26343) / (C26342 * C26137) -
                         (C26453 * C26349 * C26346 * C26455) / C26137;
    const double C1420 = (C26453 * C26349 * C26346 * C26484) / C26121;
    const double C1628 = (C26453 * C26349 * C26346 * C26539) / C26121 -
                         (ae * bs[1] * C26343) / (C26342 * C26121);
    const double C26358 = std::pow(C26351, 3);
    const double C26387 = std::pow(C26351, 5);
    const double C26375 = C26366 * C26371;
    const double C26374 = C26366 * C26368;
    const double C26373 = C26367 * C26366;
    const double C26385 = C26365 * C26366;
    const double C26435 = C26366 * C26433;
    const double C26465 = C26366 * C26463;
    const double C26494 = C26366 * C26492;
    const double C26516 = C26515 * C26366;
    const double C26549 = C26366 * C26547;
    const double C26583 = C26582 * C26366;
    const double C26432 = C26365 * C26430;
    const double C26438 = C26386 * C26430;
    const double C26491 = C26365 * C26489;
    const double C26497 = C26386 * C26489;
    const double C26462 = C26365 * C26460;
    const double C26468 = C26386 * C26460;
    const double C26531 = C26365 * C26529;
    const double C26534 = C26386 * C26529;
    const double C26546 = C26365 * C26544;
    const double C26552 = C26386 * C26544;
    const double C26572 = C26365 * C26570;
    const double C26575 = C26386 * C26570;
    const double C27516 = std::exp(C27513);
    const double C26157 = C26154 / C26137;
    const double C27275 = std::exp(C27274);
    const double C26260 = C26258 / C26137;
    const double C27303 = std::exp(C27302);
    const double C26306 = C26304 / C26137;
    const double C27314 = std::exp(C27313);
    const double C27517 = std::exp(C27514);
    const double C27518 = std::exp(C27515);
    const double C91 = C26354 * C26355 - (bs[1] * C26343) / C26342;
    const double C598 = C26423 * C26347 * C26354;
    const double C601 = C26354 * C26513 - (bs[1] * C26343) / C26342;
    const double C1218 = C26453 * C26347 * C26354;
    const double C1221 = C26354 * C26580 - (bs[1] * C26343) / C26342;
    const double C2885 = C26453 * C26423 * C26354;
    const double C26362 = C26358 * C26360;
    const double C26361 = C26358 * C26359;
    const double C26364 = C26352 * C26358;
    const double C26429 = C26358 * C26427;
    const double C26459 = C26358 * C26457;
    const double C26488 = C26358 * C26486;
    const double C26543 = C26358 * C26541;
    const double C150 =
        (-(C26347 * C26358 * C26352 * C26347 * C26423 * ae * ce) / C26137) /
            C26121 -
        (ae * C26349 * C26346 * C26423 * ce) / C26348;
    const double C195 =
        (-(C26347 * C26358 * C26352 * C26347 * C26453 * ae * ce) / C26137) /
            C26121 -
        (ae * C26349 * C26346 * C26453 * ce) / C26348;
    const double C240 =
        (-(C26347 * C26358 * C26352 * C26423 * C26347 * ae * ce) / C26137) /
            C26121 -
        (C26349 * C26346 * C26423 * ae * ce) / C26348;
    const double C297 =
        (-(C26347 * (C26354 + std::pow(C26423, 2) * C26352 * C26358) * C26356) /
         C26137) /
        C26121;
    const double C351 =
        (-(C26347 * C26358 * C26352 * C26423 * C26453 * ae * ce) / C26137) /
        C26121;
    const double C352 =
        (-(C26366 * C26365 * C26529 * C26355) / C26137) / C26121 -
        (C26358 * C26352 * C26529) / C26348;
    const double C411 =
        (-(C26347 * C26358 * C26352 * C26453 * C26347 * ae * ce) / C26137) /
            C26121 -
        (C26349 * C26346 * C26453 * ae * ce) / C26348;
    const double C468 =
        (-(C26347 * C26358 * C26352 * C26453 * C26423 * ae * ce) / C26137) /
        C26121;
    const double C469 =
        (-(C26366 * C26365 * C26570 * C26355) / C26137) / C26121 -
        (C26358 * C26352 * C26570) / C26348;
    const double C522 =
        (-(C26347 * (C26354 + std::pow(C26453, 2) * C26352 * C26358) * C26356) /
         C26137) /
        C26121;
    const double C617 =
        (-(C26423 * (C26354 + C26355 * C26352 * C26358) * C26356) / C26137) /
        C26121;
    const double C682 =
        (-(C26423 * C26358 * C26352 * C26430) / C26137) / C26121 -
        (C26349 * C26346 * C26357 * ce) / C26348;
    const double C744 =
        (-(C26423 * C26358 * C26352 * C26460) / C26137) / C26121;
    const double C805 =
        (-(C26423 * C26358 * C26352 * C26489) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26353) / C26348;
    const double C873 =
        (-(C26349 * C26346 * C26484 * ce) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26425) / C26348 -
        (C26423 * (C26354 + C26513 * C26352 * C26358) * C26356) / C26348;
    const double C942 =
        (-(C26423 * C26358 * C26352 * C26529) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26455) / C26348;
    const double C1013 =
        (-(C26423 * C26358 * C26352 * C26544) / C26137) / C26121;
    const double C1081 =
        (-(C26423 * C26358 * C26352 * C26570) / C26137) / C26121 -
        (C26349 * C26346 * C26539 * ce) / C26348;
    const double C1150 =
        (-(C26423 * (C26354 + C26580 * C26352 * C26358) * C26356) / C26137) /
        C26121;
    const double C1237 =
        (-(C26453 * (C26354 + C26355 * C26352 * C26358) * C26356) / C26137) /
        C26121;
    const double C1300 =
        (-(C26453 * C26358 * C26352 * C26430) / C26137) / C26121;
    const double C1364 =
        (-(C26453 * C26358 * C26352 * C26460) / C26137) / C26121 -
        (C26349 * C26346 * C26357 * ce) / C26348;
    const double C1425 =
        (-(C26453 * C26358 * C26352 * C26489) / C26137) / C26121;
    const double C1495 =
        (-(C26453 * (C26354 + C26513 * C26352 * C26358) * C26356) / C26137) /
        C26121;
    const double C1559 =
        (-(C26453 * C26358 * C26352 * C26529) / C26137) / C26121 -
        (C26349 * C26346 * C26484 * ce) / C26348;
    const double C1633 =
        (-(C26453 * C26358 * C26352 * C26544) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26353) / C26348;
    const double C1703 =
        (-(C26453 * C26358 * C26352 * C26570) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26425) / C26348;
    const double C1767 =
        (-(C26349 * C26346 * C26539 * ce) / C26137) / C26121 -
        (ae * C26349 * C26346 * C26455) / C26348 -
        (C26453 * (C26354 + C26580 * C26352 * C26358) * C26356) / C26348;
    const double C26402 = C26387 * C26395;
    const double C26399 = C26387 * C26391;
    const double C26398 = C26390 * C26387;
    const double C26443 = C26387 * C26440;
    const double C26473 = C26387 * C26470;
    const double C26502 = C26387 * C26499;
    const double C26521 = C26520 * C26387;
    const double C26557 = C26387 * C26554;
    const double C26588 = C26587 * C26387;
    const double C26378 = C26347 * C26375;
    const double C26383 = C26375 * ce;
    const double C26789 = C26423 * C26375;
    const double C26963 = C26453 * C26375;
    const double C26377 = C26347 * C26374;
    const double C26384 = ae * C26374;
    const double C26799 = C26423 * C26374;
    const double C26978 = C26453 * C26374;
    const double C26396 = C26385 * ae;
    const double C26394 = C26385 * C26355;
    const double C26393 = C26347 * C26385;
    const double C26392 = C26385 * ce;
    const double C26878 = C26385 * C26513;
    const double C26877 = C26423 * C26385;
    const double C27000 = C26385 * C26580;
    const double C26999 = C26453 * C26385;
    const double C26439 = ae * C26435;
    const double C26437 = C26347 * C26435;
    const double C26755 = C26423 * C26435;
    const double C26987 = C26453 * C26435;
    const double C26469 = ae * C26465;
    const double C26467 = C26347 * C26465;
    const double C26803 = C26423 * C26465;
    const double C26843 = C26453 * C26465;
    const double C26498 = C26494 * ce;
    const double C26496 = C26347 * C26494;
    const double C26757 = C26423 * C26494;
    const double C26974 = C26453 * C26494;
    const double C26553 = C26549 * ce;
    const double C26551 = C26347 * C26549;
    const double C26804 = C26423 * C26549;
    const double C26845 = C26453 * C26549;
    const double C26434 = C26366 * C26432;
    const double C26441 = C26387 * C26438;
    const double C26493 = C26366 * C26491;
    const double C26500 = C26387 * C26497;
    const double C26464 = C26366 * C26462;
    const double C26471 = C26387 * C26468;
    const double C26532 = C26366 * C26531;
    const double C26535 = C26387 * C26534;
    const double C26548 = C26366 * C26546;
    const double C26555 = C26387 * C26552;
    const double C26573 = C26366 * C26572;
    const double C26576 = C26387 * C26575;
    const double C9513 = C27516 * C608;
    const double C18501 = C27516 * C1228;
    const double C83 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27516 - (C26122 * 2 * ae * be * C26122 * C27516) / C26121) * be) /
            C26121;
    const double C84 =
        (-(2 * ae * be * C26122 * C27516) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C9186 = -(2 * ae * be * C26122 * C27516) / C26121;
    const double C73 = -(C27516 * C26122 * be) / C26121;
    const double C74 = C27492 * C27516;
    const double C26159 = C26157 - C26150;
    const double C26148 = C26144 * C27275;
    const double C27276 = C27275 * C27270;
    const double C27280 = C27279 * C27275;
    const double C27472 = C27275 * C27271;
    const double C27469 = C27275 / C26142;
    const double C3553 = C27479 * C27275;
    const double C26262 = C26260 - C26252;
    const double C26193 = C26192 * C27303;
    const double C143 = -(2 * C26139 * (yC - yD) * C27303) / C26137;
    const double C27349 = C27303 * C27347;
    const double C27352 = C27279 * C27303;
    const double C27483 = C27303 * C27348;
    const double C27478 = C27303 / C26142;
    const double C595 = C27479 * C27303;
    const double C26308 = C26306 - C26298;
    const double C26208 = C26207 * C27314;
    const double C188 = -(2 * C26139 * (zC - zD) * C27314) / C26137;
    const double C27375 = C27314 * C27373;
    const double C27378 = C27279 * C27314;
    const double C27487 = C27314 * C27374;
    const double C27480 = C27314 / C26142;
    const double C1217 = C27479 * C27314;
    const double C246 = C27517 * C235;
    const double C18715 = C27517 * C1420;
    const double C233 = -(2 * ae * be * (yA - yB) * C27517) / C26121;
    const double C9289 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27517 - (C26329 * 2 * ae * be * C26329 * C27517) / C26121) * be) /
            C26121;
    const double C9290 =
        (-(2 * ae * be * C26329 * C27517) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C9184 = -(C27517 * C26329 * be) / C26121;
    const double C9185 = C27492 * C27517;
    const double C417 = C27518 * C406;
    const double C9877 = C27518 * C1008;
    const double C404 = -(2 * ae * be * (zA - zB) * C27518) / C26121;
    const double C17929 =
        (-(0 * be) / C26121) / (2 * C26121) -
        ((C27518 - (C26336 * 2 * ae * be * C26336 * C27518) / C26121) * be) /
            C26121;
    const double C17930 =
        (-(2 * ae * be * C26336 * C27518) / C26121) / (2 * C26121) -
        (0 * be) / C26121;
    const double C17723 = -(C27518 * C26336 * be) / C26121;
    const double C17724 = C27492 * C27518;
    const double C98 =
        (C26349 * C26346 * C26357 + C26347 * (C26347 * C26362 + C26354 * ae) +
         C26347 * C26354 * ae) /
        C26121;
    const double C604 = (C26423 * (C26347 * C26362 + C26354 * ae)) / C26121;
    const double C610 = (C26349 * C26346 * C26357 + C26362 * C26513) / C26121;
    const double C1224 = (C26453 * (C26347 * C26362 + C26354 * ae)) / C26121;
    const double C1230 = (C26349 * C26346 * C26357 + C26362 * C26580) / C26121;
    const double C2888 = (C26453 * C26423 * C26362) / C26121;
    const double C4022 =
        (2 * C26423 * C26362 + C26423 * (C26362 + C26375 * C26513)) / C26121;
    const double C5936 = (C26453 * (C26362 + C26375 * C26513)) / C26121;
    const double C7326 =
        (2 * C26453 * C26362 + C26453 * (C26362 + C26375 * C26580)) / C26121;
    const double C106 =
        (-(ae * (C26347 * C26361 + C26354 * ce)) / C26137) / C26121 -
        ((C26354 + C26355 * C26352 * C26358) * C26356) / C26348 -
        ((C26347 * C26362 + C26354 * ae) * ce) / C26348 +
        C26347 * ((-(C26362 * ce) / C26137) / C26121 - (ae * C26361) / C26348 -
                  (C26347 *
                   (C26352 * C26358 + C26355 * bs[4] * std::pow(C26345, 4)) *
                   C26356) /
                      C26348);
    const double C99 = -(C26347 * (C26347 * C26361 + C26354 * ce) +
                         C26349 * C26346 * C26353 + C26347 * C26354 * ce) /
                       C26137;
    const double C606 = -(C26423 * (C26347 * C26361 + C26354 * ce)) / C26137;
    const double C612 = -(C26361 * C26513 + C26349 * C26346 * C26353) / C26137;
    const double C1226 = -(C26453 * (C26347 * C26361 + C26354 * ce)) / C26137;
    const double C1232 = -(C26361 * C26580 + C26349 * C26346 * C26353) / C26137;
    const double C2890 = -(C26453 * C26423 * C26361) / C26137;
    const double C4020 = (-2 * C26423 * C26361) / C26137 -
                         (C26423 * (C26374 * C26513 + C26361)) / C26137;
    const double C5934 = -(C26453 * (C26374 * C26513 + C26361)) / C26137;
    const double C7324 = (-2 * C26453 * C26361) / C26137 -
                         (C26453 * (C26374 * C26580 + C26361)) / C26137;
    const double C26372 = C26364 * ae;
    const double C26370 = C26347 * C26364;
    const double C26369 = C26364 * ce;
    const double C26376 = C26364 + C26373;
    const double C26517 = C26364 + C26516;
    const double C26584 = C26364 + C26583;
    const double C26756 = C26423 * C26364;
    const double C26844 = C26453 * C26364;
    const double C298 =
        (-((C26364 + C26513 * C26365 * C26366) * C26356 * C26355) / C26137) /
            C26121 -
        ((C26354 + C26513 * C26352 * C26358) * C26356) / C26348;
    const double C523 =
        (-((C26364 + C26580 * C26365 * C26366) * C26356 * C26355) / C26137) /
            C26121 -
        ((C26354 + C26580 * C26352 * C26358) * C26356) / C26348;
    const double C92 =
        2 * C26347 * C26354 + C26347 * (C26354 + C26364 * C26355);
    const double C599 = C26423 * (C26354 + C26364 * C26355);
    const double C1219 = C26453 * (C26354 + C26364 * C26355);
    const double C4018 =
        2 * C26423 * C26354 + C26423 * (C26354 + C26364 * C26513);
    const double C5932 = C26453 * (C26354 + C26364 * C26513);
    const double C7322 =
        2 * C26453 * C26354 + C26453 * (C26354 + C26364 * C26580);
    const double C151 =
        (-(ae * C26347 * C26429) / C26137) / C26121 -
        (C26358 * C26352 * C26430) / C26348 +
        C26347 * ((-(C26347 * C26366 * C26365 * C26430) / C26137) / C26121 -
                  (ae * C26429) / C26348);
    const double C146 = -(C26429 * C26355 + C26349 * C26346 * C26425) / C26137;
    const double C147 = (-2 * C26347 * C26429) / C26137 -
                        (C26347 * (C26435 * C26355 + C26429)) / C26137;
    const double C675 =
        -(C26423 * C26347 * C26429 + C26347 * C26354 * ce) / C26137;
    const double C677 = -(C26423 * (C26423 * C26429 + C26354 * ce) +
                          C26349 * C26346 * C26425 + C26423 * C26354 * ce) /
                        C26137;
    const double C679 = -(C26423 * (C26435 * C26355 + C26429) +
                          (C26354 + C26364 * C26355) * ce) /
                        C26137;
    const double C1292 = -(C26453 * C26347 * C26429) / C26137;
    const double C1293 = -(C26453 * (C26435 * C26355 + C26429)) / C26137;
    const double C1295 = -(C26429 * C26580 + C26349 * C26346 * C26425) / C26137;
    const double C2963 = -(C26453 * (C26423 * C26429 + C26354 * ce)) / C26137;
    const double C7364 = (-2 * C26453 * C26429) / C26137 -
                         (C26453 * (C26435 * C26580 + C26429)) / C26137;
    const double C196 =
        (-(ae * C26347 * C26459) / C26137) / C26121 -
        (C26358 * C26352 * C26460) / C26348 +
        C26347 * ((-(C26347 * C26366 * C26365 * C26460) / C26137) / C26121 -
                  (ae * C26459) / C26348);
    const double C191 = -(C26459 * C26355 + C26349 * C26346 * C26455) / C26137;
    const double C192 = (-2 * C26347 * C26459) / C26137 -
                        (C26347 * (C26465 * C26355 + C26459)) / C26137;
    const double C737 = -(C26423 * C26347 * C26459) / C26137;
    const double C739 = -(C26459 * C26513 + C26349 * C26346 * C26455) / C26137;
    const double C741 = -(C26423 * (C26465 * C26355 + C26459)) / C26137;
    const double C1357 =
        -(C26453 * C26347 * C26459 + C26347 * C26354 * ce) / C26137;
    const double C1359 = -(C26453 * (C26453 * C26459 + C26354 * ce) +
                           C26349 * C26346 * C26455 + C26453 * C26354 * ce) /
                         C26137;
    const double C1361 = -(C26453 * (C26465 * C26355 + C26459) +
                           (C26354 + C26364 * C26355) * ce) /
                         C26137;
    const double C3035 =
        -(C26453 * C26423 * C26459 + C26423 * C26354 * ce) / C26137;
    const double C4102 = (-2 * C26423 * C26459) / C26137 -
                         (C26423 * (C26465 * C26513 + C26459)) / C26137;
    const double C6044 = -(C26453 * (C26465 * C26513 + C26459) +
                           (C26354 + C26364 * C26513) * ce) /
                         C26137;
    const double C241 =
        (-(C26347 * C26488 * ce) / C26137) / C26121 -
        (C26358 * C26352 * C26489) / C26348 +
        C26347 * ((-(C26347 * C26366 * C26365 * C26489) / C26137) / C26121 -
                  (C26488 * ce) / C26348);
    const double C236 = (C26349 * C26346 * C26484 + C26488 * C26355) / C26121;
    const double C237 =
        (2 * C26347 * C26488 + C26347 * (C26488 + C26494 * C26355)) / C26121;
    const double C799 =
        (C26423 * C26347 * C26488 + C26347 * C26354 * ae) / C26121;
    const double C801 = (C26423 * (C26488 + C26494 * C26355) +
                         (C26354 + C26364 * C26355) * ae) /
                        C26121;
    const double C802 =
        (C26349 * C26346 * C26484 + C26423 * (C26423 * C26488 + C26354 * ae) +
         C26423 * C26354 * ae) /
        C26121;
    const double C1419 = (C26453 * C26347 * C26488) / C26121;
    const double C1421 = (C26453 * (C26488 + C26494 * C26355)) / C26121;
    const double C1422 = (C26349 * C26346 * C26484 + C26488 * C26580) / C26121;
    const double C3107 = (C26453 * (C26423 * C26488 + C26354 * ae)) / C26121;
    const double C7444 =
        (2 * C26453 * C26488 + C26453 * (C26488 + C26494 * C26580)) / C26121;
    const double C412 =
        (-(C26347 * C26543 * ce) / C26137) / C26121 -
        (C26358 * C26352 * C26544) / C26348 +
        C26347 * ((-(C26347 * C26366 * C26365 * C26544) / C26137) / C26121 -
                  (C26543 * ce) / C26348);
    const double C407 = (C26349 * C26346 * C26539 + C26543 * C26355) / C26121;
    const double C408 =
        (2 * C26347 * C26543 + C26347 * (C26543 + C26549 * C26355)) / C26121;
    const double C1007 = (C26423 * C26347 * C26543) / C26121;
    const double C1009 = (C26423 * (C26543 + C26549 * C26355)) / C26121;
    const double C1010 = (C26349 * C26346 * C26539 + C26543 * C26513) / C26121;
    const double C1627 =
        (C26453 * C26347 * C26543 + C26347 * C26354 * ae) / C26121;
    const double C1629 = (C26453 * (C26543 + C26549 * C26355) +
                          (C26354 + C26364 * C26355) * ae) /
                         C26121;
    const double C1630 =
        (C26349 * C26346 * C26539 + C26453 * (C26453 * C26543 + C26354 * ae) +
         C26453 * C26354 * ae) /
        C26121;
    const double C3337 =
        (C26453 * C26423 * C26543 + C26423 * C26354 * ae) / C26121;
    const double C4250 =
        (2 * C26423 * C26543 + C26423 * (C26543 + C26549 * C26513)) / C26121;
    const double C6256 = (C26453 * (C26543 + C26549 * C26513) +
                          (C26354 + C26364 * C26513) * ae) /
                         C26121;
    const double C248 = C27517 * C240;
    const double C304 = C27517 * C297;
    const double C358 = C27517 * C351;
    const double C360 = C27517 * C352;
    const double C419 = C27518 * C411;
    const double C475 = C27518 * C468;
    const double C477 = C27518 * C469;
    const double C529 = C27518 * C522;
    const double C9515 = C27516 * C617;
    const double C9595 = C27516 * C682;
    const double C9658 = C27516 * C744;
    const double C9879 = C27518 * C1013;
    const double C9947 = C27518 * C1081;
    const double C10004 = C27518 * C1150;
    const double C18503 = C27516 * C1237;
    const double C18584 = C27516 * C1300;
    const double C18653 = C27516 * C1364;
    const double C18717 = C27517 * C1425;
    const double C18786 = C27517 * C1495;
    const double C18845 = C27517 * C1559;
    const double C26407 = C26347 * C26402;
    const double C26858 = C26402 * C26513;
    const double C26943 = C26423 * C26402;
    const double C26965 = C26402 * C26580;
    const double C26406 = C26347 * C26399;
    const double C26867 = C26399 * C26513;
    const double C26949 = C26423 * C26399;
    const double C26980 = C26399 * C26580;
    const double C26405 = C26385 + C26398;
    const double C26445 = C26443 * C26355;
    const double C26762 = C26347 * C26443;
    const double C26876 = C26423 * C26443;
    const double C26989 = C26443 * C26580;
    const double C26475 = C26473 * C26355;
    const double C26771 = C26347 * C26473;
    const double C26898 = C26473 * C26513;
    const double C26953 = C26423 * C26473;
    const double C26998 = C26453 * C26473;
    const double C26504 = C26502 * C26355;
    const double C26764 = C26347 * C26502;
    const double C26879 = C26423 * C26502;
    const double C26975 = C26502 * C26580;
    const double C26522 = C26385 + C26521;
    const double C26559 = C26557 * C26355;
    const double C26778 = C26347 * C26557;
    const double C26907 = C26557 * C26513;
    const double C26955 = C26423 * C26557;
    const double C27001 = C26453 * C26557;
    const double C26589 = C26385 + C26588;
    const double C26388 = C26383 / C26137;
    const double C26857 = C26383 / C26348;
    const double C4380 = (C26423 * C26362 + C26789 * C26580) / C26121;
    const double C26389 = C26384 / C26348;
    const double C4378 = -(C26799 * C26580 + C26423 * C26361) / C26137;
    const double C26401 = C26364 + C26394;
    const double C26403 = C26393 * ae;
    const double C26400 = C26393 * ce;
    const double C26763 = C26423 * C26393;
    const double C26850 = C26453 * C26393;
    const double C26884 = C26364 + C26878;
    const double C26886 = C26877 * ae;
    const double C26883 = C26877 * ce;
    const double C26954 = C26453 * C26877;
    const double C27006 = C26364 + C27000;
    const double C27008 = C26999 * ae;
    const double C27005 = C26999 * ce;
    const double C26442 = C26439 / C26348;
    const double C1296 = -(C26437 * C26580 + C26347 * C26429) / C26137;
    const double C26472 = C26469 / C26348;
    const double C740 = -(C26467 * C26513 + C26347 * C26459) / C26137;
    const double C26501 = C26498 / C26348;
    const double C26874 = C26498 / C26137;
    const double C1423 = (C26347 * C26488 + C26496 * C26580) / C26121;
    const double C26556 = C26553 / C26348;
    const double C26996 = C26553 / C26137;
    const double C1011 = (C26347 * C26543 + C26551 * C26513) / C26121;
    const double C152 =
        2 * ((-(C26347 * C26434) / C26137) / C26121 - (ae * C26429) / C26348) -
        (ae * (C26435 * C26355 + C26429)) / C26348 +
        C26347 *
            ((-(ae * C26347 * C26435) / C26137) / C26121 - C26434 / C26348 +
             C26347 *
                 ((-(C26347 * C26387 * C26386 * C26430) / C26137) / C26121 -
                  (ae * C26435) / C26348));
    const double C681 = C26423 * ((-(C26347 * C26434) / C26137) / C26121 -
                                  (ae * C26429) / C26348) -
                        ((C26347 * C26362 + C26354 * ae) * ce) / C26348;
    const double C683 = (-(C26423 * C26362 * ce) / C26137) / C26121 -
                        (C26358 * C26352 * C26430) / C26348 +
                        C26423 * ((-(C26423 * C26434) / C26137) / C26121 -
                                  (C26362 * ce) / C26348);
    const double C1298 = C26453 * ((-(C26347 * C26434) / C26137) / C26121 -
                                   (ae * C26429) / C26348);
    const double C1301 = (-(C26434 * C26580) / C26137) / C26121 -
                         (C26358 * C26352 * C26430) / C26348;
    const double C2966 = C26453 * ((-(C26423 * C26434) / C26137) / C26121 -
                                   (C26362 * ce) / C26348);
    const double C26444 = C26347 * C26441;
    const double C26856 = C26423 * C26441;
    const double C4066 =
        2 * ((-(C26423 * C26434) / C26137) / C26121 - (C26362 * ce) / C26348) -
        ((C26362 + C26375 * C26513) * ce) / C26348 +
        C26423 *
            ((-(C26423 * C26375 * ce) / C26137) / C26121 - C26434 / C26348 +
             C26423 *
                 ((-(C26423 * C26441) / C26137) / C26121 - C26383 / C26348));
    const double C4436 =
        (-(C26423 * C26434) / C26137) / C26121 - (C26362 * ce) / C26348 +
        ((-(C26423 * C26441) / C26137) / C26121 - C26383 / C26348) * C26580;
    const double C5992 =
        C26453 *
        ((-(C26789 * ce) / C26137) / C26121 - C26434 / C26348 +
         C26423 * ((-(C26423 * C26441) / C26137) / C26121 - C26383 / C26348));
    const double C7366 =
        (-2 * C26453 * C26434) / C26348 +
        C26453 * ((-(C26441 * C26580) / C26137) / C26121 - C26434 / C26348);
    const double C24334 =
        3 * ((-(C26441 * C26580) / C26137) / C26121 - C26434 / C26348) +
        C26453 * ((-2 * C26453 * C26441) / C26348 +
                  C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26430 * C26580) /
                             C26137) /
                                C26121 -
                            C26441 / C26348));
    const double C242 =
        2 * ((-(C26347 * C26493) / C26137) / C26121 - (C26488 * ce) / C26348) -
        ((C26488 + C26494 * C26355) * ce) / C26348 +
        C26347 *
            ((-(C26347 * C26494 * ce) / C26137) / C26121 - C26493 / C26348 +
             C26347 *
                 ((-(C26347 * C26387 * C26386 * C26489) / C26137) / C26121 -
                  (C26494 * ce) / C26348));
    const double C806 = C26423 * ((-(C26347 * C26493) / C26137) / C26121 -
                                  (C26488 * ce) / C26348) -
                        (ae * (C26347 * C26361 + C26354 * ce)) / C26348;
    const double C808 = (-(ae * C26423 * C26361) / C26137) / C26121 -
                        (C26358 * C26352 * C26489) / C26348 +
                        C26423 * ((-(C26423 * C26493) / C26137) / C26121 -
                                  (ae * C26361) / C26348);
    const double C1426 = C26453 * ((-(C26347 * C26493) / C26137) / C26121 -
                                   (C26488 * ce) / C26348);
    const double C1428 = (-(C26493 * C26580) / C26137) / C26121 -
                         (C26358 * C26352 * C26489) / C26348;
    const double C3110 = (-(C26423 * C26453 * C26493) / C26137) / C26121 -
                         (ae * C26453 * C26361) / C26348;
    const double C26503 = C26347 * C26500;
    const double C26866 = C26423 * C26500;
    const double C26927 = C26453 * C26500;
    const double C4544 =
        C26423 * ((-(C26500 * C26580) / C26137) / C26121 - C26493 / C26348) -
        (ae * (C26374 * C26580 + C26361)) / C26348;
    const double C6100 =
        (-(ae * C26453 * C26799) / C26137) / C26121 -
        (C26453 * C26493) / C26348 +
        C26423 * ((-(C26423 * C26453 * C26500) / C26137) / C26121 -
                  (ae * C26453 * C26374) / C26348);
    const double C7446 =
        (-2 * C26453 * C26493) / C26348 +
        C26453 * ((-(C26500 * C26580) / C26137) / C26121 - C26493 / C26348);
    const double C13092 =
        (-(C26500 * C26580) / C26137) / C26121 - C26493 / C26348 -
        (ae * (C26423 * C26399 * C26580 + C26799)) / C26348 +
        C26423 * (C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26489 * C26580) /
                             C26137) /
                                C26121 -
                            C26500 / C26348) -
                  (ae * (C26399 * C26580 + C26374)) / C26348);
    const double C197 =
        2 * ((-(C26347 * C26464) / C26137) / C26121 - (ae * C26459) / C26348) -
        (ae * (C26465 * C26355 + C26459)) / C26348 +
        C26347 *
            ((-(ae * C26347 * C26465) / C26137) / C26121 - C26464 / C26348 +
             C26347 *
                 ((-(C26347 * C26387 * C26386 * C26460) / C26137) / C26121 -
                  (ae * C26465) / C26348));
    const double C743 = C26423 * ((-(C26347 * C26464) / C26137) / C26121 -
                                  (ae * C26459) / C26348);
    const double C745 = (-(C26464 * C26513) / C26137) / C26121 -
                        (C26358 * C26352 * C26460) / C26348;
    const double C1363 = C26453 * ((-(C26347 * C26464) / C26137) / C26121 -
                                   (ae * C26459) / C26348) -
                         ((C26347 * C26362 + C26354 * ae) * ce) / C26348;
    const double C1365 = (-(C26453 * C26362 * ce) / C26137) / C26121 -
                         (C26358 * C26352 * C26460) / C26348 +
                         C26453 * ((-(C26453 * C26464) / C26137) / C26121 -
                                   (C26362 * ce) / C26348);
    const double C3038 = (-(C26453 * C26423 * C26464) / C26137) / C26121 -
                         (C26423 * C26362 * ce) / C26348;
    const double C26474 = C26347 * C26471;
    const double C26942 = C26423 * C26471;
    const double C26964 = C26453 * C26471;
    const double C4104 =
        (-2 * C26423 * C26464) / C26348 +
        C26423 * ((-(C26471 * C26513) / C26137) / C26121 - C26464 / C26348);
    const double C4490 =
        (-(C26453 * C26789 * ce) / C26137) / C26121 -
        (C26423 * C26464) / C26348 +
        C26453 * ((-(C26453 * C26423 * C26471) / C26137) / C26121 -
                  (C26789 * ce) / C26348);
    const double C6046 =
        C26453 * ((-(C26471 * C26513) / C26137) / C26121 - C26464 / C26348) -
        ((C26362 + C26375 * C26513) * ce) / C26348;
    const double C7408 =
        2 * ((-(C26453 * C26464) / C26137) / C26121 - (C26362 * ce) / C26348) -
        ((C26362 + C26375 * C26580) * ce) / C26348 +
        C26453 *
            ((-(C26453 * C26375 * ce) / C26137) / C26121 - C26464 / C26348 +
             C26453 *
                 ((-(C26453 * C26471) / C26137) / C26121 - C26383 / C26348));
    const double C12623 =
        3 * ((-(C26471 * C26513) / C26137) / C26121 - C26464 / C26348) +
        C26423 * ((-2 * C26423 * C26471) / C26348 +
                  C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26460 * C26513) /
                             C26137) /
                                C26121 -
                            C26471 / C26348));
    const double C353 =
        (-2 * C26347 * C26532) / C26348 +
        C26347 * ((-(C26387 * C26386 * C26529 * C26355) / C26137) / C26121 -
                  C26532 / C26348);
    const double C941 = (-(C26423 * C26347 * C26532) / C26137) / C26121 -
                        (ae * C26347 * C26459) / C26348;
    const double C943 = (-(ae * C26423 * C26459) / C26137) / C26121 -
                        (C26358 * C26352 * C26529) / C26348 +
                        C26423 * ((-(C26423 * C26532) / C26137) / C26121 -
                                  (ae * C26459) / C26348);
    const double C1560 = (-(C26453 * C26488 * ce) / C26137) / C26121 -
                         (C26358 * C26352 * C26529) / C26348 +
                         C26453 * ((-(C26453 * C26532) / C26137) / C26121 -
                                   (C26488 * ce) / C26348);
    const double C1561 = (-(C26453 * C26347 * C26532) / C26137) / C26121 -
                         (C26347 * C26488 * ce) / C26348;
    const double C3261 = C26423 * ((-(C26453 * C26532) / C26137) / C26121 -
                                   (C26488 * ce) / C26348) -
                         (ae * (C26453 * C26459 + C26354 * ce)) / C26348;
    const double C26770 = C26347 * C26535;
    const double C26897 = C26423 * C26535;
    const double C26931 = C26453 * C26535;
    const double C354 =
        3 * ((-(C26535 * C26355) / C26137) / C26121 - C26532 / C26348) +
        C26347 * ((-2 * C26347 * C26535) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348));
    const double C944 =
        (-(ae * C26423 * C26467) / C26137) / C26121 -
        (C26347 * C26532) / C26348 +
        C26423 * ((-(C26423 * C26347 * C26535) / C26137) / C26121 -
                  (ae * C26467) / C26348);
    const double C945 =
        C26423 * ((-(C26535 * C26355) / C26137) / C26121 - C26532 / C26348) -
        (ae * (C26465 * C26355 + C26459)) / C26348;
    const double C1562 =
        (-(C26453 * C26496 * ce) / C26137) / C26121 -
        (C26347 * C26532) / C26348 +
        C26453 * ((-(C26453 * C26347 * C26535) / C26137) / C26121 -
                  (C26496 * ce) / C26348);
    const double C1563 =
        C26453 * ((-(C26535 * C26355) / C26137) / C26121 - C26532 / C26348) -
        ((C26488 + C26494 * C26355) * ce) / C26348;
    const double C413 =
        2 * ((-(C26347 * C26548) / C26137) / C26121 - (C26543 * ce) / C26348) -
        ((C26543 + C26549 * C26355) * ce) / C26348 +
        C26347 *
            ((-(C26347 * C26549 * ce) / C26137) / C26121 - C26548 / C26348 +
             C26347 *
                 ((-(C26347 * C26387 * C26386 * C26544) / C26137) / C26121 -
                  (C26549 * ce) / C26348));
    const double C1014 = C26423 * ((-(C26347 * C26548) / C26137) / C26121 -
                                   (C26543 * ce) / C26348);
    const double C1016 = (-(C26548 * C26513) / C26137) / C26121 -
                         (C26358 * C26352 * C26544) / C26348;
    const double C1634 = C26453 * ((-(C26347 * C26548) / C26137) / C26121 -
                                   (C26543 * ce) / C26348) -
                         (ae * (C26347 * C26361 + C26354 * ce)) / C26348;
    const double C1636 = (-(ae * C26453 * C26361) / C26137) / C26121 -
                         (C26358 * C26352 * C26544) / C26348 +
                         C26453 * ((-(C26453 * C26548) / C26137) / C26121 -
                                   (ae * C26361) / C26348);
    const double C3340 = (-(C26453 * C26423 * C26548) / C26137) / C26121 -
                         (ae * C26423 * C26361) / C26348;
    const double C26558 = C26347 * C26555;
    const double C26948 = C26423 * C26555;
    const double C26979 = C26453 * C26555;
    const double C4252 =
        (-2 * C26423 * C26548) / C26348 +
        C26423 * ((-(C26555 * C26513) / C26137) / C26121 - C26548 / C26348);
    const double C4702 =
        (-(ae * C26453 * C26799) / C26137) / C26121 -
        (C26423 * C26548) / C26348 +
        C26453 * ((-(C26453 * C26423 * C26555) / C26137) / C26121 -
                  (ae * C26799) / C26348);
    const double C6258 =
        C26453 * ((-(C26555 * C26513) / C26137) / C26121 - C26548 / C26348) -
        (ae * (C26374 * C26513 + C26361)) / C26348;
    const double C12770 =
        3 * ((-(C26555 * C26513) / C26137) / C26121 - C26548 / C26348) +
        C26423 * ((-2 * C26423 * C26555) / C26348 +
                  C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26544 * C26513) /
                             C26137) /
                                C26121 -
                            C26555 / C26348));
    const double C470 =
        (-2 * C26347 * C26573) / C26348 +
        C26347 * ((-(C26387 * C26386 * C26570 * C26355) / C26137) / C26121 -
                  C26573 / C26348);
    const double C1082 = (-(C26423 * C26543 * ce) / C26137) / C26121 -
                         (C26358 * C26352 * C26570) / C26348 +
                         C26423 * ((-(C26423 * C26573) / C26137) / C26121 -
                                   (C26543 * ce) / C26348);
    const double C1083 = (-(C26423 * C26347 * C26573) / C26137) / C26121 -
                         (C26347 * C26543 * ce) / C26348;
    const double C1701 = (-(C26453 * C26347 * C26573) / C26137) / C26121 -
                         (ae * C26347 * C26429) / C26348;
    const double C1704 = (-(ae * C26453 * C26429) / C26137) / C26121 -
                         (C26358 * C26352 * C26570) / C26348 +
                         C26453 * ((-(C26453 * C26573) / C26137) / C26121 -
                                   (ae * C26429) / C26348);
    const double C3415 = C26453 * ((-(C26423 * C26573) / C26137) / C26121 -
                                   (C26543 * ce) / C26348) -
                         (ae * (C26423 * C26429 + C26354 * ce)) / C26348;
    const double C26777 = C26347 * C26576;
    const double C26906 = C26423 * C26576;
    const double C26988 = C26453 * C26576;
    const double C471 =
        3 * ((-(C26576 * C26355) / C26137) / C26121 - C26573 / C26348) +
        C26347 * ((-2 * C26347 * C26576) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348));
    const double C1084 =
        (-(C26423 * C26551 * ce) / C26137) / C26121 -
        (C26347 * C26573) / C26348 +
        C26423 * ((-(C26423 * C26347 * C26576) / C26137) / C26121 -
                  (C26551 * ce) / C26348);
    const double C1085 =
        C26423 * ((-(C26576 * C26355) / C26137) / C26121 - C26573 / C26348) -
        ((C26543 + C26549 * C26355) * ce) / C26348;
    const double C1702 =
        C26453 * ((-(C26576 * C26355) / C26137) / C26121 - C26573 / C26348) -
        (ae * (C26435 * C26355 + C26429)) / C26348;
    const double C1705 =
        (-(ae * C26453 * C26437) / C26137) / C26121 -
        (C26347 * C26573) / C26348 +
        C26453 * ((-(C26453 * C26347 * C26576) / C26137) / C26121 -
                  (ae * C26437) / C26348);
    const double C9524 = C9186 * C601;
    const double C9516 = C9186 * C598;
    const double C9514 = C9186 * C607;
    const double C9512 = C9186 * C600;
    const double C9594 = C9186 * C676;
    const double C9657 = C9186 * C738;
    const double C11458 = C9186 * C2885;
    const double C18512 = C9186 * C1221;
    const double C18504 = C9186 * C1218;
    const double C18502 = C9186 * C1227;
    const double C18500 = C9186 * C1220;
    const double C18583 = C9186 * C1294;
    const double C18652 = C9186 * C1358;
    const double C26153 = C26148 / C26141;
    const double C26151 = 2 * C26148;
    const double C27473 = C27276 / C26146;
    const double C27471 = C27276 / C26137;
    const double C27470 = C27276 * C27271;
    const double C3552 = (2 * C27279 * C27276) / C26137;
    const double C27474 = C27280 * C27271;
    const double C78 = C27280 / C27475;
    const double C1837 = C27280 / C26142;
    const double C27494 = C27472 / C26137;
    const double C3551 = (C27275 * std::pow(C27270, 2)) / C26141 + C27469;
    const double C26250 = C26193 / C26141;
    const double C26247 = 2 * C26193;
    const double C674 =
        ((0 * ce) / C26137 - C26193 / C26141) / C26142 + (0 * ce) / C26137;
    const double C1897 =
        ((C27303 - (C26190 * 2 * C26193) / C26137) * ce) / C26137 -
        C26191 / C26146;
    const double C1898 = (0 * ce) / C26137 - C26193 / C26141;
    const double C3609 =
        (-C26191 / C26137) / C26142 -
        ((C27303 - (C26190 * 2 * C26193) / C26137) * de) / C26137;
    const double C3610 = (-(2 * C26193) / C26137) / C26142 - (0 * de) / C26137;
    const double C27485 = C27349 / C26146;
    const double C27484 = C27349 * C27348;
    const double C27481 = C27349 / C26137;
    const double C594 = (2 * C27279 * C27349) / C26137;
    const double C673 =
        (((C27303 - (C26190 * 2 * C26193) / C26137) * ce) / C26137 -
         C26191 / C26146) /
            C26142 +
        ((C26190 * ((0 * ce) / C26137 - C26193 / C26141) + C27352) * ce) /
            C26137;
    const double C27486 = C27352 * C27348;
    const double C4015 = C27352 / C27475;
    const double C4861 = C27352 / C26142;
    const double C27498 = C27483 / C26137;
    const double C593 = (C27303 * std::pow(C27347, 2)) / C26141 + C27478;
    const double C26296 = C26208 / C26141;
    const double C26293 = 2 * C26208;
    const double C1356 =
        ((0 * ce) / C26137 - C26208 / C26141) / C26142 + (0 * ce) / C26137;
    const double C2463 =
        ((C27314 - (C26205 * 2 * C26208) / C26137) * ce) / C26137 -
        C26206 / C26146;
    const double C2464 = (0 * ce) / C26137 - C26208 / C26141;
    const double C6515 =
        (-C26206 / C26137) / C26142 -
        ((C27314 - (C26205 * 2 * C26208) / C26137) * de) / C26137;
    const double C6516 = (-(2 * C26208) / C26137) / C26142 - (0 * de) / C26137;
    const double C27489 = C27375 / C26146;
    const double C27488 = C27375 * C27374;
    const double C27482 = C27375 / C26137;
    const double C1216 = (2 * C27279 * C27375) / C26137;
    const double C1355 =
        (((C27314 - (C26205 * 2 * C26208) / C26137) * ce) / C26137 -
         C26206 / C26146) /
            C26142 +
        ((C26205 * ((0 * ce) / C26137 - C26208 / C26141) + C27378) * ce) /
            C26137;
    const double C27490 = C27378 * C27374;
    const double C7320 = C27378 / C27475;
    const double C8283 = C27378 / C26142;
    const double C27501 = C27487 / C26137;
    const double C1215 = (C27314 * std::pow(C27373, 2)) / C26141 + C27480;
    const double C249 = C233 * C91;
    const double C247 = C233 * C97;
    const double C245 = C233 * C90;
    const double C303 = C233 * C145;
    const double C357 = C233 * C190;
    const double C812 = C233 * C598;
    const double C1432 = C233 * C1218;
    const double C18723 = C233 * C1221;
    const double C18716 = C233 * C1227;
    const double C18714 = C233 * C1220;
    const double C18785 = C233 * C1294;
    const double C18844 = C233 * C1358;
    const double C20201 = C233 * C2885;
    const double C420 = C404 * C91;
    const double C418 = C404 * C97;
    const double C416 = C404 * C90;
    const double C474 = C404 * C145;
    const double C528 = C404 * C190;
    const double C1020 = C404 * C598;
    const double C1640 = C404 * C1218;
    const double C9885 = C404 * C601;
    const double C9878 = C404 * C607;
    const double C9876 = C404 * C600;
    const double C9946 = C404 * C676;
    const double C10003 = C404 * C738;
    const double C11889 = C404 * C2885;
    const double C9517 = C27516 * C604;
    const double C9525 = C27516 * C610;
    const double C18505 = C27516 * C1224;
    const double C18513 = C27516 * C1230;
    const double C11459 = C27516 * C2888;
    const double C12543 = C27516 * C4022;
    const double C14495 = C27516 * C5936;
    const double C24293 = C27516 * C7326;
    const double C251 = C233 * C99;
    const double C422 = C404 * C99;
    const double C814 = C233 * C606;
    const double C1022 = C404 * C606;
    const double C9518 = C9186 * C606;
    const double C9522 = C9186 * C612;
    const double C9883 = C404 * C612;
    const double C1434 = C233 * C1226;
    const double C1642 = C404 * C1226;
    const double C18506 = C9186 * C1226;
    const double C18510 = C9186 * C1232;
    const double C18721 = C233 * C1232;
    const double C11456 = C9186 * C2890;
    const double C11887 = C404 * C2890;
    const double C20199 = C233 * C2890;
    const double C12544 = C9186 * C4020;
    const double C12778 = C404 * C4020;
    const double C14496 = C9186 * C5934;
    const double C14824 = C404 * C5934;
    const double C23062 = C233 * C5934;
    const double C24294 = C9186 * C7324;
    const double C24418 = C233 * C7324;
    const double C26381 = C26378 + C26372;
    const double C26759 = C26757 + C26372;
    const double C26847 = C26845 + C26372;
    const double C3262 =
        C26423 * ((-(C26453 * C26347 * C26535) / C26137) / C26121 -
                  (C26496 * ce) / C26348) -
        (ae * (C26453 * C26467 + C26370 * ce)) / C26348;
    const double C3416 =
        C26453 * ((-(C26423 * C26347 * C26576) / C26137) / C26121 -
                  (C26551 * ce) / C26348) -
        (ae * (C26423 * C26437 + C26370 * ce)) / C26348;
    const double C678 = -(C26423 * (C26423 * C26437 + C26370 * ce) +
                          C26347 * C26429 + C26423 * C26370 * ce) /
                        C26137;
    const double C803 =
        (C26347 * C26488 + C26423 * (C26423 * C26496 + C26370 * ae) +
         C26423 * C26370 * ae) /
        C26121;
    const double C1360 = -(C26453 * (C26453 * C26467 + C26370 * ce) +
                           C26347 * C26459 + C26453 * C26370 * ce) /
                         C26137;
    const double C1631 =
        (C26347 * C26543 + C26453 * (C26453 * C26551 + C26370 * ae) +
         C26453 * C26370 * ae) /
        C26121;
    const double C2964 = -(C26453 * (C26423 * C26437 + C26370 * ce)) / C26137;
    const double C3036 =
        -(C26453 * C26423 * C26467 + C26423 * C26370 * ce) / C26137;
    const double C3108 = (C26453 * (C26423 * C26496 + C26370 * ae)) / C26121;
    const double C3338 =
        (C26453 * C26423 * C26551 + C26423 * C26370 * ae) / C26121;
    const double C602 = C26347 * C26354 + C26370 * C26513;
    const double C1222 = C26347 * C26354 + C26370 * C26580;
    const double C2886 = C26453 * C26423 * C26370;
    const double C4017 =
        2 * C26423 * C26370 + C26423 * (C26370 + C26393 * C26513);
    const double C5931 = C26453 * (C26370 + C26393 * C26513);
    const double C7321 =
        2 * C26453 * C26370 + C26453 * (C26370 + C26393 * C26580);
    const double C26380 = C26377 + C26369;
    const double C26758 = C26755 + C26369;
    const double C26846 = C26843 + C26369;
    const double C26379 = C26376 * C26356;
    const double C26518 = C26517 * C26356;
    const double C26585 = C26584 * C26356;
    const double C4488 = -(C26453 * (C26453 * C26803 + C26756 * ce) +
                           C26423 * C26459 + C26453 * C26756 * ce) /
                         C26137;
    const double C4700 =
        (C26423 * C26543 + C26453 * (C26453 * C26804 + C26756 * ae) +
         C26453 * C26756 * ae) /
        C26121;
    const double C4376 = C26423 * C26354 + C26756 * C26580;
    const double C15891 =
        2 * C26453 * C26756 + C26453 * (C26756 + C26877 * C26580);
    const double C306 = C27517 * C298;
    const double C531 = C27518 * C523;
    const double C253 = C233 * C92;
    const double C424 = C404 * C92;
    const double C2006 = C233 * C599;
    const double C2182 = C404 * C599;
    const double C10516 = C9186 * C599;
    const double C2520 = C233 * C1219;
    const double C2696 = C404 * C1219;
    const double C19504 = C9186 * C1219;
    const double C12542 = C9186 * C4018;
    const double C12776 = C404 * C4018;
    const double C14494 = C9186 * C5932;
    const double C14822 = C404 * C5932;
    const double C23060 = C233 * C5932;
    const double C24292 = C9186 * C7322;
    const double C24416 = C233 * C7322;
    const double C305 = C233 * C146;
    const double C476 = C404 * C146;
    const double C309 = C233 * C147;
    const double C480 = C404 * C147;
    const double C883 = C233 * C675;
    const double C1091 = C404 * C675;
    const double C9598 = C9186 * C675;
    const double C9596 = C9186 * C677;
    const double C9948 = C404 * C677;
    const double C2070 = C233 * C679;
    const double C2246 = C404 * C679;
    const double C10574 = C9186 * C679;
    const double C1501 = C233 * C1292;
    const double C1709 = C404 * C1292;
    const double C18585 = C9186 * C1292;
    const double C2578 = C233 * C1293;
    const double C2754 = C404 * C1293;
    const double C19563 = C9186 * C1293;
    const double C18591 = C9186 * C1295;
    const double C18787 = C233 * C1295;
    const double C11536 = C9186 * C2963;
    const double C11962 = C404 * C2963;
    const double C20277 = C233 * C2963;
    const double C24337 = C9186 * C7364;
    const double C24460 = C233 * C7364;
    const double C359 = C233 * C191;
    const double C530 = C404 * C191;
    const double C363 = C233 * C192;
    const double C534 = C404 * C192;
    const double C948 = C233 * C737;
    const double C1156 = C404 * C737;
    const double C9663 = C9186 * C737;
    const double C9659 = C9186 * C739;
    const double C10005 = C404 * C739;
    const double C2126 = C233 * C741;
    const double C2302 = C404 * C741;
    const double C10628 = C9186 * C741;
    const double C1569 = C233 * C1357;
    const double C1777 = C404 * C1357;
    const double C18656 = C9186 * C1357;
    const double C18654 = C9186 * C1359;
    const double C18846 = C233 * C1359;
    const double C2640 = C233 * C1361;
    const double C2816 = C404 * C1361;
    const double C19617 = C9186 * C1361;
    const double C11611 = C9186 * C3035;
    const double C12034 = C404 * C3035;
    const double C20347 = C233 * C3035;
    const double C12626 = C9186 * C4102;
    const double C12858 = C404 * C4102;
    const double C14612 = C9186 * C6044;
    const double C14938 = C404 * C6044;
    const double C23177 = C233 * C6044;
    const double C252 = C27517 * C241;
    const double C250 = C27517 * C236;
    const double C254 = C27517 * C237;
    const double C813 = C27517 * C799;
    const double C2007 = C27517 * C801;
    const double C1433 = C27517 * C1419;
    const double C2521 = C27517 * C1421;
    const double C18724 = C27517 * C1422;
    const double C20202 = C27517 * C3107;
    const double C24417 = C27517 * C7444;
    const double C423 = C27518 * C412;
    const double C421 = C27518 * C407;
    const double C425 = C27518 * C408;
    const double C1021 = C27518 * C1007;
    const double C2183 = C27518 * C1009;
    const double C9886 = C27518 * C1010;
    const double C1641 = C27518 * C1627;
    const double C2697 = C27518 * C1629;
    const double C11890 = C27518 * C3337;
    const double C12777 = C27518 * C4250;
    const double C14823 = C27518 * C6256;
    const double C26411 = C26407 + C26396;
    const double C26860 = C26375 + C26858;
    const double C15893 =
        (2 * C26453 * C26789 + C26453 * (C26789 + C26943 * C26580)) / C26121;
    const double C26967 = C26375 + C26965;
    const double C26410 = C26406 + C26392;
    const double C26869 = C26867 + C26374;
    const double C15892 = (-2 * C26453 * C26799) / C26137 -
                          (C26453 * (C26949 * C26580 + C26799)) / C26137;
    const double C26982 = C26980 + C26374;
    const double C26409 = C26405 * C26356;
    const double C26447 = C26445 + C26435;
    const double C26765 = C26423 * C26762;
    const double C7363 = (-2 * C26453 * C26437) / C26137 -
                         (C26453 * (C26762 * C26580 + C26437)) / C26137;
    const double C26882 = C26876 + C26392;
    const double C26991 = C26989 + C26435;
    const double C26477 = C26475 + C26465;
    const double C26806 = C26423 * C26771;
    const double C26849 = C26453 * C26771;
    const double C4101 = (-2 * C26423 * C26467) / C26137 -
                         (C26423 * (C26771 * C26513 + C26467)) / C26137;
    const double C6043 = -(C26453 * (C26771 * C26513 + C26467) +
                           (C26370 + C26393 * C26513) * ce) /
                         C26137;
    const double C26900 = C26898 + C26465;
    const double C26956 = C26453 * C26953;
    const double C27004 = C26998 + C26392;
    const double C26506 = C26494 + C26504;
    const double C26766 = C26423 * C26764;
    const double C7443 =
        (2 * C26453 * C26496 + C26453 * (C26496 + C26764 * C26580)) / C26121;
    const double C26885 = C26879 + C26396;
    const double C26976 = C26494 + C26975;
    const double C26523 = C26522 * C26356;
    const double C26561 = C26549 + C26559;
    const double C26807 = C26423 * C26778;
    const double C26851 = C26453 * C26778;
    const double C4249 =
        (2 * C26423 * C26551 + C26423 * (C26551 + C26778 * C26513)) / C26121;
    const double C6255 = (C26453 * (C26551 + C26778 * C26513) +
                          (C26370 + C26393 * C26513) * ae) /
                         C26121;
    const double C26909 = C26549 + C26907;
    const double C26957 = C26453 * C26955;
    const double C27007 = C27001 + C26396;
    const double C26590 = C26589 * C26356;
    const double C26397 = -C26388;
    const double C12919 = C27516 * C4380;
    const double C4142 =
        2 * ((-(C26423 * C26493) / C26137) / C26121 - (ae * C26361) / C26348) -
        (ae * (C26374 * C26513 + C26361)) / C26348 +
        C26423 *
            ((-(ae * C26423 * C26374) / C26137) / C26121 - C26493 / C26348 +
             C26423 * ((-(C26423 * C26500) / C26137) / C26121 - C26389));
    const double C7556 =
        2 * ((-(C26453 * C26548) / C26137) / C26121 - (ae * C26361) / C26348) -
        (ae * (C26374 * C26580 + C26361)) / C26348 +
        C26453 *
            ((-(ae * C26453 * C26374) / C26137) / C26121 - C26548 / C26348 +
             C26453 * ((-(C26453 * C26555) / C26137) / C26121 - C26389));
    const double C12920 = C9186 * C4378;
    const double C13252 = C404 * C4378;
    const double C21524 = C233 * C4378;
    const double C93 = 3 * (C26354 + C26364 * C26355) +
                       C26347 * (2 * C26370 + C26347 * C26401);
    const double C603 = C26354 + C26364 * C26355 + C26401 * C26513;
    const double C1223 = C26354 + C26364 * C26355 + C26401 * C26580;
    const double C1843 = C26423 * (2 * C26370 + C26347 * C26401);
    const double C2357 = C26453 * (2 * C26370 + C26347 * C26401);
    const double C2887 = C26453 * C26423 * C26401;
    const double C4375 = C26423 * C26370 + C26763 * C26580;
    const double C12533 = 3 * (C26354 + C26364 * C26513) +
                          C26423 * (2 * C26756 + C26423 * C26884);
    const double C12911 = C26354 + C26364 * C26513 + C26884 * C26580;
    const double C14489 = C26453 * (2 * C26756 + C26423 * C26884);
    const double C24287 = 3 * (C26354 + C26364 * C26580) +
                          C26453 * (2 * C26844 + C26453 * C27006);
    const double C7592 =
        2 * ((-(C26453 * C26573) / C26137) / C26121 - (ae * C26429) / C26348) -
        (ae * (C26435 * C26580 + C26429)) / C26348 +
        C26453 *
            ((-(ae * C26453 * C26435) / C26137) / C26121 - C26573 / C26348 +
             C26453 * ((-(C26453 * C26576) / C26137) / C26121 - C26442));
    const double C1504 = C233 * C1296;
    const double C1712 = C404 * C1296;
    const double C18589 = C9186 * C1296;
    const double C4214 =
        2 * ((-(C26423 * C26532) / C26137) / C26121 - (ae * C26459) / C26348) -
        (ae * (C26465 * C26513 + C26459)) / C26348 +
        C26423 *
            ((-(ae * C26423 * C26465) / C26137) / C26121 - C26532 / C26348 +
             C26423 * ((-(C26423 * C26535) / C26137) / C26121 - C26472));
    const double C952 = C233 * C740;
    const double C1160 = C404 * C740;
    const double C9666 = C9186 * C740;
    const double C4647 =
        C26423 *
            ((-(C26453 * C26494 * ce) / C26137) / C26121 - C26532 / C26348 +
             C26453 * ((-(C26453 * C26535) / C26137) / C26121 - C26501)) -
        (ae * (C26453 * (C26453 * C26465 + C26369) + C26459 +
               C26453 * C26364 * ce)) /
            C26348;
    const double C6203 =
        (-(C26453 * C26532) / C26137) / C26121 - (C26488 * ce) / C26348 -
        (ae * (C26453 * C26803 + C26756 * ce)) / C26348 +
        C26423 * (C26423 * ((-(C26453 * C26535) / C26137) / C26121 - C26501) -
                  (ae * (C26453 * C26465 + C26369)) / C26348);
    const double C7517 =
        2 * ((-(C26453 * C26532) / C26137) / C26121 - (C26488 * ce) / C26348) -
        ((C26488 + C26494 * C26580) * ce) / C26348 +
        C26453 *
            ((-(C26453 * C26494 * ce) / C26137) / C26121 - C26532 / C26348 +
             C26453 * ((-(C26453 * C26535) / C26137) / C26121 - C26501));
    const double C13194 =
        (-(C26453 * C26494 * ce) / C26137) / C26121 - C26532 / C26348 +
        C26453 * ((-(C26453 * C26535) / C26137) / C26121 - C26501) -
        (ae * (C26453 * (C26453 * C26423 * C26473 + C26883) + C26803 +
               C26453 * C26877 * ce)) /
            C26348 +
        C26423 *
            (C26423 *
                 ((-(C26453 * C26502 * ce) / C26137) / C26121 -
                  C26535 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26529) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)) -
             (ae * (C26453 * (C26453 * C26473 + C26392) + C26465 +
                    C26453 * C26385 * ce)) /
                 C26348);
    const double C26880 = -C26874;
    const double C1437 = C27517 * C1423;
    const double C4287 =
        2 * ((-(C26423 * C26573) / C26137) / C26121 - (C26543 * ce) / C26348) -
        ((C26543 + C26549 * C26513) * ce) / C26348 +
        C26423 *
            ((-(C26423 * C26549 * ce) / C26137) / C26121 - C26573 / C26348 +
             C26423 * ((-(C26423 * C26576) / C26137) / C26121 - C26556));
    const double C27002 = -C26996;
    const double C1025 = C27518 * C1011;
    const double C9599 = C27516 * C681;
    const double C9597 = C27516 * C683;
    const double C18586 = C27516 * C1298;
    const double C18592 = C27516 * C1301;
    const double C11537 = C27516 * C2966;
    const double C26446 = C26444 / C26137;
    const double C26859 = C26856 / C26137;
    const double C12587 = C27516 * C4066;
    const double C12979 = C27516 * C4436;
    const double C14555 = C27516 * C5992;
    const double C24338 = C27516 * C7366;
    const double C256 = C27517 * C242;
    const double C815 = C27517 * C806;
    const double C1435 = C27517 * C1426;
    const double C18722 = C27517 * C1428;
    const double C20200 = C27517 * C3110;
    const double C26505 = C26503 / C26137;
    const double C26868 = C26866 / C26137;
    const double C16002 =
        (((-2 * C26453 * C26374) / C26137 -
          (C26453 * (C26399 * C26580 + C26374)) / C26137) *
         ae) /
            C26121 +
        C26423 * ((-2 * C26927) / C26348 +
                  C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26489 * C26580) /
                             C26137) /
                                C26121 -
                            C26500 / C26348));
    const double C24414 =
        3 * ((-(C26500 * C26580) / C26137) / C26121 - C26493 / C26348) +
        C26453 * ((-2 * C26927) / C26348 +
                  C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26489 * C26580) /
                             C26137) /
                                C26121 -
                            C26500 / C26348));
    const double C21525 = C27517 * C4544;
    const double C23063 = C27517 * C6100;
    const double C24419 = C27517 * C7446;
    const double C9664 = C27516 * C743;
    const double C9660 = C27516 * C745;
    const double C18657 = C27516 * C1363;
    const double C18655 = C27516 * C1365;
    const double C11612 = C27516 * C3038;
    const double C26476 = C26474 / C26137;
    const double C15966 =
        2 * ((-(C26453 * C26942) / C26137) / C26121 - (C26789 * ce) / C26348) -
        ((C26789 + C26943 * C26580) * ce) / C26348 +
        C26453 *
            ((-(C26453 * C26943 * ce) / C26137) / C26121 - C26942 / C26348 +
             C26453 *
                 ((-(C26453 * C26423 * std::pow(C26345, 6) * bs[6] * C26460) /
                   C26137) /
                      C26121 -
                  (C26943 * ce) / C26348));
    const double C26966 = C26964 / C26137;
    const double C12627 = C27516 * C4104;
    const double C13039 = C27516 * C4490;
    const double C14613 = C27516 * C6046;
    const double C24378 = C27516 * C7408;
    const double C364 = C27517 * C353;
    const double C949 = C27517 * C941;
    const double C18847 = C27517 * C1560;
    const double C1570 = C27517 * C1561;
    const double C20348 = C27517 * C3261;
    const double C4213 =
        2 * ((-(C26423 * C26770) / C26137) / C26121 - (ae * C26467) / C26348) -
        (ae * (C26771 * C26513 + C26467)) / C26348 +
        C26423 *
            ((-(ae * C26423 * C26771) / C26137) / C26121 - C26770 / C26348 +
             C26423 *
                 ((-(C26423 * C26347 * std::pow(C26345, 6) * bs[6] * C26529) /
                   C26137) /
                      C26121 -
                  (ae * C26771) / C26348));
    const double C4648 =
        C26423 *
            ((-(C26453 * C26764 * ce) / C26137) / C26121 - C26770 / C26348 +
             C26453 *
                 ((-(C26453 * C26347 * std::pow(C26345, 6) * bs[6] * C26529) /
                   C26137) /
                      C26121 -
                  (C26764 * ce) / C26348)) -
        (ae * (C26453 * (C26453 * C26771 + C26400) + C26467 +
               C26453 * C26393 * ce)) /
            C26348;
    const double C7518 =
        2 * ((-(C26453 * C26770) / C26137) / C26121 - (C26496 * ce) / C26348) -
        ((C26496 + C26764 * C26580) * ce) / C26348 +
        C26453 *
            ((-(C26453 * C26764 * ce) / C26137) / C26121 - C26770 / C26348 +
             C26453 *
                 ((-(C26453 * C26347 * std::pow(C26345, 6) * bs[6] * C26529) /
                   C26137) /
                      C26121 -
                  (C26764 * ce) / C26348));
    const double C26899 = C26897 / C26137;
    const double C26932 = C26931 / C26137;
    const double C953 = C27517 * C944;
    const double C2127 = C27517 * C945;
    const double C1573 = C27517 * C1562;
    const double C2641 = C27517 * C1563;
    const double C427 = C27518 * C413;
    const double C1023 = C27518 * C1014;
    const double C9884 = C27518 * C1016;
    const double C1643 = C27518 * C1634;
    const double C11888 = C27518 * C3340;
    const double C26560 = C26558 / C26137;
    const double C16108 =
        2 * ((-(C26453 * C26948) / C26137) / C26121 - (ae * C26799) / C26348) -
        (ae * (C26949 * C26580 + C26799)) / C26348 +
        C26453 *
            ((-(ae * C26453 * C26949) / C26137) / C26121 - C26948 / C26348 +
             C26453 *
                 ((-(C26453 * C26423 * std::pow(C26345, 6) * bs[6] * C26544) /
                   C26137) /
                      C26121 -
                  (ae * C26949) / C26348));
    const double C26981 = C26979 / C26137;
    const double C12779 = C27518 * C4252;
    const double C13253 = C27518 * C4702;
    const double C14825 = C27518 * C6258;
    const double C481 = C27518 * C470;
    const double C9949 = C27518 * C1082;
    const double C1092 = C27518 * C1083;
    const double C1710 = C27518 * C1701;
    const double C11963 = C27518 * C3415;
    const double C4288 =
        2 * ((-(C26423 * C26777) / C26137) / C26121 - (C26551 * ce) / C26348) -
        ((C26551 + C26778 * C26513) * ce) / C26348 +
        C26423 *
            ((-(C26423 * C26778 * ce) / C26137) / C26121 - C26777 / C26348 +
             C26423 *
                 ((-(C26423 * C26347 * std::pow(C26345, 6) * bs[6] * C26570) /
                   C26137) /
                      C26121 -
                  (C26778 * ce) / C26348));
    const double C7591 =
        2 * ((-(C26453 * C26777) / C26137) / C26121 - (ae * C26437) / C26348) -
        (ae * (C26762 * C26580 + C26437)) / C26348 +
        C26453 *
            ((-(ae * C26453 * C26762) / C26137) / C26121 - C26777 / C26348 +
             C26453 *
                 ((-(C26453 * C26347 * std::pow(C26345, 6) * bs[6] * C26570) /
                   C26137) /
                      C26121 -
                  (ae * C26762) / C26348));
    const double C26908 = C26906 / C26137;
    const double C26990 = C26988 / C26137;
    const double C1095 = C27518 * C1084;
    const double C2247 = C27518 * C1085;
    const double C2755 = C27518 * C1702;
    const double C1713 = C27518 * C1705;
    const double C9529 = C9514 + C9515;
    const double C9528 = C9512 + C9513;
    const double C9602 = C9594 + C9595;
    const double C9668 = C9657 + C9658;
    const double C18517 = C18502 + C18503;
    const double C18516 = C18500 + C18501;
    const double C18594 = C18583 + C18584;
    const double C18660 = C18652 + C18653;
    const double C26156 = C26145 - C26153;
    const double C26155 = C26135 * C26151;
    const double C597 = (-C26151 / C26137) / C26142 - (0 * de) / C26137;
    const double C4016 = -C26151 / C26137;
    const double C27493 = C27470 / C26141;
    const double C27495 = C27474 / C26137;
    const double C591 = -C27494;
    const double C26257 = C26254 - C26250;
    const double C26253 = C26190 * C26247;
    const double C27499 = C27484 / C26141;
    const double C672 =
        (((0 - (C26190 * C26191) / C26137) * ce) / C26137 - (0 * de) / C26146) /
            C26142 +
        ((C26190 * (((C27303 - (C26190 * 2 * C26193) / C26137) * ce) / C26137 -
                    C26191 / C26146) +
          C27481) *
         ce) /
            C26137 +
        (0 * ce) / C26137 - C26193 / C26141;
    const double C27500 = C27486 / C26137;
    const double C3554 = -C27498;
    const double C26303 = C26300 - C26296;
    const double C26299 = C26205 * C26293;
    const double C27502 = C27488 / C26141;
    const double C1354 =
        (((0 - (C26205 * C26206) / C26137) * ce) / C26137 - (0 * de) / C26146) /
            C26142 +
        ((C26205 * (((C27314 - (C26205 * 2 * C26208) / C26137) * ce) / C26137 -
                    C26206 / C26146) +
          C27482) *
         ce) /
            C26137 +
        (0 * ce) / C26137 - C26208 / C26141;
    const double C27503 = C27490 / C26137;
    const double C6413 = -C27501;
    const double C258 = C247 + C248;
    const double C257 = C245 + C246;
    const double C311 = C303 + C304;
    const double C365 = C357 + C358;
    const double C18727 = C18716 + C18717;
    const double C18726 = C18714 + C18715;
    const double C18790 = C18785 + C18786;
    const double C18848 = C18844 + C18845;
    const double C429 = C418 + C419;
    const double C428 = C416 + C417;
    const double C482 = C474 + C475;
    const double C536 = C528 + C529;
    const double C9889 = C9878 + C9879;
    const double C9888 = C9876 + C9877;
    const double C9950 = C9946 + C9947;
    const double C10008 = C10003 + C10004;
    const double C9530 = C9516 + C9517;
    const double C9534 = C9524 + C9525;
    const double C18518 = C18504 + C18505;
    const double C18522 = C18512 + C18513;
    const double C11464 = C11458 + C11459;
    const double C100 = (2 * (C26347 * C26362 + C26354 * ae) +
                         C26347 * (C26362 + C26347 * C26381 + C26370 * ae) +
                         (C26354 + C26364 * C26355) * ae) /
                        C26121;
    const double C605 =
        (C26423 * (C26362 + C26347 * C26381 + C26370 * ae)) / C26121;
    const double C611 =
        (C26347 * C26362 + C26354 * ae + C26381 * C26513) / C26121;
    const double C1225 =
        (C26453 * (C26362 + C26347 * C26381 + C26370 * ae)) / C26121;
    const double C1231 =
        (C26347 * C26362 + C26354 * ae + C26381 * C26580) / C26121;
    const double C2889 = (C26453 * C26423 * C26381) / C26121;
    const double C4140 = (2 * (C26423 * C26488 + C26354 * ae) +
                          C26423 * (C26488 + C26423 * C26759 + C26756 * ae) +
                          (C26354 + C26364 * C26513) * ae) /
                         C26121;
    const double C4542 =
        (C26423 * C26488 + C26354 * ae + C26759 * C26580) / C26121;
    const double C6098 =
        (C26453 * (C26488 + C26423 * C26759 + C26756 * ae)) / C26121;
    const double C7554 = (2 * (C26453 * C26543 + C26354 * ae) +
                          C26453 * (C26543 + C26453 * C26847 + C26844 * ae) +
                          (C26354 + C26364 * C26580) * ae) /
                         C26121;
    const double C3269 = C27517 * C3262;
    const double C3423 = C27518 * C3416;
    const double C886 = C233 * C678;
    const double C1094 = C404 * C678;
    const double C9600 = C9186 * C678;
    const double C817 = C27517 * C803;
    const double C1572 = C233 * C1360;
    const double C1780 = C404 * C1360;
    const double C18658 = C9186 * C1360;
    const double C1645 = C27518 * C1631;
    const double C3192 = C233 * C2964;
    const double C3422 = C404 * C2964;
    const double C11538 = C9186 * C2964;
    const double C3268 = C233 * C3036;
    const double C3498 = C404 * C3036;
    const double C11616 = C9186 * C3036;
    const double C3115 = C27517 * C3108;
    const double C3345 = C27518 * C3338;
    const double C816 = C233 * C602;
    const double C1024 = C404 * C602;
    const double C9520 = C9186 * C602;
    const double C1436 = C233 * C1222;
    const double C1644 = C404 * C1222;
    const double C18508 = C9186 * C1222;
    const double C3114 = C233 * C2886;
    const double C3344 = C404 * C2886;
    const double C11454 = C9186 * C2886;
    const double C101 =
        (-2 * (C26347 * C26361 + C26354 * ce)) / C26137 -
        (C26347 * (C26347 * C26380 + C26361 + C26370 * ce)) / C26137 -
        ((C26354 + C26364 * C26355) * ce) / C26137;
    const double C609 =
        -(C26423 * (C26347 * C26380 + C26361 + C26370 * ce)) / C26137;
    const double C613 =
        -(C26380 * C26513 + C26347 * C26361 + C26354 * ce) / C26137;
    const double C1229 =
        -(C26453 * (C26347 * C26380 + C26361 + C26370 * ce)) / C26137;
    const double C1233 =
        -(C26380 * C26580 + C26347 * C26361 + C26354 * ce) / C26137;
    const double C2891 = -(C26453 * C26423 * C26380) / C26137;
    const double C4753 =
        (-(C26423 * C26573) / C26137) / C26121 - (C26543 * ce) / C26348 -
        (ae * C26453 * C26758) / C26348 +
        C26453 * (C26453 * ((-(C26423 * C26576) / C26137) / C26121 - C26556) -
                  (ae * C26758) / C26348);
    const double C6309 =
        C26453 * ((-(C26804 * ce) / C26137) / C26121 - C26573 / C26348 +
                  C26423 * ((-(C26423 * C26576) / C26137) / C26121 - C26556)) -
        (ae * (C26423 * C26758 + C26429 + C26756 * ce)) / C26348;
    const double C4064 =
        (-2 * (C26423 * C26429 + C26354 * ce)) / C26137 -
        (C26423 * (C26423 * C26758 + C26429 + C26756 * ce)) / C26137 -
        ((C26354 + C26364 * C26513) * ce) / C26137;
    const double C4434 =
        -(C26758 * C26580 + C26423 * C26429 + C26354 * ce) / C26137;
    const double C5990 =
        -(C26453 * (C26423 * C26758 + C26429 + C26756 * ce)) / C26137;
    const double C7406 =
        (-2 * (C26453 * C26459 + C26354 * ce)) / C26137 -
        (C26453 * (C26453 * C26846 + C26459 + C26844 * ce)) / C26137 -
        ((C26354 + C26364 * C26580) * ce) / C26137;
    const double C107 =
        2 * ((-(C26362 * ce) / C26137) / C26121 - (ae * C26361) / C26348 -
             (C26347 * C26379) / C26348) -
        (ae * (C26347 * C26380 + C26361 + C26370 * ce)) / C26348 -
        ((C26362 + C26347 * C26381 + C26370 * ae) * ce) / C26348 +
        C26347 *
            ((-(ae * C26380) / C26137) / C26121 - C26379 / C26348 -
             (C26381 * ce) / C26348 +
             C26347 *
                 ((-(C26375 * ce) / C26137) / C26121 - (ae * C26374) / C26348 -
                  (C26347 *
                   (C26365 * C26366 + C26355 * bs[5] * std::pow(C26351, 5)) *
                   C26356) /
                      C26348));
    const double C616 = (-(C26423 * C26362 * ce) / C26137) / C26121 -
                        (ae * C26423 * C26361) / C26348 -
                        (C26347 * C26423 * C26379) / C26348;
    const double C619 = (-(C26379 * C26513) / C26137) / C26121 -
                        ((C26354 + C26355 * C26352 * C26358) * C26356) / C26348;
    const double C1236 = (-(C26453 * C26362 * ce) / C26137) / C26121 -
                         (ae * C26453 * C26361) / C26348 -
                         (C26347 * C26453 * C26379) / C26348;
    const double C1239 =
        (-(C26379 * C26580) / C26137) / C26121 -
        ((C26354 + C26355 * C26352 * C26358) * C26356) / C26348;
    const double C2894 = (-(C26453 * C26423 * C26379) / C26137) / C26121;
    const double C299 =
        (-2 * C26347 * C26518) / C26348 +
        C26347 * ((-((C26385 + C26513 * C26386 * C26387) * C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26518 / C26348);
    const double C874 =
        (-(ae * (C26423 * C26429 + C26354 * ce)) / C26137) / C26121 -
        ((C26354 + C26513 * C26352 * C26358) * C26356) / C26348 -
        ((C26423 * C26488 + C26354 * ae) * ce) / C26348 +
        C26423 * ((-(C26488 * ce) / C26137) / C26121 - (ae * C26429) / C26348 -
                  (C26423 * C26518) / C26348);
    const double C875 = (-(C26347 * C26488 * ce) / C26137) / C26121 -
                        (ae * C26347 * C26429) / C26348 -
                        (C26423 * C26347 * C26518) / C26348;
    const double C1493 = (-(C26453 * C26347 * C26518) / C26137) / C26121;
    const double C1496 =
        (-(C26518 * C26580) / C26137) / C26121 -
        ((C26354 + C26513 * C26352 * C26358) * C26356) / C26348;
    const double C3185 = (-(C26453 * C26488 * ce) / C26137) / C26121 -
                         (ae * C26453 * C26429) / C26348 -
                         (C26423 * C26453 * C26518) / C26348;
    const double C524 =
        (-2 * C26347 * C26585) / C26348 +
        C26347 * ((-((C26385 + C26580 * C26386 * C26387) * C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26585 / C26348);
    const double C1149 = (-(C26423 * C26347 * C26585) / C26137) / C26121;
    const double C1151 =
        (-(C26585 * C26513) / C26137) / C26121 -
        ((C26354 + C26580 * C26352 * C26358) * C26356) / C26348;
    const double C1768 =
        (-(ae * (C26453 * C26459 + C26354 * ce)) / C26137) / C26121 -
        ((C26354 + C26580 * C26352 * C26358) * C26356) / C26348 -
        ((C26453 * C26543 + C26354 * ae) * ce) / C26348 +
        C26453 * ((-(C26543 * ce) / C26137) / C26121 - (ae * C26459) / C26348 -
                  (C26453 * C26585) / C26348);
    const double C1769 = (-(C26347 * C26543 * ce) / C26137) / C26121 -
                         (ae * C26347 * C26459) / C26348 -
                         (C26453 * C26347 * C26585) / C26348;
    const double C3491 = (-(C26423 * C26543 * ce) / C26137) / C26121 -
                         (ae * C26423 * C26459) / C26348 -
                         (C26453 * C26423 * C26585) / C26348;
    const double C13038 = C9186 * C4488;
    const double C13368 = C404 * C4488;
    const double C21641 = C233 * C4488;
    const double C13251 = C27518 * C4700;
    const double C12918 = C9186 * C4376;
    const double C13250 = C404 * C4376;
    const double C21522 = C233 * C4376;
    const double C12546 = C12542 + C12543;
    const double C14498 = C14494 + C14495;
    const double C24296 = C24292 + C24293;
    const double C312 = C305 + C306;
    const double C483 = C476 + C477;
    const double C366 = C359 + C360;
    const double C537 = C530 + C531;
    const double C260 = C251 + C252;
    const double C259 = C249 + C250;
    const double C261 = C253 + C254;
    const double C820 = C812 + C813;
    const double C2010 = C2006 + C2007;
    const double C1440 = C1432 + C1433;
    const double C2524 = C2520 + C2521;
    const double C18729 = C18723 + C18724;
    const double C20205 = C20201 + C20202;
    const double C24420 = C24416 + C24417;
    const double C431 = C422 + C423;
    const double C430 = C420 + C421;
    const double C432 = C424 + C425;
    const double C1028 = C1020 + C1021;
    const double C2186 = C2182 + C2183;
    const double C9891 = C9885 + C9886;
    const double C1648 = C1640 + C1641;
    const double C2700 = C2696 + C2697;
    const double C11893 = C11889 + C11890;
    const double C12780 = C12776 + C12777;
    const double C14826 = C14822 + C14823;
    const double C26414 = C26347 * C26411;
    const double C26787 = C26423 * C26411;
    const double C4021 =
        (2 * C26423 * C26381 + C26423 * (C26381 + C26411 * C26513)) / C26121;
    const double C5935 = (C26453 * (C26381 + C26411 * C26513)) / C26121;
    const double C7325 =
        (2 * C26453 * C26381 + C26453 * (C26381 + C26411 * C26580)) / C26121;
    const double C13031 =
        (-(C26471 * C26513) / C26137) / C26121 - C26464 / C26348 -
        (C26453 * C26860 * ce) / C26348 +
        C26453 * (C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26460 * C26513) /
                             C26137) /
                                C26121 -
                            C26471 / C26348) -
                  (C26860 * ce) / C26348);
    const double C14607 =
        C26453 * ((-2 * C26423 * C26471) / C26348 +
                  C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26460 * C26513) /
                             C26137) /
                                C26121 -
                            C26471 / C26348)) -
        ((2 * C26789 + C26423 * C26860) * ce) / C26348;
    const double C12535 = (3 * (C26362 + C26375 * C26513) +
                           C26423 * (2 * C26789 + C26423 * C26860)) /
                          C26121;
    const double C12913 = (C26362 + C26375 * C26513 + C26860 * C26580) / C26121;
    const double C14491 = (C26453 * (2 * C26789 + C26423 * C26860)) / C26121;
    const double C24289 = (3 * (C26362 + C26375 * C26580) +
                           C26453 * (2 * C26963 + C26453 * C26967)) /
                          C26121;
    const double C26413 = C26347 * C26410;
    const double C26797 = C26423 * C26410;
    const double C4019 = (-2 * C26423 * C26380) / C26137 -
                         (C26423 * (C26410 * C26513 + C26380)) / C26137;
    const double C5933 = -(C26453 * (C26410 * C26513 + C26380)) / C26137;
    const double C7323 = (-2 * C26453 * C26380) / C26137 -
                         (C26453 * (C26410 * C26580 + C26380)) / C26137;
    const double C13246 =
        (-(C26555 * C26513) / C26137) / C26121 - C26548 / C26348 -
        (ae * C26453 * C26869) / C26348 +
        C26453 * (C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26544 * C26513) /
                             C26137) /
                                C26121 -
                            C26555 / C26348) -
                  (ae * C26869) / C26348);
    const double C14666 =
        2 * ((-(C26423 * C26927) / C26137) / C26121 -
             (ae * C26453 * C26374) / C26348) -
        (ae * C26453 * C26869) / C26348 +
        C26423 *
            ((-(ae * C26453 * C26423 * C26399) / C26137) / C26121 -
             C26927 / C26348 +
             C26423 *
                 ((-(C26423 * C26453 * std::pow(C26345, 6) * bs[6] * C26489) /
                   C26137) /
                      C26121 -
                  (ae * C26453 * C26399) / C26348));
    const double C14820 =
        (((-2 * C26799) / C26137 - (C26423 * C26869) / C26137) * ae) / C26121 +
        C26453 * ((-2 * C26423 * C26555) / C26348 +
                  C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26544 * C26513) /
                             C26137) /
                                C26121 -
                            C26555 / C26348));
    const double C12534 =
        (-3 * (C26374 * C26513 + C26361)) / C26137 +
        C26423 * ((-2 * C26799) / C26137 - (C26423 * C26869) / C26137);
    const double C12912 =
        -(C26869 * C26580 + C26374 * C26513 + C26361) / C26137;
    const double C14490 =
        C26453 * ((-2 * C26799) / C26137 - (C26423 * C26869) / C26137);
    const double C24288 =
        (-3 * (C26374 * C26580 + C26361)) / C26137 +
        C26453 * ((-2 * C26978) / C26137 - (C26453 * C26982) / C26137);
    const double C26412 = C26347 * C26409;
    const double C26700 = C26423 * C26409;
    const double C26710 = C26453 * C26409;
    const double C618 = (-(ae * C26423 * C26380) / C26137) / C26121 -
                        (C26423 * C26379) / C26348 -
                        (C26423 * C26381 * ce) / C26348 +
                        C26347 * ((-(C26423 * C26375 * ce) / C26137) / C26121 -
                                  (ae * C26423 * C26374) / C26348 -
                                  (C26347 * C26423 * C26409) / C26348);
    const double C620 =
        (-((C26362 + C26375 * C26513) * ce) / C26137) / C26121 -
        (ae * (C26374 * C26513 + C26361)) / C26348 +
        C26347 * ((-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348);
    const double C621 =
        (-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348 -
        (ae * (C26410 * C26513 + C26380)) / C26348 -
        ((C26381 + C26411 * C26513) * ce) / C26348 +
        C26347 *
            ((-((C26375 + C26402 * C26513) * ce) / C26137) / C26121 -
             (ae * (C26399 * C26513 + C26374)) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C1238 = (-(ae * C26453 * C26380) / C26137) / C26121 -
                         (C26453 * C26379) / C26348 -
                         (C26453 * C26381 * ce) / C26348 +
                         C26347 * ((-(C26453 * C26375 * ce) / C26137) / C26121 -
                                   (ae * C26453 * C26374) / C26348 -
                                   (C26347 * C26453 * C26409) / C26348);
    const double C1240 =
        (-((C26362 + C26375 * C26580) * ce) / C26137) / C26121 -
        (ae * (C26374 * C26580 + C26361)) / C26348 +
        C26347 * ((-(C26409 * C26580) / C26137) / C26121 - C26379 / C26348);
    const double C1241 =
        (-(C26409 * C26580) / C26137) / C26121 - C26379 / C26348 -
        (ae * (C26410 * C26580 + C26380)) / C26348 -
        ((C26381 + C26411 * C26580) * ce) / C26348 +
        C26347 *
            ((-((C26375 + C26402 * C26580) * ce) / C26137) / C26121 -
             (ae * (C26399 * C26580 + C26374)) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C4024 =
        (-2 * C26423 * C26379) / C26348 +
        C26423 * ((-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348);
    const double C5937 =
        (-(C26453 * (C26375 + C26402 * C26513) * ce) / C26137) / C26121 -
        (ae * C26453 * (C26399 * C26513 + C26374)) / C26348 +
        C26347 * C26453 *
            ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                C26356 * C26513) /
              C26137) /
                 C26121 -
             C26409 / C26348);
    const double C5938 =
        C26453 * ((-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348);
    const double C7328 =
        (-2 * C26453 * C26379) / C26348 +
        C26453 * ((-(C26409 * C26580) / C26137) / C26121 - C26379 / C26348);
    const double C12914 =
        (-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348 +
        ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) * C26356 *
            C26513) /
          C26137) /
             C26121 -
         C26409 / C26348) *
            C26580;
    const double C1706 =
        (-(C26576 * C26355) / C26137) / C26121 - C26573 / C26348 -
        (ae * C26453 * C26447) / C26348 +
        C26453 * (C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348) -
                  (ae * C26447) / C26348);
    const double C2751 =
        (((-2 * C26437) / C26137 - (C26347 * C26447) / C26137) * ae) / C26121 +
        C26453 * ((-2 * C26347 * C26576) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348));
    const double C148 =
        (-3 * (C26435 * C26355 + C26429)) / C26137 +
        C26347 * ((-2 * C26437) / C26137 - (C26347 * C26447) / C26137);
    const double C680 = -(C26423 * (C26423 * C26447 + C26401 * ce) +
                          C26435 * C26355 + C26429 + C26423 * C26401 * ce) /
                        C26137;
    const double C1297 = -(C26447 * C26580 + C26435 * C26355 + C26429) / C26137;
    const double C1899 =
        C26423 * ((-2 * C26437) / C26137 - (C26347 * C26447) / C26137) -
        ((2 * C26370 + C26347 * C26401) * ce) / C26137;
    const double C2411 =
        C26453 * ((-2 * C26437) / C26137 - (C26347 * C26447) / C26137);
    const double C2965 = -(C26453 * (C26423 * C26447 + C26401 * ce)) / C26137;
    const double C26767 = C26765 + C26400;
    const double C26888 = C26423 * C26882;
    const double C15929 = (-2 * C26453 * C26758) / C26137 -
                          (C26453 * (C26882 * C26580 + C26758)) / C26137;
    const double C24333 =
        (-3 * (C26435 * C26580 + C26429)) / C26137 +
        C26453 * ((-2 * C26987) / C26137 - (C26453 * C26991) / C26137);
    const double C946 =
        (-(C26535 * C26355) / C26137) / C26121 - C26532 / C26348 -
        (ae * C26423 * C26477) / C26348 +
        C26423 * (C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348) -
                  (ae * C26477) / C26348);
    const double C2123 =
        (((-2 * C26467) / C26137 - (C26347 * C26477) / C26137) * ae) / C26121 +
        C26423 * ((-2 * C26347 * C26535) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348));
    const double C193 =
        (-3 * (C26465 * C26355 + C26459)) / C26137 +
        C26347 * ((-2 * C26467) / C26137 - (C26347 * C26477) / C26137);
    const double C742 = -(C26477 * C26513 + C26465 * C26355 + C26459) / C26137;
    const double C1362 = -(C26453 * (C26453 * C26477 + C26401 * ce) +
                           C26465 * C26355 + C26459 + C26453 * C26401 * ce) /
                         C26137;
    const double C1951 =
        C26423 * ((-2 * C26467) / C26137 - (C26347 * C26477) / C26137);
    const double C2465 =
        C26453 * ((-2 * C26467) / C26137 - (C26347 * C26477) / C26137) -
        ((2 * C26370 + C26347 * C26401) * ce) / C26137;
    const double C3037 =
        -(C26453 * C26423 * C26477 + C26423 * C26401 * ce) / C26137;
    const double C6204 =
        (-(C26453 * C26770) / C26137) / C26121 - (C26496 * ce) / C26348 -
        (ae * (C26453 * C26806 + C26763 * ce)) / C26348 +
        C26423 *
            (C26423 *
                 ((-(C26453 * C26347 * std::pow(C26345, 6) * bs[6] * C26529) /
                   C26137) /
                      C26121 -
                  (C26764 * ce) / C26348) -
             (ae * (C26453 * C26771 + C26400)) / C26348);
    const double C4487 = -(C26453 * (C26453 * C26806 + C26763 * ce) +
                           C26423 * C26467 + C26453 * C26763 * ce) /
                         C26137;
    const double C26852 = C26849 + C26400;
    const double C12622 =
        (-3 * (C26465 * C26513 + C26459)) / C26137 +
        C26423 * ((-2 * C26803) / C26137 - (C26423 * C26900) / C26137);
    const double C13030 = -(C26453 * (C26453 * C26900 + C26884 * ce) +
                            C26465 * C26513 + C26459 + C26453 * C26884 * ce) /
                          C26137;
    const double C14606 =
        C26453 * ((-2 * C26803) / C26137 - (C26423 * C26900) / C26137) -
        ((2 * C26756 + C26423 * C26884) * ce) / C26137;
    const double C26958 = C26956 + C26883;
    const double C27010 = C26453 * C27004;
    const double C1564 =
        (-(C26535 * C26355) / C26137) / C26121 - C26532 / C26348 -
        (C26453 * C26506 * ce) / C26348 +
        C26453 * (C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348) -
                  (C26506 * ce) / C26348);
    const double C2631 =
        C26453 * ((-2 * C26347 * C26535) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348)) -
        ((2 * C26496 + C26347 * C26506) * ce) / C26348;
    const double C3263 =
        C26423 * (C26453 * ((-(std::pow(C26345, 6) * bs[6] * C26529 * C26355) /
                             C26137) /
                                C26121 -
                            C26535 / C26348) -
                  (C26506 * ce) / C26348) -
        (ae * (C26453 * C26477 + C26401 * ce)) / C26348;
    const double C238 = (3 * (C26488 + C26494 * C26355) +
                         C26347 * (2 * C26496 + C26347 * C26506)) /
                        C26121;
    const double C804 =
        (C26488 + C26494 * C26355 + C26423 * (C26423 * C26506 + C26401 * ae) +
         C26423 * C26401 * ae) /
        C26121;
    const double C1424 = (C26488 + C26494 * C26355 + C26506 * C26580) / C26121;
    const double C2003 = (C26423 * (2 * C26496 + C26347 * C26506) +
                          (2 * C26370 + C26347 * C26401) * ae) /
                         C26121;
    const double C2517 = (C26453 * (2 * C26496 + C26347 * C26506)) / C26121;
    const double C3109 = (C26453 * (C26423 * C26506 + C26401 * ae)) / C26121;
    const double C26768 = C26766 + C26403;
    const double C26889 = C26423 * C26885;
    const double C16001 =
        (2 * C26453 * C26759 + C26453 * (C26759 + C26885 * C26580)) / C26121;
    const double C24413 = (3 * (C26488 + C26494 * C26580) +
                           C26453 * (2 * C26974 + C26453 * C26976)) /
                          C26121;
    const double C26761 = C26347 * C26523;
    const double C26875 = C26423 * C26523;
    const double C26929 = C26453 * C26523;
    const double C300 =
        3 * ((-(C26523 * C26355) / C26137) / C26121 - C26518 / C26348) +
        C26347 *
            ((-2 * C26347 * C26523) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C876 =
        (-(ae * (C26423 * C26437 + C26370 * ce)) / C26137) / C26121 -
        (C26347 * C26518) / C26348 -
        ((C26423 * C26496 + C26370 * ae) * ce) / C26348 +
        C26423 * ((-(C26496 * ce) / C26137) / C26121 - (ae * C26437) / C26348 -
                  (C26423 * C26347 * C26523) / C26348);
    const double C877 =
        (-((C26488 + C26494 * C26355) * ce) / C26137) / C26121 -
        (ae * (C26435 * C26355 + C26429)) / C26348 +
        C26423 * ((-(C26523 * C26355) / C26137) / C26121 - C26518 / C26348);
    const double C878 =
        (-(C26523 * C26355) / C26137) / C26121 - C26518 / C26348 -
        (ae * (C26423 * C26447 + C26401 * ce)) / C26348 -
        ((C26423 * C26506 + C26401 * ae) * ce) / C26348 +
        C26423 *
            ((-(C26506 * ce) / C26137) / C26121 - (ae * C26447) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C1494 =
        C26453 * ((-(C26523 * C26355) / C26137) / C26121 - C26518 / C26348);
    const double C1497 = (-(C26347 * C26523 * C26580) / C26137) / C26121 -
                         (C26347 * C26518) / C26348;
    const double C1498 =
        (-(C26523 * C26355) / C26137) / C26121 - C26518 / C26348 +
        ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) * C26356 *
            C26355) /
          C26137) /
             C26121 -
         C26523 / C26348) *
            C26580;
    const double C2061 =
        (((-2 * C26437) / C26137 - (C26347 * C26447) / C26137) * ae) / C26121 -
        ((2 * C26496 + C26347 * C26506) * ce) / C26348 +
        C26423 *
            ((-2 * C26347 * C26523) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C2575 =
        C26453 *
        ((-2 * C26347 * C26523) / C26348 +
         C26347 * ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                      C26356 * C26355) /
                    C26137) /
                       C26121 -
                   C26523 / C26348));
    const double C3186 = (-(C26453 * C26496 * ce) / C26137) / C26121 -
                         (ae * C26453 * C26437) / C26348 -
                         (C26423 * C26453 * C26347 * C26523) / C26348;
    const double C3187 =
        (-(C26453 * C26506 * ce) / C26137) / C26121 -
        (ae * C26453 * C26447) / C26348 +
        C26423 * C26453 *
            ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                C26356 * C26355) /
              C26137) /
                 C26121 -
             C26523 / C26348);
    const double C4177 =
        2 * ((-(C26488 * ce) / C26137) / C26121 - (ae * C26429) / C26348 -
             (C26423 * C26518) / C26348) -
        (ae * (C26423 * C26758 + C26429 + C26756 * ce)) / C26348 -
        ((C26488 + C26423 * C26759 + C26756 * ae) * ce) / C26348 +
        C26423 * ((-(ae * C26758) / C26137) / C26121 - C26518 / C26348 -
                  (C26759 * ce) / C26348 +
                  C26423 * ((-C26498 / C26137) / C26121 - C26442 -
                            (C26423 * C26523) / C26348));
    const double C4595 =
        (-((C26488 + C26494 * C26580) * ce) / C26137) / C26121 -
        (ae * (C26435 * C26580 + C26429)) / C26348 +
        C26423 * ((-(C26523 * C26580) / C26137) / C26121 - C26518 / C26348);
    const double C6151 = (-(ae * C26453 * C26758) / C26137) / C26121 -
                         (C26453 * C26518) / C26348 -
                         (C26453 * C26759 * ce) / C26348 +
                         C26423 * ((-(C26453 * C26494 * ce) / C26137) / C26121 -
                                   (ae * C26453 * C26435) / C26348 -
                                   (C26423 * C26453 * C26523) / C26348);
    const double C7482 =
        (-2 * C26453 * C26518) / C26348 +
        C26453 * ((-(C26523 * C26580) / C26137) / C26121 - C26518 / C26348);
    const double C13143 =
        (-(C26523 * C26580) / C26137) / C26121 - C26518 / C26348 -
        (ae * (C26882 * C26580 + C26758)) / C26348 -
        ((C26759 + C26885 * C26580) * ce) / C26348 +
        C26423 *
            ((-((C26494 + C26502 * C26580) * ce) / C26137) / C26121 -
             (ae * (C26443 * C26580 + C26435)) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C1086 =
        (-(C26576 * C26355) / C26137) / C26121 - C26573 / C26348 -
        (C26423 * C26561 * ce) / C26348 +
        C26423 * (C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348) -
                  (C26561 * ce) / C26348);
    const double C2237 =
        C26423 * ((-2 * C26347 * C26576) / C26348 +
                  C26347 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348)) -
        ((2 * C26551 + C26347 * C26561) * ce) / C26348;
    const double C3417 =
        C26453 * (C26423 * ((-(std::pow(C26345, 6) * bs[6] * C26570 * C26355) /
                             C26137) /
                                C26121 -
                            C26576 / C26348) -
                  (C26561 * ce) / C26348) -
        (ae * (C26423 * C26447 + C26401 * ce)) / C26348;
    const double C409 = (3 * (C26543 + C26549 * C26355) +
                         C26347 * (2 * C26551 + C26347 * C26561)) /
                        C26121;
    const double C1012 = (C26543 + C26549 * C26355 + C26561 * C26513) / C26121;
    const double C1632 =
        (C26543 + C26549 * C26355 + C26453 * (C26453 * C26561 + C26401 * ae) +
         C26453 * C26401 * ae) /
        C26121;
    const double C2179 = (C26423 * (2 * C26551 + C26347 * C26561)) / C26121;
    const double C2693 = (C26453 * (2 * C26551 + C26347 * C26561) +
                          (2 * C26370 + C26347 * C26401) * ae) /
                         C26121;
    const double C3339 =
        (C26453 * C26423 * C26561 + C26423 * C26401 * ae) / C26121;
    const double C4699 =
        (C26423 * C26551 + C26453 * (C26453 * C26807 + C26763 * ae) +
         C26453 * C26763 * ae) /
        C26121;
    const double C26853 = C26851 + C26403;
    const double C12769 = (3 * (C26543 + C26549 * C26513) +
                           C26423 * (2 * C26804 + C26423 * C26909)) /
                          C26121;
    const double C13245 =
        (C26543 + C26549 * C26513 + C26453 * (C26453 * C26909 + C26884 * ae) +
         C26453 * C26884 * ae) /
        C26121;
    const double C14819 = (C26453 * (2 * C26804 + C26423 * C26909) +
                           (2 * C26756 + C26423 * C26884) * ae) /
                          C26121;
    const double C26959 = C26957 + C26886;
    const double C27011 = C26453 * C27007;
    const double C26780 = C26347 * C26590;
    const double C26952 = C26423 * C26590;
    const double C26997 = C26453 * C26590;
    const double C525 =
        3 * ((-(C26590 * C26355) / C26137) / C26121 - C26585 / C26348) +
        C26347 *
            ((-2 * C26347 * C26590) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C1152 = (-(C26347 * C26590 * C26513) / C26137) / C26121 -
                         (C26347 * C26585) / C26348;
    const double C1153 =
        C26423 * ((-(C26590 * C26355) / C26137) / C26121 - C26585 / C26348);
    const double C1154 =
        (-(C26590 * C26355) / C26137) / C26121 - C26585 / C26348 +
        ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) * C26356 *
            C26355) /
          C26137) /
             C26121 -
         C26590 / C26348) *
            C26513;
    const double C1770 =
        (-(ae * (C26453 * C26467 + C26370 * ce)) / C26137) / C26121 -
        (C26347 * C26585) / C26348 -
        ((C26453 * C26551 + C26370 * ae) * ce) / C26348 +
        C26453 * ((-(C26551 * ce) / C26137) / C26121 - (ae * C26467) / C26348 -
                  (C26453 * C26347 * C26590) / C26348);
    const double C1771 =
        (-((C26543 + C26549 * C26355) * ce) / C26137) / C26121 -
        (ae * (C26465 * C26355 + C26459)) / C26348 +
        C26453 * ((-(C26590 * C26355) / C26137) / C26121 - C26585 / C26348);
    const double C1772 =
        (-(C26590 * C26355) / C26137) / C26121 - C26585 / C26348 -
        (ae * (C26453 * C26477 + C26401 * ce)) / C26348 -
        ((C26453 * C26561 + C26401 * ae) * ce) / C26348 +
        C26453 *
            ((-(C26561 * ce) / C26137) / C26121 - (ae * C26477) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C2299 =
        C26423 *
        ((-2 * C26347 * C26590) / C26348 +
         C26347 * ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                      C26356 * C26355) /
                    C26137) /
                       C26121 -
                   C26590 / C26348));
    const double C2807 =
        (((-2 * C26467) / C26137 - (C26347 * C26477) / C26137) * ae) / C26121 -
        ((2 * C26551 + C26347 * C26561) * ce) / C26348 +
        C26453 *
            ((-2 * C26347 * C26590) / C26348 +
             C26347 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26355) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C3492 = (-(C26423 * C26551 * ce) / C26137) / C26121 -
                         (ae * C26423 * C26467) / C26348 -
                         (C26453 * C26423 * C26347 * C26590) / C26348;
    const double C3493 =
        (-(C26423 * C26561 * ce) / C26137) / C26121 -
        (ae * C26423 * C26477) / C26348 +
        C26453 * C26423 *
            ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                C26356 * C26355) /
              C26137) /
                 C26121 -
             C26590 / C26348);
    const double C4324 =
        (-2 * C26423 * C26585) / C26348 +
        C26423 * ((-(C26590 * C26513) / C26137) / C26121 - C26585 / C26348);
    const double C4805 =
        (-(ae * (C26453 * C26803 + C26756 * ce)) / C26137) / C26121 -
        (C26423 * C26585) / C26348 -
        ((C26453 * C26804 + C26756 * ae) * ce) / C26348 +
        C26453 * ((-(C26804 * ce) / C26137) / C26121 - (ae * C26803) / C26348 -
                  (C26453 * C26423 * C26590) / C26348);
    const double C6361 =
        (-((C26543 + C26549 * C26513) * ce) / C26137) / C26121 -
        (ae * (C26465 * C26513 + C26459)) / C26348 +
        C26453 * ((-(C26590 * C26513) / C26137) / C26121 - C26585 / C26348);
    const double C7627 =
        2 * ((-(C26543 * ce) / C26137) / C26121 - (ae * C26459) / C26348 -
             (C26453 * C26585) / C26348) -
        (ae * (C26453 * C26846 + C26459 + C26844 * ce)) / C26348 -
        ((C26543 + C26453 * C26847 + C26844 * ae) * ce) / C26348 +
        C26453 * ((-(ae * C26846) / C26137) / C26121 - C26585 / C26348 -
                  (C26847 * ce) / C26348 +
                  C26453 * ((-C26553 / C26137) / C26121 - C26472 -
                            (C26453 * C26590) / C26348));
    const double C12855 =
        3 * ((-(C26590 * C26513) / C26137) / C26121 - C26585 / C26348) +
        C26423 *
            ((-2 * C26423 * C26590) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C13361 =
        (-(C26590 * C26513) / C26137) / C26121 - C26585 / C26348 -
        (ae * (C26453 * C26900 + C26884 * ce)) / C26348 -
        ((C26453 * C26909 + C26884 * ae) * ce) / C26348 +
        C26453 *
            ((-(C26909 * ce) / C26137) / C26121 - (ae * C26900) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C14933 =
        (((-2 * C26803) / C26137 - (C26423 * C26900) / C26137) * ae) / C26121 -
        ((2 * C26804 + C26423 * C26909) * ce) / C26348 +
        C26453 *
            ((-2 * C26423 * C26590) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26590 / C26348));
    const double C26404 = C26397 / C26121;
    const double C21642 = C27517 * C4647;
    const double C23178 = C27517 * C6203;
    const double C24500 = C27517 * C7517;
    const double C26887 = C26880 / C26121;
    const double C12820 = C27518 * C4287;
    const double C27009 = C27002 / C26121;
    const double C9604 = C9598 + C9599;
    const double C9603 = C9596 + C9597;
    const double C18595 = C18585 + C18586;
    const double C18597 = C18591 + C18592;
    const double C11540 = C11536 + C11537;
    const double C26448 = -C26446;
    const double C26861 = -C26859;
    const double C24339 = C24337 + C24338;
    const double C821 = C814 + C815;
    const double C1441 = C1434 + C1435;
    const double C18728 = C18721 + C18722;
    const double C20204 = C20199 + C20200;
    const double C26507 = -C26505;
    const double C26870 = -C26868;
    const double C21527 = C21524 + C21525;
    const double C23065 = C23062 + C23063;
    const double C24421 = C24418 + C24419;
    const double C9670 = C9663 + C9664;
    const double C9669 = C9659 + C9660;
    const double C18662 = C18656 + C18657;
    const double C18661 = C18654 + C18655;
    const double C11618 = C11611 + C11612;
    const double C26478 = -C26476;
    const double C26968 = -C26966;
    const double C12628 = C12626 + C12627;
    const double C14614 = C14612 + C14613;
    const double C367 = C363 + C364;
    const double C954 = C948 + C949;
    const double C18849 = C18846 + C18847;
    const double C1574 = C1569 + C1570;
    const double C20349 = C20347 + C20348;
    const double C26901 = -C26899;
    const double C26933 = -C26932;
    const double C955 = C952 + C953;
    const double C2128 = C2126 + C2127;
    const double C2642 = C2640 + C2641;
    const double C1029 = C1022 + C1023;
    const double C9890 = C9883 + C9884;
    const double C1649 = C1642 + C1643;
    const double C11892 = C11887 + C11888;
    const double C26562 = -C26560;
    const double C26983 = -C26981;
    const double C12781 = C12778 + C12779;
    const double C13255 = C13252 + C13253;
    const double C14827 = C14824 + C14825;
    const double C484 = C480 + C481;
    const double C9951 = C9948 + C9949;
    const double C1096 = C1091 + C1092;
    const double C1714 = C1709 + C1710;
    const double C11964 = C11962 + C11963;
    const double C26910 = -C26908;
    const double C26992 = -C26990;
    const double C2248 = C2246 + C2247;
    const double C2756 = C2754 + C2755;
    const double C1715 = C1712 + C1713;
    const double C12089 = C9529 * C3551;
    const double C12539 = C9529 * C27275;
    const double C13423 = C9529 * C27471;
    const double C9656 = C9528 * C188;
    const double C11608 = C9528 * C2463;
    const double C15542 = C9528 * C6515;
    const double C9672 = C9668 * C27314;
    const double C11609 = C9668 * C27482;
    const double C13034 = C9668 * C1215;
    const double C21355 = C18517 * C27275;
    const double C22311 = C18517 * C27471;
    const double C23381 = C18517 * C3551;
    const double C18582 = C18516 * C143;
    const double C20058 = C18516 * C1897;
    const double C21408 = C18516 * C3609;
    const double C18598 = C18594 * C27303;
    const double C20059 = C18594 * C27481;
    const double C23893 = C18594 * C593;
    const double C88 =
        (C26156 / C26142 - (0 * de) / C26137) / C26142 + (0 * ce) / C26137;
    const double C1842 = C26156 / C26142 - (0 * de) / C26137;
    const double C3558 = C26156 / C26142 + (0 * ce) / C26137;
    const double C26158 = C26155 / C26137;
    const double C12538 = C9528 * C4016;
    const double C21354 = C18516 * C4016;
    const double C27505 = C27469 - C27493;
    const double C27506 = C27473 - C27495;
    const double C9537 = C9529 * C591;
    const double C18525 = C18517 * C591;
    const double C4062 =
        (C26257 / C26142 - (0 * de) / C26137) / C26142 + (0 * ce) / C26137;
    const double C4916 = C26257 / C26142 - (0 * de) / C26137;
    const double C26256 = C26253 / C26137;
    const double C27509 = C27478 - C27499;
    const double C23892 = C18516 * C672;
    const double C27510 = C27485 - C27500;
    const double C21409 = C18594 * C3554;
    const double C7404 =
        (C26303 / C26142 - (0 * de) / C26137) / C26142 + (0 * ce) / C26137;
    const double C8386 = C26303 / C26142 - (0 * de) / C26137;
    const double C26302 = C26299 / C26137;
    const double C27511 = C27480 - C27502;
    const double C13033 = C9528 * C1354;
    const double C27512 = C27489 - C27503;
    const double C15543 = C9668 * C6413;
    const double C302 = C257 * C143;
    const double C356 = C257 * C188;
    const double C880 = C257 * C672;
    const double C1566 = C257 * C1354;
    const double C2063 = C257 * C1897;
    const double C2633 = C257 * C2463;
    const double C3762 = C257 * C3609;
    const double C6668 = C257 * C6515;
    const double C314 = C311 * C27303;
    const double C881 = C311 * C593;
    const double C2064 = C311 * C27481;
    const double C3763 = C311 * C3554;
    const double C368 = C365 * C27314;
    const double C1567 = C365 * C1215;
    const double C2634 = C365 * C27482;
    const double C6669 = C365 * C6413;
    const double C18731 = C18727 * C591;
    const double C21517 = C18727 * C27275;
    const double C22517 = C18727 * C27471;
    const double C23537 = C18727 * C3551;
    const double C18784 = C18726 * C143;
    const double C20274 = C18726 * C1897;
    const double C21516 = C18726 * C4016;
    const double C21580 = C18726 * C3609;
    const double C24048 = C18726 * C672;
    const double C18792 = C18790 * C27303;
    const double C20275 = C18790 * C27481;
    const double C21581 = C18790 * C3554;
    const double C24049 = C18790 * C593;
    const double C473 = C428 * C143;
    const double C527 = C428 * C188;
    const double C1088 = C428 * C672;
    const double C1774 = C428 * C1354;
    const double C2239 = C428 * C1897;
    const double C2809 = C428 * C2463;
    const double C3920 = C428 * C3609;
    const double C6826 = C428 * C6515;
    const double C485 = C482 * C27303;
    const double C1089 = C482 * C593;
    const double C2240 = C482 * C27481;
    const double C3921 = C482 * C3554;
    const double C539 = C536 * C27314;
    const double C1775 = C536 * C1215;
    const double C2810 = C536 * C27482;
    const double C6827 = C536 * C6413;
    const double C9893 = C9889 * C591;
    const double C12395 = C9889 * C3551;
    const double C12773 = C9889 * C27275;
    const double C13731 = C9889 * C27471;
    const double C10002 = C9888 * C188;
    const double C12031 = C9888 * C2463;
    const double C12772 = C9888 * C4016;
    const double C13363 = C9888 * C1354;
    const double C15850 = C9888 * C6515;
    const double C10010 = C10008 * C27314;
    const double C12032 = C10008 * C27482;
    const double C13364 = C10008 * C1215;
    const double C15851 = C10008 * C6413;
    const double C9538 = C9530 * C597;
    const double C9662 = C9530 * C188;
    const double C11615 = C9530 * C2463;
    const double C13424 = C9530 * C26156;
    const double C16380 = C9530 * C6515;
    const double C9661 = C9534 * C188;
    const double C12541 = C9534 * C4016;
    const double C14611 = C9534 * C2463;
    const double C15548 = C9534 * C6515;
    const double C18526 = C18518 * C597;
    const double C18587 = C18518 * C143;
    const double C20064 = C18518 * C1897;
    const double C22312 = C18518 * C26156;
    const double C22382 = C18518 * C3609;
    const double C18593 = C18522 * C143;
    const double C21357 = C18522 * C4016;
    const double C21414 = C18522 * C3609;
    const double C25762 = C18522 * C1897;
    const double C11610 = C11464 * C2464;
    const double C12917 = C11464 * C4016;
    const double C13035 = C11464 * C1355;
    const double C15544 = C11464 * C6516;
    const double C20060 = C11464 * C1898;
    const double C21410 = C11464 * C3610;
    const double C23894 = C11464 * C673;
    const double C10517 = C27516 * C605;
    const double C9521 = C27516 * C611;
    const double C19505 = C27516 * C1225;
    const double C18509 = C27516 * C1231;
    const double C11455 = C27516 * C2889;
    const double C21523 = C27517 * C4542;
    const double C23061 = C27517 * C6098;
    const double C1097 = C1094 + C1095;
    const double C1575 = C1572 + C1573;
    const double C3424 = C3422 + C3423;
    const double C3270 = C3268 + C3269;
    const double C822 = C816 + C817;
    const double C1030 = C1024 + C1025;
    const double C1442 = C1436 + C1437;
    const double C1650 = C1644 + C1645;
    const double C3118 = C3114 + C3115;
    const double C3348 = C3344 + C3345;
    const double C255 = C233 * C101;
    const double C426 = C404 * C101;
    const double C2008 = C233 * C609;
    const double C2184 = C404 * C609;
    const double C10518 = C9186 * C609;
    const double C818 = C233 * C613;
    const double C1026 = C404 * C613;
    const double C9526 = C9186 * C613;
    const double C2522 = C233 * C1229;
    const double C2698 = C404 * C1229;
    const double C19506 = C9186 * C1229;
    const double C1438 = C233 * C1233;
    const double C1646 = C404 * C1233;
    const double C18514 = C9186 * C1233;
    const double C3116 = C233 * C2891;
    const double C3346 = C404 * C2891;
    const double C11460 = C9186 * C2891;
    const double C13310 = C27518 * C4753;
    const double C14882 = C27518 * C6309;
    const double C12586 = C9186 * C4064;
    const double C12819 = C404 * C4064;
    const double C12978 = C9186 * C4434;
    const double C13309 = C404 * C4434;
    const double C21587 = C233 * C4434;
    const double C14554 = C9186 * C5990;
    const double C14881 = C404 * C5990;
    const double C23123 = C233 * C5990;
    const double C24377 = C9186 * C7406;
    const double C24499 = C233 * C7406;
    const double C9519 = C27516 * C616;
    const double C9523 = C27516 * C619;
    const double C18507 = C27516 * C1236;
    const double C18511 = C27516 * C1239;
    const double C11457 = C27516 * C2894;
    const double C310 = C27517 * C299;
    const double C884 = C27517 * C875;
    const double C1502 = C27517 * C1493;
    const double C18788 = C27517 * C1496;
    const double C20278 = C27517 * C3185;
    const double C535 = C27518 * C524;
    const double C1157 = C27518 * C1149;
    const double C10006 = C27518 * C1151;
    const double C1778 = C27518 * C1769;
    const double C12035 = C27518 * C3491;
    const double C13040 = C13038 + C13039;
    const double C12922 = C12918 + C12919;
    const double C13254 = C13250 + C13251;
    const double C12548 = C12546 * C4016;
    const double C12625 = C12546 * C188;
    const double C14500 = C14498 * C4016;
    const double C14609 = C14498 * C2464;
    const double C15546 = C14498 * C6516;
    const double C23896 = C14498 * C674;
    const double C24298 = C24296 * C4016;
    const double C24336 = C24296 * C143;
    const double C315 = C312 * C27303;
    const double C2068 = C312 * C27481;
    const double C3767 = C312 * C3554;
    const double C486 = C483 * C27303;
    const double C2244 = C483 * C27481;
    const double C3925 = C483 * C3554;
    const double C369 = C366 * C27314;
    const double C2638 = C366 * C27482;
    const double C6673 = C366 * C6413;
    const double C540 = C537 * C27314;
    const double C2814 = C537 * C27482;
    const double C6831 = C537 * C6413;
    const double C307 = C259 * C143;
    const double C361 = C259 * C188;
    const double C2069 = C259 * C1897;
    const double C2639 = C259 * C2463;
    const double C3768 = C259 * C3609;
    const double C6674 = C259 * C6515;
    const double C308 = C261 * C143;
    const double C362 = C261 * C188;
    const double C882 = C820 * C673;
    const double C950 = C820 * C188;
    const double C2065 = C820 * C1898;
    const double C3267 = C820 * C2463;
    const double C3764 = C820 * C3610;
    const double C8028 = C820 * C6515;
    const double C2067 = C2010 * C1898;
    const double C2125 = C2010 * C188;
    const double C3766 = C2010 * C3610;
    const double C1500 = C1440 * C143;
    const double C1568 = C1440 * C1355;
    const double C2635 = C1440 * C2464;
    const double C3191 = C1440 * C1897;
    const double C5612 = C1440 * C3609;
    const double C6670 = C1440 * C6516;
    const double C18718 = C1440 * C597;
    const double C22518 = C1440 * C26156;
    const double C2577 = C2524 * C143;
    const double C2637 = C2524 * C2464;
    const double C6672 = C2524 * C6516;
    const double C18789 = C18729 * C143;
    const double C21519 = C18729 * C4016;
    const double C21586 = C18729 * C3609;
    const double C25916 = C18729 * C1897;
    const double C20276 = C20205 * C1898;
    const double C21520 = C20205 * C4016;
    const double C21582 = C20205 * C3610;
    const double C24050 = C20205 * C673;
    const double C24422 = C24420 * C4016;
    const double C24459 = C24420 * C143;
    const double C478 = C430 * C143;
    const double C532 = C430 * C188;
    const double C2245 = C430 * C1897;
    const double C2815 = C430 * C2463;
    const double C3926 = C430 * C3609;
    const double C6832 = C430 * C6515;
    const double C479 = C432 * C143;
    const double C533 = C432 * C188;
    const double C1090 = C1028 * C673;
    const double C1158 = C1028 * C188;
    const double C2241 = C1028 * C1898;
    const double C3497 = C1028 * C2463;
    const double C3922 = C1028 * C3610;
    const double C8230 = C1028 * C6515;
    const double C9880 = C1028 * C597;
    const double C13732 = C1028 * C26156;
    const double C2243 = C2186 * C1898;
    const double C2301 = C2186 * C188;
    const double C3924 = C2186 * C3610;
    const double C10007 = C9891 * C188;
    const double C12775 = C9891 * C4016;
    const double C14937 = C9891 * C2463;
    const double C15856 = C9891 * C6515;
    const double C1708 = C1648 * C143;
    const double C1776 = C1648 * C1355;
    const double C2811 = C1648 * C2464;
    const double C3421 = C1648 * C1897;
    const double C5814 = C1648 * C3609;
    const double C6828 = C1648 * C6516;
    const double C2753 = C2700 * C143;
    const double C2813 = C2700 * C2464;
    const double C6830 = C2700 * C6516;
    const double C12033 = C11893 * C2464;
    const double C13249 = C11893 * C4016;
    const double C13365 = C11893 * C1355;
    const double C15852 = C11893 * C6516;
    const double C12782 = C12780 * C4016;
    const double C12857 = C12780 * C188;
    const double C14828 = C14826 * C4016;
    const double C14935 = C14826 * C2464;
    const double C15854 = C14826 * C6516;
    const double C26417 = C26375 + C26414;
    const double C4379 = (C26423 * C26381 + C26787 * C26580) / C26121;
    const double C26416 = C26413 + C26374;
    const double C4377 = -(C26797 * C26580 + C26423 * C26380) / C26137;
    const double C26415 = C26412 / C26348;
    const double C2895 = (-(C26453 * C26423 * C26375 * ce) / C26137) / C26121 -
                         (ae * C26453 * C26423 * C26374) / C26348 -
                         (C26347 * C26453 * C26700) / C26348;
    const double C2896 =
        (-(ae * C26453 * C26423 * C26410) / C26137) / C26121 -
        (C26453 * C26700) / C26348 - (C26453 * C26423 * C26411 * ce) / C26348 +
        C26347 * ((-(C26453 * C26423 * C26402 * ce) / C26137) / C26121 -
                  (ae * C26453 * C26423 * C26399) / C26348 -
                  (C26347 * C26453 * C26423 *
                   (C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348);
    const double C4023 =
        (((-2 * C26423 * C26374) / C26137 -
          (C26423 * (C26399 * C26513 + C26374)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26423 * C26375 + C26423 * (C26375 + C26402 * C26513)) * ce) /
            C26348 +
        C26347 *
            ((-2 * C26700) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C4381 =
        (-((C26423 * C26375 + C26423 * C26402 * C26580) * ce) / C26137) /
            C26121 -
        (ae * (C26423 * C26399 * C26580 + C26423 * C26374)) / C26348 +
        C26347 * ((-(C26423 *
                     (C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26700 / C26348);
    const double C4382 =
        (-(C26700 * C26580) / C26137) / C26121 - (C26423 * C26379) / C26348;
    const double C12536 =
        3 * ((-(C26409 * C26513) / C26137) / C26121 - C26379 / C26348) +
        C26423 *
            ((-2 * C26700) / C26348 +
             C26423 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C14492 =
        C26453 *
        ((-2 * C26700) / C26348 +
         C26423 * ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                      C26356 * C26513) /
                    C26137) /
                       C26121 -
                   C26409 / C26348));
    const double C15894 =
        (-2 * C26453 * C26700) / C26348 +
        C26453 * ((-(C26423 *
                     (C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26700 / C26348);
    const double C7327 =
        (((-2 * C26453 * C26374) / C26137 -
          (C26453 * (C26399 * C26580 + C26374)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26453 * C26375 + C26453 * (C26375 + C26402 * C26580)) * ce) /
            C26348 +
        C26347 *
            ((-2 * C26710) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C24290 =
        3 * ((-(C26409 * C26580) / C26137) / C26121 - C26379 / C26348) +
        C26453 *
            ((-2 * C26710) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26409 / C26348));
    const double C10519 = C27516 * C618;
    const double C9527 = C27516 * C620;
    const double C19507 = C27516 * C1238;
    const double C18515 = C27516 * C1240;
    const double C12545 = C27516 * C4024;
    const double C14497 = C27516 * C5938;
    const double C24295 = C27516 * C7328;
    const double C4754 =
        (-(C26423 * C26777) / C26137) / C26121 - (C26551 * ce) / C26348 -
        (ae * C26453 * C26767) / C26348 +
        C26453 *
            (C26453 *
                 ((-(C26423 * C26347 * std::pow(C26345, 6) * bs[6] * C26570) /
                   C26137) /
                      C26121 -
                  (C26778 * ce) / C26348) -
             (ae * C26767) / C26348);
    const double C6310 =
        C26453 *
            ((-(C26807 * ce) / C26137) / C26121 - C26777 / C26348 +
             C26423 *
                 ((-(C26423 * C26347 * std::pow(C26345, 6) * bs[6] * C26570) /
                   C26137) /
                      C26121 -
                  (C26778 * ce) / C26348)) -
        (ae * (C26423 * C26767 + C26437 + C26763 * ce)) / C26348;
    const double C4063 =
        (-2 * (C26423 * C26437 + C26370 * ce)) / C26137 -
        (C26423 * (C26423 * C26767 + C26437 + C26763 * ce)) / C26137 -
        ((C26370 + C26393 * C26513) * ce) / C26137;
    const double C4433 =
        -(C26767 * C26580 + C26423 * C26437 + C26370 * ce) / C26137;
    const double C5989 =
        -(C26453 * (C26423 * C26767 + C26437 + C26763 * ce)) / C26137;
    const double C26891 = C26888 + C26435;
    const double C7405 =
        (-2 * (C26453 * C26467 + C26370 * ce)) / C26137 -
        (C26453 * (C26453 * C26852 + C26467 + C26850 * ce)) / C26137 -
        ((C26370 + C26393 * C26580) * ce) / C26137;
    const double C15965 =
        (-2 * (C26453 * C26803 + C26756 * ce)) / C26137 -
        (C26453 * (C26453 * C26958 + C26803 + C26954 * ce)) / C26137 -
        ((C26756 + C26877 * C26580) * ce) / C26137;
    const double C27013 = C27010 + C26465;
    const double C4139 = (2 * (C26423 * C26496 + C26370 * ae) +
                          C26423 * (C26496 + C26423 * C26768 + C26763 * ae) +
                          (C26370 + C26393 * C26513) * ae) /
                         C26121;
    const double C4541 =
        (C26423 * C26496 + C26370 * ae + C26768 * C26580) / C26121;
    const double C6097 =
        (C26453 * (C26496 + C26423 * C26768 + C26763 * ae)) / C26121;
    const double C26892 = C26494 + C26889;
    const double C4178 =
        2 * ((-(C26496 * ce) / C26137) / C26121 - (ae * C26437) / C26348 -
             (C26423 * C26761) / C26348) -
        (ae * (C26423 * C26767 + C26437 + C26763 * ce)) / C26348 -
        ((C26496 + C26423 * C26768 + C26763 * ae) * ce) / C26348 +
        C26423 *
            ((-(ae * C26767) / C26137) / C26121 - C26761 / C26348 -
             (C26768 * ce) / C26348 +
             C26423 *
                 ((-(C26764 * ce) / C26137) / C26121 - (ae * C26762) / C26348 -
                  (C26423 * C26347 *
                   (C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C4596 =
        (-((C26496 + C26764 * C26580) * ce) / C26137) / C26121 -
        (ae * (C26762 * C26580 + C26437)) / C26348 +
        C26423 * ((-(C26347 *
                     (C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26761 / C26348);
    const double C6152 =
        (-(ae * C26453 * C26767) / C26137) / C26121 -
        (C26453 * C26761) / C26348 - (C26453 * C26768 * ce) / C26348 +
        C26423 * ((-(C26453 * C26764 * ce) / C26137) / C26121 -
                  (ae * C26453 * C26762) / C26348 -
                  (C26423 * C26453 * C26347 *
                   (C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348);
    const double C7481 =
        (-2 * C26453 * C26761) / C26348 +
        C26453 * ((-(C26347 *
                     (C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26761 / C26348);
    const double C26881 = C26875 / C26348;
    const double C16037 =
        (((-2 * C26453 * C26435) / C26137 -
          (C26453 * (C26443 * C26580 + C26435)) / C26137) *
         ae) /
            C26121 -
        ((2 * C26453 * C26494 + C26453 * (C26494 + C26502 * C26580)) * ce) /
            C26348 +
        C26423 *
            ((-2 * C26929) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C24457 =
        3 * ((-(C26523 * C26580) / C26137) / C26121 - C26518 / C26348) +
        C26453 *
            ((-2 * C26929) / C26348 +
             C26453 *
                 ((-((C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26580) /
                   C26137) /
                      C26121 -
                  C26523 / C26348));
    const double C887 = C27517 * C876;
    const double C2071 = C27517 * C877;
    const double C2579 = C27517 * C1494;
    const double C1505 = C27517 * C1497;
    const double C3193 = C27517 * C3186;
    const double C21588 = C27517 * C4595;
    const double C23124 = C27517 * C6151;
    const double C24461 = C27517 * C7482;
    const double C7553 = (2 * (C26453 * C26551 + C26370 * ae) +
                          C26453 * (C26551 + C26453 * C26853 + C26850 * ae) +
                          (C26370 + C26393 * C26580) * ae) /
                         C26121;
    const double C16107 = (2 * (C26453 * C26804 + C26756 * ae) +
                           C26453 * (C26804 + C26453 * C26959 + C26954 * ae) +
                           (C26756 + C26877 * C26580) * ae) /
                          C26121;
    const double C27014 = C26549 + C27011;
    const double C4323 =
        (-2 * C26423 * C26780) / C26348 +
        C26423 * ((-(C26347 *
                     (C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26780 / C26348);
    const double C4806 =
        (-(ae * (C26453 * C26806 + C26763 * ce)) / C26137) / C26121 -
        (C26423 * C26780) / C26348 -
        ((C26453 * C26807 + C26763 * ae) * ce) / C26348 +
        C26453 * ((-(C26807 * ce) / C26137) / C26121 - (ae * C26806) / C26348 -
                  (C26453 * C26423 * C26347 *
                   (C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348);
    const double C6362 =
        (-((C26551 + C26778 * C26513) * ce) / C26137) / C26121 -
        (ae * (C26771 * C26513 + C26467)) / C26348 +
        C26453 * ((-(C26347 *
                     (C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                     C26356 * C26513) /
                   C26137) /
                      C26121 -
                  C26780 / C26348);
    const double C7628 =
        2 * ((-(C26551 * ce) / C26137) / C26121 - (ae * C26467) / C26348 -
             (C26453 * C26780) / C26348) -
        (ae * (C26453 * C26852 + C26467 + C26850 * ce)) / C26348 -
        ((C26551 + C26453 * C26853 + C26850 * ae) * ce) / C26348 +
        C26453 *
            ((-(ae * C26852) / C26137) / C26121 - C26780 / C26348 -
             (C26853 * ce) / C26348 +
             C26453 *
                 ((-(C26778 * ce) / C26137) / C26121 - (ae * C26771) / C26348 -
                  (C26453 * C26347 *
                   (C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C16178 =
        2 * ((-(C26804 * ce) / C26137) / C26121 - (ae * C26803) / C26348 -
             (C26453 * C26952) / C26348) -
        (ae * (C26453 * C26958 + C26803 + C26954 * ce)) / C26348 -
        ((C26804 + C26453 * C26959 + C26954 * ae) * ce) / C26348 +
        C26453 *
            ((-(ae * C26958) / C26137) / C26121 - C26952 / C26348 -
             (C26959 * ce) / C26348 +
             C26453 *
                 ((-(C26955 * ce) / C26137) / C26121 - (ae * C26953) / C26348 -
                  (C26453 * C26423 *
                   (C26386 * C26387 + C26580 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C27003 = C26997 / C26348;
    const double C1161 = C27518 * C1152;
    const double C2303 = C27518 * C1153;
    const double C1781 = C27518 * C1770;
    const double C2817 = C27518 * C1771;
    const double C3499 = C27518 * C3492;
    const double C12859 = C27518 * C4324;
    const double C13369 = C27518 * C4805;
    const double C14939 = C27518 * C6361;
    const double C26408 = C26404 - C26389;
    const double C21643 = C21641 + C21642;
    const double C23179 = C23177 + C23178;
    const double C26890 = C26887 - C26442;
    const double C27012 = C27009 - C26472;
    const double C18599 = C18595 * C27303;
    const double C20063 = C18595 * C27481;
    const double C22381 = C18595 * C3554;
    const double C18601 = C18597 * C27303;
    const double C21413 = C18597 * C3554;
    const double C25761 = C18597 * C27481;
    const double C20061 = C11540 * C27352;
    const double C21411 = C11540 * C27352;
    const double C23895 = C11540 * C594;
    const double C26449 = C26448 / C26121;
    const double C26862 = C26861 / C26121;
    const double C24340 = C24339 * C27303;
    const double C18719 = C1441 * C27280;
    const double C22519 = C1441 * C27280;
    const double C23539 = C1441 * C3552;
    const double C18732 = C18728 * C591;
    const double C21518 = C18728 * C27275;
    const double C25407 = C18728 * C27471;
    const double C20206 = C20204 * C591;
    const double C21521 = C20204 * C27275;
    const double C22521 = C20204 * C27471;
    const double C26508 = C26507 / C26121;
    const double C26871 = C26870 / C26121;
    const double C21529 = C21527 * C27275;
    const double C23067 = C23065 * C27275;
    const double C24423 = C24421 * C27275;
    const double C9674 = C9670 * C27314;
    const double C11614 = C9670 * C27482;
    const double C16379 = C9670 * C6413;
    const double C9673 = C9669 * C27314;
    const double C14610 = C9669 * C27482;
    const double C15547 = C9669 * C6413;
    const double C11620 = C11618 * C27378;
    const double C13036 = C11618 * C1216;
    const double C15545 = C11618 * C27378;
    const double C26479 = C26478 / C26121;
    const double C26969 = C26968 / C26121;
    const double C12629 = C12628 * C27314;
    const double C14615 = C14614 * C27378;
    const double C15549 = C14614 * C27378;
    const double C370 = C367 * C27314;
    const double C956 = C954 * C27314;
    const double C3266 = C954 * C27482;
    const double C8027 = C954 * C6413;
    const double C1576 = C1574 * C1216;
    const double C2636 = C1574 * C27378;
    const double C6671 = C1574 * C27378;
    const double C26902 = C26901 / C26121;
    const double C26934 = C26933 / C26121;
    const double C957 = C955 * C27314;
    const double C2129 = C2128 * C27314;
    const double C2643 = C2642 * C27378;
    const double C6675 = C2642 * C27378;
    const double C9881 = C1029 * C27280;
    const double C12397 = C1029 * C3552;
    const double C13733 = C1029 * C27280;
    const double C9894 = C9890 * C591;
    const double C12774 = C9890 * C27275;
    const double C13735 = C9890 * C27471;
    const double C11894 = C11892 * C591;
    const double C13248 = C11892 * C27275;
    const double C14305 = C11892 * C27471;
    const double C26563 = C26562 / C26121;
    const double C26984 = C26983 / C26121;
    const double C12783 = C12781 * C27275;
    const double C13257 = C13255 * C27275;
    const double C14829 = C14827 * C27275;
    const double C487 = C484 * C27303;
    const double C1098 = C1096 * C594;
    const double C2242 = C1096 * C27352;
    const double C3923 = C1096 * C27352;
    const double C1716 = C1714 * C27303;
    const double C3420 = C1714 * C27481;
    const double C5813 = C1714 * C3554;
    const double C26911 = C26910 / C26121;
    const double C26993 = C26992 / C26121;
    const double C2249 = C2248 * C27352;
    const double C3927 = C2248 * C27352;
    const double C2757 = C2756 * C27303;
    const double C1717 = C1715 * C27303;
    const double C10836 = C2186 * C1842;
    const double C19674 = C2524 * C1842;
    const double C12398 = C2186 * C3558;
    const double C23540 = C2524 * C3558;
    const double C26160 = C27275 - C26158;
    const double C10513 = C9529 * C27505;
    const double C10833 = C9889 * C27505;
    const double C19501 = C18517 * C27505;
    const double C19671 = C18727 * C27505;
    const double C75 = (C27505 * C27270) / C26137 + (C27471 - C27494) / C26142;
    const double C10835 = C1029 * C27506;
    const double C19673 = C1441 * C27506;
    const double C76 =
        (C27506 * C27270) / C26137 + (2 * C27280 + C27505) / C26142;
    const double C77 = (C27270 * C27280) / C26146 + C27506 / C26142;
    const double C22958 = C14498 * C4916;
    const double C26259 = C27303 - C26256;
    const double C5069 = C311 * C27509;
    const double C5225 = C482 * C27509;
    const double C22955 = C18594 * C27509;
    const double C23119 = C18790 * C27509;
    const double C4012 =
        (C27509 * C27347) / C26137 + (C27481 - C27498) / C26142;
    const double C5227 = C1096 * C27510;
    const double C22957 = C11540 * C27510;
    const double C4013 =
        (C27510 * C27347) / C26137 + (2 * C27352 + C27509) / C26142;
    const double C4014 = (C27347 * C27352) / C26146 + C27510 / C26142;
    const double C26305 = C27314 - C26302;
    const double C8539 = C365 * C27511;
    const double C8695 = C536 * C27511;
    const double C17379 = C9668 * C27511;
    const double C17685 = C10008 * C27511;
    const double C7317 =
        (C27511 * C27373) / C26137 + (C27482 - C27501) / C26142;
    const double C8541 = C1574 * C27512;
    const double C17381 = C11618 * C27512;
    const double C7318 =
        (C27512 * C27373) / C26137 + (2 * C27378 + C27511) / C26142;
    const double C7319 = (C27373 * C27378) / C26146 + C27512 / C26142;
    const double C10520 = C10516 + C10517;
    const double C9532 = C9520 + C9521;
    const double C19508 = C19504 + C19505;
    const double C18520 = C18508 + C18509;
    const double C11462 = C11454 + C11455;
    const double C21526 = C21522 + C21523;
    const double C23064 = C23060 + C23061;
    const double C1099 = C1097 * C595;
    const double C5229 = C1097 * C4861;
    const double C1577 = C1575 * C1217;
    const double C8543 = C1575 * C8283;
    const double C3425 = C3424 * C27352;
    const double C5815 = C3424 * C27352;
    const double C3271 = C3270 * C27378;
    const double C8029 = C3270 * C27378;
    const double C885 = C822 * C674;
    const double C951 = C822 * C188;
    const double C5072 = C822 * C4916;
    const double C1093 = C1030 * C674;
    const double C1159 = C1030 * C188;
    const double C5228 = C1030 * C4916;
    const double C9882 = C1030 * C597;
    const double C13734 = C1030 * C26156;
    const double C1503 = C1442 * C143;
    const double C1571 = C1442 * C1356;
    const double C8542 = C1442 * C8386;
    const double C18720 = C1442 * C597;
    const double C25406 = C1442 * C26156;
    const double C1711 = C1650 * C143;
    const double C1779 = C1650 * C1356;
    const double C8698 = C1650 * C8386;
    const double C3189 = C3118 * C1898;
    const double C3265 = C3118 * C2464;
    const double C5610 = C3118 * C3610;
    const double C8026 = C3118 * C6516;
    const double C20198 = C3118 * C597;
    const double C22520 = C3118 * C26156;
    const double C3419 = C3348 * C1898;
    const double C3495 = C3348 * C2464;
    const double C5812 = C3348 * C3610;
    const double C8228 = C3348 * C6516;
    const double C11886 = C3348 * C597;
    const double C14304 = C3348 * C26156;
    const double C262 = C255 + C256;
    const double C433 = C426 + C427;
    const double C12588 = C12586 + C12587;
    const double C12821 = C12819 + C12820;
    const double C12980 = C12978 + C12979;
    const double C13311 = C13309 + C13310;
    const double C14556 = C14554 + C14555;
    const double C14883 = C14881 + C14882;
    const double C24379 = C24377 + C24378;
    const double C24501 = C24499 + C24500;
    const double C9531 = C9518 + C9519;
    const double C9533 = C9522 + C9523;
    const double C18519 = C18506 + C18507;
    const double C18521 = C18510 + C18511;
    const double C11463 = C11456 + C11457;
    const double C313 = C309 + C310;
    const double C888 = C883 + C884;
    const double C1506 = C1501 + C1502;
    const double C18791 = C18787 + C18788;
    const double C20279 = C20277 + C20278;
    const double C538 = C534 + C535;
    const double C1162 = C1156 + C1157;
    const double C10009 = C10005 + C10006;
    const double C1782 = C1777 + C1778;
    const double C12036 = C12034 + C12035;
    const double C13041 = C13040 * C1217;
    const double C17383 = C13040 * C8283;
    const double C12924 = C12922 * C4016;
    const double C13037 = C12922 * C1356;
    const double C17382 = C12922 * C8386;
    const double C21412 = C12922 * C3610;
    const double C25760 = C12922 * C1898;
    const double C13256 = C13254 * C4016;
    const double C13367 = C13254 * C1356;
    const double C17688 = C13254 * C8386;
    const double C26420 = C26417 + C26403;
    const double C26419 = C26416 + C26400;
    const double C11461 = C27516 * C2895;
    const double C12921 = C27516 * C4382;
    const double C10521 = C10518 + C10519;
    const double C9535 = C9526 + C9527;
    const double C19509 = C19506 + C19507;
    const double C18523 = C18514 + C18515;
    const double C12547 = C12544 + C12545;
    const double C14499 = C14496 + C14497;
    const double C24297 = C24294 + C24295;
    const double C26894 = C26891 + C26883;
    const double C27016 = C27013 + C27005;
    const double C26895 = C26892 + C26886;
    const double C889 = C886 + C887;
    const double C2072 = C2070 + C2071;
    const double C2580 = C2578 + C2579;
    const double C1507 = C1504 + C1505;
    const double C3194 = C3192 + C3193;
    const double C21589 = C21587 + C21588;
    const double C23125 = C23123 + C23124;
    const double C24462 = C24460 + C24461;
    const double C27017 = C27014 + C27008;
    const double C1163 = C1160 + C1161;
    const double C2304 = C2302 + C2303;
    const double C1783 = C1780 + C1781;
    const double C2818 = C2816 + C2817;
    const double C3500 = C3498 + C3499;
    const double C12860 = C12858 + C12859;
    const double C13370 = C13368 + C13369;
    const double C14940 = C14938 + C14939;
    const double C26418 = C26408 - C26415;
    const double C26893 = C26890 - C26881;
    const double C27015 = C27012 - C27003;
    const double C26450 = C26449 - C26442;
    const double C26863 = C26862 - C26857;
    const double C26509 = C26508 - C26501;
    const double C26872 = C26871 - C26389;
    const double C26480 = C26479 - C26472;
    const double C26970 = C26969 - C26857;
    const double C26903 = C26902 - C26472;
    const double C26935 = C26934 - C26501;
    const double C26564 = C26563 - C26556;
    const double C26985 = C26984 - C26389;
    const double C26912 = C26911 - C26556;
    const double C26994 = C26993 - C26442;
    const double C26161 = C26160 * ce;
    const double C596 = (-C26138 / C26137) / C26142 - (C26160 * de) / C26137;
    const double C26261 = C26259 * ce;
    const double C26307 = C26305 * ce;
    const double C10522 = C10520 * C1842;
    const double C10627 = C10520 * C188;
    const double C12092 = C10520 * C3558;
    const double C9540 = C9532 * C597;
    const double C9665 = C9532 * C188;
    const double C13426 = C9532 * C26156;
    const double C19510 = C19508 * C1842;
    const double C19562 = C19508 * C143;
    const double C23384 = C19508 * C3558;
    const double C18528 = C18520 * C597;
    const double C18588 = C18520 * C143;
    const double C25252 = C18520 * C26156;
    const double C11466 = C11462 * C597;
    const double C11613 = C11462 * C2464;
    const double C13904 = C11462 * C26156;
    const double C16378 = C11462 * C6516;
    const double C20062 = C11462 * C1898;
    const double C22380 = C11462 * C3610;
    const double C21528 = C21526 * C4016;
    const double C21584 = C21526 * C3610;
    const double C25914 = C21526 * C1898;
    const double C23066 = C23064 * C4016;
    const double C23122 = C23064 * C4916;
    const double C24052 = C23064 * C674;
    const double C21415 = C12980 * C27352;
    const double C25763 = C12980 * C27352;
    const double C22959 = C14556 * C4861;
    const double C23897 = C14556 * C595;
    const double C9539 = C9531 * C27280;
    const double C10515 = C9531 * C27506;
    const double C12091 = C9531 * C3552;
    const double C13425 = C9531 * C27280;
    const double C9541 = C9533 * C591;
    const double C12540 = C9533 * C27275;
    const double C13427 = C9533 * C27471;
    const double C18527 = C18519 * C27280;
    const double C19503 = C18519 * C27506;
    const double C22313 = C18519 * C27280;
    const double C23383 = C18519 * C3552;
    const double C18529 = C18521 * C591;
    const double C21356 = C18521 * C27275;
    const double C25253 = C18521 * C27471;
    const double C11467 = C11463 * C591;
    const double C12916 = C11463 * C27275;
    const double C13905 = C11463 * C27471;
    const double C316 = C313 * C27303;
    const double C890 = C888 * C594;
    const double C2066 = C888 * C27352;
    const double C3765 = C888 * C27352;
    const double C5071 = C888 * C27510;
    const double C1508 = C1506 * C27303;
    const double C3190 = C1506 * C27481;
    const double C5611 = C1506 * C3554;
    const double C18793 = C18791 * C27303;
    const double C21585 = C18791 * C3554;
    const double C25915 = C18791 * C27481;
    const double C20280 = C20279 * C27352;
    const double C21583 = C20279 * C27352;
    const double C23121 = C20279 * C27510;
    const double C24051 = C20279 * C594;
    const double C541 = C538 * C27314;
    const double C1164 = C1162 * C27314;
    const double C3496 = C1162 * C27482;
    const double C8229 = C1162 * C6413;
    const double C10011 = C10009 * C27314;
    const double C14936 = C10009 * C27482;
    const double C15855 = C10009 * C6413;
    const double C1784 = C1782 * C1216;
    const double C2812 = C1782 * C27378;
    const double C6829 = C1782 * C27378;
    const double C8697 = C1782 * C27512;
    const double C12037 = C12036 * C27378;
    const double C13366 = C12036 * C1216;
    const double C15853 = C12036 * C27378;
    const double C17687 = C12036 * C27512;
    const double C2968 =
        C26453 *
        (C26423 *
             ((-(ae * C26347 * C26443) / C26137) / C26121 - C26441 / C26348 +
              C26347 *
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (ae * C26443) / C26348)) -
         (C26420 * ce) / C26348);
    const double C3040 =
        C26453 * C26423 *
            ((-(ae * C26347 * C26473) / C26137) / C26121 - C26471 / C26348 +
             C26347 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                      C26121 -
                  (ae * C26473) / C26348)) -
        (C26423 * C26420 * ce) / C26348;
    const double C102 = (3 * (C26362 + C26347 * C26381 + C26370 * ae) +
                         C26347 * (2 * C26381 + C26347 * C26420 + C26401 * ae) +
                         (2 * C26370 + C26347 * C26401) * ae) /
                        C26121;
    const double C614 =
        (C26362 + C26347 * C26381 + C26370 * ae + C26420 * C26513) / C26121;
    const double C1234 =
        (C26362 + C26347 * C26381 + C26370 * ae + C26420 * C26580) / C26121;
    const double C1844 =
        (C26423 * (2 * C26381 + C26347 * C26420 + C26401 * ae)) / C26121;
    const double C2358 =
        (C26453 * (2 * C26381 + C26347 * C26420 + C26401 * ae)) / C26121;
    const double C2892 = (C26453 * C26423 * C26420) / C26121;
    const double C1846 =
        2 * ((-(C26423 * C26375 * ce) / C26137) / C26121 -
             (ae * C26423 * C26374) / C26348 - (C26347 * C26700) / C26348) -
        (ae * C26423 * C26419) / C26348 - (C26423 * C26420 * ce) / C26348 +
        C26347 *
            ((-(ae * C26423 * C26410) / C26137) / C26121 - C26700 / C26348 -
             (C26423 * C26411 * ce) / C26348 +
             C26347 *
                 ((-(C26423 * C26402 * ce) / C26137) / C26121 -
                  (ae * C26423 * C26399) / C26348 -
                  (C26347 * C26423 *
                   (C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C2360 =
        2 * ((-(C26453 * C26375 * ce) / C26137) / C26121 -
             (ae * C26453 * C26374) / C26348 - (C26347 * C26710) / C26348) -
        (ae * C26453 * C26419) / C26348 - (C26453 * C26420 * ce) / C26348 +
        C26347 *
            ((-(ae * C26453 * C26410) / C26137) / C26121 - C26710 / C26348 -
             (C26453 * C26411 * ce) / C26348 +
             C26347 *
                 ((-(C26453 * C26402 * ce) / C26137) / C26121 -
                  (ae * C26453 * C26399) / C26348 -
                  (C26347 * C26453 *
                   (C26386 * C26387 + C26355 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C3112 =
        C26423 * C26453 *
            ((-(C26347 * C26502 * ce) / C26137) / C26121 - C26500 / C26348 +
             C26347 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                      C26121 -
                  (C26502 * ce) / C26348)) -
        (ae * C26453 * C26419) / C26348;
    const double C3342 =
        C26453 * C26423 *
            ((-(C26347 * C26557 * ce) / C26137) / C26121 - C26555 / C26348 +
             C26347 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                      C26121 -
                  (C26557 * ce) / C26348)) -
        (ae * C26423 * C26419) / C26348;
    const double C103 =
        (-3 * (C26347 * C26380 + C26361 + C26370 * ce)) / C26137 +
        C26347 * ((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
                  (C26401 * ce) / C26137) -
        ((2 * C26370 + C26347 * C26401) * ce) / C26137;
    const double C615 =
        -(C26419 * C26513 + C26347 * C26380 + C26361 + C26370 * ce) / C26137;
    const double C1235 =
        -(C26419 * C26580 + C26347 * C26380 + C26361 + C26370 * ce) / C26137;
    const double C1845 =
        C26423 * ((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
                  (C26401 * ce) / C26137);
    const double C2359 =
        C26453 * ((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
                  (C26401 * ce) / C26137);
    const double C2893 = -(C26453 * C26423 * C26419) / C26137;
    const double C11465 = C11460 + C11461;
    const double C12923 = C12920 + C12921;
    const double C10523 = C10521 * C1837;
    const double C12093 = C10521 * C3553;
    const double C9543 = C9535 * C27280;
    const double C13429 = C9535 * C27280;
    const double C19511 = C19509 * C1837;
    const double C23385 = C19509 * C3553;
    const double C18531 = C18523 * C27280;
    const double C25255 = C18523 * C27280;
    const double C12549 = C12547 * C27275;
    const double C14501 = C14499 * C27275;
    const double C24299 = C24297 * C27275;
    const double C12583 =
        (-3 * (C26423 * C26758 + C26429 + C26756 * ce)) / C26137 +
        C26423 * ((-2 * C26758) / C26137 - (C26423 * C26894) / C26137 -
                  (C26884 * ce) / C26137) -
        ((2 * C26756 + C26423 * C26884) * ce) / C26137;
    const double C12975 =
        -(C26894 * C26580 + C26423 * C26758 + C26429 + C26756 * ce) / C26137;
    const double C14551 =
        C26453 * ((-2 * C26758) / C26137 - (C26423 * C26894) / C26137 -
                  (C26884 * ce) / C26137);
    const double C24374 =
        (-3 * (C26453 * C26846 + C26459 + C26844 * ce)) / C26137 +
        C26453 * ((-2 * C26846) / C26137 - (C26453 * C27016) / C26137 -
                  (C27006 * ce) / C26137) -
        ((2 * C26844 + C26453 * C27006) * ce) / C26137;
    const double C14717 =
        2 * ((-(C26453 * C26494 * ce) / C26137) / C26121 -
             (ae * C26453 * C26435) / C26348 - (C26423 * C26929) / C26348) -
        (ae * C26453 * C26894) / C26348 - (C26453 * C26895 * ce) / C26348 +
        C26423 *
            ((-(ae * C26453 * C26882) / C26137) / C26121 - C26929 / C26348 -
             (C26453 * C26885 * ce) / C26348 +
             C26423 *
                 ((-(C26453 * C26502 * ce) / C26137) / C26121 -
                  (ae * C26453 * C26443) / C26348 -
                  (C26423 * C26453 *
                   (C26386 * C26387 + C26513 * bs[6] * std::pow(C26345, 6)) *
                   C26356) /
                      C26348));
    const double C12663 =
        (3 * (C26488 + C26423 * C26759 + C26756 * ae) +
         C26423 * (2 * C26759 + C26423 * C26895 + C26884 * ae) +
         (2 * C26756 + C26423 * C26884) * ae) /
        C26121;
    const double C13091 =
        (C26488 + C26423 * C26759 + C26756 * ae + C26895 * C26580) / C26121;
    const double C14665 =
        (C26453 * (2 * C26759 + C26423 * C26895 + C26884 * ae)) / C26121;
    const double C891 = C889 * C595;
    const double C5073 = C889 * C4861;
    const double C2073 = C2072 * C27352;
    const double C3769 = C2072 * C27352;
    const double C2581 = C2580 * C27303;
    const double C1509 = C1507 * C27303;
    const double C3195 = C3194 * C27352;
    const double C5613 = C3194 * C27352;
    const double C21590 = C21589 * C27352;
    const double C25917 = C21589 * C27352;
    const double C23126 = C23125 * C4861;
    const double C24053 = C23125 * C595;
    const double C24463 = C24462 * C27303;
    const double C24535 =
        (3 * (C26543 + C26453 * C26847 + C26844 * ae) +
         C26453 * (2 * C26847 + C26453 * C27017 + C27006 * ae) +
         (2 * C26844 + C26453 * C27006) * ae) /
        C26121;
    const double C1165 = C1163 * C27314;
    const double C2305 = C2304 * C27314;
    const double C1785 = C1783 * C1217;
    const double C8699 = C1783 * C8283;
    const double C2819 = C2818 * C27378;
    const double C6833 = C2818 * C27378;
    const double C3501 = C3500 * C27378;
    const double C8231 = C3500 * C27378;
    const double C12861 = C12860 * C27314;
    const double C13371 = C13370 * C1217;
    const double C17689 = C13370 * C8283;
    const double C14941 = C14940 * C27378;
    const double C15857 = C14940 * C27378;
    const double C108 =
        3 * ((-(ae * C26380) / C26137) / C26121 - C26379 / C26348 -
             (C26381 * ce) / C26348 + C26347 * C26418) +
        (((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
          (C26401 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26381 + C26347 * C26420 + C26401 * ae) * ce) / C26348 +
        C26347 * (2 * C26418 - (ae * C26419) / C26348 - (C26420 * ce) / C26348 +
                  C26347 * ((-(ae * C26410) / C26137) / C26121 -
                            C26409 / C26348 - (C26411 * ce) / C26348 +
                            C26347 * ((-(C26402 * ce) / C26137) / C26121 -
                                      (ae * C26399) / C26348 -
                                      (C26347 *
                                       (C26386 * C26387 +
                                        C26355 * bs[6] * std::pow(C26345, 6)) *
                                       C26356) /
                                          C26348)));
    const double C12699 =
        3 * ((-(ae * C26758) / C26137) / C26121 - C26518 / C26348 -
             (C26759 * ce) / C26348 + C26423 * C26893) +
        (((-2 * C26758) / C26137 - (C26423 * C26894) / C26137 -
          (C26884 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26759 + C26423 * C26895 + C26884 * ae) * ce) / C26348 +
        C26423 * (2 * C26893 - (ae * C26894) / C26348 - (C26895 * ce) / C26348 +
                  C26423 * ((-(ae * C26882) / C26137) / C26121 -
                            C26523 / C26348 - (C26885 * ce) / C26348 +
                            C26423 * ((-(C26502 * ce) / C26137) / C26121 -
                                      (ae * C26443) / C26348 -
                                      (C26423 *
                                       (C26386 * C26387 +
                                        C26513 * bs[6] * std::pow(C26345, 6)) *
                                       C26356) /
                                          C26348)));
    const double C24606 =
        3 * ((-(ae * C26846) / C26137) / C26121 - C26585 / C26348 -
             (C26847 * ce) / C26348 + C26453 * C27015) +
        (((-2 * C26846) / C26137 - (C26453 * C27016) / C26137 -
          (C27006 * ce) / C26137) *
         ae) /
            C26121 -
        ((2 * C26847 + C26453 * C27017 + C27006 * ae) * ce) / C26348 +
        C26453 * (2 * C27015 - (ae * C27016) / C26348 - (C27017 * ce) / C26348 +
                  C26453 * ((-(ae * C27004) / C26137) / C26121 -
                            C26590 / C26348 - (C27007 * ce) / C26348 +
                            C26453 * ((-(C26557 * ce) / C26137) / C26121 -
                                      (ae * C26473) / C26348 -
                                      (C26453 *
                                       (C26386 * C26387 +
                                        C26580 * bs[6] * std::pow(C26345, 6)) *
                                       C26356) /
                                          C26348)));
    const double C153 =
        3 * ((-(ae * C26437) / C26137) / C26121 - C26434 / C26348 +
             C26347 * C26450) +
        (((-2 * C26437) / C26137 - (C26347 * C26447) / C26137) * ae) / C26121 +
        C26347 *
            (2 * C26450 - (ae * C26447) / C26348 +
             C26347 *
                 ((-(ae * C26347 * C26443) / C26137) / C26121 -
                  C26441 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) /
                             C26137) /
                                C26121 -
                            (ae * C26443) / C26348)));
    const double C684 = (-(C26347 * C26434) / C26137) / C26121 -
                        (ae * C26429) / C26348 -
                        (C26423 * C26381 * ce) / C26348 +
                        C26423 * (C26423 * C26450 - (C26381 * ce) / C26348);
    const double C685 =
        C26423 * ((-(ae * C26437) / C26137) / C26121 - C26434 / C26348 +
                  C26347 * C26450) -
        ((C26362 + C26347 * C26381 + C26370 * ae) * ce) / C26348;
    const double C686 =
        (-(ae * C26437) / C26137) / C26121 - C26434 / C26348 + C26347 * C26450 -
        (C26423 * C26420 * ce) / C26348 +
        C26423 *
            (C26423 *
                 ((-(ae * C26347 * C26443) / C26137) / C26121 -
                  C26441 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) /
                             C26137) /
                                C26121 -
                            (ae * C26443) / C26348)) -
             (C26420 * ce) / C26348);
    const double C1299 = C26453 * ((-(ae * C26437) / C26137) / C26121 -
                                   C26434 / C26348 + C26347 * C26450);
    const double C1302 = (-(C26347 * C26434) / C26137) / C26121 -
                         (ae * C26429) / C26348 + C26450 * C26580;
    const double C1303 =
        (-(ae * C26437) / C26137) / C26121 - C26434 / C26348 + C26347 * C26450 +
        ((-(ae * C26347 * C26443) / C26137) / C26121 - C26441 / C26348 +
         C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (ae * C26443) / C26348)) *
            C26580;
    const double C1900 =
        C26423 *
            (2 * C26450 - (ae * C26447) / C26348 +
             C26347 *
                 ((-(ae * C26347 * C26443) / C26137) / C26121 -
                  C26441 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) /
                             C26137) /
                                C26121 -
                            (ae * C26443) / C26348))) -
        ((2 * C26381 + C26347 * C26420 + C26401 * ae) * ce) / C26348;
    const double C2412 =
        C26453 *
        (2 * C26450 - (ae * C26447) / C26348 +
         C26347 *
             ((-(ae * C26347 * C26443) / C26137) / C26121 - C26441 / C26348 +
              C26347 *
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (ae * C26443) / C26348)));
    const double C2967 = C26453 * (C26423 * C26450 - (C26381 * ce) / C26348);
    const double C4065 =
        2 * (C26423 * C26450 - (C26381 * ce) / C26348) -
        ((C26381 + C26411 * C26513) * ce) / C26348 +
        C26423 *
            (C26450 - (C26423 * C26411 * ce) / C26348 +
             C26423 *
                 (C26423 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) /
                             C26137) /
                                C26121 -
                            (ae * C26443) / C26348) -
                  (C26411 * ce) / C26348));
    const double C4435 =
        C26423 * C26450 - (C26381 * ce) / C26348 +
        (C26423 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (ae * C26443) / C26348) -
         (C26411 * ce) / C26348) *
            C26580;
    const double C5991 =
        C26453 *
        (C26450 - (C26787 * ce) / C26348 +
         C26423 * (C26423 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) /
                              C26137) /
                                 C26121 -
                             (ae * C26443) / C26348) -
                   (C26411 * ce) / C26348));
    const double C7365 =
        2 * C26453 * C26450 +
        C26453 * (C26450 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (ae * C26443) / C26348) *
                      C26580);
    const double C12584 =
        3 * ((-(C26789 * ce) / C26137) / C26121 - C26434 / C26348 +
             C26423 * C26863) -
        ((2 * C26789 + C26423 * C26860) * ce) / C26348 +
        C26423 *
            (2 * C26863 - (C26860 * ce) / C26348 +
             C26423 *
                 ((-(C26423 * C26402 * ce) / C26137) / C26121 -
                  C26441 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26430) /
                             C26137) /
                                C26121 -
                            (C26402 * ce) / C26348)));
    const double C12976 =
        (-(C26789 * ce) / C26137) / C26121 - C26434 / C26348 + C26423 * C26863 +
        ((-(C26423 * C26402 * ce) / C26137) / C26121 - C26441 / C26348 +
         C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (C26402 * ce) / C26348)) *
            C26580;
    const double C14552 =
        C26453 *
        (2 * C26863 - (C26860 * ce) / C26348 +
         C26423 *
             ((-(C26423 * C26402 * ce) / C26137) / C26121 - C26441 / C26348 +
              C26423 *
                  ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (C26402 * ce) / C26348)));
    const double C15930 =
        2 * C26453 * C26863 +
        C26453 * (C26863 +
                  ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26430) / C26137) /
                       C26121 -
                   (C26402 * ce) / C26348) *
                      C26580);
    const double C243 =
        3 * ((-(C26496 * ce) / C26137) / C26121 - C26493 / C26348 +
             C26347 * C26509) -
        ((2 * C26496 + C26347 * C26506) * ce) / C26348 +
        C26347 *
            (2 * C26509 - (C26506 * ce) / C26348 +
             C26347 *
                 ((-(C26347 * C26502 * ce) / C26137) / C26121 -
                  C26500 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)));
    const double C807 =
        C26423 * ((-(C26496 * ce) / C26137) / C26121 - C26493 / C26348 +
                  C26347 * C26509) -
        (ae * (C26347 * C26380 + C26361 + C26370 * ce)) / C26348;
    const double C809 = (-(C26347 * C26493) / C26137) / C26121 -
                        (C26488 * ce) / C26348 -
                        (ae * C26423 * C26380) / C26348 +
                        C26423 * (C26423 * C26509 - (ae * C26380) / C26348);
    const double C810 =
        (-(C26496 * ce) / C26137) / C26121 - C26493 / C26348 + C26347 * C26509 -
        (ae * C26423 * C26419) / C26348 +
        C26423 *
            (C26423 *
                 ((-(C26347 * C26502 * ce) / C26137) / C26121 -
                  C26500 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)) -
             (ae * C26419) / C26348);
    const double C1427 = C26453 * ((-(C26496 * ce) / C26137) / C26121 -
                                   C26493 / C26348 + C26347 * C26509);
    const double C1429 = (-(C26347 * C26493) / C26137) / C26121 -
                         (C26488 * ce) / C26348 + C26509 * C26580;
    const double C1430 =
        (-(C26496 * ce) / C26137) / C26121 - C26493 / C26348 + C26347 * C26509 +
        ((-(C26347 * C26502 * ce) / C26137) / C26121 - C26500 / C26348 +
         C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                       C26121 -
                   (C26502 * ce) / C26348)) *
            C26580;
    const double C2004 =
        (((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
          (C26401 * ce) / C26137) *
         ae) /
            C26121 +
        C26423 *
            (2 * C26509 - (C26506 * ce) / C26348 +
             C26347 *
                 ((-(C26347 * C26502 * ce) / C26137) / C26121 -
                  C26500 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)));
    const double C2518 =
        C26453 *
        (2 * C26509 - (C26506 * ce) / C26348 +
         C26347 *
             ((-(C26347 * C26502 * ce) / C26137) / C26121 - C26500 / C26348 +
              C26347 *
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                       C26121 -
                   (C26502 * ce) / C26348)));
    const double C3111 =
        C26423 * C26453 * C26509 - (ae * C26453 * C26380) / C26348;
    const double C4141 =
        2 * (C26423 * C26509 - (ae * C26380) / C26348) -
        (ae * (C26410 * C26513 + C26380)) / C26348 +
        C26423 *
            (C26509 - (ae * C26423 * C26410) / C26348 +
             C26423 *
                 (C26423 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348) -
                  (ae * C26410) / C26348));
    const double C4543 =
        C26423 * (C26509 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                       C26121 -
                   (C26502 * ce) / C26348) *
                      C26580) -
        (ae * (C26410 * C26580 + C26380)) / C26348;
    const double C6099 =
        C26453 * C26509 - (ae * C26453 * C26797) / C26348 +
        C26423 *
            (C26423 * C26453 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                      C26121 -
                  (C26502 * ce) / C26348) -
             (ae * C26453 * C26410) / C26348);
    const double C7445 =
        2 * C26453 * C26509 +
        C26453 * (C26509 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26489) / C26137) /
                       C26121 -
                   (C26502 * ce) / C26348) *
                      C26580);
    const double C12664 =
        3 * ((-(ae * C26799) / C26137) / C26121 - C26493 / C26348 +
             C26423 * C26872) +
        (((-2 * C26799) / C26137 - (C26423 * C26869) / C26137) * ae) / C26121 +
        C26423 *
            (2 * C26872 - (ae * C26869) / C26348 +
             C26423 *
                 ((-(ae * C26423 * C26399) / C26137) / C26121 -
                  C26500 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26489) /
                             C26137) /
                                C26121 -
                            (ae * C26399) / C26348)));
    const double C198 =
        3 * ((-(ae * C26467) / C26137) / C26121 - C26464 / C26348 +
             C26347 * C26480) +
        (((-2 * C26467) / C26137 - (C26347 * C26477) / C26137) * ae) / C26121 +
        C26347 *
            (2 * C26480 - (ae * C26477) / C26348 +
             C26347 *
                 ((-(ae * C26347 * C26473) / C26137) / C26121 -
                  C26471 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) /
                             C26137) /
                                C26121 -
                            (ae * C26473) / C26348)));
    const double C746 = (-(C26347 * C26464) / C26137) / C26121 -
                        (ae * C26459) / C26348 + C26480 * C26513;
    const double C747 = C26423 * ((-(ae * C26467) / C26137) / C26121 -
                                  C26464 / C26348 + C26347 * C26480);
    const double C748 =
        (-(ae * C26467) / C26137) / C26121 - C26464 / C26348 + C26347 * C26480 +
        ((-(ae * C26347 * C26473) / C26137) / C26121 - C26471 / C26348 +
         C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                       C26121 -
                   (ae * C26473) / C26348)) *
            C26513;
    const double C1366 = (-(C26347 * C26464) / C26137) / C26121 -
                         (ae * C26459) / C26348 -
                         (C26453 * C26381 * ce) / C26348 +
                         C26453 * (C26453 * C26480 - (C26381 * ce) / C26348);
    const double C1367 =
        C26453 * ((-(ae * C26467) / C26137) / C26121 - C26464 / C26348 +
                  C26347 * C26480) -
        ((C26362 + C26347 * C26381 + C26370 * ae) * ce) / C26348;
    const double C1368 =
        (-(ae * C26467) / C26137) / C26121 - C26464 / C26348 + C26347 * C26480 -
        (C26453 * C26420 * ce) / C26348 +
        C26453 *
            (C26453 *
                 ((-(ae * C26347 * C26473) / C26137) / C26121 -
                  C26471 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) /
                             C26137) /
                                C26121 -
                            (ae * C26473) / C26348)) -
             (C26420 * ce) / C26348);
    const double C1952 =
        C26423 *
        (2 * C26480 - (ae * C26477) / C26348 +
         C26347 *
             ((-(ae * C26347 * C26473) / C26137) / C26121 - C26471 / C26348 +
              C26347 *
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                       C26121 -
                   (ae * C26473) / C26348)));
    const double C2466 =
        C26453 *
            (2 * C26480 - (ae * C26477) / C26348 +
             C26347 *
                 ((-(ae * C26347 * C26473) / C26137) / C26121 -
                  C26471 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) /
                             C26137) /
                                C26121 -
                            (ae * C26473) / C26348))) -
        ((2 * C26381 + C26347 * C26420 + C26401 * ae) * ce) / C26348;
    const double C3039 =
        C26453 * C26423 * C26480 - (C26423 * C26381 * ce) / C26348;
    const double C4103 =
        2 * C26423 * C26480 +
        C26423 * (C26480 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                       C26121 -
                   (ae * C26473) / C26348) *
                      C26513);
    const double C4489 =
        C26423 * C26480 - (C26453 * C26787 * ce) / C26348 +
        C26453 *
            (C26453 * C26423 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                      C26121 -
                  (ae * C26473) / C26348) -
             (C26787 * ce) / C26348);
    const double C6045 =
        C26453 * (C26480 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) / C26137) /
                       C26121 -
                   (ae * C26473) / C26348) *
                      C26513) -
        ((C26381 + C26411 * C26513) * ce) / C26348;
    const double C7407 =
        2 * (C26453 * C26480 - (C26381 * ce) / C26348) -
        ((C26381 + C26411 * C26580) * ce) / C26348 +
        C26453 *
            (C26480 - (C26453 * C26411 * ce) / C26348 +
             C26453 *
                 (C26453 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26460) /
                             C26137) /
                                C26121 -
                            (ae * C26473) / C26348) -
                  (C26411 * ce) / C26348));
    const double C24375 =
        3 * ((-(C26963 * ce) / C26137) / C26121 - C26464 / C26348 +
             C26453 * C26970) -
        ((2 * C26963 + C26453 * C26967) * ce) / C26348 +
        C26453 *
            (2 * C26970 - (C26967 * ce) / C26348 +
             C26453 *
                 ((-(C26453 * C26402 * ce) / C26137) / C26121 -
                  C26471 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26460) /
                             C26137) /
                                C26121 -
                            (C26402 * ce) / C26348)));
    const double C12734 =
        3 * ((-(ae * C26803) / C26137) / C26121 - C26532 / C26348 +
             C26423 * C26903) +
        (((-2 * C26803) / C26137 - (C26423 * C26900) / C26137) * ae) / C26121 +
        C26423 *
            (2 * C26903 - (ae * C26900) / C26348 +
             C26423 *
                 ((-(ae * C26423 * C26473) / C26137) / C26121 -
                  C26535 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26529) /
                             C26137) /
                                C26121 -
                            (ae * C26473) / C26348)));
    const double C14768 =
        2 * (C26423 * C26935 - (ae * C26846) / C26348) -
        (ae * (C26453 * C26900 + C26884 * ce)) / C26348 +
        C26423 *
            (C26935 - (ae * (C26453 * C26423 * C26473 + C26883)) / C26348 +
             C26423 *
                 (C26423 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26529) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348) -
                  (ae * (C26453 * C26473 + C26392)) / C26348));
    const double C16072 =
        (((-2 * C26846) / C26137 -
          (C26453 * (C26453 * (C26453 * C26473 + C26392) + C26465 +
                     C26453 * C26385 * ce)) /
              C26137 -
          ((C26364 + C26385 * C26580) * ce) / C26137) *
         ae) /
            C26121 +
        C26423 *
            (2 * C26935 - ((C26494 + C26502 * C26580) * ce) / C26348 +
             C26453 *
                 ((-(C26453 * C26502 * ce) / C26137) / C26121 -
                  C26535 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26529) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)));
    const double C24497 =
        3 * ((-(C26974 * ce) / C26137) / C26121 - C26532 / C26348 +
             C26453 * C26935) -
        ((2 * C26974 + C26453 * C26976) * ce) / C26348 +
        C26453 *
            (2 * C26935 - (C26976 * ce) / C26348 +
             C26453 *
                 ((-(C26453 * C26502 * ce) / C26137) / C26121 -
                  C26535 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26529) /
                             C26137) /
                                C26121 -
                            (C26502 * ce) / C26348)));
    const double C414 =
        3 * ((-(C26551 * ce) / C26137) / C26121 - C26548 / C26348 +
             C26347 * C26564) -
        ((2 * C26551 + C26347 * C26561) * ce) / C26348 +
        C26347 *
            (2 * C26564 - (C26561 * ce) / C26348 +
             C26347 *
                 ((-(C26347 * C26557 * ce) / C26137) / C26121 -
                  C26555 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)));
    const double C1015 = C26423 * ((-(C26551 * ce) / C26137) / C26121 -
                                   C26548 / C26348 + C26347 * C26564);
    const double C1017 = (-(C26347 * C26548) / C26137) / C26121 -
                         (C26543 * ce) / C26348 + C26564 * C26513;
    const double C1018 =
        (-(C26551 * ce) / C26137) / C26121 - C26548 / C26348 + C26347 * C26564 +
        ((-(C26347 * C26557 * ce) / C26137) / C26121 - C26555 / C26348 +
         C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                       C26121 -
                   (C26557 * ce) / C26348)) *
            C26513;
    const double C1635 =
        C26453 * ((-(C26551 * ce) / C26137) / C26121 - C26548 / C26348 +
                  C26347 * C26564) -
        (ae * (C26347 * C26380 + C26361 + C26370 * ce)) / C26348;
    const double C1637 = (-(C26347 * C26548) / C26137) / C26121 -
                         (C26543 * ce) / C26348 -
                         (ae * C26453 * C26380) / C26348 +
                         C26453 * (C26453 * C26564 - (ae * C26380) / C26348);
    const double C1638 =
        (-(C26551 * ce) / C26137) / C26121 - C26548 / C26348 + C26347 * C26564 -
        (ae * C26453 * C26419) / C26348 +
        C26453 *
            (C26453 *
                 ((-(C26347 * C26557 * ce) / C26137) / C26121 -
                  C26555 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)) -
             (ae * C26419) / C26348);
    const double C2180 =
        C26423 *
        (2 * C26564 - (C26561 * ce) / C26348 +
         C26347 *
             ((-(C26347 * C26557 * ce) / C26137) / C26121 - C26555 / C26348 +
              C26347 *
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                       C26121 -
                   (C26557 * ce) / C26348)));
    const double C2694 =
        (((-2 * C26380) / C26137 - (C26347 * C26419) / C26137 -
          (C26401 * ce) / C26137) *
         ae) /
            C26121 +
        C26453 *
            (2 * C26564 - (C26561 * ce) / C26348 +
             C26347 *
                 ((-(C26347 * C26557 * ce) / C26137) / C26121 -
                  C26555 / C26348 +
                  C26347 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)));
    const double C3341 =
        C26453 * C26423 * C26564 - (ae * C26423 * C26380) / C26348;
    const double C4251 =
        2 * C26423 * C26564 +
        C26423 * (C26564 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                       C26121 -
                   (C26557 * ce) / C26348) *
                      C26513);
    const double C4701 =
        C26423 * C26564 - (ae * C26453 * C26797) / C26348 +
        C26453 *
            (C26453 * C26423 *
                 ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                      C26121 -
                  (C26557 * ce) / C26348) -
             (ae * C26797) / C26348);
    const double C6257 =
        C26453 * (C26564 +
                  ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) / C26137) /
                       C26121 -
                   (C26557 * ce) / C26348) *
                      C26513) -
        (ae * (C26410 * C26513 + C26380)) / C26348;
    const double C7555 =
        2 * (C26453 * C26564 - (ae * C26380) / C26348) -
        (ae * (C26410 * C26580 + C26380)) / C26348 +
        C26453 *
            (C26564 - (ae * C26453 * C26410) / C26348 +
             C26453 *
                 (C26453 * ((-(C26347 * std::pow(C26345, 6) * bs[6] * C26544) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348) -
                  (ae * C26410) / C26348));
    const double C24536 =
        3 * ((-(ae * C26978) / C26137) / C26121 - C26548 / C26348 +
             C26453 * C26985) +
        (((-2 * C26978) / C26137 - (C26453 * C26982) / C26137) * ae) / C26121 +
        C26453 *
            (2 * C26985 - (ae * C26982) / C26348 +
             C26453 *
                 ((-(ae * C26453 * C26399) / C26137) / C26121 -
                  C26555 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26544) /
                             C26137) /
                                C26121 -
                            (ae * C26399) / C26348)));
    const double C12817 =
        3 * ((-(C26804 * ce) / C26137) / C26121 - C26573 / C26348 +
             C26423 * C26912) -
        ((2 * C26804 + C26423 * C26909) * ce) / C26348 +
        C26423 *
            (2 * C26912 - (C26909 * ce) / C26348 +
             C26423 *
                 ((-(C26423 * C26557 * ce) / C26137) / C26121 -
                  C26576 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26570) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)));
    const double C13307 =
        (-(C26804 * ce) / C26137) / C26121 - C26573 / C26348 + C26423 * C26912 -
        (ae * C26453 * C26894) / C26348 +
        C26453 *
            (C26453 *
                 ((-(C26423 * C26557 * ce) / C26137) / C26121 -
                  C26576 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26570) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)) -
             (ae * C26894) / C26348);
    const double C14879 =
        (((-2 * C26758) / C26137 - (C26423 * C26894) / C26137 -
          (C26884 * ce) / C26137) *
         ae) /
            C26121 +
        C26453 *
            (2 * C26912 - (C26909 * ce) / C26348 +
             C26423 *
                 ((-(C26423 * C26557 * ce) / C26137) / C26121 -
                  C26576 / C26348 +
                  C26423 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26570) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348)));
    const double C16143 =
        2 * (C26453 * C26912 - (ae * C26758) / C26348) -
        (ae * (C26882 * C26580 + C26758)) / C26348 +
        C26453 *
            (C26912 - (ae * C26453 * C26882) / C26348 +
             C26453 *
                 (C26453 * ((-(C26423 * std::pow(C26345, 6) * bs[6] * C26570) /
                             C26137) /
                                C26121 -
                            (C26557 * ce) / C26348) -
                  (ae * C26882) / C26348));
    const double C24571 =
        3 * ((-(ae * C26987) / C26137) / C26121 - C26573 / C26348 +
             C26453 * C26994) +
        (((-2 * C26987) / C26137 - (C26453 * C26991) / C26137) * ae) / C26121 +
        C26453 *
            (2 * C26994 - (ae * C26991) / C26348 +
             C26453 *
                 ((-(ae * C26453 * C26443) / C26137) / C26121 -
                  C26576 / C26348 +
                  C26453 * ((-(C26453 * std::pow(C26345, 6) * bs[6] * C26570) /
                             C26137) /
                                C26121 -
                            (ae * C26443) / C26348)));
    const double C26162 = C26161 / C26137;
    const double C9542 = C9534 * C596;
    const double C9536 = C9528 * C596;
    const double C9895 = C9891 * C596;
    const double C9892 = C9888 * C596;
    const double C11468 = C11464 * C596;
    const double C11895 = C11893 * C596;
    const double C18530 = C18522 * C596;
    const double C18524 = C18516 * C596;
    const double C18733 = C18729 * C596;
    const double C18730 = C18726 * C596;
    const double C20207 = C20205 * C596;
    const double C26263 = C26261 / C26137;
    const double C26309 = C26307 / C26137;
    const double C11469 = C11465 * C27280;
    const double C13907 = C11465 * C27280;
    const double C12925 = C12923 * C27275;
    const double C9601 = C27516 * C684;
    const double C10575 = C27516 * C685;
    const double C19564 = C27516 * C1299;
    const double C18590 = C27516 * C1302;
    const double C11539 = C27516 * C2967;
    const double C2009 = C27517 * C807;
    const double C819 = C27517 * C809;
    const double C2523 = C27517 * C1427;
    const double C1439 = C27517 * C1429;
    const double C3117 = C27517 * C3111;
    const double C9667 = C27516 * C746;
    const double C10629 = C27516 * C747;
    const double C18659 = C27516 * C1366;
    const double C19618 = C27516 * C1367;
    const double C11617 = C27516 * C3039;
    const double C2185 = C27518 * C1015;
    const double C1027 = C27518 * C1017;
    const double C2699 = C27518 * C1635;
    const double C1647 = C27518 * C1637;
    const double C3347 = C27518 * C3341;
    const double C26163 = C26162 - C26152;
    const double C26264 = C26263 - C26248;
    const double C26310 = C26309 - C26294;
    const double C9605 = C9600 + C9601;
    const double C10576 = C10574 + C10575;
    const double C19565 = C19563 + C19564;
    const double C18596 = C18589 + C18590;
    const double C11541 = C11538 + C11539;
    const double C2011 = C2008 + C2009;
    const double C823 = C818 + C819;
    const double C2525 = C2522 + C2523;
    const double C1443 = C1438 + C1439;
    const double C3119 = C3116 + C3117;
    const double C9671 = C9666 + C9667;
    const double C10630 = C10628 + C10629;
    const double C18663 = C18658 + C18659;
    const double C19619 = C19617 + C19618;
    const double C11619 = C11616 + C11617;
    const double C2187 = C2184 + C2185;
    const double C1031 = C1026 + C1027;
    const double C2701 = C2698 + C2699;
    const double C1651 = C1646 + C1647;
    const double C3349 = C3346 + C3347;
    const double C13428 = C9534 * C26163;
    const double C13422 = C9528 * C26163;
    const double C13736 = C9891 * C26163;
    const double C13730 = C9888 * C26163;
    const double C13906 = C11464 * C26163;
    const double C14306 = C11893 * C26163;
    const double C22310 = C18516 * C26163;
    const double C22522 = C20205 * C26163;
    const double C22516 = C18726 * C26163;
    const double C25254 = C18522 * C26163;
    const double C25408 = C18729 * C26163;
    const double C85 =
        ((((0 - (C26135 * C26136) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26138 / C26137) /
             C26142 -
         ((C26135 * C26159 + 0) * de) / C26137) /
            C26142 +
        ((C26135 * (C26159 / C26142 -
                    ((C26135 * C26163 + C27471) * de) / C26137 + C26156) +
          C27505) *
         ce) /
            C26137 +
        C26163 / C26142 - ((C26135 * C26156 + C27280) * de) / C26137;
    const double C86 = (C26159 / C26142 -
                        ((C26135 * C26163 + C27471) * de) / C26137 + C26156) /
                           C26142 +
                       ((C26135 * (C26163 / C26142 -
                                   ((C26135 * C26156 + C27280) * de) / C26137) +
                         C27506) *
                        ce) /
                           C26137 +
                       2 * (C26156 / C26142 - (0 * de) / C26137);
    const double C87 =
        (C26163 / C26142 - ((C26135 * C26156 + C27280) * de) / C26137) /
            C26142 +
        ((C26135 * (C26156 / C26142 - (0 * de) / C26137) + C1837) * ce) /
            C26137;
    const double C1840 =
        C26159 / C26142 - ((C26135 * C26163 + C27471) * de) / C26137 + C26156;
    const double C1841 =
        C26163 / C26142 - ((C26135 * C26156 + C27280) * de) / C26137;
    const double C3556 =
        C26159 / C26142 + ((C26135 * C26163 + C27471) * ce) / C26137 + C26156;
    const double C3557 =
        C26163 / C26142 + ((C26135 * C26156 + C27280) * ce) / C26137;
    const double C4059 =
        ((((0 - (C26190 * C26245) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26191 / C26137) /
             C26142 -
         ((C26190 * C26262 + 0) * de) / C26137) /
            C26142 +
        ((C26190 * (C26262 / C26142 -
                    ((C26190 * C26264 + C27481) * de) / C26137 + C26257) +
          C27509) *
         ce) /
            C26137 +
        C26264 / C26142 - ((C26190 * C26257 + C27352) * de) / C26137;
    const double C4060 =
        (C26262 / C26142 - ((C26190 * C26264 + C27481) * de) / C26137 +
         C26257) /
            C26142 +
        ((C26190 *
              (C26264 / C26142 - ((C26190 * C26257 + C27352) * de) / C26137) +
          C27510) *
         ce) /
            C26137 +
        2 * (C26257 / C26142 - (0 * de) / C26137);
    const double C4061 =
        (C26264 / C26142 - ((C26190 * C26257 + C27352) * de) / C26137) /
            C26142 +
        ((C26190 * (C26257 / C26142 - (0 * de) / C26137) + C4861) * ce) /
            C26137;
    const double C4914 =
        C26262 / C26142 - ((C26190 * C26264 + C27481) * de) / C26137 + C26257;
    const double C4915 =
        C26264 / C26142 - ((C26190 * C26257 + C27352) * de) / C26137;
    const double C7401 =
        ((((0 - (C26205 * C26291) / C26137) * ce) / C26137 - (0 * de) / C26146 +
          C26206 / C26137) /
             C26142 -
         ((C26205 * C26308 + 0) * de) / C26137) /
            C26142 +
        ((C26205 * (C26308 / C26142 -
                    ((C26205 * C26310 + C27482) * de) / C26137 + C26303) +
          C27511) *
         ce) /
            C26137 +
        C26310 / C26142 - ((C26205 * C26303 + C27378) * de) / C26137;
    const double C7402 =
        (C26308 / C26142 - ((C26205 * C26310 + C27482) * de) / C26137 +
         C26303) /
            C26142 +
        ((C26205 *
              (C26310 / C26142 - ((C26205 * C26303 + C27378) * de) / C26137) +
          C27512) *
         ce) /
            C26137 +
        2 * (C26303 / C26142 - (0 * de) / C26137);
    const double C7403 =
        (C26310 / C26142 - ((C26205 * C26303 + C27378) * de) / C26137) /
            C26142 +
        ((C26205 * (C26303 / C26142 - (0 * de) / C26137) + C8283) * ce) /
            C26137;
    const double C8384 =
        C26308 / C26142 - ((C26205 * C26310 + C27482) * de) / C26137 + C26303;
    const double C8385 =
        C26310 / C26142 - ((C26205 * C26303 + C27378) * de) / C26137;
    const double C19566 = C19565 * C27303;
    const double C18600 = C18596 * C27303;
    const double C20065 = C11541 * C27352;
    const double C22383 = C11541 * C27352;
    const double C19675 = C2525 * C1837;
    const double C23541 = C2525 * C3553;
    const double C18725 = C1443 * C27280;
    const double C25409 = C1443 * C27280;
    const double C20203 = C3119 * C27280;
    const double C22523 = C3119 * C27280;
    const double C9675 = C9671 * C27314;
    const double C10631 = C10630 * C27314;
    const double C11621 = C11619 * C27378;
    const double C16381 = C11619 * C27378;
    const double C10837 = C2187 * C1837;
    const double C12399 = C2187 * C3553;
    const double C9887 = C1031 * C27280;
    const double C13737 = C1031 * C27280;
    const double C11891 = C3349 * C27280;
    const double C14307 = C3349 * C27280;
    const double C10512 = C9528 * C1840;
    const double C10832 = C9888 * C1840;
    const double C19500 = C18516 * C1840;
    const double C19670 = C18726 * C1840;
    const double C10514 = C9530 * C1841;
    const double C10834 = C1028 * C1841;
    const double C19502 = C18518 * C1841;
    const double C19672 = C1440 * C1841;
    const double C12088 = C9528 * C3556;
    const double C12394 = C9888 * C3556;
    const double C23380 = C18516 * C3556;
    const double C23536 = C18726 * C3556;
    const double C12090 = C9530 * C3557;
    const double C12396 = C1028 * C3557;
    const double C23382 = C18518 * C3557;
    const double C23538 = C1440 * C3557;
    const double C5068 = C257 * C4914;
    const double C5224 = C428 * C4914;
    const double C22954 = C18516 * C4914;
    const double C23118 = C18726 * C4914;
    const double C5070 = C820 * C4915;
    const double C5226 = C1028 * C4915;
    const double C22956 = C11464 * C4915;
    const double C23120 = C20205 * C4915;
    const double C8538 = C257 * C8384;
    const double C8694 = C428 * C8384;
    const double C17378 = C9528 * C8384;
    const double C17684 = C9888 * C8384;
    const double C8540 = C1440 * C8385;
    const double C8696 = C1648 * C8385;
    const double C17380 = C11464 * C8385;
    const double C17686 = C11893 * C8385;
    d2eexx[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1840 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27505 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1841 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27506 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C1842 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C1837) *
              C27517 * C27518 * C27314 * C27481 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C1841 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27505 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1840) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27506 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C1842 -
           (C84 * C1845 + C74 * C1846 + C83 * C609 + C73 * C618) * C1837) *
              C27517 * C27518 * C27314 * C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1897 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27481 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1898 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
              C27517 * C27518 * C27505 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C1898 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27481 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1897) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
              C27517 * C27518 * C27506 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C1897 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27481 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C1898 -
           (C84 * C1899 + C74 * C1900 + C83 * C679 + C73 * C685) * C27352) *
              C27517 * C27518 * C1837) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eexz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C27481 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C27352) *
              C27505 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C27352 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C27481) *
              C27506 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27314) *
               C27517 * C27518 * C27481 -
           ((C84 * C1951 + C74 * C1952 + C83 * C741 + C73 * C747) * C27314 +
            (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C188) *
               C27517 * C27518 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C1840 +
                     (C233 * C96 + C27517 * C239) * C27505 - C257 * C1841 -
                     C258 * C27506 + C259 * C1842 + C260 * C1837) *
                        C27518 * C73 +
                    (C257 * C1840 + C258 * C27505 - C259 * C1841 -
                     C260 * C27506 + C261 * C1842 + C262 * C1837) *
                        C27518 * C74) *
                       C27314 * C27481 +
                   ((C820 * C1841 -
                     ((C233 * C607 + C27517 * C805) * C27505 +
                      (C233 * C600 + C27517 * C800) * C1840) +
                     C821 * C27506 - C2010 * C1842 - C2011 * C1837) *
                        C27518 * C73 +
                    (C2010 * C1841 - (C821 * C27505 + C820 * C1840) +
                     C2011 * C27506 - (C233 * C1843 + C27517 * C2003) * C1842 -
                     (C233 * C1845 + C27517 * C2004) * C1837) *
                        C27518 * C74) *
                       C27314 * C27352)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C1897 +
                     (C233 * C144 + C27517 * C296) * C27481 -
                     (C233 * C600 + C27517 * C800) * C1898 -
                     (C233 * C676 + C27517 * C873) * C27352) *
                        C27518 * C73 +
                    (C2063 + C2064 - C2065 - C2066) * C27518 * C74) *
                       C27505 +
                   ((C2065 - (C2064 + C2063) + C2066) * C27518 * C73 +
                    (C2067 - (C2068 + C2069) + C2073) * C27518 * C74) *
                       C27506 +
                   ((C2069 + C2068 - C2067 - C2073) * C27518 * C73 +
                    (C261 * C1897 + C313 * C27481 -
                     (C233 * C1843 + C27517 * C2003) * C1898 -
                     (C233 * C1899 + C27517 * C2061) * C27352) *
                        C27518 * C74) *
                       C1837) *
                  C27314) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C27481 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C27352) *
              C27505 +
          (((C950 + C956) * C27518 * C73 + (C2125 + C2129) * C27518 * C74) *
               C27352 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C27481) *
              C27506 +
          (((C361 + C369) * C27518 * C73 + (C362 + C370) * C27518 * C74) *
               C27481 -
           (((C233 * C1951 + C27517 * C2123) * C27314 +
             (C233 * C1843 + C27517 * C2003) * C188) *
                C27518 * C74 +
            (C2129 + C2125) * C27518 * C73) *
               C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eezx[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C1840 +
                     (C404 * C96 + C27518 * C410) * C27505 - C428 * C1841 -
                     C429 * C27506 + C430 * C1842 + C431 * C1837) *
                        C73 +
                    (C428 * C1840 + C429 * C27505 - C430 * C1841 -
                     C431 * C27506 + C432 * C1842 + C433 * C1837) *
                        C74) *
                       C27517 * C27314 * C27481 +
                   ((C1028 * C1841 -
                     ((C404 * C607 + C27518 * C1013) * C27505 +
                      (C404 * C600 + C27518 * C1008) * C1840) +
                     C1029 * C27506 - C2186 * C1842 - C2187 * C1837) *
                        C73 +
                    (C2186 * C1841 - (C1029 * C27505 + C1028 * C1840) +
                     C2187 * C27506 - (C404 * C1843 + C27518 * C2179) * C1842 -
                     (C404 * C1845 + C27518 * C2180) * C1837) *
                        C74) *
                       C27517 * C27314 * C27352)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[0] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C1897 +
                     (C404 * C144 + C27518 * C467) * C27481 -
                     (C404 * C600 + C27518 * C1008) * C1898 -
                     (C404 * C676 + C27518 * C1081) * C27352) *
                        C73 +
                    (C2239 + C2240 - C2241 - C2242) * C74) *
                       C27517 * C27505 +
                   ((C2241 - (C2240 + C2239) + C2242) * C73 +
                    (C2243 - (C2244 + C2245) + C2249) * C74) *
                       C27517 * C27506 +
                   ((C2245 + C2244 - C2243 - C2249) * C73 +
                    (C432 * C1897 + C484 * C27481 -
                     (C404 * C1843 + C27518 * C2179) * C1898 -
                     (C404 * C1899 + C27518 * C2237) * C27352) *
                        C74) *
                       C27517 * C1837) *
                  C27314) /
                 (p * q * std::sqrt(p + q));
    d2eezz[0] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C27481 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C27352) *
              C27505 +
          (((C1158 + C1164) * C73 + (C2301 + C2305) * C74) * C27517 * C27352 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C27481) *
              C27506 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27517 * C27481 -
           (((C404 * C1951 + C27518 * C2299) * C27314 +
             (C404 * C1843 + C27518 * C2179) * C188) *
                C74 +
            (C2305 + C2301) * C73) *
               C27517 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eexx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
               C27517 * C27518 * C27482 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C597 -
            ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C591 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C596) +
            (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27280) *
               C27517 * C27518 * C27378) *
              C27481 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C597 -
            ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C591 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C596) +
            (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
               C27517 * C27518 * C27482 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C596 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C591 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C597 -
            (C84 * C2893 + C74 * C2896 + C83 * C2891 + C73 * C2895) * C27280) *
               C27517 * C27518 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1897 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27481 -
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1898 -
            (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
               C27517 * C27518 * C591 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C1898 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27481 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1897) +
            (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
               C27517 * C27518 * C27280) *
              C27482 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C1898 -
            ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27481 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1897) +
            (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27352) *
               C27517 * C27518 * C591 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C1897 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27481 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C1898 -
            (C84 * C2965 + C74 * C2968 + C83 * C2964 + C73 * C2967) * C27352) *
               C27517 * C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2463 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27482 -
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C2464 -
            (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
               C27517 * C27518 * C27481 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C2464 -
            ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27482 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C2463) +
            (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C591 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C2464 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27482 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C2463) +
            (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
               C27517 * C27518 * C27481 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C2463 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27482 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C2464 -
            (C84 * C3037 + C74 * C3040 + C83 * C3036 + C73 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C596 +
             (C233 * C96 + C27517 * C239) * C591 - C257 * C597 -
             C258 * C27280) *
                C27518 * C73 +
            (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C27280) * C27518 *
                C74) *
               C27482 +
           ((C1440 * C597 -
             ((C233 * C1227 + C27517 * C1425) * C591 +
              (C233 * C1220 + C27517 * C1420) * C596) +
             C1441 * C27280) *
                C27518 * C73 +
            (C2524 * C597 - (C1441 * C591 + C1440 * C596) + C2525 * C27280) *
                C27518 * C74) *
               C27378) *
              C27481 +
          (((C820 * C597 -
             ((C233 * C607 + C27517 * C805) * C591 +
              (C233 * C600 + C27517 * C800) * C596) +
             C821 * C27280) *
                C27518 * C73 +
            (C2010 * C597 - (C821 * C591 + C820 * C596) + C2011 * C27280) *
                C27518 * C74) *
               C27482 +
           (((C233 * C2885 + C27517 * C3107) * C596 +
             (C233 * C2890 + C27517 * C3110) * C591 - C3118 * C597 -
             C3119 * C27280) *
                C27518 * C73 +
            (C3118 * C596 + C3119 * C591 -
             (C233 * C2887 + C27517 * C3109) * C597 -
             (C233 * C2893 + C27517 * C3112) * C27280) *
                C27518 * C74) *
               C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27517 * C234) * C1897 +
                      (C233 * C144 + C27517 * C296) * C27481 -
                      (C233 * C600 + C27517 * C800) * C1898 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C27518 * C73 +
                     (C2063 + C2064 - C2065 - C2066) * C27518 * C74) *
                        C591 +
                    ((C2065 - (C2064 + C2063) + C2066) * C27518 * C73 +
                     (C2067 - (C2068 + C2069) + C2073) * C27518 * C74) *
                        C27280) *
                       C27482 +
                   ((((C233 * C2885 + C27517 * C3107) * C1898 -
                      ((C233 * C1294 + C27517 * C1495) * C27481 +
                       (C233 * C1220 + C27517 * C1420) * C1897) +
                      (C233 * C2963 + C27517 * C3185) * C27352) *
                         C27518 * C73 +
                     (C3189 - (C3190 + C3191) + C3195) * C27518 * C74) *
                        C591 +
                    ((C3191 + C3190 - C3189 - C3195) * C27518 * C73 +
                     (C2524 * C1897 + C2580 * C27481 -
                      (C233 * C2887 + C27517 * C3109) * C1898 -
                      (C233 * C2965 + C27517 * C3187) * C27352) *
                         C27518 * C74) *
                        C27280) *
                       C27378)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27517 * C234) * C2463 +
                      (C233 * C189 + C27517 * C350) * C27482 -
                      (C233 * C1220 + C27517 * C1420) * C2464 -
                      (C233 * C1358 + C27517 * C1559) * C27378) *
                         C27518 * C73 +
                     (C2633 + C2634 - C2635 - C2636) * C27518 * C74) *
                        C27481 +
                    (((C233 * C2885 + C27517 * C3107) * C2464 -
                      ((C233 * C738 + C27517 * C942) * C27482 +
                       (C233 * C600 + C27517 * C800) * C2463) +
                      (C233 * C3035 + C27517 * C3261) * C27378) *
                         C27518 * C73 +
                     (C3265 - (C3266 + C3267) + C3271) * C27518 * C74) *
                        C27352) *
                       C591 +
                   (((C2635 - (C2634 + C2633) + C2636) * C27518 * C73 +
                     (C2637 - (C2638 + C2639) + C2643) * C27518 * C74) *
                        C27481 +
                    ((C3267 + C3266 - C3265 - C3271) * C27518 * C73 +
                     (C2010 * C2463 + C2128 * C27482 -
                      (C233 * C2887 + C27517 * C3109) * C2464 -
                      (C233 * C3037 + C27517 * C3263) * C27378) *
                         C27518 * C74) *
                        C27352) *
                       C27280)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[1] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C596 +
             (C404 * C96 + C27518 * C410) * C591 - C428 * C597 -
             C429 * C27280) *
                C73 +
            (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C27280) * C74) *
               C27517 * C27482 +
           ((C1648 * C597 -
             ((C404 * C1227 + C27518 * C1633) * C591 +
              (C404 * C1220 + C27518 * C1628) * C596) +
             C1649 * C27280) *
                C73 +
            (C2700 * C597 - (C1649 * C591 + C1648 * C596) + C2701 * C27280) *
                C74) *
               C27517 * C27378) *
              C27481 +
          (((C1028 * C597 -
             ((C404 * C607 + C27518 * C1013) * C591 +
              (C404 * C600 + C27518 * C1008) * C596) +
             C1029 * C27280) *
                C73 +
            (C2186 * C597 - (C1029 * C591 + C1028 * C596) + C2187 * C27280) *
                C74) *
               C27517 * C27482 +
           (((C404 * C2885 + C27518 * C3337) * C596 +
             (C404 * C2890 + C27518 * C3340) * C591 - C3348 * C597 -
             C3349 * C27280) *
                C73 +
            (C3348 * C596 + C3349 * C591 -
             (C404 * C2887 + C27518 * C3339) * C597 -
             (C404 * C2893 + C27518 * C3342) * C27280) *
                C74) *
               C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27518 * C405) * C1897 +
                      (C404 * C144 + C27518 * C467) * C27481 -
                      (C404 * C600 + C27518 * C1008) * C1898 -
                      (C404 * C676 + C27518 * C1081) * C27352) *
                         C73 +
                     (C2239 + C2240 - C2241 - C2242) * C74) *
                        C27517 * C591 +
                    ((C2241 - (C2240 + C2239) + C2242) * C73 +
                     (C2243 - (C2244 + C2245) + C2249) * C74) *
                        C27517 * C27280) *
                       C27482 +
                   ((((C404 * C2885 + C27518 * C3337) * C1898 -
                      ((C404 * C1294 + C27518 * C1703) * C27481 +
                       (C404 * C1220 + C27518 * C1628) * C1897) +
                      (C404 * C2963 + C27518 * C3415) * C27352) *
                         C73 +
                     (C3419 - (C3420 + C3421) + C3425) * C74) *
                        C27517 * C591 +
                    ((C3421 + C3420 - C3419 - C3425) * C73 +
                     (C2700 * C1897 + C2756 * C27481 -
                      (C404 * C2887 + C27518 * C3339) * C1898 -
                      (C404 * C2965 + C27518 * C3417) * C27352) *
                         C74) *
                        C27517 * C27280) *
                       C27378)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[1] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27518 * C405) * C2463 +
                      (C404 * C189 + C27518 * C521) * C27482 -
                      (C404 * C1220 + C27518 * C1628) * C2464 -
                      (C404 * C1358 + C27518 * C1767) * C27378) *
                         C73 +
                     (C2809 + C2810 - C2811 - C2812) * C74) *
                        C27517 * C27481 +
                    (((C404 * C2885 + C27518 * C3337) * C2464 -
                      ((C404 * C738 + C27518 * C1150) * C27482 +
                       (C404 * C600 + C27518 * C1008) * C2463) +
                      (C404 * C3035 + C27518 * C3491) * C27378) *
                         C73 +
                     (C3495 - (C3496 + C3497) + C3501) * C74) *
                        C27517 * C27352) *
                       C591 +
                   (((C2811 - (C2810 + C2809) + C2812) * C73 +
                     (C2813 - (C2814 + C2815) + C2819) * C74) *
                        C27517 * C27481 +
                    ((C3497 + C3496 - C3495 - C3501) * C73 +
                     (C2186 * C2463 + C2304 * C27482 -
                      (C404 * C2887 + C27518 * C3339) * C2464 -
                      (C404 * C3037 + C27518 * C3493) * C27378) *
                         C74) *
                        C27517 * C27352) *
                       C27280)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[2] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
              C27517 * C27518 * C27314 * C593 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C597 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C591 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C596) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
              C27517 * C27518 * C27314 * C594 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C596 +
           (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C591 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C597 -
           (C84 * C615 + C74 * C621 + C83 * C613 + C73 * C620) * C27280) *
              C27517 * C27518 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C85 +
          (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C75 -
          (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C86 -
          (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C76 +
          (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C87 +
          (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C77 -
          (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C88 -
          (C84 * C103 + C74 * C108 + C83 * C101 + C73 * C107) * C78) *
         C27517 * C27518 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
              C27517 * C27518 * C1215 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C597 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C591 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C596) +
           (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27280) *
              C27517 * C27518 * C1216 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C596 +
           (C83 * C1232 + C73 * C1239 + C84 * C1233 + C74 * C1240) * C591 -
           (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C597 -
           (C84 * C1235 + C74 * C1241 + C83 * C1233 + C73 * C1240) * C27280) *
              C27517 * C27518 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eexy[2] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C672 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C593 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C673 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C594 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C674 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C595) *
              C27517 * C27518 * C591 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C673 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C593 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C672) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C594 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C674 -
           (C84 * C680 + C74 * C686 + C83 * C678 + C73 * C684) * C595) *
              C27517 * C27518 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
              C27517 * C27518 * C75 -
          ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
              C27517 * C27518 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27303) *
              C27517 * C27518 * C77 -
          ((C84 * C148 + C74 * C153 + C83 * C147 + C73 * C152) * C27303 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C143) *
              C27517 * C27518 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
               C27517 * C27518 * C591 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27517 * C27518 * C27280) *
              C1215 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C143 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27303) *
               C27517 * C27518 * C27280 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
               C27517 * C27518 * C591) *
              C1216 +
          (((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C143 +
            (C83 * C1295 + C73 * C1301 + C84 * C1296 + C74 * C1302) * C27303) *
               C27517 * C27518 * C591 -
           ((C84 * C1297 + C74 * C1303 + C83 * C1296 + C73 * C1302) * C27303 +
            (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C143) *
               C27517 * C27518 * C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eexz[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C593 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C594 +
           ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C188 +
            (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27314) *
               C27517 * C27518 * C595) *
              C591 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C594 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C593 -
           ((C84 * C742 + C74 * C748 + C83 * C740 + C73 * C746) * C27314 +
            (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C188) *
               C27517 * C27518 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
              C27517 * C27518 * C27303 * C75 -
          ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
              C27517 * C27518 * C27303 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27314) *
              C27517 * C27518 * C27303 * C77 -
          ((C84 * C193 + C74 * C198 + C83 * C192 + C73 * C197) * C27314 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C188) *
              C27517 * C27518 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1354 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C1215 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1355 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C1216 +
           (C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C1356 +
           (C83 * C1359 + C73 * C1365 + C84 * C1360 + C74 * C1366) * C1217) *
              C27517 * C27518 * C27303 * C591 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C1355 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C1215 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1354) +
           (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C1216 -
           (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C1356 -
           (C84 * C1362 + C74 * C1368 + C83 * C1360 + C73 * C1366) * C1217) *
              C27517 * C27518 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C27518 * C73 +
           (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C27280) * C27518 *
               C74) *
              C27314 * C593 +
          ((C820 * C597 -
            ((C233 * C607 + C27517 * C805) * C591 +
             (C233 * C600 + C27517 * C800) * C596) +
            C821 * C27280) *
               C27518 * C73 +
           ((C233 * C599 + C27517 * C801) * C597 - (C821 * C591 + C820 * C596) +
            (C233 * C609 + C27517 * C807) * C27280) *
               C27518 * C74) *
              C27314 * C594 +
          (((C233 * C601 + C27517 * C802) * C596 +
            (C233 * C612 + C27517 * C808) * C591 - C822 * C597 -
            C823 * C27280) *
               C27518 * C73 +
           (C822 * C596 + C823 * C591 - (C233 * C603 + C27517 * C804) * C597 -
            (C233 * C615 + C27517 * C810) * C27280) *
               C27518 * C74) *
              C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C85 +
           (C233 * C96 + C27517 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C27518 * C73 +
          (C257 * C85 + C258 * C75 - C259 * C86 - C260 * C76 + C261 * C87 +
           C262 * C77 - (C233 * C93 + C27517 * C238) * C88 -
           (C233 * C103 + C27517 * C243) * C78) *
              C27518 * C74) *
         C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C27518 * C73 +
           (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C27280) * C27518 *
               C74) *
              C1215 +
          ((C1440 * C597 -
            ((C233 * C1227 + C27517 * C1425) * C591 +
             (C233 * C1220 + C27517 * C1420) * C596) +
            C1441 * C27280) *
               C27518 * C73 +
           ((C233 * C1219 + C27517 * C1421) * C597 -
            (C1441 * C591 + C1440 * C596) +
            (C233 * C1229 + C27517 * C1427) * C27280) *
               C27518 * C74) *
              C1216 +
          (((C233 * C1221 + C27517 * C1422) * C596 +
            (C233 * C1232 + C27517 * C1428) * C591 - C1442 * C597 -
            C1443 * C27280) *
               C27518 * C73 +
           (C1442 * C596 + C1443 * C591 -
            (C233 * C1223 + C27517 * C1424) * C597 -
            (C233 * C1235 + C27517 * C1430) * C27280) *
               C27518 * C74) *
              C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eeyy[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C27518 * C73 +
           (C880 + C881 - C882 - C890 + C885 + C891) * C27518 * C74) *
              C591 +
          ((C882 - (C881 + C880) + C890 - C885 - C891) * C27518 * C73 +
           ((C233 * C599 + C27517 * C801) * C673 - (C312 * C593 + C259 * C672) +
            (C233 * C679 + C27517 * C877) * C594 -
            (C233 * C603 + C27517 * C804) * C674 -
            (C233 * C680 + C27517 * C878) * C595) *
               C27518 * C74) *
              C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C27518 * C73 +
           (C302 + C314) * C27518 * C74) *
              C75 -
          ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) * C76 +
          ((C307 + C315) * C27518 * C73 + (C308 + C316) * C27518 * C74) * C77 -
          (((C233 * C148 + C27517 * C300) * C27303 +
            (C233 * C93 + C27517 * C238) * C143) *
               C27518 * C74 +
           (C316 + C308) * C27518 * C73) *
              C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C27518 * C73 +
            (C302 + C314) * C27518 * C74) *
               C591 -
           ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) *
               C27280) *
              C1215 +
          (((C1500 + C1508) * C27518 * C73 +
            ((C233 * C1219 + C27517 * C1421) * C143 +
             (C233 * C1293 + C27517 * C1494) * C27303) *
                C27518 * C74) *
               C27280 -
           ((C1508 + C1500) * C27518 * C74 +
            ((C233 * C1294 + C27517 * C1495) * C27303 +
             (C233 * C1220 + C27517 * C1420) * C143) *
                C27518 * C73) *
               C591) *
              C1216 +
          ((((C233 * C1221 + C27517 * C1422) * C143 +
             (C233 * C1295 + C27517 * C1496) * C27303) *
                C27518 * C73 +
            (C1503 + C1509) * C27518 * C74) *
               C591 -
           (((C233 * C1297 + C27517 * C1498) * C27303 +
             (C233 * C1223 + C27517 * C1424) * C143) *
                C27518 * C74 +
            (C1509 + C1503) * C27518 * C73) *
               C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[2] +=
        (-std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C593 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C594 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C27518 * C73 +
            (C951 + C957) * C27518 * C74) *
               C595) *
              C591 +
          (((C950 + C956) * C27518 * C73 +
            ((C233 * C599 + C27517 * C801) * C188 +
             (C233 * C741 + C27517 * C945) * C27314) *
                C27518 * C74) *
               C594 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C593 -
           (((C233 * C742 + C27517 * C946) * C27314 +
             (C233 * C603 + C27517 * C804) * C188) *
                C27518 * C74 +
            (C957 + C951) * C27518 * C73) *
               C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C27518 * C73 +
           (C356 + C368) * C27518 * C74) *
              C27303 * C75 -
          ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
              C27303 * C76 +
          ((C361 + C369) * C27518 * C73 + (C362 + C370) * C27518 * C74) *
              C27303 * C77 -
          (((C233 * C193 + C27517 * C354) * C27314 +
            (C233 * C93 + C27517 * C238) * C188) *
               C27518 * C74 +
           (C370 + C362) * C27518 * C73) *
              C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C1354 +
            (C233 * C189 + C27517 * C350) * C1215 -
            (C233 * C1220 + C27517 * C1420) * C1355 -
            (C233 * C1358 + C27517 * C1559) * C1216 +
            (C233 * C1221 + C27517 * C1422) * C1356 +
            (C233 * C1359 + C27517 * C1560) * C1217) *
               C27518 * C73 +
           (C1566 + C1567 - C1568 - C1576 + C1571 + C1577) * C27518 * C74) *
              C27303 * C591 +
          ((C1568 - (C1567 + C1566) + C1576 - C1571 - C1577) * C27518 * C73 +
           ((C233 * C1219 + C27517 * C1421) * C1355 -
            (C366 * C1215 + C259 * C1354) +
            (C233 * C1361 + C27517 * C1563) * C1216 -
            (C233 * C1223 + C27517 * C1424) * C1356 -
            (C233 * C1362 + C27517 * C1564) * C1217) *
               C27518 * C74) *
              C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C73 +
           (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C27280) * C74) *
              C27517 * C27314 * C593 +
          ((C1028 * C597 -
            ((C404 * C607 + C27518 * C1013) * C591 +
             (C404 * C600 + C27518 * C1008) * C596) +
            C1029 * C27280) *
               C73 +
           ((C404 * C599 + C27518 * C1009) * C597 -
            (C1029 * C591 + C1028 * C596) +
            (C404 * C609 + C27518 * C1015) * C27280) *
               C74) *
              C27517 * C27314 * C594 +
          (((C404 * C601 + C27518 * C1010) * C596 +
            (C404 * C612 + C27518 * C1016) * C591 - C1030 * C597 -
            C1031 * C27280) *
               C73 +
           (C1030 * C596 + C1031 * C591 -
            (C404 * C603 + C27518 * C1012) * C597 -
            (C404 * C615 + C27518 * C1018) * C27280) *
               C74) *
              C27517 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C85 +
           (C404 * C96 + C27518 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C73 +
          (C428 * C85 + C429 * C75 - C430 * C86 - C431 * C76 + C432 * C87 +
           C433 * C77 - (C404 * C93 + C27518 * C409) * C88 -
           (C404 * C103 + C27518 * C414) * C78) *
              C74) *
         C27517 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C73 +
           (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C27280) * C74) *
              C27517 * C1215 +
          ((C1648 * C597 -
            ((C404 * C1227 + C27518 * C1633) * C591 +
             (C404 * C1220 + C27518 * C1628) * C596) +
            C1649 * C27280) *
               C73 +
           ((C404 * C1219 + C27518 * C1629) * C597 -
            (C1649 * C591 + C1648 * C596) +
            (C404 * C1229 + C27518 * C1635) * C27280) *
               C74) *
              C27517 * C1216 +
          (((C404 * C1221 + C27518 * C1630) * C596 +
            (C404 * C1232 + C27518 * C1636) * C591 - C1650 * C597 -
            C1651 * C27280) *
               C73 +
           (C1650 * C596 + C1651 * C591 -
            (C404 * C1223 + C27518 * C1632) * C597 -
            (C404 * C1235 + C27518 * C1638) * C27280) *
               C74) *
              C27517 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[2] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C672 +
            (C404 * C144 + C27518 * C467) * C593 -
            (C404 * C600 + C27518 * C1008) * C673 -
            (C404 * C676 + C27518 * C1081) * C594 +
            (C404 * C601 + C27518 * C1010) * C674 +
            (C404 * C677 + C27518 * C1082) * C595) *
               C73 +
           (C1088 + C1089 - C1090 - C1098 + C1093 + C1099) * C74) *
              C27517 * C591 +
          ((C1090 - (C1089 + C1088) + C1098 - C1093 - C1099) * C73 +
           ((C404 * C599 + C27518 * C1009) * C673 -
            (C483 * C593 + C430 * C672) +
            (C404 * C679 + C27518 * C1085) * C594 -
            (C404 * C603 + C27518 * C1012) * C674 -
            (C404 * C680 + C27518 * C1086) * C595) *
               C74) *
              C27517 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C143 +
            (C404 * C144 + C27518 * C467) * C27303) *
               C73 +
           (C473 + C485) * C74) *
              C27517 * C75 -
          ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C76 +
          ((C478 + C486) * C73 + (C479 + C487) * C74) * C27517 * C77 -
          (((C404 * C148 + C27518 * C471) * C27303 +
            (C404 * C93 + C27518 * C409) * C143) *
               C74 +
           (C487 + C479) * C73) *
              C27517 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C73 +
            (C473 + C485) * C74) *
               C27517 * C591 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C27280) *
              C1215 +
          (((C1708 + C1716) * C73 + ((C404 * C1219 + C27518 * C1629) * C143 +
                                     (C404 * C1293 + C27518 * C1702) * C27303) *
                                        C74) *
               C27517 * C27280 -
           ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                     (C404 * C1220 + C27518 * C1628) * C143) *
                                        C73) *
               C27517 * C591) *
              C1216 +
          ((((C404 * C1221 + C27518 * C1630) * C143 +
             (C404 * C1295 + C27518 * C1704) * C27303) *
                C73 +
            (C1711 + C1717) * C74) *
               C27517 * C591 -
           (((C404 * C1297 + C27518 * C1706) * C27303 +
             (C404 * C1223 + C27518 * C1632) * C143) *
                C74 +
            (C1717 + C1711) * C73) *
               C27517 * C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[2] +=
        (-std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C593 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C594 +
           (((C404 * C601 + C27518 * C1010) * C188 +
             (C404 * C739 + C27518 * C1151) * C27314) *
                C73 +
            (C1159 + C1165) * C74) *
               C27517 * C595) *
              C591 +
          (((C1158 + C1164) * C73 + ((C404 * C599 + C27518 * C1009) * C188 +
                                     (C404 * C741 + C27518 * C1153) * C27314) *
                                        C74) *
               C27517 * C594 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C593 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C74 +
            (C1165 + C1159) * C73) *
               C27517 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C73 +
           (C527 + C539) * C74) *
              C27517 * C27303 * C75 -
          ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C27303 * C76 +
          ((C532 + C540) * C73 + (C533 + C541) * C74) * C27517 * C27303 * C77 -
          (((C404 * C193 + C27518 * C525) * C27314 +
            (C404 * C93 + C27518 * C409) * C188) *
               C74 +
           (C541 + C533) * C73) *
              C27517 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1354 +
            (C404 * C189 + C27518 * C521) * C1215 -
            (C404 * C1220 + C27518 * C1628) * C1355 -
            (C404 * C1358 + C27518 * C1767) * C1216 +
            (C404 * C1221 + C27518 * C1630) * C1356 +
            (C404 * C1359 + C27518 * C1768) * C1217) *
               C73 +
           (C1774 + C1775 - C1776 - C1784 + C1779 + C1785) * C74) *
              C27517 * C27303 * C591 +
          ((C1776 - (C1775 + C1774) + C1784 - C1779 - C1785) * C73 +
           ((C404 * C1219 + C27518 * C1629) * C1355 -
            (C537 * C1215 + C430 * C1354) +
            (C404 * C1361 + C27518 * C1771) * C1216 -
            (C404 * C1223 + C27518 * C1632) * C1356 -
            (C404 * C1362 + C27518 * C1772) * C1217) *
               C74) *
              C27517 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1840 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27505 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1841 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27506 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C1842 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C1837) *
              C27517 * C27518 * C27482 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C1841 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27505 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1840) +
           (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27506 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C1842 -
           (C84 * C2359 + C74 * C2360 + C83 * C1229 + C73 * C1238) * C1837) *
              C27517 * C27518 * C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eexy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
               C27517 * C27518 * C27505 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27517 * C27518 * C27506 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27303) *
               C27517 * C27518 * C1837) *
              C27482 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C143 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27303) *
               C27517 * C27518 * C27506 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
               C27517 * C27518 * C27505 -
           ((C84 * C2411 + C74 * C2412 + C83 * C1293 + C73 * C1299) * C27303 +
            (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C143) *
               C27517 * C27518 * C1837) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2463 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27482 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C2464 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C27303 * C27505 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C2464 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27482 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C2463) +
           (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C27506 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C2463 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27482 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C2464 -
           (C84 * C2465 + C74 * C2466 + C83 * C1361 + C73 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C1837)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C1840 +
                     (C233 * C96 + C27517 * C239) * C27505 - C257 * C1841 -
                     C258 * C27506 + C259 * C1842 + C260 * C1837) *
                        C27518 * C73 +
                    (C257 * C1840 + C258 * C27505 - C259 * C1841 -
                     C260 * C27506 + C261 * C1842 + C262 * C1837) *
                        C27518 * C74) *
                       C27482 +
                   ((C1440 * C1841 -
                     ((C233 * C1227 + C27517 * C1425) * C27505 +
                      (C233 * C1220 + C27517 * C1420) * C1840) +
                     C1441 * C27506 - C2524 * C1842 - C2525 * C1837) *
                        C27518 * C73 +
                    (C2524 * C1841 - (C1441 * C27505 + C1440 * C1840) +
                     C2525 * C27506 - (C233 * C2357 + C27517 * C2517) * C1842 -
                     (C233 * C2359 + C27517 * C2518) * C1837) *
                        C27518 * C74) *
                       C27378) *
                  C27303) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C27518 * C73 +
            (C302 + C314) * C27518 * C74) *
               C27505 -
           ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) *
               C27506 +
           ((C307 + C315) * C27518 * C73 + (C308 + C316) * C27518 * C74) *
               C1837) *
              C27482 +
          (((C1500 + C1508) * C27518 * C73 + (C2577 + C2581) * C27518 * C74) *
               C27506 -
           ((C1508 + C1500) * C27518 * C74 +
            ((C233 * C1294 + C27517 * C1495) * C27303 +
             (C233 * C1220 + C27517 * C1420) * C143) *
                C27518 * C73) *
               C27505 -
           (((C233 * C2411 + C27517 * C2575) * C27303 +
             (C233 * C2357 + C27517 * C2517) * C143) *
                C27518 * C74 +
            (C2581 + C2577) * C27518 * C73) *
               C1837) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C2463 +
                     (C233 * C189 + C27517 * C350) * C27482 -
                     (C233 * C1220 + C27517 * C1420) * C2464 -
                     (C233 * C1358 + C27517 * C1559) * C27378) *
                        C27518 * C73 +
                    (C2633 + C2634 - C2635 - C2636) * C27518 * C74) *
                       C27303 * C27505 +
                   ((C2635 - (C2634 + C2633) + C2636) * C27518 * C73 +
                    (C2637 - (C2638 + C2639) + C2643) * C27518 * C74) *
                       C27303 * C27506 +
                   ((C2639 + C2638 - C2637 - C2643) * C27518 * C73 +
                    (C261 * C2463 + C367 * C27482 -
                     (C233 * C2357 + C27517 * C2517) * C2464 -
                     (C233 * C2465 + C27517 * C2631) * C27378) *
                        C27518 * C74) *
                       C27303 * C1837)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C1840 +
                     (C404 * C96 + C27518 * C410) * C27505 - C428 * C1841 -
                     C429 * C27506 + C430 * C1842 + C431 * C1837) *
                        C73 +
                    (C428 * C1840 + C429 * C27505 - C430 * C1841 -
                     C431 * C27506 + C432 * C1842 + C433 * C1837) *
                        C74) *
                       C27517 * C27482 +
                   ((C1648 * C1841 -
                     ((C404 * C1227 + C27518 * C1633) * C27505 +
                      (C404 * C1220 + C27518 * C1628) * C1840) +
                     C1649 * C27506 - C2700 * C1842 - C2701 * C1837) *
                        C73 +
                    (C2700 * C1841 - (C1649 * C27505 + C1648 * C1840) +
                     C2701 * C27506 - (C404 * C2357 + C27518 * C2693) * C1842 -
                     (C404 * C2359 + C27518 * C2694) * C1837) *
                        C74) *
                       C27517 * C27378) *
                  C27303) /
                 (p * q * std::sqrt(p + q));
    d2eezy[3] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C73 +
            (C473 + C485) * C74) *
               C27517 * C27505 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C27506 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27517 * C1837) *
              C27482 +
          (((C1708 + C1716) * C73 + (C2753 + C2757) * C74) * C27517 * C27506 -
           ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                     (C404 * C1220 + C27518 * C1628) * C143) *
                                        C73) *
               C27517 * C27505 -
           (((C404 * C2411 + C27518 * C2751) * C27303 +
             (C404 * C2357 + C27518 * C2693) * C143) *
                C74 +
            (C2757 + C2753) * C73) *
               C27517 * C1837) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[3] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C2463 +
                     (C404 * C189 + C27518 * C521) * C27482 -
                     (C404 * C1220 + C27518 * C1628) * C2464 -
                     (C404 * C1358 + C27518 * C1767) * C27378) *
                        C73 +
                    (C2809 + C2810 - C2811 - C2812) * C74) *
                       C27517 * C27303 * C27505 +
                   ((C2811 - (C2810 + C2809) + C2812) * C73 +
                    (C2813 - (C2814 + C2815) + C2819) * C74) *
                       C27517 * C27303 * C27506 +
                   ((C2815 + C2814 - C2813 - C2819) * C73 +
                    (C432 * C2463 + C538 * C27482 -
                     (C404 * C2357 + C27518 * C2693) * C2464 -
                     (C404 * C2465 + C27518 * C2807) * C27378) *
                        C74) *
                       C27517 * C27303 * C1837)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C85 +
          (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C75 -
          (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C86 -
          (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C76 +
          (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C87 +
          (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C77 -
          (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C88 -
          (C84 * C103 + C74 * C108 + C83 * C101 + C73 * C107) * C78) *
         C27517 * C27518 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C596 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C591 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C597 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
              C27517 * C27518 * C27314 * C593 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C597 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C591 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C596) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
              C27517 * C27518 * C27314 * C594 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C596 +
           (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C591 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C597 -
           (C84 * C615 + C74 * C621 + C83 * C613 + C73 * C620) * C27280) *
              C27517 * C27518 * C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eexy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
              C27517 * C27518 * C75 -
          ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
              C27517 * C27518 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27303) *
              C27517 * C27518 * C77 -
          ((C84 * C148 + C74 * C153 + C83 * C147 + C73 * C152) * C27303 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C143) *
              C27517 * C27518 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C672 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C593 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C673 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C594 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C674 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C595) *
              C27517 * C27518 * C591 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C673 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C593 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C672) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C594 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C674 -
           (C84 * C680 + C74 * C686 + C83 * C678 + C73 * C684) * C595) *
              C27517 * C27518 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eexz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
              C27517 * C27518 * C27303 * C75 -
          ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
              C27517 * C27518 * C27303 * C76 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27314) *
              C27517 * C27518 * C27303 * C77 -
          ((C84 * C193 + C74 * C198 + C83 * C192 + C73 * C197) * C27314 +
           (C84 * C93 + C74 * C102 + C83 * C92 + C73 * C100) * C188) *
              C27517 * C27518 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C593 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C594 +
           ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C188 +
            (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27314) *
               C27517 * C27518 * C595) *
              C591 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C594 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C593 -
           ((C84 * C742 + C74 * C748 + C83 * C740 + C73 * C746) * C27314 +
            (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C188) *
               C27517 * C27518 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C85 +
           (C233 * C96 + C27517 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C27518 * C73 +
          (C257 * C85 + C258 * C75 - C259 * C86 - C260 * C76 + C261 * C87 +
           C262 * C77 - (C233 * C93 + C27517 * C238) * C88 -
           (C233 * C103 + C27517 * C243) * C78) *
              C27518 * C74) *
         C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C27518 * C73 +
           (C257 * C596 + C258 * C591 - C259 * C597 - C260 * C27280) * C27518 *
               C74) *
              C27314 * C593 +
          ((C820 * C597 -
            ((C233 * C607 + C27517 * C805) * C591 +
             (C233 * C600 + C27517 * C800) * C596) +
            C821 * C27280) *
               C27518 * C73 +
           ((C233 * C599 + C27517 * C801) * C597 - (C821 * C591 + C820 * C596) +
            (C233 * C609 + C27517 * C807) * C27280) *
               C27518 * C74) *
              C27314 * C594 +
          (((C233 * C601 + C27517 * C802) * C596 +
            (C233 * C612 + C27517 * C808) * C591 - C822 * C597 -
            C823 * C27280) *
               C27518 * C73 +
           (C822 * C596 + C823 * C591 - (C233 * C603 + C27517 * C804) * C597 -
            (C233 * C615 + C27517 * C810) * C27280) *
               C27518 * C74) *
              C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C27518 * C73 +
           (C302 + C314) * C27518 * C74) *
              C75 -
          ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) * C76 +
          ((C307 + C315) * C27518 * C73 + (C308 + C316) * C27518 * C74) * C77 -
          (((C233 * C148 + C27517 * C300) * C27303 +
            (C233 * C93 + C27517 * C238) * C143) *
               C27518 * C74 +
           (C316 + C308) * C27518 * C73) *
              C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C27518 * C73 +
           (C880 + C881 - C882 - C890 + C885 + C891) * C27518 * C74) *
              C591 +
          ((C882 - (C881 + C880) + C890 - C885 - C891) * C27518 * C73 +
           ((C233 * C599 + C27517 * C801) * C673 - (C312 * C593 + C259 * C672) +
            (C233 * C679 + C27517 * C877) * C594 -
            (C233 * C603 + C27517 * C804) * C674 -
            (C233 * C680 + C27517 * C878) * C595) *
               C27518 * C74) *
              C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eeyz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C27518 * C73 +
           (C356 + C368) * C27518 * C74) *
              C27303 * C75 -
          ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
              C27303 * C76 +
          ((C361 + C369) * C27518 * C73 + (C362 + C370) * C27518 * C74) *
              C27303 * C77 -
          (((C233 * C193 + C27517 * C354) * C27314 +
            (C233 * C93 + C27517 * C238) * C188) *
               C27518 * C74 +
           (C370 + C362) * C27518 * C73) *
              C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C593 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C594 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C27518 * C73 +
            (C951 + C957) * C27518 * C74) *
               C595) *
              C591 +
          (((C950 + C956) * C27518 * C73 +
            ((C233 * C599 + C27517 * C801) * C188 +
             (C233 * C741 + C27517 * C945) * C27314) *
                C27518 * C74) *
               C594 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C593 -
           (((C233 * C742 + C27517 * C946) * C27314 +
             (C233 * C603 + C27517 * C804) * C188) *
                C27518 * C74 +
            (C957 + C951) * C27518 * C73) *
               C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C85 +
           (C404 * C96 + C27518 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C73 +
          (C428 * C85 + C429 * C75 - C430 * C86 - C431 * C76 + C432 * C87 +
           C433 * C77 - (C404 * C93 + C27518 * C409) * C88 -
           (C404 * C103 + C27518 * C414) * C78) *
              C74) *
         C27517 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C73 +
           (C428 * C596 + C429 * C591 - C430 * C597 - C431 * C27280) * C74) *
              C27517 * C27314 * C593 +
          ((C1028 * C597 -
            ((C404 * C607 + C27518 * C1013) * C591 +
             (C404 * C600 + C27518 * C1008) * C596) +
            C1029 * C27280) *
               C73 +
           ((C404 * C599 + C27518 * C1009) * C597 -
            (C1029 * C591 + C1028 * C596) +
            (C404 * C609 + C27518 * C1015) * C27280) *
               C74) *
              C27517 * C27314 * C594 +
          (((C404 * C601 + C27518 * C1010) * C596 +
            (C404 * C612 + C27518 * C1016) * C591 - C1030 * C597 -
            C1031 * C27280) *
               C73 +
           (C1030 * C596 + C1031 * C591 -
            (C404 * C603 + C27518 * C1012) * C597 -
            (C404 * C615 + C27518 * C1018) * C27280) *
               C74) *
              C27517 * C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eezy[4] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C143 +
                     (C404 * C144 + C27518 * C467) * C27303) *
                        C73 +
                    (C473 + C485) * C74) *
                       C27517 * C75 -
                   ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C76 +
                   ((C478 + C486) * C73 + (C479 + C487) * C74) * C27517 * C77 -
                   (((C404 * C148 + C27518 * C471) * C27303 +
                     (C404 * C93 + C27518 * C409) * C143) *
                        C74 +
                    (C487 + C479) * C73) *
                       C27517 * C78) *
                  C27314) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C672 +
                     (C404 * C144 + C27518 * C467) * C593 -
                     (C404 * C600 + C27518 * C1008) * C673 -
                     (C404 * C676 + C27518 * C1081) * C594 +
                     (C404 * C601 + C27518 * C1010) * C674 +
                     (C404 * C677 + C27518 * C1082) * C595) *
                        C73 +
                    (C1088 + C1089 - C1090 - C1098 + C1093 + C1099) * C74) *
                       C27517 * C591 +
                   ((C1090 - (C1089 + C1088) + C1098 - C1093 - C1099) * C73 +
                    ((C404 * C599 + C27518 * C1009) * C673 -
                     (C483 * C593 + C430 * C672) +
                     (C404 * C679 + C27518 * C1085) * C594 -
                     (C404 * C603 + C27518 * C1012) * C674 -
                     (C404 * C680 + C27518 * C1086) * C595) *
                        C74) *
                       C27517 * C27280) *
                  C27314) /
                     (p * q * std::sqrt(p + q));
    d2eezz[4] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C73 +
           (C527 + C539) * C74) *
              C27517 * C27303 * C75 -
          ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C27303 * C76 +
          ((C532 + C540) * C73 + (C533 + C541) * C74) * C27517 * C27303 * C77 -
          (((C404 * C193 + C27518 * C525) * C27314 +
            (C404 * C93 + C27518 * C409) * C188) *
               C74 +
           (C541 + C533) * C73) *
              C27517 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C593 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C594 +
           (((C404 * C601 + C27518 * C1010) * C188 +
             (C404 * C739 + C27518 * C1151) * C27314) *
                C73 +
            (C1159 + C1165) * C74) *
               C27517 * C595) *
              C591 +
          (((C1158 + C1164) * C73 + ((C404 * C599 + C27518 * C1009) * C188 +
                                     (C404 * C741 + C27518 * C1153) * C27314) *
                                        C74) *
               C27517 * C594 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C593 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C74 +
            (C1165 + C1159) * C73) *
               C27517 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27471 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
              C27517 * C27518 * C27314 * C27509 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C26156 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27471 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C26163) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
              C27517 * C27518 * C27314 * C27510 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C26163 +
           (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27471 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C26156 -
           (C84 * C615 + C74 * C621 + C83 * C613 + C73 * C620) * C27280) *
              C27517 * C27518 * C27314 * C4861)) /
        (p * q * std::sqrt(p + q));
    d2eexy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4914 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27509 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4915 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27510 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4916 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C4861) *
              C27517 * C27518 * C27471 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C4915 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27509 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C4914) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27510 -
           (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C4916 -
           (C84 * C680 + C74 * C686 + C83 * C678 + C73 * C684) * C4861) *
              C27517 * C27518 * C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eexz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C27509 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C27510 +
           ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C188 +
            (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27314) *
               C27517 * C27518 * C4861) *
              C27471 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C27510 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C27509 -
           ((C84 * C742 + C74 * C748 + C83 * C740 + C73 * C746) * C27314 +
            (C84 * C603 + C74 * C614 + C83 * C602 + C73 * C611) * C188) *
               C27517 * C27518 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C26163 +
            (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
            C258 * C27280) *
               C27518 * C73 +
           (C257 * C26163 + C258 * C27471 - C259 * C26156 - C260 * C27280) *
               C27518 * C74) *
              C27314 * C27509 +
          ((C820 * C26156 -
            ((C233 * C607 + C27517 * C805) * C27471 +
             (C233 * C600 + C27517 * C800) * C26163) +
            C821 * C27280) *
               C27518 * C73 +
           (C2010 * C26156 - (C821 * C27471 + C820 * C26163) + C2011 * C27280) *
               C27518 * C74) *
              C27314 * C27510 +
          (((C233 * C601 + C27517 * C802) * C26163 +
            (C233 * C612 + C27517 * C808) * C27471 - C822 * C26156 -
            C823 * C27280) *
               C27518 * C73 +
           (C822 * C26163 + C823 * C27471 -
            (C233 * C603 + C27517 * C804) * C26156 -
            (C233 * C615 + C27517 * C810) * C27280) *
               C27518 * C74) *
              C27314 * C4861)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C4914 +
            (C233 * C144 + C27517 * C296) * C27509 -
            (C233 * C600 + C27517 * C800) * C4915 -
            (C233 * C676 + C27517 * C873) * C27510 +
            (C233 * C601 + C27517 * C802) * C4916 +
            (C233 * C677 + C27517 * C874) * C4861) *
               C27518 * C73 +
           (C5068 + C5069 - C5070 - C5071 + C5072 + C5073) * C27518 * C74) *
              C27471 +
          ((C5070 - (C5069 + C5068) + C5071 - C5072 - C5073) * C27518 * C73 +
           (C2010 * C4915 - (C312 * C27509 + C259 * C4914) + C2072 * C27510 -
            (C233 * C603 + C27517 * C804) * C4916 -
            (C233 * C680 + C27517 * C878) * C4861) *
               C27518 * C74) *
              C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eeyz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C27509 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C27510 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C27518 * C73 +
            (C951 + C957) * C27518 * C74) *
               C4861) *
              C27471 +
          (((C950 + C956) * C27518 * C73 + (C2125 + C2129) * C27518 * C74) *
               C27510 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C27509 -
           (((C233 * C742 + C27517 * C946) * C27314 +
             (C233 * C603 + C27517 * C804) * C188) *
                C27518 * C74 +
            (C957 + C951) * C27518 * C73) *
               C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C26163 +
            (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
            C429 * C27280) *
               C73 +
           (C428 * C26163 + C429 * C27471 - C430 * C26156 - C431 * C27280) *
               C74) *
              C27517 * C27314 * C27509 +
          ((C1028 * C26156 -
            ((C404 * C607 + C27518 * C1013) * C27471 +
             (C404 * C600 + C27518 * C1008) * C26163) +
            C1029 * C27280) *
               C73 +
           (C2186 * C26156 - (C1029 * C27471 + C1028 * C26163) +
            C2187 * C27280) *
               C74) *
              C27517 * C27314 * C27510 +
          (((C404 * C601 + C27518 * C1010) * C26163 +
            (C404 * C612 + C27518 * C1016) * C27471 - C1030 * C26156 -
            C1031 * C27280) *
               C73 +
           (C1030 * C26163 + C1031 * C27471 -
            (C404 * C603 + C27518 * C1012) * C26156 -
            (C404 * C615 + C27518 * C1018) * C27280) *
               C74) *
              C27517 * C27314 * C4861)) /
        (p * q * std::sqrt(p + q));
    d2eezy[5] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C4914 +
                     (C404 * C144 + C27518 * C467) * C27509 -
                     (C404 * C600 + C27518 * C1008) * C4915 -
                     (C404 * C676 + C27518 * C1081) * C27510 +
                     (C404 * C601 + C27518 * C1010) * C4916 +
                     (C404 * C677 + C27518 * C1082) * C4861) *
                        C73 +
                    (C5224 + C5225 - C5226 - C5227 + C5228 + C5229) * C74) *
                       C27517 * C27471 +
                   ((C5226 - (C5225 + C5224) + C5227 - C5228 - C5229) * C73 +
                    (C2186 * C4915 - (C483 * C27509 + C430 * C4914) +
                     C2248 * C27510 - (C404 * C603 + C27518 * C1012) * C4916 -
                     (C404 * C680 + C27518 * C1086) * C4861) *
                        C74) *
                       C27517 * C27280) *
                  C27314) /
                 (p * q * std::sqrt(p + q));
    d2eezz[5] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C27509 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C27510 +
           (((C404 * C601 + C27518 * C1010) * C188 +
             (C404 * C739 + C27518 * C1151) * C27314) *
                C73 +
            (C1159 + C1165) * C74) *
               C27517 * C4861) *
              C27471 +
          (((C1158 + C1164) * C73 + (C2301 + C2305) * C74) * C27517 * C27510 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C27509 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C74 +
            (C1165 + C1159) * C73) *
               C27517 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
               C27517 * C27518 * C27482 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
               C27517 * C27518 * C27378) *
              C27509 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4016 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27275) *
               C27517 * C27518 * C27378 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
               C27517 * C27518 * C27482) *
              C27510 +
          (((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4016 +
            (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27275) *
               C27517 * C27518 * C27482 -
           ((C84 * C5933 + C74 * C5937 + C83 * C5934 + C73 * C5938) * C27275 +
            (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C4016) *
               C27517 * C27518 * C27378) *
              C4861)) /
        (p * q * std::sqrt(p + q));
    d2eexy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4914 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27509 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4915 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27510 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4916 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C4861) *
              C27517 * C27518 * C27275 * C27482 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4915 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27509 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4914) +
           (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27510 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C4916 -
           (C84 * C5989 + C74 * C5991 + C83 * C5990 + C73 * C5992) * C4861) *
              C27517 * C27518 * C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2463 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27482 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C2464 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C27509 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C2464 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27482 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C2463) +
           (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
              C27517 * C27518 * C27510 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C2463 +
           (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27482 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C2464 -
           (C84 * C6043 + C74 * C6045 + C83 * C6044 + C73 * C6046) * C27378) *
              C27517 * C27518 * C4861) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eeyx[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27517 * C234) * C4016 +
                      (C233 * C96 + C27517 * C239) * C27275) *
                         C27518 * C73 +
                     (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                        C27482 -
                    ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
                     ((C233 * C1227 + C27517 * C1425) * C27275 +
                      (C233 * C1220 + C27517 * C1420) * C4016) *
                         C27518 * C73) *
                        C27378) *
                       C27509 +
                   ((((C233 * C2885 + C27517 * C3107) * C4016 +
                      (C233 * C2890 + C27517 * C3110) * C27275) *
                         C27518 * C73 +
                     (C3118 * C4016 + C3119 * C27275) * C27518 * C74) *
                        C27378 -
                    ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                     ((C233 * C607 + C27517 * C805) * C27275 +
                      (C233 * C600 + C27517 * C800) * C4016) *
                         C27518 * C73) *
                        C27482) *
                       C27510 +
                   ((((C233 * C601 + C27517 * C802) * C4016 +
                      (C233 * C612 + C27517 * C808) * C27275) *
                         C27518 * C73 +
                     (C822 * C4016 + C823 * C27275) * C27518 * C74) *
                        C27482 -
                    (((C233 * C5933 + C27517 * C6099) * C27275 +
                      (C233 * C5931 + C27517 * C6097) * C4016) *
                         C27518 * C74 +
                     ((C233 * C5934 + C27517 * C6100) * C27275 +
                      (C233 * C5932 + C27517 * C6098) * C4016) *
                         C27518 * C73) *
                        C27378) *
                       C4861)) /
                 (p * q * std::sqrt(p + q));
    d2eeyy[6] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C4914 +
            (C233 * C144 + C27517 * C296) * C27509 -
            (C233 * C600 + C27517 * C800) * C4915 -
            (C233 * C676 + C27517 * C873) * C27510 +
            (C233 * C601 + C27517 * C802) * C4916 +
            (C233 * C677 + C27517 * C874) * C4861) *
               C27518 * C73 +
           (C5068 + C5069 - C5070 - C5071 + C5072 + C5073) * C27518 * C74) *
              C27275 * C27482 +
          (((C233 * C2885 + C27517 * C3107) * C4915 -
            ((C233 * C1294 + C27517 * C1495) * C27509 +
             (C233 * C1220 + C27517 * C1420) * C4914) +
            (C233 * C2963 + C27517 * C3185) * C27510 -
            (C233 * C5932 + C27517 * C6098) * C4916 -
            (C233 * C5990 + C27517 * C6151) * C4861) *
               C27518 * C73 +
           (C3118 * C4915 - (C1506 * C27509 + C1440 * C4914) + C3194 * C27510 -
            (C233 * C5931 + C27517 * C6097) * C4916 -
            (C233 * C5989 + C27517 * C6152) * C4861) *
               C27518 * C74) *
              C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C2463 +
                     (C233 * C189 + C27517 * C350) * C27482 -
                     (C233 * C1220 + C27517 * C1420) * C2464 -
                     (C233 * C1358 + C27517 * C1559) * C27378) *
                        C27518 * C73 +
                    (C2633 + C2634 - C2635 - C2636) * C27518 * C74) *
                       C27509 +
                   (((C233 * C2885 + C27517 * C3107) * C2464 -
                     ((C233 * C738 + C27517 * C942) * C27482 +
                      (C233 * C600 + C27517 * C800) * C2463) +
                     (C233 * C3035 + C27517 * C3261) * C27378) *
                        C27518 * C73 +
                    (C3265 - (C3266 + C3267) + C3271) * C27518 * C74) *
                       C27510 +
                   (((C233 * C601 + C27517 * C802) * C2463 +
                     (C233 * C739 + C27517 * C943) * C27482 -
                     (C233 * C5932 + C27517 * C6098) * C2464 -
                     (C233 * C6044 + C27517 * C6203) * C27378) *
                        C27518 * C73 +
                    (C822 * C2463 + C955 * C27482 -
                     (C233 * C5931 + C27517 * C6097) * C2464 -
                     (C233 * C6043 + C27517 * C6204) * C27378) *
                        C27518 * C74) *
                       C4861) *
                  C27275) /
                 (p * q * std::sqrt(p + q));
    d2eezx[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27518 * C405) * C4016 +
                      (C404 * C96 + C27518 * C410) * C27275) *
                         C73 +
                     (C428 * C4016 + C429 * C27275) * C74) *
                        C27517 * C27482 -
                    ((C1649 * C27275 + C1648 * C4016) * C74 +
                     ((C404 * C1227 + C27518 * C1633) * C27275 +
                      (C404 * C1220 + C27518 * C1628) * C4016) *
                         C73) *
                        C27517 * C27378) *
                       C27509 +
                   ((((C404 * C2885 + C27518 * C3337) * C4016 +
                      (C404 * C2890 + C27518 * C3340) * C27275) *
                         C73 +
                     (C3348 * C4016 + C3349 * C27275) * C74) *
                        C27517 * C27378 -
                    ((C1029 * C27275 + C1028 * C4016) * C74 +
                     ((C404 * C607 + C27518 * C1013) * C27275 +
                      (C404 * C600 + C27518 * C1008) * C4016) *
                         C73) *
                        C27517 * C27482) *
                       C27510 +
                   ((((C404 * C601 + C27518 * C1010) * C4016 +
                      (C404 * C612 + C27518 * C1016) * C27275) *
                         C73 +
                     (C1030 * C4016 + C1031 * C27275) * C74) *
                        C27517 * C27482 -
                    (((C404 * C5933 + C27518 * C6257) * C27275 +
                      (C404 * C5931 + C27518 * C6255) * C4016) *
                         C74 +
                     ((C404 * C5934 + C27518 * C6258) * C27275 +
                      (C404 * C5932 + C27518 * C6256) * C4016) *
                         C73) *
                        C27517 * C27378) *
                       C4861)) /
                 (p * q * std::sqrt(p + q));
    d2eezy[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C4914 +
                     (C404 * C144 + C27518 * C467) * C27509 -
                     (C404 * C600 + C27518 * C1008) * C4915 -
                     (C404 * C676 + C27518 * C1081) * C27510 +
                     (C404 * C601 + C27518 * C1010) * C4916 +
                     (C404 * C677 + C27518 * C1082) * C4861) *
                        C73 +
                    (C5224 + C5225 - C5226 - C5227 + C5228 + C5229) * C74) *
                       C27517 * C27275 * C27482 +
                   (((C404 * C2885 + C27518 * C3337) * C4915 -
                     ((C404 * C1294 + C27518 * C1703) * C27509 +
                      (C404 * C1220 + C27518 * C1628) * C4914) +
                     (C404 * C2963 + C27518 * C3415) * C27510 -
                     (C404 * C5932 + C27518 * C6256) * C4916 -
                     (C404 * C5990 + C27518 * C6309) * C4861) *
                        C73 +
                    (C3348 * C4915 - (C1714 * C27509 + C1648 * C4914) +
                     C3424 * C27510 - (C404 * C5931 + C27518 * C6255) * C4916 -
                     (C404 * C5989 + C27518 * C6310) * C4861) *
                        C74) *
                       C27517 * C27275 * C27378)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[6] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C2463 +
                     (C404 * C189 + C27518 * C521) * C27482 -
                     (C404 * C1220 + C27518 * C1628) * C2464 -
                     (C404 * C1358 + C27518 * C1767) * C27378) *
                        C73 +
                    (C2809 + C2810 - C2811 - C2812) * C74) *
                       C27517 * C27509 +
                   (((C404 * C2885 + C27518 * C3337) * C2464 -
                     ((C404 * C738 + C27518 * C1150) * C27482 +
                      (C404 * C600 + C27518 * C1008) * C2463) +
                     (C404 * C3035 + C27518 * C3491) * C27378) *
                        C73 +
                    (C3495 - (C3496 + C3497) + C3501) * C74) *
                       C27517 * C27510 +
                   (((C404 * C601 + C27518 * C1010) * C2463 +
                     (C404 * C739 + C27518 * C1151) * C27482 -
                     (C404 * C5932 + C27518 * C6256) * C2464 -
                     (C404 * C6044 + C27518 * C6361) * C27378) *
                        C73 +
                    (C1030 * C2463 + C1163 * C27482 -
                     (C404 * C5931 + C27518 * C6255) * C2464 -
                     (C404 * C6043 + C27518 * C6362) * C27378) *
                        C74) *
                       C27517 * C4861) *
                  C27275) /
                 (p * q * std::sqrt(p + q));
    d2eexx[7] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
              C27517 * C27518 * C27314 * C4012 -
          ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
              C27517 * C27518 * C27314 * C4013 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4016 +
           (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27275) *
              C27517 * C27518 * C27314 * C4014 -
          ((C84 * C4019 + C74 * C4023 + C83 * C4020 + C73 * C4024) * C27275 +
           (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C4016) *
              C27517 * C27518 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3556 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C3551 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3557 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C3552 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3558 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C3553) *
              C27517 * C27518 * C27314 * C3554 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C3557 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C3551 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3556) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C3552 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C3558 -
           (C84 * C1845 + C74 * C1846 + C83 * C609 + C73 * C618) * C3553) *
              C27517 * C27518 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
               C27517 * C27518 * C1215 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
               C27517 * C27518 * C1216 +
           ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C4016 +
            (C83 * C1232 + C73 * C1239 + C84 * C1233 + C74 * C1240) * C27275) *
               C27517 * C27518 * C1217) *
              C3554 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4016 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27275) *
               C27517 * C27518 * C1216 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
               C27517 * C27518 * C1215 -
           ((C84 * C4377 + C74 * C4381 + C83 * C4378 + C73 * C4382) * C27275 +
            (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C4016) *
               C27517 * C27518 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eexy[7] +=
        (-std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4059 +
          (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4012 -
          (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4060 -
          (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C4013 +
          (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4061 +
          (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C4014 -
          (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C4062 -
          (C84 * C4063 + C74 * C4065 + C83 * C4064 + C73 * C4066) * C4015) *
         C27517 * C27518 * C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3609 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C3554 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3610 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
              C27517 * C27518 * C3551 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C3610 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C3554 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3609) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
              C27517 * C27518 * C3552 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3609 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C3554 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C3610 -
           (C84 * C1899 + C74 * C1900 + C83 * C679 + C73 * C685) * C27352) *
              C27517 * C27518 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3609 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C3554 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3610 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
              C27517 * C27518 * C27275 * C1215 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C3610 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C3554 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C3609) +
           (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27352) *
              C27517 * C27518 * C27275 * C1216 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C3609 +
           (C83 * C1295 + C73 * C1301 + C84 * C1296 + C74 * C1302) * C3554 -
           (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C3610 -
           (C84 * C4433 + C74 * C4435 + C83 * C4434 + C73 * C4436) * C27352) *
              C27517 * C27518 * C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eexz[7] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
              C27517 * C27518 * C4012 -
          ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
              C27517 * C27518 * C4013 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C188 +
           (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27314) *
              C27517 * C27518 * C4014 -
          ((C84 * C4101 + C74 * C4103 + C83 * C4102 + C73 * C4104) * C27314 +
           (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C188) *
              C27517 * C27518 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C3554 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C27352) *
              C3551 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C27352 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C3554) *
              C3552 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27314) *
               C27517 * C27518 * C3554 -
           ((C84 * C1951 + C74 * C1952 + C83 * C741 + C73 * C747) * C27314 +
            (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C188) *
               C27517 * C27518 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1354 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C1215 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1355 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C1216 +
           (C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C1356 +
           (C83 * C1359 + C73 * C1365 + C84 * C1360 + C74 * C1366) * C1217) *
              C27517 * C27518 * C3554 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C1355 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C1215 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1354) +
           (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C1216 -
           (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C1356 -
           (C84 * C4487 + C74 * C4489 + C83 * C4488 + C73 * C4490) * C1217) *
              C27517 * C27518 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[7] +=
        (-std::pow(Pi, 2.5) * ((((C233 * C89 + C27517 * C234) * C4016 +
                                 (C233 * C96 + C27517 * C239) * C27275) *
                                    C27518 * C73 +
                                (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                                   C27314 * C4012 -
                               ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                                ((C233 * C607 + C27517 * C805) * C27275 +
                                 (C233 * C600 + C27517 * C800) * C4016) *
                                    C27518 * C73) *
                                   C27314 * C4013 +
                               (((C233 * C601 + C27517 * C802) * C4016 +
                                 (C233 * C612 + C27517 * C808) * C27275) *
                                    C27518 * C73 +
                                (C822 * C4016 + C823 * C27275) * C27518 * C74) *
                                   C27314 * C4014 -
                               (((C233 * C4019 + C27517 * C4141) * C27275 +
                                 (C233 * C4017 + C27517 * C4139) * C4016) *
                                    C27518 * C74 +
                                ((C233 * C4020 + C27517 * C4142) * C27275 +
                                 (C233 * C4018 + C27517 * C4140) * C4016) *
                                    C27518 * C73) *
                                   C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3556 +
            (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 - C258 * C3552 +
            C259 * C3558 + C260 * C3553) *
               C27518 * C73 +
           (C257 * C3556 + C258 * C3551 - C259 * C3557 - C260 * C3552 +
            C261 * C3558 + C262 * C3553) *
               C27518 * C74) *
              C27314 * C3554 +
          ((C820 * C3557 -
            ((C233 * C607 + C27517 * C805) * C3551 +
             (C233 * C600 + C27517 * C800) * C3556) +
            C821 * C3552 - C2010 * C3558 - C2011 * C3553) *
               C27518 * C73 +
           (C2010 * C3557 - (C821 * C3551 + C820 * C3556) + C2011 * C3552 -
            (C233 * C1843 + C27517 * C2003) * C3558 -
            (C233 * C1845 + C27517 * C2004) * C3553) *
               C27518 * C74) *
              C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C4016 +
             (C233 * C96 + C27517 * C239) * C27275) *
                C27518 * C73 +
            (C257 * C4016 + C258 * C27275) * C27518 * C74) *
               C1215 -
           ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
            ((C233 * C1227 + C27517 * C1425) * C27275 +
             (C233 * C1220 + C27517 * C1420) * C4016) *
                C27518 * C73) *
               C1216 +
           (((C233 * C1221 + C27517 * C1422) * C4016 +
             (C233 * C1232 + C27517 * C1428) * C27275) *
                C27518 * C73 +
            (C1442 * C4016 + C1443 * C27275) * C27518 * C74) *
               C1217) *
              C3554 +
          ((((C233 * C2885 + C27517 * C3107) * C4016 +
             (C233 * C2890 + C27517 * C3110) * C27275) *
                C27518 * C73 +
            (C3118 * C4016 + C3119 * C27275) * C27518 * C74) *
               C1216 -
           ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
            ((C233 * C607 + C27517 * C805) * C27275 +
             (C233 * C600 + C27517 * C800) * C4016) *
                C27518 * C73) *
               C1215 -
           (((C233 * C4377 + C27517 * C4543) * C27275 +
             (C233 * C4375 + C27517 * C4541) * C4016) *
                C27518 * C74 +
            ((C233 * C4378 + C27517 * C4544) * C27275 +
             (C233 * C4376 + C27517 * C4542) * C4016) *
                C27518 * C73) *
               C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C4059 +
           (C233 * C144 + C27517 * C296) * C4012 -
           (C233 * C600 + C27517 * C800) * C4060 -
           (C233 * C676 + C27517 * C873) * C4013 +
           (C233 * C601 + C27517 * C802) * C4061 +
           (C233 * C677 + C27517 * C874) * C4014 -
           (C233 * C4018 + C27517 * C4140) * C4062 -
           (C233 * C4064 + C27517 * C4177) * C4015) *
              C27518 * C73 +
          (C257 * C4059 + C311 * C4012 - C820 * C4060 - C888 * C4013 +
           C822 * C4061 + C889 * C4014 -
           (C233 * C4017 + C27517 * C4139) * C4062 -
           (C233 * C4063 + C27517 * C4178) * C4015) *
              C27518 * C74) *
         C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3609 +
            (C233 * C144 + C27517 * C296) * C3554 -
            (C233 * C600 + C27517 * C800) * C3610 -
            (C233 * C676 + C27517 * C873) * C27352) *
               C27518 * C73 +
           (C3762 + C3763 - C3764 - C3765) * C27518 * C74) *
              C3551 +
          ((C3764 - (C3763 + C3762) + C3765) * C27518 * C73 +
           (C3766 - (C3767 + C3768) + C3769) * C27518 * C74) *
              C3552 +
          ((C3768 + C3767 - C3766 - C3769) * C27518 * C73 +
           (C261 * C3609 + C313 * C3554 -
            (C233 * C1843 + C27517 * C2003) * C3610 -
            (C233 * C1899 + C27517 * C2061) * C27352) *
               C27518 * C74) *
              C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3609 +
            (C233 * C144 + C27517 * C296) * C3554 -
            (C233 * C600 + C27517 * C800) * C3610 -
            (C233 * C676 + C27517 * C873) * C27352) *
               C27518 * C73 +
           (C3762 + C3763 - C3764 - C3765) * C27518 * C74) *
              C27275 * C1215 +
          (((C233 * C2885 + C27517 * C3107) * C3610 -
            ((C233 * C1294 + C27517 * C1495) * C3554 +
             (C233 * C1220 + C27517 * C1420) * C3609) +
            (C233 * C2963 + C27517 * C3185) * C27352) *
               C27518 * C73 +
           (C3118 * C3610 - (C1506 * C3554 + C1440 * C3609) + C3194 * C27352) *
               C27518 * C74) *
              C27275 * C1216 +
          (((C233 * C1221 + C27517 * C1422) * C3609 +
            (C233 * C1295 + C27517 * C1496) * C3554 -
            (C233 * C4376 + C27517 * C4542) * C3610 -
            (C233 * C4434 + C27517 * C4595) * C27352) *
               C27518 * C73 +
           (C1442 * C3609 + C1507 * C3554 -
            (C233 * C4375 + C27517 * C4541) * C3610 -
            (C233 * C4433 + C27517 * C4596) * C27352) *
               C27518 * C74) *
              C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C27518 * C73 +
           (C356 + C368) * C27518 * C74) *
              C4012 -
          ((C956 + C950) * C27518 * C74 +
           ((C233 * C738 + C27517 * C942) * C27314 +
            (C233 * C600 + C27517 * C800) * C188) *
               C27518 * C73) *
              C4013 +
          (((C233 * C601 + C27517 * C802) * C188 +
            (C233 * C739 + C27517 * C943) * C27314) *
               C27518 * C73 +
           (C951 + C957) * C27518 * C74) *
              C4014 -
          (((C233 * C4101 + C27517 * C4213) * C27314 +
            (C233 * C4017 + C27517 * C4139) * C188) *
               C27518 * C74 +
           ((C233 * C4102 + C27517 * C4214) * C27314 +
            (C233 * C4018 + C27517 * C4140) * C188) *
               C27518 * C73) *
              C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C3554 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C27352) *
              C3551 +
          (((C950 + C956) * C27518 * C73 + (C2125 + C2129) * C27518 * C74) *
               C27352 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C3554) *
              C3552 +
          (((C361 + C369) * C27518 * C73 + (C362 + C370) * C27518 * C74) *
               C3554 -
           (((C233 * C1951 + C27517 * C2123) * C27314 +
             (C233 * C1843 + C27517 * C2003) * C188) *
                C27518 * C74 +
            (C2129 + C2125) * C27518 * C73) *
               C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C1354 +
            (C233 * C189 + C27517 * C350) * C1215 -
            (C233 * C1220 + C27517 * C1420) * C1355 -
            (C233 * C1358 + C27517 * C1559) * C1216 +
            (C233 * C1221 + C27517 * C1422) * C1356 +
            (C233 * C1359 + C27517 * C1560) * C1217) *
               C27518 * C73 +
           (C1566 + C1567 - C1568 - C1576 + C1571 + C1577) * C27518 * C74) *
              C3554 +
          (((C233 * C2885 + C27517 * C3107) * C1355 -
            ((C233 * C738 + C27517 * C942) * C1215 +
             (C233 * C600 + C27517 * C800) * C1354) +
            (C233 * C3035 + C27517 * C3261) * C1216 -
            (C233 * C4376 + C27517 * C4542) * C1356 -
            (C233 * C4488 + C27517 * C4647) * C1217) *
               C27518 * C73 +
           (C3118 * C1355 - (C954 * C1215 + C820 * C1354) + C3270 * C1216 -
            (C233 * C4375 + C27517 * C4541) * C1356 -
            (C233 * C4487 + C27517 * C4648) * C1217) *
               C27518 * C74) *
              C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[7] +=
        (-std::pow(Pi, 2.5) * ((((C404 * C89 + C27518 * C405) * C4016 +
                                 (C404 * C96 + C27518 * C410) * C27275) *
                                    C73 +
                                (C428 * C4016 + C429 * C27275) * C74) *
                                   C27517 * C27314 * C4012 -
                               ((C1029 * C27275 + C1028 * C4016) * C74 +
                                ((C404 * C607 + C27518 * C1013) * C27275 +
                                 (C404 * C600 + C27518 * C1008) * C4016) *
                                    C73) *
                                   C27517 * C27314 * C4013 +
                               (((C404 * C601 + C27518 * C1010) * C4016 +
                                 (C404 * C612 + C27518 * C1016) * C27275) *
                                    C73 +
                                (C1030 * C4016 + C1031 * C27275) * C74) *
                                   C27517 * C27314 * C4014 -
                               (((C404 * C4019 + C27518 * C4251) * C27275 +
                                 (C404 * C4017 + C27518 * C4249) * C4016) *
                                    C74 +
                                ((C404 * C4020 + C27518 * C4252) * C27275 +
                                 (C404 * C4018 + C27518 * C4250) * C4016) *
                                    C73) *
                                   C27517 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3556 +
            (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 - C429 * C3552 +
            C430 * C3558 + C431 * C3553) *
               C73 +
           (C428 * C3556 + C429 * C3551 - C430 * C3557 - C431 * C3552 +
            C432 * C3558 + C433 * C3553) *
               C74) *
              C27517 * C27314 * C3554 +
          ((C1028 * C3557 -
            ((C404 * C607 + C27518 * C1013) * C3551 +
             (C404 * C600 + C27518 * C1008) * C3556) +
            C1029 * C3552 - C2186 * C3558 - C2187 * C3553) *
               C73 +
           (C2186 * C3557 - (C1029 * C3551 + C1028 * C3556) + C2187 * C3552 -
            (C404 * C1843 + C27518 * C2179) * C3558 -
            (C404 * C1845 + C27518 * C2180) * C3553) *
               C74) *
              C27517 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C4016 +
             (C404 * C96 + C27518 * C410) * C27275) *
                C73 +
            (C428 * C4016 + C429 * C27275) * C74) *
               C27517 * C1215 -
           ((C1649 * C27275 + C1648 * C4016) * C74 +
            ((C404 * C1227 + C27518 * C1633) * C27275 +
             (C404 * C1220 + C27518 * C1628) * C4016) *
                C73) *
               C27517 * C1216 +
           (((C404 * C1221 + C27518 * C1630) * C4016 +
             (C404 * C1232 + C27518 * C1636) * C27275) *
                C73 +
            (C1650 * C4016 + C1651 * C27275) * C74) *
               C27517 * C1217) *
              C3554 +
          ((((C404 * C2885 + C27518 * C3337) * C4016 +
             (C404 * C2890 + C27518 * C3340) * C27275) *
                C73 +
            (C3348 * C4016 + C3349 * C27275) * C74) *
               C27517 * C1216 -
           ((C1029 * C27275 + C1028 * C4016) * C74 +
            ((C404 * C607 + C27518 * C1013) * C27275 +
             (C404 * C600 + C27518 * C1008) * C4016) *
                C73) *
               C27517 * C1215 -
           (((C404 * C4377 + C27518 * C4701) * C27275 +
             (C404 * C4375 + C27518 * C4699) * C4016) *
                C74 +
            ((C404 * C4378 + C27518 * C4702) * C27275 +
             (C404 * C4376 + C27518 * C4700) * C4016) *
                C73) *
               C27517 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eezy[7] +=
        (-std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C4059 +
           (C404 * C144 + C27518 * C467) * C4012 -
           (C404 * C600 + C27518 * C1008) * C4060 -
           (C404 * C676 + C27518 * C1081) * C4013 +
           (C404 * C601 + C27518 * C1010) * C4061 +
           (C404 * C677 + C27518 * C1082) * C4014 -
           (C404 * C4018 + C27518 * C4250) * C4062 -
           (C404 * C4064 + C27518 * C4287) * C4015) *
              C73 +
          (C428 * C4059 + C482 * C4012 - C1028 * C4060 - C1096 * C4013 +
           C1030 * C4061 + C1097 * C4014 -
           (C404 * C4017 + C27518 * C4249) * C4062 -
           (C404 * C4063 + C27518 * C4288) * C4015) *
              C74) *
         C27517 * C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3609 +
            (C404 * C144 + C27518 * C467) * C3554 -
            (C404 * C600 + C27518 * C1008) * C3610 -
            (C404 * C676 + C27518 * C1081) * C27352) *
               C73 +
           (C3920 + C3921 - C3922 - C3923) * C74) *
              C27517 * C3551 +
          ((C3922 - (C3921 + C3920) + C3923) * C73 +
           (C3924 - (C3925 + C3926) + C3927) * C74) *
              C27517 * C3552 +
          ((C3926 + C3925 - C3924 - C3927) * C73 +
           (C432 * C3609 + C484 * C3554 -
            (C404 * C1843 + C27518 * C2179) * C3610 -
            (C404 * C1899 + C27518 * C2237) * C27352) *
               C74) *
              C27517 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3609 +
            (C404 * C144 + C27518 * C467) * C3554 -
            (C404 * C600 + C27518 * C1008) * C3610 -
            (C404 * C676 + C27518 * C1081) * C27352) *
               C73 +
           (C3920 + C3921 - C3922 - C3923) * C74) *
              C27517 * C27275 * C1215 +
          (((C404 * C2885 + C27518 * C3337) * C3610 -
            ((C404 * C1294 + C27518 * C1703) * C3554 +
             (C404 * C1220 + C27518 * C1628) * C3609) +
            (C404 * C2963 + C27518 * C3415) * C27352) *
               C73 +
           (C3348 * C3610 - (C1714 * C3554 + C1648 * C3609) + C3424 * C27352) *
               C74) *
              C27517 * C27275 * C1216 +
          (((C404 * C1221 + C27518 * C1630) * C3609 +
            (C404 * C1295 + C27518 * C1704) * C3554 -
            (C404 * C4376 + C27518 * C4700) * C3610 -
            (C404 * C4434 + C27518 * C4753) * C27352) *
               C73 +
           (C1650 * C3609 + C1715 * C3554 -
            (C404 * C4375 + C27518 * C4699) * C3610 -
            (C404 * C4433 + C27518 * C4754) * C27352) *
               C74) *
              C27517 * C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[7] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C73 +
           (C527 + C539) * C74) *
              C27517 * C4012 -
          ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                    (C404 * C600 + C27518 * C1008) * C188) *
                                       C73) *
              C27517 * C4013 +
          (((C404 * C601 + C27518 * C1010) * C188 +
            (C404 * C739 + C27518 * C1151) * C27314) *
               C73 +
           (C1159 + C1165) * C74) *
              C27517 * C4014 -
          (((C404 * C4101 + C27518 * C4323) * C27314 +
            (C404 * C4017 + C27518 * C4249) * C188) *
               C74 +
           ((C404 * C4102 + C27518 * C4324) * C27314 +
            (C404 * C4018 + C27518 * C4250) * C188) *
               C73) *
              C27517 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C3554 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C27352) *
              C3551 +
          (((C1158 + C1164) * C73 + (C2301 + C2305) * C74) * C27517 * C27352 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C3554) *
              C3552 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27517 * C3554 -
           (((C404 * C1951 + C27518 * C2299) * C27314 +
             (C404 * C1843 + C27518 * C2179) * C188) *
                C74 +
            (C2305 + C2301) * C73) *
               C27517 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1354 +
            (C404 * C189 + C27518 * C521) * C1215 -
            (C404 * C1220 + C27518 * C1628) * C1355 -
            (C404 * C1358 + C27518 * C1767) * C1216 +
            (C404 * C1221 + C27518 * C1630) * C1356 +
            (C404 * C1359 + C27518 * C1768) * C1217) *
               C73 +
           (C1774 + C1775 - C1776 - C1784 + C1779 + C1785) * C74) *
              C27517 * C3554 +
          (((C404 * C2885 + C27518 * C3337) * C1355 -
            ((C404 * C738 + C27518 * C1150) * C1215 +
             (C404 * C600 + C27518 * C1008) * C1354) +
            (C404 * C3035 + C27518 * C3491) * C1216 -
            (C404 * C4376 + C27518 * C4700) * C1356 -
            (C404 * C4488 + C27518 * C4805) * C1217) *
               C73 +
           (C3348 * C1355 - (C1162 * C1215 + C1028 * C1354) + C3500 * C1216 -
            (C404 * C4375 + C27518 * C4699) * C1356 -
            (C404 * C4487 + C27518 * C4806) * C1217) *
               C74) *
              C27517 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27471 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
               C27517 * C27518 * C27482 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C26156 -
            ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27471 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C26163) +
            (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27280) *
               C27517 * C27518 * C27378) *
              C3554 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C26156 -
            ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27471 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C26163) +
            (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
               C27517 * C27518 * C27482 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C26163 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27471 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C26156 -
            (C84 * C2893 + C74 * C2896 + C83 * C2891 + C73 * C2895) * C27280) *
               C27517 * C27518 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3609 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C3554 -
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3610 -
            (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
               C27517 * C27518 * C27471 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C3610 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C3554 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3609) +
            (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
               C27517 * C27518 * C27280) *
              C27482 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C3610 -
            ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C3554 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C3609) +
            (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27352) *
               C27517 * C27518 * C27471 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C3609 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C3554 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C3610 -
            (C84 * C2965 + C74 * C2968 + C83 * C2964 + C73 * C2967) * C27352) *
               C27517 * C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C2463 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27482 -
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C2464 -
            (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
               C27517 * C27518 * C3554 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C2464 -
            ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27482 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C2463) +
            (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C27471 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C2464 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27482 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C2463) +
            (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
               C27517 * C27518 * C3554 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C2463 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27482 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C2464 -
            (C84 * C3037 + C74 * C3040 + C83 * C3036 + C73 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C26163 +
             (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
             C258 * C27280) *
                C27518 * C73 +
            (C257 * C26163 + C258 * C27471 - C259 * C26156 - C260 * C27280) *
                C27518 * C74) *
               C27482 +
           ((C1440 * C26156 -
             ((C233 * C1227 + C27517 * C1425) * C27471 +
              (C233 * C1220 + C27517 * C1420) * C26163) +
             C1441 * C27280) *
                C27518 * C73 +
            (C2524 * C26156 - (C1441 * C27471 + C1440 * C26163) +
             C2525 * C27280) *
                C27518 * C74) *
               C27378) *
              C3554 +
          (((C820 * C26156 -
             ((C233 * C607 + C27517 * C805) * C27471 +
              (C233 * C600 + C27517 * C800) * C26163) +
             C821 * C27280) *
                C27518 * C73 +
            (C2010 * C26156 - (C821 * C27471 + C820 * C26163) +
             C2011 * C27280) *
                C27518 * C74) *
               C27482 +
           (((C233 * C2885 + C27517 * C3107) * C26163 +
             (C233 * C2890 + C27517 * C3110) * C27471 - C3118 * C26156 -
             C3119 * C27280) *
                C27518 * C73 +
            (C3118 * C26163 + C3119 * C27471 -
             (C233 * C2887 + C27517 * C3109) * C26156 -
             (C233 * C2893 + C27517 * C3112) * C27280) *
                C27518 * C74) *
               C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27517 * C234) * C3609 +
                      (C233 * C144 + C27517 * C296) * C3554 -
                      (C233 * C600 + C27517 * C800) * C3610 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C27518 * C73 +
                     (C3762 + C3763 - C3764 - C3765) * C27518 * C74) *
                        C27471 +
                    ((C3764 - (C3763 + C3762) + C3765) * C27518 * C73 +
                     (C3766 - (C3767 + C3768) + C3769) * C27518 * C74) *
                        C27280) *
                       C27482 +
                   ((((C233 * C2885 + C27517 * C3107) * C3610 -
                      ((C233 * C1294 + C27517 * C1495) * C3554 +
                       (C233 * C1220 + C27517 * C1420) * C3609) +
                      (C233 * C2963 + C27517 * C3185) * C27352) *
                         C27518 * C73 +
                     (C5610 - (C5611 + C5612) + C5613) * C27518 * C74) *
                        C27471 +
                    ((C5612 + C5611 - C5610 - C5613) * C27518 * C73 +
                     (C2524 * C3609 + C2580 * C3554 -
                      (C233 * C2887 + C27517 * C3109) * C3610 -
                      (C233 * C2965 + C27517 * C3187) * C27352) *
                         C27518 * C74) *
                        C27280) *
                       C27378)) /
                 (p * q * std::sqrt(p + q));
    d2eeyz[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C233 * C89 + C27517 * C234) * C2463 +
                      (C233 * C189 + C27517 * C350) * C27482 -
                      (C233 * C1220 + C27517 * C1420) * C2464 -
                      (C233 * C1358 + C27517 * C1559) * C27378) *
                         C27518 * C73 +
                     (C2633 + C2634 - C2635 - C2636) * C27518 * C74) *
                        C3554 +
                    (((C233 * C2885 + C27517 * C3107) * C2464 -
                      ((C233 * C738 + C27517 * C942) * C27482 +
                       (C233 * C600 + C27517 * C800) * C2463) +
                      (C233 * C3035 + C27517 * C3261) * C27378) *
                         C27518 * C73 +
                     (C3265 - (C3266 + C3267) + C3271) * C27518 * C74) *
                        C27352) *
                       C27471 +
                   (((C2635 - (C2634 + C2633) + C2636) * C27518 * C73 +
                     (C2637 - (C2638 + C2639) + C2643) * C27518 * C74) *
                        C3554 +
                    ((C3267 + C3266 - C3265 - C3271) * C27518 * C73 +
                     (C2010 * C2463 + C2128 * C27482 -
                      (C233 * C2887 + C27517 * C3109) * C2464 -
                      (C233 * C3037 + C27517 * C3263) * C27378) *
                         C27518 * C74) *
                        C27352) *
                       C27280)) /
                 (p * q * std::sqrt(p + q));
    d2eezx[8] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C26163 +
             (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
             C429 * C27280) *
                C73 +
            (C428 * C26163 + C429 * C27471 - C430 * C26156 - C431 * C27280) *
                C74) *
               C27517 * C27482 +
           ((C1648 * C26156 -
             ((C404 * C1227 + C27518 * C1633) * C27471 +
              (C404 * C1220 + C27518 * C1628) * C26163) +
             C1649 * C27280) *
                C73 +
            (C2700 * C26156 - (C1649 * C27471 + C1648 * C26163) +
             C2701 * C27280) *
                C74) *
               C27517 * C27378) *
              C3554 +
          (((C1028 * C26156 -
             ((C404 * C607 + C27518 * C1013) * C27471 +
              (C404 * C600 + C27518 * C1008) * C26163) +
             C1029 * C27280) *
                C73 +
            (C2186 * C26156 - (C1029 * C27471 + C1028 * C26163) +
             C2187 * C27280) *
                C74) *
               C27517 * C27482 +
           (((C404 * C2885 + C27518 * C3337) * C26163 +
             (C404 * C2890 + C27518 * C3340) * C27471 - C3348 * C26156 -
             C3349 * C27280) *
                C73 +
            (C3348 * C26163 + C3349 * C27471 -
             (C404 * C2887 + C27518 * C3339) * C26156 -
             (C404 * C2893 + C27518 * C3342) * C27280) *
                C74) *
               C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27518 * C405) * C3609 +
                      (C404 * C144 + C27518 * C467) * C3554 -
                      (C404 * C600 + C27518 * C1008) * C3610 -
                      (C404 * C676 + C27518 * C1081) * C27352) *
                         C73 +
                     (C3920 + C3921 - C3922 - C3923) * C74) *
                        C27517 * C27471 +
                    ((C3922 - (C3921 + C3920) + C3923) * C73 +
                     (C3924 - (C3925 + C3926) + C3927) * C74) *
                        C27517 * C27280) *
                       C27482 +
                   ((((C404 * C2885 + C27518 * C3337) * C3610 -
                      ((C404 * C1294 + C27518 * C1703) * C3554 +
                       (C404 * C1220 + C27518 * C1628) * C3609) +
                      (C404 * C2963 + C27518 * C3415) * C27352) *
                         C73 +
                     (C5812 - (C5813 + C5814) + C5815) * C74) *
                        C27517 * C27471 +
                    ((C5814 + C5813 - C5812 - C5815) * C73 +
                     (C2700 * C3609 + C2756 * C3554 -
                      (C404 * C2887 + C27518 * C3339) * C3610 -
                      (C404 * C2965 + C27518 * C3417) * C27352) *
                         C74) *
                        C27517 * C27280) *
                       C27378)) /
                 (p * q * std::sqrt(p + q));
    d2eezz[8] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C404 * C89 + C27518 * C405) * C2463 +
                      (C404 * C189 + C27518 * C521) * C27482 -
                      (C404 * C1220 + C27518 * C1628) * C2464 -
                      (C404 * C1358 + C27518 * C1767) * C27378) *
                         C73 +
                     (C2809 + C2810 - C2811 - C2812) * C74) *
                        C27517 * C3554 +
                    (((C404 * C2885 + C27518 * C3337) * C2464 -
                      ((C404 * C738 + C27518 * C1150) * C27482 +
                       (C404 * C600 + C27518 * C1008) * C2463) +
                      (C404 * C3035 + C27518 * C3491) * C27378) *
                         C73 +
                     (C3495 - (C3496 + C3497) + C3501) * C74) *
                        C27517 * C27352) *
                       C27471 +
                   (((C2811 - (C2810 + C2809) + C2812) * C73 +
                     (C2813 - (C2814 + C2815) + C2819) * C74) *
                        C27517 * C3554 +
                    ((C3497 + C3496 - C3495 - C3501) * C73 +
                     (C2186 * C2463 + C2304 * C27482 -
                      (C404 * C2887 + C27518 * C3339) * C2464 -
                      (C404 * C3037 + C27518 * C3493) * C27378) *
                         C74) *
                        C27517 * C27352) *
                       C27280)) /
                 (p * q * std::sqrt(p + q));
    d2eexx[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3556 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C3551 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3557 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C3552 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3558 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C3553) *
              C27517 * C27518 * C27314 * C3554 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C3557 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C3551 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3556) +
           (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C3552 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C3558 -
           (C84 * C1845 + C74 * C1846 + C83 * C609 + C73 * C618) * C3553) *
              C27517 * C27518 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
              C27517 * C27518 * C27314 * C4012 -
          ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
              C27517 * C27518 * C27314 * C4013 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4016 +
           (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27275) *
              C27517 * C27518 * C27314 * C4014 -
          ((C84 * C4019 + C74 * C4023 + C83 * C4020 + C73 * C4024) * C27275 +
           (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C4016) *
              C27517 * C27518 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q));
    d2eexy[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3609 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C3554 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C3610 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
              C27517 * C27518 * C3551 +
          ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C3610 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C3554 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3609) +
           (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
              C27517 * C27518 * C3552 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3609 +
           (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C3554 -
           (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C3610 -
           (C84 * C1899 + C74 * C1900 + C83 * C679 + C73 * C685) * C27352) *
              C27517 * C27518 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4059 +
          (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C4012 -
          (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4060 -
          (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C4013 +
          (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4061 +
          (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C4014 -
          (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C4062 -
          (C84 * C4063 + C74 * C4065 + C83 * C4064 + C73 * C4066) * C4015) *
         C27517 * C27518 * C27275 * C27314) /
            (p * q * std::sqrt(p + q));
    d2eexz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
               C27517 * C27518 * C3554 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
               C27517 * C27518 * C27352) *
              C3551 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C188 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C27314) *
               C27517 * C27518 * C27352 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27314 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C188) *
               C27517 * C27518 * C3554) *
              C3552 +
          (((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C188 +
            (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C27314) *
               C27517 * C27518 * C3554 -
           ((C84 * C1951 + C74 * C1952 + C83 * C741 + C73 * C747) * C27314 +
            (C84 * C1843 + C74 * C1844 + C83 * C599 + C73 * C605) * C188) *
               C27517 * C27518 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C188 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27314) *
              C27517 * C27518 * C4012 -
          ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27314 +
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C188) *
              C27517 * C27518 * C4013 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C188 +
           (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C27314) *
              C27517 * C27518 * C4014 -
          ((C84 * C4101 + C74 * C4103 + C83 * C4102 + C73 * C4104) * C27314 +
           (C84 * C4017 + C74 * C4021 + C83 * C4018 + C73 * C4022) * C188) *
              C27517 * C27518 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C3556 +
                     (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 -
                     C258 * C3552 + C259 * C3558 + C260 * C3553) *
                        C27518 * C73 +
                    (C257 * C3556 + C258 * C3551 - C259 * C3557 - C260 * C3552 +
                     C261 * C3558 + C262 * C3553) *
                        C27518 * C74) *
                       C27314 * C3554 +
                   ((C820 * C3557 -
                     ((C233 * C607 + C27517 * C805) * C3551 +
                      (C233 * C600 + C27517 * C800) * C3556) +
                     C821 * C3552 - C2010 * C3558 - C2011 * C3553) *
                        C27518 * C73 +
                    (C2010 * C3557 - (C821 * C3551 + C820 * C3556) +
                     C2011 * C3552 - (C233 * C1843 + C27517 * C2003) * C3558 -
                     (C233 * C1845 + C27517 * C2004) * C3553) *
                        C27518 * C74) *
                       C27314 * C27352)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C4016 +
                     (C233 * C96 + C27517 * C239) * C27275) *
                        C27518 * C73 +
                    (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                       C27314 * C4012 -
                   ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                    ((C233 * C607 + C27517 * C805) * C27275 +
                     (C233 * C600 + C27517 * C800) * C4016) *
                        C27518 * C73) *
                       C27314 * C4013 +
                   (((C233 * C601 + C27517 * C802) * C4016 +
                     (C233 * C612 + C27517 * C808) * C27275) *
                        C27518 * C73 +
                    (C822 * C4016 + C823 * C27275) * C27518 * C74) *
                       C27314 * C4014 -
                   (((C233 * C4019 + C27517 * C4141) * C27275 +
                     (C233 * C4017 + C27517 * C4139) * C4016) *
                        C27518 * C74 +
                    ((C233 * C4020 + C27517 * C4142) * C27275 +
                     (C233 * C4018 + C27517 * C4140) * C4016) *
                        C27518 * C73) *
                       C27314 * C4015)) /
                     (p * q * std::sqrt(p + q));
    d2eeyy[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C233 * C89 + C27517 * C234) * C3609 +
                     (C233 * C144 + C27517 * C296) * C3554 -
                     (C233 * C600 + C27517 * C800) * C3610 -
                     (C233 * C676 + C27517 * C873) * C27352) *
                        C27518 * C73 +
                    (C3762 + C3763 - C3764 - C3765) * C27518 * C74) *
                       C3551 +
                   ((C3764 - (C3763 + C3762) + C3765) * C27518 * C73 +
                    (C3766 - (C3767 + C3768) + C3769) * C27518 * C74) *
                       C3552 +
                   ((C3768 + C3767 - C3766 - C3769) * C27518 * C73 +
                    (C261 * C3609 + C313 * C3554 -
                     (C233 * C1843 + C27517 * C2003) * C3610 -
                     (C233 * C1899 + C27517 * C2061) * C27352) *
                        C27518 * C74) *
                       C3553) *
                  C27314) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C233 * C89 + C27517 * C234) * C4059 +
                    (C233 * C144 + C27517 * C296) * C4012 -
                    (C233 * C600 + C27517 * C800) * C4060 -
                    (C233 * C676 + C27517 * C873) * C4013 +
                    (C233 * C601 + C27517 * C802) * C4061 +
                    (C233 * C677 + C27517 * C874) * C4014 -
                    (C233 * C4018 + C27517 * C4140) * C4062 -
                    (C233 * C4064 + C27517 * C4177) * C4015) *
                       C27518 * C73 +
                   (C257 * C4059 + C311 * C4012 - C820 * C4060 - C888 * C4013 +
                    C822 * C4061 + C889 * C4014 -
                    (C233 * C4017 + C27517 * C4139) * C4062 -
                    (C233 * C4063 + C27517 * C4178) * C4015) *
                       C27518 * C74) *
                  C27275 * C27314) /
                     (p * q * std::sqrt(p + q));
    d2eeyz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C27518 * C73 +
            (C356 + C368) * C27518 * C74) *
               C3554 -
           ((C956 + C950) * C27518 * C74 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C27518 * C73) *
               C27352) *
              C3551 +
          (((C950 + C956) * C27518 * C73 + (C2125 + C2129) * C27518 * C74) *
               C27352 -
           ((C369 + C361) * C27518 * C74 + (C368 + C356) * C27518 * C73) *
               C3554) *
              C3552 +
          (((C361 + C369) * C27518 * C73 + (C362 + C370) * C27518 * C74) *
               C3554 -
           (((C233 * C1951 + C27517 * C2123) * C27314 +
             (C233 * C1843 + C27517 * C2003) * C188) *
                C27518 * C74 +
            (C2129 + C2125) * C27518 * C73) *
               C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C27518 * C73 +
           (C356 + C368) * C27518 * C74) *
              C4012 -
          ((C956 + C950) * C27518 * C74 +
           ((C233 * C738 + C27517 * C942) * C27314 +
            (C233 * C600 + C27517 * C800) * C188) *
               C27518 * C73) *
              C4013 +
          (((C233 * C601 + C27517 * C802) * C188 +
            (C233 * C739 + C27517 * C943) * C27314) *
               C27518 * C73 +
           (C951 + C957) * C27518 * C74) *
              C4014 -
          (((C233 * C4101 + C27517 * C4213) * C27314 +
            (C233 * C4017 + C27517 * C4139) * C188) *
               C27518 * C74 +
           ((C233 * C4102 + C27517 * C4214) * C27314 +
            (C233 * C4018 + C27517 * C4140) * C188) *
               C27518 * C73) *
              C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C3556 +
                     (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 -
                     C429 * C3552 + C430 * C3558 + C431 * C3553) *
                        C73 +
                    (C428 * C3556 + C429 * C3551 - C430 * C3557 - C431 * C3552 +
                     C432 * C3558 + C433 * C3553) *
                        C74) *
                       C27517 * C27314 * C3554 +
                   ((C1028 * C3557 -
                     ((C404 * C607 + C27518 * C1013) * C3551 +
                      (C404 * C600 + C27518 * C1008) * C3556) +
                     C1029 * C3552 - C2186 * C3558 - C2187 * C3553) *
                        C73 +
                    (C2186 * C3557 - (C1029 * C3551 + C1028 * C3556) +
                     C2187 * C3552 - (C404 * C1843 + C27518 * C2179) * C3558 -
                     (C404 * C1845 + C27518 * C2180) * C3553) *
                        C74) *
                       C27517 * C27314 * C27352)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C4016 +
                     (C404 * C96 + C27518 * C410) * C27275) *
                        C73 +
                    (C428 * C4016 + C429 * C27275) * C74) *
                       C27517 * C27314 * C4012 -
                   ((C1029 * C27275 + C1028 * C4016) * C74 +
                    ((C404 * C607 + C27518 * C1013) * C27275 +
                     (C404 * C600 + C27518 * C1008) * C4016) *
                        C73) *
                       C27517 * C27314 * C4013 +
                   (((C404 * C601 + C27518 * C1010) * C4016 +
                     (C404 * C612 + C27518 * C1016) * C27275) *
                        C73 +
                    (C1030 * C4016 + C1031 * C27275) * C74) *
                       C27517 * C27314 * C4014 -
                   (((C404 * C4019 + C27518 * C4251) * C27275 +
                     (C404 * C4017 + C27518 * C4249) * C4016) *
                        C74 +
                    ((C404 * C4020 + C27518 * C4252) * C27275 +
                     (C404 * C4018 + C27518 * C4250) * C4016) *
                        C73) *
                       C27517 * C27314 * C4015)) /
                     (p * q * std::sqrt(p + q));
    d2eezy[9] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C404 * C89 + C27518 * C405) * C3609 +
                     (C404 * C144 + C27518 * C467) * C3554 -
                     (C404 * C600 + C27518 * C1008) * C3610 -
                     (C404 * C676 + C27518 * C1081) * C27352) *
                        C73 +
                    (C3920 + C3921 - C3922 - C3923) * C74) *
                       C27517 * C3551 +
                   ((C3922 - (C3921 + C3920) + C3923) * C73 +
                    (C3924 - (C3925 + C3926) + C3927) * C74) *
                       C27517 * C3552 +
                   ((C3926 + C3925 - C3924 - C3927) * C73 +
                    (C432 * C3609 + C484 * C3554 -
                     (C404 * C1843 + C27518 * C2179) * C3610 -
                     (C404 * C1899 + C27518 * C2237) * C27352) *
                        C74) *
                       C27517 * C3553) *
                  C27314) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C404 * C89 + C27518 * C405) * C4059 +
                    (C404 * C144 + C27518 * C467) * C4012 -
                    (C404 * C600 + C27518 * C1008) * C4060 -
                    (C404 * C676 + C27518 * C1081) * C4013 +
                    (C404 * C601 + C27518 * C1010) * C4061 +
                    (C404 * C677 + C27518 * C1082) * C4014 -
                    (C404 * C4018 + C27518 * C4250) * C4062 -
                    (C404 * C4064 + C27518 * C4287) * C4015) *
                       C73 +
                   (C428 * C4059 + C482 * C4012 - C1028 * C4060 -
                    C1096 * C4013 + C1030 * C4061 + C1097 * C4014 -
                    (C404 * C4017 + C27518 * C4249) * C4062 -
                    (C404 * C4063 + C27518 * C4288) * C4015) *
                       C74) *
                  C27517 * C27275 * C27314) /
                     (p * q * std::sqrt(p + q));
    d2eezz[9] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C73 +
            (C527 + C539) * C74) *
               C27517 * C3554 -
           ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                     (C404 * C600 + C27518 * C1008) * C188) *
                                        C73) *
               C27517 * C27352) *
              C3551 +
          (((C1158 + C1164) * C73 + (C2301 + C2305) * C74) * C27517 * C27352 -
           ((C540 + C532) * C74 + (C539 + C527) * C73) * C27517 * C3554) *
              C3552 +
          (((C532 + C540) * C73 + (C533 + C541) * C74) * C27517 * C3554 -
           (((C404 * C1951 + C27518 * C2299) * C27314 +
             (C404 * C1843 + C27518 * C2179) * C188) *
                C74 +
            (C2305 + C2301) * C73) *
               C27517 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C73 +
           (C527 + C539) * C74) *
              C27517 * C4012 -
          ((C1164 + C1158) * C74 + ((C404 * C738 + C27518 * C1150) * C27314 +
                                    (C404 * C600 + C27518 * C1008) * C188) *
                                       C73) *
              C27517 * C4013 +
          (((C404 * C601 + C27518 * C1010) * C188 +
            (C404 * C739 + C27518 * C1151) * C27314) *
               C73 +
           (C1159 + C1165) * C74) *
              C27517 * C4014 -
          (((C404 * C4101 + C27518 * C4323) * C27314 +
            (C404 * C4017 + C27518 * C4249) * C188) *
               C74 +
           ((C404 * C4102 + C27518 * C4324) * C27314 +
            (C404 * C4018 + C27518 * C4250) * C188) *
               C73) *
              C27517 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27471 -
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
            (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
               C27517 * C27518 * C6413 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C26156 -
            ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27471 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C26163) +
            (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27280) *
               C27517 * C27518 * C27378) *
              C27481 +
          (((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C26156 -
            ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27471 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C26163) +
            (C83 * C606 + C73 * C616 + C84 * C609 + C74 * C618) * C27280) *
               C27517 * C27518 * C6413 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C26163 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27471 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C26156 -
            (C84 * C2893 + C74 * C2896 + C83 * C2891 + C73 * C2895) * C27280) *
               C27517 * C27518 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1897 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27481 -
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1898 -
            (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
               C27517 * C27518 * C27471 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C1898 -
            ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27481 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C1897) +
            (C83 * C675 + C73 * C681 + C84 * C679 + C74 * C685) * C27352) *
               C27517 * C27518 * C27280) *
              C6413 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C1898 -
            ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27481 +
             (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1897) +
            (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27352) *
               C27517 * C27518 * C27471 +
           ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C1897 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27481 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C1898 -
            (C84 * C2965 + C74 * C2968 + C83 * C2964 + C73 * C2967) * C27352) *
               C27517 * C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6515 +
            (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6413 -
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C6516 -
            (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
               C27517 * C27518 * C27481 +
           ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C6516 -
            ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C6413 +
             (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C6515) +
            (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C27471 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C6516 -
            ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6413 +
             (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6515) +
            (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
               C27517 * C27518 * C27481 +
           ((C83 * C598 + C73 * C604 + C84 * C599 + C74 * C605) * C6515 +
            (C83 * C737 + C73 * C743 + C84 * C741 + C74 * C747) * C6413 -
            (C84 * C2887 + C74 * C2892 + C83 * C2886 + C73 * C2889) * C6516 -
            (C84 * C3037 + C74 * C3040 + C83 * C3036 + C73 * C3039) * C27378) *
               C27517 * C27518 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C26163 +
             (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
             C258 * C27280) *
                C27518 * C73 +
            (C257 * C26163 + C258 * C27471 - C259 * C26156 - C260 * C27280) *
                C27518 * C74) *
               C6413 +
           ((C1440 * C26156 -
             ((C233 * C1227 + C27517 * C1425) * C27471 +
              (C233 * C1220 + C27517 * C1420) * C26163) +
             C1441 * C27280) *
                C27518 * C73 +
            (C2524 * C26156 - (C1441 * C27471 + C1440 * C26163) +
             C2525 * C27280) *
                C27518 * C74) *
               C27378) *
              C27481 +
          (((C820 * C26156 -
             ((C233 * C607 + C27517 * C805) * C27471 +
              (C233 * C600 + C27517 * C800) * C26163) +
             C821 * C27280) *
                C27518 * C73 +
            (C2010 * C26156 - (C821 * C27471 + C820 * C26163) +
             C2011 * C27280) *
                C27518 * C74) *
               C6413 +
           (((C233 * C2885 + C27517 * C3107) * C26163 +
             (C233 * C2890 + C27517 * C3110) * C27471 - C3118 * C26156 -
             C3119 * C27280) *
                C27518 * C73 +
            (C3118 * C26163 + C3119 * C27471 -
             (C233 * C2887 + C27517 * C3109) * C26156 -
             (C233 * C2893 + C27517 * C3112) * C27280) *
                C27518 * C74) *
               C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C1897 +
                       (C233 * C144 + C27517 * C296) * C27481 -
                       (C233 * C600 + C27517 * C800) * C1898 -
                       (C233 * C676 + C27517 * C873) * C27352) *
                          C27518 * C73 +
                      (C2063 + C2064 - C2065 - C2066) * C27518 * C74) *
                         C27471 +
                     ((C2065 - (C2064 + C2063) + C2066) * C27518 * C73 +
                      (C2067 - (C2068 + C2069) + C2073) * C27518 * C74) *
                         C27280) *
                        C6413 +
                    ((((C233 * C2885 + C27517 * C3107) * C1898 -
                       ((C233 * C1294 + C27517 * C1495) * C27481 +
                        (C233 * C1220 + C27517 * C1420) * C1897) +
                       (C233 * C2963 + C27517 * C3185) * C27352) *
                          C27518 * C73 +
                      (C3189 - (C3190 + C3191) + C3195) * C27518 * C74) *
                         C27471 +
                     ((C3191 + C3190 - C3189 - C3195) * C27518 * C73 +
                      (C2524 * C1897 + C2580 * C27481 -
                       (C233 * C2887 + C27517 * C3109) * C1898 -
                       (C233 * C2965 + C27517 * C3187) * C27352) *
                          C27518 * C74) *
                         C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C6515 +
                       (C233 * C189 + C27517 * C350) * C6413 -
                       (C233 * C1220 + C27517 * C1420) * C6516 -
                       (C233 * C1358 + C27517 * C1559) * C27378) *
                          C27518 * C73 +
                      (C6668 + C6669 - C6670 - C6671) * C27518 * C74) *
                         C27481 +
                     (((C233 * C2885 + C27517 * C3107) * C6516 -
                       ((C233 * C738 + C27517 * C942) * C6413 +
                        (C233 * C600 + C27517 * C800) * C6515) +
                       (C233 * C3035 + C27517 * C3261) * C27378) *
                          C27518 * C73 +
                      (C8026 - (C8027 + C8028) + C8029) * C27518 * C74) *
                         C27352) *
                        C27471 +
                    (((C6670 - (C6669 + C6668) + C6671) * C27518 * C73 +
                      (C6672 - (C6673 + C6674) + C6675) * C27518 * C74) *
                         C27481 +
                     ((C8028 + C8027 - C8026 - C8029) * C27518 * C73 +
                      (C2010 * C6515 + C2128 * C6413 -
                       (C233 * C2887 + C27517 * C3109) * C6516 -
                       (C233 * C3037 + C27517 * C3263) * C27378) *
                          C27518 * C74) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[10] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C26163 +
             (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
             C429 * C27280) *
                C73 +
            (C428 * C26163 + C429 * C27471 - C430 * C26156 - C431 * C27280) *
                C74) *
               C27517 * C6413 +
           ((C1648 * C26156 -
             ((C404 * C1227 + C27518 * C1633) * C27471 +
              (C404 * C1220 + C27518 * C1628) * C26163) +
             C1649 * C27280) *
                C73 +
            (C2700 * C26156 - (C1649 * C27471 + C1648 * C26163) +
             C2701 * C27280) *
                C74) *
               C27517 * C27378) *
              C27481 +
          (((C1028 * C26156 -
             ((C404 * C607 + C27518 * C1013) * C27471 +
              (C404 * C600 + C27518 * C1008) * C26163) +
             C1029 * C27280) *
                C73 +
            (C2186 * C26156 - (C1029 * C27471 + C1028 * C26163) +
             C2187 * C27280) *
                C74) *
               C27517 * C6413 +
           (((C404 * C2885 + C27518 * C3337) * C26163 +
             (C404 * C2890 + C27518 * C3340) * C27471 - C3348 * C26156 -
             C3349 * C27280) *
                C73 +
            (C3348 * C26163 + C3349 * C27471 -
             (C404 * C2887 + C27518 * C3339) * C26156 -
             (C404 * C2893 + C27518 * C3342) * C27280) *
                C74) *
               C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C1897 +
                       (C404 * C144 + C27518 * C467) * C27481 -
                       (C404 * C600 + C27518 * C1008) * C1898 -
                       (C404 * C676 + C27518 * C1081) * C27352) *
                          C73 +
                      (C2239 + C2240 - C2241 - C2242) * C74) *
                         C27517 * C27471 +
                     ((C2241 - (C2240 + C2239) + C2242) * C73 +
                      (C2243 - (C2244 + C2245) + C2249) * C74) *
                         C27517 * C27280) *
                        C6413 +
                    ((((C404 * C2885 + C27518 * C3337) * C1898 -
                       ((C404 * C1294 + C27518 * C1703) * C27481 +
                        (C404 * C1220 + C27518 * C1628) * C1897) +
                       (C404 * C2963 + C27518 * C3415) * C27352) *
                          C73 +
                      (C3419 - (C3420 + C3421) + C3425) * C74) *
                         C27517 * C27471 +
                     ((C3421 + C3420 - C3419 - C3425) * C73 +
                      (C2700 * C1897 + C2756 * C27481 -
                       (C404 * C2887 + C27518 * C3339) * C1898 -
                       (C404 * C2965 + C27518 * C3417) * C27352) *
                          C74) *
                         C27517 * C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[10] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C6515 +
                       (C404 * C189 + C27518 * C521) * C6413 -
                       (C404 * C1220 + C27518 * C1628) * C6516 -
                       (C404 * C1358 + C27518 * C1767) * C27378) *
                          C73 +
                      (C6826 + C6827 - C6828 - C6829) * C74) *
                         C27517 * C27481 +
                     (((C404 * C2885 + C27518 * C3337) * C6516 -
                       ((C404 * C738 + C27518 * C1150) * C6413 +
                        (C404 * C600 + C27518 * C1008) * C6515) +
                       (C404 * C3035 + C27518 * C3491) * C27378) *
                          C73 +
                      (C8228 - (C8229 + C8230) + C8231) * C74) *
                         C27517 * C27352) *
                        C27471 +
                    (((C6828 - (C6827 + C6826) + C6829) * C73 +
                      (C6830 - (C6831 + C6832) + C6833) * C74) *
                         C27517 * C27481 +
                     ((C8230 + C8229 - C8228 - C8231) * C73 +
                      (C2186 * C6515 + C2304 * C6413 -
                       (C404 * C2887 + C27518 * C3339) * C6516 -
                       (C404 * C3037 + C27518 * C3493) * C27378) *
                          C74) *
                         C27517 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
               C27517 * C27518 * C27511 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
               C27517 * C27518 * C27512 +
           ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C4016 +
            (C83 * C1232 + C73 * C1239 + C84 * C1233 + C74 * C1240) * C27275) *
               C27517 * C27518 * C8283) *
              C27481 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4016 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27275) *
               C27517 * C27518 * C27512 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
               C27517 * C27518 * C27511 -
           ((C84 * C4377 + C74 * C4381 + C83 * C4378 + C73 * C4382) * C27275 +
            (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C4016) *
               C27517 * C27518 * C8283) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C1897 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27481 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C1898 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C27352) *
              C27517 * C27518 * C27275 * C27511 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C1898 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27481 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C1897) +
           (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C27352) *
              C27517 * C27518 * C27275 * C27512 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C1897 +
           (C83 * C1295 + C73 * C1301 + C84 * C1296 + C74 * C1302) * C27481 -
           (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C1898 -
           (C84 * C4433 + C74 * C4435 + C83 * C4434 + C73 * C4436) * C27352) *
              C27517 * C27518 * C27275 * C8283)) /
        (p * q * std::sqrt(p + q));
    d2eexz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C8384 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27511 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C8385 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27512 +
           (C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C8386 +
           (C83 * C1359 + C73 * C1365 + C84 * C1360 + C74 * C1366) * C8283) *
              C27517 * C27518 * C27481 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C8385 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C27511 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C8384) +
           (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27512 -
           (C84 * C4375 + C74 * C4379 + C83 * C4376 + C73 * C4380) * C8386 -
           (C84 * C4487 + C74 * C4489 + C83 * C4488 + C73 * C4490) * C8283) *
              C27517 * C27518 * C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eeyx[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C4016 +
                       (C233 * C96 + C27517 * C239) * C27275) *
                          C27518 * C73 +
                      (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                         C27511 -
                     ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
                      ((C233 * C1227 + C27517 * C1425) * C27275 +
                       (C233 * C1220 + C27517 * C1420) * C4016) *
                          C27518 * C73) *
                         C27512 +
                     (((C233 * C1221 + C27517 * C1422) * C4016 +
                       (C233 * C1232 + C27517 * C1428) * C27275) *
                          C27518 * C73 +
                      (C1442 * C4016 + C1443 * C27275) * C27518 * C74) *
                         C8283) *
                        C27481 +
                    ((((C233 * C2885 + C27517 * C3107) * C4016 +
                       (C233 * C2890 + C27517 * C3110) * C27275) *
                          C27518 * C73 +
                      (C3118 * C4016 + C3119 * C27275) * C27518 * C74) *
                         C27512 -
                     ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                      ((C233 * C607 + C27517 * C805) * C27275 +
                       (C233 * C600 + C27517 * C800) * C4016) *
                          C27518 * C73) *
                         C27511 -
                     (((C233 * C4377 + C27517 * C4543) * C27275 +
                       (C233 * C4375 + C27517 * C4541) * C4016) *
                          C27518 * C74 +
                      ((C233 * C4378 + C27517 * C4544) * C27275 +
                       (C233 * C4376 + C27517 * C4542) * C4016) *
                          C27518 * C73) *
                         C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C1897 +
                      (C233 * C144 + C27517 * C296) * C27481 -
                      (C233 * C600 + C27517 * C800) * C1898 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C27518 * C73 +
                     (C2063 + C2064 - C2065 - C2066) * C27518 * C74) *
                        C27275 * C27511 +
                    (((C233 * C2885 + C27517 * C3107) * C1898 -
                      ((C233 * C1294 + C27517 * C1495) * C27481 +
                       (C233 * C1220 + C27517 * C1420) * C1897) +
                      (C233 * C2963 + C27517 * C3185) * C27352) *
                         C27518 * C73 +
                     (C3189 - (C3190 + C3191) + C3195) * C27518 * C74) *
                        C27275 * C27512 +
                    (((C233 * C1221 + C27517 * C1422) * C1897 +
                      (C233 * C1295 + C27517 * C1496) * C27481 -
                      (C233 * C4376 + C27517 * C4542) * C1898 -
                      (C233 * C4434 + C27517 * C4595) * C27352) *
                         C27518 * C73 +
                     (C1442 * C1897 + C1507 * C27481 -
                      (C233 * C4375 + C27517 * C4541) * C1898 -
                      (C233 * C4433 + C27517 * C4596) * C27352) *
                         C27518 * C74) *
                        C27275 * C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[11] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C8384 +
            (C233 * C189 + C27517 * C350) * C27511 -
            (C233 * C1220 + C27517 * C1420) * C8385 -
            (C233 * C1358 + C27517 * C1559) * C27512 +
            (C233 * C1221 + C27517 * C1422) * C8386 +
            (C233 * C1359 + C27517 * C1560) * C8283) *
               C27518 * C73 +
           (C8538 + C8539 - C8540 - C8541 + C8542 + C8543) * C27518 * C74) *
              C27481 +
          (((C233 * C2885 + C27517 * C3107) * C8385 -
            ((C233 * C738 + C27517 * C942) * C27511 +
             (C233 * C600 + C27517 * C800) * C8384) +
            (C233 * C3035 + C27517 * C3261) * C27512 -
            (C233 * C4376 + C27517 * C4542) * C8386 -
            (C233 * C4488 + C27517 * C4647) * C8283) *
               C27518 * C73 +
           (C3118 * C8385 - (C954 * C27511 + C820 * C8384) + C3270 * C27512 -
            (C233 * C4375 + C27517 * C4541) * C8386 -
            (C233 * C4487 + C27517 * C4648) * C8283) *
               C27518 * C74) *
              C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eezx[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C4016 +
                       (C404 * C96 + C27518 * C410) * C27275) *
                          C73 +
                      (C428 * C4016 + C429 * C27275) * C74) *
                         C27517 * C27511 -
                     ((C1649 * C27275 + C1648 * C4016) * C74 +
                      ((C404 * C1227 + C27518 * C1633) * C27275 +
                       (C404 * C1220 + C27518 * C1628) * C4016) *
                          C73) *
                         C27517 * C27512 +
                     (((C404 * C1221 + C27518 * C1630) * C4016 +
                       (C404 * C1232 + C27518 * C1636) * C27275) *
                          C73 +
                      (C1650 * C4016 + C1651 * C27275) * C74) *
                         C27517 * C8283) *
                        C27481 +
                    ((((C404 * C2885 + C27518 * C3337) * C4016 +
                       (C404 * C2890 + C27518 * C3340) * C27275) *
                          C73 +
                      (C3348 * C4016 + C3349 * C27275) * C74) *
                         C27517 * C27512 -
                     ((C1029 * C27275 + C1028 * C4016) * C74 +
                      ((C404 * C607 + C27518 * C1013) * C27275 +
                       (C404 * C600 + C27518 * C1008) * C4016) *
                          C73) *
                         C27517 * C27511 -
                     (((C404 * C4377 + C27518 * C4701) * C27275 +
                       (C404 * C4375 + C27518 * C4699) * C4016) *
                          C74 +
                      ((C404 * C4378 + C27518 * C4702) * C27275 +
                       (C404 * C4376 + C27518 * C4700) * C4016) *
                          C73) *
                         C27517 * C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C1897 +
                      (C404 * C144 + C27518 * C467) * C27481 -
                      (C404 * C600 + C27518 * C1008) * C1898 -
                      (C404 * C676 + C27518 * C1081) * C27352) *
                         C73 +
                     (C2239 + C2240 - C2241 - C2242) * C74) *
                        C27517 * C27275 * C27511 +
                    (((C404 * C2885 + C27518 * C3337) * C1898 -
                      ((C404 * C1294 + C27518 * C1703) * C27481 +
                       (C404 * C1220 + C27518 * C1628) * C1897) +
                      (C404 * C2963 + C27518 * C3415) * C27352) *
                         C73 +
                     (C3419 - (C3420 + C3421) + C3425) * C74) *
                        C27517 * C27275 * C27512 +
                    (((C404 * C1221 + C27518 * C1630) * C1897 +
                      (C404 * C1295 + C27518 * C1704) * C27481 -
                      (C404 * C4376 + C27518 * C4700) * C1898 -
                      (C404 * C4434 + C27518 * C4753) * C27352) *
                         C73 +
                     (C1650 * C1897 + C1715 * C27481 -
                      (C404 * C4375 + C27518 * C4699) * C1898 -
                      (C404 * C4433 + C27518 * C4754) * C27352) *
                         C74) *
                        C27517 * C27275 * C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[11] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C8384 +
                      (C404 * C189 + C27518 * C521) * C27511 -
                      (C404 * C1220 + C27518 * C1628) * C8385 -
                      (C404 * C1358 + C27518 * C1767) * C27512 +
                      (C404 * C1221 + C27518 * C1630) * C8386 +
                      (C404 * C1359 + C27518 * C1768) * C8283) *
                         C73 +
                     (C8694 + C8695 - C8696 - C8697 + C8698 + C8699) * C74) *
                        C27517 * C27481 +
                    (((C404 * C2885 + C27518 * C3337) * C8385 -
                      ((C404 * C738 + C27518 * C1150) * C27511 +
                       (C404 * C600 + C27518 * C1008) * C8384) +
                      (C404 * C3035 + C27518 * C3491) * C27512 -
                      (C404 * C4376 + C27518 * C4700) * C8386 -
                      (C404 * C4488 + C27518 * C4805) * C8283) *
                         C73 +
                     (C3348 * C8385 - (C1162 * C27511 + C1028 * C8384) +
                      C3500 * C27512 - (C404 * C4375 + C27518 * C4699) * C8386 -
                      (C404 * C4487 + C27518 * C4806) * C8283) *
                         C74) *
                        C27517 * C27352) *
                   C27275) /
                  (p * q * std::sqrt(p + q));
    d2eexx[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
               C27517 * C27518 * C6413 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
               C27517 * C27518 * C27378) *
              C593 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4016 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27275) *
               C27517 * C27518 * C27378 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
               C27517 * C27518 * C6413) *
              C594 +
          (((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4016 +
            (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27275) *
               C27517 * C27518 * C6413 -
           ((C84 * C5933 + C74 * C5937 + C83 * C5934 + C73 * C5938) * C27275 +
            (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C4016) *
               C27517 * C27518 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3556 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C3551 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3557 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C3552 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3558 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C3553) *
              C27517 * C27518 * C6413 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C3557 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C3551 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C3556) +
           (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C3552 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C3558 -
           (C84 * C2359 + C74 * C2360 + C83 * C1229 + C73 * C1238) * C3553) *
              C27517 * C27518 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
              C27517 * C27518 * C7317 -
          ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
              C27517 * C27518 * C7318 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C4016 +
           (C83 * C1232 + C73 * C1239 + C84 * C1233 + C74 * C1240) * C27275) *
              C27517 * C27518 * C7319 -
          ((C84 * C7323 + C74 * C7327 + C83 * C7324 + C73 * C7328) * C27275 +
           (C84 * C7321 + C74 * C7325 + C83 * C7322 + C73 * C7326) * C4016) *
              C27517 * C27518 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eexy[12] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C672 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C593 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C673 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C594 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C674 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C595) *
              C27517 * C27518 * C27275 * C6413 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C673 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C593 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C672) +
           (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C594 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C674 -
           (C84 * C5989 + C74 * C5991 + C83 * C5990 + C73 * C5992) * C595) *
              C27517 * C27518 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
               C27517 * C27518 * C3551 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27517 * C27518 * C3552 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27303) *
               C27517 * C27518 * C3553) *
              C6413 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C143 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27303) *
               C27517 * C27518 * C3552 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
               C27517 * C27518 * C3551 -
           ((C84 * C2411 + C74 * C2412 + C83 * C1293 + C73 * C1299) * C27303 +
            (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C143) *
               C27517 * C27518 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
              C27517 * C27518 * C27275 * C7317 -
          ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
              C27517 * C27518 * C27275 * C7318 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C143 +
           (C83 * C1295 + C73 * C1301 + C84 * C1296 + C74 * C1302) * C27303) *
              C27517 * C27518 * C27275 * C7319 -
          ((C84 * C7363 + C74 * C7365 + C83 * C7364 + C73 * C7366) * C27303 +
           (C84 * C7321 + C74 * C7325 + C83 * C7322 + C73 * C7326) * C143) *
              C27517 * C27518 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eexz[12] +=
        (-std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6515 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6413 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C6516 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C593 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C6516 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C6413 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C6515) +
           (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
              C27517 * C27518 * C594 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C6515 +
           (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C6413 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C6516 -
           (C84 * C6043 + C74 * C6045 + C83 * C6044 + C73 * C6046) * C27378) *
              C27517 * C27518 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6515 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6413 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C6516 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C27303 * C3551 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C6516 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6413 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6515) +
           (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C3552 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C6515 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C6413 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C6516 -
           (C84 * C2465 + C74 * C2466 + C83 * C1361 + C73 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C7401 +
          (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C7317 -
          (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C7402 -
          (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C7318 +
          (C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C7403 +
          (C83 * C1359 + C73 * C1365 + C84 * C1360 + C74 * C1366) * C7319 -
          (C84 * C7321 + C74 * C7325 + C83 * C7322 + C73 * C7326) * C7404 -
          (C84 * C7405 + C74 * C7407 + C83 * C7406 + C73 * C7408) * C7320) *
         C27517 * C27518 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[12] += (-std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C4016 +
                       (C233 * C96 + C27517 * C239) * C27275) *
                          C27518 * C73 +
                      (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                         C6413 -
                     ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
                      ((C233 * C1227 + C27517 * C1425) * C27275 +
                       (C233 * C1220 + C27517 * C1420) * C4016) *
                          C27518 * C73) *
                         C27378) *
                        C593 +
                    ((((C233 * C2885 + C27517 * C3107) * C4016 +
                       (C233 * C2890 + C27517 * C3110) * C27275) *
                          C27518 * C73 +
                      (C3118 * C4016 + C3119 * C27275) * C27518 * C74) *
                         C27378 -
                     ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                      ((C233 * C607 + C27517 * C805) * C27275 +
                       (C233 * C600 + C27517 * C800) * C4016) *
                          C27518 * C73) *
                         C6413) *
                        C594 +
                    ((((C233 * C601 + C27517 * C802) * C4016 +
                       (C233 * C612 + C27517 * C808) * C27275) *
                          C27518 * C73 +
                      (C822 * C4016 + C823 * C27275) * C27518 * C74) *
                         C6413 -
                     (((C233 * C5933 + C27517 * C6099) * C27275 +
                       (C233 * C5931 + C27517 * C6097) * C4016) *
                          C27518 * C74 +
                      ((C233 * C5934 + C27517 * C6100) * C27275 +
                       (C233 * C5932 + C27517 * C6098) * C4016) *
                          C27518 * C73) *
                         C27378) *
                        C595)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3556 +
                      (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 -
                      C258 * C3552 + C259 * C3558 + C260 * C3553) *
                         C27518 * C73 +
                     (C257 * C3556 + C258 * C3551 - C259 * C3557 -
                      C260 * C3552 + C261 * C3558 + C262 * C3553) *
                         C27518 * C74) *
                        C6413 +
                    ((C1440 * C3557 -
                      ((C233 * C1227 + C27517 * C1425) * C3551 +
                       (C233 * C1220 + C27517 * C1420) * C3556) +
                      C1441 * C3552 - C2524 * C3558 - C2525 * C3553) *
                         C27518 * C73 +
                     (C2524 * C3557 - (C1441 * C3551 + C1440 * C3556) +
                      C2525 * C3552 - (C233 * C2357 + C27517 * C2517) * C3558 -
                      (C233 * C2359 + C27517 * C2518) * C3553) *
                         C27518 * C74) *
                        C27378) *
                   C27303) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C4016 +
                      (C233 * C96 + C27517 * C239) * C27275) *
                         C27518 * C73 +
                     (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                        C7317 -
                    ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
                     ((C233 * C1227 + C27517 * C1425) * C27275 +
                      (C233 * C1220 + C27517 * C1420) * C4016) *
                         C27518 * C73) *
                        C7318 +
                    (((C233 * C1221 + C27517 * C1422) * C4016 +
                      (C233 * C1232 + C27517 * C1428) * C27275) *
                         C27518 * C73 +
                     (C1442 * C4016 + C1443 * C27275) * C27518 * C74) *
                        C7319 -
                    (((C233 * C7323 + C27517 * C7445) * C27275 +
                      (C233 * C7321 + C27517 * C7443) * C4016) *
                         C27518 * C74 +
                     ((C233 * C7324 + C27517 * C7446) * C27275 +
                      (C233 * C7322 + C27517 * C7444) * C4016) *
                         C27518 * C73) *
                        C7320) *
                   C27303) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C27518 * C73 +
           (C880 + C881 - C882 - C890 + C885 + C891) * C27518 * C74) *
              C27275 * C6413 +
          (((C233 * C2885 + C27517 * C3107) * C673 -
            ((C233 * C1294 + C27517 * C1495) * C593 +
             (C233 * C1220 + C27517 * C1420) * C672) +
            (C233 * C2963 + C27517 * C3185) * C594 -
            (C233 * C5932 + C27517 * C6098) * C674 -
            (C233 * C5990 + C27517 * C6151) * C595) *
               C27518 * C73 +
           (C3118 * C673 - (C1506 * C593 + C1440 * C672) + C3194 * C594 -
            (C233 * C5931 + C27517 * C6097) * C674 -
            (C233 * C5989 + C27517 * C6152) * C595) *
               C27518 * C74) *
              C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C27518 * C73 +
            (C302 + C314) * C27518 * C74) *
               C3551 -
           ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) *
               C3552 +
           ((C307 + C315) * C27518 * C73 + (C308 + C316) * C27518 * C74) *
               C3553) *
              C6413 +
          (((C1500 + C1508) * C27518 * C73 + (C2577 + C2581) * C27518 * C74) *
               C3552 -
           ((C1508 + C1500) * C27518 * C74 +
            ((C233 * C1294 + C27517 * C1495) * C27303 +
             (C233 * C1220 + C27517 * C1420) * C143) *
                C27518 * C73) *
               C3551 -
           (((C233 * C2411 + C27517 * C2575) * C27303 +
             (C233 * C2357 + C27517 * C2517) * C143) *
                C27518 * C74 +
            (C2581 + C2577) * C27518 * C73) *
               C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C27518 * C73 +
           (C302 + C314) * C27518 * C74) *
              C27275 * C7317 -
          ((C1508 + C1500) * C27518 * C74 +
           ((C233 * C1294 + C27517 * C1495) * C27303 +
            (C233 * C1220 + C27517 * C1420) * C143) *
               C27518 * C73) *
              C27275 * C7318 +
          (((C233 * C1221 + C27517 * C1422) * C143 +
            (C233 * C1295 + C27517 * C1496) * C27303) *
               C27518 * C73 +
           (C1503 + C1509) * C27518 * C74) *
              C27275 * C7319 -
          (((C233 * C7363 + C27517 * C7481) * C27303 +
            (C233 * C7321 + C27517 * C7443) * C143) *
               C27518 * C74 +
           ((C233 * C7364 + C27517 * C7482) * C27303 +
            (C233 * C7322 + C27517 * C7444) * C143) *
               C27518 * C73) *
              C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 -
            (C233 * C1220 + C27517 * C1420) * C6516 -
            (C233 * C1358 + C27517 * C1559) * C27378) *
               C27518 * C73 +
           (C6668 + C6669 - C6670 - C6671) * C27518 * C74) *
              C593 +
          (((C233 * C2885 + C27517 * C3107) * C6516 -
            ((C233 * C738 + C27517 * C942) * C6413 +
             (C233 * C600 + C27517 * C800) * C6515) +
            (C233 * C3035 + C27517 * C3261) * C27378) *
               C27518 * C73 +
           (C3118 * C6516 - (C954 * C6413 + C820 * C6515) + C3270 * C27378) *
               C27518 * C74) *
              C594 +
          (((C233 * C601 + C27517 * C802) * C6515 +
            (C233 * C739 + C27517 * C943) * C6413 -
            (C233 * C5932 + C27517 * C6098) * C6516 -
            (C233 * C6044 + C27517 * C6203) * C27378) *
               C27518 * C73 +
           (C822 * C6515 + C955 * C6413 -
            (C233 * C5931 + C27517 * C6097) * C6516 -
            (C233 * C6043 + C27517 * C6204) * C27378) *
               C27518 * C74) *
              C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 -
            (C233 * C1220 + C27517 * C1420) * C6516 -
            (C233 * C1358 + C27517 * C1559) * C27378) *
               C27518 * C73 +
           (C6668 + C6669 - C6670 - C6671) * C27518 * C74) *
              C27303 * C3551 +
          ((C6670 - (C6669 + C6668) + C6671) * C27518 * C73 +
           (C6672 - (C6673 + C6674) + C6675) * C27518 * C74) *
              C27303 * C3552 +
          ((C6674 + C6673 - C6672 - C6675) * C27518 * C73 +
           (C261 * C6515 + C367 * C6413 -
            (C233 * C2357 + C27517 * C2517) * C6516 -
            (C233 * C2465 + C27517 * C2631) * C27378) *
               C27518 * C74) *
              C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C7401 +
           (C233 * C189 + C27517 * C350) * C7317 -
           (C233 * C1220 + C27517 * C1420) * C7402 -
           (C233 * C1358 + C27517 * C1559) * C7318 +
           (C233 * C1221 + C27517 * C1422) * C7403 +
           (C233 * C1359 + C27517 * C1560) * C7319 -
           (C233 * C7322 + C27517 * C7444) * C7404 -
           (C233 * C7406 + C27517 * C7517) * C7320) *
              C27518 * C73 +
          (C257 * C7401 + C365 * C7317 - C1440 * C7402 - C1574 * C7318 +
           C1442 * C7403 + C1575 * C7319 -
           (C233 * C7321 + C27517 * C7443) * C7404 -
           (C233 * C7405 + C27517 * C7518) * C7320) *
              C27518 * C74) *
         C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[12] +=
        (-std::pow(Pi, 2.5) * (((((C404 * C89 + C27518 * C405) * C4016 +
                                  (C404 * C96 + C27518 * C410) * C27275) *
                                     C73 +
                                 (C428 * C4016 + C429 * C27275) * C74) *
                                    C27517 * C6413 -
                                ((C1649 * C27275 + C1648 * C4016) * C74 +
                                 ((C404 * C1227 + C27518 * C1633) * C27275 +
                                  (C404 * C1220 + C27518 * C1628) * C4016) *
                                     C73) *
                                    C27517 * C27378) *
                                   C593 +
                               ((((C404 * C2885 + C27518 * C3337) * C4016 +
                                  (C404 * C2890 + C27518 * C3340) * C27275) *
                                     C73 +
                                 (C3348 * C4016 + C3349 * C27275) * C74) *
                                    C27517 * C27378 -
                                ((C1029 * C27275 + C1028 * C4016) * C74 +
                                 ((C404 * C607 + C27518 * C1013) * C27275 +
                                  (C404 * C600 + C27518 * C1008) * C4016) *
                                     C73) *
                                    C27517 * C6413) *
                                   C594 +
                               ((((C404 * C601 + C27518 * C1010) * C4016 +
                                  (C404 * C612 + C27518 * C1016) * C27275) *
                                     C73 +
                                 (C1030 * C4016 + C1031 * C27275) * C74) *
                                    C27517 * C6413 -
                                (((C404 * C5933 + C27518 * C6257) * C27275 +
                                  (C404 * C5931 + C27518 * C6255) * C4016) *
                                     C74 +
                                 ((C404 * C5934 + C27518 * C6258) * C27275 +
                                  (C404 * C5932 + C27518 * C6256) * C4016) *
                                     C73) *
                                    C27517 * C27378) *
                                   C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3556 +
            (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 - C429 * C3552 +
            C430 * C3558 + C431 * C3553) *
               C73 +
           (C428 * C3556 + C429 * C3551 - C430 * C3557 - C431 * C3552 +
            C432 * C3558 + C433 * C3553) *
               C74) *
              C27517 * C6413 +
          ((C1648 * C3557 -
            ((C404 * C1227 + C27518 * C1633) * C3551 +
             (C404 * C1220 + C27518 * C1628) * C3556) +
            C1649 * C3552 - C2700 * C3558 - C2701 * C3553) *
               C73 +
           (C2700 * C3557 - (C1649 * C3551 + C1648 * C3556) + C2701 * C3552 -
            (C404 * C2357 + C27518 * C2693) * C3558 -
            (C404 * C2359 + C27518 * C2694) * C3553) *
               C74) *
              C27517 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C4016 +
            (C404 * C96 + C27518 * C410) * C27275) *
               C73 +
           (C428 * C4016 + C429 * C27275) * C74) *
              C27517 * C7317 -
          ((C1649 * C27275 + C1648 * C4016) * C74 +
           ((C404 * C1227 + C27518 * C1633) * C27275 +
            (C404 * C1220 + C27518 * C1628) * C4016) *
               C73) *
              C27517 * C7318 +
          (((C404 * C1221 + C27518 * C1630) * C4016 +
            (C404 * C1232 + C27518 * C1636) * C27275) *
               C73 +
           (C1650 * C4016 + C1651 * C27275) * C74) *
              C27517 * C7319 -
          (((C404 * C7323 + C27518 * C7555) * C27275 +
            (C404 * C7321 + C27518 * C7553) * C4016) *
               C74 +
           ((C404 * C7324 + C27518 * C7556) * C27275 +
            (C404 * C7322 + C27518 * C7554) * C4016) *
               C73) *
              C27517 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C672 +
            (C404 * C144 + C27518 * C467) * C593 -
            (C404 * C600 + C27518 * C1008) * C673 -
            (C404 * C676 + C27518 * C1081) * C594 +
            (C404 * C601 + C27518 * C1010) * C674 +
            (C404 * C677 + C27518 * C1082) * C595) *
               C73 +
           (C1088 + C1089 - C1090 - C1098 + C1093 + C1099) * C74) *
              C27517 * C27275 * C6413 +
          (((C404 * C2885 + C27518 * C3337) * C673 -
            ((C404 * C1294 + C27518 * C1703) * C593 +
             (C404 * C1220 + C27518 * C1628) * C672) +
            (C404 * C2963 + C27518 * C3415) * C594 -
            (C404 * C5932 + C27518 * C6256) * C674 -
            (C404 * C5990 + C27518 * C6309) * C595) *
               C73 +
           (C3348 * C673 - (C1714 * C593 + C1648 * C672) + C3424 * C594 -
            (C404 * C5931 + C27518 * C6255) * C674 -
            (C404 * C5989 + C27518 * C6310) * C595) *
               C74) *
              C27517 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C73 +
            (C473 + C485) * C74) *
               C27517 * C3551 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C3552 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27517 * C3553) *
              C6413 +
          (((C1708 + C1716) * C73 + (C2753 + C2757) * C74) * C27517 * C3552 -
           ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                     (C404 * C1220 + C27518 * C1628) * C143) *
                                        C73) *
               C27517 * C3551 -
           (((C404 * C2411 + C27518 * C2751) * C27303 +
             (C404 * C2357 + C27518 * C2693) * C143) *
                C74 +
            (C2757 + C2753) * C73) *
               C27517 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C143 +
            (C404 * C144 + C27518 * C467) * C27303) *
               C73 +
           (C473 + C485) * C74) *
              C27517 * C27275 * C7317 -
          ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                    (C404 * C1220 + C27518 * C1628) * C143) *
                                       C73) *
              C27517 * C27275 * C7318 +
          (((C404 * C1221 + C27518 * C1630) * C143 +
            (C404 * C1295 + C27518 * C1704) * C27303) *
               C73 +
           (C1711 + C1717) * C74) *
              C27517 * C27275 * C7319 -
          (((C404 * C7363 + C27518 * C7591) * C27303 +
            (C404 * C7321 + C27518 * C7553) * C143) *
               C74 +
           ((C404 * C7364 + C27518 * C7592) * C27303 +
            (C404 * C7322 + C27518 * C7554) * C143) *
               C73) *
              C27517 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eezz[12] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C73 +
           (C6826 + C6827 - C6828 - C6829) * C74) *
              C27517 * C593 +
          (((C404 * C2885 + C27518 * C3337) * C6516 -
            ((C404 * C738 + C27518 * C1150) * C6413 +
             (C404 * C600 + C27518 * C1008) * C6515) +
            (C404 * C3035 + C27518 * C3491) * C27378) *
               C73 +
           (C3348 * C6516 - (C1162 * C6413 + C1028 * C6515) + C3500 * C27378) *
               C74) *
              C27517 * C594 +
          (((C404 * C601 + C27518 * C1010) * C6515 +
            (C404 * C739 + C27518 * C1151) * C6413 -
            (C404 * C5932 + C27518 * C6256) * C6516 -
            (C404 * C6044 + C27518 * C6361) * C27378) *
               C73 +
           (C1030 * C6515 + C1163 * C6413 -
            (C404 * C5931 + C27518 * C6255) * C6516 -
            (C404 * C6043 + C27518 * C6362) * C27378) *
               C74) *
              C27517 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C404 * C89 + C27518 * C405) * C6515 +
                                (C404 * C189 + C27518 * C521) * C6413 -
                                (C404 * C1220 + C27518 * C1628) * C6516 -
                                (C404 * C1358 + C27518 * C1767) * C27378) *
                                   C73 +
                               (C6826 + C6827 - C6828 - C6829) * C74) *
                                  C27517 * C27303 * C3551 +
                              ((C6828 - (C6827 + C6826) + C6829) * C73 +
                               (C6830 - (C6831 + C6832) + C6833) * C74) *
                                  C27517 * C27303 * C3552 +
                              ((C6832 + C6831 - C6830 - C6833) * C73 +
                               (C432 * C6515 + C538 * C6413 -
                                (C404 * C2357 + C27518 * C2693) * C6516 -
                                (C404 * C2465 + C27518 * C2807) * C27378) *
                                   C74) *
                                  C27517 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C7401 +
           (C404 * C189 + C27518 * C521) * C7317 -
           (C404 * C1220 + C27518 * C1628) * C7402 -
           (C404 * C1358 + C27518 * C1767) * C7318 +
           (C404 * C1221 + C27518 * C1630) * C7403 +
           (C404 * C1359 + C27518 * C1768) * C7319 -
           (C404 * C7322 + C27518 * C7554) * C7404 -
           (C404 * C7406 + C27518 * C7627) * C7320) *
              C73 +
          (C428 * C7401 + C536 * C7317 - C1648 * C7402 - C1782 * C7318 +
           C1650 * C7403 + C1783 * C7319 -
           (C404 * C7321 + C27518 * C7553) * C7404 -
           (C404 * C7405 + C27518 * C7628) * C7320) *
              C74) *
         C27517 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C26163 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27471 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C26156 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C27280) *
              C27517 * C27518 * C27511 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C26156 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27471 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C26163) +
           (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C27280) *
              C27517 * C27518 * C27512 +
          ((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C26163 +
           (C83 * C1232 + C73 * C1239 + C84 * C1233 + C74 * C1240) * C27471 -
           (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C26156 -
           (C84 * C1235 + C74 * C1241 + C83 * C1233 + C73 * C1240) * C27280) *
              C27517 * C27518 * C8283) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eexy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
               C27517 * C27518 * C27471 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27517 * C27518 * C27280) *
              C27511 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C143 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27303) *
               C27517 * C27518 * C27280 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
               C27517 * C27518 * C27471) *
              C27512 +
          (((C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C143 +
            (C83 * C1295 + C73 * C1301 + C84 * C1296 + C74 * C1302) * C27303) *
               C27517 * C27518 * C27471 -
           ((C84 * C1297 + C74 * C1303 + C83 * C1296 + C73 * C1302) * C27303 +
            (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C143) *
               C27517 * C27518 * C27280) *
              C8283)) /
        (p * q * std::sqrt(p + q));
    d2eexz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C8384 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C27511 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C8385 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27512 +
           (C83 * C1221 + C73 * C1230 + C84 * C1222 + C74 * C1231) * C8386 +
           (C83 * C1359 + C73 * C1365 + C84 * C1360 + C74 * C1366) * C8283) *
              C27517 * C27518 * C27303 * C27471 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C8385 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C27511 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C8384) +
           (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27512 -
           (C84 * C1223 + C74 * C1234 + C83 * C1222 + C73 * C1231) * C8386 -
           (C84 * C1362 + C74 * C1368 + C83 * C1360 + C73 * C1366) * C8283) *
              C27517 * C27518 * C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C26163 +
            (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
            C258 * C27280) *
               C27518 * C73 +
           (C257 * C26163 + C258 * C27471 - C259 * C26156 - C260 * C27280) *
               C27518 * C74) *
              C27511 +
          ((C1440 * C26156 -
            ((C233 * C1227 + C27517 * C1425) * C27471 +
             (C233 * C1220 + C27517 * C1420) * C26163) +
            C1441 * C27280) *
               C27518 * C73 +
           (C2524 * C26156 - (C1441 * C27471 + C1440 * C26163) +
            C2525 * C27280) *
               C27518 * C74) *
              C27512 +
          (((C233 * C1221 + C27517 * C1422) * C26163 +
            (C233 * C1232 + C27517 * C1428) * C27471 - C1442 * C26156 -
            C1443 * C27280) *
               C27518 * C73 +
           (C1442 * C26163 + C1443 * C27471 -
            (C233 * C1223 + C27517 * C1424) * C26156 -
            (C233 * C1235 + C27517 * C1430) * C27280) *
               C27518 * C74) *
              C8283) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eeyy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C27518 * C73 +
            (C302 + C314) * C27518 * C74) *
               C27471 -
           ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) *
               C27280) *
              C27511 +
          (((C1500 + C1508) * C27518 * C73 + (C2577 + C2581) * C27518 * C74) *
               C27280 -
           ((C1508 + C1500) * C27518 * C74 +
            ((C233 * C1294 + C27517 * C1495) * C27303 +
             (C233 * C1220 + C27517 * C1420) * C143) *
                C27518 * C73) *
               C27471) *
              C27512 +
          ((((C233 * C1221 + C27517 * C1422) * C143 +
             (C233 * C1295 + C27517 * C1496) * C27303) *
                C27518 * C73 +
            (C1503 + C1509) * C27518 * C74) *
               C27471 -
           (((C233 * C1297 + C27517 * C1498) * C27303 +
             (C233 * C1223 + C27517 * C1424) * C143) *
                C27518 * C74 +
            (C1509 + C1503) * C27518 * C73) *
               C27280) *
              C8283)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C8384 +
            (C233 * C189 + C27517 * C350) * C27511 -
            (C233 * C1220 + C27517 * C1420) * C8385 -
            (C233 * C1358 + C27517 * C1559) * C27512 +
            (C233 * C1221 + C27517 * C1422) * C8386 +
            (C233 * C1359 + C27517 * C1560) * C8283) *
               C27518 * C73 +
           (C8538 + C8539 - C8540 - C8541 + C8542 + C8543) * C27518 * C74) *
              C27303 * C27471 +
          ((C8540 - (C8539 + C8538) + C8541 - C8542 - C8543) * C27518 * C73 +
           (C2524 * C8385 - (C366 * C27511 + C259 * C8384) + C2642 * C27512 -
            (C233 * C1223 + C27517 * C1424) * C8386 -
            (C233 * C1362 + C27517 * C1564) * C8283) *
               C27518 * C74) *
              C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C26163 +
            (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
            C429 * C27280) *
               C73 +
           (C428 * C26163 + C429 * C27471 - C430 * C26156 - C431 * C27280) *
               C74) *
              C27517 * C27511 +
          ((C1648 * C26156 -
            ((C404 * C1227 + C27518 * C1633) * C27471 +
             (C404 * C1220 + C27518 * C1628) * C26163) +
            C1649 * C27280) *
               C73 +
           (C2700 * C26156 - (C1649 * C27471 + C1648 * C26163) +
            C2701 * C27280) *
               C74) *
              C27517 * C27512 +
          (((C404 * C1221 + C27518 * C1630) * C26163 +
            (C404 * C1232 + C27518 * C1636) * C27471 - C1650 * C26156 -
            C1651 * C27280) *
               C73 +
           (C1650 * C26163 + C1651 * C27471 -
            (C404 * C1223 + C27518 * C1632) * C26156 -
            (C404 * C1235 + C27518 * C1638) * C27280) *
               C74) *
              C27517 * C8283) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eezy[13] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C73 +
            (C473 + C485) * C74) *
               C27517 * C27471 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C27280) *
              C27511 +
          (((C1708 + C1716) * C73 + (C2753 + C2757) * C74) * C27517 * C27280 -
           ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                     (C404 * C1220 + C27518 * C1628) * C143) *
                                        C73) *
               C27517 * C27471) *
              C27512 +
          ((((C404 * C1221 + C27518 * C1630) * C143 +
             (C404 * C1295 + C27518 * C1704) * C27303) *
                C73 +
            (C1711 + C1717) * C74) *
               C27517 * C27471 -
           (((C404 * C1297 + C27518 * C1706) * C27303 +
             (C404 * C1223 + C27518 * C1632) * C143) *
                C74 +
            (C1717 + C1711) * C73) *
               C27517 * C27280) *
              C8283)) /
        (p * q * std::sqrt(p + q));
    d2eezz[13] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C8384 +
                      (C404 * C189 + C27518 * C521) * C27511 -
                      (C404 * C1220 + C27518 * C1628) * C8385 -
                      (C404 * C1358 + C27518 * C1767) * C27512 +
                      (C404 * C1221 + C27518 * C1630) * C8386 +
                      (C404 * C1359 + C27518 * C1768) * C8283) *
                         C73 +
                     (C8694 + C8695 - C8696 - C8697 + C8698 + C8699) * C74) *
                        C27517 * C27303 * C27471 +
                    ((C8696 - (C8695 + C8694) + C8697 - C8698 - C8699) * C73 +
                     (C2700 * C8385 - (C537 * C27511 + C430 * C8384) +
                      C2818 * C27512 - (C404 * C1223 + C27518 * C1632) * C8386 -
                      (C404 * C1362 + C27518 * C1772) * C8283) *
                         C74) *
                        C27517 * C27303 * C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C3556 +
           (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C3551 -
           (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C3557 -
           (C84 * C99 + C74 * C106 + C83 * C97 + C73 * C105) * C3552 +
           (C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C3558 +
           (C83 * C99 + C73 * C106 + C84 * C101 + C74 * C107) * C3553) *
              C27517 * C27518 * C6413 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C3557 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C3551 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C3556) +
           (C83 * C1226 + C73 * C1236 + C84 * C1229 + C74 * C1238) * C3552 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C3558 -
           (C84 * C2359 + C74 * C2360 + C83 * C1229 + C73 * C1238) * C3553) *
              C27517 * C27518 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C4016 +
            (C83 * C96 + C73 * C104 + C84 * C97 + C74 * C105) * C27275) *
               C27517 * C27518 * C6413 -
           ((C84 * C1226 + C74 * C1236 + C83 * C1227 + C73 * C1237) * C27275 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C4016) *
               C27517 * C27518 * C27378) *
              C593 +
          (((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C4016 +
            (C83 * C2890 + C73 * C2894 + C84 * C2891 + C74 * C2895) * C27275) *
               C27517 * C27518 * C27378 -
           ((C84 * C606 + C74 * C616 + C83 * C607 + C73 * C617) * C27275 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C4016) *
               C27517 * C27518 * C6413) *
              C594 +
          (((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C4016 +
            (C83 * C612 + C73 * C619 + C84 * C613 + C74 * C620) * C27275) *
               C27517 * C27518 * C6413 -
           ((C84 * C5933 + C74 * C5937 + C83 * C5934 + C73 * C5938) * C27275 +
            (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C4016) *
               C27517 * C27518 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eexy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C143 +
            (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C27303) *
               C27517 * C27518 * C3551 -
           ((C84 * C146 + C74 * C151 + C83 * C145 + C73 * C150) * C27303 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C143) *
               C27517 * C27518 * C3552 +
           ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C143 +
            (C83 * C146 + C73 * C151 + C84 * C147 + C74 * C152) * C27303) *
               C27517 * C27518 * C3553) *
              C6413 +
          (((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C143 +
            (C83 * C1292 + C73 * C1298 + C84 * C1293 + C74 * C1299) * C27303) *
               C27517 * C27518 * C3552 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C27303 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C143) *
               C27517 * C27518 * C3551 -
           ((C84 * C2411 + C74 * C2412 + C83 * C1293 + C73 * C1299) * C27303 +
            (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C143) *
               C27517 * C27518 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C672 +
           (C83 * C144 + C73 * C149 + C84 * C145 + C74 * C150) * C593 -
           (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C673 -
           (C84 * C675 + C74 * C681 + C83 * C676 + C73 * C682) * C594 +
           (C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C674 +
           (C83 * C677 + C73 * C683 + C84 * C678 + C74 * C684) * C595) *
              C27517 * C27518 * C27275 * C6413 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C673 -
           ((C84 * C1292 + C74 * C1298 + C83 * C1294 + C73 * C1300) * C593 +
            (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C672) +
           (C83 * C2963 + C73 * C2966 + C84 * C2964 + C74 * C2967) * C594 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C674 -
           (C84 * C5989 + C74 * C5991 + C83 * C5990 + C73 * C5992) * C595) *
              C27517 * C27518 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eexz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6515 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6413 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C6516 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C27303 * C3551 +
          ((C83 * C1218 + C73 * C1224 + C84 * C1219 + C74 * C1225) * C6516 -
           ((C84 * C191 + C74 * C196 + C83 * C190 + C73 * C195) * C6413 +
            (C84 * C91 + C74 * C98 + C83 * C90 + C73 * C95) * C6515) +
           (C83 * C1357 + C73 * C1363 + C84 * C1361 + C74 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C3552 +
          ((C83 * C91 + C73 * C98 + C84 * C92 + C74 * C100) * C6515 +
           (C83 * C191 + C73 * C196 + C84 * C192 + C74 * C197) * C6413 -
           (C84 * C2357 + C74 * C2358 + C83 * C1219 + C73 * C1225) * C6516 -
           (C84 * C2465 + C74 * C2466 + C83 * C1361 + C73 * C1367) * C27378) *
              C27517 * C27518 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C83 * C89 + C73 * C94 + C84 * C90 + C74 * C95) * C6515 +
           (C83 * C189 + C73 * C194 + C84 * C190 + C74 * C195) * C6413 -
           (C84 * C1218 + C74 * C1224 + C83 * C1220 + C73 * C1228) * C6516 -
           (C84 * C1357 + C74 * C1363 + C83 * C1358 + C73 * C1364) * C27378) *
              C27517 * C27518 * C593 +
          ((C83 * C2885 + C73 * C2888 + C84 * C2886 + C74 * C2889) * C6516 -
           ((C84 * C737 + C74 * C743 + C83 * C738 + C73 * C744) * C6413 +
            (C84 * C598 + C74 * C604 + C83 * C600 + C73 * C608) * C6515) +
           (C83 * C3035 + C73 * C3038 + C84 * C3036 + C74 * C3039) * C27378) *
              C27517 * C27518 * C594 +
          ((C83 * C601 + C73 * C610 + C84 * C602 + C74 * C611) * C6515 +
           (C83 * C739 + C73 * C745 + C84 * C740 + C74 * C746) * C6413 -
           (C84 * C5931 + C74 * C5935 + C83 * C5932 + C73 * C5936) * C6516 -
           (C84 * C6043 + C74 * C6045 + C83 * C6044 + C73 * C6046) * C27378) *
              C27517 * C27518 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3556 +
                      (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 -
                      C258 * C3552 + C259 * C3558 + C260 * C3553) *
                         C27518 * C73 +
                     (C257 * C3556 + C258 * C3551 - C259 * C3557 -
                      C260 * C3552 + C261 * C3558 + C262 * C3553) *
                         C27518 * C74) *
                        C6413 +
                    ((C1440 * C3557 -
                      ((C233 * C1227 + C27517 * C1425) * C3551 +
                       (C233 * C1220 + C27517 * C1420) * C3556) +
                      C1441 * C3552 - C2524 * C3558 - C2525 * C3553) *
                         C27518 * C73 +
                     (C2524 * C3557 - (C1441 * C3551 + C1440 * C3556) +
                      C2525 * C3552 - (C233 * C2357 + C27517 * C2517) * C3558 -
                      (C233 * C2359 + C27517 * C2518) * C3553) *
                         C27518 * C74) *
                        C27378) *
                   C27303) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C4016 +
                       (C233 * C96 + C27517 * C239) * C27275) *
                          C27518 * C73 +
                      (C257 * C4016 + C258 * C27275) * C27518 * C74) *
                         C6413 -
                     ((C1441 * C27275 + C1440 * C4016) * C27518 * C74 +
                      ((C233 * C1227 + C27517 * C1425) * C27275 +
                       (C233 * C1220 + C27517 * C1420) * C4016) *
                          C27518 * C73) *
                         C27378) *
                        C593 +
                    ((((C233 * C2885 + C27517 * C3107) * C4016 +
                       (C233 * C2890 + C27517 * C3110) * C27275) *
                          C27518 * C73 +
                      (C3118 * C4016 + C3119 * C27275) * C27518 * C74) *
                         C27378 -
                     ((C821 * C27275 + C820 * C4016) * C27518 * C74 +
                      ((C233 * C607 + C27517 * C805) * C27275 +
                       (C233 * C600 + C27517 * C800) * C4016) *
                          C27518 * C73) *
                         C6413) *
                        C594 +
                    ((((C233 * C601 + C27517 * C802) * C4016 +
                       (C233 * C612 + C27517 * C808) * C27275) *
                          C27518 * C73 +
                      (C822 * C4016 + C823 * C27275) * C27518 * C74) *
                         C6413 -
                     (((C233 * C5933 + C27517 * C6099) * C27275 +
                       (C233 * C5931 + C27517 * C6097) * C4016) *
                          C27518 * C74 +
                      ((C233 * C5934 + C27517 * C6100) * C27275 +
                       (C233 * C5932 + C27517 * C6098) * C4016) *
                          C27518 * C73) *
                         C27378) *
                        C595)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C27518 * C73 +
            (C302 + C314) * C27518 * C74) *
               C3551 -
           ((C315 + C307) * C27518 * C74 + (C314 + C302) * C27518 * C73) *
               C3552 +
           ((C307 + C315) * C27518 * C73 + (C308 + C316) * C27518 * C74) *
               C3553) *
              C6413 +
          (((C1500 + C1508) * C27518 * C73 + (C2577 + C2581) * C27518 * C74) *
               C3552 -
           ((C1508 + C1500) * C27518 * C74 +
            ((C233 * C1294 + C27517 * C1495) * C27303 +
             (C233 * C1220 + C27517 * C1420) * C143) *
                C27518 * C73) *
               C3551 -
           (((C233 * C2411 + C27517 * C2575) * C27303 +
             (C233 * C2357 + C27517 * C2517) * C143) *
                C27518 * C74 +
            (C2581 + C2577) * C27518 * C73) *
               C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C27518 * C73 +
           (C880 + C881 - C882 - C890 + C885 + C891) * C27518 * C74) *
              C27275 * C6413 +
          (((C233 * C2885 + C27517 * C3107) * C673 -
            ((C233 * C1294 + C27517 * C1495) * C593 +
             (C233 * C1220 + C27517 * C1420) * C672) +
            (C233 * C2963 + C27517 * C3185) * C594 -
            (C233 * C5932 + C27517 * C6098) * C674 -
            (C233 * C5990 + C27517 * C6151) * C595) *
               C27518 * C73 +
           (C3118 * C673 - (C1506 * C593 + C1440 * C672) + C3194 * C594 -
            (C233 * C5931 + C27517 * C6097) * C674 -
            (C233 * C5989 + C27517 * C6152) * C595) *
               C27518 * C74) *
              C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 -
            (C233 * C1220 + C27517 * C1420) * C6516 -
            (C233 * C1358 + C27517 * C1559) * C27378) *
               C27518 * C73 +
           (C6668 + C6669 - C6670 - C6671) * C27518 * C74) *
              C27303 * C3551 +
          ((C6670 - (C6669 + C6668) + C6671) * C27518 * C73 +
           (C6672 - (C6673 + C6674) + C6675) * C27518 * C74) *
              C27303 * C3552 +
          ((C6674 + C6673 - C6672 - C6675) * C27518 * C73 +
           (C261 * C6515 + C367 * C6413 -
            (C233 * C2357 + C27517 * C2517) * C6516 -
            (C233 * C2465 + C27517 * C2631) * C27378) *
               C27518 * C74) *
              C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 -
            (C233 * C1220 + C27517 * C1420) * C6516 -
            (C233 * C1358 + C27517 * C1559) * C27378) *
               C27518 * C73 +
           (C6668 + C6669 - C6670 - C6671) * C27518 * C74) *
              C593 +
          (((C233 * C2885 + C27517 * C3107) * C6516 -
            ((C233 * C738 + C27517 * C942) * C6413 +
             (C233 * C600 + C27517 * C800) * C6515) +
            (C233 * C3035 + C27517 * C3261) * C27378) *
               C27518 * C73 +
           (C3118 * C6516 - (C954 * C6413 + C820 * C6515) + C3270 * C27378) *
               C27518 * C74) *
              C594 +
          (((C233 * C601 + C27517 * C802) * C6515 +
            (C233 * C739 + C27517 * C943) * C6413 -
            (C233 * C5932 + C27517 * C6098) * C6516 -
            (C233 * C6044 + C27517 * C6203) * C27378) *
               C27518 * C73 +
           (C822 * C6515 + C955 * C6413 -
            (C233 * C5931 + C27517 * C6097) * C6516 -
            (C233 * C6043 + C27517 * C6204) * C27378) *
               C27518 * C74) *
              C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[14] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C3556 +
                      (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 -
                      C429 * C3552 + C430 * C3558 + C431 * C3553) *
                         C73 +
                     (C428 * C3556 + C429 * C3551 - C430 * C3557 -
                      C431 * C3552 + C432 * C3558 + C433 * C3553) *
                         C74) *
                        C27517 * C6413 +
                    ((C1648 * C3557 -
                      ((C404 * C1227 + C27518 * C1633) * C3551 +
                       (C404 * C1220 + C27518 * C1628) * C3556) +
                      C1649 * C3552 - C2700 * C3558 - C2701 * C3553) *
                         C73 +
                     (C2700 * C3557 - (C1649 * C3551 + C1648 * C3556) +
                      C2701 * C3552 - (C404 * C2357 + C27518 * C2693) * C3558 -
                      (C404 * C2359 + C27518 * C2694) * C3553) *
                         C74) *
                        C27517 * C27378) *
                   C27303) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C4016 +
                       (C404 * C96 + C27518 * C410) * C27275) *
                          C73 +
                      (C428 * C4016 + C429 * C27275) * C74) *
                         C27517 * C6413 -
                     ((C1649 * C27275 + C1648 * C4016) * C74 +
                      ((C404 * C1227 + C27518 * C1633) * C27275 +
                       (C404 * C1220 + C27518 * C1628) * C4016) *
                          C73) *
                         C27517 * C27378) *
                        C593 +
                    ((((C404 * C2885 + C27518 * C3337) * C4016 +
                       (C404 * C2890 + C27518 * C3340) * C27275) *
                          C73 +
                      (C3348 * C4016 + C3349 * C27275) * C74) *
                         C27517 * C27378 -
                     ((C1029 * C27275 + C1028 * C4016) * C74 +
                      ((C404 * C607 + C27518 * C1013) * C27275 +
                       (C404 * C600 + C27518 * C1008) * C4016) *
                          C73) *
                         C27517 * C6413) *
                        C594 +
                    ((((C404 * C601 + C27518 * C1010) * C4016 +
                       (C404 * C612 + C27518 * C1016) * C27275) *
                          C73 +
                      (C1030 * C4016 + C1031 * C27275) * C74) *
                         C27517 * C6413 -
                     (((C404 * C5933 + C27518 * C6257) * C27275 +
                       (C404 * C5931 + C27518 * C6255) * C4016) *
                          C74 +
                      ((C404 * C5934 + C27518 * C6258) * C27275 +
                       (C404 * C5932 + C27518 * C6256) * C4016) *
                          C73) *
                         C27517 * C27378) *
                        C595)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C73 +
            (C473 + C485) * C74) *
               C27517 * C3551 -
           ((C486 + C478) * C74 + (C485 + C473) * C73) * C27517 * C3552 +
           ((C478 + C486) * C73 + (C479 + C487) * C74) * C27517 * C3553) *
              C6413 +
          (((C1708 + C1716) * C73 + (C2753 + C2757) * C74) * C27517 * C3552 -
           ((C1716 + C1708) * C74 + ((C404 * C1294 + C27518 * C1703) * C27303 +
                                     (C404 * C1220 + C27518 * C1628) * C143) *
                                        C73) *
               C27517 * C3551 -
           (((C404 * C2411 + C27518 * C2751) * C27303 +
             (C404 * C2357 + C27518 * C2693) * C143) *
                C74 +
            (C2757 + C2753) * C73) *
               C27517 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C672 +
            (C404 * C144 + C27518 * C467) * C593 -
            (C404 * C600 + C27518 * C1008) * C673 -
            (C404 * C676 + C27518 * C1081) * C594 +
            (C404 * C601 + C27518 * C1010) * C674 +
            (C404 * C677 + C27518 * C1082) * C595) *
               C73 +
           (C1088 + C1089 - C1090 - C1098 + C1093 + C1099) * C74) *
              C27517 * C27275 * C6413 +
          (((C404 * C2885 + C27518 * C3337) * C673 -
            ((C404 * C1294 + C27518 * C1703) * C593 +
             (C404 * C1220 + C27518 * C1628) * C672) +
            (C404 * C2963 + C27518 * C3415) * C594 -
            (C404 * C5932 + C27518 * C6256) * C674 -
            (C404 * C5990 + C27518 * C6309) * C595) *
               C73 +
           (C3348 * C673 - (C1714 * C593 + C1648 * C672) + C3424 * C594 -
            (C404 * C5931 + C27518 * C6255) * C674 -
            (C404 * C5989 + C27518 * C6310) * C595) *
               C74) *
              C27517 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eezz[14] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C73 +
           (C6826 + C6827 - C6828 - C6829) * C74) *
              C27517 * C27303 * C3551 +
          ((C6828 - (C6827 + C6826) + C6829) * C73 +
           (C6830 - (C6831 + C6832) + C6833) * C74) *
              C27517 * C27303 * C3552 +
          ((C6832 + C6831 - C6830 - C6833) * C73 +
           (C432 * C6515 + C538 * C6413 -
            (C404 * C2357 + C27518 * C2693) * C6516 -
            (C404 * C2465 + C27518 * C2807) * C27378) *
               C74) *
              C27517 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C73 +
           (C6826 + C6827 - C6828 - C6829) * C74) *
              C27517 * C593 +
          (((C404 * C2885 + C27518 * C3337) * C6516 -
            ((C404 * C738 + C27518 * C1150) * C6413 +
             (C404 * C600 + C27518 * C1008) * C6515) +
            (C404 * C3035 + C27518 * C3491) * C27378) *
               C73 +
           (C3348 * C6516 - (C1162 * C6413 + C1028 * C6515) + C3500 * C27378) *
               C74) *
              C27517 * C594 +
          (((C404 * C601 + C27518 * C1010) * C6515 +
            (C404 * C739 + C27518 * C1151) * C6413 -
            (C404 * C5932 + C27518 * C6256) * C6516 -
            (C404 * C6044 + C27518 * C6361) * C27378) *
               C73 +
           (C1030 * C6515 + C1163 * C6413 -
            (C404 * C5931 + C27518 * C6255) * C6516 -
            (C404 * C6043 + C27518 * C6362) * C27378) *
               C74) *
              C27517 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1840 +
            (C9186 * C96 + C27516 * C104) * C27505 -
            (C9186 * C90 + C27516 * C95) * C1841 -
            (C9186 * C97 + C27516 * C105) * C27506 +
            (C9186 * C91 + C27516 * C98) * C1842 +
            (C9186 * C99 + C27516 * C106) * C1837) *
               C9184 +
           (C10512 + C10513 - C10514 - C10515 + C10522 + C10523) * C9185) *
              C27518 * C27314 * C27481 +
          ((C10514 - (C10513 + C10512) + C10515 - C10522 - C10523) * C9184 +
           (C9532 * C1841 - (C9533 * C27505 + C9534 * C1840) + C9535 * C27506 -
            (C9186 * C603 + C27516 * C614) * C1842 -
            (C9186 * C615 + C27516 * C621) * C1837) *
               C9185) *
              C27518 * C27314 * C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1897 +
            (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
            C9602 * C27352) *
               C9184 +
           (C9528 * C1897 + C9602 * C27481 - C9534 * C1898 - C9603 * C27352) *
               C9185) *
              C27518 * C27505 +
          ((C9530 * C1898 -
            ((C9186 * C145 + C27516 * C150) * C27481 +
             (C9186 * C90 + C27516 * C95) * C1897) +
            C9604 * C27352) *
               C9184 +
           (C9532 * C1898 - (C9604 * C27481 + C9530 * C1897) + C9605 * C27352) *
               C9185) *
              C27518 * C27506 +
          (((C9186 * C91 + C27516 * C98) * C1897 +
            (C9186 * C146 + C27516 * C151) * C27481 - C10520 * C1898 -
            C10576 * C27352) *
               C9184 +
           (C10520 * C1897 + C10576 * C27481 -
            (C9186 * C603 + C27516 * C614) * C1898 -
            (C9186 * C680 + C27516 * C686) * C27352) *
               C9185) *
              C27518 * C1837) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eexz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C27481 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 *
               C27352) *
              C27505 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 *
               C27352 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C27481) *
              C27506 +
          ((((C9186 * C91 + C27516 * C98) * C188 +
             (C9186 * C191 + C27516 * C196) * C27314) *
                C9184 +
            (C10627 + C10631) * C9185) *
               C27518 * C27481 -
           (((C9186 * C742 + C27516 * C748) * C27314 +
             (C9186 * C603 + C27516 * C614) * C188) *
                C9185 +
            (C10631 + C10627) * C9184) *
               C27518 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1840 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C27505 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C1841 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C27506 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C1842 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C1837) *
              C27518 * C27516 * C27314 * C27481 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C1841 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27505 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C1840) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
               C27506 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C1842 -
           (C9290 * C615 + C9185 * C810 + C9289 * C609 + C9184 * C807) *
               C1837) *
              C27518 * C27516 * C27314 * C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1897 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27481 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C1898 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27352) *
              C27518 * C27516 * C27505 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C1898 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27481 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C1897) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
               C27352) *
              C27518 * C27516 * C27506 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C1897 +
           (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
               C27481 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C1898 -
           (C9290 * C680 + C9185 * C878 + C9289 * C679 + C9184 * C877) *
               C27352) *
              C27518 * C27516 * C1837) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eeyz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C27481 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C27352) *
              C27505 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C27352 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C27481) *
              C27506 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
                C27314) *
               C27518 * C27516 * C27481 -
           ((C9290 * C742 + C9185 * C946 + C9289 * C741 + C9184 * C945) *
                C27314 +
            (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) *
                C188) *
               C27518 * C27516 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eezx[15] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C1840 +
                      (C404 * C96 + C27518 * C410) * C27505 - C428 * C1841 -
                      C429 * C27506 + C430 * C1842 + C431 * C1837) *
                         C27516 * C9184 +
                     (C10832 + C10833 - C10834 - C10835 + C10836 + C10837) *
                         C27516 * C9185) *
                        C27314 * C27481 +
                    ((C10834 - (C10833 + C10832) + C10835 - C10836 - C10837) *
                         C27516 * C9184 +
                     (C1030 * C1841 - (C9890 * C27505 + C9891 * C1840) +
                      C1031 * C27506 - (C404 * C603 + C27518 * C1012) * C1842 -
                      (C404 * C615 + C27518 * C1018) * C1837) *
                         C27516 * C9185) *
                        C27314 * C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1897 +
            (C404 * C144 + C27518 * C467) * C27481 - C9888 * C1898 -
            C9950 * C27352) *
               C27516 * C9184 +
           (C9888 * C1897 + C9950 * C27481 - C9891 * C1898 - C9951 * C27352) *
               C27516 * C9185) *
              C27505 +
          ((C2241 - (C2240 + C2239) + C2242) * C27516 * C9184 +
           (C1030 * C1898 - (C1096 * C27481 + C1028 * C1897) + C1097 * C27352) *
               C27516 * C9185) *
              C27506 +
          ((C2245 + C2244 - C2243 - C2249) * C27516 * C9184 +
           (C2186 * C1897 + C2248 * C27481 -
            (C404 * C603 + C27518 * C1012) * C1898 -
            (C404 * C680 + C27518 * C1086) * C27352) *
               C27516 * C9185) *
              C1837) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eezz[15] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C27481 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C27352) *
              C27505 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C27352 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C27481) *
              C27506 +
          (((C532 + C540) * C27516 * C9184 + (C2301 + C2305) * C27516 * C9185) *
               C27481 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C27516 * C9185 +
            (C2305 + C2301) * C27516 * C9184) *
               C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eexx[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C596 +
                       (C9186 * C96 + C27516 * C104) * C591 -
                       (C9186 * C90 + C27516 * C95) * C597 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C9184 +
                      (C9536 + C9537 - C9538 - C9539) * C9185) *
                         C27518 * C27482 +
                     (((C9186 * C1218 + C27516 * C1224) * C597 -
                       ((C9186 * C1227 + C27516 * C1237) * C591 +
                        (C9186 * C1220 + C27516 * C1228) * C596) +
                       (C9186 * C1226 + C27516 * C1236) * C27280) *
                          C9184 +
                      (C11466 - (C11467 + C11468) + C11469) * C9185) *
                         C27518 * C27378) *
                        C27481 +
                    (((C9538 - (C9537 + C9536) + C9539) * C9184 +
                      (C9540 - (C9541 + C9542) + C9543) * C9185) *
                         C27518 * C27482 +
                     ((C11468 + C11467 - C11466 - C11469) * C9184 +
                      ((C9186 * C5932 + C27516 * C5936) * C596 +
                       (C9186 * C5934 + C27516 * C5938) * C591 -
                       (C9186 * C5931 + C27516 * C5935) * C597 -
                       (C9186 * C5933 + C27516 * C5937) * C27280) *
                          C9185) *
                         C27518 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C1897 +
             (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
             C9602 * C27352) *
                C9184 +
            (C9528 * C1897 + C9602 * C27481 - C9534 * C1898 - C9603 * C27352) *
                C9185) *
               C27518 * C591 +
           ((C9530 * C1898 -
             ((C9186 * C145 + C27516 * C150) * C27481 +
              (C9186 * C90 + C27516 * C95) * C1897) +
             C9604 * C27352) *
                C9184 +
            (C9532 * C1898 - (C9604 * C27481 + C9530 * C1897) +
             C9605 * C27352) *
                C9185) *
               C27518 * C27280) *
              C27482 +
          (((C11464 * C1898 -
             ((C9186 * C1294 + C27516 * C1300) * C27481 +
              (C9186 * C1220 + C27516 * C1228) * C1897) +
             C11540 * C27352) *
                C9184 +
            ((C9186 * C5932 + C27516 * C5936) * C1898 -
             (C11540 * C27481 + C11464 * C1897) +
             (C9186 * C5990 + C27516 * C5992) * C27352) *
                C9185) *
               C27518 * C591 +
           (((C9186 * C1218 + C27516 * C1224) * C1897 +
             (C9186 * C1292 + C27516 * C1298) * C27481 - C11462 * C1898 -
             C11541 * C27352) *
                C9184 +
            (C11462 * C1897 + C11541 * C27481 -
             (C9186 * C5931 + C27516 * C5935) * C1898 -
             (C9186 * C5989 + C27516 * C5991) * C27352) *
                C9185) *
               C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C2463 +
                       (C9186 * C189 + C27516 * C194) * C27482 -
                       (C9186 * C1220 + C27516 * C1228) * C2464 -
                       (C9186 * C1358 + C27516 * C1364) * C27378) *
                          C9184 +
                      (C11608 + C11609 - C11610 - C11620) * C9185) *
                         C27518 * C27481 +
                     ((C11610 - (C11609 + C11608) + C11620) * C9184 +
                      ((C9186 * C5932 + C27516 * C5936) * C2464 -
                       (C9669 * C27482 + C9534 * C2463) +
                       (C9186 * C6044 + C27516 * C6046) * C27378) *
                          C9185) *
                         C27518 * C27352) *
                        C591 +
                    ((((C9186 * C1218 + C27516 * C1224) * C2464 -
                       ((C9186 * C190 + C27516 * C195) * C27482 +
                        (C9186 * C90 + C27516 * C95) * C2463) +
                       (C9186 * C1357 + C27516 * C1363) * C27378) *
                          C9184 +
                      (C11613 - (C11614 + C11615) + C11621) * C9185) *
                         C27518 * C27481 +
                     ((C11615 + C11614 - C11613 - C11621) * C9184 +
                      (C9532 * C2463 + C9671 * C27482 -
                       (C9186 * C5931 + C27516 * C5935) * C2464 -
                       (C9186 * C6043 + C27516 * C6045) * C27378) *
                          C9185) *
                         C27518 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C596 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C591 -
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C597 -
            (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
                C27280) *
               C27518 * C27516 * C27482 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C597 -
            ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                 C591 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C596) +
            (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C27481 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C597 -
            ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                 C591 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C596) +
            (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
                C27280) *
               C27518 * C27516 * C27482 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C596 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C591 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C597 -
            (C9290 * C5933 + C9185 * C6099 + C9289 * C2891 + C9184 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1897 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27481 -
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C1898 -
            (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
                C27352) *
               C27518 * C27516 * C591 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C1898 -
            ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                 C27481 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C1897) +
            (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
                C27352) *
               C27518 * C27516 * C27280) *
              C27482 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C1898 -
            ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                 C27481 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C1897) +
            (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
                C27352) *
               C27518 * C27516 * C591 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C1897 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27481 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C1898 -
            (C9290 * C5989 + C9185 * C6152 + C9289 * C2964 + C9184 * C3186) *
                C27352) *
               C27518 * C27516 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C2463 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27482 -
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C2464 -
            (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
                C27378) *
               C27518 * C27516 * C27481 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C2464 -
            ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                 C27482 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C2463) +
            (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
                C27378) *
               C27518 * C27516 * C27352) *
              C591 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C2464 -
            ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                 C27482 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C2463) +
            (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
                C27378) *
               C27518 * C27516 * C27481 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C2463 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27482 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C2464 -
            (C9290 * C6043 + C9185 * C6204 + C9289 * C3036 + C9184 * C3262) *
                C27378) *
               C27518 * C27516 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C596 +
                       (C404 * C96 + C27518 * C410) * C591 - C428 * C597 -
                       C429 * C27280) *
                          C27516 * C9184 +
                      (C9892 + C9893 - C9880 - C9881) * C27516 * C9185) *
                         C27482 +
                     ((C1648 * C597 -
                       ((C404 * C1227 + C27518 * C1633) * C591 +
                        (C404 * C1220 + C27518 * C1628) * C596) +
                       C1649 * C27280) *
                          C27516 * C9184 +
                      (C11886 - (C11894 + C11895) + C11891) * C27516 * C9185) *
                         C27378) *
                        C27481 +
                    (((C9880 - (C9893 + C9892) + C9881) * C27516 * C9184 +
                      (C9882 - (C9894 + C9895) + C9887) * C27516 * C9185) *
                         C27482 +
                     ((C11895 + C11894 - C11886 - C11891) * C27516 * C9184 +
                      ((C404 * C5932 + C27518 * C6256) * C596 +
                       (C404 * C5934 + C27518 * C6258) * C591 -
                       (C404 * C5931 + C27518 * C6255) * C597 -
                       (C404 * C5933 + C27518 * C6257) * C27280) *
                          C27516 * C9185) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[16] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C1897 +
             (C404 * C144 + C27518 * C467) * C27481 - C9888 * C1898 -
             C9950 * C27352) *
                C27516 * C9184 +
            (C9888 * C1897 + C9950 * C27481 - C9891 * C1898 - C9951 * C27352) *
                C27516 * C9185) *
               C591 +
           ((C2241 - (C2240 + C2239) + C2242) * C27516 * C9184 +
            (C1030 * C1898 - (C1096 * C27481 + C1028 * C1897) +
             C1097 * C27352) *
                C27516 * C9185) *
               C27280) *
              C27482 +
          (((C11893 * C1898 -
             ((C404 * C1294 + C27518 * C1703) * C27481 +
              (C404 * C1220 + C27518 * C1628) * C1897) +
             C11964 * C27352) *
                C27516 * C9184 +
            ((C404 * C5932 + C27518 * C6256) * C1898 -
             (C11964 * C27481 + C11893 * C1897) +
             (C404 * C5990 + C27518 * C6309) * C27352) *
                C27516 * C9185) *
               C591 +
           ((C3421 + C3420 - C3419 - C3425) * C27516 * C9184 +
            (C3348 * C1897 + C3424 * C27481 -
             (C404 * C5931 + C27518 * C6255) * C1898 -
             (C404 * C5989 + C27518 * C6310) * C27352) *
                C27516 * C9185) *
               C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[16] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C2463 +
                       (C404 * C189 + C27518 * C521) * C27482 -
                       (C404 * C1220 + C27518 * C1628) * C2464 -
                       (C404 * C1358 + C27518 * C1767) * C27378) *
                          C27516 * C9184 +
                      (C12031 + C12032 - C12033 - C12037) * C27516 * C9185) *
                         C27481 +
                     ((C12033 - (C12032 + C12031) + C12037) * C27516 * C9184 +
                      ((C404 * C5932 + C27518 * C6256) * C2464 -
                       (C10009 * C27482 + C9891 * C2463) +
                       (C404 * C6044 + C27518 * C6361) * C27378) *
                          C27516 * C9185) *
                         C27352) *
                        C591 +
                    (((C2811 - (C2810 + C2809) + C2812) * C27516 * C9184 +
                      (C3495 - (C3496 + C3497) + C3501) * C27516 * C9185) *
                         C27481 +
                     ((C3497 + C3496 - C3495 - C3501) * C27516 * C9184 +
                      (C1030 * C2463 + C1163 * C27482 -
                       (C404 * C5931 + C27518 * C6255) * C2464 -
                       (C404 * C6043 + C27518 * C6362) * C27378) *
                          C27516 * C9185) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[17] +=
        (-std::pow(Pi, 2.5) * ((((C9186 * C89 + C27516 * C94) * C596 +
                                 (C9186 * C96 + C27516 * C104) * C591 -
                                 (C9186 * C90 + C27516 * C95) * C597 -
                                 (C9186 * C97 + C27516 * C105) * C27280) *
                                    C9184 +
                                (C9536 + C9537 - C9538 - C9539) * C9185) *
                                   C27518 * C27314 * C593 +
                               ((C9538 - (C9537 + C9536) + C9539) * C9184 +
                                (C9540 - (C9541 + C9542) + C9543) * C9185) *
                                   C27518 * C27314 * C594 +
                               ((C9542 + C9541 - C9540 - C9543) * C9184 +
                                ((C9186 * C4018 + C27516 * C4022) * C596 +
                                 (C9186 * C4020 + C27516 * C4024) * C591 -
                                 (C9186 * C4017 + C27516 * C4021) * C597 -
                                 (C9186 * C4019 + C27516 * C4023) * C27280) *
                                    C9185) *
                                   C27518 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27516 * C94) * C85 +
           (C9186 * C96 + C27516 * C104) * C75 -
           (C9186 * C90 + C27516 * C95) * C86 -
           (C9186 * C97 + C27516 * C105) * C76 +
           (C9186 * C91 + C27516 * C98) * C87 +
           (C9186 * C99 + C27516 * C106) * C77 -
           (C9186 * C92 + C27516 * C100) * C88 -
           (C9186 * C101 + C27516 * C107) * C78) *
              C9184 +
          ((C9186 * C600 + C27516 * C608) * C85 +
           (C9186 * C607 + C27516 * C617) * C75 -
           (C9186 * C598 + C27516 * C604) * C86 -
           (C9186 * C606 + C27516 * C616) * C76 +
           (C9186 * C599 + C27516 * C605) * C87 +
           (C9186 * C609 + C27516 * C618) * C77 -
           (C9186 * C1843 + C27516 * C1844) * C88 -
           (C9186 * C1845 + C27516 * C1846) * C78) *
              C9185) *
         C27518 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C596 +
            (C9186 * C96 + C27516 * C104) * C591 -
            (C9186 * C90 + C27516 * C95) * C597 -
            (C9186 * C97 + C27516 * C105) * C27280) *
               C9184 +
           (C9536 + C9537 - C9538 - C9539) * C9185) *
              C27518 * C1215 +
          (((C9186 * C1218 + C27516 * C1224) * C597 -
            ((C9186 * C1227 + C27516 * C1237) * C591 +
             (C9186 * C1220 + C27516 * C1228) * C596) +
            (C9186 * C1226 + C27516 * C1236) * C27280) *
               C9184 +
           ((C9186 * C2886 + C27516 * C2889) * C597 -
            ((C9186 * C2890 + C27516 * C2894) * C591 +
             (C9186 * C2885 + C27516 * C2888) * C596) +
            (C9186 * C2891 + C27516 * C2895) * C27280) *
               C9185) *
              C27518 * C1216 +
          (((C9186 * C1221 + C27516 * C1230) * C596 +
            (C9186 * C1232 + C27516 * C1239) * C591 -
            (C9186 * C1222 + C27516 * C1231) * C597 -
            (C9186 * C1233 + C27516 * C1240) * C27280) *
               C9184 +
           ((C9186 * C4376 + C27516 * C4380) * C596 +
            (C9186 * C4378 + C27516 * C4382) * C591 -
            (C9186 * C4375 + C27516 * C4379) * C597 -
            (C9186 * C4377 + C27516 * C4381) * C27280) *
               C9185) *
              C27518 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eexy[17] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C672 +
                      (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
                      C9602 * C594 + C9534 * C674 + C9603 * C595) *
                         C9184 +
                     (C9528 * C672 + C9602 * C593 - C9534 * C673 -
                      C9603 * C594 + (C9186 * C4018 + C27516 * C4022) * C674 +
                      (C9186 * C4064 + C27516 * C4066) * C595) *
                         C9185) *
                        C27518 * C591 +
                    ((C9530 * C673 -
                      ((C9186 * C145 + C27516 * C150) * C593 +
                       (C9186 * C90 + C27516 * C95) * C672) +
                      C9604 * C594 - C9532 * C674 - C9605 * C595) *
                         C9184 +
                     (C9532 * C673 - (C9604 * C593 + C9530 * C672) +
                      C9605 * C594 - (C9186 * C4017 + C27516 * C4021) * C674 -
                      (C9186 * C4063 + C27516 * C4065) * C595) *
                         C9185) *
                        C27518 * C27280) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C143 +
                      (C9186 * C144 + C27516 * C149) * C27303) *
                         C9184 +
                     ((C9186 * C600 + C27516 * C608) * C143 +
                      (C9186 * C676 + C27516 * C682) * C27303) *
                         C9185) *
                        C27518 * C75 -
                    (((C9186 * C675 + C27516 * C681) * C27303 +
                      (C9186 * C598 + C27516 * C604) * C143) *
                         C9185 +
                     ((C9186 * C145 + C27516 * C150) * C27303 +
                      (C9186 * C90 + C27516 * C95) * C143) *
                         C9184) *
                        C27518 * C76 +
                    (((C9186 * C91 + C27516 * C98) * C143 +
                      (C9186 * C146 + C27516 * C151) * C27303) *
                         C9184 +
                     ((C9186 * C599 + C27516 * C605) * C143 +
                      (C9186 * C679 + C27516 * C685) * C27303) *
                         C9185) *
                        C27518 * C77 -
                    (((C9186 * C1899 + C27516 * C1900) * C27303 +
                      (C9186 * C1843 + C27516 * C1844) * C143) *
                         C9185 +
                     ((C9186 * C147 + C27516 * C152) * C27303 +
                      (C9186 * C92 + C27516 * C100) * C143) *
                         C9184) *
                        C27518 * C78) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C9184 +
                      (C9528 * C143 + C9602 * C27303) * C9185) *
                         C27518 * C591 -
                     ((C9604 * C27303 + C9530 * C143) * C9185 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C9184) *
                         C27518 * C27280) *
                        C1215 +
                    ((((C9186 * C1218 + C27516 * C1224) * C143 +
                       (C9186 * C1292 + C27516 * C1298) * C27303) *
                          C9184 +
                      ((C9186 * C2886 + C27516 * C2889) * C143 +
                       (C9186 * C2964 + C27516 * C2967) * C27303) *
                          C9185) *
                         C27518 * C27280 -
                     (((C9186 * C2963 + C27516 * C2966) * C27303 +
                       (C9186 * C2885 + C27516 * C2888) * C143) *
                          C9185 +
                      ((C9186 * C1294 + C27516 * C1300) * C27303 +
                       (C9186 * C1220 + C27516 * C1228) * C143) *
                          C9184) *
                         C27518 * C591) *
                        C1216 +
                    ((((C9186 * C1221 + C27516 * C1230) * C143 +
                       (C9186 * C1295 + C27516 * C1301) * C27303) *
                          C9184 +
                      ((C9186 * C4376 + C27516 * C4380) * C143 +
                       (C9186 * C4434 + C27516 * C4436) * C27303) *
                          C9185) *
                         C27518 * C591 -
                     (((C9186 * C4433 + C27516 * C4435) * C27303 +
                       (C9186 * C4375 + C27516 * C4379) * C143) *
                          C9185 +
                      ((C9186 * C1296 + C27516 * C1302) * C27303 +
                       (C9186 * C1222 + C27516 * C1231) * C143) *
                          C9184) *
                         C27518 * C27280) *
                        C1217)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[17] +=
        (-std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C593 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 * C594 +
           ((C9661 + C9673) * C9184 +
            ((C9186 * C4018 + C27516 * C4022) * C188 +
             (C9186 * C4102 + C27516 * C4104) * C27314) *
                C9185) *
               C27518 * C595) *
              C591 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 * C594 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C593 -
           (((C9186 * C4101 + C27516 * C4103) * C27314 +
             (C9186 * C4017 + C27516 * C4021) * C188) *
                C9185 +
            (C9675 + C9665) * C9184) *
               C27518 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27516 * C94) * C188 +
                                (C9186 * C189 + C27516 * C194) * C27314) *
                                   C9184 +
                               ((C9186 * C600 + C27516 * C608) * C188 +
                                (C9186 * C738 + C27516 * C744) * C27314) *
                                   C9185) *
                                  C27518 * C27303 * C75 -
                              (((C9186 * C737 + C27516 * C743) * C27314 +
                                (C9186 * C598 + C27516 * C604) * C188) *
                                   C9185 +
                               ((C9186 * C190 + C27516 * C195) * C27314 +
                                (C9186 * C90 + C27516 * C95) * C188) *
                                   C9184) *
                                  C27518 * C27303 * C76 +
                              (((C9186 * C91 + C27516 * C98) * C188 +
                                (C9186 * C191 + C27516 * C196) * C27314) *
                                   C9184 +
                               ((C9186 * C599 + C27516 * C605) * C188 +
                                (C9186 * C741 + C27516 * C747) * C27314) *
                                   C9185) *
                                  C27518 * C27303 * C77 -
                              (((C9186 * C1951 + C27516 * C1952) * C27314 +
                                (C9186 * C1843 + C27516 * C1844) * C188) *
                                   C9185 +
                               ((C9186 * C192 + C27516 * C197) * C27314 +
                                (C9186 * C92 + C27516 * C100) * C188) *
                                   C9184) *
                                  C27518 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1354 +
            (C9186 * C189 + C27516 * C194) * C1215 -
            (C9186 * C1220 + C27516 * C1228) * C1355 -
            (C9186 * C1358 + C27516 * C1364) * C1216 +
            (C9186 * C1221 + C27516 * C1230) * C1356 +
            (C9186 * C1359 + C27516 * C1365) * C1217) *
               C9184 +
           (C9528 * C1354 + C9668 * C1215 -
            (C9186 * C2885 + C27516 * C2888) * C1355 -
            (C9186 * C3035 + C27516 * C3038) * C1216 +
            (C9186 * C4376 + C27516 * C4380) * C1356 +
            (C9186 * C4488 + C27516 * C4490) * C1217) *
               C9185) *
              C27518 * C27303 * C591 +
          (((C9186 * C1218 + C27516 * C1224) * C1355 -
            ((C9186 * C190 + C27516 * C195) * C1215 +
             (C9186 * C90 + C27516 * C95) * C1354) +
            (C9186 * C1357 + C27516 * C1363) * C1216 -
            (C9186 * C1222 + C27516 * C1231) * C1356 -
            (C9186 * C1360 + C27516 * C1366) * C1217) *
               C9184 +
           ((C9186 * C2886 + C27516 * C2889) * C1355 -
            (C9670 * C1215 + C9530 * C1354) +
            (C9186 * C3036 + C27516 * C3039) * C1216 -
            (C9186 * C4375 + C27516 * C4379) * C1356 -
            (C9186 * C4487 + C27516 * C4489) * C1217) *
               C9185) *
              C27518 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[17] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C591 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
               C27280) *
              C27518 * C27516 * C27314 * C593 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C597 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) * C591 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C596) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C594 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C596 +
           (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
               C591 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C597 -
           (C9290 * C4019 + C9185 * C4141 + C9289 * C613 + C9184 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C85 +
          (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C75 -
          (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C86 -
          (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C76 +
          (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C87 +
          (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C77 -
          (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) * C88 -
          (C9290 * C1845 + C9185 * C2004 + C9289 * C101 + C9184 * C242) * C78) *
         C27518 * C27516 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C591 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
               C27280) *
              C27518 * C27516 * C1215 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C597 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C591 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C596) +
           (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
               C27280) *
              C27518 * C27516 * C1216 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C596 +
           (C9289 * C1232 + C9184 * C1428 + C9290 * C4378 + C9185 * C4544) *
               C591 -
           (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
               C597 -
           (C9290 * C4377 + C9185 * C4543 + C9289 * C1233 + C9184 * C1429) *
               C27280) *
              C27518 * C27516 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eeyy[17] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C672 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C593 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C673 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C594 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C674 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C595) *
              C27518 * C27516 * C591 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C673 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) * C593 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C672) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) * C594 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C674 -
           (C9290 * C4063 + C9185 * C4178 + C9289 * C678 + C9184 * C876) *
               C595) *
              C27518 * C27516 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27303) *
              C27518 * C27516 * C75 -
          ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
               C27303 +
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
              C27518 * C27516 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C143 +
           (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
               C27303) *
              C27518 * C27516 * C77 -
          ((C9290 * C1899 + C9185 * C2061 + C9289 * C147 + C9184 * C299) *
               C27303 +
           (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) *
               C143) *
              C27518 * C27516 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27303) *
               C27518 * C27516 * C591 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27303 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
               C27518 * C27516 * C27280) *
              C1215 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C143 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27303) *
               C27518 * C27516 * C27280 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27303 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C143) *
               C27518 * C27516 * C591) *
              C1216 +
          (((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
                C143 +
            (C9289 * C1295 + C9184 * C1496 + C9290 * C4434 + C9185 * C4595) *
                C27303) *
               C27518 * C27516 * C591 -
           ((C9290 * C4433 + C9185 * C4596 + C9289 * C1296 + C9184 * C1497) *
                C27303 +
            (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
                C143) *
               C27518 * C27516 * C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C593 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C594 +
           ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C188 +
            (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
                C27314) *
               C27518 * C27516 * C595) *
              C591 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C594 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C593 -
           ((C9290 * C4101 + C9185 * C4213 + C9289 * C740 + C9184 * C944) *
                C27314 +
            (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
                C188) *
               C27518 * C27516 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27314) *
              C27518 * C27516 * C27303 * C75 -
          ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
               C27314 +
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
              C27518 * C27516 * C27303 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C188 +
           (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
               C27314) *
              C27518 * C27516 * C27303 * C77 -
          ((C9290 * C1951 + C9185 * C2123 + C9289 * C192 + C9184 * C353) *
               C27314 +
           (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) *
               C188) *
              C27518 * C27516 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1354 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C1215 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C1355 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C1216 +
           (C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C1356 +
           (C9289 * C1359 + C9184 * C1560 + C9290 * C4488 + C9185 * C4647) *
               C1217) *
              C27518 * C27516 * C27303 * C591 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C1355 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C1215 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C1354) +
           (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
               C1216 -
           (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
               C1356 -
           (C9290 * C4487 + C9185 * C4648 + C9289 * C1360 + C9184 * C1562) *
               C1217) *
              C27518 * C27516 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C27516 * C9184 +
           (C9892 + C9893 - C9880 - C9881) * C27516 * C9185) *
              C27314 * C593 +
          ((C9880 - (C9893 + C9892) + C9881) * C27516 * C9184 +
           (C9882 - (C9894 + C9895) + C9887) * C27516 * C9185) *
              C27314 * C594 +
          ((C9895 + C9894 - C9882 - C9887) * C27516 * C9184 +
           ((C404 * C4018 + C27518 * C4250) * C596 +
            (C404 * C4020 + C27518 * C4252) * C591 -
            (C404 * C4017 + C27518 * C4249) * C597 -
            (C404 * C4019 + C27518 * C4251) * C27280) *
               C27516 * C9185) *
              C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C85 +
           (C404 * C96 + C27518 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C27516 * C9184 +
          ((C404 * C600 + C27518 * C1008) * C85 +
           (C404 * C607 + C27518 * C1013) * C75 - C1028 * C86 - C1029 * C76 +
           C2186 * C87 + C2187 * C77 - (C404 * C1843 + C27518 * C2179) * C88 -
           (C404 * C1845 + C27518 * C2180) * C78) *
              C27516 * C9185) *
         C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C27516 * C9184 +
           (C9892 + C9893 - C9880 - C9881) * C27516 * C9185) *
              C1215 +
          ((C1648 * C597 -
            ((C404 * C1227 + C27518 * C1633) * C591 +
             (C404 * C1220 + C27518 * C1628) * C596) +
            C1649 * C27280) *
               C27516 * C9184 +
           (C3348 * C597 -
            ((C404 * C2890 + C27518 * C3340) * C591 +
             (C404 * C2885 + C27518 * C3337) * C596) +
            C3349 * C27280) *
               C27516 * C9185) *
              C1216 +
          (((C404 * C1221 + C27518 * C1630) * C596 +
            (C404 * C1232 + C27518 * C1636) * C591 - C1650 * C597 -
            C1651 * C27280) *
               C27516 * C9184 +
           ((C404 * C4376 + C27518 * C4700) * C596 +
            (C404 * C4378 + C27518 * C4702) * C591 -
            (C404 * C4375 + C27518 * C4699) * C597 -
            (C404 * C4377 + C27518 * C4701) * C27280) *
               C27516 * C9185) *
              C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[17] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C672 +
            (C404 * C144 + C27518 * C467) * C593 - C9888 * C673 - C9950 * C594 +
            C9891 * C674 + C9951 * C595) *
               C27516 * C9184 +
           (C9888 * C672 + C9950 * C593 - C9891 * C673 - C9951 * C594 +
            (C404 * C4018 + C27518 * C4250) * C674 +
            (C404 * C4064 + C27518 * C4287) * C595) *
               C27516 * C9185) *
              C591 +
          ((C1090 - (C1089 + C1088) + C1098 - C1093 - C1099) * C27516 * C9184 +
           (C1030 * C673 - (C1096 * C593 + C1028 * C672) + C1097 * C594 -
            (C404 * C4017 + C27518 * C4249) * C674 -
            (C404 * C4063 + C27518 * C4288) * C595) *
               C27516 * C9185) *
              C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C143 +
            (C404 * C144 + C27518 * C467) * C27303) *
               C27516 * C9184 +
           ((C404 * C600 + C27518 * C1008) * C143 +
            (C404 * C676 + C27518 * C1081) * C27303) *
               C27516 * C9185) *
              C75 -
          ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
           (C485 + C473) * C27516 * C9184) *
              C76 +
          ((C478 + C486) * C27516 * C9184 +
           (C2186 * C143 + C2248 * C27303) * C27516 * C9185) *
              C77 -
          (((C404 * C1899 + C27518 * C2237) * C27303 +
            (C404 * C1843 + C27518 * C2179) * C143) *
               C27516 * C9185 +
           (C487 + C479) * C27516 * C9184) *
              C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C143 +
             (C404 * C144 + C27518 * C467) * C27303) *
                C27516 * C9184 +
            (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
               C591 -
           ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
            (C485 + C473) * C27516 * C9184) *
               C27280) *
              C1215 +
          (((C1708 + C1716) * C27516 * C9184 +
            (C3348 * C143 + C3424 * C27303) * C27516 * C9185) *
               C27280 -
           (((C404 * C2963 + C27518 * C3415) * C27303 +
             (C404 * C2885 + C27518 * C3337) * C143) *
                C27516 * C9185 +
            ((C404 * C1294 + C27518 * C1703) * C27303 +
             (C404 * C1220 + C27518 * C1628) * C143) *
                C27516 * C9184) *
               C591) *
              C1216 +
          ((((C404 * C1221 + C27518 * C1630) * C143 +
             (C404 * C1295 + C27518 * C1704) * C27303) *
                C27516 * C9184 +
            ((C404 * C4376 + C27518 * C4700) * C143 +
             (C404 * C4434 + C27518 * C4753) * C27303) *
                C27516 * C9185) *
               C591 -
           (((C404 * C4433 + C27518 * C4754) * C27303 +
             (C404 * C4375 + C27518 * C4699) * C143) *
                C27516 * C9185 +
            (C1717 + C1711) * C27516 * C9184) *
               C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[17] +=
        (-std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C593 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C594 +
           ((C10007 + C10011) * C27516 * C9184 +
            ((C404 * C4018 + C27518 * C4250) * C188 +
             (C404 * C4102 + C27518 * C4324) * C27314) *
                C27516 * C9185) *
               C595) *
              C591 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C594 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C593 -
           (((C404 * C4101 + C27518 * C4323) * C27314 +
             (C404 * C4017 + C27518 * C4249) * C188) *
                C27516 * C9185 +
            (C1165 + C1159) * C27516 * C9184) *
               C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C27516 * C9184 +
           ((C404 * C600 + C27518 * C1008) * C188 +
            (C404 * C738 + C27518 * C1150) * C27314) *
               C27516 * C9185) *
              C27303 * C75 -
          ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
              C27303 * C76 +
          ((C532 + C540) * C27516 * C9184 + (C2301 + C2305) * C27516 * C9185) *
              C27303 * C77 -
          (((C404 * C1951 + C27518 * C2299) * C27314 +
            (C404 * C1843 + C27518 * C2179) * C188) *
               C27516 * C9185 +
           (C541 + C533) * C27516 * C9184) *
              C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1354 +
            (C404 * C189 + C27518 * C521) * C1215 -
            (C404 * C1220 + C27518 * C1628) * C1355 -
            (C404 * C1358 + C27518 * C1767) * C1216 +
            (C404 * C1221 + C27518 * C1630) * C1356 +
            (C404 * C1359 + C27518 * C1768) * C1217) *
               C27516 * C9184 +
           (C9888 * C1354 + C10008 * C1215 -
            (C404 * C2885 + C27518 * C3337) * C1355 -
            (C404 * C3035 + C27518 * C3491) * C1216 +
            (C404 * C4376 + C27518 * C4700) * C1356 +
            (C404 * C4488 + C27518 * C4805) * C1217) *
               C27516 * C9185) *
              C27303 * C591 +
          ((C1776 - (C1775 + C1774) + C1784 - C1779 - C1785) * C27516 * C9184 +
           (C3348 * C1355 - (C1162 * C1215 + C1028 * C1354) + C3500 * C1216 -
            (C404 * C4375 + C27518 * C4699) * C1356 -
            (C404 * C4487 + C27518 * C4806) * C1217) *
               C27516 * C9185) *
              C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1840 +
            (C9186 * C96 + C27516 * C104) * C27505 -
            (C9186 * C90 + C27516 * C95) * C1841 -
            (C9186 * C97 + C27516 * C105) * C27506 +
            (C9186 * C91 + C27516 * C98) * C1842 +
            (C9186 * C99 + C27516 * C106) * C1837) *
               C9184 +
           (C10512 + C10513 - C10514 - C10515 + C10522 + C10523) * C9185) *
              C27518 * C27482 +
          (((C9186 * C1218 + C27516 * C1224) * C1841 -
            ((C9186 * C1227 + C27516 * C1237) * C27505 +
             (C9186 * C1220 + C27516 * C1228) * C1840) +
            (C9186 * C1226 + C27516 * C1236) * C27506 -
            (C9186 * C1219 + C27516 * C1225) * C1842 -
            (C9186 * C1229 + C27516 * C1238) * C1837) *
               C9184 +
           ((C9186 * C2886 + C27516 * C2889) * C1841 -
            ((C9186 * C2890 + C27516 * C2894) * C27505 +
             (C9186 * C2885 + C27516 * C2888) * C1840) +
            (C9186 * C2891 + C27516 * C2895) * C27506 -
            (C9186 * C2887 + C27516 * C2892) * C1842 -
            (C9186 * C2893 + C27516 * C2896) * C1837) *
               C9185) *
              C27518 * C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eexy[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C9184 +
                      (C9528 * C143 + C9602 * C27303) * C9185) *
                         C27518 * C27505 -
                     ((C9604 * C27303 + C9530 * C143) * C9185 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C9184) *
                         C27518 * C27506 +
                     (((C9186 * C91 + C27516 * C98) * C143 +
                       (C9186 * C146 + C27516 * C151) * C27303) *
                          C9184 +
                      (C10520 * C143 + C10576 * C27303) * C9185) *
                         C27518 * C1837) *
                        C27482 +
                    ((((C9186 * C1218 + C27516 * C1224) * C143 +
                       (C9186 * C1292 + C27516 * C1298) * C27303) *
                          C9184 +
                      ((C9186 * C2886 + C27516 * C2889) * C143 +
                       (C9186 * C2964 + C27516 * C2967) * C27303) *
                          C9185) *
                         C27518 * C27506 -
                     (((C9186 * C2963 + C27516 * C2966) * C27303 +
                       (C9186 * C2885 + C27516 * C2888) * C143) *
                          C9185 +
                      ((C9186 * C1294 + C27516 * C1300) * C27303 +
                       (C9186 * C1220 + C27516 * C1228) * C143) *
                          C9184) *
                         C27518 * C27505 -
                     (((C9186 * C2965 + C27516 * C2968) * C27303 +
                       (C9186 * C2887 + C27516 * C2892) * C143) *
                          C9185 +
                      ((C9186 * C1293 + C27516 * C1299) * C27303 +
                       (C9186 * C1219 + C27516 * C1225) * C143) *
                          C9184) *
                         C27518 * C1837) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C2463 +
                      (C9186 * C189 + C27516 * C194) * C27482 -
                      (C9186 * C1220 + C27516 * C1228) * C2464 -
                      (C9186 * C1358 + C27516 * C1364) * C27378) *
                         C9184 +
                     (C9528 * C2463 + C9668 * C27482 -
                      (C9186 * C2885 + C27516 * C2888) * C2464 -
                      (C9186 * C3035 + C27516 * C3038) * C27378) *
                         C9185) *
                        C27518 * C27303 * C27505 +
                    (((C9186 * C1218 + C27516 * C1224) * C2464 -
                      ((C9186 * C190 + C27516 * C195) * C27482 +
                       (C9186 * C90 + C27516 * C95) * C2463) +
                      (C9186 * C1357 + C27516 * C1363) * C27378) *
                         C9184 +
                     ((C9186 * C2886 + C27516 * C2889) * C2464 -
                      (C9670 * C27482 + C9530 * C2463) +
                      (C9186 * C3036 + C27516 * C3039) * C27378) *
                         C9185) *
                        C27518 * C27303 * C27506 +
                    (((C9186 * C91 + C27516 * C98) * C2463 +
                      (C9186 * C191 + C27516 * C196) * C27482 -
                      (C9186 * C1219 + C27516 * C1225) * C2464 -
                      (C9186 * C1361 + C27516 * C1367) * C27378) *
                         C9184 +
                     (C10520 * C2463 + C10630 * C27482 -
                      (C9186 * C2887 + C27516 * C2892) * C2464 -
                      (C9186 * C3037 + C27516 * C3040) * C27378) *
                         C9185) *
                        C27518 * C27303 * C1837)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1840 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C27505 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C1841 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C27506 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C1842 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C1837) *
              C27518 * C27516 * C27482 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C1841 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27505 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C1840) +
           (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
               C27506 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C1842 -
           (C9290 * C2893 + C9185 * C3112 + C9289 * C1229 + C9184 * C1427) *
               C1837) *
              C27518 * C27516 * C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eeyy[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27303) *
               C27518 * C27516 * C27505 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27303 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
               C27518 * C27516 * C27506 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
                C27303) *
               C27518 * C27516 * C1837) *
              C27482 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C143 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27303) *
               C27518 * C27516 * C27506 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27303 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C143) *
               C27518 * C27516 * C27505 -
           ((C9290 * C2965 + C9185 * C3187 + C9289 * C1293 + C9184 * C1494) *
                C27303 +
            (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
                C143) *
               C27518 * C27516 * C1837) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[18] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C2463 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27482 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C2464 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C27303 * C27505 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C2464 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27482 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C2463) +
           (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
               C27378) *
              C27518 * C27516 * C27303 * C27506 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C2463 +
           (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
               C27482 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C2464 -
           (C9290 * C3037 + C9185 * C3263 + C9289 * C1361 + C9184 * C1563) *
               C27378) *
              C27518 * C27516 * C27303 * C1837)) /
        (p * q * std::sqrt(p + q));
    d2eezx[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C1840 +
                      (C404 * C96 + C27518 * C410) * C27505 - C428 * C1841 -
                      C429 * C27506 + C430 * C1842 + C431 * C1837) *
                         C27516 * C9184 +
                     (C10832 + C10833 - C10834 - C10835 + C10836 + C10837) *
                         C27516 * C9185) *
                        C27482 +
                    ((C1648 * C1841 -
                      ((C404 * C1227 + C27518 * C1633) * C27505 +
                       (C404 * C1220 + C27518 * C1628) * C1840) +
                      C1649 * C27506 - C2700 * C1842 - C2701 * C1837) *
                         C27516 * C9184 +
                     (C3348 * C1841 -
                      ((C404 * C2890 + C27518 * C3340) * C27505 +
                       (C404 * C2885 + C27518 * C3337) * C1840) +
                      C3349 * C27506 - (C404 * C2887 + C27518 * C3339) * C1842 -
                      (C404 * C2893 + C27518 * C3342) * C1837) *
                         C27516 * C9185) *
                        C27378) *
                   C27303) /
                  (p * q * std::sqrt(p + q));
    d2eezy[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C143 +
                       (C404 * C144 + C27518 * C467) * C27303) *
                          C27516 * C9184 +
                      (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
                         C27505 -
                     ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
                      (C485 + C473) * C27516 * C9184) *
                         C27506 +
                     ((C478 + C486) * C27516 * C9184 +
                      (C2186 * C143 + C2248 * C27303) * C27516 * C9185) *
                         C1837) *
                        C27482 +
                    (((C1708 + C1716) * C27516 * C9184 +
                      (C3348 * C143 + C3424 * C27303) * C27516 * C9185) *
                         C27506 -
                     (((C404 * C2963 + C27518 * C3415) * C27303 +
                       (C404 * C2885 + C27518 * C3337) * C143) *
                          C27516 * C9185 +
                      ((C404 * C1294 + C27518 * C1703) * C27303 +
                       (C404 * C1220 + C27518 * C1628) * C143) *
                          C27516 * C9184) *
                         C27505 -
                     (((C404 * C2965 + C27518 * C3417) * C27303 +
                       (C404 * C2887 + C27518 * C3339) * C143) *
                          C27516 * C9185 +
                      (C2757 + C2753) * C27516 * C9184) *
                         C1837) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[18] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C2463 +
                      (C404 * C189 + C27518 * C521) * C27482 -
                      (C404 * C1220 + C27518 * C1628) * C2464 -
                      (C404 * C1358 + C27518 * C1767) * C27378) *
                         C27516 * C9184 +
                     (C9888 * C2463 + C10008 * C27482 -
                      (C404 * C2885 + C27518 * C3337) * C2464 -
                      (C404 * C3035 + C27518 * C3491) * C27378) *
                         C27516 * C9185) *
                        C27303 * C27505 +
                    ((C2811 - (C2810 + C2809) + C2812) * C27516 * C9184 +
                     (C3495 - (C3496 + C3497) + C3501) * C27516 * C9185) *
                        C27303 * C27506 +
                    ((C2815 + C2814 - C2813 - C2819) * C27516 * C9184 +
                     (C2186 * C2463 + C2304 * C27482 -
                      (C404 * C2887 + C27518 * C3339) * C2464 -
                      (C404 * C3037 + C27518 * C3493) * C27378) *
                         C27516 * C9185) *
                        C27303 * C1837)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[19] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C85 +
                     (C9186 * C96 + C27516 * C104) * C75 -
                     (C9186 * C90 + C27516 * C95) * C86 -
                     (C9186 * C97 + C27516 * C105) * C76 +
                     (C9186 * C91 + C27516 * C98) * C87 +
                     (C9186 * C99 + C27516 * C106) * C77 -
                     (C9186 * C92 + C27516 * C100) * C88 -
                     (C9186 * C101 + C27516 * C107) * C78) *
                        C9184 +
                    ((C9186 * C600 + C27516 * C608) * C85 +
                     (C9186 * C607 + C27516 * C617) * C75 -
                     (C9186 * C598 + C27516 * C604) * C86 -
                     (C9186 * C606 + C27516 * C616) * C76 +
                     (C9186 * C599 + C27516 * C605) * C87 +
                     (C9186 * C609 + C27516 * C618) * C77 -
                     (C9186 * C1843 + C27516 * C1844) * C88 -
                     (C9186 * C1845 + C27516 * C1846) * C78) *
                        C9185) *
                   C27518 * C27314 * C27303) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C596 +
                      (C9186 * C96 + C27516 * C104) * C591 -
                      (C9186 * C90 + C27516 * C95) * C597 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C9184 +
                     (C9536 + C9537 - C9538 - C9539) * C9185) *
                        C27518 * C27314 * C593 +
                    ((C9538 - (C9537 + C9536) + C9539) * C9184 +
                     (C9540 - (C9541 + C9542) + C9543) * C9185) *
                        C27518 * C27314 * C594 +
                    ((C9542 + C9541 - C9540 - C9543) * C9184 +
                     ((C9186 * C4018 + C27516 * C4022) * C596 +
                      (C9186 * C4020 + C27516 * C4024) * C591 -
                      (C9186 * C4017 + C27516 * C4021) * C597 -
                      (C9186 * C4019 + C27516 * C4023) * C27280) *
                         C9185) *
                        C27518 * C27314 * C595)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[19] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C143 +
                      (C9186 * C144 + C27516 * C149) * C27303) *
                         C9184 +
                     ((C9186 * C600 + C27516 * C608) * C143 +
                      (C9186 * C676 + C27516 * C682) * C27303) *
                         C9185) *
                        C27518 * C75 -
                    (((C9186 * C675 + C27516 * C681) * C27303 +
                      (C9186 * C598 + C27516 * C604) * C143) *
                         C9185 +
                     ((C9186 * C145 + C27516 * C150) * C27303 +
                      (C9186 * C90 + C27516 * C95) * C143) *
                         C9184) *
                        C27518 * C76 +
                    (((C9186 * C91 + C27516 * C98) * C143 +
                      (C9186 * C146 + C27516 * C151) * C27303) *
                         C9184 +
                     ((C9186 * C599 + C27516 * C605) * C143 +
                      (C9186 * C679 + C27516 * C685) * C27303) *
                         C9185) *
                        C27518 * C77 -
                    (((C9186 * C1899 + C27516 * C1900) * C27303 +
                      (C9186 * C1843 + C27516 * C1844) * C143) *
                         C9185 +
                     ((C9186 * C147 + C27516 * C152) * C27303 +
                      (C9186 * C92 + C27516 * C100) * C143) *
                         C9184) *
                        C27518 * C78) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C672 +
                      (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
                      C9602 * C594 + C9534 * C674 + C9603 * C595) *
                         C9184 +
                     (C9528 * C672 + C9602 * C593 - C9534 * C673 -
                      C9603 * C594 + (C9186 * C4018 + C27516 * C4022) * C674 +
                      (C9186 * C4064 + C27516 * C4066) * C595) *
                         C9185) *
                        C27518 * C591 +
                    ((C9530 * C673 -
                      ((C9186 * C145 + C27516 * C150) * C593 +
                       (C9186 * C90 + C27516 * C95) * C672) +
                      C9604 * C594 - C9532 * C674 - C9605 * C595) *
                         C9184 +
                     (C9532 * C673 - (C9604 * C593 + C9530 * C672) +
                      C9605 * C594 - (C9186 * C4017 + C27516 * C4021) * C674 -
                      (C9186 * C4063 + C27516 * C4065) * C595) *
                         C9185) *
                        C27518 * C27280) *
                   C27314) /
                      (p * q * std::sqrt(p + q));
    d2eexz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C188 +
            (C9186 * C189 + C27516 * C194) * C27314) *
               C9184 +
           ((C9186 * C600 + C27516 * C608) * C188 +
            (C9186 * C738 + C27516 * C744) * C27314) *
               C9185) *
              C27518 * C27303 * C75 -
          (((C9186 * C737 + C27516 * C743) * C27314 +
            (C9186 * C598 + C27516 * C604) * C188) *
               C9185 +
           ((C9186 * C190 + C27516 * C195) * C27314 +
            (C9186 * C90 + C27516 * C95) * C188) *
               C9184) *
              C27518 * C27303 * C76 +
          (((C9186 * C91 + C27516 * C98) * C188 +
            (C9186 * C191 + C27516 * C196) * C27314) *
               C9184 +
           ((C9186 * C599 + C27516 * C605) * C188 +
            (C9186 * C741 + C27516 * C747) * C27314) *
               C9185) *
              C27518 * C27303 * C77 -
          (((C9186 * C1951 + C27516 * C1952) * C27314 +
            (C9186 * C1843 + C27516 * C1844) * C188) *
               C9185 +
           ((C9186 * C192 + C27516 * C197) * C27314 +
            (C9186 * C92 + C27516 * C100) * C188) *
               C9184) *
              C27518 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C593 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 * C594 +
           ((C9661 + C9673) * C9184 +
            ((C9186 * C4018 + C27516 * C4022) * C188 +
             (C9186 * C4102 + C27516 * C4104) * C27314) *
                C9185) *
               C27518 * C595) *
              C591 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 * C594 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C593 -
           (((C9186 * C4101 + C27516 * C4103) * C27314 +
             (C9186 * C4017 + C27516 * C4021) * C188) *
                C9185 +
            (C9675 + C9665) * C9184) *
               C27518 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C85 +
          (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C75 -
          (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C86 -
          (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C76 +
          (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C87 +
          (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C77 -
          (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) * C88 -
          (C9290 * C1845 + C9185 * C2004 + C9289 * C101 + C9184 * C242) * C78) *
         C27518 * C27516 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C596 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C591 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C597 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
               C27280) *
              C27518 * C27516 * C27314 * C593 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C597 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) * C591 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C596) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C594 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C596 +
           (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
               C591 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C597 -
           (C9290 * C4019 + C9185 * C4141 + C9289 * C613 + C9184 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27303) *
              C27518 * C27516 * C75 -
          ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
               C27303 +
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
              C27518 * C27516 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C143 +
           (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
               C27303) *
              C27518 * C27516 * C77 -
          ((C9290 * C1899 + C9185 * C2061 + C9289 * C147 + C9184 * C299) *
               C27303 +
           (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) *
               C143) *
              C27518 * C27516 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C672 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C593 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C673 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C594 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C674 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C595) *
              C27518 * C27516 * C591 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C673 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) * C593 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C672) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) * C594 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C674 -
           (C9290 * C4063 + C9185 * C4178 + C9289 * C678 + C9184 * C876) *
               C595) *
              C27518 * C27516 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eeyz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27314) *
              C27518 * C27516 * C27303 * C75 -
          ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
               C27314 +
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
              C27518 * C27516 * C27303 * C76 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C188 +
           (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
               C27314) *
              C27518 * C27516 * C27303 * C77 -
          ((C9290 * C1951 + C9185 * C2123 + C9289 * C192 + C9184 * C353) *
               C27314 +
           (C9290 * C1843 + C9185 * C2003 + C9289 * C92 + C9184 * C237) *
               C188) *
              C27518 * C27516 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C593 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C594 +
           ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C188 +
            (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
                C27314) *
               C27518 * C27516 * C595) *
              C591 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C594 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C593 -
           ((C9290 * C4101 + C9185 * C4213 + C9289 * C740 + C9184 * C944) *
                C27314 +
            (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
                C188) *
               C27518 * C27516 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C85 +
           (C404 * C96 + C27518 * C410) * C75 - C428 * C86 - C429 * C76 +
           C430 * C87 + C431 * C77 - C432 * C88 - C433 * C78) *
              C27516 * C9184 +
          ((C404 * C600 + C27518 * C1008) * C85 +
           (C404 * C607 + C27518 * C1013) * C75 - C1028 * C86 - C1029 * C76 +
           C2186 * C87 + C2187 * C77 - (C404 * C1843 + C27518 * C2179) * C88 -
           (C404 * C1845 + C27518 * C2180) * C78) *
              C27516 * C9185) *
         C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C596 +
            (C404 * C96 + C27518 * C410) * C591 - C428 * C597 - C429 * C27280) *
               C27516 * C9184 +
           (C9892 + C9893 - C9880 - C9881) * C27516 * C9185) *
              C27314 * C593 +
          ((C9880 - (C9893 + C9892) + C9881) * C27516 * C9184 +
           (C9882 - (C9894 + C9895) + C9887) * C27516 * C9185) *
              C27314 * C594 +
          ((C9895 + C9894 - C9882 - C9887) * C27516 * C9184 +
           ((C404 * C4018 + C27518 * C4250) * C596 +
            (C404 * C4020 + C27518 * C4252) * C591 -
            (C404 * C4017 + C27518 * C4249) * C597 -
            (C404 * C4019 + C27518 * C4251) * C27280) *
               C27516 * C9185) *
              C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eezy[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C143 +
            (C404 * C144 + C27518 * C467) * C27303) *
               C27516 * C9184 +
           ((C404 * C600 + C27518 * C1008) * C143 +
            (C404 * C676 + C27518 * C1081) * C27303) *
               C27516 * C9185) *
              C75 -
          ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
           (C485 + C473) * C27516 * C9184) *
              C76 +
          ((C478 + C486) * C27516 * C9184 +
           (C2186 * C143 + C2248 * C27303) * C27516 * C9185) *
              C77 -
          (((C404 * C1899 + C27518 * C2237) * C27303 +
            (C404 * C1843 + C27518 * C2179) * C143) *
               C27516 * C9185 +
           (C487 + C479) * C27516 * C9184) *
              C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C672 +
            (C404 * C144 + C27518 * C467) * C593 - C9888 * C673 - C9950 * C594 +
            C9891 * C674 + C9951 * C595) *
               C27516 * C9184 +
           (C9888 * C672 + C9950 * C593 - C9891 * C673 - C9951 * C594 +
            (C404 * C4018 + C27518 * C4250) * C674 +
            (C404 * C4064 + C27518 * C4287) * C595) *
               C27516 * C9185) *
              C591 +
          ((C1090 - (C1089 + C1088) + C1098 - C1093 - C1099) * C27516 * C9184 +
           (C1030 * C673 - (C1096 * C593 + C1028 * C672) + C1097 * C594 -
            (C404 * C4017 + C27518 * C4249) * C674 -
            (C404 * C4063 + C27518 * C4288) * C595) *
               C27516 * C9185) *
              C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eezz[19] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C27516 * C9184 +
           ((C404 * C600 + C27518 * C1008) * C188 +
            (C404 * C738 + C27518 * C1150) * C27314) *
               C27516 * C9185) *
              C27303 * C75 -
          ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
              C27303 * C76 +
          ((C532 + C540) * C27516 * C9184 + (C2301 + C2305) * C27516 * C9185) *
              C27303 * C77 -
          (((C404 * C1951 + C27518 * C2299) * C27314 +
            (C404 * C1843 + C27518 * C2179) * C188) *
               C27516 * C9185 +
           (C541 + C533) * C27516 * C9184) *
              C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C593 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C594 +
           ((C10007 + C10011) * C27516 * C9184 +
            ((C404 * C4018 + C27518 * C4250) * C188 +
             (C404 * C4102 + C27518 * C4324) * C27314) *
                C27516 * C9185) *
               C595) *
              C591 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C594 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C593 -
           (((C404 * C4101 + C27518 * C4323) * C27314 +
             (C404 * C4017 + C27518 * C4249) * C188) *
                C27516 * C9185 +
            (C1165 + C1159) * C27516 * C9184) *
               C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C26163 +
                      (C9186 * C96 + C27516 * C104) * C27471 -
                      (C9186 * C90 + C27516 * C95) * C26156 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C9184 +
                     (C13422 + C13423 - C13424 - C13425) * C9185) *
                        C27518 * C27314 * C27509 +
                    ((C13424 - (C13423 + C13422) + C13425) * C9184 +
                     (C13426 - (C13427 + C13428) + C13429) * C9185) *
                        C27518 * C27314 * C27510 +
                    ((C13428 + C13427 - C13426 - C13429) * C9184 +
                     (C12546 * C26163 + C12547 * C27471 -
                      (C9186 * C4017 + C27516 * C4021) * C26156 -
                      (C9186 * C4019 + C27516 * C4023) * C27280) *
                         C9185) *
                        C27518 * C27314 * C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4914 +
            (C9186 * C144 + C27516 * C149) * C27509 - C9528 * C4915 -
            C9602 * C27510 + C9534 * C4916 + C9603 * C4861) *
               C9184 +
           (C9528 * C4914 + C9602 * C27509 - C9534 * C4915 - C9603 * C27510 +
            C12546 * C4916 + C12588 * C4861) *
               C9185) *
              C27518 * C27471 +
          ((C9530 * C4915 -
            ((C9186 * C145 + C27516 * C150) * C27509 +
             (C9186 * C90 + C27516 * C95) * C4914) +
            C9604 * C27510 - C9532 * C4916 - C9605 * C4861) *
               C9184 +
           (C9532 * C4915 - (C9604 * C27509 + C9530 * C4914) + C9605 * C27510 -
            (C9186 * C4017 + C27516 * C4021) * C4916 -
            (C9186 * C4063 + C27516 * C4065) * C4861) *
               C9185) *
              C27518 * C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eexz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C27509 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 *
               C27510 +
           ((C9661 + C9673) * C9184 + (C12625 + C12629) * C9185) * C27518 *
               C4861) *
              C27471 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 *
               C27510 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C27509 -
           (((C9186 * C4101 + C27516 * C4103) * C27314 +
             (C9186 * C4017 + C27516 * C4021) * C188) *
                C9185 +
            (C9675 + C9665) * C9184) *
               C27518 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C26163 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C27471 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C26156 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
               C27280) *
              C27518 * C27516 * C27314 * C27509 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
               C26156 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27471 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C26163) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C27510 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C26163 +
           (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
               C27471 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C26156 -
           (C9290 * C4019 + C9185 * C4141 + C9289 * C613 + C9184 * C809) *
               C27280) *
              C27518 * C27516 * C27314 * C4861)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4914 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27509 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C4915 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27510 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C4916 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C4861) *
              C27518 * C27516 * C27471 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C4915 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27509 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C4914) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
               C27510 -
           (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
               C4916 -
           (C9290 * C4063 + C9185 * C4178 + C9289 * C678 + C9184 * C876) *
               C4861) *
              C27518 * C27516 * C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eeyz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C27509 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C27510 +
           ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C188 +
            (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
                C27314) *
               C27518 * C27516 * C4861) *
              C27471 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C27510 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C27509 -
           ((C9290 * C4101 + C9185 * C4213 + C9289 * C740 + C9184 * C944) *
                C27314 +
            (C9290 * C4017 + C9185 * C4139 + C9289 * C602 + C9184 * C803) *
                C188) *
               C27518 * C27516 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[20] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C26163 +
                      (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
                      C429 * C27280) *
                         C27516 * C9184 +
                     (C13730 + C13731 - C13732 - C13733) * C27516 * C9185) *
                        C27314 * C27509 +
                    ((C13732 - (C13731 + C13730) + C13733) * C27516 * C9184 +
                     (C13734 - (C13735 + C13736) + C13737) * C27516 * C9185) *
                        C27314 * C27510 +
                    ((C13736 + C13735 - C13734 - C13737) * C27516 * C9184 +
                     (C12780 * C26163 + C12781 * C27471 -
                      (C404 * C4017 + C27518 * C4249) * C26156 -
                      (C404 * C4019 + C27518 * C4251) * C27280) *
                         C27516 * C9185) *
                        C27314 * C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C4914 +
            (C404 * C144 + C27518 * C467) * C27509 - C9888 * C4915 -
            C9950 * C27510 + C9891 * C4916 + C9951 * C4861) *
               C27516 * C9184 +
           (C9888 * C4914 + C9950 * C27509 - C9891 * C4915 - C9951 * C27510 +
            C12780 * C4916 + C12821 * C4861) *
               C27516 * C9185) *
              C27471 +
          ((C5226 - (C5225 + C5224) + C5227 - C5228 - C5229) * C27516 * C9184 +
           (C1030 * C4915 - (C1096 * C27509 + C1028 * C4914) + C1097 * C27510 -
            (C404 * C4017 + C27518 * C4249) * C4916 -
            (C404 * C4063 + C27518 * C4288) * C4861) *
               C27516 * C9185) *
              C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eezz[20] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C27509 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C27510 +
           ((C10007 + C10011) * C27516 * C9184 +
            (C12857 + C12861) * C27516 * C9185) *
               C4861) *
              C27471 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C27510 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C27509 -
           (((C404 * C4101 + C27518 * C4323) * C27314 +
             (C404 * C4017 + C27518 * C4249) * C188) *
                C27516 * C9185 +
            (C1165 + C1159) * C27516 * C9184) *
               C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C4016 +
                       (C9186 * C96 + C27516 * C104) * C27275) *
                          C9184 +
                      (C12538 + C12539) * C9185) *
                         C27518 * C27482 -
                     ((C12916 + C12917) * C9185 +
                      ((C9186 * C1227 + C27516 * C1237) * C27275 +
                       (C9186 * C1220 + C27516 * C1228) * C4016) *
                          C9184) *
                         C27518 * C27378) *
                        C27509 +
                    (((C12917 + C12916) * C9184 + (C14500 + C14501) * C9185) *
                         C27518 * C27378 -
                     ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) *
                         C27518 * C27482) *
                        C27510 +
                    (((C12541 + C12540) * C9184 + (C12548 + C12549) * C9185) *
                         C27518 * C27482 -
                     (((C9186 * C14490 + C27516 * C14492) * C27275 +
                       (C9186 * C14489 + C27516 * C14491) * C4016) *
                          C9185 +
                      (C14501 + C14500) * C9184) *
                         C27518 * C27378) *
                        C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4914 +
            (C9186 * C144 + C27516 * C149) * C27509 - C9528 * C4915 -
            C9602 * C27510 + C9534 * C4916 + C9603 * C4861) *
               C9184 +
           (C9528 * C4914 + C9602 * C27509 - C9534 * C4915 - C9603 * C27510 +
            C12546 * C4916 + C12588 * C4861) *
               C9185) *
              C27518 * C27275 * C27482 +
          ((C11464 * C4915 -
            ((C9186 * C1294 + C27516 * C1300) * C27509 +
             (C9186 * C1220 + C27516 * C1228) * C4914) +
            C11540 * C27510 - C14498 * C4916 - C14556 * C4861) *
               C9184 +
           (C14498 * C4915 - (C11540 * C27509 + C11464 * C4914) +
            C14556 * C27510 - (C9186 * C14489 + C27516 * C14491) * C4916 -
            (C9186 * C14551 + C27516 * C14552) * C4861) *
               C9185) *
              C27518 * C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C2463 +
                      (C9186 * C189 + C27516 * C194) * C27482 -
                      (C9186 * C1220 + C27516 * C1228) * C2464 -
                      (C9186 * C1358 + C27516 * C1364) * C27378) *
                         C9184 +
                     (C11608 + C11609 - C11610 - C11620) * C9185) *
                        C27518 * C27509 +
                    ((C11610 - (C11609 + C11608) + C11620) * C9184 +
                     (C14609 - (C14610 + C14611) + C14615) * C9185) *
                        C27518 * C27510 +
                    ((C14611 + C14610 - C14609 - C14615) * C9184 +
                     (C12546 * C2463 + C12628 * C27482 -
                      (C9186 * C14489 + C27516 * C14491) * C2464 -
                      (C9186 * C14606 + C27516 * C14607) * C27378) *
                         C9185) *
                        C27518 * C4861) *
                   C27275) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27275) *
               C27518 * C27516 * C27482 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27275 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4016) *
               C27518 * C27516 * C27378) *
              C27509 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C4016 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27275) *
               C27518 * C27516 * C27378 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27275 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C4016) *
               C27518 * C27516 * C27482) *
              C27510 +
          (((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C4016 +
            (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
                C27275) *
               C27518 * C27516 * C27482 -
           ((C9290 * C14490 + C9185 * C14666 + C9289 * C5934 + C9184 * C6100) *
                C27275 +
            (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
                C4016) *
               C27518 * C27516 * C27378) *
              C4861)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4914 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27509 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C4915 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27510 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C4916 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C4861) *
              C27518 * C27516 * C27275 * C27482 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C4915 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27509 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4914) +
           (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
               C27510 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C4916 -
           (C9290 * C14551 + C9185 * C14717 + C9289 * C5990 + C9184 * C6151) *
               C4861) *
              C27518 * C27516 * C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C2463 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27482 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C2464 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C27509 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C2464 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27482 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C2463) +
           (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
               C27378) *
              C27518 * C27516 * C27510 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C2463 +
           (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
               C27482 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C2464 -
           (C9290 * C14606 + C9185 * C14768 + C9289 * C6044 + C9184 * C6203) *
               C27378) *
              C27518 * C27516 * C4861) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eezx[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C4016 +
                       (C404 * C96 + C27518 * C410) * C27275) *
                          C27516 * C9184 +
                      (C12772 + C12773) * C27516 * C9185) *
                         C27482 -
                     ((C13248 + C13249) * C27516 * C9185 +
                      ((C404 * C1227 + C27518 * C1633) * C27275 +
                       (C404 * C1220 + C27518 * C1628) * C4016) *
                          C27516 * C9184) *
                         C27378) *
                        C27509 +
                    (((C13249 + C13248) * C27516 * C9184 +
                      (C14828 + C14829) * C27516 * C9185) *
                         C27378 -
                     ((C12774 + C12775) * C27516 * C9185 +
                      (C12773 + C12772) * C27516 * C9184) *
                         C27482) *
                        C27510 +
                    (((C12775 + C12774) * C27516 * C9184 +
                      (C12782 + C12783) * C27516 * C9185) *
                         C27482 -
                     (((C404 * C14490 + C27518 * C14820) * C27275 +
                       (C404 * C14489 + C27518 * C14819) * C4016) *
                          C27516 * C9185 +
                      (C14829 + C14828) * C27516 * C9184) *
                         C27378) *
                        C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[21] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C4914 +
            (C404 * C144 + C27518 * C467) * C27509 - C9888 * C4915 -
            C9950 * C27510 + C9891 * C4916 + C9951 * C4861) *
               C27516 * C9184 +
           (C9888 * C4914 + C9950 * C27509 - C9891 * C4915 - C9951 * C27510 +
            C12780 * C4916 + C12821 * C4861) *
               C27516 * C9185) *
              C27275 * C27482 +
          ((C11893 * C4915 -
            ((C404 * C1294 + C27518 * C1703) * C27509 +
             (C404 * C1220 + C27518 * C1628) * C4914) +
            C11964 * C27510 - C14826 * C4916 - C14883 * C4861) *
               C27516 * C9184 +
           (C14826 * C4915 - (C11964 * C27509 + C11893 * C4914) +
            C14883 * C27510 - (C404 * C14489 + C27518 * C14819) * C4916 -
            (C404 * C14551 + C27518 * C14879) * C4861) *
               C27516 * C9185) *
              C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[21] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C2463 +
                      (C404 * C189 + C27518 * C521) * C27482 -
                      (C404 * C1220 + C27518 * C1628) * C2464 -
                      (C404 * C1358 + C27518 * C1767) * C27378) *
                         C27516 * C9184 +
                     (C12031 + C12032 - C12033 - C12037) * C27516 * C9185) *
                        C27509 +
                    ((C12033 - (C12032 + C12031) + C12037) * C27516 * C9184 +
                     (C14935 - (C14936 + C14937) + C14941) * C27516 * C9185) *
                        C27510 +
                    ((C14937 + C14936 - C14935 - C14941) * C27516 * C9184 +
                     (C12780 * C2463 + C12860 * C27482 -
                      (C404 * C14489 + C27518 * C14819) * C2464 -
                      (C404 * C14606 + C27518 * C14933) * C27378) *
                         C27516 * C9185) *
                        C4861) *
                   C27275) /
                  (p * q * std::sqrt(p + q));
    d2eexx[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C9184 +
           (C12538 + C12539) * C9185) *
              C27518 * C27314 * C4012 -
          ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) * C27518 *
              C27314 * C4013 +
          ((C12541 + C12540) * C9184 + (C12548 + C12549) * C9185) * C27518 *
              C27314 * C4014 -
          (((C9186 * C12534 + C27516 * C12536) * C27275 +
            (C9186 * C12533 + C27516 * C12535) * C4016) *
               C9185 +
           (C12549 + C12548) * C9184) *
              C27518 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C9184 +
           (C12088 + C12089 - C12090 - C12091 + C12092 + C12093) * C9185) *
              C27518 * C27314 * C3554 +
          ((C12090 - (C12089 + C12088) + C12091 - C12092 - C12093) * C9184 +
           (C9532 * C3557 - (C9533 * C3551 + C9534 * C3556) + C9535 * C3552 -
            (C9186 * C603 + C27516 * C614) * C3558 -
            (C9186 * C615 + C27516 * C621) * C3553) *
               C9185) *
              C27518 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C4016 +
             (C9186 * C96 + C27516 * C104) * C27275) *
                C9184 +
            (C12538 + C12539) * C9185) *
               C27518 * C1215 -
           ((C12916 + C12917) * C9185 +
            ((C9186 * C1227 + C27516 * C1237) * C27275 +
             (C9186 * C1220 + C27516 * C1228) * C4016) *
                C9184) *
               C27518 * C1216 +
           (((C9186 * C1221 + C27516 * C1230) * C4016 +
             (C9186 * C1232 + C27516 * C1239) * C27275) *
                C9184 +
            (C12924 + C12925) * C9185) *
               C27518 * C1217) *
              C3554 +
          (((C12917 + C12916) * C9184 +
            ((C9186 * C5932 + C27516 * C5936) * C4016 +
             (C9186 * C5934 + C27516 * C5938) * C27275) *
                C9185) *
               C27518 * C1216 -
           ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) * C27518 *
               C1215 -
           (((C9186 * C12912 + C27516 * C12914) * C27275 +
             (C9186 * C12911 + C27516 * C12913) * C4016) *
                C9185 +
            (C12925 + C12924) * C9184) *
               C27518 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eexy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27516 * C94) * C4059 +
           (C9186 * C144 + C27516 * C149) * C4012 - C9528 * C4060 -
           C9602 * C4013 + C9534 * C4061 + C9603 * C4014 - C12546 * C4062 -
           C12588 * C4015) *
              C9184 +
          (C9528 * C4059 + C9602 * C4012 - C9534 * C4060 - C9603 * C4013 +
           C12546 * C4061 + C12588 * C4014 -
           (C9186 * C12533 + C27516 * C12535) * C4062 -
           (C9186 * C12583 + C27516 * C12584) * C4015) *
              C9185) *
         C27518 * C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3609 +
            (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
            C9602 * C27352) *
               C9184 +
           (C9528 * C3609 + C9602 * C3554 - C9534 * C3610 - C9603 * C27352) *
               C9185) *
              C27518 * C3551 +
          ((C9530 * C3610 -
            ((C9186 * C145 + C27516 * C150) * C3554 +
             (C9186 * C90 + C27516 * C95) * C3609) +
            C9604 * C27352) *
               C9184 +
           (C9532 * C3610 - (C9604 * C3554 + C9530 * C3609) + C9605 * C27352) *
               C9185) *
              C27518 * C3552 +
          (((C9186 * C91 + C27516 * C98) * C3609 +
            (C9186 * C146 + C27516 * C151) * C3554 - C10520 * C3610 -
            C10576 * C27352) *
               C9184 +
           (C10520 * C3609 + C10576 * C3554 -
            (C9186 * C603 + C27516 * C614) * C3610 -
            (C9186 * C680 + C27516 * C686) * C27352) *
               C9185) *
              C27518 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3609 +
            (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
            C9602 * C27352) *
               C9184 +
           (C9528 * C3609 + C9602 * C3554 - C9534 * C3610 - C9603 * C27352) *
               C9185) *
              C27518 * C27275 * C1215 +
          ((C11464 * C3610 -
            ((C9186 * C1294 + C27516 * C1300) * C3554 +
             (C9186 * C1220 + C27516 * C1228) * C3609) +
            C11540 * C27352) *
               C9184 +
           ((C9186 * C5932 + C27516 * C5936) * C3610 -
            (C11540 * C3554 + C11464 * C3609) +
            (C9186 * C5990 + C27516 * C5992) * C27352) *
               C9185) *
              C27518 * C27275 * C1216 +
          (((C9186 * C1221 + C27516 * C1230) * C3609 +
            (C9186 * C1295 + C27516 * C1301) * C3554 - C12922 * C3610 -
            C12980 * C27352) *
               C9184 +
           (C12922 * C3609 + C12980 * C3554 -
            (C9186 * C12911 + C27516 * C12913) * C3610 -
            (C9186 * C12975 + C27516 * C12976) * C27352) *
               C9185) *
              C27518 * C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eexz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C188 +
            (C9186 * C189 + C27516 * C194) * C27314) *
               C9184 +
           (C9656 + C9672) * C9185) *
              C27518 * C4012 -
          ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 * C4013 +
          ((C9661 + C9673) * C9184 + (C12625 + C12629) * C9185) * C27518 *
              C4014 -
          (((C9186 * C12622 + C27516 * C12623) * C27314 +
            (C9186 * C12533 + C27516 * C12535) * C188) *
               C9185 +
           (C12629 + C12625) * C9184) *
              C27518 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C3554 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 *
               C27352) *
              C3551 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 *
               C27352 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C3554) *
              C3552 +
          ((((C9186 * C91 + C27516 * C98) * C188 +
             (C9186 * C191 + C27516 * C196) * C27314) *
                C9184 +
            (C10627 + C10631) * C9185) *
               C27518 * C3554 -
           (((C9186 * C742 + C27516 * C748) * C27314 +
             (C9186 * C603 + C27516 * C614) * C188) *
                C9185 +
            (C10631 + C10627) * C9184) *
               C27518 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1354 +
            (C9186 * C189 + C27516 * C194) * C1215 -
            (C9186 * C1220 + C27516 * C1228) * C1355 -
            (C9186 * C1358 + C27516 * C1364) * C1216 +
            (C9186 * C1221 + C27516 * C1230) * C1356 +
            (C9186 * C1359 + C27516 * C1365) * C1217) *
               C9184 +
           (C13033 + C13034 - C13035 - C13036 + C13037 + C13041) * C9185) *
              C27518 * C3554 +
          ((C13035 - (C13034 + C13033) + C13036 - C13037 - C13041) * C9184 +
           ((C9186 * C5932 + C27516 * C5936) * C1355 -
            (C9669 * C1215 + C9534 * C1354) +
            (C9186 * C6044 + C27516 * C6046) * C1216 -
            (C9186 * C12911 + C27516 * C12913) * C1356 -
            (C9186 * C13030 + C27516 * C13031) * C1217) *
               C9185) *
              C27518 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
               C27275) *
              C27518 * C27516 * C27314 * C4012 -
          ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
               C27275 +
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
               C4016) *
              C27518 * C27516 * C27314 * C4013 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C4016 +
           (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
               C27275) *
              C27518 * C27516 * C27314 * C4014 -
          ((C9290 * C12534 + C9185 * C12664 + C9289 * C4020 + C9184 * C4142) *
               C27275 +
           (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
               C4016) *
              C27518 * C27516 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3556 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C3551 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C3557 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C3552 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3558 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C3553) *
              C27518 * C27516 * C27314 * C3554 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C3557 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C3551 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C3556) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) * C3552 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C3558 -
           (C9290 * C615 + C9185 * C810 + C9289 * C609 + C9184 * C807) *
               C3553) *
              C27518 * C27516 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27275) *
               C27518 * C27516 * C1215 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27275 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4016) *
               C27518 * C27516 * C1216 +
           ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
                C4016 +
            (C9289 * C1232 + C9184 * C1428 + C9290 * C4378 + C9185 * C4544) *
                C27275) *
               C27518 * C27516 * C1217) *
              C3554 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C4016 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27275) *
               C27518 * C27516 * C1216 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27275 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C4016) *
               C27518 * C27516 * C1215 -
           ((C9290 * C12912 + C9185 * C13092 + C9289 * C4378 + C9184 * C4544) *
                C27275 +
            (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
                C4016) *
               C27518 * C27516 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[22] +=
        (-std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4059 +
          (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C4012 -
          (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C4060 -
          (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C4013 +
          (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
              C4061 +
          (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
              C4014 -
          (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
              C4062 -
          (C9290 * C12583 + C9185 * C12699 + C9289 * C4064 + C9184 * C4177) *
              C4015) *
         C27518 * C27516 * C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3609 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C3554 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C3610 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27352) *
              C27518 * C27516 * C3551 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C3610 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C3554 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C3609) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
               C27352) *
              C27518 * C27516 * C3552 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3609 +
           (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) * C3554 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C3610 -
           (C9290 * C680 + C9185 * C878 + C9289 * C679 + C9184 * C877) *
               C27352) *
              C27518 * C27516 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3609 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C3554 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C3610 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27352) *
              C27518 * C27516 * C27275 * C1215 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C3610 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C3554 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C3609) +
           (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
               C27352) *
              C27518 * C27516 * C27275 * C1216 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C3609 +
           (C9289 * C1295 + C9184 * C1496 + C9290 * C4434 + C9185 * C4595) *
               C3554 -
           (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
               C3610 -
           (C9290 * C12975 + C9185 * C13143 + C9289 * C4434 + C9184 * C4595) *
               C27352) *
              C27518 * C27516 * C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[22] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27314) *
              C27518 * C27516 * C4012 -
          ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
               C27314 +
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C188) *
              C27518 * C27516 * C4013 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C188 +
           (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
               C27314) *
              C27518 * C27516 * C4014 -
          ((C9290 * C12622 + C9185 * C12734 + C9289 * C4102 + C9184 * C4214) *
               C27314 +
           (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
               C188) *
              C27518 * C27516 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C3554 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C27352) *
              C3551 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C27352 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C3554) *
              C3552 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
                C27314) *
               C27518 * C27516 * C3554 -
           ((C9290 * C742 + C9185 * C946 + C9289 * C741 + C9184 * C945) *
                C27314 +
            (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) *
                C188) *
               C27518 * C27516 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1354 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C1215 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C1355 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C1216 +
           (C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C1356 +
           (C9289 * C1359 + C9184 * C1560 + C9290 * C4488 + C9185 * C4647) *
               C1217) *
              C27518 * C27516 * C3554 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C1355 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C1215 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C1354) +
           (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
               C1216 -
           (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
               C1356 -
           (C9290 * C13030 + C9185 * C13194 + C9289 * C4488 + C9184 * C4647) *
               C1217) *
              C27518 * C27516 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[22] +=
        (-std::pow(Pi, 2.5) * ((((C404 * C89 + C27518 * C405) * C4016 +
                                 (C404 * C96 + C27518 * C410) * C27275) *
                                    C27516 * C9184 +
                                (C12772 + C12773) * C27516 * C9185) *
                                   C27314 * C4012 -
                               ((C12774 + C12775) * C27516 * C9185 +
                                (C12773 + C12772) * C27516 * C9184) *
                                   C27314 * C4013 +
                               ((C12775 + C12774) * C27516 * C9184 +
                                (C12782 + C12783) * C27516 * C9185) *
                                   C27314 * C4014 -
                               (((C404 * C12534 + C27518 * C12770) * C27275 +
                                 (C404 * C12533 + C27518 * C12769) * C4016) *
                                    C27516 * C9185 +
                                (C12783 + C12782) * C27516 * C9184) *
                                   C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3556 +
            (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 - C429 * C3552 +
            C430 * C3558 + C431 * C3553) *
               C27516 * C9184 +
           (C12394 + C12395 - C12396 - C12397 + C12398 + C12399) * C27516 *
               C9185) *
              C27314 * C3554 +
          ((C12396 - (C12395 + C12394) + C12397 - C12398 - C12399) * C27516 *
               C9184 +
           (C1030 * C3557 - (C9890 * C3551 + C9891 * C3556) + C1031 * C3552 -
            (C404 * C603 + C27518 * C1012) * C3558 -
            (C404 * C615 + C27518 * C1018) * C3553) *
               C27516 * C9185) *
              C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C4016 +
             (C404 * C96 + C27518 * C410) * C27275) *
                C27516 * C9184 +
            (C12772 + C12773) * C27516 * C9185) *
               C1215 -
           ((C13248 + C13249) * C27516 * C9185 +
            ((C404 * C1227 + C27518 * C1633) * C27275 +
             (C404 * C1220 + C27518 * C1628) * C4016) *
                C27516 * C9184) *
               C1216 +
           (((C404 * C1221 + C27518 * C1630) * C4016 +
             (C404 * C1232 + C27518 * C1636) * C27275) *
                C27516 * C9184 +
            (C13256 + C13257) * C27516 * C9185) *
               C1217) *
              C3554 +
          (((C13249 + C13248) * C27516 * C9184 +
            ((C404 * C5932 + C27518 * C6256) * C4016 +
             (C404 * C5934 + C27518 * C6258) * C27275) *
                C27516 * C9185) *
               C1216 -
           ((C12774 + C12775) * C27516 * C9185 +
            (C12773 + C12772) * C27516 * C9184) *
               C1215 -
           (((C404 * C12912 + C27518 * C13246) * C27275 +
             (C404 * C12911 + C27518 * C13245) * C4016) *
                C27516 * C9185 +
            (C13257 + C13256) * C27516 * C9184) *
               C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eezy[22] +=
        (-std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C4059 +
           (C404 * C144 + C27518 * C467) * C4012 - C9888 * C4060 -
           C9950 * C4013 + C9891 * C4061 + C9951 * C4014 - C12780 * C4062 -
           C12821 * C4015) *
              C27516 * C9184 +
          (C9888 * C4059 + C9950 * C4012 - C9891 * C4060 - C9951 * C4013 +
           C12780 * C4061 + C12821 * C4014 -
           (C404 * C12533 + C27518 * C12769) * C4062 -
           (C404 * C12583 + C27518 * C12817) * C4015) *
              C27516 * C9185) *
         C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3609 +
            (C404 * C144 + C27518 * C467) * C3554 - C9888 * C3610 -
            C9950 * C27352) *
               C27516 * C9184 +
           (C9888 * C3609 + C9950 * C3554 - C9891 * C3610 - C9951 * C27352) *
               C27516 * C9185) *
              C3551 +
          ((C3922 - (C3921 + C3920) + C3923) * C27516 * C9184 +
           (C1030 * C3610 - (C1096 * C3554 + C1028 * C3609) + C1097 * C27352) *
               C27516 * C9185) *
              C3552 +
          ((C3926 + C3925 - C3924 - C3927) * C27516 * C9184 +
           (C2186 * C3609 + C2248 * C3554 -
            (C404 * C603 + C27518 * C1012) * C3610 -
            (C404 * C680 + C27518 * C1086) * C27352) *
               C27516 * C9185) *
              C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3609 +
            (C404 * C144 + C27518 * C467) * C3554 - C9888 * C3610 -
            C9950 * C27352) *
               C27516 * C9184 +
           (C9888 * C3609 + C9950 * C3554 - C9891 * C3610 - C9951 * C27352) *
               C27516 * C9185) *
              C27275 * C1215 +
          ((C11893 * C3610 -
            ((C404 * C1294 + C27518 * C1703) * C3554 +
             (C404 * C1220 + C27518 * C1628) * C3609) +
            C11964 * C27352) *
               C27516 * C9184 +
           ((C404 * C5932 + C27518 * C6256) * C3610 -
            (C11964 * C3554 + C11893 * C3609) +
            (C404 * C5990 + C27518 * C6309) * C27352) *
               C27516 * C9185) *
              C27275 * C1216 +
          (((C404 * C1221 + C27518 * C1630) * C3609 +
            (C404 * C1295 + C27518 * C1704) * C3554 - C13254 * C3610 -
            C13311 * C27352) *
               C27516 * C9184 +
           (C13254 * C3609 + C13311 * C3554 -
            (C404 * C12911 + C27518 * C13245) * C3610 -
            (C404 * C12975 + C27518 * C13307) * C27352) *
               C27516 * C9185) *
              C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[22] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C27516 * C9184 +
           (C10002 + C10010) * C27516 * C9185) *
              C4012 -
          ((C10011 + C10007) * C27516 * C9185 +
           (C10010 + C10002) * C27516 * C9184) *
              C4013 +
          ((C10007 + C10011) * C27516 * C9184 +
           (C12857 + C12861) * C27516 * C9185) *
              C4014 -
          (((C404 * C12622 + C27518 * C12855) * C27314 +
            (C404 * C12533 + C27518 * C12769) * C188) *
               C27516 * C9185 +
           (C12861 + C12857) * C27516 * C9184) *
              C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C3554 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C27352) *
              C3551 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C27352 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C3554) *
              C3552 +
          (((C532 + C540) * C27516 * C9184 + (C2301 + C2305) * C27516 * C9185) *
               C3554 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C27516 * C9185 +
            (C2305 + C2301) * C27516 * C9184) *
               C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1354 +
            (C404 * C189 + C27518 * C521) * C1215 -
            (C404 * C1220 + C27518 * C1628) * C1355 -
            (C404 * C1358 + C27518 * C1767) * C1216 +
            (C404 * C1221 + C27518 * C1630) * C1356 +
            (C404 * C1359 + C27518 * C1768) * C1217) *
               C27516 * C9184 +
           (C13363 + C13364 - C13365 - C13366 + C13367 + C13371) * C27516 *
               C9185) *
              C3554 +
          ((C13365 - (C13364 + C13363) + C13366 - C13367 - C13371) * C27516 *
               C9184 +
           ((C404 * C5932 + C27518 * C6256) * C1355 -
            (C10009 * C1215 + C9891 * C1354) +
            (C404 * C6044 + C27518 * C6361) * C1216 -
            (C404 * C12911 + C27518 * C13245) * C1356 -
            (C404 * C13030 + C27518 * C13361) * C1217) *
               C27516 * C9185) *
              C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C26163 +
                       (C9186 * C96 + C27516 * C104) * C27471 -
                       (C9186 * C90 + C27516 * C95) * C26156 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C9184 +
                      (C13422 + C13423 - C13424 - C13425) * C9185) *
                         C27518 * C27482 +
                     (((C9186 * C1218 + C27516 * C1224) * C26156 -
                       ((C9186 * C1227 + C27516 * C1237) * C27471 +
                        (C9186 * C1220 + C27516 * C1228) * C26163) +
                       (C9186 * C1226 + C27516 * C1236) * C27280) *
                          C9184 +
                      (C13904 - (C13905 + C13906) + C13907) * C9185) *
                         C27518 * C27378) *
                        C3554 +
                    (((C13424 - (C13423 + C13422) + C13425) * C9184 +
                      (C13426 - (C13427 + C13428) + C13429) * C9185) *
                         C27518 * C27482 +
                     ((C13906 + C13905 - C13904 - C13907) * C9184 +
                      ((C9186 * C5932 + C27516 * C5936) * C26163 +
                       (C9186 * C5934 + C27516 * C5938) * C27471 -
                       (C9186 * C5931 + C27516 * C5935) * C26156 -
                       (C9186 * C5933 + C27516 * C5937) * C27280) *
                          C9185) *
                         C27518 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C3609 +
             (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
             C9602 * C27352) *
                C9184 +
            (C9528 * C3609 + C9602 * C3554 - C9534 * C3610 - C9603 * C27352) *
                C9185) *
               C27518 * C27471 +
           ((C9530 * C3610 -
             ((C9186 * C145 + C27516 * C150) * C3554 +
              (C9186 * C90 + C27516 * C95) * C3609) +
             C9604 * C27352) *
                C9184 +
            (C9532 * C3610 - (C9604 * C3554 + C9530 * C3609) + C9605 * C27352) *
                C9185) *
               C27518 * C27280) *
              C27482 +
          (((C11464 * C3610 -
             ((C9186 * C1294 + C27516 * C1300) * C3554 +
              (C9186 * C1220 + C27516 * C1228) * C3609) +
             C11540 * C27352) *
                C9184 +
            ((C9186 * C5932 + C27516 * C5936) * C3610 -
             (C11540 * C3554 + C11464 * C3609) +
             (C9186 * C5990 + C27516 * C5992) * C27352) *
                C9185) *
               C27518 * C27471 +
           (((C9186 * C1218 + C27516 * C1224) * C3609 +
             (C9186 * C1292 + C27516 * C1298) * C3554 - C11462 * C3610 -
             C11541 * C27352) *
                C9184 +
            (C11462 * C3609 + C11541 * C3554 -
             (C9186 * C5931 + C27516 * C5935) * C3610 -
             (C9186 * C5989 + C27516 * C5991) * C27352) *
                C9185) *
               C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C2463 +
                       (C9186 * C189 + C27516 * C194) * C27482 -
                       (C9186 * C1220 + C27516 * C1228) * C2464 -
                       (C9186 * C1358 + C27516 * C1364) * C27378) *
                          C9184 +
                      (C11608 + C11609 - C11610 - C11620) * C9185) *
                         C27518 * C3554 +
                     ((C11610 - (C11609 + C11608) + C11620) * C9184 +
                      ((C9186 * C5932 + C27516 * C5936) * C2464 -
                       (C9669 * C27482 + C9534 * C2463) +
                       (C9186 * C6044 + C27516 * C6046) * C27378) *
                          C9185) *
                         C27518 * C27352) *
                        C27471 +
                    ((((C9186 * C1218 + C27516 * C1224) * C2464 -
                       ((C9186 * C190 + C27516 * C195) * C27482 +
                        (C9186 * C90 + C27516 * C95) * C2463) +
                       (C9186 * C1357 + C27516 * C1363) * C27378) *
                          C9184 +
                      (C11613 - (C11614 + C11615) + C11621) * C9185) *
                         C27518 * C3554 +
                     ((C11615 + C11614 - C11613 - C11621) * C9184 +
                      (C9532 * C2463 + C9671 * C27482 -
                       (C9186 * C5931 + C27516 * C5935) * C2464 -
                       (C9186 * C6043 + C27516 * C6045) * C27378) *
                          C9185) *
                         C27518 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) *
                C26163 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27471 -
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C26156 -
            (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
                C27280) *
               C27518 * C27516 * C27482 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C26156 -
            ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                 C27471 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C26163) +
            (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C3554 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C26156 -
            ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                 C27471 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C26163) +
            (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
                C27280) *
               C27518 * C27516 * C27482 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C26163 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27471 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C26156 -
            (C9290 * C5933 + C9185 * C6099 + C9289 * C2891 + C9184 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3609 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C3554 -
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C3610 -
            (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
                C27352) *
               C27518 * C27516 * C27471 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C3610 -
            ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                 C3554 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C3609) +
            (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
                C27352) *
               C27518 * C27516 * C27280) *
              C27482 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C3610 -
            ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                 C3554 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C3609) +
            (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
                C27352) *
               C27518 * C27516 * C27471 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C3609 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C3554 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C3610 -
            (C9290 * C5989 + C9185 * C6152 + C9289 * C2964 + C9184 * C3186) *
                C27352) *
               C27518 * C27516 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C2463 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27482 -
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C2464 -
            (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
                C27378) *
               C27518 * C27516 * C3554 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C2464 -
            ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                 C27482 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C2463) +
            (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
                C27378) *
               C27518 * C27516 * C27352) *
              C27471 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C2464 -
            ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                 C27482 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C2463) +
            (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
                C27378) *
               C27518 * C27516 * C3554 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C2463 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27482 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C2464 -
            (C9290 * C6043 + C9185 * C6204 + C9289 * C3036 + C9184 * C3262) *
                C27378) *
               C27518 * C27516 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C26163 +
                       (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
                       C429 * C27280) *
                          C27516 * C9184 +
                      (C13730 + C13731 - C13732 - C13733) * C27516 * C9185) *
                         C27482 +
                     ((C1648 * C26156 -
                       ((C404 * C1227 + C27518 * C1633) * C27471 +
                        (C404 * C1220 + C27518 * C1628) * C26163) +
                       C1649 * C27280) *
                          C27516 * C9184 +
                      (C14304 - (C14305 + C14306) + C14307) * C27516 * C9185) *
                         C27378) *
                        C3554 +
                    (((C13732 - (C13731 + C13730) + C13733) * C27516 * C9184 +
                      (C13734 - (C13735 + C13736) + C13737) * C27516 * C9185) *
                         C27482 +
                     ((C14306 + C14305 - C14304 - C14307) * C27516 * C9184 +
                      ((C404 * C5932 + C27518 * C6256) * C26163 +
                       (C404 * C5934 + C27518 * C6258) * C27471 -
                       (C404 * C5931 + C27518 * C6255) * C26156 -
                       (C404 * C5933 + C27518 * C6257) * C27280) *
                          C27516 * C9185) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[23] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C3609 +
             (C404 * C144 + C27518 * C467) * C3554 - C9888 * C3610 -
             C9950 * C27352) *
                C27516 * C9184 +
            (C9888 * C3609 + C9950 * C3554 - C9891 * C3610 - C9951 * C27352) *
                C27516 * C9185) *
               C27471 +
           ((C3922 - (C3921 + C3920) + C3923) * C27516 * C9184 +
            (C1030 * C3610 - (C1096 * C3554 + C1028 * C3609) + C1097 * C27352) *
                C27516 * C9185) *
               C27280) *
              C27482 +
          (((C11893 * C3610 -
             ((C404 * C1294 + C27518 * C1703) * C3554 +
              (C404 * C1220 + C27518 * C1628) * C3609) +
             C11964 * C27352) *
                C27516 * C9184 +
            ((C404 * C5932 + C27518 * C6256) * C3610 -
             (C11964 * C3554 + C11893 * C3609) +
             (C404 * C5990 + C27518 * C6309) * C27352) *
                C27516 * C9185) *
               C27471 +
           ((C5814 + C5813 - C5812 - C5815) * C27516 * C9184 +
            (C3348 * C3609 + C3424 * C3554 -
             (C404 * C5931 + C27518 * C6255) * C3610 -
             (C404 * C5989 + C27518 * C6310) * C27352) *
                C27516 * C9185) *
               C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[23] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C2463 +
                       (C404 * C189 + C27518 * C521) * C27482 -
                       (C404 * C1220 + C27518 * C1628) * C2464 -
                       (C404 * C1358 + C27518 * C1767) * C27378) *
                          C27516 * C9184 +
                      (C12031 + C12032 - C12033 - C12037) * C27516 * C9185) *
                         C3554 +
                     ((C12033 - (C12032 + C12031) + C12037) * C27516 * C9184 +
                      ((C404 * C5932 + C27518 * C6256) * C2464 -
                       (C10009 * C27482 + C9891 * C2463) +
                       (C404 * C6044 + C27518 * C6361) * C27378) *
                          C27516 * C9185) *
                         C27352) *
                        C27471 +
                    (((C2811 - (C2810 + C2809) + C2812) * C27516 * C9184 +
                      (C3495 - (C3496 + C3497) + C3501) * C27516 * C9185) *
                         C3554 +
                     ((C3497 + C3496 - C3495 - C3501) * C27516 * C9184 +
                      (C1030 * C2463 + C1163 * C27482 -
                       (C404 * C5931 + C27518 * C6255) * C2464 -
                       (C404 * C6043 + C27518 * C6362) * C27378) *
                          C27516 * C9185) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C9184 +
           (C12088 + C12089 - C12090 - C12091 + C12092 + C12093) * C9185) *
              C27518 * C27314 * C3554 +
          ((C12090 - (C12089 + C12088) + C12091 - C12092 - C12093) * C9184 +
           (C9532 * C3557 - (C9533 * C3551 + C9534 * C3556) + C9535 * C3552 -
            (C9186 * C603 + C27516 * C614) * C3558 -
            (C9186 * C615 + C27516 * C621) * C3553) *
               C9185) *
              C27518 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C9184 +
           (C12538 + C12539) * C9185) *
              C27518 * C27314 * C4012 -
          ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) * C27518 *
              C27314 * C4013 +
          ((C12541 + C12540) * C9184 + (C12548 + C12549) * C9185) * C27518 *
              C27314 * C4014 -
          (((C9186 * C12534 + C27516 * C12536) * C27275 +
            (C9186 * C12533 + C27516 * C12535) * C4016) *
               C9185 +
           (C12549 + C12548) * C9184) *
              C27518 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q));
    d2eexy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3609 +
            (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
            C9602 * C27352) *
               C9184 +
           (C9528 * C3609 + C9602 * C3554 - C9534 * C3610 - C9603 * C27352) *
               C9185) *
              C27518 * C3551 +
          ((C9530 * C3610 -
            ((C9186 * C145 + C27516 * C150) * C3554 +
             (C9186 * C90 + C27516 * C95) * C3609) +
            C9604 * C27352) *
               C9184 +
           (C9532 * C3610 - (C9604 * C3554 + C9530 * C3609) + C9605 * C27352) *
               C9185) *
              C27518 * C3552 +
          (((C9186 * C91 + C27516 * C98) * C3609 +
            (C9186 * C146 + C27516 * C151) * C3554 - C10520 * C3610 -
            C10576 * C27352) *
               C9184 +
           (C10520 * C3609 + C10576 * C3554 -
            (C9186 * C603 + C27516 * C614) * C3610 -
            (C9186 * C680 + C27516 * C686) * C27352) *
               C9185) *
              C27518 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27516 * C94) * C4059 +
           (C9186 * C144 + C27516 * C149) * C4012 - C9528 * C4060 -
           C9602 * C4013 + C9534 * C4061 + C9603 * C4014 - C12546 * C4062 -
           C12588 * C4015) *
              C9184 +
          (C9528 * C4059 + C9602 * C4012 - C9534 * C4060 - C9603 * C4013 +
           C12546 * C4061 + C12588 * C4014 -
           (C9186 * C12533 + C27516 * C12535) * C4062 -
           (C9186 * C12583 + C27516 * C12584) * C4015) *
              C9185) *
         C27518 * C27275 * C27314) /
            (p * q * std::sqrt(p + q));
    d2eexz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C9184 +
            (C9656 + C9672) * C9185) *
               C27518 * C3554 -
           ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 *
               C27352) *
              C3551 +
          (((C9662 + C9674) * C9184 + (C9665 + C9675) * C9185) * C27518 *
               C27352 -
           ((C9674 + C9662) * C9185 + ((C9186 * C190 + C27516 * C195) * C27314 +
                                       (C9186 * C90 + C27516 * C95) * C188) *
                                          C9184) *
               C27518 * C3554) *
              C3552 +
          ((((C9186 * C91 + C27516 * C98) * C188 +
             (C9186 * C191 + C27516 * C196) * C27314) *
                C9184 +
            (C10627 + C10631) * C9185) *
               C27518 * C3554 -
           (((C9186 * C742 + C27516 * C748) * C27314 +
             (C9186 * C603 + C27516 * C614) * C188) *
                C9185 +
            (C10631 + C10627) * C9184) *
               C27518 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C188 +
            (C9186 * C189 + C27516 * C194) * C27314) *
               C9184 +
           (C9656 + C9672) * C9185) *
              C27518 * C4012 -
          ((C9673 + C9661) * C9185 + (C9672 + C9656) * C9184) * C27518 * C4013 +
          ((C9661 + C9673) * C9184 + (C12625 + C12629) * C9185) * C27518 *
              C4014 -
          (((C9186 * C12622 + C27516 * C12623) * C27314 +
            (C9186 * C12533 + C27516 * C12535) * C188) *
               C9185 +
           (C12629 + C12625) * C9184) *
              C27518 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3556 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C3551 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C3557 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C3552 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3558 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C3553) *
              C27518 * C27516 * C27314 * C3554 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C3557 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C3551 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C3556) +
           (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) * C3552 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C3558 -
           (C9290 * C615 + C9185 * C810 + C9289 * C609 + C9184 * C807) *
               C3553) *
              C27518 * C27516 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
               C27275) *
              C27518 * C27516 * C27314 * C4012 -
          ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
               C27275 +
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
               C4016) *
              C27518 * C27516 * C27314 * C4013 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C4016 +
           (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
               C27275) *
              C27518 * C27516 * C27314 * C4014 -
          ((C9290 * C12534 + C9185 * C12664 + C9289 * C4020 + C9184 * C4142) *
               C27275 +
           (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
               C4016) *
              C27518 * C27516 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3609 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C3554 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C3610 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27352) *
              C27518 * C27516 * C3551 +
          ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C3610 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C3554 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C3609) +
           (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
               C27352) *
              C27518 * C27516 * C3552 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3609 +
           (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) * C3554 -
           (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) * C3610 -
           (C9290 * C680 + C9185 * C878 + C9289 * C679 + C9184 * C877) *
               C27352) *
              C27518 * C27516 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4059 +
          (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C4012 -
          (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C4060 -
          (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C4013 +
          (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
              C4061 +
          (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
              C4014 -
          (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
              C4062 -
          (C9290 * C12583 + C9185 * C12699 + C9289 * C4064 + C9184 * C4177) *
              C4015) *
         C27518 * C27516 * C27275 * C27314) /
            (p * q * std::sqrt(p + q));
    d2eeyz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C27314) *
               C27518 * C27516 * C3554 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27314 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C188) *
               C27518 * C27516 * C27352) *
              C3551 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) * C188 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C27314) *
               C27518 * C27516 * C27352 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27314 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C188) *
               C27518 * C27516 * C3554) *
              C3552 +
          (((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C188 +
            (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) *
                C27314) *
               C27518 * C27516 * C3554 -
           ((C9290 * C742 + C9185 * C946 + C9289 * C741 + C9184 * C945) *
                C27314 +
            (C9290 * C603 + C9185 * C804 + C9289 * C599 + C9184 * C801) *
                C188) *
               C27518 * C27516 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C188 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27314) *
              C27518 * C27516 * C4012 -
          ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
               C27314 +
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C188) *
              C27518 * C27516 * C4013 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C188 +
           (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
               C27314) *
              C27518 * C27516 * C4014 -
          ((C9290 * C12622 + C9185 * C12734 + C9289 * C4102 + C9184 * C4214) *
               C27314 +
           (C9290 * C12533 + C9185 * C12663 + C9289 * C4018 + C9184 * C4140) *
               C188) *
              C27518 * C27516 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[24] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C3556 +
                      (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 -
                      C429 * C3552 + C430 * C3558 + C431 * C3553) *
                         C27516 * C9184 +
                     (C12394 + C12395 - C12396 - C12397 + C12398 + C12399) *
                         C27516 * C9185) *
                        C27314 * C3554 +
                    ((C12396 - (C12395 + C12394) + C12397 - C12398 - C12399) *
                         C27516 * C9184 +
                     (C1030 * C3557 - (C9890 * C3551 + C9891 * C3556) +
                      C1031 * C3552 - (C404 * C603 + C27518 * C1012) * C3558 -
                      (C404 * C615 + C27518 * C1018) * C3553) *
                         C27516 * C9185) *
                        C27314 * C27352)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C4016 +
                      (C404 * C96 + C27518 * C410) * C27275) *
                         C27516 * C9184 +
                     (C12772 + C12773) * C27516 * C9185) *
                        C27314 * C4012 -
                    ((C12774 + C12775) * C27516 * C9185 +
                     (C12773 + C12772) * C27516 * C9184) *
                        C27314 * C4013 +
                    ((C12775 + C12774) * C27516 * C9184 +
                     (C12782 + C12783) * C27516 * C9185) *
                        C27314 * C4014 -
                    (((C404 * C12534 + C27518 * C12770) * C27275 +
                      (C404 * C12533 + C27518 * C12769) * C4016) *
                         C27516 * C9185 +
                     (C12783 + C12782) * C27516 * C9184) *
                        C27314 * C4015)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3609 +
            (C404 * C144 + C27518 * C467) * C3554 - C9888 * C3610 -
            C9950 * C27352) *
               C27516 * C9184 +
           (C9888 * C3609 + C9950 * C3554 - C9891 * C3610 - C9951 * C27352) *
               C27516 * C9185) *
              C3551 +
          ((C3922 - (C3921 + C3920) + C3923) * C27516 * C9184 +
           (C1030 * C3610 - (C1096 * C3554 + C1028 * C3609) + C1097 * C27352) *
               C27516 * C9185) *
              C3552 +
          ((C3926 + C3925 - C3924 - C3927) * C27516 * C9184 +
           (C2186 * C3609 + C2248 * C3554 -
            (C404 * C603 + C27518 * C1012) * C3610 -
            (C404 * C680 + C27518 * C1086) * C27352) *
               C27516 * C9185) *
              C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C4059 +
           (C404 * C144 + C27518 * C467) * C4012 - C9888 * C4060 -
           C9950 * C4013 + C9891 * C4061 + C9951 * C4014 - C12780 * C4062 -
           C12821 * C4015) *
              C27516 * C9184 +
          (C9888 * C4059 + C9950 * C4012 - C9891 * C4060 - C9951 * C4013 +
           C12780 * C4061 + C12821 * C4014 -
           (C404 * C12533 + C27518 * C12769) * C4062 -
           (C404 * C12583 + C27518 * C12817) * C4015) *
              C27516 * C9185) *
         C27275 * C27314) /
            (p * q * std::sqrt(p + q));
    d2eezz[24] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C188 +
             (C404 * C189 + C27518 * C521) * C27314) *
                C27516 * C9184 +
            (C10002 + C10010) * C27516 * C9185) *
               C3554 -
           ((C10011 + C10007) * C27516 * C9185 +
            (C10010 + C10002) * C27516 * C9184) *
               C27352) *
              C3551 +
          (((C1158 + C1164) * C27516 * C9184 +
            (C1159 + C1165) * C27516 * C9185) *
               C27352 -
           ((C1164 + C1158) * C27516 * C9185 + (C539 + C527) * C27516 * C9184) *
               C3554) *
              C3552 +
          (((C532 + C540) * C27516 * C9184 + (C2301 + C2305) * C27516 * C9185) *
               C3554 -
           (((C404 * C742 + C27518 * C1154) * C27314 +
             (C404 * C603 + C27518 * C1012) * C188) *
                C27516 * C9185 +
            (C2305 + C2301) * C27516 * C9184) *
               C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C188 +
            (C404 * C189 + C27518 * C521) * C27314) *
               C27516 * C9184 +
           (C10002 + C10010) * C27516 * C9185) *
              C4012 -
          ((C10011 + C10007) * C27516 * C9185 +
           (C10010 + C10002) * C27516 * C9184) *
              C4013 +
          ((C10007 + C10011) * C27516 * C9184 +
           (C12857 + C12861) * C27516 * C9185) *
              C4014 -
          (((C404 * C12622 + C27518 * C12855) * C27314 +
            (C404 * C12533 + C27518 * C12769) * C188) *
               C27516 * C9185 +
           (C12861 + C12857) * C27516 * C9184) *
              C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C26163 +
                       (C9186 * C96 + C27516 * C104) * C27471 -
                       (C9186 * C90 + C27516 * C95) * C26156 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C9184 +
                      (C13422 + C13423 - C13424 - C13425) * C9185) *
                         C27518 * C6413 +
                     (((C9186 * C1218 + C27516 * C1224) * C26156 -
                       ((C9186 * C1227 + C27516 * C1237) * C27471 +
                        (C9186 * C1220 + C27516 * C1228) * C26163) +
                       (C9186 * C1226 + C27516 * C1236) * C27280) *
                          C9184 +
                      (C13904 - (C13905 + C13906) + C13907) * C9185) *
                         C27518 * C27378) *
                        C27481 +
                    (((C13424 - (C13423 + C13422) + C13425) * C9184 +
                      (C13426 - (C13427 + C13428) + C13429) * C9185) *
                         C27518 * C6413 +
                     ((C13906 + C13905 - C13904 - C13907) * C9184 +
                      (C14498 * C26163 + C14499 * C27471 -
                       (C9186 * C5931 + C27516 * C5935) * C26156 -
                       (C9186 * C5933 + C27516 * C5937) * C27280) *
                          C9185) *
                         C27518 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C1897 +
             (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
             C9602 * C27352) *
                C9184 +
            (C9528 * C1897 + C9602 * C27481 - C9534 * C1898 - C9603 * C27352) *
                C9185) *
               C27518 * C27471 +
           ((C9530 * C1898 -
             ((C9186 * C145 + C27516 * C150) * C27481 +
              (C9186 * C90 + C27516 * C95) * C1897) +
             C9604 * C27352) *
                C9184 +
            (C9532 * C1898 - (C9604 * C27481 + C9530 * C1897) +
             C9605 * C27352) *
                C9185) *
               C27518 * C27280) *
              C6413 +
          (((C11464 * C1898 -
             ((C9186 * C1294 + C27516 * C1300) * C27481 +
              (C9186 * C1220 + C27516 * C1228) * C1897) +
             C11540 * C27352) *
                C9184 +
            (C14498 * C1898 - (C11540 * C27481 + C11464 * C1897) +
             C14556 * C27352) *
                C9185) *
               C27518 * C27471 +
           (((C9186 * C1218 + C27516 * C1224) * C1897 +
             (C9186 * C1292 + C27516 * C1298) * C27481 - C11462 * C1898 -
             C11541 * C27352) *
                C9184 +
            (C11462 * C1897 + C11541 * C27481 -
             (C9186 * C5931 + C27516 * C5935) * C1898 -
             (C9186 * C5989 + C27516 * C5991) * C27352) *
                C9185) *
               C27518 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C6515 +
                       (C9186 * C189 + C27516 * C194) * C6413 -
                       (C9186 * C1220 + C27516 * C1228) * C6516 -
                       (C9186 * C1358 + C27516 * C1364) * C27378) *
                          C9184 +
                      (C15542 + C15543 - C15544 - C15545) * C9185) *
                         C27518 * C27481 +
                     ((C15544 - (C15543 + C15542) + C15545) * C9184 +
                      (C15546 - (C15547 + C15548) + C15549) * C9185) *
                         C27518 * C27352) *
                        C27471 +
                    ((((C9186 * C1218 + C27516 * C1224) * C6516 -
                       ((C9186 * C190 + C27516 * C195) * C6413 +
                        (C9186 * C90 + C27516 * C95) * C6515) +
                       (C9186 * C1357 + C27516 * C1363) * C27378) *
                          C9184 +
                      (C16378 - (C16379 + C16380) + C16381) * C9185) *
                         C27518 * C27481 +
                     ((C16380 + C16379 - C16378 - C16381) * C9184 +
                      (C9532 * C6515 + C9671 * C6413 -
                       (C9186 * C5931 + C27516 * C5935) * C6516 -
                       (C9186 * C6043 + C27516 * C6045) * C27378) *
                          C9185) *
                         C27518 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) *
                C26163 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27471 -
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C26156 -
            (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
                C27280) *
               C27518 * C27516 * C6413 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C26156 -
            ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                 C27471 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C26163) +
            (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C27481 +
          (((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C26156 -
            ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                 C27471 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C26163) +
            (C9289 * C606 + C9184 * C806 + C9290 * C613 + C9185 * C809) *
                C27280) *
               C27518 * C27516 * C6413 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C26163 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27471 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C26156 -
            (C9290 * C5933 + C9185 * C6099 + C9289 * C2891 + C9184 * C3111) *
                C27280) *
               C27518 * C27516 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1897 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27481 -
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C1898 -
            (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
                C27352) *
               C27518 * C27516 * C27471 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C1898 -
            ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                 C27481 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C1897) +
            (C9289 * C675 + C9184 * C875 + C9290 * C678 + C9185 * C876) *
                C27352) *
               C27518 * C27516 * C27280) *
              C6413 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C1898 -
            ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                 C27481 +
             (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                 C1897) +
            (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
                C27352) *
               C27518 * C27516 * C27471 +
           ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C1897 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27481 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C1898 -
            (C9290 * C5989 + C9185 * C6152 + C9289 * C2964 + C9184 * C3186) *
                C27352) *
               C27518 * C27516 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C6515 +
            (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
                C6413 -
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C6516 -
            (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
                C27378) *
               C27518 * C27516 * C27481 +
           ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C6516 -
            ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                 C6413 +
             (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                 C6515) +
            (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
                C27378) *
               C27518 * C27516 * C27352) *
              C27471 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C6516 -
            ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                 C6413 +
             (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                 C6515) +
            (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
                C27378) *
               C27518 * C27516 * C27481 +
           ((C9289 * C598 + C9184 * C799 + C9290 * C602 + C9185 * C803) *
                C6515 +
            (C9289 * C737 + C9184 * C941 + C9290 * C740 + C9185 * C944) *
                C6413 -
            (C9290 * C5931 + C9185 * C6097 + C9289 * C2886 + C9184 * C3108) *
                C6516 -
            (C9290 * C6043 + C9185 * C6204 + C9289 * C3036 + C9184 * C3262) *
                C27378) *
               C27518 * C27516 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C26163 +
                       (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
                       C429 * C27280) *
                          C27516 * C9184 +
                      (C13730 + C13731 - C13732 - C13733) * C27516 * C9185) *
                         C6413 +
                     ((C1648 * C26156 -
                       ((C404 * C1227 + C27518 * C1633) * C27471 +
                        (C404 * C1220 + C27518 * C1628) * C26163) +
                       C1649 * C27280) *
                          C27516 * C9184 +
                      (C14304 - (C14305 + C14306) + C14307) * C27516 * C9185) *
                         C27378) *
                        C27481 +
                    (((C13732 - (C13731 + C13730) + C13733) * C27516 * C9184 +
                      (C13734 - (C13735 + C13736) + C13737) * C27516 * C9185) *
                         C6413 +
                     ((C14306 + C14305 - C14304 - C14307) * C27516 * C9184 +
                      (C14826 * C26163 + C14827 * C27471 -
                       (C404 * C5931 + C27518 * C6255) * C26156 -
                       (C404 * C5933 + C27518 * C6257) * C27280) *
                          C27516 * C9185) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[25] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C404 * C89 + C27518 * C405) * C1897 +
             (C404 * C144 + C27518 * C467) * C27481 - C9888 * C1898 -
             C9950 * C27352) *
                C27516 * C9184 +
            (C9888 * C1897 + C9950 * C27481 - C9891 * C1898 - C9951 * C27352) *
                C27516 * C9185) *
               C27471 +
           ((C2241 - (C2240 + C2239) + C2242) * C27516 * C9184 +
            (C1030 * C1898 - (C1096 * C27481 + C1028 * C1897) +
             C1097 * C27352) *
                C27516 * C9185) *
               C27280) *
              C6413 +
          (((C11893 * C1898 -
             ((C404 * C1294 + C27518 * C1703) * C27481 +
              (C404 * C1220 + C27518 * C1628) * C1897) +
             C11964 * C27352) *
                C27516 * C9184 +
            (C14826 * C1898 - (C11964 * C27481 + C11893 * C1897) +
             C14883 * C27352) *
                C27516 * C9185) *
               C27471 +
           ((C3421 + C3420 - C3419 - C3425) * C27516 * C9184 +
            (C3348 * C1897 + C3424 * C27481 -
             (C404 * C5931 + C27518 * C6255) * C1898 -
             (C404 * C5989 + C27518 * C6310) * C27352) *
                C27516 * C9185) *
               C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[25] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C6515 +
                       (C404 * C189 + C27518 * C521) * C6413 -
                       (C404 * C1220 + C27518 * C1628) * C6516 -
                       (C404 * C1358 + C27518 * C1767) * C27378) *
                          C27516 * C9184 +
                      (C15850 + C15851 - C15852 - C15853) * C27516 * C9185) *
                         C27481 +
                     ((C15852 - (C15851 + C15850) + C15853) * C27516 * C9184 +
                      (C15854 - (C15855 + C15856) + C15857) * C27516 * C9185) *
                         C27352) *
                        C27471 +
                    (((C6828 - (C6827 + C6826) + C6829) * C27516 * C9184 +
                      (C8228 - (C8229 + C8230) + C8231) * C27516 * C9185) *
                         C27481 +
                     ((C8230 + C8229 - C8228 - C8231) * C27516 * C9184 +
                      (C1030 * C6515 + C1163 * C6413 -
                       (C404 * C5931 + C27518 * C6255) * C6516 -
                       (C404 * C6043 + C27518 * C6362) * C27378) *
                          C27516 * C9185) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eexx[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C4016 +
                       (C9186 * C96 + C27516 * C104) * C27275) *
                          C9184 +
                      (C12538 + C12539) * C9185) *
                         C27518 * C27511 -
                     ((C12916 + C12917) * C9185 +
                      ((C9186 * C1227 + C27516 * C1237) * C27275 +
                       (C9186 * C1220 + C27516 * C1228) * C4016) *
                          C9184) *
                         C27518 * C27512 +
                     (((C9186 * C1221 + C27516 * C1230) * C4016 +
                       (C9186 * C1232 + C27516 * C1239) * C27275) *
                          C9184 +
                      (C12924 + C12925) * C9185) *
                         C27518 * C8283) *
                        C27481 +
                    (((C12917 + C12916) * C9184 + (C14500 + C14501) * C9185) *
                         C27518 * C27512 -
                     ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) *
                         C27518 * C27511 -
                     (((C9186 * C12912 + C27516 * C12914) * C27275 +
                       (C9186 * C12911 + C27516 * C12913) * C4016) *
                          C9185 +
                      (C12925 + C12924) * C9184) *
                         C27518 * C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1897 +
            (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
            C9602 * C27352) *
               C9184 +
           (C9528 * C1897 + C9602 * C27481 - C9534 * C1898 - C9603 * C27352) *
               C9185) *
              C27518 * C27275 * C27511 +
          ((C11464 * C1898 -
            ((C9186 * C1294 + C27516 * C1300) * C27481 +
             (C9186 * C1220 + C27516 * C1228) * C1897) +
            C11540 * C27352) *
               C9184 +
           (C14498 * C1898 - (C11540 * C27481 + C11464 * C1897) +
            C14556 * C27352) *
               C9185) *
              C27518 * C27275 * C27512 +
          (((C9186 * C1221 + C27516 * C1230) * C1897 +
            (C9186 * C1295 + C27516 * C1301) * C27481 - C12922 * C1898 -
            C12980 * C27352) *
               C9184 +
           (C12922 * C1897 + C12980 * C27481 -
            (C9186 * C12911 + C27516 * C12913) * C1898 -
            (C9186 * C12975 + C27516 * C12976) * C27352) *
               C9185) *
              C27518 * C27275 * C8283)) /
        (p * q * std::sqrt(p + q));
    d2eexz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C8384 +
            (C9186 * C189 + C27516 * C194) * C27511 -
            (C9186 * C1220 + C27516 * C1228) * C8385 -
            (C9186 * C1358 + C27516 * C1364) * C27512 +
            (C9186 * C1221 + C27516 * C1230) * C8386 +
            (C9186 * C1359 + C27516 * C1365) * C8283) *
               C9184 +
           (C17378 + C17379 - C17380 - C17381 + C17382 + C17383) * C9185) *
              C27518 * C27481 +
          ((C17380 - (C17379 + C17378) + C17381 - C17382 - C17383) * C9184 +
           (C14498 * C8385 - (C9669 * C27511 + C9534 * C8384) +
            C14614 * C27512 - (C9186 * C12911 + C27516 * C12913) * C8386 -
            (C9186 * C13030 + C27516 * C13031) * C8283) *
               C9185) *
              C27518 * C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eeyx[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27275) *
               C27518 * C27516 * C27511 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27275 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4016) *
               C27518 * C27516 * C27512 +
           ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
                C4016 +
            (C9289 * C1232 + C9184 * C1428 + C9290 * C4378 + C9185 * C4544) *
                C27275) *
               C27518 * C27516 * C8283) *
              C27481 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C4016 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27275) *
               C27518 * C27516 * C27512 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27275 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C4016) *
               C27518 * C27516 * C27511 -
           ((C9290 * C12912 + C9185 * C13092 + C9289 * C4378 + C9184 * C4544) *
                C27275 +
            (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
                C4016) *
               C27518 * C27516 * C8283) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eeyy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C1897 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27481 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C1898 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) *
               C27352) *
              C27518 * C27516 * C27275 * C27511 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C1898 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27481 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C1897) +
           (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
               C27352) *
              C27518 * C27516 * C27275 * C27512 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C1897 +
           (C9289 * C1295 + C9184 * C1496 + C9290 * C4434 + C9185 * C4595) *
               C27481 -
           (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
               C1898 -
           (C9290 * C12975 + C9185 * C13143 + C9289 * C4434 + C9184 * C4595) *
               C27352) *
              C27518 * C27516 * C27275 * C8283)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C8384 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27511 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C8385 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27512 +
           (C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C8386 +
           (C9289 * C1359 + C9184 * C1560 + C9290 * C4488 + C9185 * C4647) *
               C8283) *
              C27518 * C27516 * C27481 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C8385 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C27511 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C8384) +
           (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
               C27512 -
           (C9290 * C12911 + C9185 * C13091 + C9289 * C4376 + C9184 * C4542) *
               C8386 -
           (C9290 * C13030 + C9185 * C13194 + C9289 * C4488 + C9184 * C4647) *
               C8283) *
              C27518 * C27516 * C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eezx[26] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C4016 +
                       (C404 * C96 + C27518 * C410) * C27275) *
                          C27516 * C9184 +
                      (C12772 + C12773) * C27516 * C9185) *
                         C27511 -
                     ((C13248 + C13249) * C27516 * C9185 +
                      ((C404 * C1227 + C27518 * C1633) * C27275 +
                       (C404 * C1220 + C27518 * C1628) * C4016) *
                          C27516 * C9184) *
                         C27512 +
                     (((C404 * C1221 + C27518 * C1630) * C4016 +
                       (C404 * C1232 + C27518 * C1636) * C27275) *
                          C27516 * C9184 +
                      (C13256 + C13257) * C27516 * C9185) *
                         C8283) *
                        C27481 +
                    (((C13249 + C13248) * C27516 * C9184 +
                      (C14828 + C14829) * C27516 * C9185) *
                         C27512 -
                     ((C12774 + C12775) * C27516 * C9185 +
                      (C12773 + C12772) * C27516 * C9184) *
                         C27511 -
                     (((C404 * C12912 + C27518 * C13246) * C27275 +
                       (C404 * C12911 + C27518 * C13245) * C4016) *
                          C27516 * C9185 +
                      (C13257 + C13256) * C27516 * C9184) *
                         C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eezy[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C1897 +
            (C404 * C144 + C27518 * C467) * C27481 - C9888 * C1898 -
            C9950 * C27352) *
               C27516 * C9184 +
           (C9888 * C1897 + C9950 * C27481 - C9891 * C1898 - C9951 * C27352) *
               C27516 * C9185) *
              C27275 * C27511 +
          ((C11893 * C1898 -
            ((C404 * C1294 + C27518 * C1703) * C27481 +
             (C404 * C1220 + C27518 * C1628) * C1897) +
            C11964 * C27352) *
               C27516 * C9184 +
           (C14826 * C1898 - (C11964 * C27481 + C11893 * C1897) +
            C14883 * C27352) *
               C27516 * C9185) *
              C27275 * C27512 +
          (((C404 * C1221 + C27518 * C1630) * C1897 +
            (C404 * C1295 + C27518 * C1704) * C27481 - C13254 * C1898 -
            C13311 * C27352) *
               C27516 * C9184 +
           (C13254 * C1897 + C13311 * C27481 -
            (C404 * C12911 + C27518 * C13245) * C1898 -
            (C404 * C12975 + C27518 * C13307) * C27352) *
               C27516 * C9185) *
              C27275 * C8283)) /
        (p * q * std::sqrt(p + q));
    d2eezz[26] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C8384 +
            (C404 * C189 + C27518 * C521) * C27511 -
            (C404 * C1220 + C27518 * C1628) * C8385 -
            (C404 * C1358 + C27518 * C1767) * C27512 +
            (C404 * C1221 + C27518 * C1630) * C8386 +
            (C404 * C1359 + C27518 * C1768) * C8283) *
               C27516 * C9184 +
           (C17684 + C17685 - C17686 - C17687 + C17688 + C17689) * C27516 *
               C9185) *
              C27481 +
          ((C17686 - (C17685 + C17684) + C17687 - C17688 - C17689) * C27516 *
               C9184 +
           (C14826 * C8385 - (C10009 * C27511 + C9891 * C8384) +
            C14940 * C27512 - (C404 * C12911 + C27518 * C13245) * C8386 -
            (C404 * C13030 + C27518 * C13361) * C8283) *
               C27516 * C9185) *
              C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eexx[27] +=
        (-std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C4016 +
             (C9186 * C96 + C27516 * C104) * C27275) *
                C9184 +
            (C12538 + C12539) * C9185) *
               C27518 * C6413 -
           ((C12916 + C12917) * C9185 +
            ((C9186 * C1227 + C27516 * C1237) * C27275 +
             (C9186 * C1220 + C27516 * C1228) * C4016) *
                C9184) *
               C27518 * C27378) *
              C593 +
          (((C12917 + C12916) * C9184 + (C14500 + C14501) * C9185) * C27518 *
               C27378 -
           ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) * C27518 *
               C6413) *
              C594 +
          (((C12541 + C12540) * C9184 + (C12548 + C12549) * C9185) * C27518 *
               C6413 -
           (((C9186 * C14490 + C27516 * C14492) * C27275 +
             (C9186 * C14489 + C27516 * C14491) * C4016) *
                C9185 +
            (C14501 + C14500) * C9184) *
               C27518 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C9184 +
           (C12088 + C12089 - C12090 - C12091 + C12092 + C12093) * C9185) *
              C27518 * C6413 +
          (((C9186 * C1218 + C27516 * C1224) * C3557 -
            ((C9186 * C1227 + C27516 * C1237) * C3551 +
             (C9186 * C1220 + C27516 * C1228) * C3556) +
            (C9186 * C1226 + C27516 * C1236) * C3552 -
            (C9186 * C1219 + C27516 * C1225) * C3558 -
            (C9186 * C1229 + C27516 * C1238) * C3553) *
               C9184 +
           (C11462 * C3557 - (C11463 * C3551 + C11464 * C3556) +
            C11465 * C3552 - (C9186 * C2887 + C27516 * C2892) * C3558 -
            (C9186 * C2893 + C27516 * C2896) * C3553) *
               C9185) *
              C27518 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C9184 +
           (C12538 + C12539) * C9185) *
              C27518 * C7317 -
          ((C12916 + C12917) * C9185 +
           ((C9186 * C1227 + C27516 * C1237) * C27275 +
            (C9186 * C1220 + C27516 * C1228) * C4016) *
               C9184) *
              C27518 * C7318 +
          (((C9186 * C1221 + C27516 * C1230) * C4016 +
            (C9186 * C1232 + C27516 * C1239) * C27275) *
               C9184 +
           (C12924 + C12925) * C9185) *
              C27518 * C7319 -
          (((C9186 * C15892 + C27516 * C15894) * C27275 +
            (C9186 * C15891 + C27516 * C15893) * C4016) *
               C9185 +
           ((C9186 * C7324 + C27516 * C7328) * C27275 +
            (C9186 * C7322 + C27516 * C7326) * C4016) *
               C9184) *
              C27518 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eexy[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C672 +
            (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
            C9602 * C594 + C9534 * C674 + C9603 * C595) *
               C9184 +
           (C9528 * C672 + C9602 * C593 - C9534 * C673 - C9603 * C594 +
            C12546 * C674 + C12588 * C595) *
               C9185) *
              C27518 * C27275 * C6413 +
          ((C11464 * C673 -
            ((C9186 * C1294 + C27516 * C1300) * C593 +
             (C9186 * C1220 + C27516 * C1228) * C672) +
            C11540 * C594 - C14498 * C674 - C14556 * C595) *
               C9184 +
           (C14498 * C673 - (C11540 * C593 + C11464 * C672) + C14556 * C594 -
            (C9186 * C14489 + C27516 * C14491) * C674 -
            (C9186 * C14551 + C27516 * C14552) * C595) *
               C9185) *
              C27518 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C9186 * C89 + C27516 * C94) * C143 +
                                 (C9186 * C144 + C27516 * C149) * C27303) *
                                    C9184 +
                                (C9528 * C143 + C9602 * C27303) * C9185) *
                                   C27518 * C3551 -
                               ((C9604 * C27303 + C9530 * C143) * C9185 +
                                ((C9186 * C145 + C27516 * C150) * C27303 +
                                 (C9186 * C90 + C27516 * C95) * C143) *
                                    C9184) *
                                   C27518 * C3552 +
                               (((C9186 * C91 + C27516 * C98) * C143 +
                                 (C9186 * C146 + C27516 * C151) * C27303) *
                                    C9184 +
                                (C10520 * C143 + C10576 * C27303) * C9185) *
                                   C27518 * C3553) *
                                  C6413 +
                              ((((C9186 * C1218 + C27516 * C1224) * C143 +
                                 (C9186 * C1292 + C27516 * C1298) * C27303) *
                                    C9184 +
                                (C11462 * C143 + C11541 * C27303) * C9185) *
                                   C27518 * C3552 -
                               ((C11540 * C27303 + C11464 * C143) * C9185 +
                                ((C9186 * C1294 + C27516 * C1300) * C27303 +
                                 (C9186 * C1220 + C27516 * C1228) * C143) *
                                    C9184) *
                                   C27518 * C3551 -
                               (((C9186 * C2965 + C27516 * C2968) * C27303 +
                                 (C9186 * C2887 + C27516 * C2892) * C143) *
                                    C9185 +
                                ((C9186 * C1293 + C27516 * C1299) * C27303 +
                                 (C9186 * C1219 + C27516 * C1225) * C143) *
                                    C9184) *
                                   C27518 * C3553) *
                                  C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C143 +
            (C9186 * C144 + C27516 * C149) * C27303) *
               C9184 +
           (C9528 * C143 + C9602 * C27303) * C9185) *
              C27518 * C27275 * C7317 -
          ((C11540 * C27303 + C11464 * C143) * C9185 +
           ((C9186 * C1294 + C27516 * C1300) * C27303 +
            (C9186 * C1220 + C27516 * C1228) * C143) *
               C9184) *
              C27518 * C27275 * C7318 +
          (((C9186 * C1221 + C27516 * C1230) * C143 +
            (C9186 * C1295 + C27516 * C1301) * C27303) *
               C9184 +
           (C12922 * C143 + C12980 * C27303) * C9185) *
              C27518 * C27275 * C7319 -
          (((C9186 * C15929 + C27516 * C15930) * C27303 +
            (C9186 * C15891 + C27516 * C15893) * C143) *
               C9185 +
           ((C9186 * C7364 + C27516 * C7366) * C27303 +
            (C9186 * C7322 + C27516 * C7326) * C143) *
               C9184) *
              C27518 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eexz[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C6515 +
            (C9186 * C189 + C27516 * C194) * C6413 -
            (C9186 * C1220 + C27516 * C1228) * C6516 -
            (C9186 * C1358 + C27516 * C1364) * C27378) *
               C9184 +
           (C15542 + C15543 - C15544 - C15545) * C9185) *
              C27518 * C593 +
          ((C15544 - (C15543 + C15542) + C15545) * C9184 +
           (C15546 - (C15547 + C15548) + C15549) * C9185) *
              C27518 * C594 +
          ((C15548 + C15547 - C15546 - C15549) * C9184 +
           (C12546 * C6515 + C12628 * C6413 -
            (C9186 * C14489 + C27516 * C14491) * C6516 -
            (C9186 * C14606 + C27516 * C14607) * C27378) *
               C9185) *
              C27518 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C6515 +
            (C9186 * C189 + C27516 * C194) * C6413 -
            (C9186 * C1220 + C27516 * C1228) * C6516 -
            (C9186 * C1358 + C27516 * C1364) * C27378) *
               C9184 +
           (C9528 * C6515 + C9668 * C6413 - C11464 * C6516 - C11618 * C27378) *
               C9185) *
              C27518 * C27303 * C3551 +
          (((C9186 * C1218 + C27516 * C1224) * C6516 -
            ((C9186 * C190 + C27516 * C195) * C6413 +
             (C9186 * C90 + C27516 * C95) * C6515) +
            (C9186 * C1357 + C27516 * C1363) * C27378) *
               C9184 +
           (C11462 * C6516 - (C9670 * C6413 + C9530 * C6515) +
            C11619 * C27378) *
               C9185) *
              C27518 * C27303 * C3552 +
          (((C9186 * C91 + C27516 * C98) * C6515 +
            (C9186 * C191 + C27516 * C196) * C6413 -
            (C9186 * C1219 + C27516 * C1225) * C6516 -
            (C9186 * C1361 + C27516 * C1367) * C27378) *
               C9184 +
           (C10520 * C6515 + C10630 * C6413 -
            (C9186 * C2887 + C27516 * C2892) * C6516 -
            (C9186 * C3037 + C27516 * C3040) * C27378) *
               C9185) *
              C27518 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9186 * C89 + C27516 * C94) * C7401 +
           (C9186 * C189 + C27516 * C194) * C7317 -
           (C9186 * C1220 + C27516 * C1228) * C7402 -
           (C9186 * C1358 + C27516 * C1364) * C7318 +
           (C9186 * C1221 + C27516 * C1230) * C7403 +
           (C9186 * C1359 + C27516 * C1365) * C7319 -
           (C9186 * C7322 + C27516 * C7326) * C7404 -
           (C9186 * C7406 + C27516 * C7408) * C7320) *
              C9184 +
          (C9528 * C7401 + C9668 * C7317 - C11464 * C7402 - C11618 * C7318 +
           C12922 * C7403 + C13040 * C7319 -
           (C9186 * C15891 + C27516 * C15893) * C7404 -
           (C9186 * C15965 + C27516 * C15966) * C7320) *
              C9185) *
         C27518 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27275) *
               C27518 * C27516 * C6413 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27275 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4016) *
               C27518 * C27516 * C27378) *
              C593 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C4016 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27275) *
               C27518 * C27516 * C27378 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27275 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C4016) *
               C27518 * C27516 * C6413) *
              C594 +
          (((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C4016 +
            (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
                C27275) *
               C27518 * C27516 * C6413 -
           ((C9290 * C14490 + C9185 * C14666 + C9289 * C5934 + C9184 * C6100) *
                C27275 +
            (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
                C4016) *
               C27518 * C27516 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3556 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C3551 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C3557 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C3552 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3558 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C3553) *
              C27518 * C27516 * C6413 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C3557 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C3551 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C3556) +
           (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
               C3552 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C3558 -
           (C9290 * C2893 + C9185 * C3112 + C9289 * C1229 + C9184 * C1427) *
               C3553) *
              C27518 * C27516 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
               C27275) *
              C27518 * C27516 * C7317 -
          ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
               C27275 +
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C4016) *
              C27518 * C27516 * C7318 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C4016 +
           (C9289 * C1232 + C9184 * C1428 + C9290 * C4378 + C9185 * C4544) *
               C27275) *
              C27518 * C27516 * C7319 -
          ((C9290 * C15892 + C9185 * C16002 + C9289 * C7324 + C9184 * C7446) *
               C27275 +
           (C9290 * C15891 + C9185 * C16001 + C9289 * C7322 + C9184 * C7444) *
               C4016) *
              C27518 * C27516 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eeyy[27] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C672 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C593 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C673 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C594 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C674 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C595) *
              C27518 * C27516 * C27275 * C6413 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C673 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C593 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C672) +
           (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
               C594 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C674 -
           (C9290 * C14551 + C9185 * C14717 + C9289 * C5990 + C9184 * C6151) *
               C595) *
              C27518 * C27516 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27303) *
               C27518 * C27516 * C3551 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27303 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
               C27518 * C27516 * C3552 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
                C27303) *
               C27518 * C27516 * C3553) *
              C6413 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C143 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27303) *
               C27518 * C27516 * C3552 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27303 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C143) *
               C27518 * C27516 * C3551 -
           ((C9290 * C2965 + C9185 * C3187 + C9289 * C1293 + C9184 * C1494) *
                C27303 +
            (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
                C143) *
               C27518 * C27516 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
               C27303) *
              C27518 * C27516 * C27275 * C7317 -
          ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
               C27303 +
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C143) *
              C27518 * C27516 * C27275 * C7318 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C143 +
           (C9289 * C1295 + C9184 * C1496 + C9290 * C4434 + C9185 * C4595) *
               C27303) *
              C27518 * C27516 * C27275 * C7319 -
          ((C9290 * C15929 + C9185 * C16037 + C9289 * C7364 + C9184 * C7482) *
               C27303 +
           (C9290 * C15891 + C9185 * C16001 + C9289 * C7322 + C9184 * C7444) *
               C143) *
              C27518 * C27516 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[27] +=
        (-std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C6515 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C6413 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C6516 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C593 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C6516 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C6413 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C6515) +
           (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
               C27378) *
              C27518 * C27516 * C594 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C6515 +
           (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
               C6413 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C6516 -
           (C9290 * C14606 + C9185 * C14768 + C9289 * C6044 + C9184 * C6203) *
               C27378) *
              C27518 * C27516 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C6515 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C6413 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C6516 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C27303 * C3551 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C6516 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C6413 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C6515) +
           (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
               C27378) *
              C27518 * C27516 * C27303 * C3552 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C6515 +
           (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) * C6413 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C6516 -
           (C9290 * C3037 + C9185 * C3263 + C9289 * C1361 + C9184 * C1563) *
               C27378) *
              C27518 * C27516 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C7401 +
          (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C7317 -
          (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
              C7402 -
          (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
              C7318 +
          (C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
              C7403 +
          (C9289 * C1359 + C9184 * C1560 + C9290 * C4488 + C9185 * C4647) *
              C7319 -
          (C9290 * C15891 + C9185 * C16001 + C9289 * C7322 + C9184 * C7444) *
              C7404 -
          (C9290 * C15965 + C9185 * C16072 + C9289 * C7406 + C9184 * C7517) *
              C7320) *
         C27518 * C27516 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[27] +=
        (-std::pow(Pi, 2.5) * (((((C404 * C89 + C27518 * C405) * C4016 +
                                  (C404 * C96 + C27518 * C410) * C27275) *
                                     C27516 * C9184 +
                                 (C12772 + C12773) * C27516 * C9185) *
                                    C6413 -
                                ((C13248 + C13249) * C27516 * C9185 +
                                 ((C404 * C1227 + C27518 * C1633) * C27275 +
                                  (C404 * C1220 + C27518 * C1628) * C4016) *
                                     C27516 * C9184) *
                                    C27378) *
                                   C593 +
                               (((C13249 + C13248) * C27516 * C9184 +
                                 (C14828 + C14829) * C27516 * C9185) *
                                    C27378 -
                                ((C12774 + C12775) * C27516 * C9185 +
                                 (C12773 + C12772) * C27516 * C9184) *
                                    C6413) *
                                   C594 +
                               (((C12775 + C12774) * C27516 * C9184 +
                                 (C12782 + C12783) * C27516 * C9185) *
                                    C6413 -
                                (((C404 * C14490 + C27518 * C14820) * C27275 +
                                  (C404 * C14489 + C27518 * C14819) * C4016) *
                                     C27516 * C9185 +
                                 (C14829 + C14828) * C27516 * C9184) *
                                    C27378) *
                                   C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C3556 +
            (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 - C429 * C3552 +
            C430 * C3558 + C431 * C3553) *
               C27516 * C9184 +
           (C12394 + C12395 - C12396 - C12397 + C12398 + C12399) * C27516 *
               C9185) *
              C6413 +
          ((C1648 * C3557 -
            ((C404 * C1227 + C27518 * C1633) * C3551 +
             (C404 * C1220 + C27518 * C1628) * C3556) +
            C1649 * C3552 - C2700 * C3558 - C2701 * C3553) *
               C27516 * C9184 +
           (C3348 * C3557 - (C11892 * C3551 + C11893 * C3556) + C3349 * C3552 -
            (C404 * C2887 + C27518 * C3339) * C3558 -
            (C404 * C2893 + C27518 * C3342) * C3553) *
               C27516 * C9185) *
              C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C4016 +
            (C404 * C96 + C27518 * C410) * C27275) *
               C27516 * C9184 +
           (C12772 + C12773) * C27516 * C9185) *
              C7317 -
          ((C13248 + C13249) * C27516 * C9185 +
           ((C404 * C1227 + C27518 * C1633) * C27275 +
            (C404 * C1220 + C27518 * C1628) * C4016) *
               C27516 * C9184) *
              C7318 +
          (((C404 * C1221 + C27518 * C1630) * C4016 +
            (C404 * C1232 + C27518 * C1636) * C27275) *
               C27516 * C9184 +
           (C13256 + C13257) * C27516 * C9185) *
              C7319 -
          (((C404 * C15892 + C27518 * C16108) * C27275 +
            (C404 * C15891 + C27518 * C16107) * C4016) *
               C27516 * C9185 +
           ((C404 * C7324 + C27518 * C7556) * C27275 +
            (C404 * C7322 + C27518 * C7554) * C4016) *
               C27516 * C9184) *
              C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[27] += (-std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C672 +
                      (C404 * C144 + C27518 * C467) * C593 - C9888 * C673 -
                      C9950 * C594 + C9891 * C674 + C9951 * C595) *
                         C27516 * C9184 +
                     (C9888 * C672 + C9950 * C593 - C9891 * C673 -
                      C9951 * C594 + C12780 * C674 + C12821 * C595) *
                         C27516 * C9185) *
                        C27275 * C6413 +
                    ((C11893 * C673 -
                      ((C404 * C1294 + C27518 * C1703) * C593 +
                       (C404 * C1220 + C27518 * C1628) * C672) +
                      C11964 * C594 - C14826 * C674 - C14883 * C595) *
                         C27516 * C9184 +
                     (C14826 * C673 - (C11964 * C593 + C11893 * C672) +
                      C14883 * C594 - (C404 * C14489 + C27518 * C14819) * C674 -
                      (C404 * C14551 + C27518 * C14879) * C595) *
                         C27516 * C9185) *
                        C27275 * C27378)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C143 +
                       (C404 * C144 + C27518 * C467) * C27303) *
                          C27516 * C9184 +
                      (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
                         C3551 -
                     ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
                      (C485 + C473) * C27516 * C9184) *
                         C3552 +
                     ((C478 + C486) * C27516 * C9184 +
                      (C2186 * C143 + C2248 * C27303) * C27516 * C9185) *
                         C3553) *
                        C6413 +
                    (((C1708 + C1716) * C27516 * C9184 +
                      (C3348 * C143 + C3424 * C27303) * C27516 * C9185) *
                         C3552 -
                     ((C11964 * C27303 + C11893 * C143) * C27516 * C9185 +
                      ((C404 * C1294 + C27518 * C1703) * C27303 +
                       (C404 * C1220 + C27518 * C1628) * C143) *
                          C27516 * C9184) *
                         C3551 -
                     (((C404 * C2965 + C27518 * C3417) * C27303 +
                       (C404 * C2887 + C27518 * C3339) * C143) *
                          C27516 * C9185 +
                      (C2757 + C2753) * C27516 * C9184) *
                         C3553) *
                        C27378)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C143 +
                      (C404 * C144 + C27518 * C467) * C27303) *
                         C27516 * C9184 +
                     (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
                        C27275 * C7317 -
                    ((C11964 * C27303 + C11893 * C143) * C27516 * C9185 +
                     ((C404 * C1294 + C27518 * C1703) * C27303 +
                      (C404 * C1220 + C27518 * C1628) * C143) *
                         C27516 * C9184) *
                        C27275 * C7318 +
                    (((C404 * C1221 + C27518 * C1630) * C143 +
                      (C404 * C1295 + C27518 * C1704) * C27303) *
                         C27516 * C9184 +
                     (C13254 * C143 + C13311 * C27303) * C27516 * C9185) *
                        C27275 * C7319 -
                    (((C404 * C15929 + C27518 * C16143) * C27303 +
                      (C404 * C15891 + C27518 * C16107) * C143) *
                         C27516 * C9185 +
                     ((C404 * C7364 + C27518 * C7592) * C27303 +
                      (C404 * C7322 + C27518 * C7554) * C143) *
                         C27516 * C9184) *
                        C27275 * C7320)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[27] +=
        (-std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C27516 * C9184 +
           (C15850 + C15851 - C15852 - C15853) * C27516 * C9185) *
              C593 +
          ((C15852 - (C15851 + C15850) + C15853) * C27516 * C9184 +
           (C15854 - (C15855 + C15856) + C15857) * C27516 * C9185) *
              C594 +
          ((C15856 + C15855 - C15854 - C15857) * C27516 * C9184 +
           (C12780 * C6515 + C12860 * C6413 -
            (C404 * C14489 + C27518 * C14819) * C6516 -
            (C404 * C14606 + C27518 * C14933) * C27378) *
               C27516 * C9185) *
              C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C27516 * C9184 +
           (C9888 * C6515 + C10008 * C6413 - C11893 * C6516 - C12036 * C27378) *
               C27516 * C9185) *
              C27303 * C3551 +
          ((C6828 - (C6827 + C6826) + C6829) * C27516 * C9184 +
           (C8228 - (C8229 + C8230) + C8231) * C27516 * C9185) *
              C27303 * C3552 +
          ((C6832 + C6831 - C6830 - C6833) * C27516 * C9184 +
           (C2186 * C6515 + C2304 * C6413 -
            (C404 * C2887 + C27518 * C3339) * C6516 -
            (C404 * C3037 + C27518 * C3493) * C27378) *
               C27516 * C9185) *
              C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C404 * C89 + C27518 * C405) * C7401 +
           (C404 * C189 + C27518 * C521) * C7317 -
           (C404 * C1220 + C27518 * C1628) * C7402 -
           (C404 * C1358 + C27518 * C1767) * C7318 +
           (C404 * C1221 + C27518 * C1630) * C7403 +
           (C404 * C1359 + C27518 * C1768) * C7319 -
           (C404 * C7322 + C27518 * C7554) * C7404 -
           (C404 * C7406 + C27518 * C7627) * C7320) *
              C27516 * C9184 +
          (C9888 * C7401 + C10008 * C7317 - C11893 * C7402 - C12036 * C7318 +
           C13254 * C7403 + C13370 * C7319 -
           (C404 * C15891 + C27518 * C16107) * C7404 -
           (C404 * C15965 + C27518 * C16178) * C7320) *
              C27516 * C9185) *
         C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C26163 +
                      (C9186 * C96 + C27516 * C104) * C27471 -
                      (C9186 * C90 + C27516 * C95) * C26156 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C9184 +
                     (C13422 + C13423 - C13424 - C13425) * C9185) *
                        C27518 * C27511 +
                    (((C9186 * C1218 + C27516 * C1224) * C26156 -
                      ((C9186 * C1227 + C27516 * C1237) * C27471 +
                       (C9186 * C1220 + C27516 * C1228) * C26163) +
                      (C9186 * C1226 + C27516 * C1236) * C27280) *
                         C9184 +
                     (C13904 - (C13905 + C13906) + C13907) * C9185) *
                        C27518 * C27512 +
                    (((C9186 * C1221 + C27516 * C1230) * C26163 +
                      (C9186 * C1232 + C27516 * C1239) * C27471 -
                      (C9186 * C1222 + C27516 * C1231) * C26156 -
                      (C9186 * C1233 + C27516 * C1240) * C27280) *
                         C9184 +
                     (C12922 * C26163 + C12923 * C27471 -
                      (C9186 * C4375 + C27516 * C4379) * C26156 -
                      (C9186 * C4377 + C27516 * C4381) * C27280) *
                         C9185) *
                        C27518 * C8283) *
                   C27303) /
                  (p * q * std::sqrt(p + q));
    d2eexy[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C9184 +
                      (C9528 * C143 + C9602 * C27303) * C9185) *
                         C27518 * C27471 -
                     ((C9604 * C27303 + C9530 * C143) * C9185 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C9184) *
                         C27518 * C27280) *
                        C27511 +
                    ((((C9186 * C1218 + C27516 * C1224) * C143 +
                       (C9186 * C1292 + C27516 * C1298) * C27303) *
                          C9184 +
                      (C11462 * C143 + C11541 * C27303) * C9185) *
                         C27518 * C27280 -
                     ((C11540 * C27303 + C11464 * C143) * C9185 +
                      ((C9186 * C1294 + C27516 * C1300) * C27303 +
                       (C9186 * C1220 + C27516 * C1228) * C143) *
                          C9184) *
                         C27518 * C27471) *
                        C27512 +
                    ((((C9186 * C1221 + C27516 * C1230) * C143 +
                       (C9186 * C1295 + C27516 * C1301) * C27303) *
                          C9184 +
                      (C12922 * C143 + C12980 * C27303) * C9185) *
                         C27518 * C27471 -
                     (((C9186 * C4433 + C27516 * C4435) * C27303 +
                       (C9186 * C4375 + C27516 * C4379) * C143) *
                          C9185 +
                      ((C9186 * C1296 + C27516 * C1302) * C27303 +
                       (C9186 * C1222 + C27516 * C1231) * C143) *
                          C9184) *
                         C27518 * C27280) *
                        C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C8384 +
            (C9186 * C189 + C27516 * C194) * C27511 -
            (C9186 * C1220 + C27516 * C1228) * C8385 -
            (C9186 * C1358 + C27516 * C1364) * C27512 +
            (C9186 * C1221 + C27516 * C1230) * C8386 +
            (C9186 * C1359 + C27516 * C1365) * C8283) *
               C9184 +
           (C9528 * C8384 + C9668 * C27511 - C11464 * C8385 - C11618 * C27512 +
            C12922 * C8386 + C13040 * C8283) *
               C9185) *
              C27518 * C27303 * C27471 +
          (((C9186 * C1218 + C27516 * C1224) * C8385 -
            ((C9186 * C190 + C27516 * C195) * C27511 +
             (C9186 * C90 + C27516 * C95) * C8384) +
            (C9186 * C1357 + C27516 * C1363) * C27512 -
            (C9186 * C1222 + C27516 * C1231) * C8386 -
            (C9186 * C1360 + C27516 * C1366) * C8283) *
               C9184 +
           (C11462 * C8385 - (C9670 * C27511 + C9530 * C8384) +
            C11619 * C27512 - (C9186 * C4375 + C27516 * C4379) * C8386 -
            (C9186 * C4487 + C27516 * C4489) * C8283) *
               C9185) *
              C27518 * C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C26163 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C27471 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C26156 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) *
               C27280) *
              C27518 * C27516 * C27511 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C26156 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27471 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C26163) +
           (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
               C27280) *
              C27518 * C27516 * C27512 +
          ((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C26163 +
           (C9289 * C1232 + C9184 * C1428 + C9290 * C4378 + C9185 * C4544) *
               C27471 -
           (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
               C26156 -
           (C9290 * C4377 + C9185 * C4543 + C9289 * C1233 + C9184 * C1429) *
               C27280) *
              C27518 * C27516 * C8283) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eeyy[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27303) *
               C27518 * C27516 * C27471 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27303 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
               C27518 * C27516 * C27280) *
              C27511 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C143 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27303) *
               C27518 * C27516 * C27280 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27303 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C143) *
               C27518 * C27516 * C27471) *
              C27512 +
          (((C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
                C143 +
            (C9289 * C1295 + C9184 * C1496 + C9290 * C4434 + C9185 * C4595) *
                C27303) *
               C27518 * C27516 * C27471 -
           ((C9290 * C4433 + C9185 * C4596 + C9289 * C1296 + C9184 * C1497) *
                C27303 +
            (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
                C143) *
               C27518 * C27516 * C27280) *
              C8283)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C8384 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) *
               C27511 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C8385 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27512 +
           (C9289 * C1221 + C9184 * C1422 + C9290 * C4376 + C9185 * C4542) *
               C8386 +
           (C9289 * C1359 + C9184 * C1560 + C9290 * C4488 + C9185 * C4647) *
               C8283) *
              C27518 * C27516 * C27303 * C27471 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C8385 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C27511 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C8384) +
           (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
               C27512 -
           (C9290 * C4375 + C9185 * C4541 + C9289 * C1222 + C9184 * C1423) *
               C8386 -
           (C9290 * C4487 + C9185 * C4648 + C9289 * C1360 + C9184 * C1562) *
               C8283) *
              C27518 * C27516 * C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C26163 +
                      (C404 * C96 + C27518 * C410) * C27471 - C428 * C26156 -
                      C429 * C27280) *
                         C27516 * C9184 +
                     (C13730 + C13731 - C13732 - C13733) * C27516 * C9185) *
                        C27511 +
                    ((C1648 * C26156 -
                      ((C404 * C1227 + C27518 * C1633) * C27471 +
                       (C404 * C1220 + C27518 * C1628) * C26163) +
                      C1649 * C27280) *
                         C27516 * C9184 +
                     (C14304 - (C14305 + C14306) + C14307) * C27516 * C9185) *
                        C27512 +
                    (((C404 * C1221 + C27518 * C1630) * C26163 +
                      (C404 * C1232 + C27518 * C1636) * C27471 -
                      C1650 * C26156 - C1651 * C27280) *
                         C27516 * C9184 +
                     (C13254 * C26163 + C13255 * C27471 -
                      (C404 * C4375 + C27518 * C4699) * C26156 -
                      (C404 * C4377 + C27518 * C4701) * C27280) *
                         C27516 * C9185) *
                        C8283) *
                   C27303) /
                  (p * q * std::sqrt(p + q));
    d2eezy[28] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C143 +
                       (C404 * C144 + C27518 * C467) * C27303) *
                          C27516 * C9184 +
                      (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
                         C27471 -
                     ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
                      (C485 + C473) * C27516 * C9184) *
                         C27280) *
                        C27511 +
                    (((C1708 + C1716) * C27516 * C9184 +
                      (C3348 * C143 + C3424 * C27303) * C27516 * C9185) *
                         C27280 -
                     ((C11964 * C27303 + C11893 * C143) * C27516 * C9185 +
                      ((C404 * C1294 + C27518 * C1703) * C27303 +
                       (C404 * C1220 + C27518 * C1628) * C143) *
                          C27516 * C9184) *
                         C27471) *
                        C27512 +
                    ((((C404 * C1221 + C27518 * C1630) * C143 +
                       (C404 * C1295 + C27518 * C1704) * C27303) *
                          C27516 * C9184 +
                      (C13254 * C143 + C13311 * C27303) * C27516 * C9185) *
                         C27471 -
                     (((C404 * C4433 + C27518 * C4754) * C27303 +
                       (C404 * C4375 + C27518 * C4699) * C143) *
                          C27516 * C9185 +
                      (C1717 + C1711) * C27516 * C9184) *
                         C27280) *
                        C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eezz[28] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C8384 +
            (C404 * C189 + C27518 * C521) * C27511 -
            (C404 * C1220 + C27518 * C1628) * C8385 -
            (C404 * C1358 + C27518 * C1767) * C27512 +
            (C404 * C1221 + C27518 * C1630) * C8386 +
            (C404 * C1359 + C27518 * C1768) * C8283) *
               C27516 * C9184 +
           (C9888 * C8384 + C10008 * C27511 - C11893 * C8385 - C12036 * C27512 +
            C13254 * C8386 + C13370 * C8283) *
               C27516 * C9185) *
              C27303 * C27471 +
          ((C8696 - (C8695 + C8694) + C8697 - C8698 - C8699) * C27516 * C9184 +
           (C3348 * C8385 - (C1162 * C27511 + C1028 * C8384) + C3500 * C27512 -
            (C404 * C4375 + C27518 * C4699) * C8386 -
            (C404 * C4487 + C27518 * C4806) * C8283) *
               C27516 * C9185) *
              C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C9184 +
           (C12088 + C12089 - C12090 - C12091 + C12092 + C12093) * C9185) *
              C27518 * C6413 +
          (((C9186 * C1218 + C27516 * C1224) * C3557 -
            ((C9186 * C1227 + C27516 * C1237) * C3551 +
             (C9186 * C1220 + C27516 * C1228) * C3556) +
            (C9186 * C1226 + C27516 * C1236) * C3552 -
            (C9186 * C1219 + C27516 * C1225) * C3558 -
            (C9186 * C1229 + C27516 * C1238) * C3553) *
               C9184 +
           (C11462 * C3557 - (C11463 * C3551 + C11464 * C3556) +
            C11465 * C3552 - (C9186 * C2887 + C27516 * C2892) * C3558 -
            (C9186 * C2893 + C27516 * C2896) * C3553) *
               C9185) *
              C27518 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C4016 +
             (C9186 * C96 + C27516 * C104) * C27275) *
                C9184 +
            (C12538 + C12539) * C9185) *
               C27518 * C6413 -
           ((C12916 + C12917) * C9185 +
            ((C9186 * C1227 + C27516 * C1237) * C27275 +
             (C9186 * C1220 + C27516 * C1228) * C4016) *
                C9184) *
               C27518 * C27378) *
              C593 +
          (((C12917 + C12916) * C9184 + (C14500 + C14501) * C9185) * C27518 *
               C27378 -
           ((C12540 + C12541) * C9185 + (C12539 + C12538) * C9184) * C27518 *
               C6413) *
              C594 +
          (((C12541 + C12540) * C9184 + (C12548 + C12549) * C9185) * C27518 *
               C6413 -
           (((C9186 * C14490 + C27516 * C14492) * C27275 +
             (C9186 * C14489 + C27516 * C14491) * C4016) *
                C9185 +
            (C14501 + C14500) * C9184) *
               C27518 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eexy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C143 +
             (C9186 * C144 + C27516 * C149) * C27303) *
                C9184 +
            (C9528 * C143 + C9602 * C27303) * C9185) *
               C27518 * C3551 -
           ((C9604 * C27303 + C9530 * C143) * C9185 +
            ((C9186 * C145 + C27516 * C150) * C27303 +
             (C9186 * C90 + C27516 * C95) * C143) *
                C9184) *
               C27518 * C3552 +
           (((C9186 * C91 + C27516 * C98) * C143 +
             (C9186 * C146 + C27516 * C151) * C27303) *
                C9184 +
            (C10520 * C143 + C10576 * C27303) * C9185) *
               C27518 * C3553) *
              C6413 +
          ((((C9186 * C1218 + C27516 * C1224) * C143 +
             (C9186 * C1292 + C27516 * C1298) * C27303) *
                C9184 +
            (C11462 * C143 + C11541 * C27303) * C9185) *
               C27518 * C3552 -
           ((C11540 * C27303 + C11464 * C143) * C9185 +
            ((C9186 * C1294 + C27516 * C1300) * C27303 +
             (C9186 * C1220 + C27516 * C1228) * C143) *
                C9184) *
               C27518 * C3551 -
           (((C9186 * C2965 + C27516 * C2968) * C27303 +
             (C9186 * C2887 + C27516 * C2892) * C143) *
                C9185 +
            ((C9186 * C1293 + C27516 * C1299) * C27303 +
             (C9186 * C1219 + C27516 * C1225) * C143) *
                C9184) *
               C27518 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C672 +
            (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
            C9602 * C594 + C9534 * C674 + C9603 * C595) *
               C9184 +
           (C9528 * C672 + C9602 * C593 - C9534 * C673 - C9603 * C594 +
            C12546 * C674 + C12588 * C595) *
               C9185) *
              C27518 * C27275 * C6413 +
          ((C11464 * C673 -
            ((C9186 * C1294 + C27516 * C1300) * C593 +
             (C9186 * C1220 + C27516 * C1228) * C672) +
            C11540 * C594 - C14498 * C674 - C14556 * C595) *
               C9184 +
           (C14498 * C673 - (C11540 * C593 + C11464 * C672) + C14556 * C594 -
            (C9186 * C14489 + C27516 * C14491) * C674 -
            (C9186 * C14551 + C27516 * C14552) * C595) *
               C9185) *
              C27518 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eexz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C6515 +
            (C9186 * C189 + C27516 * C194) * C6413 -
            (C9186 * C1220 + C27516 * C1228) * C6516 -
            (C9186 * C1358 + C27516 * C1364) * C27378) *
               C9184 +
           (C9528 * C6515 + C9668 * C6413 - C11464 * C6516 - C11618 * C27378) *
               C9185) *
              C27518 * C27303 * C3551 +
          (((C9186 * C1218 + C27516 * C1224) * C6516 -
            ((C9186 * C190 + C27516 * C195) * C6413 +
             (C9186 * C90 + C27516 * C95) * C6515) +
            (C9186 * C1357 + C27516 * C1363) * C27378) *
               C9184 +
           (C11462 * C6516 - (C9670 * C6413 + C9530 * C6515) +
            C11619 * C27378) *
               C9185) *
              C27518 * C27303 * C3552 +
          (((C9186 * C91 + C27516 * C98) * C6515 +
            (C9186 * C191 + C27516 * C196) * C6413 -
            (C9186 * C1219 + C27516 * C1225) * C6516 -
            (C9186 * C1361 + C27516 * C1367) * C27378) *
               C9184 +
           (C10520 * C6515 + C10630 * C6413 -
            (C9186 * C2887 + C27516 * C2892) * C6516 -
            (C9186 * C3037 + C27516 * C3040) * C27378) *
               C9185) *
              C27518 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C6515 +
            (C9186 * C189 + C27516 * C194) * C6413 -
            (C9186 * C1220 + C27516 * C1228) * C6516 -
            (C9186 * C1358 + C27516 * C1364) * C27378) *
               C9184 +
           (C15542 + C15543 - C15544 - C15545) * C9185) *
              C27518 * C593 +
          ((C15544 - (C15543 + C15542) + C15545) * C9184 +
           (C15546 - (C15547 + C15548) + C15549) * C9185) *
              C27518 * C594 +
          ((C15548 + C15547 - C15546 - C15549) * C9184 +
           (C12546 * C6515 + C12628 * C6413 -
            (C9186 * C14489 + C27516 * C14491) * C6516 -
            (C9186 * C14606 + C27516 * C14607) * C27378) *
               C9185) *
              C27518 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C3556 +
           (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) * C3551 -
           (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C3557 -
           (C9290 * C606 + C9185 * C806 + C9289 * C97 + C9184 * C240) * C3552 +
           (C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C3558 +
           (C9289 * C99 + C9184 * C241 + C9290 * C609 + C9185 * C807) * C3553) *
              C27518 * C27516 * C6413 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C3557 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C3551 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C3556) +
           (C9289 * C1226 + C9184 * C1426 + C9290 * C2891 + C9185 * C3111) *
               C3552 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C3558 -
           (C9290 * C2893 + C9185 * C3112 + C9289 * C1229 + C9184 * C1427) *
               C3553) *
              C27518 * C27516 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C4016 +
            (C9289 * C96 + C9184 * C239 + C9290 * C607 + C9185 * C805) *
                C27275) *
               C27518 * C27516 * C6413 -
           ((C9290 * C2890 + C9185 * C3110 + C9289 * C1227 + C9184 * C1425) *
                C27275 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C4016) *
               C27518 * C27516 * C27378) *
              C593 +
          (((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
                C4016 +
            (C9289 * C2890 + C9184 * C3110 + C9290 * C5934 + C9185 * C6100) *
                C27275) *
               C27518 * C27516 * C27378 -
           ((C9290 * C612 + C9185 * C808 + C9289 * C607 + C9184 * C805) *
                C27275 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C4016) *
               C27518 * C27516 * C6413) *
              C594 +
          (((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
                C4016 +
            (C9289 * C612 + C9184 * C808 + C9290 * C4020 + C9185 * C4142) *
                C27275) *
               C27518 * C27516 * C6413 -
           ((C9290 * C14490 + C9185 * C14666 + C9289 * C5934 + C9184 * C6100) *
                C27275 +
            (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
                C4016) *
               C27518 * C27516 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C143 +
            (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) *
                C27303) *
               C27518 * C27516 * C3551 -
           ((C9290 * C675 + C9185 * C875 + C9289 * C145 + C9184 * C297) *
                C27303 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) * C143) *
               C27518 * C27516 * C3552 +
           ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C143 +
            (C9289 * C146 + C9184 * C298 + C9290 * C679 + C9185 * C877) *
                C27303) *
               C27518 * C27516 * C3553) *
              C6413 +
          (((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
                C143 +
            (C9289 * C1292 + C9184 * C1493 + C9290 * C2964 + C9185 * C3186) *
                C27303) *
               C27518 * C27516 * C3552 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C27303 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C143) *
               C27518 * C27516 * C3551 -
           ((C9290 * C2965 + C9185 * C3187 + C9289 * C1293 + C9184 * C1494) *
                C27303 +
            (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
                C143) *
               C27518 * C27516 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C672 +
           (C9289 * C144 + C9184 * C296 + C9290 * C676 + C9185 * C873) * C593 -
           (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) * C673 -
           (C9290 * C677 + C9185 * C874 + C9289 * C676 + C9184 * C873) * C594 +
           (C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C674 +
           (C9289 * C677 + C9184 * C874 + C9290 * C4064 + C9185 * C4177) *
               C595) *
              C27518 * C27516 * C27275 * C6413 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C673 -
           ((C9290 * C2963 + C9185 * C3185 + C9289 * C1294 + C9184 * C1495) *
                C593 +
            (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
                C672) +
           (C9289 * C2963 + C9184 * C3185 + C9290 * C5990 + C9185 * C6151) *
               C594 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C674 -
           (C9290 * C14551 + C9185 * C14717 + C9289 * C5990 + C9184 * C6151) *
               C595) *
              C27518 * C27516 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C6515 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C6413 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C6516 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C27303 * C3551 +
          ((C9289 * C1218 + C9184 * C1419 + C9290 * C2886 + C9185 * C3108) *
               C6516 -
           ((C9290 * C737 + C9185 * C941 + C9289 * C190 + C9184 * C351) *
                C6413 +
            (C9290 * C598 + C9185 * C799 + C9289 * C90 + C9184 * C235) *
                C6515) +
           (C9289 * C1357 + C9184 * C1561 + C9290 * C3036 + C9185 * C3262) *
               C27378) *
              C27518 * C27516 * C27303 * C3552 +
          ((C9289 * C91 + C9184 * C236 + C9290 * C599 + C9185 * C801) * C6515 +
           (C9289 * C191 + C9184 * C352 + C9290 * C741 + C9185 * C945) * C6413 -
           (C9290 * C2887 + C9185 * C3109 + C9289 * C1219 + C9184 * C1421) *
               C6516 -
           (C9290 * C3037 + C9185 * C3263 + C9289 * C1361 + C9184 * C1563) *
               C27378) *
              C27518 * C27516 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9289 * C89 + C9184 * C234 + C9290 * C600 + C9185 * C800) * C6515 +
           (C9289 * C189 + C9184 * C350 + C9290 * C738 + C9185 * C942) * C6413 -
           (C9290 * C2885 + C9185 * C3107 + C9289 * C1220 + C9184 * C1420) *
               C6516 -
           (C9290 * C3035 + C9185 * C3261 + C9289 * C1358 + C9184 * C1559) *
               C27378) *
              C27518 * C27516 * C593 +
          ((C9289 * C2885 + C9184 * C3107 + C9290 * C5932 + C9185 * C6098) *
               C6516 -
           ((C9290 * C739 + C9185 * C943 + C9289 * C738 + C9184 * C942) *
                C6413 +
            (C9290 * C601 + C9185 * C802 + C9289 * C600 + C9184 * C800) *
                C6515) +
           (C9289 * C3035 + C9184 * C3261 + C9290 * C6044 + C9185 * C6203) *
               C27378) *
              C27518 * C27516 * C594 +
          ((C9289 * C601 + C9184 * C802 + C9290 * C4018 + C9185 * C4140) *
               C6515 +
           (C9289 * C739 + C9184 * C943 + C9290 * C4102 + C9185 * C4214) *
               C6413 -
           (C9290 * C14489 + C9185 * C14665 + C9289 * C5932 + C9184 * C6098) *
               C6516 -
           (C9290 * C14606 + C9185 * C14768 + C9289 * C6044 + C9184 * C6203) *
               C27378) *
              C27518 * C27516 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C3556 +
                      (C404 * C96 + C27518 * C410) * C3551 - C428 * C3557 -
                      C429 * C3552 + C430 * C3558 + C431 * C3553) *
                         C27516 * C9184 +
                     (C12394 + C12395 - C12396 - C12397 + C12398 + C12399) *
                         C27516 * C9185) *
                        C6413 +
                    ((C1648 * C3557 -
                      ((C404 * C1227 + C27518 * C1633) * C3551 +
                       (C404 * C1220 + C27518 * C1628) * C3556) +
                      C1649 * C3552 - C2700 * C3558 - C2701 * C3553) *
                         C27516 * C9184 +
                     (C3348 * C3557 - (C11892 * C3551 + C11893 * C3556) +
                      C3349 * C3552 - (C404 * C2887 + C27518 * C3339) * C3558 -
                      (C404 * C2893 + C27518 * C3342) * C3553) *
                         C27516 * C9185) *
                        C27378) *
                   C27303) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C4016 +
                       (C404 * C96 + C27518 * C410) * C27275) *
                          C27516 * C9184 +
                      (C12772 + C12773) * C27516 * C9185) *
                         C6413 -
                     ((C13248 + C13249) * C27516 * C9185 +
                      ((C404 * C1227 + C27518 * C1633) * C27275 +
                       (C404 * C1220 + C27518 * C1628) * C4016) *
                          C27516 * C9184) *
                         C27378) *
                        C593 +
                    (((C13249 + C13248) * C27516 * C9184 +
                      (C14828 + C14829) * C27516 * C9185) *
                         C27378 -
                     ((C12774 + C12775) * C27516 * C9185 +
                      (C12773 + C12772) * C27516 * C9184) *
                         C6413) *
                        C594 +
                    (((C12775 + C12774) * C27516 * C9184 +
                      (C12782 + C12783) * C27516 * C9185) *
                         C6413 -
                     (((C404 * C14490 + C27518 * C14820) * C27275 +
                       (C404 * C14489 + C27518 * C14819) * C4016) *
                          C27516 * C9185 +
                      (C14829 + C14828) * C27516 * C9184) *
                         C27378) *
                        C595)) /
                      (p * q * std::sqrt(p + q));
    d2eezy[29] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C404 * C89 + C27518 * C405) * C143 +
                       (C404 * C144 + C27518 * C467) * C27303) *
                          C27516 * C9184 +
                      (C9888 * C143 + C9950 * C27303) * C27516 * C9185) *
                         C3551 -
                     ((C1096 * C27303 + C1028 * C143) * C27516 * C9185 +
                      (C485 + C473) * C27516 * C9184) *
                         C3552 +
                     ((C478 + C486) * C27516 * C9184 +
                      (C2186 * C143 + C2248 * C27303) * C27516 * C9185) *
                         C3553) *
                        C6413 +
                    (((C1708 + C1716) * C27516 * C9184 +
                      (C3348 * C143 + C3424 * C27303) * C27516 * C9185) *
                         C3552 -
                     ((C11964 * C27303 + C11893 * C143) * C27516 * C9185 +
                      ((C404 * C1294 + C27518 * C1703) * C27303 +
                       (C404 * C1220 + C27518 * C1628) * C143) *
                          C27516 * C9184) *
                         C3551 -
                     (((C404 * C2965 + C27518 * C3417) * C27303 +
                       (C404 * C2887 + C27518 * C3339) * C143) *
                          C27516 * C9185 +
                      (C2757 + C2753) * C27516 * C9184) *
                         C3553) *
                        C27378)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C404 * C89 + C27518 * C405) * C672 +
                      (C404 * C144 + C27518 * C467) * C593 - C9888 * C673 -
                      C9950 * C594 + C9891 * C674 + C9951 * C595) *
                         C27516 * C9184 +
                     (C9888 * C672 + C9950 * C593 - C9891 * C673 -
                      C9951 * C594 + C12780 * C674 + C12821 * C595) *
                         C27516 * C9185) *
                        C27275 * C6413 +
                    ((C11893 * C673 -
                      ((C404 * C1294 + C27518 * C1703) * C593 +
                       (C404 * C1220 + C27518 * C1628) * C672) +
                      C11964 * C594 - C14826 * C674 - C14883 * C595) *
                         C27516 * C9184 +
                     (C14826 * C673 - (C11964 * C593 + C11893 * C672) +
                      C14883 * C594 - (C404 * C14489 + C27518 * C14819) * C674 -
                      (C404 * C14551 + C27518 * C14879) * C595) *
                         C27516 * C9185) *
                        C27275 * C27378)) /
                      (p * q * std::sqrt(p + q));
    d2eezz[29] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C27516 * C9184 +
           (C9888 * C6515 + C10008 * C6413 - C11893 * C6516 - C12036 * C27378) *
               C27516 * C9185) *
              C27303 * C3551 +
          ((C6828 - (C6827 + C6826) + C6829) * C27516 * C9184 +
           (C8228 - (C8229 + C8230) + C8231) * C27516 * C9185) *
              C27303 * C3552 +
          ((C6832 + C6831 - C6830 - C6833) * C27516 * C9184 +
           (C2186 * C6515 + C2304 * C6413 -
            (C404 * C2887 + C27518 * C3339) * C6516 -
            (C404 * C3037 + C27518 * C3493) * C27378) *
               C27516 * C9185) *
              C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C404 * C89 + C27518 * C405) * C6515 +
            (C404 * C189 + C27518 * C521) * C6413 -
            (C404 * C1220 + C27518 * C1628) * C6516 -
            (C404 * C1358 + C27518 * C1767) * C27378) *
               C27516 * C9184 +
           (C15850 + C15851 - C15852 - C15853) * C27516 * C9185) *
              C593 +
          ((C15852 - (C15851 + C15850) + C15853) * C27516 * C9184 +
           (C15854 - (C15855 + C15856) + C15857) * C27516 * C9185) *
              C594 +
          ((C15856 + C15855 - C15854 - C15857) * C27516 * C9184 +
           (C12780 * C6515 + C12860 * C6413 -
            (C404 * C14489 + C27518 * C14819) * C6516 -
            (C404 * C14606 + C27518 * C14933) * C27378) *
               C27516 * C9185) *
              C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1840 +
            (C9186 * C96 + C27516 * C104) * C27505 -
            (C9186 * C90 + C27516 * C95) * C1841 -
            (C9186 * C97 + C27516 * C105) * C27506 +
            (C9186 * C91 + C27516 * C98) * C1842 +
            (C9186 * C99 + C27516 * C106) * C1837) *
               C27517 * C17723 +
           (C18516 * C1840 + C18517 * C27505 - C18518 * C1841 -
            C18519 * C27506 + (C9186 * C1219 + C27516 * C1225) * C1842 +
            (C9186 * C1229 + C27516 * C1238) * C1837) *
               C27517 * C17724) *
              C27314 * C27481 +
          ((C10514 - (C10513 + C10512) + C10515 - C10522 - C10523) * C27517 *
               C17723 +
           (C11462 * C1841 - (C11463 * C27505 + C11464 * C1840) +
            C11465 * C27506 - (C9186 * C2887 + C27516 * C2892) * C1842 -
            (C9186 * C2893 + C27516 * C2896) * C1837) *
               C27517 * C17724) *
              C27314 * C27352)) /
        (p * q * std::sqrt(p + q));
    d2eexy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C1897 +
                      (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
                      C9602 * C27352) *
                         C27517 * C17723 +
                     (C18516 * C1897 + C18594 * C27481 - C11464 * C1898 -
                      C11540 * C27352) *
                         C27517 * C17724) *
                        C27505 +
                    ((C9530 * C1898 -
                      ((C9186 * C145 + C27516 * C150) * C27481 +
                       (C9186 * C90 + C27516 * C95) * C1897) +
                      C9604 * C27352) *
                         C27517 * C17723 +
                     (C11462 * C1898 - (C18595 * C27481 + C18518 * C1897) +
                      C11541 * C27352) *
                         C27517 * C17724) *
                        C27506 +
                    (((C9186 * C91 + C27516 * C98) * C1897 +
                      (C9186 * C146 + C27516 * C151) * C27481 - C10520 * C1898 -
                      C10576 * C27352) *
                         C27517 * C17723 +
                     ((C9186 * C1219 + C27516 * C1225) * C1897 +
                      (C9186 * C1293 + C27516 * C1299) * C27481 -
                      (C9186 * C2887 + C27516 * C2892) * C1898 -
                      (C9186 * C2965 + C27516 * C2968) * C27352) *
                         C27517 * C17724) *
                        C1837) *
                   C27314) /
                  (p * q * std::sqrt(p + q));
    d2eexz[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C188 +
                       (C9186 * C189 + C27516 * C194) * C27314) *
                          C27517 * C17723 +
                      (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
                         C27481 -
                     ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
                      (C9672 + C9656) * C27517 * C17723) *
                         C27352) *
                        C27505 +
                    (((C9662 + C9674) * C27517 * C17723 +
                      (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
                         C27352 -
                     ((C18662 * C27314 + C18518 * C188) * C27517 * C17724 +
                      ((C9186 * C190 + C27516 * C195) * C27314 +
                       (C9186 * C90 + C27516 * C95) * C188) *
                          C27517 * C17723) *
                         C27481) *
                        C27506 +
                    ((((C9186 * C91 + C27516 * C98) * C188 +
                       (C9186 * C191 + C27516 * C196) * C27314) *
                          C27517 * C17723 +
                      ((C9186 * C1219 + C27516 * C1225) * C188 +
                       (C9186 * C1361 + C27516 * C1367) * C27314) *
                          C27517 * C17724) *
                         C27481 -
                     (((C9186 * C3037 + C27516 * C3040) * C27314 +
                       (C9186 * C2887 + C27516 * C2892) * C188) *
                          C27517 * C17724 +
                      (C10631 + C10627) * C27517 * C17723) *
                         C27352) *
                        C1837)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C1840 +
                      (C233 * C96 + C27517 * C239) * C27505 - C257 * C1841 -
                      C258 * C27506 + C259 * C1842 + C260 * C1837) *
                         C17723 +
                     (C18726 * C1840 + C18727 * C27505 - C1440 * C1841 -
                      C1441 * C27506 + C2524 * C1842 + C2525 * C1837) *
                         C17724) *
                        C27516 * C27314 * C27481 +
                    ((C820 * C1841 -
                      ((C233 * C607 + C27517 * C805) * C27505 +
                       (C233 * C600 + C27517 * C800) * C1840) +
                      C821 * C27506 - C2010 * C1842 - C2011 * C1837) *
                         C17723 +
                     (C3118 * C1841 -
                      ((C233 * C2890 + C27517 * C3110) * C27505 +
                       (C233 * C2885 + C27517 * C3107) * C1840) +
                      C3119 * C27506 - (C233 * C2887 + C27517 * C3109) * C1842 -
                      (C233 * C2893 + C27517 * C3112) * C1837) *
                         C17724) *
                        C27516 * C27314 * C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[30] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C1897 +
                      (C233 * C144 + C27517 * C296) * C27481 -
                      (C233 * C600 + C27517 * C800) * C1898 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C17723 +
                     (C18726 * C1897 + C18790 * C27481 -
                      (C233 * C2885 + C27517 * C3107) * C1898 -
                      (C233 * C2963 + C27517 * C3185) * C27352) *
                         C17724) *
                        C27516 * C27505 +
                    ((C2065 - (C2064 + C2063) + C2066) * C17723 +
                     (C3189 - (C3190 + C3191) + C3195) * C17724) *
                        C27516 * C27506 +
                    ((C2069 + C2068 - C2067 - C2073) * C17723 +
                     (C2524 * C1897 + C2580 * C27481 -
                      (C233 * C2887 + C27517 * C3109) * C1898 -
                      (C233 * C2965 + C27517 * C3187) * C27352) *
                         C17724) *
                        C27516 * C1837) *
                   C27314) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            (C18726 * C188 + C18848 * C27314) * C17724) *
               C27516 * C27481 -
           (((C233 * C3035 + C27517 * C3261) * C27314 +
             (C233 * C2885 + C27517 * C3107) * C188) *
                C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C27352) *
              C27505 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C27352 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C27481) *
              C27506 +
          (((C361 + C369) * C17723 + (C2524 * C188 + C2642 * C27314) * C17724) *
               C27516 * C27481 -
           (((C233 * C3037 + C27517 * C3263) * C27314 +
             (C233 * C2887 + C27517 * C3109) * C188) *
                C17724 +
            (C2129 + C2125) * C17723) *
               C27516 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eezx[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1840 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27505 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C1841 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27506 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C1842 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C1837) *
              C27516 * C27517 * C27314 * C27481 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C1841 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27505 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C1840) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C27506 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C1842 -
           (C17930 * C2893 + C17724 * C3342 + C17929 * C609 + C17723 * C1015) *
               C1837) *
              C27516 * C27517 * C27314 * C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1897 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27481 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C1898 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27352) *
              C27516 * C27517 * C27505 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C1898 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27481 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C1897) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C27352) *
              C27516 * C27517 * C27506 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C1897 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
               C27481 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C1898 -
           (C17930 * C2965 + C17724 * C3417 + C17929 * C679 + C17723 * C1085) *
               C27352) *
              C27516 * C27517 * C1837) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eezz[30] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C27481 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C27352) *
              C27505 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C27352 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C27481) *
              C27506 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
                C27314) *
               C27516 * C27517 * C27481 -
           ((C17930 * C3037 + C17724 * C3493 + C17929 * C741 + C17723 * C1153) *
                C27314 +
            (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
                C188) *
               C27516 * C27517 * C27352) *
              C1837)) /
        (p * q * std::sqrt(p + q));
    d2eexx[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C596 +
                       (C9186 * C96 + C27516 * C104) * C591 -
                       (C9186 * C90 + C27516 * C95) * C597 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C27517 * C17723 +
                      (C18524 + C18525 - C18526 - C18527) * C27517 * C17724) *
                         C27482 +
                     ((C18526 - (C18525 + C18524) + C18527) * C27517 * C17723 +
                      (C18528 - (C18529 + C18530) + C18531) * C27517 * C17724) *
                         C27378) *
                        C27481 +
                    (((C9538 - (C9537 + C9536) + C9539) * C27517 * C17723 +
                      (C11466 - (C11467 + C11468) + C11469) * C27517 * C17724) *
                         C27482 +
                     ((C11468 + C11467 - C11466 - C11469) * C27517 * C17723 +
                      (C12922 * C596 + C12923 * C591 -
                       (C9186 * C4375 + C27516 * C4379) * C597 -
                       (C9186 * C4377 + C27516 * C4381) * C27280) *
                          C27517 * C17724) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C1897 +
                       (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
                       C9602 * C27352) *
                          C27517 * C17723 +
                      (C20058 + C20059 - C20060 - C20061) * C27517 * C17724) *
                         C591 +
                     ((C9530 * C1898 -
                       ((C9186 * C145 + C27516 * C150) * C27481 +
                        (C9186 * C90 + C27516 * C95) * C1897) +
                       C9604 * C27352) *
                          C27517 * C17723 +
                      (C20062 - (C20063 + C20064) + C20065) * C27517 * C17724) *
                         C27280) *
                        C27482 +
                    (((C20060 - (C20059 + C20058) + C20061) * C27517 * C17723 +
                      (C12922 * C1898 - (C18597 * C27481 + C18522 * C1897) +
                       C12980 * C27352) *
                          C27517 * C17724) *
                         C591 +
                     ((C20064 + C20063 - C20062 - C20065) * C27517 * C17723 +
                      (C18520 * C1897 + C18596 * C27481 -
                       (C9186 * C4375 + C27516 * C4379) * C1898 -
                       (C9186 * C4433 + C27516 * C4435) * C27352) *
                          C27517 * C17724) *
                         C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C2463 +
                       (C9186 * C189 + C27516 * C194) * C27482 -
                       C18516 * C2464 - C18660 * C27378) *
                          C27517 * C17723 +
                      (C18516 * C2463 + C18660 * C27482 - C18522 * C2464 -
                       C18661 * C27378) *
                          C27517 * C17724) *
                         C27481 +
                     ((C11610 - (C11609 + C11608) + C11620) * C27517 * C17723 +
                      (C12922 * C2464 - (C11618 * C27482 + C11464 * C2463) +
                       C13040 * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C591 +
                    (((C18518 * C2464 -
                       ((C9186 * C190 + C27516 * C195) * C27482 +
                        (C9186 * C90 + C27516 * C95) * C2463) +
                       C18662 * C27378) *
                          C27517 * C17723 +
                      (C18520 * C2464 - (C18662 * C27482 + C18518 * C2463) +
                       C18663 * C27378) *
                          C27517 * C17724) *
                         C27481 +
                     ((C11615 + C11614 - C11613 - C11621) * C27517 * C17723 +
                      (C11462 * C2463 + C11619 * C27482 -
                       (C9186 * C4375 + C27516 * C4379) * C2464 -
                       (C9186 * C4487 + C27516 * C4489) * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C596 +
                       (C233 * C96 + C27517 * C239) * C591 - C257 * C597 -
                       C258 * C27280) *
                          C17723 +
                      (C18730 + C18731 - C18718 - C18719) * C17724) *
                         C27516 * C27482 +
                     ((C18718 - (C18731 + C18730) + C18719) * C17723 +
                      (C18720 - (C18732 + C18733) + C18725) * C17724) *
                         C27516 * C27378) *
                        C27481 +
                    (((C820 * C597 -
                       ((C233 * C607 + C27517 * C805) * C591 +
                        (C233 * C600 + C27517 * C800) * C596) +
                       C821 * C27280) *
                          C17723 +
                      (C20198 - (C20206 + C20207) + C20203) * C17724) *
                         C27516 * C27482 +
                     ((C20207 + C20206 - C20198 - C20203) * C17723 +
                      ((C233 * C4376 + C27517 * C4542) * C596 +
                       (C233 * C4378 + C27517 * C4544) * C591 -
                       (C233 * C4375 + C27517 * C4541) * C597 -
                       (C233 * C4377 + C27517 * C4543) * C27280) *
                          C17724) *
                         C27516 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C1897 +
                       (C233 * C144 + C27517 * C296) * C27481 -
                       (C233 * C600 + C27517 * C800) * C1898 -
                       (C233 * C676 + C27517 * C873) * C27352) *
                          C17723 +
                      (C20274 + C20275 - C20276 - C20280) * C17724) *
                         C27516 * C591 +
                     ((C2065 - (C2064 + C2063) + C2066) * C17723 +
                      (C3189 - (C3190 + C3191) + C3195) * C17724) *
                         C27516 * C27280) *
                        C27482 +
                    (((C20276 - (C20275 + C20274) + C20280) * C17723 +
                      ((C233 * C4376 + C27517 * C4542) * C1898 -
                       (C18791 * C27481 + C18729 * C1897) +
                       (C233 * C4434 + C27517 * C4595) * C27352) *
                          C17724) *
                         C27516 * C591 +
                     ((C3191 + C3190 - C3189 - C3195) * C17723 +
                      (C1442 * C1897 + C1507 * C27481 -
                       (C233 * C4375 + C27517 * C4541) * C1898 -
                       (C233 * C4433 + C27517 * C4596) * C27352) *
                          C17724) *
                         C27516 * C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[31] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C2463 +
                       (C233 * C189 + C27517 * C350) * C27482 - C18726 * C2464 -
                       C18848 * C27378) *
                          C17723 +
                      (C18726 * C2463 + C18848 * C27482 - C18729 * C2464 -
                       C18849 * C27378) *
                          C17724) *
                         C27516 * C27481 +
                     ((C20205 * C2464 -
                       ((C233 * C738 + C27517 * C942) * C27482 +
                        (C233 * C600 + C27517 * C800) * C2463) +
                       C20349 * C27378) *
                          C17723 +
                      ((C233 * C4376 + C27517 * C4542) * C2464 -
                       (C20349 * C27482 + C20205 * C2463) +
                       (C233 * C4488 + C27517 * C4647) * C27378) *
                          C17724) *
                         C27516 * C27352) *
                        C591 +
                    (((C2635 - (C2634 + C2633) + C2636) * C17723 +
                      (C1442 * C2464 - (C1574 * C27482 + C1440 * C2463) +
                       C1575 * C27378) *
                          C17724) *
                         C27516 * C27481 +
                     ((C3267 + C3266 - C3265 - C3271) * C17723 +
                      (C3118 * C2463 + C3270 * C27482 -
                       (C233 * C4375 + C27517 * C4541) * C2464 -
                       (C233 * C4487 + C27517 * C4648) * C27378) *
                          C17724) *
                         C27516 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C596 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C591 -
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C597 -
            (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
                C27280) *
               C27516 * C27517 * C27482 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C597 -
            ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
              C17723 * C1633) *
                 C591 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C596) +
            (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 +
             C17724 * C1637) *
                C27280) *
               C27516 * C27517 * C27378) *
              C27481 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C597 -
            ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 +
              C17723 * C1013) *
                 C591 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C596) +
            (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
                C27280) *
               C27516 * C27517 * C27482 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C596 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C591 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C597 -
            (C17930 * C4377 + C17724 * C4701 + C17929 * C2891 +
             C17723 * C3341) *
                C27280) *
               C27516 * C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C1897 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27481 -
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C1898 -
            (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
                C27352) *
               C27516 * C27517 * C591 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C1898 -
            ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                 C27481 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C1897) +
            (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C27482 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C1898 -
            ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
              C17723 * C1703) *
                 C27481 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C1897) +
            (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 +
             C17724 * C4753) *
                C27352) *
               C27516 * C27517 * C591 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C1897 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27481 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C1898 -
            (C17930 * C4433 + C17724 * C4754 + C17929 * C2964 +
             C17723 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[31] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C2463 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27482 -
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C2464 -
            (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 +
             C17723 * C1767) *
                C27378) *
               C27516 * C27517 * C27481 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C2464 -
            ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 +
              C17723 * C1150) *
                 C27482 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C2463) +
            (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 +
             C17724 * C4805) *
                C27378) *
               C27516 * C27517 * C27352) *
              C591 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C2464 -
            ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                 C27482 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C2463) +
            (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 +
             C17724 * C1770) *
                C27378) *
               C27516 * C27517 * C27481 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C2463 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27482 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C2464 -
            (C17930 * C4487 + C17724 * C4806 + C17929 * C3036 +
             C17723 * C3492) *
                C27378) *
               C27516 * C27517 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[32] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C596 +
                      (C9186 * C96 + C27516 * C104) * C591 -
                      (C9186 * C90 + C27516 * C95) * C597 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C596 +
                      (C9186 * C1227 + C27516 * C1237) * C591 -
                      (C9186 * C1218 + C27516 * C1224) * C597 -
                      (C9186 * C1226 + C27516 * C1236) * C27280) *
                         C27517 * C17724) *
                        C27314 * C593 +
                    ((C9538 - (C9537 + C9536) + C9539) * C27517 * C17723 +
                     (C11466 - (C11467 + C11468) + C11469) * C27517 * C17724) *
                        C27314 * C594 +
                    ((C9542 + C9541 - C9540 - C9543) * C27517 * C17723 +
                     (C14498 * C596 + C14499 * C591 -
                      (C9186 * C5931 + C27516 * C5935) * C597 -
                      (C9186 * C5933 + C27516 * C5937) * C27280) *
                         C27517 * C17724) *
                        C27314 * C595)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C85 +
                     (C9186 * C96 + C27516 * C104) * C75 -
                     (C9186 * C90 + C27516 * C95) * C86 -
                     (C9186 * C97 + C27516 * C105) * C76 +
                     (C9186 * C91 + C27516 * C98) * C87 +
                     (C9186 * C99 + C27516 * C106) * C77 -
                     (C9186 * C92 + C27516 * C100) * C88 -
                     (C9186 * C101 + C27516 * C107) * C78) *
                        C27517 * C17723 +
                    ((C9186 * C1220 + C27516 * C1228) * C85 +
                     (C9186 * C1227 + C27516 * C1237) * C75 -
                     (C9186 * C1218 + C27516 * C1224) * C86 -
                     (C9186 * C1226 + C27516 * C1236) * C76 +
                     (C9186 * C1219 + C27516 * C1225) * C87 +
                     (C9186 * C1229 + C27516 * C1238) * C77 -
                     (C9186 * C2357 + C27516 * C2358) * C88 -
                     (C9186 * C2359 + C27516 * C2360) * C78) *
                        C27517 * C17724) *
                   C27314 * C27303) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C596 +
                      (C9186 * C96 + C27516 * C104) * C591 -
                      (C9186 * C90 + C27516 * C95) * C597 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C27517 * C17723 +
                     (C18524 + C18525 - C18526 - C18527) * C27517 * C17724) *
                        C1215 +
                    ((C18526 - (C18525 + C18524) + C18527) * C27517 * C17723 +
                     (C18528 - (C18529 + C18530) + C18531) * C27517 * C17724) *
                        C1216 +
                    ((C18530 + C18529 - C18528 - C18531) * C27517 * C17723 +
                     ((C9186 * C7322 + C27516 * C7326) * C596 +
                      (C9186 * C7324 + C27516 * C7328) * C591 -
                      (C9186 * C7321 + C27516 * C7325) * C597 -
                      (C9186 * C7323 + C27516 * C7327) * C27280) *
                         C27517 * C17724) *
                        C1217) *
                   C27303) /
                      (p * q * std::sqrt(p + q));
    d2eexy[32] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C672 +
                      (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
                      C9602 * C594 + C9534 * C674 + C9603 * C595) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C672 +
                      (C9186 * C1294 + C27516 * C1300) * C593 - C11464 * C673 -
                      C11540 * C594 + C14498 * C674 + C14556 * C595) *
                         C27517 * C17724) *
                        C591 +
                    ((C9530 * C673 -
                      ((C9186 * C145 + C27516 * C150) * C593 +
                       (C9186 * C90 + C27516 * C95) * C672) +
                      C9604 * C594 - C9532 * C674 - C9605 * C595) *
                         C27517 * C17723 +
                     (C11462 * C673 -
                      ((C9186 * C1292 + C27516 * C1298) * C593 +
                       (C9186 * C1218 + C27516 * C1224) * C672) +
                      C11541 * C594 - (C9186 * C5931 + C27516 * C5935) * C674 -
                      (C9186 * C5989 + C27516 * C5991) * C595) *
                         C27517 * C17724) *
                        C27280) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C143 +
                      (C9186 * C144 + C27516 * C149) * C27303) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C143 +
                      (C9186 * C1294 + C27516 * C1300) * C27303) *
                         C27517 * C17724) *
                        C75 -
                    (((C9186 * C1292 + C27516 * C1298) * C27303 +
                      (C9186 * C1218 + C27516 * C1224) * C143) *
                         C27517 * C17724 +
                     ((C9186 * C145 + C27516 * C150) * C27303 +
                      (C9186 * C90 + C27516 * C95) * C143) *
                         C27517 * C17723) *
                        C76 +
                    (((C9186 * C91 + C27516 * C98) * C143 +
                      (C9186 * C146 + C27516 * C151) * C27303) *
                         C27517 * C17723 +
                     ((C9186 * C1219 + C27516 * C1225) * C143 +
                      (C9186 * C1293 + C27516 * C1299) * C27303) *
                         C27517 * C17724) *
                        C77 -
                    (((C9186 * C2411 + C27516 * C2412) * C27303 +
                      (C9186 * C2357 + C27516 * C2358) * C143) *
                         C27517 * C17724 +
                     ((C9186 * C147 + C27516 * C152) * C27303 +
                      (C9186 * C92 + C27516 * C100) * C143) *
                         C27517 * C17723) *
                        C78) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C27517 * C17723 +
                      (C18582 + C18598) * C27517 * C17724) *
                         C591 -
                     ((C18599 + C18587) * C27517 * C17724 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C27517 * C17723) *
                         C27280) *
                        C1215 +
                    (((C18587 + C18599) * C27517 * C17723 +
                      (C18588 + C18600) * C27517 * C17724) *
                         C27280 -
                     ((C18601 + C18593) * C27517 * C17724 +
                      (C18598 + C18582) * C27517 * C17723) *
                         C591) *
                        C1216 +
                    (((C18593 + C18601) * C27517 * C17723 +
                      ((C9186 * C7322 + C27516 * C7326) * C143 +
                       (C9186 * C7364 + C27516 * C7366) * C27303) *
                          C27517 * C17724) *
                         C591 -
                     (((C9186 * C7363 + C27516 * C7365) * C27303 +
                       (C9186 * C7321 + C27516 * C7325) * C143) *
                          C27517 * C17724 +
                      (C18600 + C18588) * C27517 * C17723) *
                         C27280) *
                        C1217)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[32] +=
        (-std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C27517 * C17723 +
            ((C9186 * C1220 + C27516 * C1228) * C188 +
             (C9186 * C1358 + C27516 * C1364) * C27314) *
                C27517 * C17724) *
               C593 -
           ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
            (C9672 + C9656) * C27517 * C17723) *
               C594 +
           ((C9661 + C9673) * C27517 * C17723 +
            (C14498 * C188 + C14614 * C27314) * C27517 * C17724) *
               C595) *
              C591 +
          (((C9662 + C9674) * C27517 * C17723 +
            (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
               C594 -
           (((C9186 * C1357 + C27516 * C1363) * C27314 +
             (C9186 * C1218 + C27516 * C1224) * C188) *
                C27517 * C17724 +
            ((C9186 * C190 + C27516 * C195) * C27314 +
             (C9186 * C90 + C27516 * C95) * C188) *
                C27517 * C17723) *
               C593 -
           (((C9186 * C6043 + C27516 * C6045) * C27314 +
             (C9186 * C5931 + C27516 * C5935) * C188) *
                C27517 * C17724 +
            (C9675 + C9665) * C27517 * C17723) *
               C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C9186 * C89 + C27516 * C94) * C188 +
                                (C9186 * C189 + C27516 * C194) * C27314) *
                                   C27517 * C17723 +
                               ((C9186 * C1220 + C27516 * C1228) * C188 +
                                (C9186 * C1358 + C27516 * C1364) * C27314) *
                                   C27517 * C17724) *
                                  C27303 * C75 -
                              (((C9186 * C1357 + C27516 * C1363) * C27314 +
                                (C9186 * C1218 + C27516 * C1224) * C188) *
                                   C27517 * C17724 +
                               ((C9186 * C190 + C27516 * C195) * C27314 +
                                (C9186 * C90 + C27516 * C95) * C188) *
                                   C27517 * C17723) *
                                  C27303 * C76 +
                              (((C9186 * C91 + C27516 * C98) * C188 +
                                (C9186 * C191 + C27516 * C196) * C27314) *
                                   C27517 * C17723 +
                               ((C9186 * C1219 + C27516 * C1225) * C188 +
                                (C9186 * C1361 + C27516 * C1367) * C27314) *
                                   C27517 * C17724) *
                                  C27303 * C77 -
                              (((C9186 * C2465 + C27516 * C2466) * C27314 +
                                (C9186 * C2357 + C27516 * C2358) * C188) *
                                   C27517 * C17724 +
                               ((C9186 * C192 + C27516 * C197) * C27314 +
                                (C9186 * C92 + C27516 * C100) * C188) *
                                   C27517 * C17723) *
                                  C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1354 +
            (C9186 * C189 + C27516 * C194) * C1215 - C18516 * C1355 -
            C18660 * C1216 + C18522 * C1356 + C18661 * C1217) *
               C27517 * C17723 +
           (C18516 * C1354 + C18660 * C1215 - C18522 * C1355 - C18661 * C1216 +
            (C9186 * C7322 + C27516 * C7326) * C1356 +
            (C9186 * C7406 + C27516 * C7408) * C1217) *
               C27517 * C17724) *
              C27303 * C591 +
          ((C18518 * C1355 -
            ((C9186 * C190 + C27516 * C195) * C1215 +
             (C9186 * C90 + C27516 * C95) * C1354) +
            C18662 * C1216 - C18520 * C1356 - C18663 * C1217) *
               C27517 * C17723 +
           (C18520 * C1355 - (C18662 * C1215 + C18518 * C1354) +
            C18663 * C1216 - (C9186 * C7321 + C27516 * C7325) * C1356 -
            (C9186 * C7405 + C27516 * C7407) * C1217) *
               C27517 * C17724) *
              C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eeyx[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C596 +
            (C233 * C1227 + C27517 * C1425) * C591 - C1440 * C597 -
            C1441 * C27280) *
               C17724) *
              C27516 * C27314 * C593 +
          ((C820 * C597 -
            ((C233 * C607 + C27517 * C805) * C591 +
             (C233 * C600 + C27517 * C800) * C596) +
            C821 * C27280) *
               C17723 +
           (C3118 * C597 -
            ((C233 * C2890 + C27517 * C3110) * C591 +
             (C233 * C2885 + C27517 * C3107) * C596) +
            C3119 * C27280) *
               C17724) *
              C27516 * C27314 * C594 +
          (((C233 * C601 + C27517 * C802) * C596 +
            (C233 * C612 + C27517 * C808) * C591 - C822 * C597 -
            C823 * C27280) *
               C17723 +
           ((C233 * C5932 + C27517 * C6098) * C596 +
            (C233 * C5934 + C27517 * C6100) * C591 -
            (C233 * C5931 + C27517 * C6097) * C597 -
            (C233 * C5933 + C27517 * C6099) * C27280) *
               C17724) *
              C27516 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C85 +
           (C233 * C96 + C27517 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C17723 +
          ((C233 * C1220 + C27517 * C1420) * C85 +
           (C233 * C1227 + C27517 * C1425) * C75 - C1440 * C86 - C1441 * C76 +
           C2524 * C87 + C2525 * C77 - (C233 * C2357 + C27517 * C2517) * C88 -
           (C233 * C2359 + C27517 * C2518) * C78) *
              C17724) *
         C27516 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C17723 +
           (C18730 + C18731 - C18718 - C18719) * C17724) *
              C27516 * C1215 +
          ((C18718 - (C18731 + C18730) + C18719) * C17723 +
           (C18720 - (C18732 + C18733) + C18725) * C17724) *
              C27516 * C1216 +
          ((C18733 + C18732 - C18720 - C18725) * C17723 +
           ((C233 * C7322 + C27517 * C7444) * C596 +
            (C233 * C7324 + C27517 * C7446) * C591 -
            (C233 * C7321 + C27517 * C7443) * C597 -
            (C233 * C7323 + C27517 * C7445) * C27280) *
               C17724) *
              C27516 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eeyy[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C672 +
            (C233 * C1294 + C27517 * C1495) * C593 -
            (C233 * C2885 + C27517 * C3107) * C673 -
            (C233 * C2963 + C27517 * C3185) * C594 +
            (C233 * C5932 + C27517 * C6098) * C674 +
            (C233 * C5990 + C27517 * C6151) * C595) *
               C17724) *
              C27516 * C591 +
          ((C882 - (C881 + C880) + C890 - C885 - C891) * C17723 +
           (C3118 * C673 - (C1506 * C593 + C1440 * C672) + C3194 * C594 -
            (C233 * C5931 + C27517 * C6097) * C674 -
            (C233 * C5989 + C27517 * C6152) * C595) *
               C17724) *
              C27516 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C143 +
            (C233 * C1294 + C27517 * C1495) * C27303) *
               C17724) *
              C27516 * C75 -
          ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) * C27516 * C76 +
          ((C307 + C315) * C17723 + (C2577 + C2581) * C17724) * C27516 * C77 -
          (((C233 * C2411 + C27517 * C2575) * C27303 +
            (C233 * C2357 + C27517 * C2517) * C143) *
               C17724 +
           (C316 + C308) * C17723) *
              C27516 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C17723 +
            (C18784 + C18792) * C17724) *
               C27516 * C591 -
           ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) * C27516 *
               C27280) *
              C1215 +
          (((C1500 + C1508) * C17723 + (C1503 + C1509) * C17724) * C27516 *
               C27280 -
           ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) * C27516 *
               C591) *
              C1216 +
          (((C18789 + C18793) * C17723 +
            ((C233 * C7322 + C27517 * C7444) * C143 +
             (C233 * C7364 + C27517 * C7482) * C27303) *
                C17724) *
               C27516 * C591 -
           (((C233 * C7363 + C27517 * C7481) * C27303 +
             (C233 * C7321 + C27517 * C7443) * C143) *
                C17724 +
            (C1509 + C1503) * C17723) *
               C27516 * C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[32] +=
        (-std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            ((C233 * C1220 + C27517 * C1420) * C188 +
             (C233 * C1358 + C27517 * C1559) * C27314) *
                C17724) *
               C27516 * C593 -
           (((C233 * C3035 + C27517 * C3261) * C27314 +
             (C233 * C2885 + C27517 * C3107) * C188) *
                C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C594 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C17723 +
            ((C233 * C5932 + C27517 * C6098) * C188 +
             (C233 * C6044 + C27517 * C6203) * C27314) *
                C17724) *
               C27516 * C595) *
              C591 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C594 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C593 -
           (((C233 * C6043 + C27517 * C6204) * C27314 +
             (C233 * C5931 + C27517 * C6097) * C188) *
                C17724 +
            (C957 + C951) * C17723) *
               C27516 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C188 +
            (C233 * C1358 + C27517 * C1559) * C27314) *
               C17724) *
              C27516 * C27303 * C75 -
          ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
              C27516 * C27303 * C76 +
          ((C361 + C369) * C17723 + (C2524 * C188 + C2642 * C27314) * C17724) *
              C27516 * C27303 * C77 -
          (((C233 * C2465 + C27517 * C2631) * C27314 +
            (C233 * C2357 + C27517 * C2517) * C188) *
               C17724 +
           (C370 + C362) * C17723) *
              C27516 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C1354 +
            (C233 * C189 + C27517 * C350) * C1215 - C18726 * C1355 -
            C18848 * C1216 + C18729 * C1356 + C18849 * C1217) *
               C17723 +
           (C18726 * C1354 + C18848 * C1215 - C18729 * C1355 - C18849 * C1216 +
            (C233 * C7322 + C27517 * C7444) * C1356 +
            (C233 * C7406 + C27517 * C7517) * C1217) *
               C17724) *
              C27516 * C27303 * C591 +
          ((C1568 - (C1567 + C1566) + C1576 - C1571 - C1577) * C17723 +
           (C1442 * C1355 - (C1574 * C1215 + C1440 * C1354) + C1575 * C1216 -
            (C233 * C7321 + C27517 * C7443) * C1356 -
            (C233 * C7405 + C27517 * C7518) * C1217) *
               C17724) *
              C27516 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[32] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C591 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27280) *
              C27516 * C27517 * C27314 * C593 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C597 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C591 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C596) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C27280) *
              C27516 * C27517 * C27314 * C594 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C596 +
           (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
               C591 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C597 -
           (C17930 * C5933 + C17724 * C6257 + C17929 * C613 + C17723 * C1017) *
               C27280) *
              C27516 * C27517 * C27314 * C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
              C85 +
          (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
              C75 -
          (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
              C86 -
          (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
              C76 +
          (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
              C87 +
          (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
              C77 -
          (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
              C88 -
          (C17930 * C2359 + C17724 * C2694 + C17929 * C101 + C17723 * C413) *
              C78) *
         C27516 * C27517 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C591 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27280) *
              C27516 * C27517 * C1215 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C597 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C591 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C596) +
           (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 + C17724 * C1637) *
               C27280) *
              C27516 * C27517 * C1216 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C596 +
           (C17929 * C1232 + C17723 * C1636 + C17930 * C7324 + C17724 * C7556) *
               C591 -
           (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 + C17723 * C1631) *
               C597 -
           (C17930 * C7323 + C17724 * C7555 + C17929 * C1233 + C17723 * C1637) *
               C27280) *
              C27516 * C27517 * C1217) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[32] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C672 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C593 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C673 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C594 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C674 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C595) *
              C27516 * C27517 * C591 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C673 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C593 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C672) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C594 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C674 -
           (C17930 * C5989 + C17724 * C6310 + C17929 * C678 + C17723 * C1084) *
               C595) *
              C27516 * C27517 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27303) *
              C27516 * C27517 * C75 -
          ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
               C27303 +
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C143) *
              C27516 * C27517 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C143 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
               C27303) *
              C27516 * C27517 * C77 -
          ((C17930 * C2411 + C17724 * C2751 + C17929 * C147 + C17723 * C470) *
               C27303 +
           (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
               C143) *
              C27516 * C27517 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27303) *
               C27516 * C27517 * C591 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27303 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27516 * C27517 * C27280) *
              C1215 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C143 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27303) *
               C27516 * C27517 * C27280 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27303 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C143) *
               C27516 * C27517 * C591) *
              C1216 +
          (((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 +
             C17724 * C7554) *
                C143 +
            (C17929 * C1295 + C17723 * C1704 + C17930 * C7364 +
             C17724 * C7592) *
                C27303) *
               C27516 * C27517 * C591 -
           ((C17930 * C7363 + C17724 * C7591 + C17929 * C1296 +
             C17723 * C1705) *
                C27303 +
            (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 +
             C17723 * C1631) *
                C143) *
               C27516 * C27517 * C27280) *
              C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[32] +=
        (-std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C593 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C594 +
           ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C188 +
            (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
                C27314) *
               C27516 * C27517 * C595) *
              C591 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C594 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C593 -
           ((C17930 * C6043 + C17724 * C6362 + C17929 * C740 + C17723 * C1152) *
                C27314 +
            (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
                C188) *
               C27516 * C27517 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27314) *
              C27516 * C27517 * C27303 * C75 -
          ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
               C27314 +
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C188) *
              C27516 * C27517 * C27303 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C188 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
               C27314) *
              C27516 * C27517 * C27303 * C77 -
          ((C17930 * C2465 + C17724 * C2807 + C17929 * C192 + C17723 * C524) *
               C27314 +
           (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
               C188) *
              C27516 * C27517 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1354 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C1215 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C1355 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C1216 +
           (C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C1356 +
           (C17929 * C1359 + C17723 * C1768 + C17930 * C7406 + C17724 * C7627) *
               C1217) *
              C27516 * C27517 * C27303 * C591 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C1355 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C1215 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C1354) +
           (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 + C17724 * C1770) *
               C1216 -
           (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 + C17723 * C1631) *
               C1356 -
           (C17930 * C7405 + C17724 * C7628 + C17929 * C1360 + C17723 * C1770) *
               C1217) *
              C27516 * C27517 * C27303 * C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1840 +
            (C9186 * C96 + C27516 * C104) * C27505 -
            (C9186 * C90 + C27516 * C95) * C1841 -
            (C9186 * C97 + C27516 * C105) * C27506 +
            (C9186 * C91 + C27516 * C98) * C1842 +
            (C9186 * C99 + C27516 * C106) * C1837) *
               C27517 * C17723 +
           (C19500 + C19501 - C19502 - C19503 + C19510 + C19511) * C27517 *
               C17724) *
              C27482 +
          ((C19502 - (C19501 + C19500) + C19503 - C19510 - C19511) * C27517 *
               C17723 +
           (C18520 * C1841 - (C18521 * C27505 + C18522 * C1840) +
            C18523 * C27506 - (C9186 * C1223 + C27516 * C1234) * C1842 -
            (C9186 * C1235 + C27516 * C1241) * C1837) *
               C27517 * C17724) *
              C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eexy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C27517 * C17723 +
                      (C18582 + C18598) * C27517 * C17724) *
                         C27505 -
                     ((C18599 + C18587) * C27517 * C17724 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C27517 * C17723) *
                         C27506 +
                     (((C9186 * C91 + C27516 * C98) * C143 +
                       (C9186 * C146 + C27516 * C151) * C27303) *
                          C27517 * C17723 +
                      (C19562 + C19566) * C27517 * C17724) *
                         C1837) *
                        C27482 +
                    (((C18587 + C18599) * C27517 * C17723 +
                      (C18588 + C18600) * C27517 * C17724) *
                         C27506 -
                     ((C18601 + C18593) * C27517 * C17724 +
                      (C18598 + C18582) * C27517 * C17723) *
                         C27505 -
                     (((C9186 * C1297 + C27516 * C1303) * C27303 +
                       (C9186 * C1223 + C27516 * C1234) * C143) *
                          C27517 * C17724 +
                      (C19566 + C19562) * C27517 * C17723) *
                         C1837) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C2463 +
                      (C9186 * C189 + C27516 * C194) * C27482 - C18516 * C2464 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C2463 + C18660 * C27482 - C18522 * C2464 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C27303 * C27505 +
                    ((C18518 * C2464 -
                      ((C9186 * C190 + C27516 * C195) * C27482 +
                       (C9186 * C90 + C27516 * C95) * C2463) +
                      C18662 * C27378) *
                         C27517 * C17723 +
                     (C18520 * C2464 - (C18662 * C27482 + C18518 * C2463) +
                      C18663 * C27378) *
                         C27517 * C17724) *
                        C27303 * C27506 +
                    (((C9186 * C91 + C27516 * C98) * C2463 +
                      (C9186 * C191 + C27516 * C196) * C27482 - C19508 * C2464 -
                      C19619 * C27378) *
                         C27517 * C17723 +
                     (C19508 * C2463 + C19619 * C27482 -
                      (C9186 * C1223 + C27516 * C1234) * C2464 -
                      (C9186 * C1362 + C27516 * C1368) * C27378) *
                         C27517 * C17724) *
                        C27303 * C1837)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C1840 +
            (C233 * C96 + C27517 * C239) * C27505 - C257 * C1841 -
            C258 * C27506 + C259 * C1842 + C260 * C1837) *
               C17723 +
           (C19670 + C19671 - C19672 - C19673 + C19674 + C19675) * C17724) *
              C27516 * C27482 +
          ((C19672 - (C19671 + C19670) + C19673 - C19674 - C19675) * C17723 +
           (C1442 * C1841 - (C18728 * C27505 + C18729 * C1840) +
            C1443 * C27506 - (C233 * C1223 + C27517 * C1424) * C1842 -
            (C233 * C1235 + C27517 * C1430) * C1837) *
               C17724) *
              C27516 * C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eeyy[33] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C143 +
                       (C233 * C144 + C27517 * C296) * C27303) *
                          C17723 +
                      (C18784 + C18792) * C17724) *
                         C27516 * C27505 -
                     ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) *
                         C27516 * C27506 +
                     ((C307 + C315) * C17723 + (C2577 + C2581) * C17724) *
                         C27516 * C1837) *
                        C27482 +
                    (((C1500 + C1508) * C17723 + (C1503 + C1509) * C17724) *
                         C27516 * C27506 -
                     ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) *
                         C27516 * C27505 -
                     (((C233 * C1297 + C27517 * C1498) * C27303 +
                       (C233 * C1223 + C27517 * C1424) * C143) *
                          C17724 +
                      (C2581 + C2577) * C17723) *
                         C27516 * C1837) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C2463 +
            (C233 * C189 + C27517 * C350) * C27482 - C18726 * C2464 -
            C18848 * C27378) *
               C17723 +
           (C18726 * C2463 + C18848 * C27482 - C18729 * C2464 -
            C18849 * C27378) *
               C17724) *
              C27516 * C27303 * C27505 +
          ((C2635 - (C2634 + C2633) + C2636) * C17723 +
           (C1442 * C2464 - (C1574 * C27482 + C1440 * C2463) + C1575 * C27378) *
               C17724) *
              C27516 * C27303 * C27506 +
          ((C2639 + C2638 - C2637 - C2643) * C17723 +
           (C2524 * C2463 + C2642 * C27482 -
            (C233 * C1223 + C27517 * C1424) * C2464 -
            (C233 * C1362 + C27517 * C1564) * C27378) *
               C17724) *
              C27516 * C27303 * C1837)) /
        (p * q * std::sqrt(p + q));
    d2eezx[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1840 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27505 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C1841 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27506 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C1842 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C1837) *
              C27516 * C27517 * C27482 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C1841 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27505 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C1840) +
           (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 + C17724 * C1637) *
               C27506 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C1842 -
           (C17930 * C1235 + C17724 * C1638 + C17929 * C1229 + C17723 * C1635) *
               C1837) *
              C27516 * C27517 * C27378) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eezy[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27303) *
               C27516 * C27517 * C27505 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27303 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27516 * C27517 * C27506 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
                C27303) *
               C27516 * C27517 * C1837) *
              C27482 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C143 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27303) *
               C27516 * C27517 * C27506 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27303 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C143) *
               C27516 * C27517 * C27505 -
           ((C17930 * C1297 + C17724 * C1706 + C17929 * C1293 +
             C17723 * C1702) *
                C27303 +
            (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 +
             C17723 * C1629) *
                C143) *
               C27516 * C27517 * C1837) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[33] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C2463 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27482 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C2464 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C27303 * C27505 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C2464 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27482 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C2463) +
           (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 + C17724 * C1770) *
               C27378) *
              C27516 * C27517 * C27303 * C27506 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C2463 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
               C27482 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C2464 -
           (C17930 * C1362 + C17724 * C1772 + C17929 * C1361 + C17723 * C1771) *
               C27378) *
              C27516 * C27517 * C27303 * C1837)) /
        (p * q * std::sqrt(p + q));
    d2eexx[34] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C85 +
                     (C9186 * C96 + C27516 * C104) * C75 -
                     (C9186 * C90 + C27516 * C95) * C86 -
                     (C9186 * C97 + C27516 * C105) * C76 +
                     (C9186 * C91 + C27516 * C98) * C87 +
                     (C9186 * C99 + C27516 * C106) * C77 -
                     (C9186 * C92 + C27516 * C100) * C88 -
                     (C9186 * C101 + C27516 * C107) * C78) *
                        C27517 * C17723 +
                    ((C9186 * C1220 + C27516 * C1228) * C85 +
                     (C9186 * C1227 + C27516 * C1237) * C75 -
                     (C9186 * C1218 + C27516 * C1224) * C86 -
                     (C9186 * C1226 + C27516 * C1236) * C76 +
                     (C9186 * C1219 + C27516 * C1225) * C87 +
                     (C9186 * C1229 + C27516 * C1238) * C77 -
                     (C9186 * C2357 + C27516 * C2358) * C88 -
                     (C9186 * C2359 + C27516 * C2360) * C78) *
                        C27517 * C17724) *
                   C27314 * C27303) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C596 +
                      (C9186 * C96 + C27516 * C104) * C591 -
                      (C9186 * C90 + C27516 * C95) * C597 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C596 +
                      (C9186 * C1227 + C27516 * C1237) * C591 -
                      (C9186 * C1218 + C27516 * C1224) * C597 -
                      (C9186 * C1226 + C27516 * C1236) * C27280) *
                         C27517 * C17724) *
                        C27314 * C593 +
                    ((C9538 - (C9537 + C9536) + C9539) * C27517 * C17723 +
                     (C11466 - (C11467 + C11468) + C11469) * C27517 * C17724) *
                        C27314 * C594 +
                    ((C9542 + C9541 - C9540 - C9543) * C27517 * C17723 +
                     (C14498 * C596 + C14499 * C591 -
                      (C9186 * C5931 + C27516 * C5935) * C597 -
                      (C9186 * C5933 + C27516 * C5937) * C27280) *
                         C27517 * C17724) *
                        C27314 * C595)) /
                      (p * q * std::sqrt(p + q));
    d2eexy[34] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C143 +
                      (C9186 * C144 + C27516 * C149) * C27303) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C143 +
                      (C9186 * C1294 + C27516 * C1300) * C27303) *
                         C27517 * C17724) *
                        C75 -
                    (((C9186 * C1292 + C27516 * C1298) * C27303 +
                      (C9186 * C1218 + C27516 * C1224) * C143) *
                         C27517 * C17724 +
                     ((C9186 * C145 + C27516 * C150) * C27303 +
                      (C9186 * C90 + C27516 * C95) * C143) *
                         C27517 * C17723) *
                        C76 +
                    (((C9186 * C91 + C27516 * C98) * C143 +
                      (C9186 * C146 + C27516 * C151) * C27303) *
                         C27517 * C17723 +
                     ((C9186 * C1219 + C27516 * C1225) * C143 +
                      (C9186 * C1293 + C27516 * C1299) * C27303) *
                         C27517 * C17724) *
                        C77 -
                    (((C9186 * C2411 + C27516 * C2412) * C27303 +
                      (C9186 * C2357 + C27516 * C2358) * C143) *
                         C27517 * C17724 +
                     ((C9186 * C147 + C27516 * C152) * C27303 +
                      (C9186 * C92 + C27516 * C100) * C143) *
                         C27517 * C17723) *
                        C78) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C672 +
                      (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
                      C9602 * C594 + C9534 * C674 + C9603 * C595) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C672 +
                      (C9186 * C1294 + C27516 * C1300) * C593 - C11464 * C673 -
                      C11540 * C594 + C14498 * C674 + C14556 * C595) *
                         C27517 * C17724) *
                        C591 +
                    ((C9530 * C673 -
                      ((C9186 * C145 + C27516 * C150) * C593 +
                       (C9186 * C90 + C27516 * C95) * C672) +
                      C9604 * C594 - C9532 * C674 - C9605 * C595) *
                         C27517 * C17723 +
                     (C11462 * C673 -
                      ((C9186 * C1292 + C27516 * C1298) * C593 +
                       (C9186 * C1218 + C27516 * C1224) * C672) +
                      C11541 * C594 - (C9186 * C5931 + C27516 * C5935) * C674 -
                      (C9186 * C5989 + C27516 * C5991) * C595) *
                         C27517 * C17724) *
                        C27280) *
                   C27314) /
                      (p * q * std::sqrt(p + q));
    d2eexz[34] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C188 +
                      (C9186 * C189 + C27516 * C194) * C27314) *
                         C27517 * C17723 +
                     ((C9186 * C1220 + C27516 * C1228) * C188 +
                      (C9186 * C1358 + C27516 * C1364) * C27314) *
                         C27517 * C17724) *
                        C27303 * C75 -
                    (((C9186 * C1357 + C27516 * C1363) * C27314 +
                      (C9186 * C1218 + C27516 * C1224) * C188) *
                         C27517 * C17724 +
                     ((C9186 * C190 + C27516 * C195) * C27314 +
                      (C9186 * C90 + C27516 * C95) * C188) *
                         C27517 * C17723) *
                        C27303 * C76 +
                    (((C9186 * C91 + C27516 * C98) * C188 +
                      (C9186 * C191 + C27516 * C196) * C27314) *
                         C27517 * C17723 +
                     ((C9186 * C1219 + C27516 * C1225) * C188 +
                      (C9186 * C1361 + C27516 * C1367) * C27314) *
                         C27517 * C17724) *
                        C27303 * C77 -
                    (((C9186 * C2465 + C27516 * C2466) * C27314 +
                      (C9186 * C2357 + C27516 * C2358) * C188) *
                         C27517 * C17724 +
                     ((C9186 * C192 + C27516 * C197) * C27314 +
                      (C9186 * C92 + C27516 * C100) * C188) *
                         C27517 * C17723) *
                        C27303 * C78)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C188 +
                       (C9186 * C189 + C27516 * C194) * C27314) *
                          C27517 * C17723 +
                      ((C9186 * C1220 + C27516 * C1228) * C188 +
                       (C9186 * C1358 + C27516 * C1364) * C27314) *
                          C27517 * C17724) *
                         C593 -
                     ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
                      (C9672 + C9656) * C27517 * C17723) *
                         C594 +
                     ((C9661 + C9673) * C27517 * C17723 +
                      (C14498 * C188 + C14614 * C27314) * C27517 * C17724) *
                         C595) *
                        C591 +
                    (((C9662 + C9674) * C27517 * C17723 +
                      (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
                         C594 -
                     (((C9186 * C1357 + C27516 * C1363) * C27314 +
                       (C9186 * C1218 + C27516 * C1224) * C188) *
                          C27517 * C17724 +
                      ((C9186 * C190 + C27516 * C195) * C27314 +
                       (C9186 * C90 + C27516 * C95) * C188) *
                          C27517 * C17723) *
                         C593 -
                     (((C9186 * C6043 + C27516 * C6045) * C27314 +
                       (C9186 * C5931 + C27516 * C5935) * C188) *
                          C27517 * C17724 +
                      (C9675 + C9665) * C27517 * C17723) *
                         C595) *
                        C27280)) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C85 +
           (C233 * C96 + C27517 * C239) * C75 - C257 * C86 - C258 * C76 +
           C259 * C87 + C260 * C77 - C261 * C88 - C262 * C78) *
              C17723 +
          ((C233 * C1220 + C27517 * C1420) * C85 +
           (C233 * C1227 + C27517 * C1425) * C75 - C1440 * C86 - C1441 * C76 +
           C2524 * C87 + C2525 * C77 - (C233 * C2357 + C27517 * C2517) * C88 -
           (C233 * C2359 + C27517 * C2518) * C78) *
              C17724) *
         C27516 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C596 +
            (C233 * C96 + C27517 * C239) * C591 - C257 * C597 - C258 * C27280) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C596 +
            (C233 * C1227 + C27517 * C1425) * C591 - C1440 * C597 -
            C1441 * C27280) *
               C17724) *
              C27516 * C27314 * C593 +
          ((C820 * C597 -
            ((C233 * C607 + C27517 * C805) * C591 +
             (C233 * C600 + C27517 * C800) * C596) +
            C821 * C27280) *
               C17723 +
           (C3118 * C597 -
            ((C233 * C2890 + C27517 * C3110) * C591 +
             (C233 * C2885 + C27517 * C3107) * C596) +
            C3119 * C27280) *
               C17724) *
              C27516 * C27314 * C594 +
          (((C233 * C601 + C27517 * C802) * C596 +
            (C233 * C612 + C27517 * C808) * C591 - C822 * C597 -
            C823 * C27280) *
               C17723 +
           ((C233 * C5932 + C27517 * C6098) * C596 +
            (C233 * C5934 + C27517 * C6100) * C591 -
            (C233 * C5931 + C27517 * C6097) * C597 -
            (C233 * C5933 + C27517 * C6099) * C27280) *
               C17724) *
              C27516 * C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C143 +
            (C233 * C1294 + C27517 * C1495) * C27303) *
               C17724) *
              C27516 * C75 -
          ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) * C27516 * C76 +
          ((C307 + C315) * C17723 + (C2577 + C2581) * C17724) * C27516 * C77 -
          (((C233 * C2411 + C27517 * C2575) * C27303 +
            (C233 * C2357 + C27517 * C2517) * C143) *
               C17724 +
           (C316 + C308) * C17723) *
              C27516 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C672 +
            (C233 * C1294 + C27517 * C1495) * C593 -
            (C233 * C2885 + C27517 * C3107) * C673 -
            (C233 * C2963 + C27517 * C3185) * C594 +
            (C233 * C5932 + C27517 * C6098) * C674 +
            (C233 * C5990 + C27517 * C6151) * C595) *
               C17724) *
              C27516 * C591 +
          ((C882 - (C881 + C880) + C890 - C885 - C891) * C17723 +
           (C3118 * C673 - (C1506 * C593 + C1440 * C672) + C3194 * C594 -
            (C233 * C5931 + C27517 * C6097) * C674 -
            (C233 * C5989 + C27517 * C6152) * C595) *
               C17724) *
              C27516 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eeyz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C17723 +
           ((C233 * C1220 + C27517 * C1420) * C188 +
            (C233 * C1358 + C27517 * C1559) * C27314) *
               C17724) *
              C27516 * C27303 * C75 -
          ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
              C27516 * C27303 * C76 +
          ((C361 + C369) * C17723 + (C2524 * C188 + C2642 * C27314) * C17724) *
              C27516 * C27303 * C77 -
          (((C233 * C2465 + C27517 * C2631) * C27314 +
            (C233 * C2357 + C27517 * C2517) * C188) *
               C17724 +
           (C370 + C362) * C17723) *
              C27516 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            ((C233 * C1220 + C27517 * C1420) * C188 +
             (C233 * C1358 + C27517 * C1559) * C27314) *
                C17724) *
               C27516 * C593 -
           (((C233 * C3035 + C27517 * C3261) * C27314 +
             (C233 * C2885 + C27517 * C3107) * C188) *
                C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C594 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C17723 +
            ((C233 * C5932 + C27517 * C6098) * C188 +
             (C233 * C6044 + C27517 * C6203) * C27314) *
                C17724) *
               C27516 * C595) *
              C591 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C594 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C593 -
           (((C233 * C6043 + C27517 * C6204) * C27314 +
             (C233 * C5931 + C27517 * C6097) * C188) *
                C17724 +
            (C957 + C951) * C17723) *
               C27516 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eezx[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
              C85 +
          (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
              C75 -
          (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
              C86 -
          (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
              C76 +
          (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
              C87 +
          (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
              C77 -
          (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
              C88 -
          (C17930 * C2359 + C17724 * C2694 + C17929 * C101 + C17723 * C413) *
              C78) *
         C27516 * C27517 * C27314 * C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C596 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C591 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C597 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27280) *
              C27516 * C27517 * C27314 * C593 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C597 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C591 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C596) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C27280) *
              C27516 * C27517 * C27314 * C594 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C596 +
           (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
               C591 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C597 -
           (C17930 * C5933 + C17724 * C6257 + C17929 * C613 + C17723 * C1017) *
               C27280) *
              C27516 * C27517 * C27314 * C595)) /
            (p * q * std::sqrt(p + q));
    d2eezy[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27303) *
              C27516 * C27517 * C75 -
          ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
               C27303 +
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C143) *
              C27516 * C27517 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C143 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
               C27303) *
              C27516 * C27517 * C77 -
          ((C17930 * C2411 + C17724 * C2751 + C17929 * C147 + C17723 * C470) *
               C27303 +
           (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
               C143) *
              C27516 * C27517 * C78) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C672 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C593 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C673 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C594 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C674 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C595) *
              C27516 * C27517 * C591 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C673 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C593 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C672) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C594 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C674 -
           (C17930 * C5989 + C17724 * C6310 + C17929 * C678 + C17723 * C1084) *
               C595) *
              C27516 * C27517 * C27280) *
         C27314) /
            (p * q * std::sqrt(p + q));
    d2eezz[34] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27314) *
              C27516 * C27517 * C27303 * C75 -
          ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
               C27314 +
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C188) *
              C27516 * C27517 * C27303 * C76 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C188 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
               C27314) *
              C27516 * C27517 * C27303 * C77 -
          ((C17930 * C2465 + C17724 * C2807 + C17929 * C192 + C17723 * C524) *
               C27314 +
           (C17930 * C2357 + C17724 * C2693 + C17929 * C92 + C17723 * C408) *
               C188) *
              C27516 * C27517 * C27303 * C78)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C593 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C594 +
           ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C188 +
            (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
                C27314) *
               C27516 * C27517 * C595) *
              C591 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C594 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C593 -
           ((C17930 * C6043 + C17724 * C6362 + C17929 * C740 + C17723 * C1152) *
                C27314 +
            (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
                C188) *
               C27516 * C27517 * C595) *
              C27280)) /
            (p * q * std::sqrt(p + q));
    d2eexx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C26163 +
                      (C9186 * C96 + C27516 * C104) * C27471 -
                      (C9186 * C90 + C27516 * C95) * C26156 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C27517 * C17723 +
                     (C18516 * C26163 + C18517 * C27471 - C18518 * C26156 -
                      C18519 * C27280) *
                         C27517 * C17724) *
                        C27314 * C27509 +
                    ((C13424 - (C13423 + C13422) + C13425) * C27517 * C17723 +
                     (C13904 - (C13905 + C13906) + C13907) * C27517 * C17724) *
                        C27314 * C27510 +
                    ((C13428 + C13427 - C13426 - C13429) * C27517 * C17723 +
                     (C14498 * C26163 + C14499 * C27471 -
                      (C9186 * C5931 + C27516 * C5935) * C26156 -
                      (C9186 * C5933 + C27516 * C5937) * C27280) *
                         C27517 * C17724) *
                        C27314 * C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4914 +
            (C9186 * C144 + C27516 * C149) * C27509 - C9528 * C4915 -
            C9602 * C27510 + C9534 * C4916 + C9603 * C4861) *
               C27517 * C17723 +
           (C18516 * C4914 + C18594 * C27509 - C11464 * C4915 -
            C11540 * C27510 + C14498 * C4916 + C14556 * C4861) *
               C27517 * C17724) *
              C27471 +
          ((C9530 * C4915 -
            ((C9186 * C145 + C27516 * C150) * C27509 +
             (C9186 * C90 + C27516 * C95) * C4914) +
            C9604 * C27510 - C9532 * C4916 - C9605 * C4861) *
               C27517 * C17723 +
           (C11462 * C4915 - (C18595 * C27509 + C18518 * C4914) +
            C11541 * C27510 - (C9186 * C5931 + C27516 * C5935) * C4916 -
            (C9186 * C5989 + C27516 * C5991) * C4861) *
               C27517 * C17724) *
              C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eexz[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C188 +
                       (C9186 * C189 + C27516 * C194) * C27314) *
                          C27517 * C17723 +
                      (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
                         C27509 -
                     ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
                      (C9672 + C9656) * C27517 * C17723) *
                         C27510 +
                     ((C9661 + C9673) * C27517 * C17723 +
                      (C14498 * C188 + C14614 * C27314) * C27517 * C17724) *
                         C4861) *
                        C27471 +
                    (((C9662 + C9674) * C27517 * C17723 +
                      (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
                         C27510 -
                     ((C18662 * C27314 + C18518 * C188) * C27517 * C17724 +
                      ((C9186 * C190 + C27516 * C195) * C27314 +
                       (C9186 * C90 + C27516 * C95) * C188) *
                          C27517 * C17723) *
                         C27509 -
                     (((C9186 * C6043 + C27516 * C6045) * C27314 +
                       (C9186 * C5931 + C27516 * C5935) * C188) *
                          C27517 * C17724 +
                      (C9675 + C9665) * C27517 * C17723) *
                         C4861) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[35] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C26163 +
                      (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
                      C258 * C27280) *
                         C17723 +
                     (C18726 * C26163 + C18727 * C27471 - C1440 * C26156 -
                      C1441 * C27280) *
                         C17724) *
                        C27516 * C27314 * C27509 +
                    ((C820 * C26156 -
                      ((C233 * C607 + C27517 * C805) * C27471 +
                       (C233 * C600 + C27517 * C800) * C26163) +
                      C821 * C27280) *
                         C17723 +
                     (C3118 * C26156 - (C20204 * C27471 + C20205 * C26163) +
                      C3119 * C27280) *
                         C17724) *
                        C27516 * C27314 * C27510 +
                    (((C233 * C601 + C27517 * C802) * C26163 +
                      (C233 * C612 + C27517 * C808) * C27471 - C822 * C26156 -
                      C823 * C27280) *
                         C17723 +
                     ((C233 * C5932 + C27517 * C6098) * C26163 +
                      (C233 * C5934 + C27517 * C6100) * C27471 -
                      (C233 * C5931 + C27517 * C6097) * C26156 -
                      (C233 * C5933 + C27517 * C6099) * C27280) *
                         C17724) *
                        C27516 * C27314 * C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C4914 +
            (C233 * C144 + C27517 * C296) * C27509 -
            (C233 * C600 + C27517 * C800) * C4915 -
            (C233 * C676 + C27517 * C873) * C27510 +
            (C233 * C601 + C27517 * C802) * C4916 +
            (C233 * C677 + C27517 * C874) * C4861) *
               C17723 +
           (C18726 * C4914 + C18790 * C27509 - C20205 * C4915 -
            C20279 * C27510 + (C233 * C5932 + C27517 * C6098) * C4916 +
            (C233 * C5990 + C27517 * C6151) * C4861) *
               C17724) *
              C27516 * C27471 +
          ((C5070 - (C5069 + C5068) + C5071 - C5072 - C5073) * C17723 +
           (C3118 * C4915 - (C1506 * C27509 + C1440 * C4914) + C3194 * C27510 -
            (C233 * C5931 + C27517 * C6097) * C4916 -
            (C233 * C5989 + C27517 * C6152) * C4861) *
               C17724) *
              C27516 * C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eeyz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            (C18726 * C188 + C18848 * C27314) * C17724) *
               C27516 * C27509 -
           ((C20349 * C27314 + C20205 * C188) * C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C27510 +
           (((C233 * C601 + C27517 * C802) * C188 +
             (C233 * C739 + C27517 * C943) * C27314) *
                C17723 +
            ((C233 * C5932 + C27517 * C6098) * C188 +
             (C233 * C6044 + C27517 * C6203) * C27314) *
                C17724) *
               C27516 * C4861) *
              C27471 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C27510 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C27509 -
           (((C233 * C6043 + C27517 * C6204) * C27314 +
             (C233 * C5931 + C27517 * C6097) * C188) *
                C17724 +
            (C957 + C951) * C17723) *
               C27516 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C26163 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27471 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C26156 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27280) *
              C27516 * C27517 * C27314 * C27509 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C26156 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27471 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C26163) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C27280) *
              C27516 * C27517 * C27314 * C27510 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C26163 +
           (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
               C27471 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C26156 -
           (C17930 * C5933 + C17724 * C6257 + C17929 * C613 + C17723 * C1017) *
               C27280) *
              C27516 * C27517 * C27314 * C4861)) /
        (p * q * std::sqrt(p + q));
    d2eezy[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C4914 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27509 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C4915 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27510 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C4916 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C4861) *
              C27516 * C27517 * C27471 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C4915 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27509 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C4914) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C27510 -
           (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
               C4916 -
           (C17930 * C5989 + C17724 * C6310 + C17929 * C678 + C17723 * C1084) *
               C4861) *
              C27516 * C27517 * C27280) *
         C27314) /
        (p * q * std::sqrt(p + q));
    d2eezz[35] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C27509 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C27510 +
           ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C188 +
            (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
                C27314) *
               C27516 * C27517 * C4861) *
              C27471 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C27510 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C27509 -
           ((C17930 * C6043 + C17724 * C6362 + C17929 * C740 + C17723 * C1152) *
                C27314 +
            (C17930 * C5931 + C17724 * C6255 + C17929 * C602 + C17723 * C1011) *
                C188) *
               C27516 * C27517 * C4861) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C4016 +
                       (C9186 * C96 + C27516 * C104) * C27275) *
                          C27517 * C17723 +
                      (C21354 + C21355) * C27517 * C17724) *
                         C27482 -
                     ((C21356 + C21357) * C27517 * C17724 +
                      (C21355 + C21354) * C27517 * C17723) *
                         C27378) *
                        C27509 +
                    (((C12917 + C12916) * C27517 * C17723 +
                      (C12924 + C12925) * C27517 * C17724) *
                         C27378 -
                     ((C12916 + C12917) * C27517 * C17724 +
                      (C12539 + C12538) * C27517 * C17723) *
                         C27482) *
                        C27510 +
                    (((C12541 + C12540) * C27517 * C17723 +
                      (C14500 + C14501) * C27517 * C17724) *
                         C27482 -
                     (((C9186 * C12912 + C27516 * C12914) * C27275 +
                       (C9186 * C12911 + C27516 * C12913) * C4016) *
                          C27517 * C17724 +
                      (C14501 + C14500) * C27517 * C17723) *
                         C27378) *
                        C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4914 +
            (C9186 * C144 + C27516 * C149) * C27509 - C9528 * C4915 -
            C9602 * C27510 + C9534 * C4916 + C9603 * C4861) *
               C27517 * C17723 +
           (C22954 + C22955 - C22956 - C22957 + C22958 + C22959) * C27517 *
               C17724) *
              C27275 * C27482 +
          ((C22956 - (C22955 + C22954) + C22957 - C22958 - C22959) * C27517 *
               C17723 +
           (C12922 * C4915 - (C18597 * C27509 + C18522 * C4914) +
            C12980 * C27510 - (C9186 * C12911 + C27516 * C12913) * C4916 -
            (C9186 * C12975 + C27516 * C12976) * C4861) *
               C27517 * C17724) *
              C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eexz[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C2463 +
                      (C9186 * C189 + C27516 * C194) * C27482 - C18516 * C2464 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C2463 + C18660 * C27482 - C18522 * C2464 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C27509 +
                    ((C11610 - (C11609 + C11608) + C11620) * C27517 * C17723 +
                     (C12922 * C2464 - (C11618 * C27482 + C11464 * C2463) +
                      C13040 * C27378) *
                         C27517 * C17724) *
                        C27510 +
                    ((C14611 + C14610 - C14609 - C14615) * C27517 * C17723 +
                     (C14498 * C2463 + C14614 * C27482 -
                      (C9186 * C12911 + C27516 * C12913) * C2464 -
                      (C9186 * C13030 + C27516 * C13031) * C27378) *
                         C27517 * C17724) *
                        C4861) *
                   C27275) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C4016 +
                       (C233 * C96 + C27517 * C239) * C27275) *
                          C17723 +
                      (C21516 + C21517) * C17724) *
                         C27516 * C27482 -
                     ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) *
                         C27516 * C27378) *
                        C27509 +
                    (((C21520 + C21521) * C17723 + (C21528 + C21529) * C17724) *
                         C27516 * C27378 -
                     ((C21521 + C21520) * C17724 +
                      ((C233 * C607 + C27517 * C805) * C27275 +
                       (C233 * C600 + C27517 * C800) * C4016) *
                          C17723) *
                         C27516 * C27482) *
                        C27510 +
                    ((((C233 * C601 + C27517 * C802) * C4016 +
                       (C233 * C612 + C27517 * C808) * C27275) *
                          C17723 +
                      (C23066 + C23067) * C17724) *
                         C27516 * C27482 -
                     (((C233 * C12912 + C27517 * C13092) * C27275 +
                       (C233 * C12911 + C27517 * C13091) * C4016) *
                          C17724 +
                      (C23067 + C23066) * C17723) *
                         C27516 * C27378) *
                        C4861)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C4914 +
            (C233 * C144 + C27517 * C296) * C27509 -
            (C233 * C600 + C27517 * C800) * C4915 -
            (C233 * C676 + C27517 * C873) * C27510 +
            (C233 * C601 + C27517 * C802) * C4916 +
            (C233 * C677 + C27517 * C874) * C4861) *
               C17723 +
           (C23118 + C23119 - C23120 - C23121 + C23122 + C23126) * C17724) *
              C27516 * C27275 * C27482 +
          ((C23120 - (C23119 + C23118) + C23121 - C23122 - C23126) * C17723 +
           (C21526 * C4915 - (C18791 * C27509 + C18729 * C4914) +
            C21589 * C27510 - (C233 * C12911 + C27517 * C13091) * C4916 -
            (C233 * C12975 + C27517 * C13143) * C4861) *
               C17724) *
              C27516 * C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eeyz[36] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C2463 +
                      (C233 * C189 + C27517 * C350) * C27482 - C18726 * C2464 -
                      C18848 * C27378) *
                         C17723 +
                     (C18726 * C2463 + C18848 * C27482 - C18729 * C2464 -
                      C18849 * C27378) *
                         C17724) *
                        C27516 * C27509 +
                    ((C20205 * C2464 -
                      ((C233 * C738 + C27517 * C942) * C27482 +
                       (C233 * C600 + C27517 * C800) * C2463) +
                      C20349 * C27378) *
                         C17723 +
                     (C21526 * C2464 - (C20349 * C27482 + C20205 * C2463) +
                      C21643 * C27378) *
                         C17724) *
                        C27516 * C27510 +
                    (((C233 * C601 + C27517 * C802) * C2463 +
                      (C233 * C739 + C27517 * C943) * C27482 - C23064 * C2464 -
                      C23179 * C27378) *
                         C17723 +
                     (C23064 * C2463 + C23179 * C27482 -
                      (C233 * C12911 + C27517 * C13091) * C2464 -
                      (C233 * C13030 + C27517 * C13194) * C27378) *
                         C17724) *
                        C27516 * C4861) *
                   C27275) /
                  (p * q * std::sqrt(p + q));
    d2eezx[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C4016 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27275) *
               C27516 * C27517 * C27482 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27275 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4016) *
               C27516 * C27517 * C27378) *
              C27509 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C4016 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27275) *
               C27516 * C27517 * C27378 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27275 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C4016) *
               C27516 * C27517 * C27482) *
              C27510 +
          (((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C4016 +
            (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
                C27275) *
               C27516 * C27517 * C27482 -
           ((C17930 * C12912 + C17724 * C13246 + C17929 * C5934 +
             C17723 * C6258) *
                C27275 +
            (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
             C17723 * C6256) *
                C4016) *
               C27516 * C27517 * C27378) *
              C4861)) /
        (p * q * std::sqrt(p + q));
    d2eezy[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C4914 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27509 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C4915 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27510 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C4916 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C4861) *
              C27516 * C27517 * C27275 * C27482 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C4915 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27509 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4914) +
           (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 + C17724 * C4753) *
               C27510 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C4916 -
           (C17930 * C12975 + C17724 * C13307 + C17929 * C5990 +
            C17723 * C6309) *
               C4861) *
              C27516 * C27517 * C27275 * C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[36] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C2463 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27482 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C2464 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C27509 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C2464 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27482 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C2463) +
           (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 + C17724 * C4805) *
               C27378) *
              C27516 * C27517 * C27510 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C2463 +
           (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
               C27482 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C2464 -
           (C17930 * C13030 + C17724 * C13361 + C17929 * C6044 +
            C17723 * C6361) *
               C27378) *
              C27516 * C27517 * C4861) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eexx[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C27517 * C17723 +
           (C18516 * C4016 + C18517 * C27275) * C27517 * C17724) *
              C27314 * C4012 -
          ((C12916 + C12917) * C27517 * C17724 +
           (C12539 + C12538) * C27517 * C17723) *
              C27314 * C4013 +
          ((C12541 + C12540) * C27517 * C17723 +
           (C14500 + C14501) * C27517 * C17724) *
              C27314 * C4014 -
          (((C9186 * C14490 + C27516 * C14492) * C27275 +
            (C9186 * C14489 + C27516 * C14491) * C4016) *
               C27517 * C17724 +
           (C12549 + C12548) * C27517 * C17723) *
              C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C27517 * C17723 +
           (C18516 * C3556 + C18517 * C3551 - C18518 * C3557 - C18519 * C3552 +
            C19508 * C3558 + C19509 * C3553) *
               C27517 * C17724) *
              C27314 * C3554 +
          ((C12090 - (C12089 + C12088) + C12091 - C12092 - C12093) * C27517 *
               C17723 +
           (C11462 * C3557 - (C11463 * C3551 + C11464 * C3556) +
            C11465 * C3552 - (C9186 * C2887 + C27516 * C2892) * C3558 -
            (C9186 * C2893 + C27516 * C2896) * C3553) *
               C27517 * C17724) *
              C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C4016 +
             (C9186 * C96 + C27516 * C104) * C27275) *
                C27517 * C17723 +
            (C21354 + C21355) * C27517 * C17724) *
               C1215 -
           ((C21356 + C21357) * C27517 * C17724 +
            (C21355 + C21354) * C27517 * C17723) *
               C1216 +
           ((C21357 + C21356) * C27517 * C17723 +
            ((C9186 * C7322 + C27516 * C7326) * C4016 +
             (C9186 * C7324 + C27516 * C7328) * C27275) *
                C27517 * C17724) *
               C1217) *
              C3554 +
          (((C12917 + C12916) * C27517 * C17723 +
            (C12924 + C12925) * C27517 * C17724) *
               C1216 -
           ((C12916 + C12917) * C27517 * C17724 +
            (C12539 + C12538) * C27517 * C17723) *
               C1215 -
           (((C9186 * C15892 + C27516 * C15894) * C27275 +
             (C9186 * C15891 + C27516 * C15893) * C4016) *
                C27517 * C17724 +
            (C12925 + C12924) * C27517 * C17723) *
               C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eexy[37] += (-std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C4059 +
                     (C9186 * C144 + C27516 * C149) * C4012 - C9528 * C4060 -
                     C9602 * C4013 + C9534 * C4061 + C9603 * C4014 -
                     C12546 * C4062 - C12588 * C4015) *
                        C27517 * C17723 +
                    (C18516 * C4059 + C18594 * C4012 - C11464 * C4060 -
                     C11540 * C4013 + C14498 * C4061 + C14556 * C4014 -
                     (C9186 * C14489 + C27516 * C14491) * C4062 -
                     (C9186 * C14551 + C27516 * C14552) * C4015) *
                        C27517 * C17724) *
                   C27275 * C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C3609 +
                      (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
                      C9602 * C27352) *
                         C27517 * C17723 +
                     (C18516 * C3609 + C18594 * C3554 - C11464 * C3610 -
                      C11540 * C27352) *
                         C27517 * C17724) *
                        C3551 +
                    ((C9530 * C3610 -
                      ((C9186 * C145 + C27516 * C150) * C3554 +
                       (C9186 * C90 + C27516 * C95) * C3609) +
                      C9604 * C27352) *
                         C27517 * C17723 +
                     (C11462 * C3610 - (C18595 * C3554 + C18518 * C3609) +
                      C11541 * C27352) *
                         C27517 * C17724) *
                        C3552 +
                    (((C9186 * C91 + C27516 * C98) * C3609 +
                      (C9186 * C146 + C27516 * C151) * C3554 - C10520 * C3610 -
                      C10576 * C27352) *
                         C27517 * C17723 +
                     (C19508 * C3609 + C19565 * C3554 -
                      (C9186 * C2887 + C27516 * C2892) * C3610 -
                      (C9186 * C2965 + C27516 * C2968) * C27352) *
                         C27517 * C17724) *
                        C3553) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C3609 +
                      (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
                      C9602 * C27352) *
                         C27517 * C17723 +
                     (C21408 + C21409 - C21410 - C21411) * C27517 * C17724) *
                        C27275 * C1215 +
                    ((C21410 - (C21409 + C21408) + C21411) * C27517 * C17723 +
                     (C21412 - (C21413 + C21414) + C21415) * C27517 * C17724) *
                        C27275 * C1216 +
                    ((C21414 + C21413 - C21412 - C21415) * C27517 * C17723 +
                     ((C9186 * C7322 + C27516 * C7326) * C3609 +
                      (C9186 * C7364 + C27516 * C7366) * C3554 -
                      (C9186 * C15891 + C27516 * C15893) * C3610 -
                      (C9186 * C15929 + C27516 * C15930) * C27352) *
                         C27517 * C17724) *
                        C27275 * C1217)) /
                      (p * q * std::sqrt(p + q));
    d2eexz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C188 +
            (C9186 * C189 + C27516 * C194) * C27314) *
               C27517 * C17723 +
           (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
              C4012 -
          ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
           (C9672 + C9656) * C27517 * C17723) *
              C4013 +
          ((C9661 + C9673) * C27517 * C17723 +
           (C14498 * C188 + C14614 * C27314) * C27517 * C17724) *
              C4014 -
          (((C9186 * C14606 + C27516 * C14607) * C27314 +
            (C9186 * C14489 + C27516 * C14491) * C188) *
               C27517 * C17724 +
           (C12629 + C12625) * C27517 * C17723) *
              C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C188 +
             (C9186 * C189 + C27516 * C194) * C27314) *
                C27517 * C17723 +
            (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
               C3554 -
           ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
            (C9672 + C9656) * C27517 * C17723) *
               C27352) *
              C3551 +
          (((C9662 + C9674) * C27517 * C17723 +
            (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
               C27352 -
           ((C18662 * C27314 + C18518 * C188) * C27517 * C17724 +
            ((C9186 * C190 + C27516 * C195) * C27314 +
             (C9186 * C90 + C27516 * C95) * C188) *
                C27517 * C17723) *
               C3554) *
              C3552 +
          ((((C9186 * C91 + C27516 * C98) * C188 +
             (C9186 * C191 + C27516 * C196) * C27314) *
                C27517 * C17723 +
            (C19508 * C188 + C19619 * C27314) * C27517 * C17724) *
               C3554 -
           (((C9186 * C3037 + C27516 * C3040) * C27314 +
             (C9186 * C2887 + C27516 * C2892) * C188) *
                C27517 * C17724 +
            (C10631 + C10627) * C27517 * C17723) *
               C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C1354 +
            (C9186 * C189 + C27516 * C194) * C1215 - C18516 * C1355 -
            C18660 * C1216 + C18522 * C1356 + C18661 * C1217) *
               C27517 * C17723 +
           (C18516 * C1354 + C18660 * C1215 - C18522 * C1355 - C18661 * C1216 +
            (C9186 * C7322 + C27516 * C7326) * C1356 +
            (C9186 * C7406 + C27516 * C7408) * C1217) *
               C27517 * C17724) *
              C3554 +
          ((C13035 - (C13034 + C13033) + C13036 - C13037 - C13041) * C27517 *
               C17723 +
           (C12922 * C1355 - (C11618 * C1215 + C11464 * C1354) +
            C13040 * C1216 - (C9186 * C15891 + C27516 * C15893) * C1356 -
            (C9186 * C15965 + C27516 * C15966) * C1217) *
               C27517 * C17724) *
              C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eeyx[37] +=
        (-std::pow(Pi, 2.5) * ((((C233 * C89 + C27517 * C234) * C4016 +
                                 (C233 * C96 + C27517 * C239) * C27275) *
                                    C17723 +
                                (C18726 * C4016 + C18727 * C27275) * C17724) *
                                   C27516 * C27314 * C4012 -
                               ((C20204 * C27275 + C20205 * C4016) * C17724 +
                                ((C233 * C607 + C27517 * C805) * C27275 +
                                 (C233 * C600 + C27517 * C800) * C4016) *
                                    C17723) *
                                   C27516 * C27314 * C4013 +
                               (((C233 * C601 + C27517 * C802) * C4016 +
                                 (C233 * C612 + C27517 * C808) * C27275) *
                                    C17723 +
                                ((C233 * C5932 + C27517 * C6098) * C4016 +
                                 (C233 * C5934 + C27517 * C6100) * C27275) *
                                    C17724) *
                                   C27516 * C27314 * C4014 -
                               (((C233 * C14490 + C27517 * C14666) * C27275 +
                                 (C233 * C14489 + C27517 * C14665) * C4016) *
                                    C17724 +
                                ((C233 * C4020 + C27517 * C4142) * C27275 +
                                 (C233 * C4018 + C27517 * C4140) * C4016) *
                                    C17723) *
                                   C27516 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3556 +
            (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 - C258 * C3552 +
            C259 * C3558 + C260 * C3553) *
               C17723 +
           (C18726 * C3556 + C18727 * C3551 - C1440 * C3557 - C1441 * C3552 +
            C2524 * C3558 + C2525 * C3553) *
               C17724) *
              C27516 * C27314 * C3554 +
          ((C820 * C3557 -
            ((C233 * C607 + C27517 * C805) * C3551 +
             (C233 * C600 + C27517 * C800) * C3556) +
            C821 * C3552 - C2010 * C3558 - C2011 * C3553) *
               C17723 +
           (C3118 * C3557 - (C20204 * C3551 + C20205 * C3556) + C3119 * C3552 -
            (C233 * C2887 + C27517 * C3109) * C3558 -
            (C233 * C2893 + C27517 * C3112) * C3553) *
               C17724) *
              C27516 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C4016 +
             (C233 * C96 + C27517 * C239) * C27275) *
                C17723 +
            (C21516 + C21517) * C17724) *
               C27516 * C1215 -
           ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) * C27516 *
               C1216 +
           ((C21519 + C21518) * C17723 +
            ((C233 * C7322 + C27517 * C7444) * C4016 +
             (C233 * C7324 + C27517 * C7446) * C27275) *
                C17724) *
               C27516 * C1217) *
              C3554 +
          (((C21520 + C21521) * C17723 + (C21528 + C21529) * C17724) * C27516 *
               C1216 -
           ((C21521 + C21520) * C17724 +
            ((C233 * C607 + C27517 * C805) * C27275 +
             (C233 * C600 + C27517 * C800) * C4016) *
                C17723) *
               C27516 * C1215 -
           (((C233 * C15892 + C27517 * C16002) * C27275 +
             (C233 * C15891 + C27517 * C16001) * C4016) *
                C17724 +
            (C21529 + C21528) * C17723) *
               C27516 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[37] += (-std::pow(Pi, 2.5) *
                   (((C233 * C89 + C27517 * C234) * C4059 +
                     (C233 * C144 + C27517 * C296) * C4012 -
                     (C233 * C600 + C27517 * C800) * C4060 -
                     (C233 * C676 + C27517 * C873) * C4013 +
                     (C233 * C601 + C27517 * C802) * C4061 +
                     (C233 * C677 + C27517 * C874) * C4014 -
                     (C233 * C4018 + C27517 * C4140) * C4062 -
                     (C233 * C4064 + C27517 * C4177) * C4015) *
                        C17723 +
                    (C18726 * C4059 + C18790 * C4012 - C20205 * C4060 -
                     C20279 * C4013 + (C233 * C5932 + C27517 * C6098) * C4061 +
                     (C233 * C5990 + C27517 * C6151) * C4014 -
                     (C233 * C14489 + C27517 * C14665) * C4062 -
                     (C233 * C14551 + C27517 * C14717) * C4015) *
                        C17724) *
                   C27516 * C27275 * C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3609 +
                      (C233 * C144 + C27517 * C296) * C3554 -
                      (C233 * C600 + C27517 * C800) * C3610 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C17723 +
                     (C18726 * C3609 + C18790 * C3554 - C20205 * C3610 -
                      C20279 * C27352) *
                         C17724) *
                        C27516 * C3551 +
                    ((C3764 - (C3763 + C3762) + C3765) * C17723 +
                     (C5610 - (C5611 + C5612) + C5613) * C17724) *
                        C27516 * C3552 +
                    ((C3768 + C3767 - C3766 - C3769) * C17723 +
                     (C2524 * C3609 + C2580 * C3554 -
                      (C233 * C2887 + C27517 * C3109) * C3610 -
                      (C233 * C2965 + C27517 * C3187) * C27352) *
                         C17724) *
                        C27516 * C3553) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3609 +
                      (C233 * C144 + C27517 * C296) * C3554 -
                      (C233 * C600 + C27517 * C800) * C3610 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C17723 +
                     (C21580 + C21581 - C21582 - C21583) * C17724) *
                        C27516 * C27275 * C1215 +
                    ((C21582 - (C21581 + C21580) + C21583) * C17723 +
                     (C21584 - (C21585 + C21586) + C21590) * C17724) *
                        C27516 * C27275 * C1216 +
                    ((C21586 + C21585 - C21584 - C21590) * C17723 +
                     ((C233 * C7322 + C27517 * C7444) * C3609 +
                      (C233 * C7364 + C27517 * C7482) * C3554 -
                      (C233 * C15891 + C27517 * C16001) * C3610 -
                      (C233 * C15929 + C27517 * C16037) * C27352) *
                         C17724) *
                        C27516 * C27275 * C1217)) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[37] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C17723 +
           (C18726 * C188 + C18848 * C27314) * C17724) *
              C27516 * C4012 -
          ((C20349 * C27314 + C20205 * C188) * C17724 +
           ((C233 * C738 + C27517 * C942) * C27314 +
            (C233 * C600 + C27517 * C800) * C188) *
               C17723) *
              C27516 * C4013 +
          (((C233 * C601 + C27517 * C802) * C188 +
            (C233 * C739 + C27517 * C943) * C27314) *
               C17723 +
           ((C233 * C5932 + C27517 * C6098) * C188 +
            (C233 * C6044 + C27517 * C6203) * C27314) *
               C17724) *
              C27516 * C4014 -
          (((C233 * C14606 + C27517 * C14768) * C27314 +
            (C233 * C14489 + C27517 * C14665) * C188) *
               C17724 +
           ((C233 * C4102 + C27517 * C4214) * C27314 +
            (C233 * C4018 + C27517 * C4140) * C188) *
               C17723) *
              C27516 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            (C18726 * C188 + C18848 * C27314) * C17724) *
               C27516 * C3554 -
           ((C20349 * C27314 + C20205 * C188) * C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C27352) *
              C3551 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C27352 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C3554) *
              C3552 +
          (((C361 + C369) * C17723 + (C2524 * C188 + C2642 * C27314) * C17724) *
               C27516 * C3554 -
           (((C233 * C3037 + C27517 * C3263) * C27314 +
             (C233 * C2887 + C27517 * C3109) * C188) *
                C17724 +
            (C2129 + C2125) * C17723) *
               C27516 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C1354 +
            (C233 * C189 + C27517 * C350) * C1215 - C18726 * C1355 -
            C18848 * C1216 + C18729 * C1356 + C18849 * C1217) *
               C17723 +
           (C18726 * C1354 + C18848 * C1215 - C18729 * C1355 - C18849 * C1216 +
            (C233 * C7322 + C27517 * C7444) * C1356 +
            (C233 * C7406 + C27517 * C7517) * C1217) *
               C17724) *
              C27516 * C3554 +
          ((C20205 * C1355 -
            ((C233 * C738 + C27517 * C942) * C1215 +
             (C233 * C600 + C27517 * C800) * C1354) +
            C20349 * C1216 - C21526 * C1356 - C21643 * C1217) *
               C17723 +
           (C21526 * C1355 - (C20349 * C1215 + C20205 * C1354) +
            C21643 * C1216 - (C233 * C15891 + C27517 * C16001) * C1356 -
            (C233 * C15965 + C27517 * C16072) * C1217) *
               C17724) *
              C27516 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[37] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C4016 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27275) *
              C27516 * C27517 * C27314 * C4012 -
          ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
               C27275 +
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C4016) *
              C27516 * C27517 * C27314 * C4013 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C4016 +
           (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
               C27275) *
              C27516 * C27517 * C27314 * C4014 -
          ((C17930 * C14490 + C17724 * C14820 + C17929 * C4020 +
            C17723 * C4252) *
               C27275 +
           (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
            C17723 * C4250) *
               C4016) *
              C27516 * C27517 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3556 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C3551 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C3557 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C3552 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3558 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C3553) *
              C27516 * C27517 * C27314 * C3554 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C3557 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C3551 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C3556) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C3552 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C3558 -
           (C17930 * C2893 + C17724 * C3342 + C17929 * C609 + C17723 * C1015) *
               C3553) *
              C27516 * C27517 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C4016 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27275) *
               C27516 * C27517 * C1215 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27275 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4016) *
               C27516 * C27517 * C1216 +
           ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 +
             C17724 * C7554) *
                C4016 +
            (C17929 * C1232 + C17723 * C1636 + C17930 * C7324 +
             C17724 * C7556) *
                C27275) *
               C27516 * C27517 * C1217) *
              C3554 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C4016 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27275) *
               C27516 * C27517 * C1216 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27275 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C4016) *
               C27516 * C27517 * C1215 -
           ((C17930 * C15892 + C17724 * C16108 + C17929 * C4378 +
             C17723 * C4702) *
                C27275 +
            (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
             C17723 * C4700) *
                C4016) *
               C27516 * C27517 * C1217) *
              C27352)) /
            (p * q * std::sqrt(p + q));
    d2eezy[37] +=
        (-std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
              C4059 +
          (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
              C4012 -
          (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
              C4060 -
          (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
              C4013 +
          (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
              C4061 +
          (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
              C4014 -
          (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
           C17723 * C4250) *
              C4062 -
          (C17930 * C14551 + C17724 * C14879 + C17929 * C4064 +
           C17723 * C4287) *
              C4015) *
         C27516 * C27517 * C27275 * C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3609 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C3554 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C3610 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27352) *
              C27516 * C27517 * C3551 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C3610 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C3554 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C3609) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C27352) *
              C27516 * C27517 * C3552 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3609 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
               C3554 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C3610 -
           (C17930 * C2965 + C17724 * C3417 + C17929 * C679 + C17723 * C1085) *
               C27352) *
              C27516 * C27517 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3609 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C3554 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C3610 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27352) *
              C27516 * C27517 * C27275 * C1215 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C3610 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C3554 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C3609) +
           (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 + C17724 * C4753) *
               C27352) *
              C27516 * C27517 * C27275 * C1216 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C3609 +
           (C17929 * C1295 + C17723 * C1704 + C17930 * C7364 + C17724 * C7592) *
               C3554 -
           (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
            C17723 * C4700) *
               C3610 -
           (C17930 * C15929 + C17724 * C16143 + C17929 * C4434 +
            C17723 * C4753) *
               C27352) *
              C27516 * C27517 * C27275 * C1217)) /
            (p * q * std::sqrt(p + q));
    d2eezz[37] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27314) *
              C27516 * C27517 * C4012 -
          ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
               C27314 +
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C188) *
              C27516 * C27517 * C4013 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C188 +
           (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
               C27314) *
              C27516 * C27517 * C4014 -
          ((C17930 * C14606 + C17724 * C14933 + C17929 * C4102 +
            C17723 * C4324) *
               C27314 +
           (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
            C17723 * C4250) *
               C188) *
              C27516 * C27517 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C3554 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C27352) *
              C3551 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C27352 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C3554) *
              C3552 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
                C27314) *
               C27516 * C27517 * C3554 -
           ((C17930 * C3037 + C17724 * C3493 + C17929 * C741 + C17723 * C1153) *
                C27314 +
            (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
                C188) *
               C27516 * C27517 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1354 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C1215 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C1355 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C1216 +
           (C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C1356 +
           (C17929 * C1359 + C17723 * C1768 + C17930 * C7406 + C17724 * C7627) *
               C1217) *
              C27516 * C27517 * C3554 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C1355 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C1215 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C1354) +
           (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 + C17724 * C4805) *
               C1216 -
           (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
            C17723 * C4700) *
               C1356 -
           (C17930 * C15965 + C17724 * C16178 + C17929 * C4488 +
            C17723 * C4805) *
               C1217) *
              C27516 * C27517 * C27352) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C26163 +
                       (C9186 * C96 + C27516 * C104) * C27471 -
                       (C9186 * C90 + C27516 * C95) * C26156 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C27517 * C17723 +
                      (C22310 + C22311 - C22312 - C22313) * C27517 * C17724) *
                         C27482 +
                     ((C22312 - (C22311 + C22310) + C22313) * C27517 * C17723 +
                      (C18520 * C26156 - (C18521 * C27471 + C18522 * C26163) +
                       C18523 * C27280) *
                          C27517 * C17724) *
                         C27378) *
                        C3554 +
                    (((C13424 - (C13423 + C13422) + C13425) * C27517 * C17723 +
                      (C13904 - (C13905 + C13906) + C13907) * C27517 * C17724) *
                         C27482 +
                     ((C13906 + C13905 - C13904 - C13907) * C27517 * C17723 +
                      (C12922 * C26163 + C12923 * C27471 -
                       (C9186 * C4375 + C27516 * C4379) * C26156 -
                       (C9186 * C4377 + C27516 * C4381) * C27280) *
                          C27517 * C17724) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C3609 +
                       (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
                       C9602 * C27352) *
                          C27517 * C17723 +
                      (C21408 + C21409 - C21410 - C21411) * C27517 * C17724) *
                         C27471 +
                     ((C9530 * C3610 -
                       ((C9186 * C145 + C27516 * C150) * C3554 +
                        (C9186 * C90 + C27516 * C95) * C3609) +
                       C9604 * C27352) *
                          C27517 * C17723 +
                      (C22380 - (C22381 + C22382) + C22383) * C27517 * C17724) *
                         C27280) *
                        C27482 +
                    (((C21410 - (C21409 + C21408) + C21411) * C27517 * C17723 +
                      (C21412 - (C21413 + C21414) + C21415) * C27517 * C17724) *
                         C27471 +
                     ((C22382 + C22381 - C22380 - C22383) * C27517 * C17723 +
                      (C18520 * C3609 + C18596 * C3554 -
                       (C9186 * C4375 + C27516 * C4379) * C3610 -
                       (C9186 * C4433 + C27516 * C4435) * C27352) *
                          C27517 * C17724) *
                         C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C2463 +
                       (C9186 * C189 + C27516 * C194) * C27482 -
                       C18516 * C2464 - C18660 * C27378) *
                          C27517 * C17723 +
                      (C18516 * C2463 + C18660 * C27482 - C18522 * C2464 -
                       C18661 * C27378) *
                          C27517 * C17724) *
                         C3554 +
                     ((C11610 - (C11609 + C11608) + C11620) * C27517 * C17723 +
                      (C12922 * C2464 - (C11618 * C27482 + C11464 * C2463) +
                       C13040 * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C27471 +
                    (((C18518 * C2464 -
                       ((C9186 * C190 + C27516 * C195) * C27482 +
                        (C9186 * C90 + C27516 * C95) * C2463) +
                       C18662 * C27378) *
                          C27517 * C17723 +
                      (C18520 * C2464 - (C18662 * C27482 + C18518 * C2463) +
                       C18663 * C27378) *
                          C27517 * C17724) *
                         C3554 +
                     ((C11615 + C11614 - C11613 - C11621) * C27517 * C17723 +
                      (C11462 * C2463 + C11619 * C27482 -
                       (C9186 * C4375 + C27516 * C4379) * C2464 -
                       (C9186 * C4487 + C27516 * C4489) * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C26163 +
                       (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
                       C258 * C27280) *
                          C17723 +
                      (C22516 + C22517 - C22518 - C22519) * C17724) *
                         C27516 * C27482 +
                     ((C22518 - (C22517 + C22516) + C22519) * C17723 +
                      (C1442 * C26156 - (C18728 * C27471 + C18729 * C26163) +
                       C1443 * C27280) *
                          C17724) *
                         C27516 * C27378) *
                        C3554 +
                    (((C820 * C26156 -
                       ((C233 * C607 + C27517 * C805) * C27471 +
                        (C233 * C600 + C27517 * C800) * C26163) +
                       C821 * C27280) *
                          C17723 +
                      (C22520 - (C22521 + C22522) + C22523) * C17724) *
                         C27516 * C27482 +
                     ((C22522 + C22521 - C22520 - C22523) * C17723 +
                      (C21526 * C26163 + C21527 * C27471 -
                       (C233 * C4375 + C27517 * C4541) * C26156 -
                       (C233 * C4377 + C27517 * C4543) * C27280) *
                          C17724) *
                         C27516 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C3609 +
                       (C233 * C144 + C27517 * C296) * C3554 -
                       (C233 * C600 + C27517 * C800) * C3610 -
                       (C233 * C676 + C27517 * C873) * C27352) *
                          C17723 +
                      (C21580 + C21581 - C21582 - C21583) * C17724) *
                         C27516 * C27471 +
                     ((C3764 - (C3763 + C3762) + C3765) * C17723 +
                      (C5610 - (C5611 + C5612) + C5613) * C17724) *
                         C27516 * C27280) *
                        C27482 +
                    (((C21582 - (C21581 + C21580) + C21583) * C17723 +
                      (C21584 - (C21585 + C21586) + C21590) * C17724) *
                         C27516 * C27471 +
                     ((C5612 + C5611 - C5610 - C5613) * C17723 +
                      (C1442 * C3609 + C1507 * C3554 -
                       (C233 * C4375 + C27517 * C4541) * C3610 -
                       (C233 * C4433 + C27517 * C4596) * C27352) *
                          C17724) *
                         C27516 * C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[38] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C2463 +
                       (C233 * C189 + C27517 * C350) * C27482 - C18726 * C2464 -
                       C18848 * C27378) *
                          C17723 +
                      (C18726 * C2463 + C18848 * C27482 - C18729 * C2464 -
                       C18849 * C27378) *
                          C17724) *
                         C27516 * C3554 +
                     ((C20205 * C2464 -
                       ((C233 * C738 + C27517 * C942) * C27482 +
                        (C233 * C600 + C27517 * C800) * C2463) +
                       C20349 * C27378) *
                          C17723 +
                      (C21526 * C2464 - (C20349 * C27482 + C20205 * C2463) +
                       C21643 * C27378) *
                          C17724) *
                         C27516 * C27352) *
                        C27471 +
                    (((C2635 - (C2634 + C2633) + C2636) * C17723 +
                      (C1442 * C2464 - (C1574 * C27482 + C1440 * C2463) +
                       C1575 * C27378) *
                          C17724) *
                         C27516 * C3554 +
                     ((C3267 + C3266 - C3265 - C3271) * C17723 +
                      (C3118 * C2463 + C3270 * C27482 -
                       (C233 * C4375 + C27517 * C4541) * C2464 -
                       (C233 * C4487 + C27517 * C4648) * C27378) *
                          C17724) *
                         C27516 * C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eezx[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C26163 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27471 -
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C26156 -
            (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
                C27280) *
               C27516 * C27517 * C27482 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C26156 -
            ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
              C17723 * C1633) *
                 C27471 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C26163) +
            (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 +
             C17724 * C1637) *
                C27280) *
               C27516 * C27517 * C27378) *
              C3554 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C26156 -
            ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 +
              C17723 * C1013) *
                 C27471 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C26163) +
            (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
                C27280) *
               C27516 * C27517 * C27482 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C26163 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27471 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C26156 -
            (C17930 * C4377 + C17724 * C4701 + C17929 * C2891 +
             C17723 * C3341) *
                C27280) *
               C27516 * C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C3609 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C3554 -
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C3610 -
            (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
                C27352) *
               C27516 * C27517 * C27471 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C3610 -
            ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                 C3554 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C3609) +
            (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C27482 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C3610 -
            ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
              C17723 * C1703) *
                 C3554 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C3609) +
            (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 +
             C17724 * C4753) *
                C27352) *
               C27516 * C27517 * C27471 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C3609 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C3554 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C3610 -
            (C17930 * C4433 + C17724 * C4754 + C17929 * C2964 +
             C17723 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[38] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C2463 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27482 -
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C2464 -
            (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 +
             C17723 * C1767) *
                C27378) *
               C27516 * C27517 * C3554 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C2464 -
            ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 +
              C17723 * C1150) *
                 C27482 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C2463) +
            (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 +
             C17724 * C4805) *
                C27378) *
               C27516 * C27517 * C27352) *
              C27471 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C2464 -
            ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                 C27482 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C2463) +
            (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 +
             C17724 * C1770) *
                C27378) *
               C27516 * C27517 * C3554 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C2463 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27482 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C2464 -
            (C17930 * C4487 + C17724 * C4806 + C17929 * C3036 +
             C17723 * C3492) *
                C27378) *
               C27516 * C27517 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C27517 * C17723 +
           (C18516 * C3556 + C18517 * C3551 - C18518 * C3557 - C18519 * C3552 +
            C19508 * C3558 + C19509 * C3553) *
               C27517 * C17724) *
              C27314 * C3554 +
          ((C12090 - (C12089 + C12088) + C12091 - C12092 - C12093) * C27517 *
               C17723 +
           (C11462 * C3557 - (C11463 * C3551 + C11464 * C3556) +
            C11465 * C3552 - (C9186 * C2887 + C27516 * C2892) * C3558 -
            (C9186 * C2893 + C27516 * C2896) * C3553) *
               C27517 * C17724) *
              C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C27517 * C17723 +
           (C18516 * C4016 + C18517 * C27275) * C27517 * C17724) *
              C27314 * C4012 -
          ((C12916 + C12917) * C27517 * C17724 +
           (C12539 + C12538) * C27517 * C17723) *
              C27314 * C4013 +
          ((C12541 + C12540) * C27517 * C17723 +
           (C14500 + C14501) * C27517 * C17724) *
              C27314 * C4014 -
          (((C9186 * C14490 + C27516 * C14492) * C27275 +
            (C9186 * C14489 + C27516 * C14491) * C4016) *
               C27517 * C17724 +
           (C12549 + C12548) * C27517 * C17723) *
              C27314 * C4015)) /
            (p * q * std::sqrt(p + q));
    d2eexy[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C3609 +
                      (C9186 * C144 + C27516 * C149) * C3554 - C9528 * C3610 -
                      C9602 * C27352) *
                         C27517 * C17723 +
                     (C18516 * C3609 + C18594 * C3554 - C11464 * C3610 -
                      C11540 * C27352) *
                         C27517 * C17724) *
                        C3551 +
                    ((C9530 * C3610 -
                      ((C9186 * C145 + C27516 * C150) * C3554 +
                       (C9186 * C90 + C27516 * C95) * C3609) +
                      C9604 * C27352) *
                         C27517 * C17723 +
                     (C11462 * C3610 - (C18595 * C3554 + C18518 * C3609) +
                      C11541 * C27352) *
                         C27517 * C17724) *
                        C3552 +
                    (((C9186 * C91 + C27516 * C98) * C3609 +
                      (C9186 * C146 + C27516 * C151) * C3554 - C10520 * C3610 -
                      C10576 * C27352) *
                         C27517 * C17723 +
                     (C19508 * C3609 + C19565 * C3554 -
                      (C9186 * C2887 + C27516 * C2892) * C3610 -
                      (C9186 * C2965 + C27516 * C2968) * C27352) *
                         C27517 * C17724) *
                        C3553) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C4059 +
                     (C9186 * C144 + C27516 * C149) * C4012 - C9528 * C4060 -
                     C9602 * C4013 + C9534 * C4061 + C9603 * C4014 -
                     C12546 * C4062 - C12588 * C4015) *
                        C27517 * C17723 +
                    (C18516 * C4059 + C18594 * C4012 - C11464 * C4060 -
                     C11540 * C4013 + C14498 * C4061 + C14556 * C4014 -
                     (C9186 * C14489 + C27516 * C14491) * C4062 -
                     (C9186 * C14551 + C27516 * C14552) * C4015) *
                        C27517 * C17724) *
                   C27275 * C27314) /
                      (p * q * std::sqrt(p + q));
    d2eexz[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C188 +
                       (C9186 * C189 + C27516 * C194) * C27314) *
                          C27517 * C17723 +
                      (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
                         C3554 -
                     ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
                      (C9672 + C9656) * C27517 * C17723) *
                         C27352) *
                        C3551 +
                    (((C9662 + C9674) * C27517 * C17723 +
                      (C11462 * C188 + C11619 * C27314) * C27517 * C17724) *
                         C27352 -
                     ((C18662 * C27314 + C18518 * C188) * C27517 * C17724 +
                      ((C9186 * C190 + C27516 * C195) * C27314 +
                       (C9186 * C90 + C27516 * C95) * C188) *
                          C27517 * C17723) *
                         C3554) *
                        C3552 +
                    ((((C9186 * C91 + C27516 * C98) * C188 +
                       (C9186 * C191 + C27516 * C196) * C27314) *
                          C27517 * C17723 +
                      (C19508 * C188 + C19619 * C27314) * C27517 * C17724) *
                         C3554 -
                     (((C9186 * C3037 + C27516 * C3040) * C27314 +
                       (C9186 * C2887 + C27516 * C2892) * C188) *
                          C27517 * C17724 +
                      (C10631 + C10627) * C27517 * C17723) *
                         C27352) *
                        C3553)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C188 +
                      (C9186 * C189 + C27516 * C194) * C27314) *
                         C27517 * C17723 +
                     (C18516 * C188 + C18660 * C27314) * C27517 * C17724) *
                        C4012 -
                    ((C11618 * C27314 + C11464 * C188) * C27517 * C17724 +
                     (C9672 + C9656) * C27517 * C17723) *
                        C4013 +
                    ((C9661 + C9673) * C27517 * C17723 +
                     (C14498 * C188 + C14614 * C27314) * C27517 * C17724) *
                        C4014 -
                    (((C9186 * C14606 + C27516 * C14607) * C27314 +
                      (C9186 * C14489 + C27516 * C14491) * C188) *
                         C27517 * C17724 +
                     (C12629 + C12625) * C27517 * C17723) *
                        C4015) *
                   C27275) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3556 +
                      (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 -
                      C258 * C3552 + C259 * C3558 + C260 * C3553) *
                         C17723 +
                     (C18726 * C3556 + C18727 * C3551 - C1440 * C3557 -
                      C1441 * C3552 + C2524 * C3558 + C2525 * C3553) *
                         C17724) *
                        C27516 * C27314 * C3554 +
                    ((C820 * C3557 -
                      ((C233 * C607 + C27517 * C805) * C3551 +
                       (C233 * C600 + C27517 * C800) * C3556) +
                      C821 * C3552 - C2010 * C3558 - C2011 * C3553) *
                         C17723 +
                     (C3118 * C3557 - (C20204 * C3551 + C20205 * C3556) +
                      C3119 * C3552 - (C233 * C2887 + C27517 * C3109) * C3558 -
                      (C233 * C2893 + C27517 * C3112) * C3553) *
                         C17724) *
                        C27516 * C27314 * C27352)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C4016 +
                      (C233 * C96 + C27517 * C239) * C27275) *
                         C17723 +
                     (C18726 * C4016 + C18727 * C27275) * C17724) *
                        C27516 * C27314 * C4012 -
                    ((C20204 * C27275 + C20205 * C4016) * C17724 +
                     ((C233 * C607 + C27517 * C805) * C27275 +
                      (C233 * C600 + C27517 * C800) * C4016) *
                         C17723) *
                        C27516 * C27314 * C4013 +
                    (((C233 * C601 + C27517 * C802) * C4016 +
                      (C233 * C612 + C27517 * C808) * C27275) *
                         C17723 +
                     ((C233 * C5932 + C27517 * C6098) * C4016 +
                      (C233 * C5934 + C27517 * C6100) * C27275) *
                         C17724) *
                        C27516 * C27314 * C4014 -
                    (((C233 * C14490 + C27517 * C14666) * C27275 +
                      (C233 * C14489 + C27517 * C14665) * C4016) *
                         C17724 +
                     ((C233 * C4020 + C27517 * C4142) * C27275 +
                      (C233 * C4018 + C27517 * C4140) * C4016) *
                         C17723) *
                        C27516 * C27314 * C4015)) /
                      (p * q * std::sqrt(p + q));
    d2eeyy[39] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C3609 +
                      (C233 * C144 + C27517 * C296) * C3554 -
                      (C233 * C600 + C27517 * C800) * C3610 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C17723 +
                     (C18726 * C3609 + C18790 * C3554 - C20205 * C3610 -
                      C20279 * C27352) *
                         C17724) *
                        C27516 * C3551 +
                    ((C3764 - (C3763 + C3762) + C3765) * C17723 +
                     (C5610 - (C5611 + C5612) + C5613) * C17724) *
                        C27516 * C3552 +
                    ((C3768 + C3767 - C3766 - C3769) * C17723 +
                     (C2524 * C3609 + C2580 * C3554 -
                      (C233 * C2887 + C27517 * C3109) * C3610 -
                      (C233 * C2965 + C27517 * C3187) * C27352) *
                         C17724) *
                        C27516 * C3553) *
                   C27314) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   (((C233 * C89 + C27517 * C234) * C4059 +
                     (C233 * C144 + C27517 * C296) * C4012 -
                     (C233 * C600 + C27517 * C800) * C4060 -
                     (C233 * C676 + C27517 * C873) * C4013 +
                     (C233 * C601 + C27517 * C802) * C4061 +
                     (C233 * C677 + C27517 * C874) * C4014 -
                     (C233 * C4018 + C27517 * C4140) * C4062 -
                     (C233 * C4064 + C27517 * C4177) * C4015) *
                        C17723 +
                    (C18726 * C4059 + C18790 * C4012 - C20205 * C4060 -
                     C20279 * C4013 + (C233 * C5932 + C27517 * C6098) * C4061 +
                     (C233 * C5990 + C27517 * C6151) * C4014 -
                     (C233 * C14489 + C27517 * C14665) * C4062 -
                     (C233 * C14551 + C27517 * C14717) * C4015) *
                        C17724) *
                   C27516 * C27275 * C27314) /
                      (p * q * std::sqrt(p + q));
    d2eeyz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C188 +
             (C233 * C189 + C27517 * C350) * C27314) *
                C17723 +
            (C18726 * C188 + C18848 * C27314) * C17724) *
               C27516 * C3554 -
           ((C20349 * C27314 + C20205 * C188) * C17724 +
            ((C233 * C738 + C27517 * C942) * C27314 +
             (C233 * C600 + C27517 * C800) * C188) *
                C17723) *
               C27516 * C27352) *
              C3551 +
          (((C950 + C956) * C17723 + (C3118 * C188 + C3270 * C27314) * C17724) *
               C27516 * C27352 -
           ((C1574 * C27314 + C1440 * C188) * C17724 + (C368 + C356) * C17723) *
               C27516 * C3554) *
              C3552 +
          (((C361 + C369) * C17723 + (C2524 * C188 + C2642 * C27314) * C17724) *
               C27516 * C3554 -
           (((C233 * C3037 + C27517 * C3263) * C27314 +
             (C233 * C2887 + C27517 * C3109) * C188) *
                C17724 +
            (C2129 + C2125) * C17723) *
               C27516 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C188 +
            (C233 * C189 + C27517 * C350) * C27314) *
               C17723 +
           (C18726 * C188 + C18848 * C27314) * C17724) *
              C27516 * C4012 -
          ((C20349 * C27314 + C20205 * C188) * C17724 +
           ((C233 * C738 + C27517 * C942) * C27314 +
            (C233 * C600 + C27517 * C800) * C188) *
               C17723) *
              C27516 * C4013 +
          (((C233 * C601 + C27517 * C802) * C188 +
            (C233 * C739 + C27517 * C943) * C27314) *
               C17723 +
           ((C233 * C5932 + C27517 * C6098) * C188 +
            (C233 * C6044 + C27517 * C6203) * C27314) *
               C17724) *
              C27516 * C4014 -
          (((C233 * C14606 + C27517 * C14768) * C27314 +
            (C233 * C14489 + C27517 * C14665) * C188) *
               C17724 +
           ((C233 * C4102 + C27517 * C4214) * C27314 +
            (C233 * C4018 + C27517 * C4140) * C188) *
               C17723) *
              C27516 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3556 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C3551 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C3557 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C3552 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3558 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C3553) *
              C27516 * C27517 * C27314 * C3554 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C3557 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C3551 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C3556) +
           (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
               C3552 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C3558 -
           (C17930 * C2893 + C17724 * C3342 + C17929 * C609 + C17723 * C1015) *
               C3553) *
              C27516 * C27517 * C27314 * C27352)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C4016 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27275) *
              C27516 * C27517 * C27314 * C4012 -
          ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
               C27275 +
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C4016) *
              C27516 * C27517 * C27314 * C4013 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C4016 +
           (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
               C27275) *
              C27516 * C27517 * C27314 * C4014 -
          ((C17930 * C14490 + C17724 * C14820 + C17929 * C4020 +
            C17723 * C4252) *
               C27275 +
           (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
            C17723 * C4250) *
               C4016) *
              C27516 * C27517 * C27314 * C4015)) /
            (p * q * std::sqrt(p + q));
    d2eezy[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3609 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C3554 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C3610 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27352) *
              C27516 * C27517 * C3551 +
          ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
               C3610 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C3554 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C3609) +
           (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
               C27352) *
              C27516 * C27517 * C3552 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3609 +
           (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
               C3554 -
           (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
               C3610 -
           (C17930 * C2965 + C17724 * C3417 + C17929 * C679 + C17723 * C1085) *
               C27352) *
              C27516 * C27517 * C3553) *
         C27314) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
              C4059 +
          (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
              C4012 -
          (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
              C4060 -
          (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
              C4013 +
          (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
              C4061 +
          (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
              C4014 -
          (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
           C17723 * C4250) *
              C4062 -
          (C17930 * C14551 + C17724 * C14879 + C17929 * C4064 +
           C17723 * C4287) *
              C4015) *
         C27516 * C27517 * C27275 * C27314) /
            (p * q * std::sqrt(p + q));
    d2eezz[39] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C188 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C27314) *
               C27516 * C27517 * C3554 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27314 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C188) *
               C27516 * C27517 * C27352) *
              C3551 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C188 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C27314) *
               C27516 * C27517 * C27352 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27314 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C188) *
               C27516 * C27517 * C3554) *
              C3552 +
          (((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C188 +
            (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
                C27314) *
               C27516 * C27517 * C3554 -
           ((C17930 * C3037 + C17724 * C3493 + C17929 * C741 + C17723 * C1153) *
                C27314 +
            (C17930 * C2887 + C17724 * C3339 + C17929 * C599 + C17723 * C1009) *
                C188) *
               C27516 * C27517 * C27352) *
              C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C188 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27314) *
              C27516 * C27517 * C4012 -
          ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
               C27314 +
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C188) *
              C27516 * C27517 * C4013 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C188 +
           (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
               C27314) *
              C27516 * C27517 * C4014 -
          ((C17930 * C14606 + C17724 * C14933 + C17929 * C4102 +
            C17723 * C4324) *
               C27314 +
           (C17930 * C14489 + C17724 * C14819 + C17929 * C4018 +
            C17723 * C4250) *
               C188) *
              C27516 * C27517 * C4015) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C26163 +
                       (C9186 * C96 + C27516 * C104) * C27471 -
                       (C9186 * C90 + C27516 * C95) * C26156 -
                       (C9186 * C97 + C27516 * C105) * C27280) *
                          C27517 * C17723 +
                      (C22310 + C22311 - C22312 - C22313) * C27517 * C17724) *
                         C6413 +
                     ((C22312 - (C22311 + C22310) + C22313) * C27517 * C17723 +
                      (C18520 * C26156 - (C18521 * C27471 + C18522 * C26163) +
                       C18523 * C27280) *
                          C27517 * C17724) *
                         C27378) *
                        C27481 +
                    (((C13424 - (C13423 + C13422) + C13425) * C27517 * C17723 +
                      (C13904 - (C13905 + C13906) + C13907) * C27517 * C17724) *
                         C6413 +
                     ((C13906 + C13905 - C13904 - C13907) * C27517 * C17723 +
                      (C12922 * C26163 + C12923 * C27471 -
                       (C9186 * C4375 + C27516 * C4379) * C26156 -
                       (C9186 * C4377 + C27516 * C4381) * C27280) *
                          C27517 * C17724) *
                         C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C1897 +
                       (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
                       C9602 * C27352) *
                          C27517 * C17723 +
                      (C20058 + C20059 - C20060 - C20061) * C27517 * C17724) *
                         C27471 +
                     ((C9530 * C1898 -
                       ((C9186 * C145 + C27516 * C150) * C27481 +
                        (C9186 * C90 + C27516 * C95) * C1897) +
                       C9604 * C27352) *
                          C27517 * C17723 +
                      (C20062 - (C20063 + C20064) + C20065) * C27517 * C17724) *
                         C27280) *
                        C6413 +
                    (((C20060 - (C20059 + C20058) + C20061) * C27517 * C17723 +
                      (C12922 * C1898 - (C18597 * C27481 + C18522 * C1897) +
                       C12980 * C27352) *
                          C27517 * C17724) *
                         C27471 +
                     ((C20064 + C20063 - C20062 - C20065) * C27517 * C17723 +
                      (C18520 * C1897 + C18596 * C27481 -
                       (C9186 * C4375 + C27516 * C4379) * C1898 -
                       (C9186 * C4433 + C27516 * C4435) * C27352) *
                          C27517 * C17724) *
                         C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C6515 +
                       (C9186 * C189 + C27516 * C194) * C6413 - C18516 * C6516 -
                       C18660 * C27378) *
                          C27517 * C17723 +
                      (C18516 * C6515 + C18660 * C6413 - C18522 * C6516 -
                       C18661 * C27378) *
                          C27517 * C17724) *
                         C27481 +
                     ((C15544 - (C15543 + C15542) + C15545) * C27517 * C17723 +
                      (C12922 * C6516 - (C11618 * C6413 + C11464 * C6515) +
                       C13040 * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C27471 +
                    (((C18518 * C6516 -
                       ((C9186 * C190 + C27516 * C195) * C6413 +
                        (C9186 * C90 + C27516 * C95) * C6515) +
                       C18662 * C27378) *
                          C27517 * C17723 +
                      (C18520 * C6516 - (C18662 * C6413 + C18518 * C6515) +
                       C18663 * C27378) *
                          C27517 * C17724) *
                         C27481 +
                     ((C16380 + C16379 - C16378 - C16381) * C27517 * C17723 +
                      (C11462 * C6515 + C11619 * C6413 -
                       (C9186 * C4375 + C27516 * C4379) * C6516 -
                       (C9186 * C4487 + C27516 * C4489) * C27378) *
                          C27517 * C17724) *
                         C27352) *
                        C27280)) /
                  (p * q * std::sqrt(p + q));
    d2eeyx[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C26163 +
                       (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
                       C258 * C27280) *
                          C17723 +
                      (C22516 + C22517 - C22518 - C22519) * C17724) *
                         C27516 * C6413 +
                     ((C22518 - (C22517 + C22516) + C22519) * C17723 +
                      (C1442 * C26156 - (C18728 * C27471 + C18729 * C26163) +
                       C1443 * C27280) *
                          C17724) *
                         C27516 * C27378) *
                        C27481 +
                    (((C820 * C26156 -
                       ((C233 * C607 + C27517 * C805) * C27471 +
                        (C233 * C600 + C27517 * C800) * C26163) +
                       C821 * C27280) *
                          C17723 +
                      (C22520 - (C22521 + C22522) + C22523) * C17724) *
                         C27516 * C6413 +
                     ((C22522 + C22521 - C22520 - C22523) * C17723 +
                      (C21526 * C26163 + C21527 * C27471 -
                       (C233 * C4375 + C27517 * C4541) * C26156 -
                       (C233 * C4377 + C27517 * C4543) * C27280) *
                          C17724) *
                         C27516 * C27378) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[40] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C1897 +
                       (C233 * C144 + C27517 * C296) * C27481 -
                       (C233 * C600 + C27517 * C800) * C1898 -
                       (C233 * C676 + C27517 * C873) * C27352) *
                          C17723 +
                      (C20274 + C20275 - C20276 - C20280) * C17724) *
                         C27516 * C27471 +
                     ((C2065 - (C2064 + C2063) + C2066) * C17723 +
                      (C3189 - (C3190 + C3191) + C3195) * C17724) *
                         C27516 * C27280) *
                        C6413 +
                    (((C20276 - (C20275 + C20274) + C20280) * C17723 +
                      (C21526 * C1898 - (C18791 * C27481 + C18729 * C1897) +
                       C21589 * C27352) *
                          C17724) *
                         C27516 * C27471 +
                     ((C3191 + C3190 - C3189 - C3195) * C17723 +
                      (C1442 * C1897 + C1507 * C27481 -
                       (C233 * C4375 + C27517 * C4541) * C1898 -
                       (C233 * C4433 + C27517 * C4596) * C27352) *
                          C17724) *
                         C27516 * C27280) *
                        C27378)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C6515 +
             (C233 * C189 + C27517 * C350) * C6413 - C18726 * C6516 -
             C18848 * C27378) *
                C17723 +
            (C18726 * C6515 + C18848 * C6413 - C18729 * C6516 -
             C18849 * C27378) *
                C17724) *
               C27516 * C27481 +
           ((C20205 * C6516 -
             ((C233 * C738 + C27517 * C942) * C6413 +
              (C233 * C600 + C27517 * C800) * C6515) +
             C20349 * C27378) *
                C17723 +
            (C21526 * C6516 - (C20349 * C6413 + C20205 * C6515) +
             C21643 * C27378) *
                C17724) *
               C27516 * C27352) *
              C27471 +
          (((C6670 - (C6669 + C6668) + C6671) * C17723 +
            (C1442 * C6516 - (C1574 * C6413 + C1440 * C6515) + C1575 * C27378) *
                C17724) *
               C27516 * C27481 +
           ((C8028 + C8027 - C8026 - C8029) * C17723 +
            (C3118 * C6515 + C3270 * C6413 -
             (C233 * C4375 + C27517 * C4541) * C6516 -
             (C233 * C4487 + C27517 * C4648) * C27378) *
                C17724) *
               C27516 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C26163 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27471 -
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C26156 -
            (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
                C27280) *
               C27516 * C27517 * C6413 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C26156 -
            ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
              C17723 * C1633) *
                 C27471 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C26163) +
            (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 +
             C17724 * C1637) *
                C27280) *
               C27516 * C27517 * C27378) *
              C27481 +
          (((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C26156 -
            ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 +
              C17723 * C1013) *
                 C27471 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C26163) +
            (C17929 * C606 + C17723 * C1014 + C17930 * C2891 + C17724 * C3341) *
                C27280) *
               C27516 * C27517 * C6413 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C26163 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27471 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C26156 -
            (C17930 * C4377 + C17724 * C4701 + C17929 * C2891 +
             C17723 * C3341) *
                C27280) *
               C27516 * C27517 * C27378) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C1897 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27481 -
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C1898 -
            (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
                C27352) *
               C27516 * C27517 * C27471 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C1898 -
            ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                 C27481 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C1897) +
            (C17929 * C675 + C17723 * C1083 + C17930 * C2964 + C17724 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C6413 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C1898 -
            ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
              C17723 * C1703) *
                 C27481 +
             (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
              C17723 * C1628) *
                 C1897) +
            (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 +
             C17724 * C4753) *
                C27352) *
               C27516 * C27517 * C27471 +
           ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C1897 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27481 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C1898 -
            (C17930 * C4433 + C17724 * C4754 + C17929 * C2964 +
             C17723 * C3416) *
                C27352) *
               C27516 * C27517 * C27280) *
              C27378)) /
        (p * q * std::sqrt(p + q));
    d2eezz[40] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C6515 +
            (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
                C6413 -
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C6516 -
            (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 +
             C17723 * C1767) *
                C27378) *
               C27516 * C27517 * C27481 +
           ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C6516 -
            ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 +
              C17723 * C1150) *
                 C6413 +
             (C17930 * C2885 + C17724 * C3337 + C17929 * C600 +
              C17723 * C1008) *
                 C6515) +
            (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 +
             C17724 * C4805) *
                C27378) *
               C27516 * C27517 * C27352) *
              C27471 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C6516 -
            ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                 C6413 +
             (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                 C6515) +
            (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 +
             C17724 * C1770) *
                C27378) *
               C27516 * C27517 * C27481 +
           ((C17929 * C598 + C17723 * C1007 + C17930 * C2886 + C17724 * C3338) *
                C6515 +
            (C17929 * C737 + C17723 * C1149 + C17930 * C3036 + C17724 * C3492) *
                C6413 -
            (C17930 * C4375 + C17724 * C4699 + C17929 * C2886 +
             C17723 * C3338) *
                C6516 -
            (C17930 * C4487 + C17724 * C4806 + C17929 * C3036 +
             C17723 * C3492) *
                C27378) *
               C27516 * C27517 * C27352) *
              C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C4016 +
                       (C9186 * C96 + C27516 * C104) * C27275) *
                          C27517 * C17723 +
                      (C21354 + C21355) * C27517 * C17724) *
                         C27511 -
                     ((C21356 + C21357) * C27517 * C17724 +
                      (C21355 + C21354) * C27517 * C17723) *
                         C27512 +
                     ((C21357 + C21356) * C27517 * C17723 +
                      (C24298 + C24299) * C27517 * C17724) *
                         C8283) *
                        C27481 +
                    (((C12917 + C12916) * C27517 * C17723 +
                      (C12924 + C12925) * C27517 * C17724) *
                         C27512 -
                     ((C12916 + C12917) * C27517 * C17724 +
                      (C12539 + C12538) * C27517 * C17723) *
                         C27511 -
                     (((C9186 * C15892 + C27516 * C15894) * C27275 +
                       (C9186 * C15891 + C27516 * C15893) * C4016) *
                          C27517 * C17724 +
                      (C12925 + C12924) * C27517 * C17723) *
                         C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eexy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C1897 +
                      (C9186 * C144 + C27516 * C149) * C27481 - C9528 * C1898 -
                      C9602 * C27352) *
                         C27517 * C17723 +
                     (C20058 + C20059 - C20060 - C20061) * C27517 * C17724) *
                        C27275 * C27511 +
                    ((C20060 - (C20059 + C20058) + C20061) * C27517 * C17723 +
                     (C25760 - (C25761 + C25762) + C25763) * C27517 * C17724) *
                        C27275 * C27512 +
                    ((C25762 + C25761 - C25760 - C25763) * C27517 * C17723 +
                     (C24296 * C1897 + C24339 * C27481 -
                      (C9186 * C15891 + C27516 * C15893) * C1898 -
                      (C9186 * C15929 + C27516 * C15930) * C27352) *
                         C27517 * C17724) *
                        C27275 * C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C8384 +
            (C9186 * C189 + C27516 * C194) * C27511 - C18516 * C8385 -
            C18660 * C27512 + C18522 * C8386 + C18661 * C8283) *
               C27517 * C17723 +
           (C18516 * C8384 + C18660 * C27511 - C18522 * C8385 -
            C18661 * C27512 + C24296 * C8386 + C24379 * C8283) *
               C27517 * C17724) *
              C27481 +
          ((C17380 - (C17379 + C17378) + C17381 - C17382 - C17383) * C27517 *
               C17723 +
           (C12922 * C8385 - (C11618 * C27511 + C11464 * C8384) +
            C13040 * C27512 - (C9186 * C15891 + C27516 * C15893) * C8386 -
            (C9186 * C15965 + C27516 * C15966) * C8283) *
               C27517 * C17724) *
              C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eeyx[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C4016 +
                       (C233 * C96 + C27517 * C239) * C27275) *
                          C17723 +
                      (C21516 + C21517) * C17724) *
                         C27516 * C27511 -
                     ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) *
                         C27516 * C27512 +
                     ((C21519 + C21518) * C17723 + (C24422 + C24423) * C17724) *
                         C27516 * C8283) *
                        C27481 +
                    (((C21520 + C21521) * C17723 + (C21528 + C21529) * C17724) *
                         C27516 * C27512 -
                     ((C21521 + C21520) * C17724 +
                      ((C233 * C607 + C27517 * C805) * C27275 +
                       (C233 * C600 + C27517 * C800) * C4016) *
                          C17723) *
                         C27516 * C27511 -
                     (((C233 * C15892 + C27517 * C16002) * C27275 +
                       (C233 * C15891 + C27517 * C16001) * C4016) *
                          C17724 +
                      (C21529 + C21528) * C17723) *
                         C27516 * C8283) *
                        C27352)) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[41] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C1897 +
                      (C233 * C144 + C27517 * C296) * C27481 -
                      (C233 * C600 + C27517 * C800) * C1898 -
                      (C233 * C676 + C27517 * C873) * C27352) *
                         C17723 +
                     (C20274 + C20275 - C20276 - C20280) * C17724) *
                        C27516 * C27275 * C27511 +
                    ((C20276 - (C20275 + C20274) + C20280) * C17723 +
                     (C25914 - (C25915 + C25916) + C25917) * C17724) *
                        C27516 * C27275 * C27512 +
                    ((C25916 + C25915 - C25914 - C25917) * C17723 +
                     (C24420 * C1897 + C24462 * C27481 -
                      (C233 * C15891 + C27517 * C16001) * C1898 -
                      (C233 * C15929 + C27517 * C16037) * C27352) *
                         C17724) *
                        C27516 * C27275 * C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C8384 +
            (C233 * C189 + C27517 * C350) * C27511 - C18726 * C8385 -
            C18848 * C27512 + C18729 * C8386 + C18849 * C8283) *
               C17723 +
           (C18726 * C8384 + C18848 * C27511 - C18729 * C8385 -
            C18849 * C27512 + C24420 * C8386 + C24501 * C8283) *
               C17724) *
              C27516 * C27481 +
          ((C20205 * C8385 -
            ((C233 * C738 + C27517 * C942) * C27511 +
             (C233 * C600 + C27517 * C800) * C8384) +
            C20349 * C27512 - C21526 * C8386 - C21643 * C8283) *
               C17723 +
           (C21526 * C8385 - (C20349 * C27511 + C20205 * C8384) +
            C21643 * C27512 - (C233 * C15891 + C27517 * C16001) * C8386 -
            (C233 * C15965 + C27517 * C16072) * C8283) *
               C17724) *
              C27516 * C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eezx[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C4016 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27275) *
               C27516 * C27517 * C27511 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27275 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4016) *
               C27516 * C27517 * C27512 +
           ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 +
             C17724 * C7554) *
                C4016 +
            (C17929 * C1232 + C17723 * C1636 + C17930 * C7324 +
             C17724 * C7556) *
                C27275) *
               C27516 * C27517 * C8283) *
              C27481 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C4016 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27275) *
               C27516 * C27517 * C27512 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27275 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C4016) *
               C27516 * C27517 * C27511 -
           ((C17930 * C15892 + C17724 * C16108 + C17929 * C4378 +
             C17723 * C4702) *
                C27275 +
            (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
             C17723 * C4700) *
                C4016) *
               C27516 * C27517 * C8283) *
              C27352)) /
        (p * q * std::sqrt(p + q));
    d2eezy[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C1897 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27481 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C1898 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C27352) *
              C27516 * C27517 * C27275 * C27511 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C1898 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27481 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C1897) +
           (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 + C17724 * C4753) *
               C27352) *
              C27516 * C27517 * C27275 * C27512 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C1897 +
           (C17929 * C1295 + C17723 * C1704 + C17930 * C7364 + C17724 * C7592) *
               C27481 -
           (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
            C17723 * C4700) *
               C1898 -
           (C17930 * C15929 + C17724 * C16143 + C17929 * C4434 +
            C17723 * C4753) *
               C27352) *
              C27516 * C27517 * C27275 * C8283)) /
        (p * q * std::sqrt(p + q));
    d2eezz[41] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C8384 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27511 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C8385 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27512 +
           (C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C8386 +
           (C17929 * C1359 + C17723 * C1768 + C17930 * C7406 + C17724 * C7627) *
               C8283) *
              C27516 * C27517 * C27481 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C8385 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C27511 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C8384) +
           (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 + C17724 * C4805) *
               C27512 -
           (C17930 * C15891 + C17724 * C16107 + C17929 * C4376 +
            C17723 * C4700) *
               C8386 -
           (C17930 * C15965 + C17724 * C16178 + C17929 * C4488 +
            C17723 * C4805) *
               C8283) *
              C27516 * C27517 * C27352) *
         C27275) /
        (p * q * std::sqrt(p + q));
    d2eexx[42] +=
        (-std::pow(Pi, 2.5) * (((((C9186 * C89 + C27516 * C94) * C4016 +
                                  (C9186 * C96 + C27516 * C104) * C27275) *
                                     C27517 * C17723 +
                                 (C21354 + C21355) * C27517 * C17724) *
                                    C6413 -
                                ((C21356 + C21357) * C27517 * C17724 +
                                 (C21355 + C21354) * C27517 * C17723) *
                                    C27378) *
                                   C593 +
                               (((C12917 + C12916) * C27517 * C17723 +
                                 (C12924 + C12925) * C27517 * C17724) *
                                    C27378 -
                                ((C12916 + C12917) * C27517 * C17724 +
                                 (C12539 + C12538) * C27517 * C17723) *
                                    C6413) *
                                   C594 +
                               (((C12541 + C12540) * C27517 * C17723 +
                                 (C14500 + C14501) * C27517 * C17724) *
                                    C6413 -
                                (((C9186 * C12912 + C27516 * C12914) * C27275 +
                                  (C9186 * C12911 + C27516 * C12913) * C4016) *
                                     C27517 * C17724 +
                                 (C14501 + C14500) * C27517 * C17723) *
                                    C27378) *
                                   C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C27517 * C17723 +
           (C23380 + C23381 - C23382 - C23383 + C23384 + C23385) * C27517 *
               C17724) *
              C6413 +
          ((C23382 - (C23381 + C23380) + C23383 - C23384 - C23385) * C27517 *
               C17723 +
           (C18520 * C3557 - (C18521 * C3551 + C18522 * C3556) +
            C18523 * C3552 - (C9186 * C1223 + C27516 * C1234) * C3558 -
            (C9186 * C1235 + C27516 * C1241) * C3553) *
               C27517 * C17724) *
              C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C4016 +
            (C9186 * C96 + C27516 * C104) * C27275) *
               C27517 * C17723 +
           (C21354 + C21355) * C27517 * C17724) *
              C7317 -
          ((C21356 + C21357) * C27517 * C17724 +
           (C21355 + C21354) * C27517 * C17723) *
              C7318 +
          ((C21357 + C21356) * C27517 * C17723 +
           (C24298 + C24299) * C27517 * C17724) *
              C7319 -
          (((C9186 * C24288 + C27516 * C24290) * C27275 +
            (C9186 * C24287 + C27516 * C24289) * C4016) *
               C27517 * C17724 +
           (C24299 + C24298) * C27517 * C17723) *
              C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eexy[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C672 +
            (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
            C9602 * C594 + C9534 * C674 + C9603 * C595) *
               C27517 * C17723 +
           (C23892 + C23893 - C23894 - C23895 + C23896 + C23897) * C27517 *
               C17724) *
              C27275 * C6413 +
          ((C23894 - (C23893 + C23892) + C23895 - C23896 - C23897) * C27517 *
               C17723 +
           (C12922 * C673 - (C18597 * C593 + C18522 * C672) + C12980 * C594 -
            (C9186 * C12911 + C27516 * C12913) * C674 -
            (C9186 * C12975 + C27516 * C12976) * C595) *
               C27517 * C17724) *
              C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C9186 * C89 + C27516 * C94) * C143 +
                                 (C9186 * C144 + C27516 * C149) * C27303) *
                                    C27517 * C17723 +
                                (C18582 + C18598) * C27517 * C17724) *
                                   C3551 -
                               ((C18599 + C18587) * C27517 * C17724 +
                                ((C9186 * C145 + C27516 * C150) * C27303 +
                                 (C9186 * C90 + C27516 * C95) * C143) *
                                    C27517 * C17723) *
                                   C3552 +
                               (((C9186 * C91 + C27516 * C98) * C143 +
                                 (C9186 * C146 + C27516 * C151) * C27303) *
                                    C27517 * C17723 +
                                (C19562 + C19566) * C27517 * C17724) *
                                   C3553) *
                                  C6413 +
                              (((C18587 + C18599) * C27517 * C17723 +
                                (C18588 + C18600) * C27517 * C17724) *
                                   C3552 -
                               ((C18601 + C18593) * C27517 * C17724 +
                                (C18598 + C18582) * C27517 * C17723) *
                                   C3551 -
                               (((C9186 * C1297 + C27516 * C1303) * C27303 +
                                 (C9186 * C1223 + C27516 * C1234) * C143) *
                                    C27517 * C17724 +
                                (C19566 + C19562) * C27517 * C17723) *
                                   C3553) *
                                  C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C143 +
            (C9186 * C144 + C27516 * C149) * C27303) *
               C27517 * C17723 +
           (C18582 + C18598) * C27517 * C17724) *
              C27275 * C7317 -
          ((C18601 + C18593) * C27517 * C17724 +
           (C18598 + C18582) * C27517 * C17723) *
              C27275 * C7318 +
          ((C18593 + C18601) * C27517 * C17723 +
           (C24336 + C24340) * C27517 * C17724) *
              C27275 * C7319 -
          (((C9186 * C24333 + C27516 * C24334) * C27303 +
            (C9186 * C24287 + C27516 * C24289) * C143) *
               C27517 * C17724 +
           (C24340 + C24336) * C27517 * C17723) *
              C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eexz[42] += (-std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C6515 +
                      (C9186 * C189 + C27516 * C194) * C6413 - C18516 * C6516 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C6515 + C18660 * C6413 - C18522 * C6516 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C593 +
                    ((C15544 - (C15543 + C15542) + C15545) * C27517 * C17723 +
                     (C12922 * C6516 - (C11618 * C6413 + C11464 * C6515) +
                      C13040 * C27378) *
                         C27517 * C17724) *
                        C594 +
                    ((C15548 + C15547 - C15546 - C15549) * C27517 * C17723 +
                     (C14498 * C6515 + C14614 * C6413 -
                      (C9186 * C12911 + C27516 * C12913) * C6516 -
                      (C9186 * C13030 + C27516 * C13031) * C27378) *
                         C27517 * C17724) *
                        C595) *
                   C27275) /
                      (p * q * std::sqrt(p + q)) -
                  (std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C6515 +
                      (C9186 * C189 + C27516 * C194) * C6413 - C18516 * C6516 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C6515 + C18660 * C6413 - C18522 * C6516 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C27303 * C3551 +
                    ((C18518 * C6516 -
                      ((C9186 * C190 + C27516 * C195) * C6413 +
                       (C9186 * C90 + C27516 * C95) * C6515) +
                      C18662 * C27378) *
                         C27517 * C17723 +
                     (C18520 * C6516 - (C18662 * C6413 + C18518 * C6515) +
                      C18663 * C27378) *
                         C27517 * C17724) *
                        C27303 * C3552 +
                    (((C9186 * C91 + C27516 * C98) * C6515 +
                      (C9186 * C191 + C27516 * C196) * C6413 - C19508 * C6516 -
                      C19619 * C27378) *
                         C27517 * C17723 +
                     (C19508 * C6515 + C19619 * C6413 -
                      (C9186 * C1223 + C27516 * C1234) * C6516 -
                      (C9186 * C1362 + C27516 * C1368) * C27378) *
                         C27517 * C17724) *
                        C27303 * C3553)) /
                      (p * q * std::sqrt(p + q)) +
                  (2 * std::pow(Pi, 2.5) *
                   (((C9186 * C89 + C27516 * C94) * C7401 +
                     (C9186 * C189 + C27516 * C194) * C7317 - C18516 * C7402 -
                     C18660 * C7318 + C18522 * C7403 + C18661 * C7319 -
                     C24296 * C7404 - C24379 * C7320) *
                        C27517 * C17723 +
                    (C18516 * C7401 + C18660 * C7317 - C18522 * C7402 -
                     C18661 * C7318 + C24296 * C7403 + C24379 * C7319 -
                     (C9186 * C24287 + C27516 * C24289) * C7404 -
                     (C9186 * C24374 + C27516 * C24375) * C7320) *
                        C27517 * C17724) *
                   C27303 * C27275) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[42] +=
        (-std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C4016 +
             (C233 * C96 + C27517 * C239) * C27275) *
                C17723 +
            (C21516 + C21517) * C17724) *
               C27516 * C6413 -
           ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) * C27516 *
               C27378) *
              C593 +
          (((C21520 + C21521) * C17723 + (C21528 + C21529) * C17724) * C27516 *
               C27378 -
           ((C21521 + C21520) * C17724 +
            ((C233 * C607 + C27517 * C805) * C27275 +
             (C233 * C600 + C27517 * C800) * C4016) *
                C17723) *
               C27516 * C6413) *
              C594 +
          ((((C233 * C601 + C27517 * C802) * C4016 +
             (C233 * C612 + C27517 * C808) * C27275) *
                C17723 +
            (C23066 + C23067) * C17724) *
               C27516 * C6413 -
           (((C233 * C12912 + C27517 * C13092) * C27275 +
             (C233 * C12911 + C27517 * C13091) * C4016) *
                C17724 +
            (C23067 + C23066) * C17723) *
               C27516 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3556 +
            (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 - C258 * C3552 +
            C259 * C3558 + C260 * C3553) *
               C17723 +
           (C23536 + C23537 - C23538 - C23539 + C23540 + C23541) * C17724) *
              C27516 * C6413 +
          ((C23538 - (C23537 + C23536) + C23539 - C23540 - C23541) * C17723 +
           (C1442 * C3557 - (C18728 * C3551 + C18729 * C3556) + C1443 * C3552 -
            (C233 * C1223 + C27517 * C1424) * C3558 -
            (C233 * C1235 + C27517 * C1430) * C3553) *
               C17724) *
              C27516 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C4016 +
            (C233 * C96 + C27517 * C239) * C27275) *
               C17723 +
           (C21516 + C21517) * C17724) *
              C27516 * C7317 -
          ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) * C27516 *
              C7318 +
          ((C21519 + C21518) * C17723 + (C24422 + C24423) * C17724) * C27516 *
              C7319 -
          (((C233 * C24288 + C27517 * C24414) * C27275 +
            (C233 * C24287 + C27517 * C24413) * C4016) *
               C17724 +
           (C24423 + C24422) * C17723) *
              C27516 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eeyy[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C17723 +
           (C24048 + C24049 - C24050 - C24051 + C24052 + C24053) * C17724) *
              C27516 * C27275 * C6413 +
          ((C24050 - (C24049 + C24048) + C24051 - C24052 - C24053) * C17723 +
           (C21526 * C673 - (C18791 * C593 + C18729 * C672) + C21589 * C594 -
            (C233 * C12911 + C27517 * C13091) * C674 -
            (C233 * C12975 + C27517 * C13143) * C595) *
               C17724) *
              C27516 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C17723 +
            (C18784 + C18792) * C17724) *
               C27516 * C3551 -
           ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) * C27516 *
               C3552 +
           ((C307 + C315) * C17723 + (C2577 + C2581) * C17724) * C27516 *
               C3553) *
              C6413 +
          (((C1500 + C1508) * C17723 + (C1503 + C1509) * C17724) * C27516 *
               C3552 -
           ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) * C27516 *
               C3551 -
           (((C233 * C1297 + C27517 * C1498) * C27303 +
             (C233 * C1223 + C27517 * C1424) * C143) *
                C17724 +
            (C2581 + C2577) * C17723) *
               C27516 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C143 +
            (C233 * C144 + C27517 * C296) * C27303) *
               C17723 +
           (C18784 + C18792) * C17724) *
              C27516 * C27275 * C7317 -
          ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) * C27516 *
              C27275 * C7318 +
          ((C18789 + C18793) * C17723 + (C24459 + C24463) * C17724) * C27516 *
              C27275 * C7319 -
          (((C233 * C24333 + C27517 * C24457) * C27303 +
            (C233 * C24287 + C27517 * C24413) * C143) *
               C17724 +
           (C24463 + C24459) * C17723) *
              C27516 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 - C18726 * C6516 -
            C18848 * C27378) *
               C17723 +
           (C18726 * C6515 + C18848 * C6413 - C18729 * C6516 -
            C18849 * C27378) *
               C17724) *
              C27516 * C593 +
          ((C20205 * C6516 -
            ((C233 * C738 + C27517 * C942) * C6413 +
             (C233 * C600 + C27517 * C800) * C6515) +
            C20349 * C27378) *
               C17723 +
           (C21526 * C6516 - (C20349 * C6413 + C20205 * C6515) +
            C21643 * C27378) *
               C17724) *
              C27516 * C594 +
          (((C233 * C601 + C27517 * C802) * C6515 +
            (C233 * C739 + C27517 * C943) * C6413 - C23064 * C6516 -
            C23179 * C27378) *
               C17723 +
           (C23064 * C6515 + C23179 * C6413 -
            (C233 * C12911 + C27517 * C13091) * C6516 -
            (C233 * C13030 + C27517 * C13194) * C27378) *
               C17724) *
              C27516 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 - C18726 * C6516 -
            C18848 * C27378) *
               C17723 +
           (C18726 * C6515 + C18848 * C6413 - C18729 * C6516 -
            C18849 * C27378) *
               C17724) *
              C27516 * C27303 * C3551 +
          ((C6670 - (C6669 + C6668) + C6671) * C17723 +
           (C1442 * C6516 - (C1574 * C6413 + C1440 * C6515) + C1575 * C27378) *
               C17724) *
              C27516 * C27303 * C3552 +
          ((C6674 + C6673 - C6672 - C6675) * C17723 +
           (C2524 * C6515 + C2642 * C6413 -
            (C233 * C1223 + C27517 * C1424) * C6516 -
            (C233 * C1362 + C27517 * C1564) * C27378) *
               C17724) *
              C27516 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C233 * C89 + C27517 * C234) * C7401 +
           (C233 * C189 + C27517 * C350) * C7317 - C18726 * C7402 -
           C18848 * C7318 + C18729 * C7403 + C18849 * C7319 - C24420 * C7404 -
           C24501 * C7320) *
              C17723 +
          (C18726 * C7401 + C18848 * C7317 - C18729 * C7402 - C18849 * C7318 +
           C24420 * C7403 + C24501 * C7319 -
           (C233 * C24287 + C27517 * C24413) * C7404 -
           (C233 * C24374 + C27517 * C24497) * C7320) *
              C17724) *
         C27516 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[42] +=
        (-std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C4016 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27275) *
               C27516 * C27517 * C6413 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27275 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4016) *
               C27516 * C27517 * C27378) *
              C593 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C4016 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27275) *
               C27516 * C27517 * C27378 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27275 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C4016) *
               C27516 * C27517 * C6413) *
              C594 +
          (((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C4016 +
            (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
                C27275) *
               C27516 * C27517 * C6413 -
           ((C17930 * C12912 + C17724 * C13246 + C17929 * C5934 +
             C17723 * C6258) *
                C27275 +
            (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
             C17723 * C6256) *
                C4016) *
               C27516 * C27517 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3556 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C3551 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C3557 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C3552 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3558 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C3553) *
              C27516 * C27517 * C6413 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C3557 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C3551 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C3556) +
           (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 + C17724 * C1637) *
               C3552 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C3558 -
           (C17930 * C1235 + C17724 * C1638 + C17929 * C1229 + C17723 * C1635) *
               C3553) *
              C27516 * C27517 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C4016 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27275) *
              C27516 * C27517 * C7317 -
          ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 + C17723 * C1633) *
               C27275 +
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C4016) *
              C27516 * C27517 * C7318 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C4016 +
           (C17929 * C1232 + C17723 * C1636 + C17930 * C7324 + C17724 * C7556) *
               C27275) *
              C27516 * C27517 * C7319 -
          ((C17930 * C24288 + C17724 * C24536 + C17929 * C7324 +
            C17723 * C7556) *
               C27275 +
           (C17930 * C24287 + C17724 * C24535 + C17929 * C7322 +
            C17723 * C7554) *
               C4016) *
              C27516 * C27517 * C7320) *
         C27303) /
            (p * q * std::sqrt(p + q));
    d2eezy[42] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C672 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C593 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C673 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C594 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C674 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C595) *
              C27516 * C27517 * C27275 * C6413 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C673 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C593 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C672) +
           (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 + C17724 * C4753) *
               C594 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C674 -
           (C17930 * C12975 + C17724 * C13307 + C17929 * C5990 +
            C17723 * C6309) *
               C595) *
              C27516 * C27517 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27303) *
               C27516 * C27517 * C3551 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27303 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27516 * C27517 * C3552 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
                C27303) *
               C27516 * C27517 * C3553) *
              C6413 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C143 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27303) *
               C27516 * C27517 * C3552 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27303 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C143) *
               C27516 * C27517 * C3551 -
           ((C17930 * C1297 + C17724 * C1706 + C17929 * C1293 +
             C17723 * C1702) *
                C27303 +
            (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 +
             C17723 * C1629) *
                C143) *
               C27516 * C27517 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C143 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C27303) *
              C27516 * C27517 * C27275 * C7317 -
          ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 + C17723 * C1703) *
               C27303 +
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C143) *
              C27516 * C27517 * C27275 * C7318 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C143 +
           (C17929 * C1295 + C17723 * C1704 + C17930 * C7364 + C17724 * C7592) *
               C27303) *
              C27516 * C27517 * C27275 * C7319 -
          ((C17930 * C24333 + C17724 * C24571 + C17929 * C7364 +
            C17723 * C7592) *
               C27303 +
           (C17930 * C24287 + C17724 * C24535 + C17929 * C7322 +
            C17723 * C7554) *
               C143) *
              C27516 * C27517 * C27275 * C7320)) /
            (p * q * std::sqrt(p + q));
    d2eezz[42] +=
        (-std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C6515 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C6413 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C6516 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C593 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C6516 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C6413 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C6515) +
           (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 + C17724 * C4805) *
               C27378) *
              C27516 * C27517 * C594 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C6515 +
           (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
               C6413 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C6516 -
           (C17930 * C13030 + C17724 * C13361 + C17929 * C6044 +
            C17723 * C6361) *
               C27378) *
              C27516 * C27517 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C6515 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C6413 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C6516 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C27303 * C3551 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C6516 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C6413 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C6515) +
           (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 + C17724 * C1770) *
               C27378) *
              C27516 * C27517 * C27303 * C3552 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C6515 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
               C6413 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C6516 -
           (C17930 * C1362 + C17724 * C1772 + C17929 * C1361 + C17723 * C1771) *
               C27378) *
              C27516 * C27517 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
              C7401 +
          (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
              C7317 -
          (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
              C7402 -
          (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
              C7318 +
          (C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
              C7403 +
          (C17929 * C1359 + C17723 * C1768 + C17930 * C7406 + C17724 * C7627) *
              C7319 -
          (C17930 * C24287 + C17724 * C24535 + C17929 * C7322 +
           C17723 * C7554) *
              C7404 -
          (C17930 * C24374 + C17724 * C24606 + C17929 * C7406 +
           C17723 * C7627) *
              C7320) *
         C27516 * C27517 * C27303 * C27275) /
            (p * q * std::sqrt(p + q));
    d2eexx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C26163 +
                      (C9186 * C96 + C27516 * C104) * C27471 -
                      (C9186 * C90 + C27516 * C95) * C26156 -
                      (C9186 * C97 + C27516 * C105) * C27280) *
                         C27517 * C17723 +
                     (C22310 + C22311 - C22312 - C22313) * C27517 * C17724) *
                        C27511 +
                    ((C22312 - (C22311 + C22310) + C22313) * C27517 * C17723 +
                     (C25252 - (C25253 + C25254) + C25255) * C27517 * C17724) *
                        C27512 +
                    ((C25254 + C25253 - C25252 - C25255) * C27517 * C17723 +
                     (C24296 * C26163 + C24297 * C27471 -
                      (C9186 * C7321 + C27516 * C7325) * C26156 -
                      (C9186 * C7323 + C27516 * C7327) * C27280) *
                         C27517 * C17724) *
                        C8283) *
                   C27303) /
                  (p * q * std::sqrt(p + q));
    d2eexy[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C9186 * C89 + C27516 * C94) * C143 +
                       (C9186 * C144 + C27516 * C149) * C27303) *
                          C27517 * C17723 +
                      (C18582 + C18598) * C27517 * C17724) *
                         C27471 -
                     ((C18599 + C18587) * C27517 * C17724 +
                      ((C9186 * C145 + C27516 * C150) * C27303 +
                       (C9186 * C90 + C27516 * C95) * C143) *
                          C27517 * C17723) *
                         C27280) *
                        C27511 +
                    (((C18587 + C18599) * C27517 * C17723 +
                      (C18588 + C18600) * C27517 * C17724) *
                         C27280 -
                     ((C18601 + C18593) * C27517 * C17724 +
                      (C18598 + C18582) * C27517 * C17723) *
                         C27471) *
                        C27512 +
                    (((C18593 + C18601) * C27517 * C17723 +
                      (C24336 + C24340) * C27517 * C17724) *
                         C27471 -
                     (((C9186 * C7363 + C27516 * C7365) * C27303 +
                       (C9186 * C7321 + C27516 * C7325) * C143) *
                          C27517 * C17724 +
                      (C18600 + C18588) * C27517 * C17723) *
                         C27280) *
                        C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eexz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C8384 +
            (C9186 * C189 + C27516 * C194) * C27511 - C18516 * C8385 -
            C18660 * C27512 + C18522 * C8386 + C18661 * C8283) *
               C27517 * C17723 +
           (C18516 * C8384 + C18660 * C27511 - C18522 * C8385 -
            C18661 * C27512 + C24296 * C8386 + C24379 * C8283) *
               C27517 * C17724) *
              C27303 * C27471 +
          ((C18518 * C8385 -
            ((C9186 * C190 + C27516 * C195) * C27511 +
             (C9186 * C90 + C27516 * C95) * C8384) +
            C18662 * C27512 - C18520 * C8386 - C18663 * C8283) *
               C27517 * C17723 +
           (C18520 * C8385 - (C18662 * C27511 + C18518 * C8384) +
            C18663 * C27512 - (C9186 * C7321 + C27516 * C7325) * C8386 -
            (C9186 * C7405 + C27516 * C7407) * C8283) *
               C27517 * C17724) *
              C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eeyx[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   ((((C233 * C89 + C27517 * C234) * C26163 +
                      (C233 * C96 + C27517 * C239) * C27471 - C257 * C26156 -
                      C258 * C27280) *
                         C17723 +
                     (C22516 + C22517 - C22518 - C22519) * C17724) *
                        C27516 * C27511 +
                    ((C22518 - (C22517 + C22516) + C22519) * C17723 +
                     (C25406 - (C25407 + C25408) + C25409) * C17724) *
                        C27516 * C27512 +
                    ((C25408 + C25407 - C25406 - C25409) * C17723 +
                     (C24420 * C26163 + C24421 * C27471 -
                      (C233 * C7321 + C27517 * C7443) * C26156 -
                      (C233 * C7323 + C27517 * C7445) * C27280) *
                         C17724) *
                        C27516 * C8283) *
                   C27303) /
                  (p * q * std::sqrt(p + q));
    d2eeyy[43] += (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                   (((((C233 * C89 + C27517 * C234) * C143 +
                       (C233 * C144 + C27517 * C296) * C27303) *
                          C17723 +
                      (C18784 + C18792) * C17724) *
                         C27516 * C27471 -
                     ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) *
                         C27516 * C27280) *
                        C27511 +
                    (((C1500 + C1508) * C17723 + (C1503 + C1509) * C17724) *
                         C27516 * C27280 -
                     ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) *
                         C27516 * C27471) *
                        C27512 +
                    (((C18789 + C18793) * C17723 + (C24459 + C24463) * C17724) *
                         C27516 * C27471 -
                     (((C233 * C7363 + C27517 * C7481) * C27303 +
                       (C233 * C7321 + C27517 * C7443) * C143) *
                          C17724 +
                      (C1509 + C1503) * C17723) *
                         C27516 * C27280) *
                        C8283)) /
                  (p * q * std::sqrt(p + q));
    d2eeyz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C8384 +
            (C233 * C189 + C27517 * C350) * C27511 - C18726 * C8385 -
            C18848 * C27512 + C18729 * C8386 + C18849 * C8283) *
               C17723 +
           (C18726 * C8384 + C18848 * C27511 - C18729 * C8385 -
            C18849 * C27512 + C24420 * C8386 + C24501 * C8283) *
               C17724) *
              C27516 * C27303 * C27471 +
          ((C8540 - (C8539 + C8538) + C8541 - C8542 - C8543) * C17723 +
           (C1442 * C8385 - (C1574 * C27511 + C1440 * C8384) + C1575 * C27512 -
            (C233 * C7321 + C27517 * C7443) * C8386 -
            (C233 * C7405 + C27517 * C7518) * C8283) *
               C17724) *
              C27516 * C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eezx[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C26163 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C27471 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C26156 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C27280) *
              C27516 * C27517 * C27511 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C26156 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27471 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C26163) +
           (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 + C17724 * C1637) *
               C27280) *
              C27516 * C27517 * C27512 +
          ((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C26163 +
           (C17929 * C1232 + C17723 * C1636 + C17930 * C7324 + C17724 * C7556) *
               C27471 -
           (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 + C17723 * C1631) *
               C26156 -
           (C17930 * C7323 + C17724 * C7555 + C17929 * C1233 + C17723 * C1637) *
               C27280) *
              C27516 * C27517 * C8283) *
         C27303) /
        (p * q * std::sqrt(p + q));
    d2eezy[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27303) *
               C27516 * C27517 * C27471 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27303 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27516 * C27517 * C27280) *
              C27511 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C143 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27303) *
               C27516 * C27517 * C27280 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27303 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C143) *
               C27516 * C27517 * C27471) *
              C27512 +
          (((C17929 * C1221 + C17723 * C1630 + C17930 * C7322 +
             C17724 * C7554) *
                C143 +
            (C17929 * C1295 + C17723 * C1704 + C17930 * C7364 +
             C17724 * C7592) *
                C27303) *
               C27516 * C27517 * C27471 -
           ((C17930 * C7363 + C17724 * C7591 + C17929 * C1296 +
             C17723 * C1705) *
                C27303 +
            (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 +
             C17723 * C1631) *
                C143) *
               C27516 * C27517 * C27280) *
              C8283)) /
        (p * q * std::sqrt(p + q));
    d2eezz[43] +=
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C8384 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C27511 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C8385 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27512 +
           (C17929 * C1221 + C17723 * C1630 + C17930 * C7322 + C17724 * C7554) *
               C8386 +
           (C17929 * C1359 + C17723 * C1768 + C17930 * C7406 + C17724 * C7627) *
               C8283) *
              C27516 * C27517 * C27303 * C27471 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C8385 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C27511 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C8384) +
           (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 + C17724 * C1770) *
               C27512 -
           (C17930 * C7321 + C17724 * C7553 + C17929 * C1222 + C17723 * C1631) *
               C8386 -
           (C17930 * C7405 + C17724 * C7628 + C17929 * C1360 + C17723 * C1770) *
               C8283) *
              C27516 * C27517 * C27303 * C27280)) /
        (p * q * std::sqrt(p + q));
    d2eexx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C3556 +
            (C9186 * C96 + C27516 * C104) * C3551 -
            (C9186 * C90 + C27516 * C95) * C3557 -
            (C9186 * C97 + C27516 * C105) * C3552 +
            (C9186 * C91 + C27516 * C98) * C3558 +
            (C9186 * C99 + C27516 * C106) * C3553) *
               C27517 * C17723 +
           (C23380 + C23381 - C23382 - C23383 + C23384 + C23385) * C27517 *
               C17724) *
              C6413 +
          ((C23382 - (C23381 + C23380) + C23383 - C23384 - C23385) * C27517 *
               C17723 +
           (C18520 * C3557 - (C18521 * C3551 + C18522 * C3556) +
            C18523 * C3552 - (C9186 * C1223 + C27516 * C1234) * C3558 -
            (C9186 * C1235 + C27516 * C1241) * C3553) *
               C27517 * C17724) *
              C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C4016 +
             (C9186 * C96 + C27516 * C104) * C27275) *
                C27517 * C17723 +
            (C21354 + C21355) * C27517 * C17724) *
               C6413 -
           ((C21356 + C21357) * C27517 * C17724 +
            (C21355 + C21354) * C27517 * C17723) *
               C27378) *
              C593 +
          (((C12917 + C12916) * C27517 * C17723 +
            (C12924 + C12925) * C27517 * C17724) *
               C27378 -
           ((C12916 + C12917) * C27517 * C17724 +
            (C12539 + C12538) * C27517 * C17723) *
               C6413) *
              C594 +
          (((C12541 + C12540) * C27517 * C17723 +
            (C14500 + C14501) * C27517 * C17724) *
               C6413 -
           (((C9186 * C12912 + C27516 * C12914) * C27275 +
             (C9186 * C12911 + C27516 * C12913) * C4016) *
                C27517 * C17724 +
            (C14501 + C14500) * C27517 * C17723) *
               C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eexy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9186 * C89 + C27516 * C94) * C143 +
             (C9186 * C144 + C27516 * C149) * C27303) *
                C27517 * C17723 +
            (C18582 + C18598) * C27517 * C17724) *
               C3551 -
           ((C18599 + C18587) * C27517 * C17724 +
            ((C9186 * C145 + C27516 * C150) * C27303 +
             (C9186 * C90 + C27516 * C95) * C143) *
                C27517 * C17723) *
               C3552 +
           (((C9186 * C91 + C27516 * C98) * C143 +
             (C9186 * C146 + C27516 * C151) * C27303) *
                C27517 * C17723 +
            (C19562 + C19566) * C27517 * C17724) *
               C3553) *
              C6413 +
          (((C18587 + C18599) * C27517 * C17723 +
            (C18588 + C18600) * C27517 * C17724) *
               C3552 -
           ((C18601 + C18593) * C27517 * C17724 +
            (C18598 + C18582) * C27517 * C17723) *
               C3551 -
           (((C9186 * C1297 + C27516 * C1303) * C27303 +
             (C9186 * C1223 + C27516 * C1234) * C143) *
                C27517 * C17724 +
            (C19566 + C19562) * C27517 * C17723) *
               C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9186 * C89 + C27516 * C94) * C672 +
            (C9186 * C144 + C27516 * C149) * C593 - C9528 * C673 -
            C9602 * C594 + C9534 * C674 + C9603 * C595) *
               C27517 * C17723 +
           (C23892 + C23893 - C23894 - C23895 + C23896 + C23897) * C27517 *
               C17724) *
              C27275 * C6413 +
          ((C23894 - (C23893 + C23892) + C23895 - C23896 - C23897) * C27517 *
               C17723 +
           (C12922 * C673 - (C18597 * C593 + C18522 * C672) + C12980 * C594 -
            (C9186 * C12911 + C27516 * C12913) * C674 -
            (C9186 * C12975 + C27516 * C12976) * C595) *
               C27517 * C17724) *
              C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eexz[44] += (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C6515 +
                      (C9186 * C189 + C27516 * C194) * C6413 - C18516 * C6516 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C6515 + C18660 * C6413 - C18522 * C6516 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C27303 * C3551 +
                    ((C18518 * C6516 -
                      ((C9186 * C190 + C27516 * C195) * C6413 +
                       (C9186 * C90 + C27516 * C95) * C6515) +
                      C18662 * C27378) *
                         C27517 * C17723 +
                     (C18520 * C6516 - (C18662 * C6413 + C18518 * C6515) +
                      C18663 * C27378) *
                         C27517 * C17724) *
                        C27303 * C3552 +
                    (((C9186 * C91 + C27516 * C98) * C6515 +
                      (C9186 * C191 + C27516 * C196) * C6413 - C19508 * C6516 -
                      C19619 * C27378) *
                         C27517 * C17723 +
                     (C19508 * C6515 + C19619 * C6413 -
                      (C9186 * C1223 + C27516 * C1234) * C6516 -
                      (C9186 * C1362 + C27516 * C1368) * C27378) *
                         C27517 * C17724) *
                        C27303 * C3553)) /
                      (p * q * std::sqrt(p + q)) -
                  (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                   ((((C9186 * C89 + C27516 * C94) * C6515 +
                      (C9186 * C189 + C27516 * C194) * C6413 - C18516 * C6516 -
                      C18660 * C27378) *
                         C27517 * C17723 +
                     (C18516 * C6515 + C18660 * C6413 - C18522 * C6516 -
                      C18661 * C27378) *
                         C27517 * C17724) *
                        C593 +
                    ((C15544 - (C15543 + C15542) + C15545) * C27517 * C17723 +
                     (C12922 * C6516 - (C11618 * C6413 + C11464 * C6515) +
                      C13040 * C27378) *
                         C27517 * C17724) *
                        C594 +
                    ((C15548 + C15547 - C15546 - C15549) * C27517 * C17723 +
                     (C14498 * C6515 + C14614 * C6413 -
                      (C9186 * C12911 + C27516 * C12913) * C6516 -
                      (C9186 * C13030 + C27516 * C13031) * C27378) *
                         C27517 * C17724) *
                        C595) *
                   C27275) /
                      (p * q * std::sqrt(p + q));
    d2eeyx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C3556 +
            (C233 * C96 + C27517 * C239) * C3551 - C257 * C3557 - C258 * C3552 +
            C259 * C3558 + C260 * C3553) *
               C17723 +
           (C23536 + C23537 - C23538 - C23539 + C23540 + C23541) * C17724) *
              C27516 * C6413 +
          ((C23538 - (C23537 + C23536) + C23539 - C23540 - C23541) * C17723 +
           (C1442 * C3557 - (C18728 * C3551 + C18729 * C3556) + C1443 * C3552 -
            (C233 * C1223 + C27517 * C1424) * C3558 -
            (C233 * C1235 + C27517 * C1430) * C3553) *
               C17724) *
              C27516 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C4016 +
             (C233 * C96 + C27517 * C239) * C27275) *
                C17723 +
            (C21516 + C21517) * C17724) *
               C27516 * C6413 -
           ((C21518 + C21519) * C17724 + (C21517 + C21516) * C17723) * C27516 *
               C27378) *
              C593 +
          (((C21520 + C21521) * C17723 + (C21528 + C21529) * C17724) * C27516 *
               C27378 -
           ((C21521 + C21520) * C17724 +
            ((C233 * C607 + C27517 * C805) * C27275 +
             (C233 * C600 + C27517 * C800) * C4016) *
                C17723) *
               C27516 * C6413) *
              C594 +
          ((((C233 * C601 + C27517 * C802) * C4016 +
             (C233 * C612 + C27517 * C808) * C27275) *
                C17723 +
            (C23066 + C23067) * C17724) *
               C27516 * C6413 -
           (((C233 * C12912 + C27517 * C13092) * C27275 +
             (C233 * C12911 + C27517 * C13091) * C4016) *
                C17724 +
            (C23067 + C23066) * C17723) *
               C27516 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eeyy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C233 * C89 + C27517 * C234) * C143 +
             (C233 * C144 + C27517 * C296) * C27303) *
                C17723 +
            (C18784 + C18792) * C17724) *
               C27516 * C3551 -
           ((C1508 + C1500) * C17724 + (C314 + C302) * C17723) * C27516 *
               C3552 +
           ((C307 + C315) * C17723 + (C2577 + C2581) * C17724) * C27516 *
               C3553) *
              C6413 +
          (((C1500 + C1508) * C17723 + (C1503 + C1509) * C17724) * C27516 *
               C3552 -
           ((C18793 + C18789) * C17724 + (C18792 + C18784) * C17723) * C27516 *
               C3551 -
           (((C233 * C1297 + C27517 * C1498) * C27303 +
             (C233 * C1223 + C27517 * C1424) * C143) *
                C17724 +
            (C2581 + C2577) * C17723) *
               C27516 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C672 +
            (C233 * C144 + C27517 * C296) * C593 -
            (C233 * C600 + C27517 * C800) * C673 -
            (C233 * C676 + C27517 * C873) * C594 +
            (C233 * C601 + C27517 * C802) * C674 +
            (C233 * C677 + C27517 * C874) * C595) *
               C17723 +
           (C24048 + C24049 - C24050 - C24051 + C24052 + C24053) * C17724) *
              C27516 * C27275 * C6413 +
          ((C24050 - (C24049 + C24048) + C24051 - C24052 - C24053) * C17723 +
           (C21526 * C673 - (C18791 * C593 + C18729 * C672) + C21589 * C594 -
            (C233 * C12911 + C27517 * C13091) * C674 -
            (C233 * C12975 + C27517 * C13143) * C595) *
               C17724) *
              C27516 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eeyz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 - C18726 * C6516 -
            C18848 * C27378) *
               C17723 +
           (C18726 * C6515 + C18848 * C6413 - C18729 * C6516 -
            C18849 * C27378) *
               C17724) *
              C27516 * C27303 * C3551 +
          ((C6670 - (C6669 + C6668) + C6671) * C17723 +
           (C1442 * C6516 - (C1574 * C6413 + C1440 * C6515) + C1575 * C27378) *
               C17724) *
              C27516 * C27303 * C3552 +
          ((C6674 + C6673 - C6672 - C6675) * C17723 +
           (C2524 * C6515 + C2642 * C6413 -
            (C233 * C1223 + C27517 * C1424) * C6516 -
            (C233 * C1362 + C27517 * C1564) * C27378) *
               C17724) *
              C27516 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C233 * C89 + C27517 * C234) * C6515 +
            (C233 * C189 + C27517 * C350) * C6413 - C18726 * C6516 -
            C18848 * C27378) *
               C17723 +
           (C18726 * C6515 + C18848 * C6413 - C18729 * C6516 -
            C18849 * C27378) *
               C17724) *
              C27516 * C593 +
          ((C20205 * C6516 -
            ((C233 * C738 + C27517 * C942) * C6413 +
             (C233 * C600 + C27517 * C800) * C6515) +
            C20349 * C27378) *
               C17723 +
           (C21526 * C6516 - (C20349 * C6413 + C20205 * C6515) +
            C21643 * C27378) *
               C17724) *
              C27516 * C594 +
          (((C233 * C601 + C27517 * C802) * C6515 +
            (C233 * C739 + C27517 * C943) * C6413 - C23064 * C6516 -
            C23179 * C27378) *
               C17723 +
           (C23064 * C6515 + C23179 * C6413 -
            (C233 * C12911 + C27517 * C13091) * C6516 -
            (C233 * C13030 + C27517 * C13194) * C27378) *
               C17724) *
              C27516 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
    d2eezx[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C3556 +
           (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
               C3551 -
           (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
               C3557 -
           (C17930 * C1226 + C17724 * C1634 + C17929 * C97 + C17723 * C411) *
               C3552 +
           (C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C3558 +
           (C17929 * C99 + C17723 * C412 + C17930 * C1229 + C17724 * C1635) *
               C3553) *
              C27516 * C27517 * C6413 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C3557 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C3551 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C3556) +
           (C17929 * C1226 + C17723 * C1634 + C17930 * C1233 + C17724 * C1637) *
               C3552 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C3558 -
           (C17930 * C1235 + C17724 * C1638 + C17929 * C1229 + C17723 * C1635) *
               C3553) *
              C27516 * C27517 * C27378) *
         C27303) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C4016 +
            (C17929 * C96 + C17723 * C410 + C17930 * C1227 + C17724 * C1633) *
                C27275) *
               C27516 * C27517 * C6413 -
           ((C17930 * C1232 + C17724 * C1636 + C17929 * C1227 +
             C17723 * C1633) *
                C27275 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C4016) *
               C27516 * C27517 * C27378) *
              C593 +
          (((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 +
             C17724 * C4700) *
                C4016 +
            (C17929 * C2890 + C17723 * C3340 + C17930 * C4378 +
             C17724 * C4702) *
                C27275) *
               C27516 * C27517 * C27378 -
           ((C17930 * C2890 + C17724 * C3340 + C17929 * C607 + C17723 * C1013) *
                C27275 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C4016) *
               C27516 * C27517 * C6413) *
              C594 +
          (((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
                C4016 +
            (C17929 * C612 + C17723 * C1016 + C17930 * C5934 + C17724 * C6258) *
                C27275) *
               C27516 * C27517 * C6413 -
           ((C17930 * C12912 + C17724 * C13246 + C17929 * C5934 +
             C17723 * C6258) *
                C27275 +
            (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
             C17723 * C6256) *
                C4016) *
               C27516 * C27517 * C27378) *
              C595)) /
            (p * q * std::sqrt(p + q));
    d2eezy[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
                C143 +
            (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
                C27303) *
               C27516 * C27517 * C3551 -
           ((C17930 * C1292 + C17724 * C1701 + C17929 * C145 + C17723 * C468) *
                C27303 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C143) *
               C27516 * C27517 * C3552 +
           ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
                C143 +
            (C17929 * C146 + C17723 * C469 + C17930 * C1293 + C17724 * C1702) *
                C27303) *
               C27516 * C27517 * C3553) *
              C6413 +
          (((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 +
             C17724 * C1631) *
                C143 +
            (C17929 * C1292 + C17723 * C1701 + C17930 * C1296 +
             C17724 * C1705) *
                C27303) *
               C27516 * C27517 * C3552 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C27303 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C143) *
               C27516 * C27517 * C3551 -
           ((C17930 * C1297 + C17724 * C1706 + C17929 * C1293 +
             C17723 * C1702) *
                C27303 +
            (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 +
             C17723 * C1629) *
                C143) *
               C27516 * C27517 * C3553) *
              C27378)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C672 +
           (C17929 * C144 + C17723 * C467 + C17930 * C1294 + C17724 * C1703) *
               C593 -
           (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
               C673 -
           (C17930 * C2963 + C17724 * C3415 + C17929 * C676 + C17723 * C1081) *
               C594 +
           (C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C674 +
           (C17929 * C677 + C17723 * C1082 + C17930 * C5990 + C17724 * C6309) *
               C595) *
              C27516 * C27517 * C27275 * C6413 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C673 -
           ((C17930 * C1295 + C17724 * C1704 + C17929 * C1294 +
             C17723 * C1703) *
                C593 +
            (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 +
             C17723 * C1628) *
                C672) +
           (C17929 * C2963 + C17723 * C3415 + C17930 * C4434 + C17724 * C4753) *
               C594 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C674 -
           (C17930 * C12975 + C17724 * C13307 + C17929 * C5990 +
            C17723 * C6309) *
               C595) *
              C27516 * C27517 * C27275 * C27378)) /
            (p * q * std::sqrt(p + q));
    d2eezz[44] +=
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C6515 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C6413 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C6516 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C27303 * C3551 +
          ((C17929 * C1218 + C17723 * C1627 + C17930 * C1222 + C17724 * C1631) *
               C6516 -
           ((C17930 * C1357 + C17724 * C1769 + C17929 * C190 + C17723 * C522) *
                C6413 +
            (C17930 * C1218 + C17724 * C1627 + C17929 * C90 + C17723 * C406) *
                C6515) +
           (C17929 * C1357 + C17723 * C1769 + C17930 * C1360 + C17724 * C1770) *
               C27378) *
              C27516 * C27517 * C27303 * C3552 +
          ((C17929 * C91 + C17723 * C407 + C17930 * C1219 + C17724 * C1629) *
               C6515 +
           (C17929 * C191 + C17723 * C523 + C17930 * C1361 + C17724 * C1771) *
               C6413 -
           (C17930 * C1223 + C17724 * C1632 + C17929 * C1219 + C17723 * C1629) *
               C6516 -
           (C17930 * C1362 + C17724 * C1772 + C17929 * C1361 + C17723 * C1771) *
               C27378) *
              C27516 * C27517 * C27303 * C3553)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C17929 * C89 + C17723 * C405 + C17930 * C1220 + C17724 * C1628) *
               C6515 +
           (C17929 * C189 + C17723 * C521 + C17930 * C1358 + C17724 * C1767) *
               C6413 -
           (C17930 * C1221 + C17724 * C1630 + C17929 * C1220 + C17723 * C1628) *
               C6516 -
           (C17930 * C1359 + C17724 * C1768 + C17929 * C1358 + C17723 * C1767) *
               C27378) *
              C27516 * C27517 * C593 +
          ((C17929 * C2885 + C17723 * C3337 + C17930 * C4376 + C17724 * C4700) *
               C6516 -
           ((C17930 * C3035 + C17724 * C3491 + C17929 * C738 + C17723 * C1150) *
                C6413 +
            (C17930 * C2885 + C17724 * C3337 + C17929 * C600 + C17723 * C1008) *
                C6515) +
           (C17929 * C3035 + C17723 * C3491 + C17930 * C4488 + C17724 * C4805) *
               C27378) *
              C27516 * C27517 * C594 +
          ((C17929 * C601 + C17723 * C1010 + C17930 * C5932 + C17724 * C6256) *
               C6515 +
           (C17929 * C739 + C17723 * C1151 + C17930 * C6044 + C17724 * C6361) *
               C6413 -
           (C17930 * C12911 + C17724 * C13245 + C17929 * C5932 +
            C17723 * C6256) *
               C6516 -
           (C17930 * C13030 + C17724 * C13361 + C17929 * C6044 +
            C17723 * C6361) *
               C27378) *
              C27516 * C27517 * C595) *
         C27275) /
            (p * q * std::sqrt(p + q));
}
