/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AA_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_11_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29950 = ae * be;
    const double C29949 = ae + be;
    const double C29948 = 0 * be;
    const double C29947 = xA - xB;
    const double C29971 = 0 * be;
    const double C29970 = zA - zB;
    const double C29992 = xP - xQ;
    const double C29991 = zP - zQ;
    const double C29990 = p + q;
    const double C29989 = p * q;
    const double C29999 = std::pow(ae, 2);
    const double C29997 = bs[3];
    const double C30007 = bs[4];
    const double C30016 = bs[5];
    const double C30030 = bs[6];
    const double C30052 = bs[7];
    const double C30161 = yP - yQ;
    const double C30367 = bs[2];
    const double C117 = bs[0];
    const double C30789 = ce + de;
    const double C30788 = ce * de;
    const double C30787 = xC - xD;
    const double C30821 = yC - yD;
    const double C30839 = zC - zD;
    const double C31007 = yA - yB;
    const double C29951 = std::pow(C29949, 2);
    const double C31062 = 2 * C29949;
    const double C29952 = C29950 * C29947;
    const double C30768 = std::pow(C29947, 2);
    const double C31061 = C29947 * ae;
    const double C29972 = C29950 * C29970;
    const double C31019 = std::pow(C29970, 2);
    const double C31094 = C29970 * ae;
    const double C30017 = std::pow(C29992, 2);
    const double C30085 = C29992 * ae;
    const double C30000 = C29991 * ae;
    const double C29998 = C29991 * C29992;
    const double C30203 = std::pow(C29991, 2);
    const double C29993 = 2 * C29989;
    const double C30170 = std::pow(C30161, 2);
    const double C30793 = 2 * C30789;
    const double C30792 = std::pow(C30789, 2);
    const double C30794 = C30787 * de;
    const double C30791 = C30787 * ce;
    const double C30790 = std::pow(C30787, 2);
    const double C30822 = std::pow(C30821, 2);
    const double C30881 = C30821 * de;
    const double C30879 = C30821 * ce;
    const double C30840 = std::pow(C30839, 2);
    const double C30923 = C30839 * de;
    const double C30921 = C30839 * ce;
    const double C31008 = std::pow(C31007, 2);
    const double C31093 = C31007 * ae;
    const double C29953 = 2 * C29951;
    const double C138 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (xP - xQ) * std::pow(ae, 2)) /
                        C29951;
    const double C31097 = std::pow(C31062, -2);
    const double C31095 = std::pow(C31062, -1);
    const double C30769 = C30768 * C29950;
    const double C31020 = C31019 * C29950;
    const double C30090 = C29997 * C30085;
    const double C30093 = C30007 * C30085;
    const double C30099 = C30016 * C30085;
    const double C30113 = C30030 * C30085;
    const double C30134 = C30052 * C30085;
    const double C30003 = C29997 * C30000;
    const double C30009 = C30007 * C30000;
    const double C30019 = C30016 * C30000;
    const double C30034 = C30030 * C30000;
    const double C30058 = C30052 * C30000;
    const double C30002 = C29998 * C29999;
    const double C29994 = C29993 / C29990;
    const double C124 = (-(bs[1] * C30085 * C29993) / C29990) / C29949;
    const double C127 = (-(bs[1] * C30000 * C29993) / C29990) / C29949;
    const double C118 = -(C29992 * bs[1] * C29993) / C29990;
    const double C263 = -(C30161 * bs[1] * C29993) / C29990;
    const double C416 = -(C29991 * bs[1] * C29993) / C29990;
    const double C30806 = std::pow(C30793, -1);
    const double C31070 = std::pow(C30793, -2);
    const double C30807 = 2 * C30792;
    const double C31074 = C30792 * C30793;
    const double C31073 = 4 * C30792;
    const double C31063 = std::pow(C30791, 2);
    const double C30795 = C30790 * C30788;
    const double C30823 = C30822 * C30788;
    const double C31075 = std::pow(C30879, 2);
    const double C30841 = C30840 * C30788;
    const double C31077 = std::pow(C30921, 2);
    const double C31009 = C31008 * C29950;
    const double C30770 = C30769 / C29949;
    const double C31021 = C31020 / C29949;
    const double C30008 = C30007 * C30002;
    const double C30018 = C30016 * C30002;
    const double C30032 = C30030 * C30002;
    const double C30056 = C30052 * C30002;
    const double C29996 = -C29994;
    const double C30006 = std::pow(C29994, 4);
    const double C30029 = std::pow(C29994, 6);
    const double C139 = (ae * std::pow(C29994, 2) * bs[2] * C29991 * ae +
                         C29992 * std::pow(-C29994, 3) * bs[3] * C29991 *
                             C29992 * std::pow(ae, 2)) /
                        C29951;
    const double C30366 = std::pow(C29994, 2);
    const double C125 =
        (C29992 * std::pow(C29994, 2) * bs[2] * C30085) / C29949 -
        (ae * bs[1] * C29993) / (C29990 * C29949);
    const double C31107 = 4 * C31074;
    const double C31106 = C30789 * C31073;
    const double C30796 = C30795 / C30789;
    const double C30824 = C30823 / C30789;
    const double C30842 = C30841 / C30789;
    const double C31010 = C31009 / C29949;
    const double C30771 = -C30770;
    const double C31022 = -C31021;
    const double C30001 = std::pow(C29996, 3);
    const double C30015 = std::pow(C29996, 5);
    const double C30051 = std::pow(C29996, 7);
    const double C30011 = C30006 * C30009;
    const double C30010 = C30006 * C30008;
    const double C30095 = C30006 * C30093;
    const double C30100 = C30007 * C30006;
    const double C30037 = C30029 * C30034;
    const double C30036 = C30029 * C30032;
    const double C30115 = C30029 * C30113;
    const double C30135 = C30030 * C30029;
    const double C30368 = C30367 * C30366;
    const double C128 = (C29992 * C30366 * C30367 * C30000) / C29949;
    const double C273 = (C30161 * C30366 * C30367 * C30000) / C29949;
    const double C276 = (C30161 * C30366 * C30367 * C30085) / C29949;
    const double C426 = (C29991 * C30366 * C30367 * C30000) / C29949 -
                        (ae * bs[1] * C29993) / (C29990 * C29949);
    const double C429 = (C29991 * C30366 * C30367 * C30085) / C29949;
    const double C30797 = -C30796;
    const double C30825 = -C30824;
    const double C30843 = -C30842;
    const double C31011 = -C31010;
    const double C30772 = std::exp(C30771);
    const double C31023 = std::exp(C31022);
    const double C30004 = C30001 * C30003;
    const double C30086 = C29997 * C30001;
    const double C30091 = C30001 * C30090;
    const double C293 = ((yP - yQ) * C30001 * C29997 * C30002) / C29951;
    const double C446 = (ae * std::pow(C29994, 2) * bs[2] * C30085 +
                         C29991 * C30001 * C29997 * C30002) /
                        C29951;
    const double C30021 = C30015 * C30019;
    const double C30020 = C30015 * C30018;
    const double C30101 = C30015 * C30099;
    const double C30114 = C30016 * C30015;
    const double C30061 = C30051 * C30058;
    const double C30060 = C30051 * C30056;
    const double C30137 = C30051 * C30134;
    const double C30014 = ae * C30011;
    const double C30013 = C29992 * C30011;
    const double C30502 = C29991 * C30011;
    const double C30528 = C30161 * C30011;
    const double C294 =
        (C30001 * C29997 * C30002 + C30010 * std::pow(yP - yQ, 2)) / C29951;
    const double C30096 = C29992 * C30095;
    const double C30178 = C30161 * C30095;
    const double C30201 = ae * C30095;
    const double C30200 = C29991 * C30095;
    const double C30103 = C29992 * C30100;
    const double C30102 = C30100 * ae;
    const double C30376 = C30100 * C30017;
    const double C30474 = C30100 * C30170;
    const double C30504 = C30100 * C30203;
    const double C30529 = C30161 * C30100;
    const double C30607 = C29991 * C30100;
    const double C30039 = C30037 * C30017;
    const double C30050 = ae * C30037;
    const double C30049 = C29992 * C30037;
    const double C30543 = C30037 * C30170;
    const double C30622 = C29991 * C30037;
    const double C30667 = C30161 * C30037;
    const double C30038 = C29992 * C30036;
    const double C30234 = C30036 * C30170;
    const double C30237 = C30161 * C30036;
    const double C30291 = C29991 * C30036;
    const double C30119 = C29992 * C30115;
    const double C30245 = C30115 * C30170;
    const double C30252 = C30161 * C30115;
    const double C30292 = C30115 * C30203;
    const double C30306 = ae * C30115;
    const double C30305 = C29991 * C30115;
    const double C30140 = C30135 * C30017;
    const double C30139 = C29992 * C30135;
    const double C30138 = C30135 * ae;
    const double C30561 = C30135 * C30170;
    const double C30625 = C30135 * C30203;
    const double C30670 = C30161 * C30135;
    const double C119 = C30368 * C30017 - (bs[1] * C29993) / C29990;
    const double C262 = C30161 * C29992 * C30368;
    const double C264 = C30368 * C30170 - (bs[1] * C29993) / C29990;
    const double C415 = C29991 * C29992 * C30368;
    const double C417 = C30368 * C30203 - (bs[1] * C29993) / C29990;
    const double C812 = C29991 * C30161 * C30368;
    const double C30798 = std::exp(C30797);
    const double C30826 = std::exp(C30825);
    const double C30844 = std::exp(C30843);
    const double C31012 = std::exp(C31011);
    const double C4672 = C30772 * C276;
    const double C9198 = C30772 * C429;
    const double C29954 = C29952 * C30772;
    const double C31096 = C30772 * C31061;
    const double C101 =
        (C30772 * std::pow(C31061, 2)) / C29951 + C30772 / C31062;
    const double C103 = C31097 * C30772;
    const double C13223 = C31095 * C30772;
    const double C29973 = C29972 * C31023;
    const double C116 = -(2 * C29950 * (zA - zB) * C31023) / C29949;
    const double C31128 = C31023 * C31094;
    const double C8970 =
        (C31023 * std::pow(C31094, 2)) / C29951 + C31023 / C31062;
    const double C8972 = C31097 * C31023;
    const double C18917 = C31095 * C31023;
    const double C140 = (C30001 * C29997 * C30002 + ae * C29992 * C30004 +
                         C29992 * (ae * C30004 + C29992 * std::pow(C29994, 4) *
                                                     bs[4] * C30002)) /
                        C29951;
    const double C141 =
        (2 * (ae * C30004 + C29992 * C30010) +
         ae * (C30004 + C30011 * std::pow(C29992, 2)) +
         C29992 * (C30010 + ae * C29992 * C30011 +
                   C29992 * (ae * C30011 +
                             C29992 * std::pow(C29996, 5) * bs[5] * C30002))) /
        C29951;
    const double C292 = ((yP - yQ) * (ae * C30004 + C29992 * C30010)) / C29951;
    const double C445 = (ae * (C29992 * C30001 * C29997 * C30085 +
                               bs[2] * std::pow(C29994, 2) * ae) +
                         C29991 * (ae * C30004 + C29992 * C30010)) /
                        C29951;
    const double C129 = (C30366 * C30367 * C30000 + C30004 * C30017) / C29949;
    const double C130 =
        (2 * C29992 * C30004 + C29992 * (C30004 + C30011 * C30017)) / C29949;
    const double C271 = (C30161 * (C30004 + C30011 * C30017)) / C29949;
    const double C272 = (C30161 * C29992 * C30004) / C29949;
    const double C280 = (C30366 * C30367 * C30000 + C30004 * C30170) / C29949;
    const double C425 =
        (C29991 * C29992 * C30004 + C29992 * C30368 * ae) / C29949;
    const double C433 =
        (C30366 * C30367 * C30000 + C29991 * (C29991 * C30004 + C30368 * ae) +
         C29991 * C30368 * ae) /
        C29949;
    const double C820 =
        (C29991 * C30161 * C30004 + C30161 * C30368 * ae) / C29949;
    const double C1024 =
        (2 * C30161 * C30004 + C30161 * (C30004 + C30011 * C30170)) / C29949;
    const double C30094 = C30086 * ae;
    const double C30375 = C29992 * C30086;
    const double C30460 = C30161 * C30086;
    const double C30503 = C29991 * C30086;
    const double C424 = (C29991 * (C30004 + C30011 * C30017) +
                         (C30368 + C30086 * C30017) * ae) /
                        C29949;
    const double C1167 = (C29991 * (C30004 + C30011 * C30170) +
                          (C30368 + C30086 * C30170) * ae) /
                         C29949;
    const double C120 =
        2 * C29992 * C30368 + C29992 * (C30368 + C30086 * C30017);
    const double C261 = C30161 * (C30368 + C30086 * C30017);
    const double C414 = C29991 * (C30368 + C30086 * C30017);
    const double C1018 =
        2 * C30161 * C30368 + C30161 * (C30368 + C30086 * C30170);
    const double C1155 = C29991 * (C30368 + C30086 * C30170);
    const double C1846 =
        2 * C29991 * C30368 + C29991 * (C30368 + C30086 * C30203);
    const double C447 = (C30001 * C29997 * C30002 + ae * C29991 * C30091 +
                         C29991 * (ae * C30091 + C29991 * C30010)) /
                        C29951;
    const double C827 =
        (ae * C30161 * C30091 + C29991 * C30161 * C30010) / C29951;
    const double C126 =
        (C30366 * C30367 * C30085 + C29992 * (C29992 * C30091 + C30368 * ae) +
         C29992 * C30368 * ae) /
        C29949;
    const double C275 = (C30161 * (C29992 * C30091 + C30368 * ae)) / C29949;
    const double C277 = (C30366 * C30367 * C30085 + C30091 * C30170) / C29949;
    const double C428 = (C29991 * (C29992 * C30091 + C30368 * ae)) / C29949;
    const double C430 = (C30366 * C30367 * C30085 + C30091 * C30203) / C29949;
    const double C817 = (C29991 * C30161 * C30091) / C29949;
    const double C1027 =
        (2 * C30161 * C30091 + C30161 * (C30091 + C30095 * C30170)) / C29949;
    const double C1170 = (C29991 * (C30091 + C30095 * C30170)) / C29949;
    const double C1855 =
        (2 * C29991 * C30091 + C29991 * (C30091 + C30095 * C30203)) / C29949;
    const double C4674 = C30772 * C293;
    const double C9200 = C30772 * C446;
    const double C30023 = C30021 * C30017;
    const double C30028 = ae * C30021;
    const double C30027 = C29992 * C30021;
    const double C30537 = C30021 * C30170;
    const double C30542 = C30161 * C30021;
    const double C30606 = C29991 * C30021;
    const double C1031 =
        (3 * (C30004 + C30011 * C30170) +
         C30161 * (2 * C30161 * C30011 + C30161 * (C30011 + C30021 * C30170))) /
        C29949;
    const double C30022 = C29992 * C30020;
    const double C30202 = C29991 * C30020;
    const double C30225 = C30161 * C30020;
    const double C1036 = (2 * C30161 * C30010 +
                          C30161 * (C30010 + C30020 * std::pow(C30161, 2))) /
                         C29951;
    const double C1037 =
        (3 * (C30010 + C30020 * C30170) +
         C30161 * (2 * C30161 * C30020 + C30161 * (C30020 + C30036 * C30170))) /
        C29951;
    const double C1182 = (ae * (C30091 + C30095 * C30170) +
                          C29991 * (C30010 + C30020 * C30170)) /
                         C29951;
    const double C1864 = (2 * (ae * C30091 + C29991 * C30010) +
                          ae * (C30091 + C30095 * std::pow(C29991, 2)) +
                          C29991 * (C30010 + ae * C29991 * C30095 +
                                    C29991 * (ae * C30095 + C29991 * C30020))) /
                         C29951;
    const double C30104 = C29992 * C30101;
    const double C30183 = C30101 * C30170;
    const double C30205 = C30101 * C30203;
    const double C30226 = C30161 * C30101;
    const double C30290 = ae * C30101;
    const double C30289 = C29991 * C30101;
    const double C30118 = C30114 * C30017;
    const double C30117 = C29992 * C30114;
    const double C30116 = C30114 * ae;
    const double C30550 = C30114 * C30170;
    const double C30560 = C30161 * C30114;
    const double C30608 = C30114 * C30203;
    const double C30623 = C29991 * C30114;
    const double C30063 = C30061 * C30017;
    const double C30062 = C29992 * C30060;
    const double C30238 = C30060 * C30170;
    const double C30307 = C29991 * C30060;
    const double C30350 = C30161 * C30060;
    const double C30141 = C29992 * C30137;
    const double C30253 = C30137 * C30170;
    const double C30309 = C30137 * C30203;
    const double C30351 = C30161 * C30137;
    const double C281 = (C29992 * C30004 + C30013 * C30170) / C29949;
    const double C4678 = C30772 * C294;
    const double C1179 = (C30161 * C30010 + ae * C29991 * C30178 +
                          C29991 * (ae * C30178 + C29991 * C30161 * C30020)) /
                         C29951;
    const double C1164 = (C30161 * C30091 + C30178 * C30203) / C29949;
    const double C30105 = C30103 * ae;
    const double C30381 = 2 * C30103;
    const double C30458 = C30161 * C30103;
    const double C30509 = C29991 * C30103;
    const double C30377 = C30086 + C30376;
    const double C30475 = C30086 + C30474;
    const double C30506 = C30086 + C30504;
    const double C30549 = 2 * C30529;
    const double C30582 = C29991 * C30529;
    const double C30581 = C30529 * ae;
    const double C30612 = 2 * C30607;
    const double C30610 = C30607 * ae;
    const double C30041 = C30021 + C30039;
    const double C30057 = 2 * C30049;
    const double C30055 = ae * C30049;
    const double C30570 = C30049 * C30170;
    const double C30643 = C30161 * C30049;
    const double C30653 = C29991 * C30049;
    const double C30545 = C30021 + C30543;
    const double C30671 = C29991 * C30667;
    const double C30235 = C30020 + C30234;
    const double C30239 = 2 * C30237;
    const double C30269 = C29991 * C30237;
    const double C30246 = C30101 + C30245;
    const double C30254 = 2 * C30252;
    const double C30270 = C30252 * C30203;
    const double C30349 = ae * C30252;
    const double C30348 = C29991 * C30252;
    const double C30296 = C30101 + C30292;
    const double C30313 = 2 * C30305;
    const double C30311 = ae * C30305;
    const double C30143 = C30114 + C30140;
    const double C30142 = C30139 * ae;
    const double C30597 = C30139 * C30170;
    const double C30646 = C30161 * C30139;
    const double C30655 = C30139 * C30203;
    const double C30563 = C30114 + C30561;
    const double C30629 = C30114 + C30625;
    const double C30673 = C30670 * C30203;
    const double C30800 = C30798 * C30791;
    const double C30799 = C30798 / C30793;
    const double C30809 = C30806 * C30798;
    const double C31066 = C30798 * C30794;
    const double C31104 = C31070 * C30798;
    const double C31098 = C30798 * C31063;
    const double C30880 = C30826 / C30793;
    const double C30882 = C30826 * C30879;
    const double C30889 = C30806 * C30826;
    const double C31081 = C30826 * C30881;
    const double C31110 = C31070 * C30826;
    const double C31108 = C30826 * C31075;
    const double C30922 = C30844 / C30793;
    const double C30924 = C30844 * C30921;
    const double C30931 = C30806 * C30844;
    const double C31087 = C30844 * C30923;
    const double C31113 = C31070 * C30844;
    const double C31111 = C30844 * C31077;
    const double C31127 = C31012 * C31093;
    const double C4556 =
        (C31012 * std::pow(C31093, 2)) / C29951 + C31012 / C31062;
    const double C4558 = C31097 * C31012;
    const double C13225 = C31095 * C31012;
    const double C115 = ((0 * ae) / C29949 - C29954 / C29951) / (2 * C29949) +
                        (0 * ae) / C29949;
    const double C4559 = -(2 * C29954) / C29949;
    const double C13226 =
        ((C30772 - (C29947 * 2 * C29954) / C29949) * ae) / C29949 -
        C29948 / C29953;
    const double C13227 = (0 * ae) / C29949 - C29954 / C29951;
    const double C102 = (2 * C31095 * C31096) / C29949;
    const double C13222 = C31096 / C29949;
    const double C114 =
        (((C30772 - (C29947 * 2 * C29954) / C29949) * ae) / C29949 -
         C29948 / C29953) /
            (2 * C29949) +
        ((C29947 * ((0 * ae) / C29949 - C29954 / C29951) + C13223) * ae) /
            C29949;
    const double C8975 = ((0 * ae) / C29949 - C29973 / C29951) / (2 * C29949) +
                         (0 * ae) / C29949;
    const double C18918 =
        ((C31023 - (C29970 * 2 * C29973) / C29949) * ae) / C29949 -
        C29971 / C29953;
    const double C18919 = (0 * ae) / C29949 - C29973 / C29951;
    const double C8971 = (2 * C31095 * C31128) / C29949;
    const double C18916 = C31128 / C29949;
    const double C8974 =
        (((C31023 - (C29970 * 2 * C29973) / C29949) * ae) / C29949 -
         C29971 / C29953) /
            (2 * C29949) +
        ((C29970 * ((0 * ae) / C29949 - C29973 / C29951) + C18917) * ae) /
            C29949;
    const double C4686 = C30772 * C292;
    const double C13382 = C13223 * C292;
    const double C9212 = C30772 * C445;
    const double C19220 = C13223 * C445;
    const double C30097 = C30096 + C30094;
    const double C30505 = C30502 + C30094;
    const double C1852 =
        (2 * (C29991 * C30004 + C30368 * ae) +
         C29991 * (C30004 + C29991 * (C29991 * C30011 + C30094) +
                   C29991 * C30086 * ae) +
         (C30368 + C30086 * C30203) * ae) /
        C29949;
    const double C434 =
        (C29992 * C30004 + C29991 * (C29991 * C30013 + C30375 * ae) +
         C29991 * C30375 * ae) /
        C29949;
    const double C821 =
        (C29991 * C30161 * C30013 + C30161 * C30375 * ae) / C29949;
    const double C265 = C29992 * C30368 + C30375 * C30170;
    const double C418 = C29992 * C30368 + C30375 * C30203;
    const double C813 = C29991 * C30161 * C30375;
    const double C1017 =
        2 * C30161 * C30375 + C30161 * (C30375 + C30103 * C30170);
    const double C1154 = C29991 * (C30375 + C30103 * C30170);
    const double C1845 =
        2 * C29991 * C30375 + C29991 * (C30375 + C30103 * C30203);
    const double C1161 =
        (C30161 * C30004 + C29991 * (C29991 * C30161 * C30011 + C30460 * ae) +
         C29991 * C30460 * ae) /
        C29949;
    const double C2228 =
        (2 * (C29991 * C30528 + C30460 * ae) +
         C29991 * (C30528 + C29991 * (C29991 * C30161 * C30021 + C30529 * ae) +
                   C29991 * C30529 * ae) +
         (C30460 + C30529 * C30203) * ae) /
        C29949;
    const double C1152 = C30161 * C30368 + C30460 * C30203;
    const double C2222 =
        2 * C29991 * C30460 + C29991 * (C30460 + C30529 * C30203);
    const double C9204 = C30772 * C447;
    const double C5219 = C30772 * C827;
    const double C4684 = C30772 * C275;
    const double C13378 = C13223 * C275;
    const double C4676 = C30772 * C277;
    const double C9210 = C30772 * C428;
    const double C19216 = C13223 * C428;
    const double C9202 = C30772 * C430;
    const double C5221 = C30772 * C817;
    const double C4682 = C30772 * C1027;
    const double C5217 = C30772 * C1170;
    const double C9208 = C30772 * C1855;
    const double C30025 = C30011 + C30023;
    const double C30040 = C30028 + C30038;
    const double C30033 = 2 * C30027;
    const double C30031 = ae * C30027;
    const double C30508 = C29991 * C30027;
    const double C30531 = C30161 * C30027;
    const double C1023 =
        (2 * C30161 * C30013 + C30161 * (C30013 + C30027 * C30170)) / C29949;
    const double C1032 =
        (3 * (C30013 + C30027 * C30170) +
         C30161 * (2 * C30161 * C30027 + C30161 * (C30027 + C30049 * C30170))) /
        C29949;
    const double C1166 = (C29991 * (C30013 + C30027 * C30170) +
                          (C30375 + C30103 * C30170) * ae) /
                         C29949;
    const double C30538 = C30011 + C30537;
    const double C30544 = 2 * C30542;
    const double C30580 = C29991 * C30542;
    const double C30609 = C30606 + C30102;
    const double C30024 = C30014 + C30022;
    const double C30204 = C30201 + C30202;
    const double C4680 = C30772 * C1036;
    const double C5446 = C30772 * C1037;
    const double C5215 = C30772 * C1182;
    const double C9206 = C30772 * C1864;
    const double C30106 = C30104 + C30102;
    const double C30184 = C30095 + C30183;
    const double C30206 = C30095 + C30205;
    const double C30244 = 2 * C30226;
    const double C30268 = ae * C30226;
    const double C30267 = C29991 * C30226;
    const double C2231 =
        (2 * (ae * C30178 + C29991 * C30225) + ae * (C30178 + C30226 * C30203) +
         C29991 * (C30225 + ae * C29991 * C30226 +
                   C29991 * (ae * C30226 + C29991 * C30161 * C30036))) /
        C29951;
    const double C2225 =
        (2 * C29991 * C30178 + C29991 * (C30178 + C30226 * C30203)) / C29949;
    const double C30294 = C30290 + C30291;
    const double C30295 = 2 * C30289;
    const double C30293 = ae * C30289;
    const double C30121 = C30100 + C30118;
    const double C30120 = C30117 * ae;
    const double C30136 = 2 * C30117;
    const double C30477 = C30117 * C30170;
    const double C30510 = C30117 * C30203;
    const double C30532 = C30161 * C30117;
    const double C30654 = C29991 * C30117;
    const double C30122 = C30119 + C30116;
    const double C30627 = C30622 + C30116;
    const double C30551 = C30100 + C30550;
    const double C30562 = 2 * C30560;
    const double C30583 = C30560 * C30203;
    const double C30669 = C29991 * C30560;
    const double C30668 = C30560 * ae;
    const double C30611 = C30100 + C30608;
    const double C30630 = 2 * C30623;
    const double C30628 = C30623 * ae;
    const double C30065 = C30037 + C30063;
    const double C30064 = C30050 + C30062;
    const double C30240 = C30036 + C30238;
    const double C30312 = C30306 + C30307;
    const double C30353 = C29991 * C30350;
    const double C30144 = C30141 + C30138;
    const double C30255 = C30115 + C30253;
    const double C30314 = C30115 + C30309;
    const double C30355 = C30351 * C30203;
    const double C5586 = C30772 * C1179;
    const double C5584 = C30772 * C1164;
    const double C1851 =
        (2 * (C29991 * C30013 + C30375 * ae) +
         C29991 * (C30013 + C29991 * (C29991 * C30027 + C30105) +
                   C29991 * C30103 * ae) +
         (C30375 + C30103 * C30203) * ae) /
        C29949;
    const double C1160 =
        (C30161 * C30013 + C29991 * (C29991 * C30161 * C30027 + C30458 * ae) +
         C29991 * C30458 * ae) /
        C29949;
    const double C1151 = C30161 * C30375 + C30458 * C30203;
    const double C121 = 3 * (C30368 + C30086 * C30017) +
                        C29992 * (2 * C30375 + C29992 * C30377);
    const double C266 = C30368 + C30086 * C30017 + C30377 * C30170;
    const double C267 = C30161 * (2 * C30375 + C29992 * C30377);
    const double C419 = C30368 + C30086 * C30017 + C30377 * C30203;
    const double C420 = C29991 * (2 * C30375 + C29992 * C30377);
    const double C814 = C29991 * C30161 * C30377;
    const double C1174 =
        (C30004 + C30011 * C30170 +
         C29991 * (C29991 * (C30011 + C30021 * C30170) + C30475 * ae) +
         C29991 * C30475 * ae) /
        C29949;
    const double C1548 =
        (C29991 * (2 * C30161 * C30011 + C30161 * (C30011 + C30021 * C30170)) +
         (2 * C30460 + C30161 * C30475) * ae) /
        C29949;
    const double C1019 = 3 * (C30368 + C30086 * C30170) +
                         C30161 * (2 * C30460 + C30161 * C30475);
    const double C1156 = C30368 + C30086 * C30170 + C30475 * C30203;
    const double C1542 = C29991 * (2 * C30460 + C30161 * C30475);
    const double C1847 = 3 * (C30368 + C30086 * C30203) +
                         C29991 * (2 * C30503 + C29991 * C30506);
    const double C30043 = C29992 * C30041;
    const double C30053 = 3 * C30041;
    const double C30048 = ae * C30041;
    const double C30514 = C29991 * C30041;
    const double C30534 = C30161 * C30041;
    const double C30059 = C30036 + C30055;
    const double C30571 = C30027 + C30570;
    const double C30647 = C29991 * C30643;
    const double C30546 = C30161 * C30545;
    const double C30588 = C29991 * C30545;
    const double C5439 =
        (4 * (2 * C30225 + C30161 * C30235) +
         C30161 *
             (3 * C30235 + C30161 * (2 * C30161 * C30036 +
                                     C30161 * (C30036 + C30060 * C30170)))) /
        C29951;
    const double C30247 = C30161 * C30246;
    const double C30251 = 3 * C30246;
    const double C30275 = ae * C30246;
    const double C30274 = C29991 * C30246;
    const double C30272 = C30226 + C30270;
    const double C30354 = 2 * C30348;
    const double C30352 = ae * C30348;
    const double C30299 = C29991 * C30296;
    const double C30308 = 3 * C30296;
    const double C30304 = ae * C30296;
    const double C30315 = C30036 + C30311;
    const double C30146 = C29992 * C30143;
    const double C30145 = C30143 * ae;
    const double C30480 = C30143 * C30170;
    const double C30516 = C30143 * C30203;
    const double C30535 = C30161 * C30143;
    const double C30598 = C30117 + C30597;
    const double C30648 = C30646 * C30203;
    const double C30658 = C30117 + C30655;
    const double C30564 = C30161 * C30563;
    const double C30591 = C30563 * C30203;
    const double C30632 = C29991 * C30629;
    const double C30676 = C30560 + C30673;
    const double C30801 = C30800 * C30794;
    const double C30808 = C30800 / C30807;
    const double C31067 = C30806 * C30800;
    const double C31065 = C30800 / C30789;
    const double C258 = (C30798 * std::pow(C30794, 2)) / C30792 + C30799;
    const double C30810 = C30809 * C30794;
    const double C31071 = C30791 * C30809;
    const double C31069 = 2 * C30809;
    const double C31114 = C30809 / C31073;
    const double C112 = C30809 / C31107;
    const double C2703 = C30809 / C30793;
    const double C31100 = C31066 / C30789;
    const double C259 = (-2 * C30806 * C31066) / C30789;
    const double C31129 = C31098 / C30792;
    const double C942 = (C30826 * std::pow(C30881, 2)) / C30792 + C30880;
    const double C30883 = C30882 * C30881;
    const double C30888 = C30882 / C30807;
    const double C31079 = C30882 / C30789;
    const double C31076 = C30806 * C30882;
    const double C30890 = C30889 * C30881;
    const double C31085 = C30879 * C30889;
    const double C31084 = 2 * C30889;
    const double C31120 = C30889 / C31073;
    const double C1014 = C30889 / C31107;
    const double C2700 = C30889 / C30793;
    const double C31116 = C31081 / C30789;
    const double C943 = (-2 * C30806 * C31081) / C30789;
    const double C31134 = C31108 / C30792;
    const double C1664 = (C30844 * std::pow(C30923, 2)) / C30792 + C30922;
    const double C30925 = C30924 * C30923;
    const double C30930 = C30924 / C30807;
    const double C31080 = C30924 / C30789;
    const double C31078 = C30806 * C30924;
    const double C30932 = C30931 * C30923;
    const double C31091 = C30921 * C30931;
    const double C31090 = 2 * C30931;
    const double C31126 = C30931 / C31073;
    const double C1843 = C30931 / C31107;
    const double C3602 = C30931 / C30793;
    const double C31122 = C31087 / C30789;
    const double C1665 = (-2 * C30806 * C31087) / C30789;
    const double C31136 = C31111 / C30792;
    const double C4557 = (2 * C31095 * C31127) / C29949;
    const double C13224 = C31127 / C29949;
    const double C4697 = C4559 * C271;
    const double C4695 = C4559 * C261;
    const double C4689 = C4559 * C281;
    const double C4685 = C4559 * C272;
    const double C4683 = C4559 * C262;
    const double C4681 = C4559 * C1018;
    const double C4679 = C4559 * C1024;
    const double C4677 = C4559 * C280;
    const double C4675 = C4559 * C264;
    const double C4673 = C4559 * C273;
    const double C4671 = C4559 * C263;
    const double C5220 = C4559 * C812;
    const double C5218 = C4559 * C820;
    const double C5216 = C4559 * C1155;
    const double C5214 = C4559 * C1167;
    const double C5445 = C4559 * C1031;
    const double C9223 = C4559 * C424;
    const double C9221 = C4559 * C414;
    const double C9211 = C4559 * C425;
    const double C9209 = C4559 * C415;
    const double C9207 = C4559 * C1846;
    const double C9203 = C4559 * C433;
    const double C9201 = C4559 * C417;
    const double C9199 = C4559 * C426;
    const double C9197 = C4559 * C416;
    const double C13411 = C13226 * C271;
    const double C13407 = C13226 * C261;
    const double C13403 = C13226 * C281;
    const double C13395 = C13226 * C272;
    const double C13391 = C13226 * C262;
    const double C13389 = C13226 * C264;
    const double C13385 = C13226 * C280;
    const double C13379 = C13226 * C273;
    const double C13375 = C13226 * C263;
    const double C14065 = C13226 * C812;
    const double C14061 = C13226 * C820;
    const double C14333 = C13226 * C1031;
    const double C14327 = C13226 * C1024;
    const double C14323 = C13226 * C1018;
    const double C14505 = C13226 * C1167;
    const double C14501 = C13226 * C1155;
    const double C19249 = C13226 * C424;
    const double C19245 = C13226 * C414;
    const double C19233 = C13226 * C425;
    const double C19229 = C13226 * C415;
    const double C19227 = C13226 * C417;
    const double C19223 = C13226 * C433;
    const double C19217 = C13226 * C426;
    const double C19213 = C13226 * C416;
    const double C20953 = C13226 * C1846;
    const double C13397 = C13227 * C271;
    const double C13393 = C13227 * C261;
    const double C13383 = C13227 * C281;
    const double C13381 = C13227 * C272;
    const double C13377 = C13227 * C262;
    const double C19235 = C13227 * C424;
    const double C19231 = C13227 * C414;
    const double C19219 = C13227 * C425;
    const double C19215 = C13227 * C415;
    const double C13396 = C13222 * C292;
    const double C13392 = C13222 * C275;
    const double C13390 = C13222 * C277;
    const double C13386 = C13222 * C294;
    const double C13380 = C13222 * C293;
    const double C13376 = C13222 * C276;
    const double C14066 = C13222 * C817;
    const double C14062 = C13222 * C827;
    const double C14334 = C13222 * C1037;
    const double C14328 = C13222 * C1036;
    const double C14324 = C13222 * C1027;
    const double C14506 = C13222 * C1182;
    const double C14502 = C13222 * C1170;
    const double C14498 = C13222 * C1179;
    const double C14494 = C13222 * C1164;
    const double C19234 = C13222 * C445;
    const double C19230 = C13222 * C428;
    const double C19228 = C13222 * C430;
    const double C19224 = C13222 * C447;
    const double C19218 = C13222 * C446;
    const double C19214 = C13222 * C429;
    const double C20958 = C13222 * C1864;
    const double C20954 = C13222 * C1855;
    const double C113 =
        (((0 - (C29947 * C29948) / C29949) * ae) / C29949 - (0 * be) / C29953) /
            (2 * C29949) +
        ((C29947 * (((C30772 - (C29947 * 2 * C29954) / C29949) * ae) / C29949 -
                    C29948 / C29953) +
          C13222) *
         ae) /
            C29949 +
        (0 * ae) / C29949 - C29954 / C29951;
    const double C8973 =
        (((0 - (C29970 * C29971) / C29949) * ae) / C29949 - (0 * be) / C29953) /
            (2 * C29949) +
        ((C29970 * (((C31023 - (C29970 * 2 * C29973) / C29949) * ae) / C29949 -
                    C29971 / C29953) +
          C18916) *
         ae) /
            C29949 +
        (0 * ae) / C29949 - C29973 / C29951;
    const double C131 =
        (2 * (C29992 * C30091 + C30368 * ae) +
         C29992 * (C30091 + C29992 * C30097 + C29992 * C30086 * ae) +
         (C30368 + C30086 * C30017) * ae) /
        C29949;
    const double C274 =
        (C30161 * (C30091 + C29992 * C30097 + C30375 * ae)) / C29949;
    const double C278 =
        (C29992 * C30091 + C30368 * ae + C30097 * C30170) / C29949;
    const double C427 =
        (C29991 * (C30091 + C29992 * C30097 + C30375 * ae)) / C29949;
    const double C431 =
        (C29992 * C30091 + C30368 * ae + C30097 * C30203) / C29949;
    const double C818 = (C29991 * C30161 * C30097) / C29949;
    const double C1859 =
        (3 * (C30004 + C29991 * C30505 + C30503 * ae) +
         C29991 * (2 * C30505 +
                   C29991 * (C30011 + C29991 * (C29991 * C30021 + C30102) +
                             C29991 * C30100 * ae) +
                   C30506 * ae) +
         (2 * C30503 + C29991 * C30506) * ae) /
        C29949;
    const double C9205 = C4559 * C1852;
    const double C20957 = C13226 * C1852;
    const double C9215 = C4559 * C434;
    const double C19241 = C13226 * C434;
    const double C19221 = C13227 * C434;
    const double C5224 = C4559 * C821;
    const double C14071 = C13226 * C821;
    const double C14059 = C13227 * C821;
    const double C4687 = C4559 * C265;
    const double C13399 = C13226 * C265;
    const double C13387 = C13227 * C265;
    const double C9213 = C4559 * C418;
    const double C19237 = C13226 * C418;
    const double C19225 = C13227 * C418;
    const double C5222 = C4559 * C813;
    const double C14067 = C13226 * C813;
    const double C14063 = C13227 * C813;
    const double C4691 = C4559 * C1017;
    const double C14325 = C13227 * C1017;
    const double C14665 = C13226 * C1017;
    const double C5226 = C4559 * C1154;
    const double C14503 = C13227 * C1154;
    const double C14871 = C13226 * C1154;
    const double C9217 = C4559 * C1845;
    const double C20955 = C13227 * C1845;
    const double C21307 = C13226 * C1845;
    const double C5585 = C4559 * C1161;
    const double C14497 = C13226 * C1161;
    const double C6665 = C4559 * C2228;
    const double C15861 = C13226 * C2228;
    const double C5583 = C4559 * C1152;
    const double C14493 = C13226 * C1152;
    const double C6667 = C4559 * C2222;
    const double C15865 = C13226 * C2222;
    const double C133 = (3 * (C30004 + C30011 * C30017) +
                         C29992 * (2 * C30013 + C29992 * C30025)) /
                        C29949;
    const double C282 = (C30004 + C30011 * C30017 + C30025 * C30170) / C29949;
    const double C284 = (C30161 * (2 * C30013 + C29992 * C30025)) / C29949;
    const double C435 =
        (C30004 + C30011 * C30017 + C29991 * (C29991 * C30025 + C30377 * ae) +
         C29991 * C30377 * ae) /
        C29949;
    const double C437 = (C29991 * (2 * C30013 + C29992 * C30025) +
                         (2 * C30375 + C29992 * C30377) * ae) /
                        C29949;
    const double C822 =
        (C29991 * C30161 * C30025 + C30161 * C30377 * ae) / C29949;
    const double C1022 =
        (2 * C30161 * C30025 + C30161 * (C30025 + C30041 * C30170)) / C29949;
    const double C30042 = C29992 * C30040;
    const double C30047 = 2 * C30040;
    const double C30210 = C29991 * C30040;
    const double C30228 = C30161 * C30040;
    const double C30035 = C30020 + C30031;
    const double C30511 = C30508 + C30105;
    const double C4693 = C4559 * C1023;
    const double C14329 = C13227 * C1023;
    const double C14661 = C13226 * C1023;
    const double C5719 = C4559 * C1032;
    const double C14331 = C13227 * C1032;
    const double C5228 = C4559 * C1166;
    const double C14507 = C13227 * C1166;
    const double C14867 = C13226 * C1166;
    const double C5435 =
        (4 * (2 * C30528 + C30161 * C30538) +
         C30161 *
             (3 * C30538 + C30161 * (2 * C30161 * C30021 +
                                     C30161 * (C30021 + C30037 * C30170)))) /
        C29949;
    const double C30584 = C30580 + C30581;
    const double C30613 = C29991 * C30609;
    const double C30621 = 2 * C30609;
    const double C142 =
        (3 * (C30010 + ae * C30013 + C29992 * C30024) +
         ae * (2 * C30013 + C29992 * C30025) +
         C29992 *
             (2 * C30024 + ae * C30025 +
              C29992 * (C30020 + ae * C29992 * C30021 +
                        C29992 * (ae * C30021 + C29992 * std::pow(C29994, 6) *
                                                    bs[6] * C30002)))) /
        C29951;
    const double C291 =
        ((yP - yQ) * (C30010 + ae * C30013 + C29992 * C30024)) / C29951;
    const double C295 =
        (ae * C30004 + C29992 * C30010 + C30024 * std::pow(yP - yQ, 2)) /
        C29951;
    const double C444 =
        (ae * (C30001 * C29997 * C30085 +
               C29992 * (C29992 * C30006 * C30007 * C30085 + C30086 * ae) +
               C29992 * C30086 * ae) +
         C29991 * (C30010 + ae * C30013 + C29992 * C30024)) /
        C29951;
    const double C448 = (ae * C30004 + C29992 * C30010 + ae * C29991 * C30097 +
                         C29991 * (ae * C30097 + C29991 * C30024)) /
                        C29951;
    const double C828 =
        (ae * C30161 * C30097 + C29991 * C30161 * C30024) / C29951;
    const double C1035 = (2 * C30161 * C30024 +
                          C30161 * (C30024 + C30040 * std::pow(C30161, 2))) /
                         C29951;
    const double C30107 = C29992 * C30106;
    const double C30112 = 2 * C30106;
    const double C30176 = C30161 * C30106;
    const double C30209 = ae * C30106;
    const double C30208 = C29991 * C30106;
    const double C1181 = (ae * (C30097 + C30106 * C30170) +
                          C29991 * (C30024 + C30040 * C30170)) /
                         C29951;
    const double C1863 = (2 * (ae * C30097 + C29991 * C30024) +
                          ae * (C30097 + C30106 * std::pow(C29991, 2)) +
                          C29991 * (C30024 + ae * C29991 * C30106 +
                                    C29991 * (ae * C30106 + C29991 * C30040))) /
                         C29951;
    const double C1026 =
        (2 * C30161 * C30097 + C30161 * (C30097 + C30106 * C30170)) / C29949;
    const double C1169 = (C29991 * (C30097 + C30106 * C30170)) / C29949;
    const double C1854 =
        (2 * C29991 * C30097 + C29991 * (C30097 + C30106 * C30203)) / C29949;
    const double C1183 =
        (C30010 + C30020 * C30170 + ae * C29991 * C30184 +
         C29991 * (ae * C30184 + C29991 * (C30020 + C30036 * C30170))) /
        C29951;
    const double C1551 =
        (ae * (2 * C30178 + C30161 * C30184) +
         C29991 * (2 * C30161 * C30020 + C30161 * (C30020 + C30036 * C30170))) /
        C29951;
    const double C1028 = (3 * (C30091 + C30095 * C30170) +
                          C30161 * (2 * C30178 + C30161 * C30184)) /
                         C29949;
    const double C1171 = (C30091 + C30095 * C30170 + C30184 * C30203) / C29949;
    const double C1545 = (C29991 * (2 * C30178 + C30161 * C30184)) / C29949;
    const double C6282 =
        (2 * C29991 * C30184 + C29991 * (C30184 + C30246 * C30203)) / C29949;
    const double C1865 =
        (3 * (C30010 + ae * C30200 + C29991 * C30204) +
         ae * (2 * C30200 + C29991 * C30206) +
         C29991 * (2 * C30204 + ae * C30206 +
                   C29991 * (C30020 + ae * C29991 * C30101 +
                             C29991 * (ae * C30101 + C29991 * C30036)))) /
        C29951;
    const double C1856 = (3 * (C30091 + C30095 * C30203) +
                          C29991 * (2 * C30200 + C29991 * C30206)) /
                         C29949;
    const double C30271 = C30268 + C30269;
    const double C6666 = C30772 * C2231;
    const double C15862 = C13222 * C2231;
    const double C6668 = C30772 * C2225;
    const double C15866 = C13222 * C2225;
    const double C30298 = C29991 * C30294;
    const double C30303 = 2 * C30294;
    const double C30297 = C30020 + C30293;
    const double C30123 = C30121 * ae;
    const double C30382 = C29992 * C30121;
    const double C30385 = 3 * C30121;
    const double C30456 = C30161 * C30121;
    const double C30515 = C29991 * C30121;
    const double C1165 = (C29991 * (C30025 + C30041 * C30170) +
                          (C30377 + C30121 * C30170) * ae) /
                         C29949;
    const double C1016 =
        2 * C30161 * C30377 + C30161 * (C30377 + C30121 * C30170);
    const double C1153 = C29991 * (C30377 + C30121 * C30170);
    const double C1844 =
        2 * C29991 * C30377 + C29991 * (C30377 + C30121 * C30203);
    const double C30656 = C30653 + C30120;
    const double C30478 = C30103 + C30477;
    const double C30512 = C30103 + C30510;
    const double C30596 = 2 * C30532;
    const double C30645 = C29991 * C30532;
    const double C30644 = C30532 * ae;
    const double C2229 =
        (2 * (C29991 * C30531 + C30458 * ae) +
         C29991 * (C30531 + C29991 * (C29991 * C30161 * C30049 + C30532 * ae) +
                   C29991 * C30532 * ae) +
         (C30458 + C30532 * C30203) * ae) /
        C29949;
    const double C2223 =
        2 * C29991 * C30458 + C29991 * (C30458 + C30532 * C30203);
    const double C30659 = 2 * C30654;
    const double C30657 = C30654 * ae;
    const double C30124 = C29992 * C30122;
    const double C30133 = 2 * C30122;
    const double C30186 = C30122 * C30170;
    const double C30211 = C30122 * C30203;
    const double C30229 = C30161 * C30122;
    const double C30335 = ae * C30122;
    const double C30334 = C29991 * C30122;
    const double C30631 = C29991 * C30627;
    const double C30552 = C30161 * C30551;
    const double C30559 = 3 * C30551;
    const double C30590 = C29991 * C30551;
    const double C30589 = C30551 * ae;
    const double C6281 =
        (2 * (C29991 * C30538 + C30475 * ae) +
         C29991 * (C30538 + C29991 * (C29991 * C30545 + C30551 * ae) +
                   C29991 * C30551 * ae) +
         (C30475 + C30551 * C30203) * ae) /
        C29949;
    const double C6278 =
        2 * C29991 * C30475 + C29991 * (C30475 + C30551 * C30203);
    const double C30585 = C30529 + C30583;
    const double C30674 = 2 * C30669;
    const double C30672 = C30669 * ae;
    const double C30675 = C30671 + C30668;
    const double C30614 = C29991 * C30611;
    const double C30626 = 3 * C30611;
    const double C30624 = C30611 * ae;
    const double C30067 = C29992 * C30065;
    const double C1033 =
        (3 * (C30025 + C30041 * C30170) +
         C30161 * (2 * C30161 * C30041 + C30161 * (C30041 + C30065 * C30170))) /
        C29949;
    const double C30066 = C29992 * C30064;
    const double C30261 = C30064 * C30170;
    const double C30327 = C30161 * C30064;
    const double C30336 = C29991 * C30064;
    const double C1038 =
        (3 * (C30024 + C30040 * C30170) +
         C30161 * (2 * C30161 * C30040 + C30161 * (C30040 + C30064 * C30170))) /
        C29951;
    const double C30241 = C30161 * C30240;
    const double C30276 = C29991 * C30240;
    const double C6287 =
        (2 * (ae * C30184 + C29991 * C30235) + ae * (C30184 + C30246 * C30203) +
         C29991 * (C30235 + ae * C29991 * C30246 +
                   C29991 * (ae * C30246 + C29991 * C30240))) /
        C29951;
    const double C30316 = C29991 * C30312;
    const double C30357 = C30349 + C30353;
    const double C30147 = C29992 * C30144;
    const double C30282 = C30144 * C30170;
    const double C30328 = C30161 * C30144;
    const double C30337 = C30144 * C30203;
    const double C30256 = C30161 * C30255;
    const double C30277 = C30255 * C30203;
    const double C30317 = C29991 * C30314;
    const double C30358 = C30252 + C30355;
    const double C9219 = C4559 * C1851;
    const double C20959 = C13227 * C1851;
    const double C21303 = C13226 * C1851;
    const double C6445 = C4559 * C1160;
    const double C14499 = C13227 * C1160;
    const double C15589 = C13226 * C1160;
    const double C6447 = C4559 * C1151;
    const double C14495 = C13227 * C1151;
    const double C15593 = C13226 * C1151;
    const double C4699 = C4559 * C266;
    const double C13421 = C13226 * C266;
    const double C13401 = C13227 * C266;
    const double C4954 = C4559 * C267;
    const double C13409 = C13227 * C267;
    const double C13723 = C13226 * C267;
    const double C9225 = C4559 * C419;
    const double C19259 = C13226 * C419;
    const double C19239 = C13227 * C419;
    const double C9447 = C4559 * C420;
    const double C19247 = C13227 * C420;
    const double C19545 = C13226 * C420;
    const double C5236 = C4559 * C814;
    const double C14081 = C13226 * C814;
    const double C14069 = C13227 * C814;
    const double C5589 = C4559 * C1174;
    const double C14511 = C13226 * C1174;
    const double C5593 = C4559 * C1548;
    const double C15009 = C13226 * C1548;
    const double C5443 = C4559 * C1019;
    const double C14337 = C13226 * C1019;
    const double C5587 = C4559 * C1156;
    const double C14515 = C13226 * C1156;
    const double C5591 = C4559 * C1542;
    const double C15013 = C13226 * C1542;
    const double C10525 = C4559 * C1847;
    const double C20967 = C13226 * C1847;
    const double C30045 = C30033 + C30043;
    const double C5715 =
        (4 * (2 * C30531 + C30161 * C30571) +
         C30161 * (3 * C30571 +
                   C30161 * (2 * C30161 * C30049 +
                             C30161 * (C30049 + C29992 * C30061 * C30170)))) /
        C29949;
    const double C30547 = C30544 + C30546;
    const double C5448 = C30772 * C5439;
    const double C30248 = C30244 + C30247;
    const double C6283 = (3 * (C30178 + C30226 * C30203) +
                          C29991 * (2 * C30267 + C29991 * C30272)) /
                         C29949;
    const double C30356 = C30237 + C30352;
    const double C30301 = C30295 + C30299;
    const double C30148 = C30136 + C30146;
    const double C30481 = C30121 + C30480;
    const double C30518 = C30121 + C30516;
    const double C30599 = C30161 * C30598;
    const double C30650 = C30532 + C30648;
    const double C30661 = C29991 * C30658;
    const double C30565 = C30562 + C30564;
    const double C30593 = C30551 + C30591;
    const double C30634 = C30630 + C30632;
    const double C30678 = C29991 * C30676;
    const double C30802 = C30801 / C30792;
    const double C31101 = 2 * C31067;
    const double C30811 = C30810 / C30789;
    const double C31105 = C31071 / C30807;
    const double C31130 = C31065 - C31100;
    const double C2440 = -C31100;
    const double C31144 = C31129 + C30799;
    const double C30884 = C30883 / C30792;
    const double C31109 = 2 * C31076;
    const double C30891 = C30890 / C30789;
    const double C31119 = C31085 / C30807;
    const double C31138 = C31079 - C31116;
    const double C2332 = -C31116;
    const double C31147 = C31134 + C30880;
    const double C30926 = C30925 / C30792;
    const double C31112 = 2 * C31078;
    const double C30933 = C30932 / C30789;
    const double C31125 = C31091 / C30807;
    const double C31141 = C31080 - C31122;
    const double C3094 = -C31122;
    const double C31148 = C31136 + C30922;
    const double C4714 = C4685 + C4686;
    const double C4713 = C4683 + C4684;
    const double C4712 = C4681 + C4682;
    const double C4711 = C4679 + C4680;
    const double C4710 = C4677 + C4678;
    const double C4709 = C4675 + C4676;
    const double C4708 = C4673 + C4674;
    const double C4707 = C4671 + C4672;
    const double C5241 = C5220 + C5221;
    const double C5240 = C5218 + C5219;
    const double C5239 = C5216 + C5217;
    const double C5238 = C5214 + C5215;
    const double C5452 = C5445 + C5446;
    const double C9240 = C9211 + C9212;
    const double C9239 = C9209 + C9210;
    const double C9238 = C9207 + C9208;
    const double C9236 = C9203 + C9204;
    const double C9235 = C9201 + C9202;
    const double C9234 = C9199 + C9200;
    const double C9233 = C9197 + C9198;
    const double C13426 = C13381 + C13382;
    const double C13424 = C13377 + C13378;
    const double C19264 = C19219 + C19220;
    const double C19262 = C19215 + C19216;
    const double C13433 = C13395 + C13396;
    const double C13431 = C13391 + C13392;
    const double C13430 = C13389 + C13390;
    const double C13428 = C13385 + C13386;
    const double C13425 = C13379 + C13380;
    const double C13423 = C13375 + C13376;
    const double C14086 = C14065 + C14066;
    const double C14084 = C14061 + C14062;
    const double C14344 = C14333 + C14334;
    const double C14341 = C14327 + C14328;
    const double C14339 = C14323 + C14324;
    const double C14523 = C14505 + C14506;
    const double C14521 = C14501 + C14502;
    const double C19271 = C19233 + C19234;
    const double C19269 = C19229 + C19230;
    const double C19268 = C19227 + C19228;
    const double C19266 = C19223 + C19224;
    const double C19263 = C19217 + C19218;
    const double C19261 = C19213 + C19214;
    const double C20969 = C20953 + C20954;
    const double C4696 = C30772 * C274;
    const double C13408 = C13222 * C274;
    const double C13394 = C13223 * C274;
    const double C4688 = C30772 * C278;
    const double C13400 = C13222 * C278;
    const double C13388 = C13223 * C278;
    const double C9222 = C30772 * C427;
    const double C19246 = C13222 * C427;
    const double C19232 = C13223 * C427;
    const double C9214 = C30772 * C431;
    const double C19238 = C13222 * C431;
    const double C19226 = C13223 * C431;
    const double C5223 = C30772 * C818;
    const double C14068 = C13222 * C818;
    const double C14064 = C13223 * C818;
    const double C10527 = C4559 * C1859;
    const double C20963 = C13226 * C1859;
    const double C9237 = C9205 + C9206;
    const double C20971 = C20957 + C20958;
    const double C5600 = C5585 + C5586;
    const double C14519 = C14497 + C14498;
    const double C5599 = C5583 + C5584;
    const double C14517 = C14493 + C14494;
    const double C4701 = C4559 * C282;
    const double C13417 = C13226 * C282;
    const double C13405 = C13227 * C282;
    const double C4956 = C4559 * C284;
    const double C13413 = C13227 * C284;
    const double C13727 = C13226 * C284;
    const double C9227 = C4559 * C435;
    const double C19255 = C13226 * C435;
    const double C19243 = C13227 * C435;
    const double C9449 = C4559 * C437;
    const double C19251 = C13227 * C437;
    const double C19549 = C13226 * C437;
    const double C5234 = C4559 * C822;
    const double C14077 = C13226 * C822;
    const double C14073 = C13227 * C822;
    const double C4703 = C4559 * C1022;
    const double C14659 = C13227 * C1022;
    const double C30054 = C30047 + C30048;
    const double C30044 = C30035 + C30042;
    const double C5447 = C4559 * C5435;
    const double C30615 = C30011 + C30613;
    const double C4698 = C30772 * C291;
    const double C13412 = C13222 * C291;
    const double C13398 = C13223 * C291;
    const double C4690 = C30772 * C295;
    const double C13404 = C13222 * C295;
    const double C13384 = C13223 * C295;
    const double C9224 = C30772 * C444;
    const double C19250 = C13222 * C444;
    const double C19236 = C13223 * C444;
    const double C9216 = C30772 * C448;
    const double C19242 = C13222 * C448;
    const double C19222 = C13223 * C448;
    const double C5225 = C30772 * C828;
    const double C14072 = C13222 * C828;
    const double C14060 = C13223 * C828;
    const double C4694 = C30772 * C1035;
    const double C14330 = C13223 * C1035;
    const double C14662 = C13222 * C1035;
    const double C30108 = C30095 + C30107;
    const double C1178 = (C30161 * C30024 + ae * C29991 * C30176 +
                          C29991 * (ae * C30176 + C29991 * C30161 * C30040)) /
                         C29951;
    const double C1163 = (C30161 * C30097 + C30176 * C30203) / C29949;
    const double C30212 = C30209 + C30210;
    const double C5229 = C30772 * C1181;
    const double C14508 = C13223 * C1181;
    const double C14868 = C13222 * C1181;
    const double C9220 = C30772 * C1863;
    const double C20960 = C13223 * C1863;
    const double C21304 = C13222 * C1863;
    const double C4692 = C30772 * C1026;
    const double C14326 = C13223 * C1026;
    const double C14666 = C13222 * C1026;
    const double C5227 = C30772 * C1169;
    const double C14504 = C13223 * C1169;
    const double C14872 = C13222 * C1169;
    const double C9218 = C30772 * C1854;
    const double C20956 = C13223 * C1854;
    const double C21308 = C13222 * C1854;
    const double C5590 = C30772 * C1183;
    const double C14512 = C13222 * C1183;
    const double C5594 = C30772 * C1551;
    const double C15010 = C13222 * C1551;
    const double C5444 = C30772 * C1028;
    const double C14338 = C13222 * C1028;
    const double C5588 = C30772 * C1171;
    const double C14516 = C13222 * C1171;
    const double C5592 = C30772 * C1545;
    const double C15014 = C13222 * C1545;
    const double C6664 = C30772 * C6282;
    const double C10528 = C30772 * C1865;
    const double C20964 = C13222 * C1865;
    const double C10526 = C30772 * C1856;
    const double C20968 = C13222 * C1856;
    const double C6288 =
        (3 * (C30225 + ae * C30267 + C29991 * C30271) +
         ae * (2 * C30267 + C29991 * C30272) +
         C29991 *
             (2 * C30271 + ae * C30272 +
              C29991 * (C30237 + ae * C29991 * C30252 +
                        C29991 * (ae * C30252 + C29991 * C30161 * C30060)))) /
        C29951;
    const double C6671 = C6665 + C6666;
    const double C15868 = C15861 + C15862;
    const double C6672 = C6667 + C6668;
    const double C15870 = C15865 + C15866;
    const double C30310 = C30303 + C30304;
    const double C30300 = C30297 + C30298;
    const double C30517 = C30514 + C30123;
    const double C1850 =
        (2 * (C29991 * C30025 + C30377 * ae) +
         C29991 * (C30025 + C29991 * (C29991 * C30041 + C30123) +
                   C29991 * C30121 * ae) +
         (C30377 + C30121 * C30203) * ae) /
        C29949;
    const double C30383 = C30381 + C30382;
    const double C1159 =
        (C30161 * C30025 + C29991 * (C29991 * C30161 * C30041 + C30456 * ae) +
         C29991 * C30456 * ae) /
        C29949;
    const double C2230 =
        (2 * (C29991 * C30534 + C30456 * ae) +
         C29991 * (C30534 + C29991 * (C29991 * C30161 * C30065 + C30535 * ae) +
                   C29991 * C30535 * ae) +
         (C30456 + C30535 * C30203) * ae) /
        C29949;
    const double C1150 = C30161 * C30377 + C30456 * C30203;
    const double C2224 =
        2 * C29991 * C30456 + C29991 * (C30456 + C30535 * C30203);
    const double C5230 = C4559 * C1165;
    const double C14865 = C13227 * C1165;
    const double C4705 = C4559 * C1016;
    const double C14663 = C13227 * C1016;
    const double C5232 = C4559 * C1153;
    const double C14869 = C13227 * C1153;
    const double C9231 = C4559 * C1844;
    const double C21305 = C13227 * C1844;
    const double C30660 = C29991 * C30656;
    const double C1175 =
        (C30013 + C30027 * C30170 +
         C29991 * (C29991 * (C30027 + C30049 * C30170) + C30478 * ae) +
         C29991 * C30478 * ae) /
        C29949;
    const double C1549 =
        (C29991 * (2 * C30161 * C30027 + C30161 * (C30027 + C30049 * C30170)) +
         (2 * C30458 + C30161 * C30478) * ae) /
        C29949;
    const double C5874 =
        (C29991 * (3 * C30571 +
                   C30161 * (2 * C30161 * C30049 +
                             C30161 * (C30049 + C29992 * C30061 * C30170))) +
         (3 * C30478 +
          C30161 * (2 * C30532 + C30161 * (C30117 + C30139 * C30170))) *
             ae) /
        C29949;
    const double C6556 =
        (2 * (C29991 * C30571 + C30478 * ae) +
         C29991 * (C30571 +
                   C29991 * (C29991 * (C30049 + C29992 * C30061 * C30170) +
                             C30598 * ae) +
                   C29991 * C30598 * ae) +
         (C30478 + C30598 * C30203) * ae) /
        C29949;
    const double C1020 = 3 * (C30375 + C30103 * C30170) +
                         C30161 * (2 * C30458 + C30161 * C30478);
    const double C1157 = C30375 + C30103 * C30170 + C30478 * C30203;
    const double C1543 = C29991 * (2 * C30458 + C30161 * C30478);
    const double C6554 =
        2 * C29991 * C30478 + C29991 * (C30478 + C30598 * C30203);
    const double C1860 =
        (3 * (C30013 + C29991 * C30511 + C30509 * ae) +
         C29991 * (2 * C30511 +
                   C29991 * (C30027 + C29991 * (C29991 * C30049 + C30120) +
                             C29991 * C30117 * ae) +
                   C30512 * ae) +
         (2 * C30509 + C29991 * C30512) * ae) /
        C29949;
    const double C1848 = 3 * (C30375 + C30103 * C30203) +
                         C29991 * (2 * C30509 + C29991 * C30512);
    const double C30649 = C30647 + C30644;
    const double C10687 = C4559 * C2229;
    const double C15859 = C13227 * C2229;
    const double C10689 = C4559 * C2223;
    const double C15863 = C13227 * C2223;
    const double C30125 = C30101 + C30124;
    const double C30187 = C30106 + C30186;
    const double C30213 = C30106 + C30211;
    const double C30281 = 2 * C30229;
    const double C30326 = ae * C30229;
    const double C30325 = C29991 * C30229;
    const double C2232 =
        (2 * (ae * C30176 + C29991 * C30228) + ae * (C30176 + C30229 * C30203) +
         C29991 * (C30228 + ae * C29991 * C30229 +
                   C29991 * (ae * C30229 + C29991 * C30161 * C30064))) /
        C29951;
    const double C2226 =
        (2 * C29991 * C30176 + C29991 * (C30176 + C30229 * C30203)) / C29949;
    const double C30340 = 2 * C30334;
    const double C30338 = ae * C30334;
    const double C30633 = C30021 + C30631;
    const double C30553 = C30549 + C30552;
    const double C30592 = C30588 + C30589;
    const double C6661 = C4559 * C6281;
    const double C6663 = C4559 * C6278;
    const double C6284 =
        (3 * (C30528 + C29991 * C30584 + C30582 * ae) +
         C29991 * (2 * C30584 +
                   C29991 * (C30542 +
                             C29991 * (C29991 * C30161 * C30037 + C30560 * ae) +
                             C29991 * C30560 * ae) +
                   C30585 * ae) +
         (2 * C30582 + C29991 * C30585) * ae) /
        C29949;
    const double C6279 = 3 * (C30460 + C30529 * C30203) +
                         C29991 * (2 * C30582 + C29991 * C30585);
    const double C30677 = C29991 * C30675;
    const double C30616 = C30612 + C30614;
    const double C30069 = C30057 + C30067;
    const double C30068 = C30059 + C30066;
    const double C30262 = C30040 + C30261;
    const double C30329 = C29991 * C30327;
    const double C30339 = C30335 + C30336;
    const double C5720 = C30772 * C1038;
    const double C14332 = C13223 * C1038;
    const double C30242 = C30239 + C30241;
    const double C30278 = C30275 + C30276;
    const double C6662 = C30772 * C6287;
    const double C30318 = C30315 + C30316;
    const double C30359 = C29991 * C30357;
    const double C30149 = C30115 + C30147;
    const double C30283 = C30122 + C30282;
    const double C30330 = C30328 * C30203;
    const double C30341 = C30122 + C30337;
    const double C30257 = C30254 + C30256;
    const double C30279 = C30246 + C30277;
    const double C30319 = C30313 + C30317;
    const double C30360 = C29991 * C30358;
    const double C134 = (4 * (2 * C30013 + C29992 * C30025) +
                         C29992 * (3 * C30025 + C29992 * C30045)) /
                        C29949;
    const double C285 =
        (2 * C30013 + C29992 * C30025 + C30045 * C30170) / C29949;
    const double C287 = (C30161 * (3 * C30025 + C29992 * C30045)) / C29949;
    const double C5438 =
        (5 * (3 * C30538 + C30161 * C30547) +
         C30161 * (4 * C30547 +
                   C30161 * (3 * C30545 +
                             C30161 * (2 * C30161 * C30037 +
                                       C30161 * (C30037 + C30061 * C30170))))) /
        C29949;
    const double C5436 = (4 * (2 * C30178 + C30161 * C30184) +
                          C30161 * (3 * C30184 + C30161 * C30248)) /
                         C29949;
    const double C5573 =
        (2 * C30178 + C30161 * C30184 + C30248 * C30203) / C29949;
    const double C5575 = (C29991 * (3 * C30184 + C30161 * C30248)) / C29949;
    const double C10906 = C30772 * C6283;
    const double C10519 = (4 * (2 * C30200 + C29991 * C30206) +
                           C29991 * (3 * C30206 + C29991 * C30301)) /
                          C29949;
    const double C30150 = C30148 * ae;
    const double C30386 = C29992 * C30148;
    const double C30521 = C30161 * C30148;
    const double C1176 =
        (C30025 + C30041 * C30170 +
         C29991 * (C29991 * (C30041 + C30065 * C30170) + C30481 * ae) +
         C29991 * C30481 * ae) /
        C29949;
    const double C1550 =
        (C29991 * (2 * C30161 * C30041 + C30161 * (C30041 + C30065 * C30170)) +
         (2 * C30456 + C30161 * C30481) * ae) /
        C29949;
    const double C1021 = 3 * (C30377 + C30121 * C30170) +
                         C30161 * (2 * C30456 + C30161 * C30481);
    const double C1158 = C30377 + C30121 * C30170 + C30481 * C30203;
    const double C1544 = C29991 * (2 * C30456 + C30161 * C30481);
    const double C1849 = 3 * (C30377 + C30121 * C30203) +
                         C29991 * (2 * C30515 + C29991 * C30518);
    const double C30600 = C30596 + C30599;
    const double C10682 = 3 * (C30458 + C30532 * C30203) +
                          C29991 * (2 * C30645 + C29991 * C30650);
    const double C30663 = C30659 + C30661;
    const double C30566 = C30161 * C30565;
    const double C6280 = 3 * (C30475 + C30551 * C30203) +
                         C29991 * (2 * C30590 + C29991 * C30593);
    const double C30636 = C29991 * C30634;
    const double C30680 = C30674 + C30678;
    const double C30803 = C30799 - C30802;
    const double C31131 = C31101 / C30789;
    const double C30812 = C30808 - C30811;
    const double C31145 = C31130 / C30793;
    const double C30885 = C30880 - C30884;
    const double C31135 = C31109 / C30789;
    const double C30892 = C30888 - C30891;
    const double C31149 = C31138 / C30793;
    const double C30927 = C30922 - C30926;
    const double C31137 = C31112 / C30789;
    const double C30934 = C30930 - C30933;
    const double C31151 = C31141 / C30793;
    const double C4732 = C4714 * C31023;
    const double C24644 = C4714 * C18916;
    const double C4731 = C4713 * C116;
    const double C24643 = C4713 * C18918;
    const double C4730 = C4712 * C116;
    const double C25509 = C4712 * C18918;
    const double C4729 = C4711 * C31023;
    const double C25510 = C4711 * C18916;
    const double C4728 = C4710 * C31023;
    const double C24641 = C4710 * C18916;
    const double C4727 = C4709 * C116;
    const double C24642 = C4709 * C18918;
    const double C4726 = C4708 * C31023;
    const double C24636 = C4708 * C18916;
    const double C4725 = C4707 * C116;
    const double C24635 = C4707 * C18918;
    const double C5253 = C5241 * C116;
    const double C24637 = C5241 * C18919;
    const double C25272 = C5241 * C18918;
    const double C5252 = C5240 * C31023;
    const double C24638 = C5240 * C18917;
    const double C25271 = C5240 * C18916;
    const double C5251 = C5239 * C116;
    const double C24640 = C5239 * C18919;
    const double C25667 = C5239 * C18918;
    const double C5250 = C5238 * C31023;
    const double C24639 = C5238 * C18917;
    const double C25668 = C5238 * C18916;
    const double C5456 = C5452 * C31023;
    const double C25515 = C5452 * C18916;
    const double C4719 = C4695 + C4696;
    const double C13439 = C13407 + C13408;
    const double C13432 = C13393 + C13394;
    const double C4715 = C4687 + C4688;
    const double C13435 = C13399 + C13400;
    const double C13429 = C13387 + C13388;
    const double C9245 = C9221 + C9222;
    const double C19277 = C19245 + C19246;
    const double C19270 = C19231 + C19232;
    const double C9241 = C9213 + C9214;
    const double C19273 = C19237 + C19238;
    const double C19267 = C19225 + C19226;
    const double C5242 = C5222 + C5223;
    const double C14087 = C14067 + C14068;
    const double C14085 = C14063 + C14064;
    const double C5608 = C5600 * C31023;
    const double C25269 = C5600 * C18917;
    const double C25664 = C5600 * C18916;
    const double C5607 = C5599 * C116;
    const double C25270 = C5599 * C18919;
    const double C25663 = C5599 * C18918;
    const double C143 =
        (4 * (2 * C30024 + ae * C30025 + C29992 * C30044) +
         ae * (3 * C30025 + C29992 * C30045) +
         C29992 * (3 * C30044 + ae * C30045 +
                   C29992 * (2 * C30040 + ae * C30041 +
                             C29992 * (C30036 + ae * C29992 * C30037 +
                                       C29992 * (ae * C30037 +
                                                 C29992 * std::pow(C29996, 7) *
                                                     bs[7] * C30002))))) /
        C29951;
    const double C296 = (C30010 + ae * C30013 + C29992 * C30024 +
                         C30044 * std::pow(yP - yQ, 2)) /
                        C29951;
    const double C297 =
        ((yP - yQ) * (2 * C30024 + ae * C30025 + C29992 * C30044)) / C29951;
    const double C5453 = C5447 + C5448;
    const double C30617 = C30615 + C30610;
    const double C4720 = C4697 + C4698;
    const double C13441 = C13411 + C13412;
    const double C13434 = C13397 + C13398;
    const double C4716 = C4689 + C4690;
    const double C13437 = C13403 + C13404;
    const double C13427 = C13383 + C13384;
    const double C9246 = C9223 + C9224;
    const double C19279 = C19249 + C19250;
    const double C19272 = C19235 + C19236;
    const double C9242 = C9215 + C9216;
    const double C19275 = C19241 + C19242;
    const double C19265 = C19221 + C19222;
    const double C5243 = C5224 + C5225;
    const double C14089 = C14071 + C14072;
    const double C14083 = C14059 + C14060;
    const double C4718 = C4693 + C4694;
    const double C14342 = C14329 + C14330;
    const double C14668 = C14661 + C14662;
    const double C30109 = C30108 + C30105;
    const double C6446 = C30772 * C1178;
    const double C14500 = C13223 * C1178;
    const double C15590 = C13222 * C1178;
    const double C6448 = C30772 * C1163;
    const double C14496 = C13223 * C1163;
    const double C15594 = C13222 * C1163;
    const double C5245 = C5228 + C5229;
    const double C14524 = C14507 + C14508;
    const double C14874 = C14867 + C14868;
    const double C9244 = C9219 + C9220;
    const double C20972 = C20959 + C20960;
    const double C21310 = C21303 + C21304;
    const double C4717 = C4691 + C4692;
    const double C14340 = C14325 + C14326;
    const double C14670 = C14665 + C14666;
    const double C5244 = C5226 + C5227;
    const double C14522 = C14503 + C14504;
    const double C14876 = C14871 + C14872;
    const double C9243 = C9217 + C9218;
    const double C20970 = C20955 + C20956;
    const double C21312 = C21307 + C21308;
    const double C5602 = C5589 + C5590;
    const double C14526 = C14511 + C14512;
    const double C5604 = C5593 + C5594;
    const double C15016 = C15009 + C15010;
    const double C5451 = C5443 + C5444;
    const double C14346 = C14337 + C14338;
    const double C5601 = C5587 + C5588;
    const double C14528 = C14515 + C14516;
    const double C5603 = C5591 + C5592;
    const double C15018 = C15013 + C15014;
    const double C10534 = C10527 + C10528;
    const double C20974 = C20963 + C20964;
    const double C10533 = C10525 + C10526;
    const double C20976 = C20967 + C20968;
    const double C10904 = C30772 * C6288;
    const double C6675 = C6671 * C31023;
    const double C25666 = C6671 * C18917;
    const double C26975 = C6671 * C18916;
    const double C6676 = C6672 * C116;
    const double C25665 = C6672 * C18919;
    const double C26976 = C6672 * C18918;
    const double C10522 =
        (4 * (2 * C30204 + ae * C30206 + C29991 * C30300) +
         ae * (3 * C30206 + C29991 * C30301) +
         C29991 *
             (3 * C30300 + ae * C30301 +
              C29991 * (2 * C30294 + ae * C30296 +
                        C29991 * (C30036 + ae * C29991 * C30115 +
                                  C29991 * (ae * C30115 + C29991 * C30060))))) /
        C29951;
    const double C1861 =
        (3 * (C30025 + C29991 * C30517 + C30515 * ae) +
         C29991 * (2 * C30517 +
                   C29991 * (C30041 + C29991 * (C29991 * C30065 + C30145) +
                             C29991 * C30143 * ae) +
                   C30518 * ae) +
         (2 * C30515 + C29991 * C30518) * ae) /
        C29949;
    const double C9229 = C4559 * C1850;
    const double C21301 = C13227 * C1850;
    const double C438 =
        (2 * C30013 + C29992 * C30025 +
         C29991 * (C29991 * C30045 + C30383 * ae) + C29991 * C30383 * ae) /
        C29949;
    const double C440 = (C29991 * (3 * C30025 + C29992 * C30045) +
                         (3 * C30377 + C29992 * C30383) * ae) /
                        C29949;
    const double C823 =
        (C29991 * C30161 * C30045 + C30161 * C30383 * ae) / C29949;
    const double C122 = 4 * (2 * C30375 + C29992 * C30377) +
                        C29992 * (3 * C30377 + C29992 * C30383);
    const double C268 = 2 * C30375 + C29992 * C30377 + C30383 * C30170;
    const double C269 = C30161 * (3 * C30377 + C29992 * C30383);
    const double C421 = 2 * C30375 + C29992 * C30377 + C30383 * C30203;
    const double C422 = C29991 * (3 * C30377 + C29992 * C30383);
    const double C815 = C29991 * C30161 * C30383;
    const double C1290 =
        2 * C30161 * C30383 + C30161 * (C30383 + C30148 * C30170);
    const double C1440 = C29991 * (C30383 + C30148 * C30170);
    const double C2120 =
        2 * C29991 * C30383 + C29991 * (C30383 + C30148 * C30203);
    const double C9607 = C4559 * C1159;
    const double C15587 = C13227 * C1159;
    const double C9605 = C4559 * C1150;
    const double C15591 = C13227 * C1150;
    const double C30662 = C30027 + C30660;
    const double C6441 = C4559 * C1175;
    const double C14509 = C13227 * C1175;
    const double C5878 = C4559 * C1549;
    const double C15007 = C13227 * C1549;
    const double C5721 = C4559 * C1020;
    const double C14335 = C13227 * C1020;
    const double C6443 = C4559 * C1157;
    const double C14513 = C13227 * C1157;
    const double C5880 = C4559 * C1543;
    const double C15011 = C13227 * C1543;
    const double C10795 = C4559 * C1860;
    const double C20961 = C13227 * C1860;
    const double C10797 = C4559 * C1848;
    const double C20965 = C13227 * C1848;
    const double C10684 =
        (3 * (C30531 + C29991 * C30649 + C30645 * ae) +
         C29991 * (2 * C30649 +
                   C29991 * (C30643 +
                             C29991 * (C29991 * C30161 * C29992 * C30061 +
                                       C30646 * ae) +
                             C29991 * C30646 * ae) +
                   C30650 * ae) +
         (2 * C30645 + C29991 * C30650) * ae) /
        C29949;
    const double C30126 = C30125 + C30120;
    const double C1184 =
        (C30024 + C30040 * C30170 + ae * C29991 * C30187 +
         C29991 * (ae * C30187 + C29991 * (C30040 + C30064 * C30170))) /
        C29951;
    const double C1552 =
        (ae * (2 * C30176 + C30161 * C30187) +
         C29991 * (2 * C30161 * C30040 + C30161 * (C30040 + C30064 * C30170))) /
        C29951;
    const double C1029 = (3 * (C30097 + C30106 * C30170) +
                          C30161 * (2 * C30176 + C30161 * C30187)) /
                         C29949;
    const double C1172 = (C30097 + C30106 * C30170 + C30187 * C30203) / C29949;
    const double C1546 = (C29991 * (2 * C30176 + C30161 * C30187)) / C29949;
    const double C1866 =
        (3 * (C30024 + ae * C30208 + C29991 * C30212) +
         ae * (2 * C30208 + C29991 * C30213) +
         C29991 * (2 * C30212 + ae * C30213 +
                   C29991 * (C30040 + ae * C29991 * C30122 +
                             C29991 * (ae * C30122 + C29991 * C30064)))) /
        C29951;
    const double C1857 = (3 * (C30097 + C30106 * C30203) +
                          C29991 * (2 * C30208 + C29991 * C30213)) /
                         C29949;
    const double C10688 = C30772 * C2232;
    const double C15860 = C13223 * C2232;
    const double C10690 = C30772 * C2226;
    const double C15864 = C13223 * C2226;
    const double C30342 = C30040 + C30338;
    const double C30635 = C30633 + C30628;
    const double C5572 =
        (2 * C30528 + C30161 * C30538 +
         C29991 * (C29991 * C30547 + C30553 * ae) + C29991 * C30553 * ae) /
        C29949;
    const double C5574 = (C29991 * (3 * C30538 + C30161 * C30547) +
                          (3 * C30475 + C30161 * C30553) * ae) /
                         C29949;
    const double C6658 =
        (2 * (C29991 * C30547 + C30553 * ae) +
         C29991 * (C30547 +
                   C29991 * (C29991 * (2 * C30161 * C30037 +
                                       C30161 * (C30037 + C30061 * C30170)) +
                             C30565 * ae) +
                   C29991 * C30565 * ae) +
         (C30553 + C30565 * C30203) * ae) /
        C29949;
    const double C5433 = 4 * (2 * C30460 + C30161 * C30475) +
                         C30161 * (3 * C30475 + C30161 * C30553);
    const double C5569 = 2 * C30460 + C30161 * C30475 + C30553 * C30203;
    const double C5570 = C29991 * (3 * C30475 + C30161 * C30553);
    const double C6656 =
        2 * C29991 * C30553 + C29991 * (C30553 + C30565 * C30203);
    const double C6286 =
        (3 * (C30538 + C29991 * C30592 + C30590 * ae) +
         C29991 * (2 * C30592 +
                   C29991 * (C30545 +
                             C29991 * (C29991 * (C30037 + C30061 * C30170) +
                                       C30563 * ae) +
                             C29991 * C30563 * ae) +
                   C30593 * ae) +
         (2 * C30590 + C29991 * C30593) * ae) /
        C29949;
    const double C6670 = C6663 + C6664;
    const double C10903 = C4559 * C6284;
    const double C10905 = C4559 * C6279;
    const double C30679 = C30542 + C30677;
    const double C10516 = 4 * (2 * C30503 + C29991 * C30506) +
                          C29991 * (3 * C30506 + C29991 * C30616);
    const double C30071 = C29992 * C30069;
    const double C1292 =
        (2 * C30161 * C30045 + C30161 * (C30045 + C30069 * C30170)) / C29949;
    const double C1442 = (C29991 * (C30045 + C30069 * C30170) +
                          (C30383 + C30148 * C30170) * ae) /
                         C29949;
    const double C30070 = C29992 * C30068;
    const double C30217 = C29991 * C30068;
    const double C30231 = C30161 * C30068;
    const double C1034 = (2 * C30161 * C30044 +
                          C30161 * (C30044 + C30068 * std::pow(C30161, 2))) /
                         C29951;
    const double C1039 =
        (3 * (C30044 + C30068 * C30170) +
         C30161 * (2 * C30161 * C30068 +
                   C30161 * (C30068 + (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)) *
                                          C30170))) /
        C29951;
    const double C5716 =
        (4 * (2 * C30228 + C30161 * C30262) +
         C30161 * (3 * C30262 +
                   C30161 * (2 * C30161 * C30064 +
                             C30161 * (C30064 + (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002) *
                                                    C30170)))) /
        C29951;
    const double C5875 =
        (ae * (3 * C30187 +
               C30161 * (2 * C30229 + C30161 * (C30122 + C30144 * C30170))) +
         C29991 * (3 * C30262 +
                   C30161 * (2 * C30161 * C30064 +
                             C30161 * (C30064 + (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002) *
                                                    C30170)))) /
        C29951;
    const double C30331 = C30326 + C30329;
    const double C30343 = C29991 * C30339;
    const double C5723 = C5719 + C5720;
    const double C14343 = C14331 + C14332;
    const double C5440 =
        (5 * (3 * C30235 + C30161 * C30242) +
         C30161 * (4 * C30242 +
                   C30161 * (3 * C30240 +
                             C30161 * (2 * C30161 * C30060 +
                                       C30161 * (C30060 + std::pow(C29994, 8) *
                                                              bs[8] * C30002 *
                                                              C30170))))) /
        C29951;
    const double C5578 = (2 * C30225 + C30161 * C30235 + ae * C29991 * C30248 +
                          C29991 * (ae * C30248 + C29991 * C30242)) /
                         C29951;
    const double C5579 = (ae * (3 * C30184 + C30161 * C30248) +
                          C29991 * (3 * C30235 + C30161 * C30242)) /
                         C29951;
    const double C6669 = C6661 + C6662;
    const double C30320 = C29991 * C30318;
    const double C30361 = C30356 + C30359;
    const double C30151 = C30149 + C30142;
    const double C30284 = C30161 * C30283;
    const double C6557 =
        (2 * (ae * C30187 + C29991 * C30262) + ae * (C30187 + C30283 * C30203) +
         C29991 * (C30262 + ae * C29991 * C30283 +
                   C29991 * (ae * C30283 +
                             C29991 * (C30064 + (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002) *
                                                    C30170)))) /
        C29951;
    const double C6555 =
        (2 * C29991 * C30187 + C29991 * (C30187 + C30283 * C30203)) / C29949;
    const double C30332 = C30229 + C30330;
    const double C30344 = C29991 * C30341;
    const double C30258 = C30161 * C30257;
    const double C6659 =
        (2 * (ae * C30248 + C29991 * C30242) + ae * (C30248 + C30257 * C30203) +
         C29991 * (C30242 + ae * C29991 * C30257 +
                   C29991 * (ae * C30257 +
                             C29991 * (2 * C30161 * C30060 +
                                       C30161 * (C30060 + std::pow(C29994, 8) *
                                                              bs[8] * C30002 *
                                                              C30170))))) /
        C29951;
    const double C6657 =
        (2 * C29991 * C30248 + C29991 * (C30248 + C30257 * C30203)) / C29949;
    const double C6289 =
        (3 * (C30235 + ae * C30274 + C29991 * C30278) +
         ae * (2 * C30274 + C29991 * C30279) +
         C29991 * (2 * C30278 + ae * C30279 +
                   C29991 * (C30240 + ae * C29991 * C30255 +
                             C29991 * (ae * C30255 +
                                       C29991 * (C30060 + std::pow(C29994, 8) *
                                                              bs[8] * C30002 *
                                                              C30170))))) /
        C29951;
    const double C6285 = (3 * (C30184 + C30246 * C30203) +
                          C29991 * (2 * C30274 + C29991 * C30279)) /
                         C29949;
    const double C30321 = C29991 * C30319;
    const double C30362 = C30354 + C30360;
    const double C4960 = C4559 * C285;
    const double C13415 = C13227 * C285;
    const double C13729 = C13227 * C287;
    const double C5450 = C30772 * C5436;
    const double C5598 = C30772 * C5573;
    const double C5992 = C30772 * C5575;
    const double C10532 = C30772 * C10519;
    const double C2122 =
        (2 * (C29991 * C30045 + C30383 * ae) +
         C29991 * (C30045 + C29991 * (C29991 * C30069 + C30150) +
                   C29991 * C30148 * ae) +
         (C30383 + C30148 * C30203) * ae) /
        C29949;
    const double C30387 = C30385 + C30386;
    const double C2016 =
        (C30161 * C30045 + C29991 * (C29991 * C30161 * C30069 + C30521 * ae) +
         C29991 * C30521 * ae) /
        C29949;
    const double C2014 = C30161 * C30383 + C30521 * C30203;
    const double C6438 =
        (2 * C30531 + C30161 * C30571 +
         C29991 * (C29991 * (2 * C30161 * C30049 +
                             C30161 * (C30049 + C29992 * C30061 * C30170)) +
                   C30600 * ae) +
         C29991 * C30600 * ae) /
        C29949;
    const double C5713 = 4 * (2 * C30458 + C30161 * C30478) +
                         C30161 * (3 * C30478 + C30161 * C30600);
    const double C5872 = C29991 * (3 * C30478 + C30161 * C30600);
    const double C6436 = 2 * C30458 + C30161 * C30478 + C30600 * C30203;
    const double C10790 = 4 * (2 * C30509 + C29991 * C30512) +
                          C29991 * (3 * C30512 + C29991 * C30663);
    const double C30567 = C30559 + C30566;
    const double C30638 = C30626 + C30636;
    const double C10898 = 4 * (2 * C30582 + C29991 * C30585) +
                          C29991 * (3 * C30585 + C29991 * C30680);
    const double C31064 = C30803 * C30791;
    const double C31103 = C31069 + C30803;
    const double C31072 = C30812 / C30793;
    const double C31068 = C30812 * C30791;
    const double C554 = C31145 - (C30803 * C30794) / C30789;
    const double C31082 = C30885 * C30879;
    const double C31118 = C31084 + C30885;
    const double C31086 = C30892 / C30793;
    const double C31083 = C30892 * C30879;
    const double C1284 = C31149 - (C30885 * C30881) / C30789;
    const double C31088 = C30927 * C30921;
    const double C31124 = C31090 + C30927;
    const double C31092 = C30934 / C30793;
    const double C31089 = C30934 * C30921;
    const double C2116 = C31151 - (C30927 * C30923) / C30789;
    const double C5442 = C4729 + C4730;
    const double C4743 = C4727 + C4728;
    const double C5582 = C5250 + C5251;
    const double C4737 = C4719 * C116;
    const double C24651 = C4719 * C18918;
    const double C4733 = C4715 * C116;
    const double C24647 = C4715 * C18918;
    const double C5254 = C5242 * C116;
    const double C24645 = C5242 * C18919;
    const double C25273 = C5242 * C18918;
    const double C4702 = C30772 * C296;
    const double C13418 = C13222 * C296;
    const double C13406 = C13223 * C296;
    const double C4957 = C30772 * C297;
    const double C13414 = C13223 * C297;
    const double C13728 = C13222 * C297;
    const double C5457 = C5453 * C31023;
    const double C10518 =
        (4 * (2 * C30505 + C29991 * C30617 + C30506 * ae) +
         C29991 *
             (3 * C30617 +
              C29991 * (2 * C30609 +
                        C29991 * (C30021 + C29991 * (C29991 * C30037 + C30116) +
                                  C29991 * C30114 * ae) +
                        C30611 * ae) +
              C30616 * ae) +
         (3 * C30506 + C29991 * C30616) * ae) /
        C29949;
    const double C4738 = C4720 * C31023;
    const double C24652 = C4720 * C18916;
    const double C4734 = C4716 * C31023;
    const double C24648 = C4716 * C18916;
    const double C5255 = C5243 * C31023;
    const double C24646 = C5243 * C18917;
    const double C25274 = C5243 * C18916;
    const double C4736 = C4718 * C31023;
    const double C25807 = C4718 * C18916;
    const double C449 =
        (C30010 + ae * C30013 + C29992 * C30024 + ae * C29991 * C30109 +
         C29991 * (ae * C30109 + C29991 * C30044)) /
        C29951;
    const double C450 =
        (ae * (2 * C30097 + C29992 * C30109 + (C30086 + C30100 * C30017) * ae) +
         C29991 * (2 * C30024 + ae * C30025 + C29992 * C30044)) /
        C29951;
    const double C829 =
        (ae * C30161 * C30109 + C29991 * C30161 * C30044) / C29951;
    const double C132 = (3 * (C30091 + C29992 * C30097 + C30375 * ae) +
                         C29992 * (2 * C30097 + C29992 * C30109 + C30377 * ae) +
                         (2 * C30375 + C29992 * C30377) * ae) /
                        C29949;
    const double C279 =
        (C30091 + C29992 * C30097 + C30375 * ae + C30109 * C30170) / C29949;
    const double C283 =
        (C30161 * (2 * C30097 + C29992 * C30109 + C30377 * ae)) / C29949;
    const double C432 =
        (C30091 + C29992 * C30097 + C30375 * ae + C30109 * C30203) / C29949;
    const double C436 =
        (C29991 * (2 * C30097 + C29992 * C30109 + C30377 * ae)) / C29949;
    const double C819 = (C29991 * C30161 * C30109) / C29949;
    const double C6451 = C6445 + C6446;
    const double C14520 = C14499 + C14500;
    const double C15596 = C15589 + C15590;
    const double C6452 = C6447 + C6448;
    const double C14518 = C14495 + C14496;
    const double C15598 = C15593 + C15594;
    const double C5257 = C5245 * C31023;
    const double C24650 = C5245 * C18917;
    const double C26005 = C5245 * C18916;
    const double C4735 = C4717 * C116;
    const double C25808 = C4717 * C18918;
    const double C5256 = C5244 * C116;
    const double C24649 = C5244 * C18919;
    const double C26006 = C5244 * C18918;
    const double C5610 = C5602 * C31023;
    const double C25673 = C5602 * C18916;
    const double C25670 = C5602 * C18917;
    const double C5612 = C5604 * C31023;
    const double C25512 = C5604 * C18917;
    const double C26139 = C5604 * C18916;
    const double C5455 = C5451 * C116;
    const double C25516 = C5451 * C18918;
    const double C5609 = C5601 * C116;
    const double C25674 = C5601 * C18918;
    const double C25669 = C5601 * C18919;
    const double C5611 = C5603 * C116;
    const double C25511 = C5603 * C18919;
    const double C26140 = C5603 * C18918;
    const double C10530 = C30772 * C10522;
    const double C9453 = C4559 * C438;
    const double C19253 = C13227 * C438;
    const double C19551 = C13227 * C440;
    const double C14075 = C13227 * C823;
    const double C24939 = C4559 * C823;
    const double C4958 = C4559 * C268;
    const double C13419 = C13227 * C268;
    const double C13725 = C13227 * C269;
    const double C9451 = C4559 * C421;
    const double C19257 = C13227 * C421;
    const double C19547 = C13227 * C422;
    const double C14079 = C13227 * C815;
    const double C24937 = C4559 * C815;
    const double C30664 = C30662 + C30657;
    const double C30127 = C29992 * C30126;
    const double C30132 = 3 * C30126;
    const double C30174 = C30161 * C30126;
    const double C30216 = ae * C30126;
    const double C30215 = C29991 * C30126;
    const double C1180 = (ae * (C30109 + C30126 * C30170) +
                          C29991 * (C30044 + C30068 * C30170)) /
                         C29951;
    const double C1862 = (2 * (ae * C30109 + C29991 * C30044) +
                          ae * (C30109 + C30126 * std::pow(C29991, 2)) +
                          C29991 * (C30044 + ae * C29991 * C30126 +
                                    C29991 * (ae * C30126 + C29991 * C30068))) /
                         C29951;
    const double C1025 =
        (2 * C30161 * C30109 + C30161 * (C30109 + C30126 * C30170)) / C29949;
    const double C1168 = (C29991 * (C30109 + C30126 * C30170)) / C29949;
    const double C1853 =
        (2 * C29991 * C30109 + C29991 * (C30109 + C30126 * C30203)) / C29949;
    const double C6442 = C30772 * C1184;
    const double C14510 = C13223 * C1184;
    const double C5879 = C30772 * C1552;
    const double C15008 = C13223 * C1552;
    const double C5722 = C30772 * C1029;
    const double C14336 = C13223 * C1029;
    const double C6444 = C30772 * C1172;
    const double C14514 = C13223 * C1172;
    const double C5881 = C30772 * C1546;
    const double C15012 = C13223 * C1546;
    const double C10796 = C30772 * C1866;
    const double C20962 = C13223 * C1866;
    const double C10798 = C30772 * C1857;
    const double C20966 = C13223 * C1857;
    const double C10691 = C10687 + C10688;
    const double C15867 = C15859 + C15860;
    const double C10692 = C10689 + C10690;
    const double C15869 = C15863 + C15864;
    const double C30637 = C29991 * C30635;
    const double C5595 = C4559 * C5572;
    const double C5989 = C4559 * C5574;
    const double C5449 = C4559 * C5433;
    const double C5597 = C4559 * C5569;
    const double C5991 = C4559 * C5570;
    const double C6674 = C6670 * C116;
    const double C25672 = C6670 * C18919;
    const double C10907 = C10903 + C10904;
    const double C10908 = C10905 + C10906;
    const double C30681 = C30679 + C30672;
    const double C10531 = C4559 * C10516;
    const double C30073 = C30053 + C30071;
    const double C30072 = C30054 + C30070;
    const double C4704 = C30772 * C1034;
    const double C14660 = C13223 * C1034;
    const double C30345 = C30342 + C30343;
    const double C5725 = C5723 * C31023;
    const double C5596 = C30772 * C5578;
    const double C5990 = C30772 * C5579;
    const double C6673 = C6669 * C31023;
    const double C25671 = C6669 * C18917;
    const double C30322 = C30310 + C30320;
    const double C30152 = C29992 * C30151;
    const double C30189 = C30151 * C30170;
    const double C30218 = C30151 * C30203;
    const double C30232 = C30161 * C30151;
    const double C30285 = C30281 + C30284;
    const double C10685 =
        (3 * (C30228 + ae * C30325 + C29991 * C30331) +
         ae * (2 * C30325 + C29991 * C30332) +
         C29991 * (2 * C30331 + ae * C30332 +
                   C29991 * (C30327 + ae * C29991 * C30328 +
                             C29991 * (ae * C30328 +
                                       C29991 * C30161 *
                                           (ae * C30061 +
                                            C29992 * std::pow(C29994, 8) *
                                                bs[8] * C30002))))) /
        C29951;
    const double C10683 = (3 * (C30176 + C30229 * C30203) +
                           C29991 * (2 * C30325 + C29991 * C30332)) /
                          C29949;
    const double C30346 = C30340 + C30344;
    const double C30259 = C30251 + C30258;
    const double C30323 = C30308 + C30321;
    const double C10901 =
        (4 * (2 * C30271 + ae * C30272 + C29991 * C30361) +
         ae * (3 * C30272 + C29991 * C30362) +
         C29991 * (3 * C30361 + ae * C30362 +
                   C29991 * (2 * C30357 + ae * C30358 +
                             C29991 * (C30350 + ae * C29991 * C30351 +
                                       C29991 * (ae * C30351 +
                                                 C29991 * C30161 *
                                                     std::pow(C29994, 8) *
                                                     bs[8] * C30002))))) /
        C29951;
    const double C10899 = (4 * (2 * C30267 + C29991 * C30272) +
                           C29991 * (3 * C30272 + C29991 * C30362)) /
                          C29949;
    const double C123 = 5 * (3 * C30377 + C29992 * C30383) +
                        C29992 * (4 * C30383 + C29992 * C30387);
    const double C270 = 3 * C30377 + C29992 * C30383 + C30387 * C30170;
    const double C423 = 3 * C30377 + C29992 * C30383 + C30387 * C30203;
    const double C558 = C30161 * (4 * C30383 + C29992 * C30387);
    const double C662 = C29991 * (4 * C30383 + C29992 * C30387);
    const double C816 = C29991 * C30161 * C30387;
    const double C5577 =
        (3 * C30538 + C30161 * C30547 +
         C29991 * (C29991 * (3 * C30545 +
                             C30161 * (2 * C30161 * C30037 +
                                       C30161 * (C30037 + C30061 * C30170))) +
                   C30567 * ae) +
         C29991 * C30567 * ae) /
        C29949;
    const double C5985 =
        (C29991 * (4 * C30547 +
                   C30161 * (3 * C30545 +
                             C30161 * (2 * C30161 * C30037 +
                                       C30161 * (C30037 + C30061 * C30170)))) +
         (4 * C30553 + C30161 * C30567) * ae) /
        C29949;
    const double C5434 = 5 * (3 * C30475 + C30161 * C30553) +
                         C30161 * (4 * C30553 + C30161 * C30567);
    const double C5571 = 3 * C30475 + C30161 * C30553 + C30567 * C30203;
    const double C5983 = C29991 * (4 * C30553 + C30161 * C30567);
    const double C10517 = 5 * (3 * C30506 + C29991 * C30616) +
                          C29991 * (4 * C30616 + C29991 * C30638);
    const double C31099 = C31064 / C30789;
    const double C31132 = C31103 / C30793;
    const double C31133 = C31105 + C31072;
    const double C556 = C31072 - C30810 / C30807;
    const double C31102 = C31068 / C30789;
    const double C31115 = C31082 / C30789;
    const double C31139 = C31118 / C30793;
    const double C31140 = C31119 + C31086;
    const double C1286 = C31086 - C30890 / C30807;
    const double C31117 = C31083 / C30789;
    const double C31121 = C31088 / C30789;
    const double C31142 = C31124 / C30793;
    const double C31143 = C31125 + C31092;
    const double C2118 = C31092 - C30932 / C30807;
    const double C31123 = C31089 / C30789;
    const double C4722 = C4701 + C4702;
    const double C13444 = C13417 + C13418;
    const double C13438 = C13405 + C13406;
    const double C4963 = C4956 + C4957;
    const double C13442 = C13413 + C13414;
    const double C13733 = C13727 + C13728;
    const double C10529 = C4559 * C10518;
    const double C4744 = C4734 + C4733;
    const double C9228 = C30772 * C449;
    const double C19256 = C13222 * C449;
    const double C19244 = C13223 * C449;
    const double C9450 = C30772 * C450;
    const double C19252 = C13223 * C450;
    const double C19550 = C13222 * C450;
    const double C5235 = C30772 * C829;
    const double C14078 = C13222 * C829;
    const double C14074 = C13223 * C829;
    const double C4700 = C30772 * C279;
    const double C13422 = C13222 * C279;
    const double C13402 = C13223 * C279;
    const double C4955 = C30772 * C283;
    const double C13410 = C13223 * C283;
    const double C13724 = C13222 * C283;
    const double C9226 = C30772 * C432;
    const double C19260 = C13222 * C432;
    const double C19240 = C13223 * C432;
    const double C9448 = C30772 * C436;
    const double C19248 = C13223 * C436;
    const double C19546 = C13222 * C436;
    const double C5237 = C30772 * C819;
    const double C14082 = C13222 * C819;
    const double C14070 = C13223 * C819;
    const double C6455 = C6451 * C31023;
    const double C25276 = C6451 * C18917;
    const double C26711 = C6451 * C18916;
    const double C6456 = C6452 * C116;
    const double C25275 = C6452 * C18919;
    const double C26712 = C6452 * C18918;
    const double C5718 = C4735 + C4736;
    const double C5877 = C5256 + C5257;
    const double C5459 = C5455 + C5456;
    const double C5615 = C5609 + C5610;
    const double C5988 = C5611 + C5612;
    const double C10792 =
        (4 * (2 * C30511 + C29991 * C30664 + C30512 * ae) +
         C29991 *
             (3 * C30664 +
              C29991 * (2 * C30656 +
                        C29991 * (C30049 +
                                  C29991 * (C29991 * C29992 * C30061 + C30142) +
                                  C29991 * C30139 * ae) +
                        C30658 * ae) +
              C30663 * ae) +
         (3 * C30512 + C29991 * C30663) * ae) /
        C29949;
    const double C30128 = C30112 + C30127;
    const double C1177 = (C30161 * C30044 + ae * C29991 * C30174 +
                          C29991 * (ae * C30174 + C29991 * C30161 * C30068)) /
                         C29951;
    const double C1162 = (C30161 * C30109 + C30174 * C30203) / C29949;
    const double C30219 = C30216 + C30217;
    const double C5231 = C30772 * C1180;
    const double C14866 = C13223 * C1180;
    const double C9230 = C30772 * C1862;
    const double C21302 = C13223 * C1862;
    const double C4706 = C30772 * C1025;
    const double C14664 = C13223 * C1025;
    const double C5233 = C30772 * C1168;
    const double C14870 = C13223 * C1168;
    const double C9232 = C30772 * C1853;
    const double C21306 = C13223 * C1853;
    const double C6449 = C6441 + C6442;
    const double C14525 = C14509 + C14510;
    const double C5882 = C5878 + C5879;
    const double C15015 = C15007 + C15008;
    const double C5724 = C5721 + C5722;
    const double C14345 = C14335 + C14336;
    const double C6450 = C6443 + C6444;
    const double C14527 = C14513 + C14514;
    const double C5883 = C5880 + C5881;
    const double C15017 = C15011 + C15012;
    const double C10799 = C10795 + C10796;
    const double C20973 = C20961 + C20962;
    const double C10800 = C10797 + C10798;
    const double C20975 = C20965 + C20966;
    const double C26709 = C10691 * C18917;
    const double C26710 = C10692 * C18919;
    const double C30639 = C30621 + C30637;
    const double C5454 = C5449 + C5450;
    const double C5606 = C5597 + C5598;
    const double C5994 = C5991 + C5992;
    const double C26973 = C10907 * C18917;
    const double C26974 = C10908 * C18919;
    const double C10900 =
        (4 * (2 * C30584 + C29991 * C30681 + C30585 * ae) +
         C29991 * (3 * C30681 +
                   C29991 * (2 * C30675 +
                             C29991 * (C30667 +
                                       C29991 * (C29991 * C30161 * C30061 +
                                                 C30670 * ae) +
                                       C29991 * C30670 * ae) +
                             C30676 * ae) +
                   C30680 * ae) +
         (3 * C30585 + C29991 * C30680) * ae) /
        C29949;
    const double C10536 = C10531 + C10532;
    const double C137 = (5 * (3 * C30025 + C29992 * C30045) +
                         C29992 * (4 * C30045 + C29992 * C30073)) /
                        C29949;
    const double C290 =
        (3 * C30025 + C29992 * C30045 + C30073 * C30170) / C29949;
    const double C443 =
        (3 * C30025 + C29992 * C30045 +
         C29991 * (C29991 * C30073 + C30387 * ae) + C29991 * C30387 * ae) /
        C29949;
    const double C560 = (C30161 * (4 * C30045 + C29992 * C30073)) / C29949;
    const double C664 = (C29991 * (4 * C30045 + C29992 * C30073) +
                         (4 * C30383 + C29992 * C30387) * ae) /
                        C29949;
    const double C826 =
        (C29991 * C30161 * C30073 + C30161 * C30387 * ae) / C29949;
    const double C144 =
        (5 * (3 * C30044 + ae * C30045 + C29992 * C30072) +
         ae * (4 * C30045 + C29992 * C30073) +
         C29992 *
             (4 * C30072 + ae * C30073 +
              C29992 *
                  (3 * C30068 + ae * C30069 +
                   C29992 * (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C298 = (2 * C30024 + ae * C30025 + C29992 * C30044 +
                         C30072 * std::pow(yP - yQ, 2)) /
                        C29951;
    const double C299 =
        ((yP - yQ) * (3 * C30044 + ae * C30045 + C29992 * C30072)) / C29951;
    const double C300 =
        (3 * C30044 + ae * C30045 + C29992 * C30072 +
         (3 * C30068 + ae * C30069 +
          C29992 *
              (2 * C30064 + ae * C30065 +
               C29992 * (C30060 + ae * C29992 * C30061 +
                         C29992 * (ae * C30061 + C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))) *
             std::pow(yP - yQ, 2)) /
        C29951;
    const double C561 =
        ((yP - yQ) *
         (4 * C30072 + ae * C30073 +
          C29992 * (3 * C30068 + ae * C30069 +
                    C29992 * (2 * C30064 + ae * C30065 +
                              C29992 * (C30060 + ae * C29992 * C30061 +
                                        C29992 * (ae * C30061 +
                                                  C29992 * std::pow(C29994, 8) *
                                                      bs[8] * C30002)))))) /
        C29951;
    const double C1293 =
        (2 * C30161 * C30072 +
         C30161 * (C30072 + (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002))) *
                                C30170)) /
        C29951;
    const double C4723 = C4703 + C4704;
    const double C14667 = C14659 + C14660;
    const double C5605 = C5595 + C5596;
    const double C5993 = C5989 + C5990;
    const double C30153 = C30133 + C30152;
    const double C30190 = C30126 + C30189;
    const double C30220 = C30126 + C30218;
    const double C2233 =
        (2 * (ae * C30174 + C29991 * C30231) + ae * (C30174 + C30232 * C30203) +
         C29991 * (C30231 + ae * C29991 * C30232 +
                   C29991 * (ae * C30232 +
                             C29991 * C30161 *
                                 (C30060 + ae * C29992 * C30061 +
                                  C29992 * (ae * C30061 +
                                            C29992 * std::pow(C29994, 8) *
                                                bs[8] * C30002))))) /
        C29951;
    const double C2227 =
        (2 * C29991 * C30174 + C29991 * (C30174 + C30232 * C30203)) / C29949;
    const double C6439 =
        (2 * C30228 + C30161 * C30262 + ae * C29991 * C30285 +
         C29991 * (ae * C30285 +
                   C29991 * (2 * C30161 * C30064 +
                             C30161 * (C30064 + (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002) *
                                                    C30170)))) /
        C29951;
    const double C5714 = (4 * (2 * C30176 + C30161 * C30187) +
                          C30161 * (3 * C30187 + C30161 * C30285)) /
                         C29949;
    const double C5873 = (C29991 * (3 * C30187 + C30161 * C30285)) / C29949;
    const double C6437 =
        (2 * C30176 + C30161 * C30187 + C30285 * C30203) / C29949;
    const double C10793 =
        (4 * (2 * C30212 + ae * C30213 + C29991 * C30345) +
         ae * (3 * C30213 + C29991 * C30346) +
         C29991 *
             (3 * C30345 + ae * C30346 +
              C29991 *
                  (2 * C30339 + ae * C30341 +
                   C29991 * (C30064 + ae * C29991 * C30144 +
                             C29991 * (ae * C30144 +
                                       C29991 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C10791 = (4 * (2 * C30208 + C29991 * C30213) +
                           C29991 * (3 * C30213 + C29991 * C30346)) /
                          C29949;
    const double C5580 =
        (3 * C30235 + C30161 * C30242 + ae * C29991 * C30259 +
         C29991 * (ae * C30259 +
                   C29991 * (3 * C30240 +
                             C30161 * (2 * C30161 * C30060 +
                                       C30161 * (C30060 + std::pow(C29994, 8) *
                                                              bs[8] * C30002 *
                                                              C30170))))) /
        C29951;
    const double C5986 =
        (ae * (4 * C30248 + C30161 * C30259) +
         C29991 * (4 * C30242 +
                   C30161 * (3 * C30240 +
                             C30161 * (2 * C30161 * C30060 +
                                       C30161 * (C30060 + std::pow(C29994, 8) *
                                                              bs[8] * C30002 *
                                                              C30170))))) /
        C29951;
    const double C5437 = (5 * (3 * C30184 + C30161 * C30248) +
                          C30161 * (4 * C30248 + C30161 * C30259)) /
                         C29949;
    const double C5576 =
        (3 * C30184 + C30161 * C30248 + C30259 * C30203) / C29949;
    const double C5984 = (C29991 * (4 * C30248 + C30161 * C30259)) / C29949;
    const double C10523 =
        (5 * (3 * C30300 + ae * C30301 + C29991 * C30322) +
         ae * (4 * C30301 + C29991 * C30323) +
         C29991 *
             (4 * C30322 + ae * C30323 +
              C29991 *
                  (3 * C30318 + ae * C30319 +
                   C29991 * (2 * C30312 + ae * C30314 +
                             C29991 * (C30060 + ae * C29991 * C30137 +
                                       C29991 * (ae * C30137 +
                                                 C29991 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C10520 = (5 * (3 * C30206 + C29991 * C30301) +
                           C29991 * (4 * C30301 + C29991 * C30323)) /
                          C29949;
    const double C31153 = C31099 + C31145;
    const double C555 = C31132 - (C30812 * C30794) / C30789;
    const double C111 = C31133 / C30793 - C30810 / C31106;
    const double C31146 = C31102 + C31132;
    const double C31154 = C31115 + C31149;
    const double C1285 = C31139 - (C30892 * C30881) / C30789;
    const double C1013 = C31140 / C30793 - C30890 / C31106;
    const double C31150 = C31117 + C31139;
    const double C31155 = C31121 + C31151;
    const double C2117 = C31142 - (C30934 * C30923) / C30789;
    const double C1842 = C31143 / C30793 - C30932 / C31106;
    const double C31152 = C31123 + C31142;
    const double C4740 = C4722 * C31023;
    const double C24657 = C4722 * C18916;
    const double C4967 = C4963 * C31023;
    const double C24936 = C4963 * C18916;
    const double C10535 = C10529 + C10530;
    const double C9248 = C9227 + C9228;
    const double C19282 = C19255 + C19256;
    const double C19276 = C19243 + C19244;
    const double C9456 = C9449 + C9450;
    const double C19280 = C19251 + C19252;
    const double C19555 = C19549 + C19550;
    const double C5248 = C5234 + C5235;
    const double C14092 = C14077 + C14078;
    const double C14090 = C14073 + C14074;
    const double C4721 = C4699 + C4700;
    const double C13446 = C13421 + C13422;
    const double C13436 = C13401 + C13402;
    const double C4962 = C4954 + C4955;
    const double C13440 = C13409 + C13410;
    const double C13731 = C13723 + C13724;
    const double C9247 = C9225 + C9226;
    const double C19284 = C19259 + C19260;
    const double C19274 = C19239 + C19240;
    const double C9455 = C9447 + C9448;
    const double C19278 = C19247 + C19248;
    const double C19553 = C19545 + C19546;
    const double C5249 = C5236 + C5237;
    const double C14094 = C14081 + C14082;
    const double C14088 = C14069 + C14070;
    const double C30129 = C30128 + C30123;
    const double C9608 = C30772 * C1177;
    const double C15588 = C13223 * C1177;
    const double C9606 = C30772 * C1162;
    const double C15592 = C13223 * C1162;
    const double C5246 = C5230 + C5231;
    const double C14873 = C14865 + C14866;
    const double C9249 = C9229 + C9230;
    const double C21309 = C21301 + C21302;
    const double C4724 = C4705 + C4706;
    const double C14669 = C14663 + C14664;
    const double C5247 = C5232 + C5233;
    const double C14875 = C14869 + C14870;
    const double C9250 = C9231 + C9232;
    const double C21311 = C21305 + C21306;
    const double C6453 = C6449 * C31023;
    const double C26003 = C6449 * C18917;
    const double C5884 = C5882 * C31023;
    const double C25805 = C5882 * C18917;
    const double C5726 = C5724 * C116;
    const double C6454 = C6450 * C116;
    const double C26004 = C6450 * C18919;
    const double C5885 = C5883 * C116;
    const double C25806 = C5883 * C18919;
    const double C30640 = C30639 + C30624;
    const double C5458 = C5454 * C116;
    const double C5614 = C5606 * C116;
    const double C26138 = C5606 * C18919;
    const double C5996 = C5994 * C116;
    const double C25514 = C5994 * C18919;
    const double C4961 = C30772 * C298;
    const double C13416 = C13223 * C298;
    const double C13730 = C13223 * C299;
    const double C4741 = C4723 * C31023;
    const double C5613 = C5605 * C31023;
    const double C26137 = C5605 * C18917;
    const double C5995 = C5993 * C31023;
    const double C25513 = C5993 * C18917;
    const double C30154 = C30153 + C30145;
    const double C1185 =
        (C30044 + C30068 * C30170 + ae * C29991 * C30190 +
         C29991 * (ae * C30190 +
                   C29991 * (C30068 + (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)) *
                                          C30170))) /
        C29951;
    const double C1553 =
        (ae * (2 * C30174 + C30161 * C30190) +
         C29991 * (2 * C30161 * C30068 +
                   C30161 * (C30068 + (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)) *
                                          C30170))) /
        C29951;
    const double C1030 = (3 * (C30109 + C30126 * C30170) +
                          C30161 * (2 * C30174 + C30161 * C30190)) /
                         C29949;
    const double C1173 = (C30109 + C30126 * C30170 + C30190 * C30203) / C29949;
    const double C1547 = (C29991 * (2 * C30174 + C30161 * C30190)) / C29949;
    const double C1867 =
        (3 * (C30044 + ae * C30215 + C29991 * C30219) +
         ae * (2 * C30215 + C29991 * C30220) +
         C29991 *
             (2 * C30219 + ae * C30220 +
              C29991 *
                  (C30068 + ae * C29991 * C30151 +
                   C29991 * (ae * C30151 +
                             C29991 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C1858 = (3 * (C30109 + C30126 * C30203) +
                          C29991 * (2 * C30215 + C29991 * C30220)) /
                         C29949;
    const double C108 =
        (C31144 + 2 * C30803) / C30793 - (C31153 * C30794) / C30789;
    const double C109 =
        (C31131 + 2 * C30812 + C31153) / C30793 - (C31146 * C30794) / C30789;
    const double C110 = (C31104 + C30809 / C30789 + C31146) / C30793 -
                        (C31133 * C30794) / C30789;
    const double C1010 =
        (C31147 + 2 * C30885) / C30793 - (C31154 * C30881) / C30789;
    const double C1011 =
        (C31135 + 2 * C30892 + C31154) / C30793 - (C31150 * C30881) / C30789;
    const double C1012 = (C31110 + C30889 / C30789 + C31150) / C30793 -
                         (C31140 * C30881) / C30789;
    const double C1839 =
        (C31148 + 2 * C30927) / C30793 - (C31155 * C30923) / C30789;
    const double C1840 =
        (C31137 + 2 * C30934 + C31155) / C30793 - (C31152 * C30923) / C30789;
    const double C1841 = (C31113 + C30931 / C30789 + C31152) / C30793 -
                         (C31143 * C30923) / C30789;
    const double C5260 = C5248 * C31023;
    const double C24654 = C5248 * C18917;
    const double C25279 = C5248 * C18916;
    const double C4739 = C4721 * C116;
    const double C24658 = C4721 * C18918;
    const double C4966 = C4962 * C116;
    const double C24935 = C4962 * C18918;
    const double C5261 = C5249 * C116;
    const double C24653 = C5249 * C18919;
    const double C25280 = C5249 * C18918;
    const double C451 =
        (2 * C30024 + ae * C30025 + C29992 * C30044 + ae * C29991 * C30129 +
         C29991 * (ae * C30129 + C29991 * C30072)) /
        C29951;
    const double C452 =
        (ae * (3 * C30109 + C29992 * C30129 +
               (2 * C30103 + C29992 * C30121) * ae) +
         C29991 * (3 * C30044 + ae * C30045 + C29992 * C30072)) /
        C29951;
    const double C830 =
        (ae * C30161 * C30129 + C29991 * C30161 * C30072) / C29951;
    const double C135 = (4 * (2 * C30097 + C29992 * C30109 + C30377 * ae) +
                         C29992 * (3 * C30109 + C29992 * C30129 + C30383 * ae) +
                         (3 * C30377 + C29992 * C30383) * ae) /
                        C29949;
    const double C286 =
        (2 * C30097 + C29992 * C30109 + C30377 * ae + C30129 * C30170) / C29949;
    const double C288 =
        (C30161 * (3 * C30109 + C29992 * C30129 + C30383 * ae)) / C29949;
    const double C439 =
        (2 * C30097 + C29992 * C30109 + C30377 * ae + C30129 * C30203) / C29949;
    const double C441 =
        (C29991 * (3 * C30109 + C29992 * C30129 + C30383 * ae)) / C29949;
    const double C824 = (C29991 * C30161 * C30129) / C29949;
    const double C9610 = C9607 + C9608;
    const double C15595 = C15587 + C15588;
    const double C9609 = C9605 + C9606;
    const double C15597 = C15591 + C15592;
    const double C5258 = C5246 * C31023;
    const double C24655 = C5246 * C18917;
    const double C4742 = C4724 * C116;
    const double C5259 = C5247 * C116;
    const double C24656 = C5247 * C18919;
    const double C10521 =
        (5 * (3 * C30617 + C29991 * C30640 + C30616 * ae) +
         C29991 *
             (4 * C30640 +
              C29991 *
                  (3 * C30635 +
                   C29991 *
                       (2 * C30627 +
                        C29991 * (C30037 + C29991 * (C29991 * C30061 + C30138) +
                                  C29991 * C30135 * ae) +
                        C30629 * ae) +
                   C30634 * ae) +
              C30638 * ae) +
         (4 * C30616 + C29991 * C30638) * ae) /
        C29949;
    const double C4965 = C4960 + C4961;
    const double C13443 = C13415 + C13416;
    const double C13734 = C13729 + C13730;
    const double C30155 = C29992 * C30154;
    const double C30222 = C30161 * C30154;
    const double C1443 =
        (ae * (C30129 + C30154 * C30170) +
         C29991 * (C30072 + (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002))) *
                                C30170)) /
        C29951;
    const double C2123 =
        (2 * (ae * C30129 + C29991 * C30072) + ae * (C30129 + C30154 * C30203) +
         C29991 *
             (C30072 + ae * C29991 * C30154 +
              C29991 *
                  (ae * C30154 +
                   C29991 * (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C1291 =
        (2 * C30161 * C30129 + C30161 * (C30129 + C30154 * C30170)) / C29949;
    const double C1441 = (C29991 * (C30129 + C30154 * C30170)) / C29949;
    const double C2121 =
        (2 * C29991 * C30129 + C29991 * (C30129 + C30154 * C30203)) / C29949;
    const double C4745 = C4739 + C4740;
    const double C9454 = C30772 * C451;
    const double C19254 = C13223 * C451;
    const double C19552 = C13223 * C452;
    const double C14076 = C13223 * C830;
    const double C24940 = C30772 * C830;
    const double C4959 = C30772 * C286;
    const double C13420 = C13223 * C286;
    const double C13726 = C13223 * C288;
    const double C9452 = C30772 * C439;
    const double C19258 = C13223 * C439;
    const double C19548 = C13223 * C441;
    const double C14080 = C13223 * C824;
    const double C24938 = C30772 * C824;
    const double C25277 = C9610 * C18917;
    const double C25278 = C9609 * C18919;
    const double C4969 = C4965 * C31023;
    const double C30156 = C30132 + C30155;
    const double C2017 =
        (C30161 * C30072 + ae * C29991 * C30222 +
         C29991 * (ae * C30222 +
                   C29991 * C30161 *
                       (2 * C30064 + ae * C30065 +
                        C29992 * (C30060 + ae * C29992 * C30061 +
                                  C29992 * (ae * C30061 +
                                            C29992 * std::pow(C29994, 8) *
                                                bs[8] * C30002))))) /
        C29951;
    const double C2015 = (C30161 * C30129 + C30222 * C30203) / C29949;
    const double C9458 = C9453 + C9454;
    const double C19281 = C19253 + C19254;
    const double C19556 = C19551 + C19552;
    const double C14091 = C14075 + C14076;
    const double C24942 = C24939 + C24940;
    const double C4964 = C4958 + C4959;
    const double C13445 = C13419 + C13420;
    const double C13732 = C13725 + C13726;
    const double C9457 = C9451 + C9452;
    const double C19283 = C19257 + C19258;
    const double C19554 = C19547 + C19548;
    const double C14093 = C14079 + C14080;
    const double C24941 = C24937 + C24938;
    const double C30157 = C30156 + C30150;
    const double C24944 = C24942 * C18917;
    const double C4968 = C4964 * C116;
    const double C24943 = C24941 * C18919;
    const double C453 =
        (3 * C30044 + ae * C30045 + C29992 * C30072 + ae * C29991 * C30157 +
         C29991 *
             (ae * C30157 +
              C29991 *
                  (3 * C30068 + ae * C30069 +
                   C29992 * (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C665 =
        (ae * (4 * C30129 + C29992 * C30157 +
               (3 * C30121 + C29992 * C30148) * ae) +
         C29991 *
             (4 * C30072 + ae * C30073 +
              C29992 *
                  (3 * C30068 + ae * C30069 +
                   C29992 * (2 * C30064 + ae * C30065 +
                             C29992 * (C30060 + ae * C29992 * C30061 +
                                       C29992 * (ae * C30061 +
                                                 C29992 * std::pow(C29994, 8) *
                                                     bs[8] * C30002)))))) /
        C29951;
    const double C831 =
        (ae * C30161 * C30157 +
         C29991 * C30161 *
             (3 * C30068 + ae * C30069 +
              C29992 * (2 * C30064 + ae * C30065 +
                        C29992 * (C30060 + ae * C29992 * C30061 +
                                  C29992 * (ae * C30061 +
                                            C29992 * std::pow(C29994, 8) *
                                                bs[8] * C30002))))) /
        C29951;
    const double C136 = (5 * (3 * C30109 + C29992 * C30129 + C30383 * ae) +
                         C29992 * (4 * C30129 + C29992 * C30157 + C30387 * ae) +
                         (4 * C30383 + C29992 * C30387) * ae) /
                        C29949;
    const double C289 =
        (3 * C30109 + C29992 * C30129 + C30383 * ae + C30157 * C30170) / C29949;
    const double C442 =
        (3 * C30109 + C29992 * C30129 + C30383 * ae + C30157 * C30203) / C29949;
    const double C559 =
        (C30161 * (4 * C30129 + C29992 * C30157 + C30387 * ae)) / C29949;
    const double C663 =
        (C29991 * (4 * C30129 + C29992 * C30157 + C30387 * ae)) / C29949;
    const double C825 = (C29991 * C30161 * C30157) / C29949;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C30885 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C30892 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30844 * C2700) *
              C30803 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C30892 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C30885 -
           (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C2700) *
              C30812 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C30885 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C30892 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C2700) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C30885 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C30892 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C31080 -
            (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C2700) *
              C2440 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C30885 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30892 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C31080) *
               C2700) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31154 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C31150 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30844 * C31140 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C30844 * C31120) *
              C2440 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C31150 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31154 -
           (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31140 +
           (((C14670 + C14669) * C116 + (C14668 + C14667) * C31023) * C13224 +
            ((C13226 * C1020 + C13222 * C1029 + C13227 * C1021 +
              C13223 * C1030) *
                 C116 +
             (C13226 * C1032 + C13222 * C1038 + C13227 * C1033 +
              C13223 * C1039) *
                 C31023) *
                C13225) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C2332 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C30889) *
              C31153 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C30889 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C2332) *
              C31146 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C2332 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C30889) *
              C31133 +
          ((((C13731 + C13732) * C116 + (C13733 + C13734) * C31023) * C13224 +
            ((C13226 * C268 + C13222 * C286 + C13227 * C270 + C13223 * C289) *
                 C116 +
             (C13226 * C285 + C13222 * C298 + C13227 * C290 + C13223 * C300) *
                 C31023) *
                C13225) *
               C30844 * C30889 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31148 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C31137 +
            (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                  C116 +
              (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                  C31023) *
                 C13224 +
             ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
                C31113) *
               C2332 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C31137 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31148 -
            (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
             ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
                C31113) *
               C30889) *
              C2440 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C31137 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31148 -
            (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
             ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                  C31023 +
              (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                  C116) *
                 C13224) *
                C31113) *
               C2332 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31148 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C31137 +
            (((C15598 + C15597) * C116 + (C15596 + C15595) * C31023) * C13224 +
             ((C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
               C13223 * C1173) *
                  C116 +
              (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
               C13223 * C1185) *
                  C31023) *
                 C13225) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C30889) *
              C30803 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C2332 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C30812 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C31080 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C31080) *
               C30889) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C2332 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C30889) *
              C31153 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C30889 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C2332) *
              C31146 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C2332 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C30889) *
              C31133 +
          ((((C13731 + C13732) * C116 + (C13733 + C13734) * C31023) * C13224 +
            ((C13226 * C268 + C13222 * C286 + C13227 * C270 + C13223 * C289) *
                 C116 +
             (C13226 * C285 + C13222 * C298 + C13227 * C290 + C13223 * C300) *
                 C31023) *
                C13225) *
               C30844 * C30889 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31154 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C31150 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30844 * C31140 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C30844 * C31120) *
              C2440 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C31150 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31154 -
           (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31140 +
           (((C14670 + C14669) * C116 + (C14668 + C14667) * C31023) * C13224 +
            ((C13226 * C1020 + C13222 * C1029 + C13227 * C1021 +
              C13223 * C1030) *
                 C116 +
             (C13226 * C1032 + C13222 * C1038 + C13227 * C1033 +
              C13223 * C1039) *
                 C31023) *
                C13225) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C30885 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C30892 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C3094 -
            (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C2700) *
              C31065 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C30885 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30892 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C3094) *
               C2700) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30927 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30934 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C3602) *
              C30885 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C30934 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30927 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C3602) *
              C30892 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30927 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C30934 +
           (((C14528 + C14527) * C116 + (C14526 + C14525) * C31023) * C13224 +
            ((C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
              C13223 * C6437) *
                 C116 +
             (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
              C13223 * C6439) *
                 C31023) *
                C13225) *
               C3602) *
              C2700) *
         C30798) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C3094 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C31154 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C30931 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C3094) *
              C31150 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C3094 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C30931) *
              C31140 +
          ((((C15018 + C15017) * C116 + (C15016 + C15015) * C31023) * C13224 +
            ((C13226 * C5570 + C13222 * C5575 + C13227 * C5872 +
              C13223 * C5873) *
                 C116 +
             (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 +
              C13223 * C5875) *
                 C31023) *
                C13225) *
               C30931 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C30889) *
              C31144 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C2332 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C31131 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C3094 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31155 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31152 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31143 -
           (((C15867 + C15868) * C31023 + (C15869 + C15870) * C116) * C13225 +
            ((C13227 * C1851 + C13223 * C1863 + C13226 * C1852 +
              C13222 * C1864) *
                 C31023 +
             (C13227 * C1845 + C13223 * C1854 + C13226 * C1846 +
              C13222 * C1855) *
                 C116) *
                C13224) *
               C31126) *
              C2332 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C31152 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C31155 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C31143 +
           (((C15870 + C15869) * C116 + (C15868 + C15867) * C31023) * C13224 +
            ((C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
              C13223 * C6555) *
                 C116 +
             (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
              C13223 * C6557) *
                 C31023) *
                C13225) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C30927 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30934 +
            (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                  C116 +
              (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                  C31023) *
                 C13224 +
             ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
                C3602) *
               C2332 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30934 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C30927 -
            (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
             ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
                C3602) *
               C30889) *
              C31065 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30934 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C30927 -
            (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
             ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                  C31023 +
              (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                  C116) *
                 C13224) *
                C3602) *
               C2332 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C30927 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30934 +
            (((C15598 + C15597) * C116 + (C15596 + C15595) * C31023) * C13224 +
             ((C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
               C13223 * C1173) *
                  C116 +
              (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
               C13223 * C1185) *
                  C31023) *
                 C13225) *
                C3602) *
               C30889) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C30889) *
              C31144 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C2332 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C31131 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C3094 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C2332 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C3094 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C31154 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C30931 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C3094) *
              C31150 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C3094 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C30931) *
              C31140 +
          ((((C15018 + C15017) * C116 + (C15016 + C15015) * C31023) * C13224 +
            ((C13226 * C5570 + C13222 * C5575 + C13227 * C5872 +
              C13223 * C5873) *
                 C116 +
             (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 +
              C13223 * C5875) *
                 C31023) *
                C13225) *
               C30931 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C1284 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C1285 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30844 * C1286 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C30844 * C31120) *
              C31065 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C1285 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C1284 -
           (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C1286 +
           (((C14670 + C14669) * C116 + (C14668 + C14667) * C31023) * C13224 +
            ((C13226 * C1020 + C13222 * C1029 + C13227 * C1021 +
              C13223 * C1030) *
                 C116 +
             (C13226 * C1032 + C13222 * C1038 + C13227 * C1033 +
              C13223 * C1039) *
                 C31023) *
                C13225) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31079 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C30889) *
              C554 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C30889 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31079) *
              C555 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C31079 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C30889) *
              C556 +
          ((((C13731 + C13732) * C116 + (C13733 + C13734) * C31023) * C13224 +
            ((C13226 * C268 + C13222 * C286 + C13227 * C270 + C13223 * C289) *
                 C116 +
             (C13226 * C285 + C13222 * C298 + C13227 * C290 + C13223 * C300) *
                 C31023) *
                C13225) *
               C30844 * C30889 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C1664 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C1665 +
            (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                  C116 +
              (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                  C31023) *
                 C13224 +
             ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
                C31113) *
               C31079 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C1665 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C1664 -
            (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
             ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
                C31113) *
               C30889) *
              C31065 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C1665 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C1664 -
            (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
             ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                  C31023 +
              (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                  C116) *
                 C13224) *
                C31113) *
               C31079 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C1664 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C1665 +
            (((C15598 + C15597) * C116 + (C15596 + C15595) * C31023) * C13224 +
             ((C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
               C13223 * C1173) *
                  C116 +
              (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
               C13223 * C1185) *
                  C31023) *
                 C13225) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31080 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C1284 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C30931 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C31080) *
              C1285 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C31080 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C30931) *
              C1286 +
          ((((C15018 + C15017) * C116 + (C15016 + C15015) * C31023) * C13224 +
            ((C13226 * C5570 + C13222 * C5575 + C13227 * C5872 +
              C13223 * C5873) *
                 C116 +
             (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 +
              C13223 * C5875) *
                 C31023) *
                C13225) *
               C30931 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C13226 * C1155 + C13222 * C1170 + C13227 * C1154 +
               C13223 * C1169) *
                  C116 +
              (C13226 * C1167 + C13222 * C1182 + C13227 * C1166 +
               C13223 * C1181) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C30889) *
              C258 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C31079 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C13227 * C1165 + C13223 * C1180 + C13226 * C1166 +
               C13222 * C1181) *
                  C31023 +
              (C13227 * C1153 + C13223 * C1168 + C13226 * C1154 +
               C13222 * C1169) *
                  C116) *
                 C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C259 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C31080 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C2116 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C2117 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C2118 -
           (((C15867 + C15868) * C31023 + (C15869 + C15870) * C116) * C13225 +
            ((C13227 * C1851 + C13223 * C1863 + C13226 * C1852 +
              C13222 * C1864) *
                 C31023 +
             (C13227 * C1845 + C13223 * C1854 + C13226 * C1846 +
              C13222 * C1855) *
                 C116) *
                C13224) *
               C31126) *
              C31079 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C2117 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C2116 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C2118 +
           (((C15870 + C15869) * C116 + (C15868 + C15867) * C31023) * C13224 +
            ((C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
              C13223 * C6555) *
                 C116 +
             (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
              C13223 * C6557) *
                 C31023) *
                C13225) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13226 * C117 + C13222 * C124 + C13227 * C118 +
                 C13223 * C125) *
                    C116 +
                (C13226 * C127 + C13222 * C138 + C13227 * C128 +
                 C13223 * C139) *
                    C31023) *
                   C13224 +
               ((C13226 * C263 + C13222 * C276 + C13227 * C262 +
                 C13223 * C275) *
                    C116 +
                (C13226 * C273 + C13222 * C293 + C13227 * C272 +
                 C13223 * C292) *
                    C31023) *
                   C13225) *
                  C30844 * C30826 * C108 -
              (((C13227 * C271 + C13223 * C291 + C13226 * C272 +
                 C13222 * C292) *
                    C31023 +
                (C13227 * C261 + C13223 * C274 + C13226 * C262 +
                 C13222 * C275) *
                    C116) *
                   C13225 +
               ((C13227 * C129 + C13223 * C140 + C13226 * C128 +
                 C13222 * C139) *
                    C31023 +
                (C13227 * C119 + C13223 * C126 + C13226 * C118 +
                 C13222 * C125) *
                    C116) *
                   C13224) *
                  C30844 * C30826 * C109 +
              (((C13226 * C119 + C13222 * C126 + C13227 * C120 +
                 C13223 * C131) *
                    C116 +
                (C13226 * C129 + C13222 * C140 + C13227 * C130 +
                 C13223 * C141) *
                    C31023) *
                   C13224 +
               ((C13226 * C261 + C13222 * C274 + C13227 * C267 +
                 C13223 * C283) *
                    C116 +
                (C13226 * C271 + C13222 * C291 + C13227 * C284 +
                 C13223 * C297) *
                    C31023) *
                   C13225) *
                  C30844 * C30826 * C110 -
              (((C13227 * C287 + C13223 * C299 + C13226 * C284 +
                 C13222 * C297) *
                    C31023 +
                (C13227 * C269 + C13223 * C288 + C13226 * C267 +
                 C13222 * C283) *
                    C116) *
                   C13225 +
               ((C13227 * C133 + C13223 * C142 + C13226 * C130 +
                 C13222 * C141) *
                    C31023 +
                (C13227 * C121 + C13223 * C132 + C13226 * C120 +
                 C13222 * C131) *
                    C116) *
                   C13224) *
                  C30844 * C30826 * C111 +
              (((C13226 * C121 + C13222 * C132 + C13227 * C122 +
                 C13223 * C135) *
                    C116 +
                (C13226 * C133 + C13222 * C142 + C13227 * C134 +
                 C13223 * C143) *
                    C31023) *
                   C13224 +
               ((C13226 * C269 + C13222 * C288 + C13227 * C558 +
                 C13223 * C559) *
                    C116 +
                (C13226 * C287 + C13222 * C299 + C13227 * C560 +
                 C13223 * C561) *
                    C31023) *
                   C13225) *
                  C30844 * C30826 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13226 * C117 + C13222 * C124 + C13227 * C118 +
                  C13223 * C125) *
                     C116 +
                 (C13226 * C127 + C13222 * C138 + C13227 * C128 +
                  C13223 * C139) *
                     C31023) *
                    C13224 +
                ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) *
                    C13225) *
                   C30844 * C31147 -
               (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) *
                    C13225 +
                ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) *
                    C13224) *
                   C30844 * C31135 +
               (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) *
                    C13224 +
                ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
                  C13223 * C1026) *
                     C116 +
                 (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
                  C13223 * C1035) *
                     C31023) *
                    C13225) *
                   C30844 * C31110) *
                  C258 +
              ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) *
                    C13224 +
                ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) *
                    C13225) *
                   C30844 * C31135 -
               (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) *
                    C13225 +
                ((C13227 * C129 + C13223 * C140 + C13226 * C128 +
                  C13222 * C139) *
                     C31023 +
                 (C13227 * C119 + C13223 * C126 + C13226 * C118 +
                  C13222 * C125) *
                     C116) *
                    C13224) *
                   C30844 * C31147 -
               (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
                  C13222 * C1035) *
                     C31023 +
                 (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
                  C13222 * C1026) *
                     C116) *
                    C13225 +
                ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) *
                    C13224) *
                   C30844 * C31110) *
                  C259 +
              ((((C13226 * C119 + C13222 * C126 + C13227 * C120 +
                  C13223 * C131) *
                     C116 +
                 (C13226 * C129 + C13222 * C140 + C13227 * C130 +
                  C13223 * C141) *
                     C31023) *
                    C13224 +
                ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) *
                    C13225) *
                   C30844 * C31147 -
               (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) *
                    C13225 +
                ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) *
                    C13224) *
                   C30844 * C31135 +
               (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) *
                    C13224 +
                ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
                  C13223 * C1291) *
                     C116 +
                 (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
                  C13223 * C1293) *
                     C31023) *
                    C13225) *
                   C30844 * C31110) *
                  C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31148 -
           (((C13227 * C821 + C13223 * C828 + C13226 * C820 + C13222 * C827) *
                 C31023 +
             (C13227 * C813 + C13223 * C818 + C13226 * C812 + C13222 * C817) *
                 C116) *
                C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C13226 * C1152 + C13222 * C1164 + C13227 * C1151 +
              C13223 * C1163) *
                 C116 +
             (C13226 * C1161 + C13222 * C1179 + C13227 * C1160 +
              C13223 * C1178) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C258 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C13226 * C813 + C13222 * C818 + C13227 * C814 + C13223 * C819) *
                 C116 +
             (C13226 * C821 + C13222 * C828 + C13227 * C822 + C13223 * C829) *
                 C31023) *
                C13225) *
               C31137 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C31148 -
           (((C13227 * C1159 + C13223 * C1177 + C13226 * C1160 +
              C13222 * C1178) *
                 C31023 +
             (C13227 * C1150 + C13223 * C1162 + C13226 * C1151 +
              C13222 * C1163) *
                 C116) *
                C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C31113) *
              C30826 * C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C31148 -
           (((C13227 * C823 + C13223 * C830 + C13226 * C822 + C13222 * C829) *
                 C31023 +
             (C13227 * C815 + C13223 * C824 + C13226 * C814 + C13222 * C819) *
                 C116) *
                C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C419 + C13222 * C432 + C13227 * C421 + C13223 * C439) *
                 C116 +
             (C13226 * C435 + C13222 * C449 + C13227 * C438 + C13223 * C451) *
                 C31023) *
                C13224 +
            ((C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C116 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C942 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C943 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C943 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C942 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C942 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C943 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
              C30844 * C1010 -
          (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
           ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
              C30844 * C1011 +
          (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
           ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
              C30844 * C1012 -
          (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
           ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
              C30844 * C1013 +
          (((C14346 + C14345) * C116 + (C14344 + C14343) * C31023) * C13224 +
           ((C13226 * C5433 + C13222 * C5436 + C13227 * C5713 +
             C13223 * C5714) *
                C116 +
            (C13226 * C5435 + C13222 * C5439 + C13227 * C5715 +
             C13223 * C5716) *
                C31023) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31148 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C942 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C31137 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C31148 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C31113) *
              C943 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C31148 -
           (((C13227 * C1549 + C13223 * C1552 + C13226 * C1548 +
              C13222 * C1551) *
                 C31023 +
             (C13227 * C1543 + C13223 * C1546 + C13226 * C1542 +
              C13222 * C1545) *
                 C116) *
                C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C31137 +
           (((C14528 + C14527) * C116 + (C14526 + C14525) * C31023) * C13224 +
            ((C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
              C13223 * C6437) *
                 C116 +
             (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
              C13223 * C6439) *
                 C31023) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C1664 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C30826 * C31144 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C1665 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C1664 -
           (((C13227 * C1159 + C13223 * C1177 + C13226 * C1160 +
              C13222 * C1178) *
                 C31023 +
             (C13227 * C1150 + C13223 * C1162 + C13226 * C1151 +
              C13222 * C1163) *
                 C116) *
                C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C31113) *
              C30826 * C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C1664 -
           (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C419 + C13222 * C432 + C13227 * C421 + C13223 * C439) *
                 C116 +
             (C13226 * C435 + C13222 * C449 + C13227 * C438 + C13223 * C451) *
                 C31023) *
                C13224 +
            ((C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C116 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C1664 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C31147 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C1665 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C1664 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C31113) *
              C31135 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C1664 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C1665 +
           (((C14528 + C14527) * C116 + (C14526 + C14525) * C31023) * C13224 +
            ((C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
              C13223 * C6437) *
                 C116 +
             (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
              C13223 * C6439) *
                 C31023) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
              C1839 -
          (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
           ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                C31023 +
            (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                C116) *
               C13224) *
              C1840 +
          (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                C116 +
            (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                C31023) *
               C13224 +
           ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
              C1841 -
          (((C13227 * C2229 + C13223 * C2232 + C13226 * C2228 +
             C13222 * C2231) *
                C31023 +
            (C13227 * C2223 + C13223 * C2226 + C13226 * C2222 +
             C13222 * C2225) *
                C116) *
               C13225 +
           ((C13227 * C1851 + C13223 * C1863 + C13226 * C1852 +
             C13222 * C1864) *
                C31023 +
            (C13227 * C1845 + C13223 * C1854 + C13226 * C1846 +
             C13222 * C1855) *
                C116) *
               C13224) *
              C1842 +
          (((C13226 * C1847 + C13222 * C1856 + C13227 * C1848 +
             C13223 * C1857) *
                C116 +
            (C13226 * C1859 + C13222 * C1865 + C13227 * C1860 +
             C13223 * C1866) *
                C31023) *
               C13224 +
           ((C13226 * C6279 + C13222 * C6283 + C13227 * C10682 +
             C13223 * C10683) *
                C116 +
            (C13226 * C6284 + C13222 * C6288 + C13227 * C10684 +
             C13223 * C10685) *
                C31023) *
               C13225) *
              C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C942 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C943 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C31080 -
            (((C13227 * C1549 + C13223 * C1552 + C13226 * C1548 +
               C13222 * C1551) *
                  C31023 +
              (C13227 * C1543 + C13223 * C1546 + C13226 * C1542 +
               C13222 * C1545) *
                  C116) *
                 C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C31110) *
              C31065 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C942 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C943 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31080 -
           (((C13227 * C821 + C13223 * C828 + C13226 * C820 + C13222 * C827) *
                 C31023 +
             (C13227 * C813 + C13223 * C818 + C13226 * C812 + C13222 * C817) *
                 C116) *
                C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C554 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C13226 * C813 + C13222 * C818 + C13227 * C814 + C13223 * C819) *
                 C116 +
             (C13226 * C821 + C13222 * C828 + C13227 * C822 + C13223 * C829) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C31080) *
              C30826 * C555 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C31080 -
           (((C13227 * C823 + C13223 * C830 + C13226 * C822 + C13222 * C829) *
                 C31023 +
             (C13227 * C815 + C13223 * C824 + C13226 * C814 + C13222 * C819) *
                 C116) *
                C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C556 +
          ((((C13226 * C420 + C13222 * C436 + C13227 * C422 + C13223 * C441) *
                 C116 +
             (C13226 * C437 + C13222 * C450 + C13227 * C440 + C13223 * C452) *
                 C31023) *
                C13224 +
            ((C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                 C116 +
             (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C2116 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C2117 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C2118 -
           (((C13227 * C2229 + C13223 * C2232 + C13226 * C2228 +
              C13222 * C2231) *
                 C31023 +
             (C13227 * C2223 + C13223 * C2226 + C13226 * C2222 +
              C13222 * C2225) *
                 C116) *
                C13225 +
            ((C13227 * C1851 + C13223 * C1863 + C13226 * C1852 +
              C13222 * C1864) *
                 C31023 +
             (C13227 * C1845 + C13223 * C1854 + C13226 * C1846 +
              C13222 * C1855) *
                 C116) *
                C13224) *
               C31126) *
              C30826 * C31065 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C2117 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C2116 -
           (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C2118 +
           (((C13226 * C1845 + C13222 * C1854 + C13227 * C1844 +
              C13223 * C1853) *
                 C116 +
             (C13226 * C1851 + C13222 * C1863 + C13227 * C1850 +
              C13223 * C1862) *
                 C31023) *
                C13224 +
            ((C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C116 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C31023) *
                C13225) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C31135 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C258 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C31135 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31147 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C31135 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13226 * C263 + C13222 * C276 + C13227 * C262 + C13223 * C275) *
                C116 +
            (C13226 * C273 + C13222 * C293 + C13227 * C272 + C13223 * C292) *
                C31023) *
               C13225) *
              C30844 * C30826 * C108 -
          (((C13227 * C271 + C13223 * C291 + C13226 * C272 + C13222 * C292) *
                C31023 +
            (C13227 * C261 + C13223 * C274 + C13226 * C262 + C13222 * C275) *
                C116) *
               C13225 +
           ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C31023 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C116) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C116 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C31023) *
               C13224 +
           ((C13226 * C261 + C13222 * C274 + C13227 * C267 + C13223 * C283) *
                C116 +
            (C13226 * C271 + C13222 * C291 + C13227 * C284 + C13223 * C297) *
                C31023) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C13227 * C287 + C13223 * C299 + C13226 * C284 + C13222 * C297) *
                C31023 +
            (C13227 * C269 + C13223 * C288 + C13226 * C267 + C13222 * C283) *
                C116) *
               C13225 +
           ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C31023 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C116) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
                C116 +
            (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
                C31023) *
               C13224 +
           ((C13226 * C269 + C13222 * C288 + C13227 * C558 + C13223 * C559) *
                C116 +
            (C13226 * C287 + C13222 * C299 + C13227 * C560 + C13223 * C561) *
                C31023) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C942 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C943 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C943 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C942 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C942 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C943 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
              C30844 * C1010 -
          (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
           ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
              C30844 * C1011 +
          (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
           ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
              C30844 * C1012 -
          (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
           ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
              C30844 * C1013 +
          (((C14346 + C14345) * C116 + (C14344 + C14343) * C31023) * C13224 +
           ((C13226 * C5433 + C13222 * C5436 + C13227 * C5713 +
             C13223 * C5714) *
                C116 +
            (C13226 * C5435 + C13222 * C5439 + C13227 * C5715 +
             C13223 * C5716) *
                C31023) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C1664 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C30826 * C31144 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C1665 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C1664 -
           (((C13227 * C1159 + C13223 * C1177 + C13226 * C1160 +
              C13222 * C1178) *
                 C31023 +
             (C13227 * C1150 + C13223 * C1162 + C13226 * C1151 +
              C13222 * C1163) *
                 C116) *
                C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C31113) *
              C30826 * C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C1664 -
           (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C419 + C13222 * C432 + C13227 * C421 + C13223 * C439) *
                 C116 +
             (C13226 * C435 + C13222 * C449 + C13227 * C438 + C13223 * C451) *
                 C31023) *
                C13224 +
            ((C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C116 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C1664 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C1665 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C31147 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C1665 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C1664 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C31113) *
              C31135 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C1664 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C1665 +
           (((C14528 + C14527) * C116 + (C14526 + C14525) * C31023) * C13224 +
            ((C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
              C13223 * C6437) *
                 C116 +
             (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
              C13223 * C6439) *
                 C31023) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C30889) *
              C30803 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C31079 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C30812 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C3094 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C3094) *
               C30889) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C30927 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30934 +
            (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                  C116 +
              (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                  C31023) *
                 C13224 +
             ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
                C3602) *
               C31079 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30934 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C30927 -
            (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
             ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
                C3602) *
               C30889) *
              C2440 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30934 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C30927 -
            (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
             ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                  C31023 +
              (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                  C116) *
                 C13224) *
                C3602) *
               C31079 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C30927 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30934 +
            (((C15598 + C15597) * C116 + (C15596 + C15595) * C31023) * C13224 +
             ((C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
               C13223 * C1173) *
                  C116 +
              (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
               C13223 * C1185) *
                  C31023) *
                 C13225) *
                C3602) *
               C30889) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C31147 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C31135 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C3094 -
            (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C31110) *
              C2440 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C31147 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C31135 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C3094 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C31153 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C30931 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C3094) *
              C30826 * C31146 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C3094 -
           (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C31133 +
          ((((C13226 * C420 + C13222 * C436 + C13227 * C422 + C13223 * C441) *
                 C116 +
             (C13226 * C437 + C13222 * C450 + C13227 * C440 + C13223 * C452) *
                 C31023) *
                C13224 +
            ((C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                 C116 +
             (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31155 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31152 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31143 -
           (((C15867 + C15868) * C31023 + (C15869 + C15870) * C116) * C13225 +
            ((C13227 * C1851 + C13223 * C1863 + C13226 * C1852 +
              C13222 * C1864) *
                 C31023 +
             (C13227 * C1845 + C13223 * C1854 + C13226 * C1846 +
              C13222 * C1855) *
                 C116) *
                C13224) *
               C31126) *
              C30826 * C2440 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C31152 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C31155 -
           (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C31143 +
           (((C13226 * C1845 + C13222 * C1854 + C13227 * C1844 +
              C13223 * C1853) *
                 C116 +
             (C13226 * C1851 + C13222 * C1863 + C13227 * C1850 +
              C13223 * C1862) *
                 C31023) *
                C13224 +
            ((C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C116 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C31023) *
                C13225) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30927 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30934 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C3602) *
              C30826 * C30803 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C30934 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30927 -
           (((C15595 + C15596) * C31023 + (C15597 + C15598) * C116) * C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C3602) *
              C30826 * C30812 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30927 -
           (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C30934 +
           (((C13226 * C419 + C13222 * C432 + C13227 * C421 + C13223 * C439) *
                 C116 +
             (C13226 * C435 + C13222 * C449 + C13227 * C438 + C13223 * C451) *
                 C31023) *
                C13224 +
            ((C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C116 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C31023) *
                C13225) *
               C3602) *
              C30826 * C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C3094 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C31153 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
               C30931 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C3094) *
              C30826 * C31146 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C3094 -
           (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C31133 +
          ((((C13226 * C420 + C13222 * C436 + C13227 * C422 + C13223 * C441) *
                 C116 +
             (C13226 * C437 + C13222 * C450 + C13227 * C440 + C13223 * C452) *
                 C31023) *
                C13224 +
            ((C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                 C116 +
             (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C3094 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C31147 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C3094) *
               C31135 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C3094 -
            (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C31110) *
              C2440 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C3094) *
               C31147 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C3094 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C31135 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31079 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C30889) *
              C554 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C30889 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31079) *
              C555 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C31079 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C30889) *
              C556 +
          ((((C13731 + C13732) * C116 + (C13733 + C13734) * C31023) * C13224 +
            ((C13226 * C268 + C13222 * C286 + C13227 * C270 + C13223 * C289) *
                 C116 +
             (C13226 * C285 + C13222 * C298 + C13227 * C290 + C13223 * C300) *
                 C31023) *
                C13225) *
               C30844 * C30889 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C1284 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C1285 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C30844 * C1286 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C30844 * C31120) *
              C31065 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C1285 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C1284 -
           (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C1286 +
           (((C14670 + C14669) * C116 + (C14668 + C14667) * C31023) * C13224 +
            ((C13226 * C1020 + C13222 * C1029 + C13227 * C1021 +
              C13223 * C1030) *
                 C116 +
             (C13226 * C1032 + C13222 * C1038 + C13227 * C1033 +
              C13223 * C1039) *
                 C31023) *
                C13225) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C13226 * C1155 + C13222 * C1170 + C13227 * C1154 +
               C13223 * C1169) *
                  C116 +
              (C13226 * C1167 + C13222 * C1182 + C13227 * C1166 +
               C13223 * C1181) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C30889) *
              C258 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C31079 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C13227 * C1165 + C13223 * C1180 + C13226 * C1166 +
               C13222 * C1181) *
                  C31023 +
              (C13227 * C1153 + C13223 * C1168 + C13226 * C1154 +
               C13222 * C1169) *
                  C116) *
                 C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C30889) *
              C259 +
          (((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                  C116 +
              (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                  C31023) *
                 C13224 +
             ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
                C31080 -
            (((C14091 + C14092) * C31023 + (C14093 + C14094) * C116) * C13225 +
             ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                  C31023 +
              (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                  C116) *
                 C13224) *
                C30931) *
               C31079 +
           ((((C14094 + C14093) * C116 + (C14092 + C14091) * C31023) * C13224 +
             ((C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
               C13223 * C1441) *
                  C116 +
              (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
               C13223 * C1443) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
             ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31080 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C1284 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C30931 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C31080) *
              C1285 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C31080 -
           (((C15015 + C15016) * C31023 + (C15017 + C15018) * C116) * C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C30931) *
              C1286 +
          ((((C15018 + C15017) * C116 + (C15016 + C15015) * C31023) * C13224 +
            ((C13226 * C5570 + C13222 * C5575 + C13227 * C5872 +
              C13223 * C5873) *
                 C116 +
             (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 +
              C13223 * C5875) *
                 C31023) *
                C13225) *
               C30931 -
           (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
            ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C31135 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C258 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C31135 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31147 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C31135 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13226 * C263 + C13222 * C276 + C13227 * C262 + C13223 * C275) *
                C116 +
            (C13226 * C273 + C13222 * C293 + C13227 * C272 + C13223 * C292) *
                C31023) *
               C13225) *
              C30844 * C30826 * C108 -
          (((C13227 * C271 + C13223 * C291 + C13226 * C272 + C13222 * C292) *
                C31023 +
            (C13227 * C261 + C13223 * C274 + C13226 * C262 + C13222 * C275) *
                C116) *
               C13225 +
           ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C31023 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C116) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C116 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C31023) *
               C13224 +
           ((C13226 * C261 + C13222 * C274 + C13227 * C267 + C13223 * C283) *
                C116 +
            (C13226 * C271 + C13222 * C291 + C13227 * C284 + C13223 * C297) *
                C31023) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C13227 * C287 + C13223 * C299 + C13226 * C284 + C13222 * C297) *
                C31023 +
            (C13227 * C269 + C13223 * C288 + C13226 * C267 + C13222 * C283) *
                C116) *
               C13225 +
           ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C31023 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C116) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
                C116 +
            (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
                C31023) *
               C13224 +
           ((C13226 * C269 + C13222 * C288 + C13227 * C558 + C13223 * C559) *
                C116 +
            (C13226 * C287 + C13222 * C299 + C13227 * C560 + C13223 * C561) *
                C31023) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31148 -
           (((C13227 * C821 + C13223 * C828 + C13226 * C820 + C13222 * C827) *
                 C31023 +
             (C13227 * C813 + C13223 * C818 + C13226 * C812 + C13222 * C817) *
                 C116) *
                C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C13226 * C1152 + C13222 * C1164 + C13227 * C1151 +
              C13223 * C1163) *
                 C116 +
             (C13226 * C1161 + C13222 * C1179 + C13227 * C1160 +
              C13223 * C1178) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C258 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C13226 * C813 + C13222 * C818 + C13227 * C814 + C13223 * C819) *
                 C116 +
             (C13226 * C821 + C13222 * C828 + C13227 * C822 + C13223 * C829) *
                 C31023) *
                C13225) *
               C31137 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C31148 -
           (((C13227 * C1159 + C13223 * C1177 + C13226 * C1160 +
              C13222 * C1178) *
                 C31023 +
             (C13227 * C1150 + C13223 * C1162 + C13226 * C1151 +
              C13222 * C1163) *
                 C116) *
                C13225 +
            ((C13227 * C435 + C13223 * C449 + C13226 * C434 + C13222 * C448) *
                 C31023 +
             (C13227 * C419 + C13223 * C432 + C13226 * C418 + C13222 * C431) *
                 C116) *
                C13224) *
               C31113) *
              C30826 * C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C31148 -
           (((C13227 * C823 + C13223 * C830 + C13226 * C822 + C13222 * C829) *
                 C31023 +
             (C13227 * C815 + C13223 * C824 + C13226 * C814 + C13222 * C819) *
                 C116) *
                C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C419 + C13222 * C432 + C13227 * C421 + C13223 * C439) *
                 C116 +
             (C13226 * C435 + C13222 * C449 + C13227 * C438 + C13223 * C451) *
                 C31023) *
                C13224 +
            ((C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C116 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C31023) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C942 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C943 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C943 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C942 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C942 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C943 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
              C30844 * C1010 -
          (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
           ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
              C30844 * C1011 +
          (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
           ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
              C30844 * C1012 -
          (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
           ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
              C30844 * C1013 +
          (((C14346 + C14345) * C116 + (C14344 + C14343) * C31023) * C13224 +
           ((C13226 * C5433 + C13222 * C5436 + C13227 * C5713 +
             C13223 * C5714) *
                C116 +
            (C13226 * C5435 + C13222 * C5439 + C13227 * C5715 +
             C13223 * C5716) *
                C31023) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31148 -
           (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C31137 +
           (((C13226 * C417 + C13222 * C430 + C13227 * C418 + C13223 * C431) *
                 C116 +
             (C13226 * C433 + C13222 * C447 + C13227 * C434 + C13223 * C448) *
                 C31023) *
                C13224 +
            ((C14517 + C14518) * C116 + (C14519 + C14520) * C31023) * C13225) *
               C31113) *
              C942 +
          ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
            ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
               C31137 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C31148 -
           (((C14525 + C14526) * C31023 + (C14527 + C14528) * C116) * C13225 +
            ((C14520 + C14519) * C31023 + (C14518 + C14517) * C116) * C13224) *
               C31113) *
              C943 +
          ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
               C31148 -
           (((C13227 * C1549 + C13223 * C1552 + C13226 * C1548 +
              C13222 * C1551) *
                 C31023 +
             (C13227 * C1543 + C13223 * C1546 + C13226 * C1542 +
              C13222 * C1545) *
                 C116) *
                C13225 +
            ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
               C31137 +
           (((C14528 + C14527) * C116 + (C14526 + C14525) * C31023) * C13224 +
            ((C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
              C13223 * C6437) *
                 C116 +
             (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
              C13223 * C6439) *
                 C31023) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C31080 -
           (((C13227 * C821 + C13223 * C828 + C13226 * C820 + C13222 * C827) *
                 C31023 +
             (C13227 * C813 + C13223 * C818 + C13226 * C812 + C13222 * C817) *
                 C116) *
                C13225 +
            ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                 C31023 +
             (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C554 +
          ((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                 C116 +
             (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                 C31023) *
                C13224 +
            ((C13226 * C813 + C13222 * C818 + C13227 * C814 + C13223 * C819) *
                 C116 +
             (C13226 * C821 + C13222 * C828 + C13227 * C822 + C13223 * C829) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C31080) *
              C30826 * C555 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C31080 -
           (((C13227 * C823 + C13223 * C830 + C13226 * C822 + C13222 * C829) *
                 C31023 +
             (C13227 * C815 + C13223 * C824 + C13226 * C814 + C13222 * C819) *
                 C116) *
                C13225 +
            ((C13227 * C437 + C13223 * C450 + C13226 * C424 + C13222 * C444) *
                 C31023 +
             (C13227 * C420 + C13223 * C436 + C13226 * C414 + C13222 * C427) *
                 C116) *
                C13224) *
               C30931) *
              C30826 * C556 +
          ((((C13226 * C420 + C13222 * C436 + C13227 * C422 + C13223 * C441) *
                 C116 +
             (C13226 * C437 + C13222 * C450 + C13227 * C440 + C13223 * C452) *
                 C31023) *
                C13224 +
            ((C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                 C116 +
             (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                 C31023) *
                C13225) *
               C30931 -
           (((C13734 + C13733) * C31023 + (C13732 + C13731) * C116) * C13225 +
            ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                 C31023 +
             (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                 C116) *
                C13224) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                  C116 +
              (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                  C31023) *
                 C13224 +
             ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
                C31080 -
            (((C14083 + C14084) * C31023 + (C14085 + C14086) * C116) * C13225 +
             ((C13227 * C425 + C13223 * C445 + C13226 * C426 + C13222 * C446) *
                  C31023 +
              (C13227 * C415 + C13223 * C428 + C13226 * C416 + C13222 * C429) *
                  C116) *
                 C13224) *
                C30931) *
               C942 +
           ((((C14086 + C14085) * C116 + (C14084 + C14083) * C31023) * C13224 +
             ((C14521 + C14522) * C116 + (C14523 + C14524) * C31023) * C13225) *
                C30931 -
            (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
             ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
                C31080) *
               C943 +
           ((((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
             ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
                C31080 -
            (((C13227 * C1549 + C13223 * C1552 + C13226 * C1548 +
               C13222 * C1551) *
                  C31023 +
              (C13227 * C1543 + C13223 * C1546 + C13226 * C1542 +
               C13222 * C1545) *
                  C116) *
                 C13225 +
             ((C14524 + C14523) * C31023 + (C14522 + C14521) * C116) * C13224) *
                C30931) *
               C31110) *
              C31065 +
          (((((C13226 * C415 + C13222 * C428 + C13227 * C414 + C13223 * C427) *
                  C116 +
              (C13226 * C425 + C13222 * C445 + C13227 * C424 + C13223 * C444) *
                  C31023) *
                 C13224 +
             ((C14087 + C14088) * C116 + (C14089 + C14090) * C31023) * C13225) *
                C30931 -
            (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
             ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                  C31023 +
              (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                  C116) *
                 C13224) *
                C31080) *
               C942 +
           ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
             ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
                C31080 -
            (((C14873 + C14874) * C31023 + (C14875 + C14876) * C116) * C13225 +
             ((C14090 + C14089) * C31023 + (C14088 + C14087) * C116) * C13224) *
                C30931) *
               C943 +
           ((((C14876 + C14875) * C116 + (C14874 + C14873) * C31023) * C13224 +
             ((C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
               C13223 * C1547) *
                  C116 +
              (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
               C13223 * C1553) *
                  C31023) *
                 C13225) *
                C30931 -
            (((C14667 + C14668) * C31023 + (C14669 + C14670) * C116) * C13225 +
             ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13226 * C263 + C13222 * C276 + C13227 * C262 + C13223 * C275) *
                C116 +
            (C13226 * C273 + C13222 * C293 + C13227 * C272 + C13223 * C292) *
                C31023) *
               C13225) *
              C30844 * C30826 * C108 -
          (((C13227 * C271 + C13223 * C291 + C13226 * C272 + C13222 * C292) *
                C31023 +
            (C13227 * C261 + C13223 * C274 + C13226 * C262 + C13222 * C275) *
                C116) *
               C13225 +
           ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C31023 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C116) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C116 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C31023) *
               C13224 +
           ((C13226 * C261 + C13222 * C274 + C13227 * C267 + C13223 * C283) *
                C116 +
            (C13226 * C271 + C13222 * C291 + C13227 * C284 + C13223 * C297) *
                C31023) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C13227 * C287 + C13223 * C299 + C13226 * C284 + C13222 * C297) *
                C31023 +
            (C13227 * C269 + C13223 * C288 + C13226 * C267 + C13222 * C283) *
                C116) *
               C13225 +
           ((C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C31023 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C116) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
                C116 +
            (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
                C31023) *
               C13224 +
           ((C13226 * C269 + C13222 * C288 + C13227 * C558 + C13223 * C559) *
                C116 +
            (C13226 * C287 + C13222 * C299 + C13227 * C560 + C13223 * C561) *
                C31023) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C31135 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C258 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C31135 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C31147 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C31147 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C31135 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C116 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C31023) *
                C13224 +
            ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
               C30844 * C942 -
           (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
            ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
               C30844 * C943 +
           (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
            ((C13226 * C1018 + C13222 * C1027 + C13227 * C1017 +
              C13223 * C1026) *
                 C116 +
             (C13226 * C1024 + C13222 * C1036 + C13227 * C1023 +
              C13223 * C1035) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          ((((C13431 + C13432) * C116 + (C13433 + C13434) * C31023) * C13224 +
            ((C13435 + C13436) * C116 + (C13437 + C13438) * C31023) * C13225) *
               C30844 * C943 -
           (((C13434 + C13433) * C31023 + (C13432 + C13431) * C116) * C13225 +
            ((C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C31023 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C116) *
                C13224) *
               C30844 * C942 -
           (((C13227 * C1022 + C13223 * C1034 + C13226 * C1023 +
              C13222 * C1035) *
                 C31023 +
             (C13227 * C1016 + C13223 * C1025 + C13226 * C1017 +
              C13222 * C1026) *
                 C116) *
                C13225 +
            ((C13438 + C13437) * C31023 + (C13436 + C13435) * C116) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C116 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C31023) *
                C13224 +
            ((C13439 + C13440) * C116 + (C13441 + C13442) * C31023) * C13225) *
               C30844 * C942 -
           (((C13443 + C13444) * C31023 + (C13445 + C13446) * C116) * C13225 +
            ((C13442 + C13441) * C31023 + (C13440 + C13439) * C116) * C13224) *
               C30844 * C943 +
           (((C13446 + C13445) * C116 + (C13444 + C13443) * C31023) * C13224 +
            ((C13226 * C1016 + C13222 * C1025 + C13227 * C1290 +
              C13223 * C1291) *
                 C116 +
             (C13226 * C1022 + C13222 * C1034 + C13227 * C1292 +
              C13223 * C1293) *
                 C31023) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C116 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C31023) *
               C13224 +
           ((C13423 + C13424) * C116 + (C13425 + C13426) * C31023) * C13225) *
              C30844 * C1010 -
          (((C13427 + C13428) * C31023 + (C13429 + C13430) * C116) * C13225 +
           ((C13426 + C13425) * C31023 + (C13424 + C13423) * C116) * C13224) *
              C30844 * C1011 +
          (((C13430 + C13429) * C116 + (C13428 + C13427) * C31023) * C13224 +
           ((C14339 + C14340) * C116 + (C14341 + C14342) * C31023) * C13225) *
              C30844 * C1012 -
          (((C14343 + C14344) * C31023 + (C14345 + C14346) * C116) * C13225 +
           ((C14342 + C14341) * C31023 + (C14340 + C14339) * C116) * C13224) *
              C30844 * C1013 +
          (((C14346 + C14345) * C116 + (C14344 + C14343) * C31023) * C13224 +
           ((C13226 * C5433 + C13222 * C5436 + C13227 * C5713 +
             C13223 * C5714) *
                C116 +
            (C13226 * C5435 + C13222 * C5439 + C13227 * C5715 +
             C13223 * C5716) *
                C31023) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C30885 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C30892 +
                   ((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30844 * C2700) *
                      C30803 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C30892 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C30885 -
                   ((C25805 + C25806 + C25807 + C25808) * C13225 +
                    (C24650 + C24649 + C24648 + C24647) * C13224) *
                       C30844 * C2700) *
                      C30812 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30844 * C30885 -
                   ((C24655 + C24656 + C24657 + C24658) * C13225 +
                    (C24654 + C24653 + C24652 + C24651) * C13224) *
                       C30844 * C30892 +
                   ((C24658 + C24657 + C24656 + C24655) * C13224 +
                    (C4724 * C18918 + C4723 * C18916 +
                     (C4559 * C1544 + C30772 * C1547) * C18919 +
                     (C4559 * C1550 + C30772 * C1553) * C18917) *
                        C13225) *
                       C30844 * C2700) *
                      C2703)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C30885 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C30892 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C31080 -
                    ((C26137 + C26138 + C26139 + C26140) * C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C2700) *
                      C2440 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C30885 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30892 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C31080) *
                       C2700) *
                      C30809)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C31154 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C31150 +
                   ((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30844 * C31140 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C30844 * C31120) *
                      C2440 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C31150 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C31154 -
                   ((C25805 + C25806 + C25807 + C25808) * C13225 +
                    (C24650 + C24649 + C24648 + C24647) * C13224) *
                       C30844 * C31140 +
                   ((C25808 + C25807 + C25806 + C25805) * C13224 +
                    (C5724 * C18918 + C5723 * C18916 +
                     (C4559 * C5872 + C30772 * C5873) * C18919 +
                     (C4559 * C5874 + C30772 * C5875) * C18917) *
                        C13225) *
                       C30844 * C31120) *
                      C30809)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C2332 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C30889) *
                      C31153 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C30889 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C2332) *
                      C31146 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30844 * C2332 -
                   ((C24655 + C24656 + C24657 + C24658) * C13225 +
                    (C24654 + C24653 + C24652 + C24651) * C13224) *
                       C30844 * C30889) *
                      C31133 +
                  (((C24935 + C24936 + C24943 + C24944) * C13224 +
                    (C4964 * C18918 + C4965 * C18916 +
                     (C4559 * C1440 + C30772 * C1441) * C18919 +
                     (C4559 * C1442 + C30772 * C1443) * C18917) *
                        C13225) *
                       C30844 * C30889 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C30844 * C2332) *
                      C31114)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31148 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C31137 +
                    ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                      C9237 * C18917) *
                         C13224 +
                     (C25663 + C25664 + C25665 + C25666) * C13225) *
                        C31113) *
                       C2332 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C31137 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31148 -
                    ((C25671 + C25672 + C25673 + C25674) * C13225 +
                     (C25666 + C25665 + C25664 + C25663) * C13224) *
                        C31113) *
                       C30889) *
                      C2440 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C31137 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31148 -
                    ((C26709 + C26710 + C26711 + C26712) * C13225 +
                     (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                      C9241 * C18918) *
                         C13224) *
                        C31113) *
                       C2332 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31148 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C31137 +
                    ((C26712 + C26711 + C26710 + C26709) * C13224 +
                     (C6450 * C18918 + C6449 * C18916 +
                      (C4559 * C6554 + C30772 * C6555) * C18919 +
                      (C4559 * C6556 + C30772 * C6557) * C18917) *
                         C13225) *
                        C31113) *
                       C30889) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C30889) *
                      C30803 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C2332 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C30812 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C31080 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C31080) *
                       C30889) *
                      C2703)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C2332 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C30889) *
                      C31153 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C30889 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C2332) *
                      C31146 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30844 * C2332 -
                   ((C24655 + C24656 + C24657 + C24658) * C13225 +
                    (C24654 + C24653 + C24652 + C24651) * C13224) *
                       C30844 * C30889) *
                      C31133 +
                  (((C24935 + C24936 + C24943 + C24944) * C13224 +
                    (C4964 * C18918 + C4965 * C18916 +
                     (C4559 * C1440 + C30772 * C1441) * C18919 +
                     (C4559 * C1442 + C30772 * C1443) * C18917) *
                        C13225) *
                       C30844 * C30889 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C30844 * C2332) *
                      C31114)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C31154 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C31150 +
                   ((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30844 * C31140 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C30844 * C31120) *
                      C2440 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C31150 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C31154 -
                   ((C25805 + C25806 + C25807 + C25808) * C13225 +
                    (C24650 + C24649 + C24648 + C24647) * C13224) *
                       C30844 * C31140 +
                   ((C25808 + C25807 + C25806 + C25805) * C13224 +
                    (C5724 * C18918 + C5723 * C18916 +
                     (C4559 * C5872 + C30772 * C5873) * C18919 +
                     (C4559 * C5874 + C30772 * C5875) * C18917) *
                        C13225) *
                       C30844 * C31120) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C30885 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C30892 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C3094 -
                    ((C26137 + C26138 + C26139 + C26140) * C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C2700) *
                      C31065 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C30885 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30892 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C3094) *
                       C2700) *
                      C30809)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30927 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30934 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C3602) *
                      C30885 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C30934 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30927 -
                   ((C25671 + C25672 + C25673 + C25674) * C13225 +
                    (C25666 + C25665 + C25664 + C25663) * C13224) *
                       C3602) *
                      C30892 +
                  (((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30927 -
                   ((C26137 + C26138 + C26139 + C26140) * C13225 +
                    (C25670 + C25669 + C25668 + C25667) * C13224) *
                       C30934 +
                   ((C25674 + C25673 + C25672 + C25671) * C13224 +
                    (C5606 * C18918 + C5605 * C18916 +
                     (C4559 * C6656 + C30772 * C6657) * C18919 +
                     (C4559 * C6658 + C30772 * C6659) * C18917) *
                        C13225) *
                       C3602) *
                      C2700) *
                 C30798) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C3094 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C31154 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C30931 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C3094) *
                      C31150 +
                  (((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C3094 -
                   ((C26137 + C26138 + C26139 + C26140) * C13225 +
                    (C25670 + C25669 + C25668 + C25667) * C13224) *
                       C30931) *
                      C31140 +
                  (((C26140 + C26139 + C26138 + C26137) * C13224 +
                    (C5994 * C18918 + C5993 * C18916 +
                     (C4559 * C5571 + C30772 * C5576) * C18919 +
                     (C4559 * C5577 + C30772 * C5580) * C18917) *
                        C13225) *
                       C30931 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C3094) *
                      C31120) *
                 C30798) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C30889) *
                      C31144 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C2332 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C31131 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C3094 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C3094) *
                       C30889) *
                      C31104)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31155 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C31152 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C31143 -
                   ((C26973 + C26974 + C26975 + C26976) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9237 * C18916 +
                     C9238 * C18918) *
                        C13224) *
                       C31126) *
                      C2332 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C31152 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C31155 -
                   ((C25671 + C25672 + C25673 + C25674) * C13225 +
                    (C25666 + C25665 + C25664 + C25663) * C13224) *
                       C31143 +
                   ((C26976 + C26975 + C26974 + C26973) * C13224 +
                    (C6670 * C18918 + C6669 * C18916 +
                     (C4559 * C6280 + C30772 * C6285) * C18919 +
                     (C4559 * C6286 + C30772 * C6289) * C18917) *
                        C13225) *
                       C31126) *
                      C30889) *
                 C30798) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C30927 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30934 +
                    ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                      C9237 * C18917) *
                         C13224 +
                     (C25663 + C25664 + C25665 + C25666) * C13225) *
                        C3602) *
                       C2332 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30934 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C30927 -
                    ((C25671 + C25672 + C25673 + C25674) * C13225 +
                     (C25666 + C25665 + C25664 + C25663) * C13224) *
                        C3602) *
                       C30889) *
                      C31065 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30934 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C30927 -
                    ((C26709 + C26710 + C26711 + C26712) * C13225 +
                     (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                      C9241 * C18918) *
                         C13224) *
                        C3602) *
                       C2332 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C30927 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30934 +
                    ((C26712 + C26711 + C26710 + C26709) * C13224 +
                     (C6450 * C18918 + C6449 * C18916 +
                      (C4559 * C6554 + C30772 * C6555) * C18919 +
                      (C4559 * C6556 + C30772 * C6557) * C18917) *
                         C13225) *
                        C3602) *
                       C30889) *
                      C30809)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C30889) *
                      C31144 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C2332 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C31131 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C3094 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C2332 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C3094) *
                       C30889) *
                      C31104)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C3094 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C31154 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C30931 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C3094) *
                      C31150 +
                  (((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C3094 -
                   ((C26137 + C26138 + C26139 + C26140) * C13225 +
                    (C25670 + C25669 + C25668 + C25667) * C13224) *
                       C30931) *
                      C31140 +
                  (((C26140 + C26139 + C26138 + C26137) * C13224 +
                    (C5994 * C18918 + C5993 * C18916 +
                     (C4559 * C5571 + C30772 * C5576) * C18919 +
                     (C4559 * C5577 + C30772 * C5580) * C18917) *
                        C13225) *
                       C30931 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C3094) *
                      C31120) *
                 C30798) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C1284 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C1285 +
                   ((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30844 * C1286 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C30844 * C31120) *
                      C31065 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C1285 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C1284 -
                   ((C25805 + C25806 + C25807 + C25808) * C13225 +
                    (C24650 + C24649 + C24648 + C24647) * C13224) *
                       C30844 * C1286 +
                   ((C25808 + C25807 + C25806 + C25805) * C13224 +
                    (C5724 * C18918 + C5723 * C18916 +
                     (C4559 * C5872 + C30772 * C5873) * C18919 +
                     (C4559 * C5874 + C30772 * C5875) * C18917) *
                        C13225) *
                       C30844 * C31120) *
                      C30809)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C31079 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C30889) *
                      C554 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C30889 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C31079) *
                      C555 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30844 * C31079 -
                   ((C24655 + C24656 + C24657 + C24658) * C13225 +
                    (C24654 + C24653 + C24652 + C24651) * C13224) *
                       C30844 * C30889) *
                      C556 +
                  (((C24935 + C24936 + C24943 + C24944) * C13224 +
                    (C4964 * C18918 + C4965 * C18916 +
                     (C4559 * C1440 + C30772 * C1441) * C18919 +
                     (C4559 * C1442 + C30772 * C1443) * C18917) *
                        C13225) *
                       C30844 * C30889 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C30844 * C31079) *
                      C31114)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C1664 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C1665 +
                    ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                      C9237 * C18917) *
                         C13224 +
                     (C25663 + C25664 + C25665 + C25666) * C13225) *
                        C31113) *
                       C31079 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C1665 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C1664 -
                    ((C25671 + C25672 + C25673 + C25674) * C13225 +
                     (C25666 + C25665 + C25664 + C25663) * C13224) *
                        C31113) *
                       C30889) *
                      C31065 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C1665 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C1664 -
                    ((C26709 + C26710 + C26711 + C26712) * C13225 +
                     (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                      C9241 * C18918) *
                         C13224) *
                        C31113) *
                       C31079 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C1664 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C1665 +
                    ((C26712 + C26711 + C26710 + C26709) * C13224 +
                     (C6450 * C18918 + C6449 * C18916 +
                      (C4559 * C6554 + C30772 * C6555) * C18919 +
                      (C4559 * C6556 + C30772 * C6557) * C18917) *
                         C13225) *
                        C31113) *
                       C30889) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31080 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C1284 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C30931 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C31080) *
                      C1285 +
                  (((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C31080 -
                   ((C26137 + C26138 + C26139 + C26140) * C13225 +
                    (C25670 + C25669 + C25668 + C25667) * C13224) *
                       C30931) *
                      C1286 +
                  (((C26140 + C26139 + C26138 + C26137) * C13224 +
                    (C5994 * C18918 + C5993 * C18916 +
                     (C4559 * C5571 + C30772 * C5576) * C18919 +
                     (C4559 * C5577 + C30772 * C5580) * C18917) *
                        C13225) *
                       C30931 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C31080) *
                      C31120) *
                 C30798) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C5239 * C18918 + C5238 * C18916 + C5601 * C18919 +
                      C5602 * C18917) *
                         C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C30889) *
                      C258 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C31079 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C6449 * C18917 + C6450 * C18919 + C5245 * C18916 +
                      C5244 * C18918) *
                         C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C259 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C31080 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C31080) *
                       C30889) *
                      C31104)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C2116 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C2117 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C2118 -
                   ((C26973 + C26974 + C26975 + C26976) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9237 * C18916 +
                     C9238 * C18918) *
                        C13224) *
                       C31126) *
                      C31079 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C2117 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C2116 -
                   ((C25671 + C25672 + C25673 + C25674) * C13225 +
                    (C25666 + C25665 + C25664 + C25663) * C13224) *
                       C2118 +
                   ((C26976 + C26975 + C26974 + C26973) * C13224 +
                    (C6670 * C18918 + C6669 * C18916 +
                     (C4559 * C6280 + C30772 * C6285) * C18919 +
                     (C4559 * C6286 + C30772 * C6289) * C18917) *
                        C13225) *
                       C31126) *
                      C30889) *
                 C30798) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C4559 * C117 + C30772 * C124) * C18918 +
                (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                C9234 * C18917) *
                   C13224 +
               (C4707 * C18918 + C4708 * C18916 + C5241 * C18919 +
                C5240 * C18917) *
                   C13225) *
                  C30844 * C30826 * C108 -
              ((C5243 * C18917 + C5242 * C18919 + C4714 * C18916 +
                C4713 * C18918) *
                   C13225 +
               (C9240 * C18917 + C9239 * C18919 +
                (C4559 * C128 + C30772 * C139) * C18916 +
                (C4559 * C118 + C30772 * C125) * C18918) *
                   C13224) *
                  C30844 * C30826 * C109 +
              (((C4559 * C119 + C30772 * C126) * C18918 +
                (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                C9246 * C18917) *
                   C13224 +
               (C4719 * C18918 + C4720 * C18916 + C5249 * C18919 +
                C5248 * C18917) *
                   C13225) *
                  C30844 * C30826 * C110 -
              (((C4559 * C823 + C30772 * C830) * C18917 +
                (C4559 * C815 + C30772 * C824) * C18919 + C4963 * C18916 +
                C4962 * C18918) *
                   C13225 +
               (C9456 * C18917 + C9455 * C18919 +
                (C4559 * C130 + C30772 * C141) * C18916 +
                (C4559 * C120 + C30772 * C131) * C18918) *
                   C13224) *
                  C30844 * C30826 * C111 +
              (((C4559 * C121 + C30772 * C132) * C18918 +
                (C4559 * C133 + C30772 * C142) * C18916 +
                (C4559 * C422 + C30772 * C441) * C18919 +
                (C4559 * C440 + C30772 * C452) * C18917) *
                   C13224 +
               ((C4559 * C269 + C30772 * C288) * C18918 +
                (C4559 * C287 + C30772 * C299) * C18916 +
                (C4559 * C816 + C30772 * C825) * C18919 +
                (C4559 * C826 + C30772 * C831) * C18917) *
                   C13225) *
                  C30844 * C30826 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C4559 * C117 + C30772 * C124) * C18918 +
                 (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                 C9234 * C18917) *
                    C13224 +
                (C24635 + C24636 + C24637 + C24638) * C13225) *
                   C30844 * C31147 -
               ((C24639 + C24640 + C24641 + C24642) * C13225 +
                (C24638 + C24637 + C24636 + C24635) * C13224) *
                   C30844 * C31135 +
               ((C24642 + C24641 + C24640 + C24639) * C13224 +
                (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
                 C5604 * C18917) *
                    C13225) *
                   C30844 * C31110) *
                  C258 +
              (((C24643 + C24644 + C24645 + C24646) * C13224 +
                (C24647 + C24648 + C24649 + C24650) * C13225) *
                   C30844 * C31135 -
               ((C24646 + C24645 + C24644 + C24643) * C13225 +
                (C9240 * C18917 + C9239 * C18919 +
                 (C4559 * C128 + C30772 * C139) * C18916 +
                 (C4559 * C118 + C30772 * C125) * C18918) *
                    C13224) *
                   C30844 * C31147 -
               ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
                 C4717 * C18918) *
                    C13225 +
                (C24650 + C24649 + C24648 + C24647) * C13224) *
                   C30844 * C31110) *
                  C259 +
              ((((C4559 * C119 + C30772 * C126) * C18918 +
                 (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                 C9246 * C18917) *
                    C13224 +
                (C24651 + C24652 + C24653 + C24654) * C13225) *
                   C30844 * C31147 -
               ((C24655 + C24656 + C24657 + C24658) * C13225 +
                (C24654 + C24653 + C24652 + C24651) * C13224) *
                   C30844 * C31135 +
               ((C24658 + C24657 + C24656 + C24655) * C13224 +
                (C4724 * C18918 + C4723 * C18916 +
                 (C4559 * C1544 + C30772 * C1547) * C18919 +
                 (C4559 * C1550 + C30772 * C1553) * C18917) *
                    C13225) *
                   C30844 * C31110) *
                  C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C31148 -
           ((C5600 * C18917 + C5599 * C18919 + C5240 * C18916 +
             C5241 * C18918) *
                C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C31137 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C5599 * C18918 + C5600 * C18916 + C6672 * C18919 +
             C6671 * C18917) *
                C13225) *
               C31113) *
              C30826 * C258 +
          (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
             C9242 * C18917) *
                C13224 +
            (C5242 * C18918 + C5243 * C18916 + C6452 * C18919 +
             C6451 * C18917) *
                C13225) *
               C31137 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C31148 -
           ((C10691 * C18917 + C10692 * C18919 + C6451 * C18916 +
             C6452 * C18918) *
                C13225 +
            (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
             C9241 * C18918) *
                C13224) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C31148 -
           ((C9610 * C18917 + C9609 * C18919 + C5248 * C18916 +
             C5249 * C18918) *
                C13225 +
            (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
             C9245 * C18918) *
                C13224) *
               C31137 +
           ((C9247 * C18918 + C9248 * C18916 + C9250 * C18919 +
             C9249 * C18917) *
                C13224 +
            (C9609 * C18918 + C9610 * C18916 +
             (C4559 * C2224 + C30772 * C2227) * C18919 +
             (C4559 * C2230 + C30772 * C2233) * C18917) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C942 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C943 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C943 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C942 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C942 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C943 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C24635 + C24636 + C24637 + C24638) * C13225) *
              C30844 * C1010 -
          ((C24639 + C24640 + C24641 + C24642) * C13225 +
           (C24638 + C24637 + C24636 + C24635) * C13224) *
              C30844 * C1011 +
          ((C24642 + C24641 + C24640 + C24639) * C13224 +
           (C25509 + C25510 + C25511 + C25512) * C13225) *
              C30844 * C1012 -
          ((C25513 + C25514 + C25515 + C25516) * C13225 +
           (C25512 + C25511 + C25510 + C25509) * C13224) *
              C30844 * C1013 +
          ((C25516 + C25515 + C25514 + C25513) * C13224 +
           (C5454 * C18918 + C5453 * C18916 +
            (C4559 * C5983 + C30772 * C5984) * C18919 +
            (C4559 * C5985 + C30772 * C5986) * C18917) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C31148 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C31137 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C942 +
          (((C25272 + C25271 + C25270 + C25269) * C13224 +
            (C25667 + C25668 + C25669 + C25670) * C13225) *
               C31137 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C31148 -
           ((C25671 + C25672 + C25673 + C25674) * C13225 +
            (C25666 + C25665 + C25664 + C25663) * C13224) *
               C31113) *
              C943 +
          (((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C25509 + C25510 + C25511 + C25512) * C13225) *
               C31148 -
           ((C5605 * C18917 + C5606 * C18919 + C5604 * C18916 +
             C5603 * C18918) *
                C13225 +
            (C25670 + C25669 + C25668 + C25667) * C13224) *
               C31137 +
           ((C25674 + C25673 + C25672 + C25671) * C13224 +
            (C5606 * C18918 + C5605 * C18916 +
             (C4559 * C6656 + C30772 * C6657) * C18919 +
             (C4559 * C6658 + C30772 * C6659) * C18917) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C1664 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C1665 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C30826 * C31144 +
          (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
             C9242 * C18917) *
                C13224 +
            (C25273 + C25274 + C25275 + C25276) * C13225) *
               C1665 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C1664 -
           ((C10691 * C18917 + C10692 * C18919 + C6451 * C18916 +
             C6452 * C18918) *
                C13225 +
            (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
             C9241 * C18918) *
                C13224) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C1664 -
           ((C25277 + C25278 + C25279 + C25280) * C13225 +
            (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
             C9245 * C18918) *
                C13224) *
               C1665 +
           ((C9247 * C18918 + C9248 * C18916 + C9250 * C18919 +
             C9249 * C18917) *
                C13224 +
            (C9609 * C18918 + C9610 * C18916 +
             (C4559 * C2224 + C30772 * C2227) * C18919 +
             (C4559 * C2230 + C30772 * C2233) * C18917) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C1664 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C1665 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C31147 +
          (((C25272 + C25271 + C25270 + C25269) * C13224 +
            (C25667 + C25668 + C25669 + C25670) * C13225) *
               C1665 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C1664 -
           ((C25671 + C25672 + C25673 + C25674) * C13225 +
            (C25666 + C25665 + C25664 + C25663) * C13224) *
               C31113) *
              C31135 +
          (((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C25509 + C25510 + C25511 + C25512) * C13225) *
               C1664 -
           ((C26137 + C26138 + C26139 + C26140) * C13225 +
            (C25670 + C25669 + C25668 + C25667) * C13224) *
               C1665 +
           ((C25674 + C25673 + C25672 + C25671) * C13224 +
            (C5606 * C18918 + C5605 * C18916 +
             (C4559 * C6656 + C30772 * C6657) * C18919 +
             (C4559 * C6658 + C30772 * C6659) * C18917) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C24635 + C24636 + C24637 + C24638) * C13225) *
              C1839 -
          ((C25269 + C25270 + C25271 + C25272) * C13225 +
           (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 + C9233 * C18918) *
               C13224) *
              C1840 +
          ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 + C9237 * C18917) *
               C13224 +
           (C25663 + C25664 + C25665 + C25666) * C13225) *
              C1841 -
          ((C10907 * C18917 + C10908 * C18919 + C6671 * C18916 +
            C6672 * C18918) *
               C13225 +
           (C10534 * C18917 + C10533 * C18919 + C9237 * C18916 +
            C9238 * C18918) *
               C13224) *
              C1842 +
          ((C10533 * C18918 + C10534 * C18916 + C10536 * C18919 +
            C10535 * C18917) *
               C13224 +
           (C10908 * C18918 + C10907 * C18916 +
            (C4559 * C10898 + C30772 * C10899) * C18919 +
            (C4559 * C10900 + C30772 * C10901) * C18917) *
               C13225) *
              C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C942 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C943 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C31080 -
                    ((C5605 * C18917 + C5606 * C18919 + C5604 * C18916 +
                      C5603 * C18918) *
                         C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C31110) *
                      C31065 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C942 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C943 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C31080) *
                       C31110) *
                      C30809)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31080 -
                   ((C5600 * C18917 + C5599 * C18919 + C5240 * C18916 +
                     C5241 * C18918) *
                        C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C554 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C5242 * C18918 + C5243 * C18916 + C6452 * C18919 +
                     C6451 * C18917) *
                        C13225) *
                       C30931 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C31080) *
                      C30826 * C555 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C31080 -
                   ((C9610 * C18917 + C9609 * C18919 + C5248 * C18916 +
                     C5249 * C18918) *
                        C13225 +
                    (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                     C9245 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C556 +
                  (((C9455 * C18918 + C9456 * C18916 + C9457 * C18919 +
                     C9458 * C18917) *
                        C13224 +
                    (C24941 * C18918 + C24942 * C18916 +
                     (C4559 * C2014 + C30772 * C2015) * C18919 +
                     (C4559 * C2016 + C30772 * C2017) * C18917) *
                        C13225) *
                       C30931 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C31080) *
                      C30826 * C31114)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C2116 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C2117 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C2118 -
                   ((C10907 * C18917 + C10908 * C18919 + C6671 * C18916 +
                     C6672 * C18918) *
                        C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9237 * C18916 +
                     C9238 * C18918) *
                        C13224) *
                       C31126) *
                      C30826 * C31065 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C25273 + C25274 + C25275 + C25276) * C13225) *
                       C2117 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C2116 -
                   ((C26709 + C26710 + C26711 + C26712) * C13225 +
                    (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                     C9241 * C18918) *
                        C13224) *
                       C2118 +
                   ((C9243 * C18918 + C9244 * C18916 + C10800 * C18919 +
                     C10799 * C18917) *
                        C13224 +
                    (C10692 * C18918 + C10691 * C18916 +
                     (C4559 * C10682 + C30772 * C10683) * C18919 +
                     (C4559 * C10684 + C30772 * C10685) * C18917) *
                        C13225) *
                       C31126) *
                      C30826 * C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C31147 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C31135 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C258 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C31135 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C31147 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C31147 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C31135 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C4707 * C18918 + C4708 * C18916 + C5241 * C18919 + C5240 * C18917) *
               C13225) *
              C30844 * C30826 * C108 -
          ((C5243 * C18917 + C5242 * C18919 + C4714 * C18916 + C4713 * C18918) *
               C13225 +
           (C9240 * C18917 + C9239 * C18919 +
            (C4559 * C128 + C30772 * C139) * C18916 +
            (C4559 * C118 + C30772 * C125) * C18918) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C18918 +
            (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
            C9246 * C18917) *
               C13224 +
           (C4719 * C18918 + C4720 * C18916 + C5249 * C18919 + C5248 * C18917) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C4559 * C823 + C30772 * C830) * C18917 +
            (C4559 * C815 + C30772 * C824) * C18919 + C4963 * C18916 +
            C4962 * C18918) *
               C13225 +
           (C9456 * C18917 + C9455 * C18919 +
            (C4559 * C130 + C30772 * C141) * C18916 +
            (C4559 * C120 + C30772 * C131) * C18918) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C18918 +
            (C4559 * C133 + C30772 * C142) * C18916 +
            (C4559 * C422 + C30772 * C441) * C18919 +
            (C4559 * C440 + C30772 * C452) * C18917) *
               C13224 +
           ((C4559 * C269 + C30772 * C288) * C18918 +
            (C4559 * C287 + C30772 * C299) * C18916 +
            (C4559 * C816 + C30772 * C825) * C18919 +
            (C4559 * C826 + C30772 * C831) * C18917) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C942 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C943 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C943 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C942 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C942 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C943 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C24635 + C24636 + C24637 + C24638) * C13225) *
              C30844 * C1010 -
          ((C24639 + C24640 + C24641 + C24642) * C13225 +
           (C24638 + C24637 + C24636 + C24635) * C13224) *
              C30844 * C1011 +
          ((C24642 + C24641 + C24640 + C24639) * C13224 +
           (C25509 + C25510 + C25511 + C25512) * C13225) *
              C30844 * C1012 -
          ((C25513 + C25514 + C25515 + C25516) * C13225 +
           (C25512 + C25511 + C25510 + C25509) * C13224) *
              C30844 * C1013 +
          ((C25516 + C25515 + C25514 + C25513) * C13224 +
           (C5454 * C18918 + C5453 * C18916 +
            (C4559 * C5983 + C30772 * C5984) * C18919 +
            (C4559 * C5985 + C30772 * C5986) * C18917) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C1664 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C1665 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C30826 * C31144 +
          (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
             C9242 * C18917) *
                C13224 +
            (C25273 + C25274 + C25275 + C25276) * C13225) *
               C1665 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C1664 -
           ((C10691 * C18917 + C10692 * C18919 + C6451 * C18916 +
             C6452 * C18918) *
                C13225 +
            (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
             C9241 * C18918) *
                C13224) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C1664 -
           ((C25277 + C25278 + C25279 + C25280) * C13225 +
            (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
             C9245 * C18918) *
                C13224) *
               C1665 +
           ((C9247 * C18918 + C9248 * C18916 + C9250 * C18919 +
             C9249 * C18917) *
                C13224 +
            (C9609 * C18918 + C9610 * C18916 +
             (C4559 * C2224 + C30772 * C2227) * C18919 +
             (C4559 * C2230 + C30772 * C2233) * C18917) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C1664 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C1665 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C31147 +
          (((C25272 + C25271 + C25270 + C25269) * C13224 +
            (C25667 + C25668 + C25669 + C25670) * C13225) *
               C1665 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C1664 -
           ((C25671 + C25672 + C25673 + C25674) * C13225 +
            (C25666 + C25665 + C25664 + C25663) * C13224) *
               C31113) *
              C31135 +
          (((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C25509 + C25510 + C25511 + C25512) * C13225) *
               C1664 -
           ((C26137 + C26138 + C26139 + C26140) * C13225 +
            (C25670 + C25669 + C25668 + C25667) * C13224) *
               C1665 +
           ((C25674 + C25673 + C25672 + C25671) * C13224 +
            (C5606 * C18918 + C5605 * C18916 +
             (C4559 * C6656 + C30772 * C6657) * C18919 +
             (C4559 * C6658 + C30772 * C6659) * C18917) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C30889) *
                      C30803 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C31079 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C30812 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C3094 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C3094) *
                       C30889) *
                      C2703)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C30927 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30934 +
                    ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                      C9237 * C18917) *
                         C13224 +
                     (C25663 + C25664 + C25665 + C25666) * C13225) *
                        C3602) *
                       C31079 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30934 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C30927 -
                    ((C25671 + C25672 + C25673 + C25674) * C13225 +
                     (C25666 + C25665 + C25664 + C25663) * C13224) *
                        C3602) *
                       C30889) *
                      C2440 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30934 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C30927 -
                    ((C26709 + C26710 + C26711 + C26712) * C13225 +
                     (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                      C9241 * C18918) *
                         C13224) *
                        C3602) *
                       C31079 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C30927 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30934 +
                    ((C26712 + C26711 + C26710 + C26709) * C13224 +
                     (C6450 * C18918 + C6449 * C18916 +
                      (C4559 * C6554 + C30772 * C6555) * C18919 +
                      (C4559 * C6556 + C30772 * C6557) * C18917) *
                         C13225) *
                        C3602) *
                       C30889) *
                      C30809)) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C31147 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C31135 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C3094 -
                    ((C26137 + C26138 + C26139 + C26140) * C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C31110) *
                      C2440 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C31147 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C31135 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C3094) *
                       C31110) *
                      C30809)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C3094 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C31153 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C25273 + C25274 + C25275 + C25276) * C13225) *
                       C30931 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C3094) *
                      C30826 * C31146 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C3094 -
                   ((C25277 + C25278 + C25279 + C25280) * C13225 +
                    (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                     C9245 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C31133 +
                  (((C9455 * C18918 + C9456 * C18916 + C9457 * C18919 +
                     C9458 * C18917) *
                        C13224 +
                    (C24941 * C18918 + C24942 * C18916 +
                     (C4559 * C2014 + C30772 * C2015) * C18919 +
                     (C4559 * C2016 + C30772 * C2017) * C18917) *
                        C13225) *
                       C30931 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C3094) *
                      C30826 * C31114)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31155 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C31152 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C31143 -
                   ((C26973 + C26974 + C26975 + C26976) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9237 * C18916 +
                     C9238 * C18918) *
                        C13224) *
                       C31126) *
                      C30826 * C2440 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C25273 + C25274 + C25275 + C25276) * C13225) *
                       C31152 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C31155 -
                   ((C26709 + C26710 + C26711 + C26712) * C13225 +
                    (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                     C9241 * C18918) *
                        C13224) *
                       C31143 +
                   ((C9243 * C18918 + C9244 * C18916 + C10800 * C18919 +
                     C10799 * C18917) *
                        C13224 +
                    (C10692 * C18918 + C10691 * C18916 +
                     (C4559 * C10682 + C30772 * C10683) * C18919 +
                     (C4559 * C10684 + C30772 * C10685) * C18917) *
                        C13225) *
                       C31126) *
                      C30826 * C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30927 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30934 +
                   ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
                     C9237 * C18917) *
                        C13224 +
                    (C25663 + C25664 + C25665 + C25666) * C13225) *
                       C3602) *
                      C30826 * C30803 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C25273 + C25274 + C25275 + C25276) * C13225) *
                       C30934 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30927 -
                   ((C26709 + C26710 + C26711 + C26712) * C13225 +
                    (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
                     C9241 * C18918) *
                        C13224) *
                       C3602) *
                      C30826 * C30812 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30927 -
                   ((C25277 + C25278 + C25279 + C25280) * C13225 +
                    (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                     C9245 * C18918) *
                        C13224) *
                       C30934 +
                   ((C9247 * C18918 + C9248 * C18916 + C9250 * C18919 +
                     C9249 * C18917) *
                        C13224 +
                    (C9609 * C18918 + C9610 * C18916 +
                     (C4559 * C2224 + C30772 * C2227) * C18919 +
                     (C4559 * C2230 + C30772 * C2233) * C18917) *
                        C13225) *
                       C3602) *
                      C30826 * C2703)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C3094 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C31153 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C25273 + C25274 + C25275 + C25276) * C13225) *
                       C30931 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C3094) *
                      C30826 * C31146 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C3094 -
                   ((C25277 + C25278 + C25279 + C25280) * C13225 +
                    (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                     C9245 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C31133 +
                  (((C9455 * C18918 + C9456 * C18916 + C9457 * C18919 +
                     C9458 * C18917) *
                        C13224 +
                    (C24941 * C18918 + C24942 * C18916 +
                     (C4559 * C2014 + C30772 * C2015) * C18919 +
                     (C4559 * C2016 + C30772 * C2017) * C18917) *
                        C13225) *
                       C30931 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C3094) *
                      C30826 * C31114)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C3094 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C31147 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C3094) *
                       C31135 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C3094 -
                    ((C26137 + C26138 + C26139 + C26140) * C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C31110) *
                      C2440 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C3094) *
                       C31147 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C3094 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C31135 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C3094) *
                       C31110) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C31079 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C30889) *
                      C554 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C30889 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C31079) *
                      C555 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C30844 * C31079 -
                   ((C24655 + C24656 + C24657 + C24658) * C13225 +
                    (C24654 + C24653 + C24652 + C24651) * C13224) *
                       C30844 * C30889) *
                      C556 +
                  (((C24935 + C24936 + C24943 + C24944) * C13224 +
                    (C4964 * C18918 + C4965 * C18916 +
                     (C4559 * C1440 + C30772 * C1441) * C18919 +
                     (C4559 * C1442 + C30772 * C1443) * C18917) *
                        C13225) *
                       C30844 * C30889 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C30844 * C31079) *
                      C31114)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C30844 * C1284 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C30844 * C1285 +
                   ((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C30844 * C1286 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C30844 * C31120) *
                      C31065 +
                  (((C24643 + C24644 + C24645 + C24646) * C13224 +
                    (C24647 + C24648 + C24649 + C24650) * C13225) *
                       C30844 * C1285 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C30844 * C1284 -
                   ((C25805 + C25806 + C25807 + C25808) * C13225 +
                    (C24650 + C24649 + C24648 + C24647) * C13224) *
                       C30844 * C1286 +
                   ((C25808 + C25807 + C25806 + C25805) * C13224 +
                    (C5724 * C18918 + C5723 * C18916 +
                     (C4559 * C5872 + C30772 * C5873) * C18919 +
                     (C4559 * C5874 + C30772 * C5875) * C18917) *
                        C13225) *
                       C30844 * C31120) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C5239 * C18918 + C5238 * C18916 + C5601 * C18919 +
                      C5602 * C18917) *
                         C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C30889) *
                      C258 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C31079 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C6449 * C18917 + C6450 * C18919 + C5245 * C18916 +
                      C5244 * C18918) *
                         C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C30889) *
                      C259 +
                  (((((C4559 * C119 + C30772 * C126) * C18918 +
                      (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                      C9246 * C18917) *
                         C13224 +
                     (C24651 + C24652 + C24653 + C24654) * C13225) *
                        C31080 -
                    ((C25277 + C25278 + C25279 + C25280) * C13225 +
                     (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                      C9245 * C18918) *
                         C13224) *
                        C30931) *
                       C31079 +
                   (((C25280 + C25279 + C25278 + C25277) * C13224 +
                     (C5247 * C18918 + C5246 * C18916 +
                      (C4559 * C1158 + C30772 * C1173) * C18919 +
                      (C4559 * C1176 + C30772 * C1185) * C18917) *
                         C13225) *
                        C30931 -
                    ((C24655 + C24656 + C24657 + C24658) * C13225 +
                     (C24654 + C24653 + C24652 + C24651) * C13224) *
                        C31080) *
                       C30889) *
                      C31104)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31080 -
                   ((C25269 + C25270 + C25271 + C25272) * C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C1284 +
                  (((C25272 + C25271 + C25270 + C25269) * C13224 +
                    (C25667 + C25668 + C25669 + C25670) * C13225) *
                       C30931 -
                   ((C24639 + C24640 + C24641 + C24642) * C13225 +
                    (C24638 + C24637 + C24636 + C24635) * C13224) *
                       C31080) *
                      C1285 +
                  (((C24642 + C24641 + C24640 + C24639) * C13224 +
                    (C25509 + C25510 + C25511 + C25512) * C13225) *
                       C31080 -
                   ((C26137 + C26138 + C26139 + C26140) * C13225 +
                    (C25670 + C25669 + C25668 + C25667) * C13224) *
                       C30931) *
                      C1286 +
                  (((C26140 + C26139 + C26138 + C26137) * C13224 +
                    (C5994 * C18918 + C5993 * C18916 +
                     (C4559 * C5571 + C30772 * C5576) * C18919 +
                     (C4559 * C5577 + C30772 * C5580) * C18917) *
                        C13225) *
                       C30931 -
                   ((C25513 + C25514 + C25515 + C25516) * C13225 +
                    (C25512 + C25511 + C25510 + C25509) * C13224) *
                       C31080) *
                      C31120) *
                 C30798) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C31147 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C31135 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C258 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C31135 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C31147 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C31147 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C31135 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C4707 * C18918 + C4708 * C18916 + C5241 * C18919 + C5240 * C18917) *
               C13225) *
              C30844 * C30826 * C108 -
          ((C5243 * C18917 + C5242 * C18919 + C4714 * C18916 + C4713 * C18918) *
               C13225 +
           (C9240 * C18917 + C9239 * C18919 +
            (C4559 * C128 + C30772 * C139) * C18916 +
            (C4559 * C118 + C30772 * C125) * C18918) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C18918 +
            (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
            C9246 * C18917) *
               C13224 +
           (C4719 * C18918 + C4720 * C18916 + C5249 * C18919 + C5248 * C18917) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C4559 * C823 + C30772 * C830) * C18917 +
            (C4559 * C815 + C30772 * C824) * C18919 + C4963 * C18916 +
            C4962 * C18918) *
               C13225 +
           (C9456 * C18917 + C9455 * C18919 +
            (C4559 * C130 + C30772 * C141) * C18916 +
            (C4559 * C120 + C30772 * C131) * C18918) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C18918 +
            (C4559 * C133 + C30772 * C142) * C18916 +
            (C4559 * C422 + C30772 * C441) * C18919 +
            (C4559 * C440 + C30772 * C452) * C18917) *
               C13224 +
           ((C4559 * C269 + C30772 * C288) * C18918 +
            (C4559 * C287 + C30772 * C299) * C18916 +
            (C4559 * C816 + C30772 * C825) * C18919 +
            (C4559 * C826 + C30772 * C831) * C18917) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C31148 -
           ((C5600 * C18917 + C5599 * C18919 + C5240 * C18916 +
             C5241 * C18918) *
                C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C31137 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C5599 * C18918 + C5600 * C18916 + C6672 * C18919 +
             C6671 * C18917) *
                C13225) *
               C31113) *
              C30826 * C258 +
          (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
             C9242 * C18917) *
                C13224 +
            (C5242 * C18918 + C5243 * C18916 + C6452 * C18919 +
             C6451 * C18917) *
                C13225) *
               C31137 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C31148 -
           ((C10691 * C18917 + C10692 * C18919 + C6451 * C18916 +
             C6452 * C18918) *
                C13225 +
            (C9244 * C18917 + C9243 * C18919 + C9242 * C18916 +
             C9241 * C18918) *
                C13224) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C31148 -
           ((C9610 * C18917 + C9609 * C18919 + C5248 * C18916 +
             C5249 * C18918) *
                C13225 +
            (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
             C9245 * C18918) *
                C13224) *
               C31137 +
           ((C9247 * C18918 + C9248 * C18916 + C9250 * C18919 +
             C9249 * C18917) *
                C13224 +
            (C9609 * C18918 + C9610 * C18916 +
             (C4559 * C2224 + C30772 * C2227) * C18919 +
             (C4559 * C2230 + C30772 * C2233) * C18917) *
                C13225) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C942 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C943 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C943 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C942 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C942 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C943 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C24635 + C24636 + C24637 + C24638) * C13225) *
              C30844 * C1010 -
          ((C24639 + C24640 + C24641 + C24642) * C13225 +
           (C24638 + C24637 + C24636 + C24635) * C13224) *
              C30844 * C1011 +
          ((C24642 + C24641 + C24640 + C24639) * C13224 +
           (C25509 + C25510 + C25511 + C25512) * C13225) *
              C30844 * C1012 -
          ((C25513 + C25514 + C25515 + C25516) * C13225 +
           (C25512 + C25511 + C25510 + C25509) * C13224) *
              C30844 * C1013 +
          ((C25516 + C25515 + C25514 + C25513) * C13224 +
           (C5454 * C18918 + C5453 * C18916 +
            (C4559 * C5983 + C30772 * C5984) * C18919 +
            (C4559 * C5985 + C30772 * C5986) * C18917) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C31148 -
           ((C25269 + C25270 + C25271 + C25272) * C13225 +
            (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
             C9233 * C18918) *
                C13224) *
               C31137 +
           ((C9235 * C18918 + C9236 * C18916 + C9238 * C18919 +
             C9237 * C18917) *
                C13224 +
            (C25663 + C25664 + C25665 + C25666) * C13225) *
               C31113) *
              C942 +
          (((C25272 + C25271 + C25270 + C25269) * C13224 +
            (C25667 + C25668 + C25669 + C25670) * C13225) *
               C31137 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C31148 -
           ((C25671 + C25672 + C25673 + C25674) * C13225 +
            (C25666 + C25665 + C25664 + C25663) * C13224) *
               C31113) *
              C943 +
          (((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C25509 + C25510 + C25511 + C25512) * C13225) *
               C31148 -
           ((C5605 * C18917 + C5606 * C18919 + C5604 * C18916 +
             C5603 * C18918) *
                C13225 +
            (C25670 + C25669 + C25668 + C25667) * C13224) *
               C31137 +
           ((C25674 + C25673 + C25672 + C25671) * C13224 +
            (C5606 * C18918 + C5605 * C18916 +
             (C4559 * C6656 + C30772 * C6657) * C18919 +
             (C4559 * C6658 + C30772 * C6659) * C18917) *
                C13225) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C18918 +
                     (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                     C9234 * C18917) *
                        C13224 +
                    (C24635 + C24636 + C24637 + C24638) * C13225) *
                       C31080 -
                   ((C5600 * C18917 + C5599 * C18919 + C5240 * C18916 +
                     C5241 * C18918) *
                        C13225 +
                    (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                     C9233 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C554 +
                  (((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                     C9242 * C18917) *
                        C13224 +
                    (C5242 * C18918 + C5243 * C18916 + C6452 * C18919 +
                     C6451 * C18917) *
                        C13225) *
                       C30931 -
                   ((C24646 + C24645 + C24644 + C24643) * C13225 +
                    (C9240 * C18917 + C9239 * C18919 +
                     (C4559 * C128 + C30772 * C139) * C18916 +
                     (C4559 * C118 + C30772 * C125) * C18918) *
                        C13224) *
                       C31080) *
                      C30826 * C555 +
                  ((((C4559 * C119 + C30772 * C126) * C18918 +
                     (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
                     C9246 * C18917) *
                        C13224 +
                    (C24651 + C24652 + C24653 + C24654) * C13225) *
                       C31080 -
                   ((C9610 * C18917 + C9609 * C18919 + C5248 * C18916 +
                     C5249 * C18918) *
                        C13225 +
                    (C9248 * C18917 + C9247 * C18919 + C9246 * C18916 +
                     C9245 * C18918) *
                        C13224) *
                       C30931) *
                      C30826 * C556 +
                  (((C9455 * C18918 + C9456 * C18916 + C9457 * C18919 +
                     C9458 * C18917) *
                        C13224 +
                    (C24941 * C18918 + C24942 * C18916 +
                     (C4559 * C2014 + C30772 * C2015) * C18919 +
                     (C4559 * C2016 + C30772 * C2017) * C18917) *
                        C13225) *
                       C30931 -
                   ((C24944 + C24943 + C24936 + C24935) * C13225 +
                    (C9456 * C18917 + C9455 * C18919 +
                     (C4559 * C130 + C30772 * C141) * C18916 +
                     (C4559 * C120 + C30772 * C131) * C18918) *
                        C13224) *
                       C31080) *
                      C30826 * C31114)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C18918 +
                      (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
                      C9234 * C18917) *
                         C13224 +
                     (C24635 + C24636 + C24637 + C24638) * C13225) *
                        C31080 -
                    ((C25269 + C25270 + C25271 + C25272) * C13225 +
                     (C9236 * C18917 + C9235 * C18919 + C9234 * C18916 +
                      C9233 * C18918) *
                         C13224) *
                        C30931) *
                       C942 +
                   (((C25272 + C25271 + C25270 + C25269) * C13224 +
                     (C25667 + C25668 + C25669 + C25670) * C13225) *
                        C30931 -
                    ((C24639 + C24640 + C24641 + C24642) * C13225 +
                     (C24638 + C24637 + C24636 + C24635) * C13224) *
                        C31080) *
                       C943 +
                   (((C24642 + C24641 + C24640 + C24639) * C13224 +
                     (C25509 + C25510 + C25511 + C25512) * C13225) *
                        C31080 -
                    ((C5605 * C18917 + C5606 * C18919 + C5604 * C18916 +
                      C5603 * C18918) *
                         C13225 +
                     (C25670 + C25669 + C25668 + C25667) * C13224) *
                        C30931) *
                       C31110) *
                      C31065 +
                  ((((C9239 * C18918 + C9240 * C18916 + C9241 * C18919 +
                      C9242 * C18917) *
                         C13224 +
                     (C25273 + C25274 + C25275 + C25276) * C13225) *
                        C30931 -
                    ((C24646 + C24645 + C24644 + C24643) * C13225 +
                     (C9240 * C18917 + C9239 * C18919 +
                      (C4559 * C128 + C30772 * C139) * C18916 +
                      (C4559 * C118 + C30772 * C125) * C18918) *
                         C13224) *
                        C31080) *
                       C942 +
                   (((C24643 + C24644 + C24645 + C24646) * C13224 +
                     (C24647 + C24648 + C24649 + C24650) * C13225) *
                        C31080 -
                    ((C26003 + C26004 + C26005 + C26006) * C13225 +
                     (C25276 + C25275 + C25274 + C25273) * C13224) *
                        C30931) *
                       C943 +
                   (((C26006 + C26005 + C26004 + C26003) * C13224 +
                     (C5883 * C18918 + C5882 * C18916 +
                      (C4559 * C6436 + C30772 * C6437) * C18919 +
                      (C4559 * C6438 + C30772 * C6439) * C18917) *
                         C13225) *
                        C30931 -
                    ((C25805 + C25806 + C25807 + C25808) * C13225 +
                     (C24650 + C24649 + C24648 + C24647) * C13224) *
                        C31080) *
                       C31110) *
                      C30809)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C4707 * C18918 + C4708 * C18916 + C5241 * C18919 + C5240 * C18917) *
               C13225) *
              C30844 * C30826 * C108 -
          ((C5243 * C18917 + C5242 * C18919 + C4714 * C18916 + C4713 * C18918) *
               C13225 +
           (C9240 * C18917 + C9239 * C18919 +
            (C4559 * C128 + C30772 * C139) * C18916 +
            (C4559 * C118 + C30772 * C125) * C18918) *
               C13224) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C18918 +
            (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
            C9246 * C18917) *
               C13224 +
           (C4719 * C18918 + C4720 * C18916 + C5249 * C18919 + C5248 * C18917) *
               C13225) *
              C30844 * C30826 * C110 -
          (((C4559 * C823 + C30772 * C830) * C18917 +
            (C4559 * C815 + C30772 * C824) * C18919 + C4963 * C18916 +
            C4962 * C18918) *
               C13225 +
           (C9456 * C18917 + C9455 * C18919 +
            (C4559 * C130 + C30772 * C141) * C18916 +
            (C4559 * C120 + C30772 * C131) * C18918) *
               C13224) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C18918 +
            (C4559 * C133 + C30772 * C142) * C18916 +
            (C4559 * C422 + C30772 * C441) * C18919 +
            (C4559 * C440 + C30772 * C452) * C18917) *
               C13224 +
           ((C4559 * C269 + C30772 * C288) * C18918 +
            (C4559 * C287 + C30772 * C299) * C18916 +
            (C4559 * C816 + C30772 * C825) * C18919 +
            (C4559 * C826 + C30772 * C831) * C18917) *
               C13225) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C31147 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C31135 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C258 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C31135 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C31147 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C31147 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C31135 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C18918 +
             (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
             C9234 * C18917) *
                C13224 +
            (C24635 + C24636 + C24637 + C24638) * C13225) *
               C30844 * C942 -
           ((C24639 + C24640 + C24641 + C24642) * C13225 +
            (C24638 + C24637 + C24636 + C24635) * C13224) *
               C30844 * C943 +
           ((C24642 + C24641 + C24640 + C24639) * C13224 +
            (C4712 * C18918 + C4711 * C18916 + C5603 * C18919 +
             C5604 * C18917) *
                C13225) *
               C30844 * C31110) *
              C31144 +
          (((C24643 + C24644 + C24645 + C24646) * C13224 +
            (C24647 + C24648 + C24649 + C24650) * C13225) *
               C30844 * C943 -
           ((C24646 + C24645 + C24644 + C24643) * C13225 +
            (C9240 * C18917 + C9239 * C18919 +
             (C4559 * C128 + C30772 * C139) * C18916 +
             (C4559 * C118 + C30772 * C125) * C18918) *
                C13224) *
               C30844 * C942 -
           ((C5882 * C18917 + C5883 * C18919 + C4718 * C18916 +
             C4717 * C18918) *
                C13225 +
            (C24650 + C24649 + C24648 + C24647) * C13224) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C18918 +
             (C4559 * C129 + C30772 * C140) * C18916 + C9245 * C18919 +
             C9246 * C18917) *
                C13224 +
            (C24651 + C24652 + C24653 + C24654) * C13225) *
               C30844 * C942 -
           ((C24655 + C24656 + C24657 + C24658) * C13225 +
            (C24654 + C24653 + C24652 + C24651) * C13224) *
               C30844 * C943 +
           ((C24658 + C24657 + C24656 + C24655) * C13224 +
            (C4724 * C18918 + C4723 * C18916 +
             (C4559 * C1544 + C30772 * C1547) * C18919 +
             (C4559 * C1550 + C30772 * C1553) * C18917) *
                C13225) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C18918 +
            (C4559 * C127 + C30772 * C138) * C18916 + C9233 * C18919 +
            C9234 * C18917) *
               C13224 +
           (C24635 + C24636 + C24637 + C24638) * C13225) *
              C30844 * C1010 -
          ((C24639 + C24640 + C24641 + C24642) * C13225 +
           (C24638 + C24637 + C24636 + C24635) * C13224) *
              C30844 * C1011 +
          ((C24642 + C24641 + C24640 + C24639) * C13224 +
           (C25509 + C25510 + C25511 + C25512) * C13225) *
              C30844 * C1012 -
          ((C25513 + C25514 + C25515 + C25516) * C13225 +
           (C25512 + C25511 + C25510 + C25509) * C13224) *
              C30844 * C1013 +
          ((C25516 + C25515 + C25514 + C25513) * C13224 +
           (C5454 * C18918 + C5453 * C18916 +
            (C4559 * C5983 + C30772 * C5984) * C18919 +
            (C4559 * C5985 + C30772 * C5986) * C18917) *
               C13225) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C30885 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30892 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C2700) *
              C30803 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30892 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C30885 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C2700) *
              C30812 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C30885 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30892 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C2700) *
              C2703)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C30885 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30892 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C2700) *
              C30803 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30892 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C30885 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C2700) *
              C30812 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C30885 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30892 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C2700) *
              C2703)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C30885 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C30892 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C2700) *
              C30803 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C30892 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C30885 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C2700) *
              C30812 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C30885 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C30892 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C2700) *
              C2703)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C30885 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30892 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C2700) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C30885 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30892 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C30885 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C30892 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C2700) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C30885 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30892 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C31080) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31080 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C30885 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31080) *
               C30892 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C31080 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C2700) *
              C2440 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31080) *
               C30885 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31080 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30892 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C31080) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C2332 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C30889) *
                  C31153 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C30889 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C2332) *
                  C31146 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C2332 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C30889) *
                  C31133 +
              (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
                 C115 * C558 + C103 * C559) *
                    C116 +
                (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
                 C115 * C560 + C103 * C561) *
                    C31023) *
                   C31012 * C30844 * C30889 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31023 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31012 * C30844 * C2332) *
                  C31114) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C31154 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C31150 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C31140 -
               ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
                 C113 * C1024 + C101 * C1036) *
                    C31023 +
                (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
                 C113 * C1018 + C101 * C1027) *
                    C116) *
                   C31012 * C30844 * C31120) *
                  C2440 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C31150 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C31154 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C31140 +
               ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
                 C115 * C1290 + C103 * C1291) *
                    C116 +
                (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
                 C115 * C1292 + C103 * C1293) *
                    C31023) *
                   C31012 * C30844 * C31120) *
                  C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31148 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C31137 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C31113) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C31137 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31148 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C31113) *
               C30889) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C31137 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31148 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C31113) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31148 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C31137 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C2332 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C31153 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C2332) *
              C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C2332 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C31133 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31154 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C31150 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C31140 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C2440 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C31150 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31154 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31140 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31148 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C31137 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C31113) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C31137 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31148 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C31113) *
               C30889) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C31137 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31148 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C31113) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31148 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C31137 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C2332 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C30889) *
              C31153 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C30889 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C2332 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C30889) *
              C31133 +
          ((C4962 * C8973 + C4963 * C8970 +
            (C4559 * C815 + C30772 * C824) * C8974 +
            (C4559 * C823 + C30772 * C830) * C8971 +
            (C4559 * C2014 + C30772 * C2015) * C8975 +
            (C4559 * C2016 + C30772 * C2017) * C8972) *
               C31012 * C30844 * C30889 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C31154 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31150 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31140 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C30844 * C31120) *
              C2440 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31150 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31154 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31140 +
           (C4717 * C8973 + C4718 * C8970 + C5883 * C8974 + C5882 * C8971 +
            (C4559 * C6436 + C30772 * C6437) * C8975 +
            (C4559 * C6438 + C30772 * C6439) * C8972) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31148 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C31137 +
            (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C31012 * C31113) *
               C2332 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C31137 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31148 -
            (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
             C5600 * C8970 + C5599 * C8973) *
                C31012 * C31113) *
               C30889) *
              C2440 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C31137 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31148 -
            (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 + C9243 * C8974 +
             C9242 * C8970 + C9241 * C8973) *
                C31012 * C31113) *
               C2332 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31148 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C31137 +
            (C6452 * C8973 + C6451 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C4559 * C10682 + C30772 * C10683) * C8975 +
             (C4559 * C10684 + C30772 * C10685) * C8972) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C116 +
                      (C4559 * C127 + C30772 * C138) * C31023) *
                         C4556 +
                     (C4725 + C4726) * C4557 + C4743 * C4558) *
                        C31080 -
                    (C5582 * C4558 + (C5252 + C5253) * C4557 +
                     ((C4559 * C426 + C30772 * C446) * C31023 +
                      (C4559 * C416 + C30772 * C429) * C116) *
                         C4556) *
                        C30931) *
                       C2332 +
                   (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                     C5988 * C4558) *
                        C30931 -
                    (C5442 * C4558 + (C4728 + C4727) * C4557 +
                     (C4726 + C4725) * C4556) *
                        C31080) *
                       C30889) *
                      C30803 +
                  (((((C4559 * C415 + C30772 * C428) * C116 +
                      (C4559 * C425 + C30772 * C445) * C31023) *
                         C4556 +
                     (C5254 + C5255) * C4557 + C5877 * C4558) *
                        C30931 -
                    (C4744 * C4558 + (C4732 + C4731) * C4557 +
                     ((C4559 * C128 + C30772 * C139) * C31023 +
                      (C4559 * C118 + C30772 * C125) * C116) *
                         C4556) *
                        C31080) *
                       C2332 +
                   (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                     C5718 * C4558) *
                        C31080 -
                    ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                     (C5255 + C5254) * C4556) *
                        C30931) *
                       C30889) *
                      C30812 +
                  (((((C4559 * C119 + C30772 * C126) * C116 +
                      (C4559 * C129 + C30772 * C140) * C31023) *
                         C4556 +
                     (C4737 + C4738) * C4557 + C4745 * C4558) *
                        C31080 -
                    ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                     ((C4559 * C424 + C30772 * C444) * C31023 +
                      (C4559 * C414 + C30772 * C427) * C116) *
                         C4556) *
                        C30931) *
                       C2332 +
                   (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
                     ((C4559 * C1544 + C30772 * C1547) * C116 +
                      (C4559 * C1550 + C30772 * C1553) * C31023) *
                         C4558) *
                        C30931 -
                    ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
                     (C4738 + C4737) * C4556) *
                        C31080) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31023) *
                        C31012 * C31080 -
                    ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                      C113 * C426 + C101 * C446) *
                         C31023 +
                     (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                      C113 * C416 + C101 * C429) *
                         C116) *
                        C31012 * C30931) *
                       C2332 +
                   (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                      C115 * C814 + C103 * C819) *
                         C116 +
                     (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                      C115 * C822 + C103 * C829) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                      C113 * C273 + C101 * C293) *
                         C31023 +
                     (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                      C113 * C263 + C101 * C276) *
                         C116) *
                        C31012 * C31080) *
                       C30889) *
                      C30803 +
                  ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                      C115 * C420 + C103 * C436) *
                         C116 +
                     (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                      C115 * C437 + C103 * C450) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31023 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31012 * C31080) *
                       C2332 +
                   (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                      C115 * C267 + C103 * C283) *
                         C116 +
                     (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                      C115 * C284 + C103 * C297) *
                         C31023) *
                        C31012 * C31080 -
                    ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                      C113 * C821 + C101 * C828) *
                         C31023 +
                     (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                      C113 * C813 + C101 * C818) *
                         C116) *
                        C31012 * C30931) *
                       C30889) *
                      C30812 +
                  ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31023) *
                        C31012 * C31080 -
                    ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                      C113 * C424 + C101 * C444) *
                         C31023 +
                     (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                      C113 * C414 + C101 * C427) *
                         C116) *
                        C31012 * C30931) *
                       C2332 +
                   (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                      C115 * C816 + C103 * C825) *
                         C116 +
                     (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                      C115 * C826 + C103 * C831) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                      C113 * C271 + C101 * C291) *
                         C31023 +
                     (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                      C113 * C261 + C101 * C274) *
                         C116) *
                        C31012 * C31080) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C8973 +
                     (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
                     C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                        C31012 * C31080 -
                    (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 +
                     C9235 * C8974 + C9234 * C8970 + C9233 * C8973) *
                        C31012 * C30931) *
                       C2332 +
                   ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 +
                     C5600 * C8971 + C6672 * C8975 + C6671 * C8972) *
                        C31012 * C30931 -
                    (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 +
                     C5241 * C8974 + C4708 * C8970 + C4707 * C8973) *
                        C31012 * C31080) *
                       C30889) *
                      C30803 +
                  (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 +
                     C9242 * C8971 + C9243 * C8975 + C9244 * C8972) *
                        C31012 * C30931 -
                    (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 +
                     C9239 * C8974 + (C4559 * C128 + C30772 * C139) * C8970 +
                     (C4559 * C118 + C30772 * C125) * C8973) *
                        C31012 * C31080) *
                       C2332 +
                   ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 +
                     C5243 * C8971 + C6452 * C8975 + C6451 * C8972) *
                        C31012 * C31080 -
                    (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 +
                     C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                        C31012 * C30931) *
                       C30889) *
                      C30812 +
                  ((((C4559 * C119 + C30772 * C126) * C8973 +
                     (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
                     C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                        C31012 * C31080 -
                    (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 +
                     C9247 * C8974 + C9246 * C8970 + C9245 * C8973) *
                        C31012 * C30931) *
                       C2332 +
                   ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 +
                     C9610 * C8971 + (C4559 * C2224 + C30772 * C2227) * C8975 +
                     (C4559 * C2230 + C30772 * C2233) * C8972) *
                        C31012 * C30931 -
                    (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 +
                     C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
                        C31012 * C31080) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31154 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31150 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31140 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C2440 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31150 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31154 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31140 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C31153 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C31133 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C2332 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C31153 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C2332) *
              C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C2332 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C31133 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31154 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C31150 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C31140 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C2440 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C31150 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31154 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31140 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C2332 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C30889) *
              C31153 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C30889 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C2332 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C30889) *
              C31133 +
          ((C4962 * C8973 + C4963 * C8970 +
            (C4559 * C815 + C30772 * C824) * C8974 +
            (C4559 * C823 + C30772 * C830) * C8971 +
            (C4559 * C2014 + C30772 * C2015) * C8975 +
            (C4559 * C2016 + C30772 * C2017) * C8972) *
               C31012 * C30844 * C30889 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C31154 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31150 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31140 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C30844 * C31120) *
              C2440 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31150 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31154 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31140 +
           (C4717 * C8973 + C4718 * C8970 + C5883 * C8974 + C5882 * C8971 +
            (C4559 * C6436 + C30772 * C6437) * C8975 +
            (C4559 * C6438 + C30772 * C6439) * C8972) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C30885 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30892 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C2700) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C30885 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30892 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C30885 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C30892 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C2700) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C30885 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30892 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C3094) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C3094 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C30885 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C3094) *
               C30892 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C3094 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C2700) *
              C31065 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C3094) *
               C30885 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C3094 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30892 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C3094) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30927 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30934 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C3602) *
              C30885 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30934 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30927 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C3602) *
              C30892 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30927 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30934 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C3602) *
              C2700) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30927 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30934 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C3602) *
              C30885 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30934 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30927 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C3602) *
              C30892 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30927 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30934 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C3602) *
              C2700) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30927 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30934 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C31012 * C3602) *
              C30885 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C30934 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30927 -
           (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
            C5600 * C8970 + C5599 * C8973) *
               C31012 * C3602) *
              C30892 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30927 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C30934 +
           (C5601 * C8973 + C5602 * C8970 + C6670 * C8974 + C6669 * C8971 +
            (C4559 * C6280 + C30772 * C6285) * C8975 +
            (C4559 * C6286 + C30772 * C6289) * C8972) *
               C31012 * C3602) *
              C2700) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                  C115 * C119 + C103 * C126) *
                     C116 +
                 (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                  C115 * C129 + C103 * C140) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                  C113 * C426 + C101 * C446) *
                     C31023 +
                 (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                  C113 * C416 + C101 * C429) *
                     C116) *
                    C31012 * C30931) *
                   C2332 +
               (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                  C115 * C814 + C103 * C819) *
                     C116 +
                 (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                  C115 * C822 + C103 * C829) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31023 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C116) *
                    C31012 * C3094) *
                   C30889) *
                  C31144 +
              ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                  C115 * C420 + C103 * C436) *
                     C116 +
                 (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                  C115 * C437 + C103 * C450) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31023 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C116) *
                    C31012 * C3094) *
                   C2332 +
               (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                  C115 * C267 + C103 * C283) *
                     C116 +
                 (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                  C115 * C284 + C103 * C297) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                  C113 * C821 + C101 * C828) *
                     C31023 +
                 (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                  C113 * C813 + C101 * C818) *
                     C116) *
                    C31012 * C30931) *
                   C30889) *
                  C31131 +
              ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                  C115 * C121 + C103 * C132) *
                     C116 +
                 (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                  C115 * C133 + C103 * C142) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                  C113 * C424 + C101 * C444) *
                     C31023 +
                 (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                  C113 * C414 + C101 * C427) *
                     C116) *
                    C31012 * C30931) *
                   C2332 +
               (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                  C115 * C816 + C103 * C825) *
                     C116 +
                 (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                  C115 * C826 + C103 * C831) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                  C113 * C271 + C101 * C291) *
                     C31023 +
                 (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                  C113 * C261 + C101 * C274) *
                     C116) *
                    C31012 * C3094) *
                   C30889) *
                  C31104) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C3094 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C30931) *
                  C31154 +
              (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                 C115 * C814 + C103 * C819) *
                    C116 +
                (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                 C115 * C822 + C103 * C829) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C3094) *
                  C31150 +
              (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C3094 -
               ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                 C113 * C1167 + C101 * C1182) *
                    C31023 +
                (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                 C113 * C1155 + C101 * C1170) *
                    C116) *
                   C31012 * C30931) *
                  C31140 +
              (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
                 C115 * C1544 + C103 * C1547) *
                    C116 +
                (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
                 C115 * C1550 + C103 * C1553) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
                 C113 * C1024 + C101 * C1036) *
                    C31023 +
                (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
                 C113 * C1018 + C101 * C1027) *
                    C116) *
                   C31012 * C3094) *
                  C31120) *
             C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31155 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31152 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31143 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C2332 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C31152 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31155 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31143 +
           ((C113 * C2222 + C101 * C2225 + C114 * C2223 + C102 * C2226 +
             C115 * C2224 + C103 * C2227) *
                C116 +
            (C113 * C2228 + C101 * C2231 + C114 * C2229 + C102 * C2232 +
             C115 * C2230 + C103 * C2233) *
                C31023) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30889) *
              C31144 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C31131 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C3094 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C31154 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C3094) *
              C31150 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C31140 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31155 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31152 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31143 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C2332 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C31152 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31155 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31143 +
           ((C6676 + C6675) * C4556 + (C6674 + C6673) * C4557 +
            ((C4559 * C6656 + C30772 * C6657) * C116 +
             (C4559 * C6658 + C30772 * C6659) * C31023) *
                C4558) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C3094 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C2332 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C3094) *
               C2332 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C3094 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C8973 +
             (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
             C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                C31012 * C3094 -
            (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
             C9246 * C8970 + C9245 * C8973) *
                C31012 * C30931) *
               C2332 +
           ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 + C9610 * C8971 +
             (C4559 * C2224 + C30772 * C2227) * C8975 +
             (C4559 * C2230 + C30772 * C2233) * C8972) *
                C31012 * C30931 -
            (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
             C4720 * C8970 + C4719 * C8973) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C3094 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C31154 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C30931 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C3094) *
              C31150 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C3094 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C30931) *
              C31140 +
          ((C5603 * C8973 + C5604 * C8970 + C5606 * C8974 + C5605 * C8971 +
            (C4559 * C6656 + C30772 * C6657) * C8975 +
            (C4559 * C6658 + C30772 * C6659) * C8972) *
               C31012 * C30931 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31155 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31152 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C31012 * C31143 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9237 * C8970 + C9238 * C8973) *
               C31012 * C31126) *
              C2332 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C31152 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C31155 -
           (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
            C5600 * C8970 + C5599 * C8973) *
               C31012 * C31143 +
           (C6672 * C8973 + C6671 * C8970 + C10908 * C8974 + C10907 * C8971 +
            (C4559 * C10898 + C30772 * C10899) * C8975 +
            (C4559 * C10900 + C30772 * C10901) * C8972) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C30927 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30934 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C3602) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30934 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C30927 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C3602) *
               C30889) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30934 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C30927 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C3602) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C30927 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30934 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C30927 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30934 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C3602) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30934 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C30927 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C3602) *
               C30889) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30934 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C30927 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C3602) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C30927 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30934 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C30927 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30934 +
            (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C31012 * C3602) *
               C2332 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30934 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C30927 -
            (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
             C5600 * C8970 + C5599 * C8973) *
                C31012 * C3602) *
               C30889) *
              C31065 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30934 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C30927 -
            (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 + C9243 * C8974 +
             C9242 * C8970 + C9241 * C8973) *
                C31012 * C3602) *
               C2332 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C30927 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30934 +
            (C6452 * C8973 + C6451 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C4559 * C10682 + C30772 * C10683) * C8975 +
             (C4559 * C10684 + C30772 * C10685) * C8972) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C31154 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C3094) *
              C31150 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C31140 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30889) *
              C31144 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C31131 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C3094 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C31154 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C3094) *
              C31150 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C31140 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C3094 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C2332 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C3094) *
               C2332 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C3094 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C8973 +
             (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
             C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                C31012 * C3094 -
            (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
             C9246 * C8970 + C9245 * C8973) *
                C31012 * C30931) *
               C2332 +
           ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 + C9610 * C8971 +
             (C4559 * C2224 + C30772 * C2227) * C8975 +
             (C4559 * C2230 + C30772 * C2233) * C8972) *
                C31012 * C30931 -
            (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
             C4720 * C8970 + C4719 * C8973) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C3094 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C31154 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C30931 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C3094) *
              C31150 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C3094 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C30931) *
              C31140 +
          ((C5603 * C8973 + C5604 * C8970 + C5606 * C8974 + C5605 * C8971 +
            (C4559 * C6656 + C30772 * C6657) * C8975 +
            (C4559 * C6658 + C30772 * C6659) * C8972) *
               C31012 * C30931 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C31079 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C30889) *
                  C554 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C30889 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C31079) *
                  C555 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C31079 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C30889) *
                  C556 +
              (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
                 C115 * C558 + C103 * C559) *
                    C116 +
                (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
                 C115 * C560 + C103 * C561) *
                    C31023) *
                   C31012 * C30844 * C30889 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31023 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31012 * C30844 * C31079) *
                  C31114) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C1284 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C1285 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C1286 -
               ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
                 C113 * C1024 + C101 * C1036) *
                    C31023 +
                (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
                 C113 * C1018 + C101 * C1027) *
                    C116) *
                   C31012 * C30844 * C31120) *
                  C31065 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C1285 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C1284 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C1286 +
               ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
                 C115 * C1290 + C103 * C1291) *
                    C116 +
                (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
                 C115 * C1292 + C103 * C1293) *
                    C31023) *
                   C31012 * C30844 * C31120) *
                  C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C1664 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C1665 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C31113) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C1665 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C1664 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C31113) *
               C30889) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C1665 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C1664 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C31113) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C1664 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C1665 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31079 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C554 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31079) *
              C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31079 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C556 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C1284 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C1285 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C1286 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C31065 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C1285 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C1284 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C1286 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C1664 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C1665 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C31113) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C1665 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C1664 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C31113) *
               C30889) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C1665 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C1664 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C31113) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C1664 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C1665 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C31079 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C30889) *
              C554 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C30889 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C31079 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C30889) *
              C556 +
          ((C4962 * C8973 + C4963 * C8970 +
            (C4559 * C815 + C30772 * C824) * C8974 +
            (C4559 * C823 + C30772 * C830) * C8971 +
            (C4559 * C2014 + C30772 * C2015) * C8975 +
            (C4559 * C2016 + C30772 * C2017) * C8972) *
               C31012 * C30844 * C30889 -
           ((C4559 * C438 + C30772 * C451) * C8972 +
            (C4559 * C421 + C30772 * C439) * C8975 +
            (C4559 * C437 + C30772 * C450) * C8971 +
            (C4559 * C420 + C30772 * C436) * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C1284 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C1285 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C1286 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C30844 * C31120) *
              C31065 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C1285 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C1284 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C1286 +
           (C4717 * C8973 + C4718 * C8970 + C5883 * C8974 + C5882 * C8971 +
            (C4559 * C6436 + C30772 * C6437) * C8975 +
            (C4559 * C6438 + C30772 * C6439) * C8972) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C1664 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C1665 +
            (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C31012 * C31113) *
               C31079 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C1665 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C1664 -
            ((C4559 * C6284 + C30772 * C6288) * C8972 +
             (C4559 * C6279 + C30772 * C6283) * C8975 + C6671 * C8971 +
             C6672 * C8974 + C5600 * C8970 + C5599 * C8973) *
                C31012 * C31113) *
               C30889) *
              C31065 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C1665 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C1664 -
            ((C4559 * C1860 + C30772 * C1866) * C8972 +
             (C4559 * C1848 + C30772 * C1857) * C8975 + C9244 * C8971 +
             C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
                C31012 * C31113) *
               C31079 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C1664 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C1665 +
            (C6452 * C8973 + C6451 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C4559 * C10682 + C30772 * C10683) * C8975 +
             (C4559 * C10684 + C30772 * C10685) * C8972) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                  C115 * C119 + C103 * C126) *
                     C116 +
                 (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                  C115 * C129 + C103 * C140) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                  C113 * C426 + C101 * C446) *
                     C31023 +
                 (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                  C113 * C416 + C101 * C429) *
                     C116) *
                    C31012 * C30931) *
                   C31079 +
               (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                  C115 * C814 + C103 * C819) *
                     C116 +
                 (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                  C115 * C822 + C103 * C829) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31023 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C116) *
                    C31012 * C31080) *
                   C30889) *
                  C258 +
              ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                  C115 * C420 + C103 * C436) *
                     C116 +
                 (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                  C115 * C437 + C103 * C450) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31023 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C116) *
                    C31012 * C31080) *
                   C31079 +
               (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                  C115 * C267 + C103 * C283) *
                     C116 +
                 (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                  C115 * C284 + C103 * C297) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                  C113 * C821 + C101 * C828) *
                     C31023 +
                 (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                  C113 * C813 + C101 * C818) *
                     C116) *
                    C31012 * C30931) *
                   C30889) *
                  C259 +
              ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                  C115 * C121 + C103 * C132) *
                     C116 +
                 (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                  C115 * C133 + C103 * C142) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                  C113 * C424 + C101 * C444) *
                     C31023 +
                 (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                  C113 * C414 + C101 * C427) *
                     C116) *
                    C31012 * C30931) *
                   C31079 +
               (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                  C115 * C816 + C103 * C825) *
                     C116 +
                 (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                  C115 * C826 + C103 * C831) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                  C113 * C271 + C101 * C291) *
                     C31023 +
                 (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                  C113 * C261 + C101 * C274) *
                     C116) *
                    C31012 * C31080) *
                   C30889) *
                  C31104) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C31080 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C30931) *
                  C1284 +
              (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                 C115 * C814 + C103 * C819) *
                    C116 +
                (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                 C115 * C822 + C103 * C829) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C31080) *
                  C1285 +
              (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C31080 -
               ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                 C113 * C1167 + C101 * C1182) *
                    C31023 +
                (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                 C113 * C1155 + C101 * C1170) *
                    C116) *
                   C31012 * C30931) *
                  C1286 +
              (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
                 C115 * C1544 + C103 * C1547) *
                    C116 +
                (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
                 C115 * C1550 + C103 * C1553) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
                 C113 * C1024 + C101 * C1036) *
                    C31023 +
                (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
                 C113 * C1018 + C101 * C1027) *
                    C116) *
                   C31012 * C31080) *
                  C31120) *
             C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C2116 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C2117 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C2118 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C31079 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C2117 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C2116 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C2118 +
           ((C113 * C2222 + C101 * C2225 + C114 * C2223 + C102 * C2226 +
             C115 * C2224 + C103 * C2227) *
                C116 +
            (C113 * C2228 + C101 * C2231 + C114 * C2229 + C102 * C2232 +
             C115 * C2230 + C103 * C2233) *
                C31023) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            ((C5250 + C5251) * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             ((C4559 * C1542 + C30772 * C1545) * C116 +
              (C4559 * C1548 + C30772 * C1551) * C31023) *
                 C4558) *
                C30931 -
            ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30889) *
              C258 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + (C5256 + C5257) * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             (C4735 + C4736) * C4558) *
                C31080 -
            (((C4559 * C1549 + C30772 * C1552) * C31023 +
              (C4559 * C1543 + C30772 * C1546) * C116) *
                 C4558 +
             (C5257 + C5256) * C4557 + (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C259 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C31080 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C1284 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31080) *
              C1285 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C1286 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C2116 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C2117 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C2118 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C31079 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C2117 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C2116 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C2118 +
           ((C6676 + C6675) * C4556 + (C6674 + C6673) * C4557 +
            ((C4559 * C6656 + C30772 * C6657) * C116 +
             (C4559 * C6658 + C30772 * C6659) * C31023) *
                C4558) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31080 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C31079 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31080) *
               C30889) *
              C258 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31080) *
               C31079 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31080 -
            ((C4559 * C2229 + C30772 * C2232) * C8972 +
             (C4559 * C2223 + C30772 * C2226) * C8975 + C6451 * C8971 +
             C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C8973 +
             (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
             C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                C31012 * C31080 -
            (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
             C9246 * C8970 + C9245 * C8973) *
                C31012 * C30931) *
               C31079 +
           ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 + C9610 * C8971 +
             (C4559 * C2224 + C30772 * C2227) * C8975 +
             (C4559 * C2230 + C30772 * C2233) * C8972) *
                C31012 * C30931 -
            (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
             C4720 * C8970 + C4719 * C8973) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31080 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C1284 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C30931 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C31080) *
              C1285 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C31080 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C30931) *
              C1286 +
          ((C5603 * C8973 + C5604 * C8970 + C5606 * C8974 + C5605 * C8971 +
            (C4559 * C6656 + C30772 * C6657) * C8975 +
            (C4559 * C6658 + C30772 * C6659) * C8972) *
               C31012 * C30931 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C2116 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C2117 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C31012 * C2118 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9237 * C8970 + C9238 * C8973) *
               C31012 * C31126) *
              C31079 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C2117 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C2116 -
           (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
            C5600 * C8970 + C5599 * C8973) *
               C31012 * C2118 +
           (C6672 * C8973 + C6671 * C8970 + C10908 * C8974 + C10907 * C8971 +
            (C4559 * C10898 + C30772 * C10899) * C8975 +
            (C4559 * C10900 + C30772 * C10901) * C8972) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31023) *
                  C31012 * C30844 * C30826 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31023 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31012 * C30844 * C30826 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31023) *
                  C31012 * C30844 * C30826 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31023 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31012 * C30844 * C30826 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31023) *
                  C31012 * C30844 * C30826 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C31135 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C31147 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C31110) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C31104) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C31148 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C31137 +
               ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                 C115 * C419 + C103 * C432) *
                    C116 +
                (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                 C115 * C435 + C103 * C449) *
                    C31023) *
                   C31012 * C31113) *
                  C30826 * C258 +
              (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                 C115 * C420 + C103 * C436) *
                    C116 +
                (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                 C115 * C437 + C103 * C450) *
                    C31023) *
                   C31012 * C31137 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C31148 -
               ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                 C113 * C434 + C101 * C448) *
                    C31023 +
                (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                 C113 * C418 + C101 * C431) *
                    C116) *
                   C31012 * C31113) *
                  C30826 * C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C31148 -
               ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                 C113 * C424 + C101 * C444) *
                    C31023 +
                (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                 C113 * C414 + C101 * C427) *
                    C116) *
                   C31012 * C31137 +
               ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
                 C115 * C423 + C103 * C442) *
                    C116 +
                (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
                 C115 * C443 + C103 * C453) *
                    C31023) *
                   C31012 * C31113) *
                  C30826 * C31104) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C942 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C943 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C31144 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C943 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C942 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C31110) *
                  C31131 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C942 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C943 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C31104) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31023) *
                  C31012 * C30844 * C1010 -
              ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                C113 * C273 + C101 * C293) *
                   C31023 +
               (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                C113 * C263 + C101 * C276) *
                   C116) *
                  C31012 * C30844 * C1011 +
              ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                C115 * C266 + C103 * C279) *
                   C116 +
               (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                C115 * C282 + C103 * C296) *
                   C31023) *
                  C31012 * C30844 * C1012 -
              ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
                C113 * C1024 + C101 * C1036) *
                   C31023 +
               (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
                C113 * C1018 + C101 * C1027) *
                   C116) *
                  C31012 * C30844 * C1013 +
              ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
                C115 * C1021 + C103 * C1030) *
                   C116 +
               (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
                C115 * C1033 + C103 * C1039) *
                   C31023) *
                  C31012 * C30844 * C1014) *
             C30798 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C31148 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C31137 +
               ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                 C115 * C419 + C103 * C432) *
                    C116 +
                (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                 C115 * C435 + C103 * C449) *
                    C31023) *
                   C31012 * C31113) *
                  C942 +
              (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                 C115 * C814 + C103 * C819) *
                    C116 +
                (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                 C115 * C822 + C103 * C829) *
                    C31023) *
                   C31012 * C31137 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C31148 -
               ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
                 C113 * C1161 + C101 * C1179) *
                    C31023 +
                (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
                 C113 * C1152 + C101 * C1164) *
                    C116) *
                   C31012 * C31113) *
                  C943 +
              (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C31148 -
               ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                 C113 * C1167 + C101 * C1182) *
                    C31023 +
                (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                 C113 * C1155 + C101 * C1170) *
                    C116) *
                   C31012 * C31137 +
               ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
                 C115 * C1158 + C103 * C1173) *
                    C116 +
                (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
                 C115 * C1176 + C103 * C1185) *
                    C31023) *
                   C31012 * C31113) *
                  C31110) *
             C30798 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C1664 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C1665 +
               ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                 C115 * C419 + C103 * C432) *
                    C116 +
                (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                 C115 * C435 + C103 * C449) *
                    C31023) *
                   C31012 * C31113) *
                  C30826 * C31144 +
              (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                 C115 * C420 + C103 * C436) *
                    C116 +
                (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                 C115 * C437 + C103 * C450) *
                    C31023) *
                   C31012 * C1665 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C1664 -
               ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                 C113 * C434 + C101 * C448) *
                    C31023 +
                (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                 C113 * C418 + C101 * C431) *
                    C116) *
                   C31012 * C31113) *
                  C30826 * C31131 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C1664 -
               ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                 C113 * C424 + C101 * C444) *
                    C31023 +
                (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                 C113 * C414 + C101 * C427) *
                    C116) *
                   C31012 * C1665 +
               ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
                 C115 * C423 + C103 * C442) *
                    C116 +
                (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
                 C115 * C443 + C103 * C453) *
                    C31023) *
                   C31012 * C31113) *
                  C30826 * C31104) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C1664 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C1665 +
               ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                 C115 * C419 + C103 * C432) *
                    C116 +
                (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                 C115 * C435 + C103 * C449) *
                    C31023) *
                   C31012 * C31113) *
                  C31147 +
              (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                 C115 * C814 + C103 * C819) *
                    C116 +
                (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                 C115 * C822 + C103 * C829) *
                    C31023) *
                   C31012 * C1665 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C1664 -
               ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
                 C113 * C1161 + C101 * C1179) *
                    C31023 +
                (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
                 C113 * C1152 + C101 * C1164) *
                    C116) *
                   C31012 * C31113) *
                  C31135 +
              (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C1664 -
               ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                 C113 * C1167 + C101 * C1182) *
                    C31023 +
                (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                 C113 * C1155 + C101 * C1170) *
                    C116) *
                   C31012 * C1665 +
               ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
                 C115 * C1158 + C103 * C1173) *
                    C116 +
                (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
                 C115 * C1176 + C103 * C1185) *
                    C31023) *
                   C31012 * C31113) *
                  C31110) *
             C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C1839 -
          ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
            C113 * C426 + C101 * C446) *
               C31023 +
           (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
            C113 * C416 + C101 * C429) *
               C116) *
              C31012 * C1840 +
          ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
            C115 * C419 + C103 * C432) *
               C116 +
           (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
            C115 * C435 + C103 * C449) *
               C31023) *
              C31012 * C1841 -
          ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
            C113 * C1852 + C101 * C1864) *
               C31023 +
           (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
            C113 * C1846 + C101 * C1855) *
               C116) *
              C31012 * C1842 +
          ((C113 * C1847 + C101 * C1856 + C114 * C1848 + C102 * C1857 +
            C115 * C1849 + C103 * C1858) *
               C116 +
           (C113 * C1859 + C101 * C1865 + C114 * C1860 + C102 * C1866 +
            C115 * C1861 + C103 * C1867) *
               C31023) *
              C31012 * C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            ((C4559 * C1152 + C30772 * C1164) * C116 +
             (C4559 * C1161 + C30772 * C1179) * C31023) *
                C4557 +
            ((C4559 * C1156 + C30772 * C1171) * C116 +
             (C4559 * C1174 + C30772 * C1183) * C31023) *
                C4558) *
               C31113) *
              C30826 * C258 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C31137 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31148 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31148 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C942 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
            (C5611 + C5612) * C4558) *
               C31137 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31148 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C943 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31148 -
           (((C4559 * C5574 + C30772 * C5579) * C31023 +
             (C4559 * C5570 + C30772 * C5575) * C116) *
                C4558 +
            (C5612 + C5611) * C4557 + C5582 * C4556) *
               C31137 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C30826 * C31144 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C1665 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C1664 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C1664 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C31147 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C1665 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C1664 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C31135 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C1664 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C1665 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C1839 -
          (C5582 * C4558 + (C5252 + C5253) * C4557 +
           ((C4559 * C426 + C30772 * C446) * C31023 +
            (C4559 * C416 + C30772 * C429) * C116) *
               C4556) *
              C1840 +
          (((C4559 * C417 + C30772 * C430) * C116 +
            (C4559 * C433 + C30772 * C447) * C31023) *
               C4556 +
           (C5607 + C5608) * C4557 + C5615 * C4558) *
              C1841 -
          (((C4559 * C6281 + C30772 * C6287) * C31023 +
            (C4559 * C6278 + C30772 * C6282) * C116) *
               C4558 +
           ((C4559 * C2228 + C30772 * C2231) * C31023 +
            (C4559 * C2222 + C30772 * C2225) * C116) *
               C4557 +
           ((C4559 * C1852 + C30772 * C1864) * C31023 +
            (C4559 * C1846 + C30772 * C1855) * C116) *
               C4556) *
              C1842 +
          (((C4559 * C1847 + C30772 * C1856) * C116 +
            (C4559 * C1859 + C30772 * C1865) * C31023) *
               C4556 +
           ((C4559 * C6279 + C30772 * C6283) * C116 +
            (C4559 * C6284 + C30772 * C6288) * C31023) *
               C4557 +
           ((C4559 * C6280 + C30772 * C6285) * C116 +
            (C4559 * C6286 + C30772 * C6289) * C31023) *
               C4558) *
              C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 +
           (C4559 * C416 + C30772 * C429) * C8974 +
           (C4559 * C426 + C30772 * C446) * C8971 +
           (C4559 * C417 + C30772 * C430) * C8975 +
           (C4559 * C433 + C30772 * C447) * C8972) *
              C31012 * C30844 * C30826 * C108 -
          ((C4559 * C434 + C30772 * C448) * C8972 +
           (C4559 * C418 + C30772 * C431) * C8975 +
           (C4559 * C425 + C30772 * C445) * C8971 +
           (C4559 * C415 + C30772 * C428) * C8974 +
           (C4559 * C128 + C30772 * C139) * C8970 +
           (C4559 * C118 + C30772 * C125) * C8973) *
              C31012 * C30844 * C30826 * C109 +
          ((C4559 * C119 + C30772 * C126) * C8973 +
           (C4559 * C129 + C30772 * C140) * C8970 +
           (C4559 * C414 + C30772 * C427) * C8974 +
           (C4559 * C424 + C30772 * C444) * C8971 +
           (C4559 * C419 + C30772 * C432) * C8975 +
           (C4559 * C435 + C30772 * C449) * C8972) *
              C31012 * C30844 * C30826 * C110 -
          ((C4559 * C438 + C30772 * C451) * C8972 +
           (C4559 * C421 + C30772 * C439) * C8975 +
           (C4559 * C437 + C30772 * C450) * C8971 +
           (C4559 * C420 + C30772 * C436) * C8974 +
           (C4559 * C130 + C30772 * C141) * C8970 +
           (C4559 * C120 + C30772 * C131) * C8973) *
              C31012 * C30844 * C30826 * C111 +
          ((C4559 * C121 + C30772 * C132) * C8973 +
           (C4559 * C133 + C30772 * C142) * C8970 +
           (C4559 * C422 + C30772 * C441) * C8974 +
           (C4559 * C440 + C30772 * C452) * C8971 +
           (C4559 * C423 + C30772 * C442) * C8975 +
           (C4559 * C443 + C30772 * C453) * C8972) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 +
            (C4559 * C416 + C30772 * C429) * C8974 +
            (C4559 * C426 + C30772 * C446) * C8971 +
            (C4559 * C417 + C30772 * C430) * C8975 +
            (C4559 * C433 + C30772 * C447) * C8972) *
               C31012 * C30844 * C31147 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31135 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C258 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31135 -
           ((C4559 * C434 + C30772 * C448) * C8972 +
            (C4559 * C418 + C30772 * C431) * C8975 +
            (C4559 * C425 + C30772 * C445) * C8971 +
            (C4559 * C415 + C30772 * C428) * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31147 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 +
            (C4559 * C414 + C30772 * C427) * C8974 +
            (C4559 * C424 + C30772 * C444) * C8971 +
            (C4559 * C419 + C30772 * C432) * C8975 +
            (C4559 * C435 + C30772 * C449) * C8972) *
               C31012 * C30844 * C31147 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C31135 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31148 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31137 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C30826 * C258 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C31137 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C31148 -
           ((C4559 * C1860 + C30772 * C1866) * C8972 +
            (C4559 * C1848 + C30772 * C1857) * C8975 + C9244 * C8971 +
            C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C31148 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C31137 +
           (C9247 * C8973 + C9248 * C8970 + C9250 * C8974 + C9249 * C8971 +
            (C4559 * C1849 + C30772 * C1858) * C8975 +
            (C4559 * C1861 + C30772 * C1867) * C8972) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C942 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C943 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C31144 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C943 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C942 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C942 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C943 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
           C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
              C31012 * C30844 * C1010 -
          (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
           C4708 * C8970 + C4707 * C8973) *
              C31012 * C30844 * C1011 +
          (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
           C5601 * C8975 + C5602 * C8972) *
              C31012 * C30844 * C1012 -
          (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
           C4711 * C8970 + C4712 * C8973) *
              C31012 * C30844 * C1013 +
          (C5451 * C8973 + C5452 * C8970 + C5994 * C8974 + C5993 * C8971 +
           (C4559 * C5571 + C30772 * C5576) * C8975 +
           (C4559 * C5577 + C30772 * C5580) * C8972) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31148 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31137 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C942 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C31137 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C31148 -
           ((C4559 * C6284 + C30772 * C6288) * C8972 +
            (C4559 * C6279 + C30772 * C6283) * C8975 + C6671 * C8971 +
            C6672 * C8974 + C5600 * C8970 + C5599 * C8973) *
               C31012 * C31113) *
              C943 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C31148 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C31137 +
           (C5601 * C8973 + C5602 * C8970 + C6670 * C8974 + C6669 * C8971 +
            (C4559 * C6280 + C30772 * C6285) * C8975 +
            (C4559 * C6286 + C30772 * C6289) * C8972) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C1664 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C1665 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C30826 * C31144 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C1665 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C1664 -
           ((C4559 * C1860 + C30772 * C1866) * C8972 +
            (C4559 * C1848 + C30772 * C1857) * C8975 + C9244 * C8971 +
            C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C1664 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C1665 +
           (C9247 * C8973 + C9248 * C8970 + C9250 * C8974 + C9249 * C8971 +
            (C4559 * C1849 + C30772 * C1858) * C8975 +
            (C4559 * C1861 + C30772 * C1867) * C8972) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C1664 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C1665 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C31147 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C1665 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C1664 -
           ((C4559 * C6284 + C30772 * C6288) * C8972 +
            (C4559 * C6279 + C30772 * C6283) * C8975 + C6671 * C8971 +
            C6672 * C8974 + C5600 * C8970 + C5599 * C8973) *
               C31012 * C31113) *
              C31135 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C1664 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C1665 +
           (C5601 * C8973 + C5602 * C8970 + C6670 * C8974 + C6669 * C8971 +
            (C4559 * C6280 + C30772 * C6285) * C8975 +
            (C4559 * C6286 + C30772 * C6289) * C8972) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
           C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
              C31012 * C1839 -
          (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
           C9234 * C8970 + C9233 * C8973) *
              C31012 * C1840 +
          (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
           C10533 * C8975 + C10534 * C8972) *
              C31012 * C1841 -
          (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
           C9237 * C8970 + C9238 * C8973) *
              C31012 * C1842 +
          (C10533 * C8973 + C10534 * C8970 + C10536 * C8974 + C10535 * C8971 +
           (C4559 * C10517 + C30772 * C10520) * C8975 +
           (C4559 * C10521 + C30772 * C10523) * C8972) *
              C31012 * C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C31080 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C30931) *
                  C30826 * C554 +
              (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                 C115 * C420 + C103 * C436) *
                    C116 +
                (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                 C115 * C437 + C103 * C450) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C31080) *
                  C30826 * C555 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C31080 -
               ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                 C113 * C424 + C101 * C444) *
                    C31023 +
                (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                 C113 * C414 + C101 * C427) *
                    C116) *
                   C31012 * C30931) *
                  C30826 * C556 +
              (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
                 C115 * C662 + C103 * C663) *
                    C116 +
                (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
                 C115 * C664 + C103 * C665) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31023 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31012 * C31080) *
                  C30826 * C31114) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                  C115 * C119 + C103 * C126) *
                     C116 +
                 (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                  C115 * C129 + C103 * C140) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                  C113 * C426 + C101 * C446) *
                     C31023 +
                 (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                  C113 * C416 + C101 * C429) *
                     C116) *
                    C31012 * C30931) *
                   C942 +
               (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                  C115 * C814 + C103 * C819) *
                     C116 +
                 (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                  C115 * C822 + C103 * C829) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31023 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C116) *
                    C31012 * C31080) *
                   C943 +
               (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                  C115 * C266 + C103 * C279) *
                     C116 +
                 (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                  C115 * C282 + C103 * C296) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                  C113 * C1167 + C101 * C1182) *
                     C31023 +
                 (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                  C113 * C1155 + C101 * C1170) *
                     C116) *
                    C31012 * C30931) *
                   C31110) *
                  C31065 +
              ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                  C115 * C420 + C103 * C436) *
                     C116 +
                 (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                  C115 * C437 + C103 * C450) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31023 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C116) *
                    C31012 * C31080) *
                   C942 +
               (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                  C115 * C267 + C103 * C283) *
                     C116 +
                 (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                  C115 * C284 + C103 * C297) *
                     C31023) *
                    C31012 * C31080 -
                ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                  C113 * C821 + C101 * C828) *
                     C31023 +
                 (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                  C113 * C813 + C101 * C818) *
                     C116) *
                    C31012 * C30931) *
                   C943 +
               (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
                  C115 * C1440 + C103 * C1441) *
                     C116 +
                 (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
                  C115 * C1442 + C103 * C1443) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                  C113 * C281 + C101 * C295) *
                     C31023 +
                 (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                  C113 * C265 + C101 * C278) *
                     C116) *
                    C31012 * C31080) *
                   C31110) *
                  C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C2116 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C2117 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C2118 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C30826 * C31065 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C2117 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C2116 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C2118 +
           ((C113 * C1845 + C101 * C1854 + C114 * C1844 + C102 * C1853 +
             C115 * C2120 + C103 * C2121) *
                C116 +
            (C113 * C1851 + C101 * C1863 + C114 * C1850 + C102 * C1862 +
             C115 * C2122 + C103 * C2123) *
                C31023) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C554 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31080) *
              C30826 * C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31080 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C556 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C942 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             (C5611 + C5612) * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C943 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            (((C4559 * C5574 + C30772 * C5579) * C31023 +
              (C4559 * C5570 + C30772 * C5575) * C116) *
                 C4558 +
             (C5612 + C5611) * C4557 + C5582 * C4556) *
                C30931) *
               C31110) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C942 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C943 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C2116 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C2117 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C2118 -
           (((C4559 * C6281 + C30772 * C6287) * C31023 +
             (C4559 * C6278 + C30772 * C6282) * C116) *
                C4558 +
            ((C4559 * C2228 + C30772 * C2231) * C31023 +
             (C4559 * C2222 + C30772 * C2225) * C116) *
                C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C30826 * C31065 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C2117 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C2116 -
           ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C2118 +
           (((C4559 * C1845 + C30772 * C1854) * C116 +
             (C4559 * C1851 + C30772 * C1863) * C31023) *
                C4556 +
            ((C4559 * C2223 + C30772 * C2226) * C116 +
             (C4559 * C2229 + C30772 * C2232) * C31023) *
                C4557 +
            ((C4559 * C6554 + C30772 * C6555) * C116 +
             (C4559 * C6556 + C30772 * C6557) * C31023) *
                C4558) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31080 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C30826 * C554 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C30931 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C31080 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C30931) *
              C30826 * C556 +
          ((C9455 * C8973 + C9456 * C8970 + C9457 * C8974 + C9458 * C8971 +
            (C4559 * C2120 + C30772 * C2121) * C8975 +
            (C4559 * C2122 + C30772 * C2123) * C8972) *
               C31012 * C30931 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31080 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C942 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31080) *
               C943 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C31080 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31080) *
               C942 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31080 -
            ((C4559 * C2229 + C30772 * C2232) * C8972 +
             (C4559 * C2223 + C30772 * C2226) * C8975 + C6451 * C8971 +
             C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C943 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C2116 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C2117 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C31012 * C2118 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9237 * C8970 + C9238 * C8973) *
               C31012 * C31126) *
              C30826 * C31065 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C2117 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C2116 -
           (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 + C9243 * C8974 +
            C9242 * C8970 + C9241 * C8973) *
               C31012 * C2118 +
           (C9243 * C8973 + C9244 * C8970 + C10800 * C8974 + C10799 * C8971 +
            (C4559 * C10790 + C30772 * C10791) * C8975 +
            (C4559 * C10792 + C30772 * C10793) * C8972) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C30826 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31023 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31012 * C30844 * C30826 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31023) *
              C31012 * C30844 * C30826 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31023 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31012 * C30844 * C30826 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31023) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31135 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31147 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31144 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C1664 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C1665 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C31147 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C1664 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C31135 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C1665 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C30826 * C31144 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C1665 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C1664 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C1664 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C31147 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C1665 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C1664 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C31135 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C1664 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C1665 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 +
           (C4559 * C416 + C30772 * C429) * C8974 +
           (C4559 * C426 + C30772 * C446) * C8971 +
           (C4559 * C417 + C30772 * C430) * C8975 +
           (C4559 * C433 + C30772 * C447) * C8972) *
              C31012 * C30844 * C30826 * C108 -
          ((C4559 * C434 + C30772 * C448) * C8972 +
           (C4559 * C418 + C30772 * C431) * C8975 +
           (C4559 * C425 + C30772 * C445) * C8971 +
           (C4559 * C415 + C30772 * C428) * C8974 +
           (C4559 * C128 + C30772 * C139) * C8970 +
           (C4559 * C118 + C30772 * C125) * C8973) *
              C31012 * C30844 * C30826 * C109 +
          ((C4559 * C119 + C30772 * C126) * C8973 +
           (C4559 * C129 + C30772 * C140) * C8970 +
           (C4559 * C414 + C30772 * C427) * C8974 +
           (C4559 * C424 + C30772 * C444) * C8971 +
           (C4559 * C419 + C30772 * C432) * C8975 +
           (C4559 * C435 + C30772 * C449) * C8972) *
              C31012 * C30844 * C30826 * C110 -
          ((C4559 * C438 + C30772 * C451) * C8972 +
           (C4559 * C421 + C30772 * C439) * C8975 +
           (C4559 * C437 + C30772 * C450) * C8971 +
           (C4559 * C420 + C30772 * C436) * C8974 +
           (C4559 * C130 + C30772 * C141) * C8970 +
           (C4559 * C120 + C30772 * C131) * C8973) *
              C31012 * C30844 * C30826 * C111 +
          ((C4559 * C121 + C30772 * C132) * C8973 +
           (C4559 * C133 + C30772 * C142) * C8970 +
           (C4559 * C422 + C30772 * C441) * C8974 +
           (C4559 * C440 + C30772 * C452) * C8971 +
           (C4559 * C423 + C30772 * C442) * C8975 +
           (C4559 * C443 + C30772 * C453) * C8972) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 +
            (C4559 * C416 + C30772 * C429) * C8974 +
            (C4559 * C426 + C30772 * C446) * C8971 +
            (C4559 * C417 + C30772 * C430) * C8975 +
            (C4559 * C433 + C30772 * C447) * C8972) *
               C31012 * C30844 * C31147 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31135 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C258 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31135 -
           ((C4559 * C434 + C30772 * C448) * C8972 +
            (C4559 * C418 + C30772 * C431) * C8975 +
            (C4559 * C425 + C30772 * C445) * C8971 +
            (C4559 * C415 + C30772 * C428) * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31147 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 +
            (C4559 * C414 + C30772 * C427) * C8974 +
            (C4559 * C424 + C30772 * C444) * C8971 +
            (C4559 * C419 + C30772 * C432) * C8975 +
            (C4559 * C435 + C30772 * C449) * C8972) *
               C31012 * C30844 * C31147 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C31135 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C942 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C943 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C31144 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C943 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C942 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C942 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C943 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
           C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
              C31012 * C30844 * C1010 -
          (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
           C4708 * C8970 + C4707 * C8973) *
              C31012 * C30844 * C1011 +
          (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
           C5601 * C8975 + C5602 * C8972) *
              C31012 * C30844 * C1012 -
          (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
           C4711 * C8970 + C4712 * C8973) *
              C31012 * C30844 * C1013 +
          (C5451 * C8973 + C5452 * C8970 + C5994 * C8974 + C5993 * C8971 +
           (C4559 * C5571 + C30772 * C5576) * C8975 +
           (C4559 * C5577 + C30772 * C5580) * C8972) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C1664 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C1665 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C30826 * C31144 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C1665 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C1664 -
           ((C4559 * C1860 + C30772 * C1866) * C8972 +
            (C4559 * C1848 + C30772 * C1857) * C8975 + C9244 * C8971 +
            C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C1664 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C1665 +
           (C9247 * C8973 + C9248 * C8970 + C9250 * C8974 + C9249 * C8971 +
            (C4559 * C1849 + C30772 * C1858) * C8975 +
            (C4559 * C1861 + C30772 * C1867) * C8972) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C1664 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C1665 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C31147 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C1665 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C1664 -
           ((C4559 * C6284 + C30772 * C6288) * C8972 +
            (C4559 * C6279 + C30772 * C6283) * C8975 + C6671 * C8971 +
            C6672 * C8974 + C5600 * C8970 + C5599 * C8973) *
               C31012 * C31113) *
              C31135 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C1664 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C1665 +
           (C5601 * C8973 + C5602 * C8970 + C6670 * C8974 + C6669 * C8971 +
            (C4559 * C6280 + C30772 * C6285) * C8975 +
            (C4559 * C6286 + C30772 * C6289) * C8972) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[65] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C4559 * C117 + C30772 * C124) * C116 +
                      (C4559 * C127 + C30772 * C138) * C31023) *
                         C4556 +
                     (C4725 + C4726) * C4557 + C4743 * C4558) *
                        C3094 -
                    (C5582 * C4558 + (C5252 + C5253) * C4557 +
                     ((C4559 * C426 + C30772 * C446) * C31023 +
                      (C4559 * C416 + C30772 * C429) * C116) *
                         C4556) *
                        C30931) *
                       C31079 +
                   (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                     C5988 * C4558) *
                        C30931 -
                    (C5442 * C4558 + (C4728 + C4727) * C4557 +
                     (C4726 + C4725) * C4556) *
                        C3094) *
                       C30889) *
                      C30803 +
                  (((((C4559 * C415 + C30772 * C428) * C116 +
                      (C4559 * C425 + C30772 * C445) * C31023) *
                         C4556 +
                     (C5254 + C5255) * C4557 + C5877 * C4558) *
                        C30931 -
                    (C4744 * C4558 + (C4732 + C4731) * C4557 +
                     ((C4559 * C128 + C30772 * C139) * C31023 +
                      (C4559 * C118 + C30772 * C125) * C116) *
                         C4556) *
                        C3094) *
                       C31079 +
                   (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                     C5718 * C4558) *
                        C3094 -
                    ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                     (C5255 + C5254) * C4556) *
                        C30931) *
                       C30889) *
                      C30812 +
                  (((((C4559 * C119 + C30772 * C126) * C116 +
                      (C4559 * C129 + C30772 * C140) * C31023) *
                         C4556 +
                     (C4737 + C4738) * C4557 + C4745 * C4558) *
                        C3094 -
                    ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                     ((C4559 * C424 + C30772 * C444) * C31023 +
                      (C4559 * C414 + C30772 * C427) * C116) *
                         C4556) *
                        C30931) *
                       C31079 +
                   (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
                     ((C4559 * C1544 + C30772 * C1547) * C116 +
                      (C4559 * C1550 + C30772 * C1553) * C31023) *
                         C4558) *
                        C30931 -
                    ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
                     (C4738 + C4737) * C4556) *
                        C3094) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31023) *
                        C31012 * C3094 -
                    ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                      C113 * C426 + C101 * C446) *
                         C31023 +
                     (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                      C113 * C416 + C101 * C429) *
                         C116) *
                        C31012 * C30931) *
                       C31079 +
                   (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                      C115 * C814 + C103 * C819) *
                         C116 +
                     (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                      C115 * C822 + C103 * C829) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                      C113 * C273 + C101 * C293) *
                         C31023 +
                     (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                      C113 * C263 + C101 * C276) *
                         C116) *
                        C31012 * C3094) *
                       C30889) *
                      C30803 +
                  ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                      C115 * C420 + C103 * C436) *
                         C116 +
                     (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                      C115 * C437 + C103 * C450) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31023 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31012 * C3094) *
                       C31079 +
                   (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                      C115 * C267 + C103 * C283) *
                         C116 +
                     (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                      C115 * C284 + C103 * C297) *
                         C31023) *
                        C31012 * C3094 -
                    ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                      C113 * C821 + C101 * C828) *
                         C31023 +
                     (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                      C113 * C813 + C101 * C818) *
                         C116) *
                        C31012 * C30931) *
                       C30889) *
                      C30812 +
                  ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31023) *
                        C31012 * C3094 -
                    ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                      C113 * C424 + C101 * C444) *
                         C31023 +
                     (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                      C113 * C414 + C101 * C427) *
                         C116) *
                        C31012 * C30931) *
                       C31079 +
                   (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                      C115 * C816 + C103 * C825) *
                         C116 +
                     (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                      C115 * C826 + C103 * C831) *
                         C31023) *
                        C31012 * C30931 -
                    ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                      C113 * C271 + C101 * C291) *
                         C31023 +
                     (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                      C113 * C261 + C101 * C274) *
                         C116) *
                        C31012 * C3094) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C8973 +
                     (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
                     C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                        C31012 * C3094 -
                    (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 +
                     C9235 * C8974 + C9234 * C8970 + C9233 * C8973) *
                        C31012 * C30931) *
                       C31079 +
                   ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 +
                     C5600 * C8971 + C6672 * C8975 + C6671 * C8972) *
                        C31012 * C30931 -
                    (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 +
                     C5241 * C8974 + C4708 * C8970 + C4707 * C8973) *
                        C31012 * C3094) *
                       C30889) *
                      C30803 +
                  (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 +
                     C9242 * C8971 + C9243 * C8975 + C9244 * C8972) *
                        C31012 * C30931 -
                    (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 +
                     C9239 * C8974 + (C4559 * C128 + C30772 * C139) * C8970 +
                     (C4559 * C118 + C30772 * C125) * C8973) *
                        C31012 * C3094) *
                       C31079 +
                   ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 +
                     C5243 * C8971 + C6452 * C8975 + C6451 * C8972) *
                        C31012 * C3094 -
                    (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 +
                     C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                        C31012 * C30931) *
                       C30889) *
                      C30812 +
                  ((((C4559 * C119 + C30772 * C126) * C8973 +
                     (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
                     C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                        C31012 * C3094 -
                    (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 +
                     C9247 * C8974 + C9246 * C8970 + C9245 * C8973) *
                        C31012 * C30931) *
                       C31079 +
                   ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 +
                     C9610 * C8971 + (C4559 * C2224 + C30772 * C2227) * C8975 +
                     (C4559 * C2230 + C30772 * C2233) * C8972) *
                        C31012 * C30931 -
                    (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 +
                     C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
                        C31012 * C3094) *
                       C30889) *
                      C2703)) /
                    (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C30927 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30934 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C3602) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30934 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C30927 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C3602) *
               C30889) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30934 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C30927 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C3602) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C30927 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30934 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C30927 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30934 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C3602) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30934 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C30927 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C3602) *
               C30889) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30934 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C30927 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C3602) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C30927 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30934 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C30927 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30934 +
            (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C31012 * C3602) *
               C31079 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30934 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C30927 -
            (C10907 * C8972 + C10908 * C8975 + C6671 * C8971 + C6672 * C8974 +
             C5600 * C8970 + C5599 * C8973) *
                C31012 * C3602) *
               C30889) *
              C2440 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30934 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C30927 -
            (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 + C9243 * C8974 +
             C9242 * C8970 + C9241 * C8973) *
                C31012 * C3602) *
               C31079 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C30927 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30934 +
            (C6452 * C8973 + C6451 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C4559 * C10682 + C30772 * C10683) * C8975 +
             (C4559 * C10684 + C30772 * C10685) * C8972) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C3094 -
               ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                 C113 * C426 + C101 * C446) *
                    C31023 +
                (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                 C113 * C416 + C101 * C429) *
                    C116) *
                   C31012 * C30931) *
                  C30826 * C31153 +
              (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                 C115 * C420 + C103 * C436) *
                    C116 +
                (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                 C115 * C437 + C103 * C450) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C3094) *
                  C30826 * C31146 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C3094 -
               ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                 C113 * C424 + C101 * C444) *
                    C31023 +
                (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                 C113 * C414 + C101 * C427) *
                    C116) *
                   C31012 * C30931) *
                  C30826 * C31133 +
              (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
                 C115 * C662 + C103 * C663) *
                    C116 +
                (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
                 C115 * C664 + C103 * C665) *
                    C31023) *
                   C31012 * C30931 -
               ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                 C113 * C130 + C101 * C141) *
                    C31023 +
                (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                 C113 * C120 + C101 * C131) *
                    C116) *
                   C31012 * C3094) *
                  C30826 * C31114) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                  C115 * C119 + C103 * C126) *
                     C116 +
                 (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                  C115 * C129 + C103 * C140) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                  C113 * C426 + C101 * C446) *
                     C31023 +
                 (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                  C113 * C416 + C101 * C429) *
                     C116) *
                    C31012 * C30931) *
                   C31147 +
               (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                  C115 * C814 + C103 * C819) *
                     C116 +
                 (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                  C115 * C822 + C103 * C829) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                  C113 * C273 + C101 * C293) *
                     C31023 +
                 (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                  C113 * C263 + C101 * C276) *
                     C116) *
                    C31012 * C3094) *
                   C31135 +
               (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                  C115 * C266 + C103 * C279) *
                     C116 +
                 (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                  C115 * C282 + C103 * C296) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
                  C113 * C1167 + C101 * C1182) *
                     C31023 +
                 (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
                  C113 * C1155 + C101 * C1170) *
                     C116) *
                    C31012 * C30931) *
                   C31110) *
                  C2440 +
              ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                  C115 * C420 + C103 * C436) *
                     C116 +
                 (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                  C115 * C437 + C103 * C450) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                  C113 * C128 + C101 * C139) *
                     C31023 +
                 (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                  C113 * C118 + C101 * C125) *
                     C116) *
                    C31012 * C3094) *
                   C31147 +
               (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                  C115 * C267 + C103 * C283) *
                     C116 +
                 (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                  C115 * C284 + C103 * C297) *
                     C31023) *
                    C31012 * C3094 -
                ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                  C113 * C821 + C101 * C828) *
                     C31023 +
                 (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                  C113 * C813 + C101 * C818) *
                     C116) *
                    C31012 * C30931) *
                   C31135 +
               (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
                  C115 * C1440 + C103 * C1441) *
                     C116 +
                 (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
                  C115 * C1442 + C103 * C1443) *
                     C31023) *
                    C31012 * C30931 -
                ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                  C113 * C281 + C101 * C295) *
                     C31023 +
                 (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                  C113 * C265 + C101 * C278) *
                     C116) *
                    C31012 * C3094) *
                   C31110) *
                  C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31155 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31152 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31143 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C30826 * C2440 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C31152 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31155 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31143 +
           ((C113 * C1845 + C101 * C1854 + C114 * C1844 + C102 * C1853 +
             C115 * C2120 + C103 * C2121) *
                C116 +
            (C113 * C1851 + C101 * C1863 + C114 * C1850 + C102 * C1862 +
             C115 * C2122 + C103 * C2123) *
                C31023) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C31153 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C3094) *
              C30826 * C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C3094 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C31133 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31147 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C31135 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C31110) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C31147 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C31135 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31155 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31152 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31143 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C30826 * C2440 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C31152 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31155 -
           ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31143 +
           (((C4559 * C1845 + C30772 * C1854) * C116 +
             (C4559 * C1851 + C30772 * C1863) * C31023) *
                C4556 +
            ((C4559 * C2223 + C30772 * C2226) * C116 +
             (C4559 * C2229 + C30772 * C2232) * C31023) *
                C4557 +
            ((C4559 * C6554 + C30772 * C6555) * C116 +
             (C4559 * C6556 + C30772 * C6557) * C31023) *
                C4558) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C3094 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C30826 * C31153 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C30931 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C3094 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C30931) *
              C30826 * C31133 +
          ((C9455 * C8973 + C9456 * C8970 + C9457 * C8974 + C9458 * C8971 +
            (C4559 * C2120 + C30772 * C2121) * C8975 +
            (C4559 * C2122 + C30772 * C2123) * C8972) *
               C31012 * C30931 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C3094 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C31147 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C3094) *
               C31135 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C3094 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C3094) *
               C31147 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C3094 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C31135 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31155 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31152 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C31012 * C31143 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9237 * C8970 + C9238 * C8973) *
               C31012 * C31126) *
              C30826 * C2440 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C31152 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C31155 -
           (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 + C9243 * C8974 +
            C9242 * C8970 + C9241 * C8973) *
               C31012 * C31143 +
           (C9243 * C8973 + C9244 * C8970 + C10800 * C8974 + C10799 * C8971 +
            (C4559 * C10790 + C30772 * C10791) * C8975 +
            (C4559 * C10792 + C30772 * C10793) * C8972) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C4559 * C117 + C30772 * C124) * C116 +
                     (C4559 * C127 + C30772 * C138) * C31023) *
                        C4556 +
                    (C4725 + C4726) * C4557 + C4743 * C4558) *
                       C30927 -
                   (C5582 * C4558 + (C5252 + C5253) * C4557 +
                    ((C4559 * C426 + C30772 * C446) * C31023 +
                     (C4559 * C416 + C30772 * C429) * C116) *
                        C4556) *
                       C30934 +
                   (((C4559 * C417 + C30772 * C430) * C116 +
                     (C4559 * C433 + C30772 * C447) * C31023) *
                        C4556 +
                    (C5607 + C5608) * C4557 + C5615 * C4558) *
                       C3602) *
                      C30826 * C30803 +
                  ((((C4559 * C415 + C30772 * C428) * C116 +
                     (C4559 * C425 + C30772 * C445) * C31023) *
                        C4556 +
                    (C5254 + C5255) * C4557 + C5877 * C4558) *
                       C30934 -
                   (C4744 * C4558 + (C4732 + C4731) * C4557 +
                    ((C4559 * C128 + C30772 * C139) * C31023 +
                     (C4559 * C118 + C30772 * C125) * C116) *
                        C4556) *
                       C30927 -
                   ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
                    ((C4559 * C434 + C30772 * C448) * C31023 +
                     (C4559 * C418 + C30772 * C431) * C116) *
                        C4556) *
                       C3602) *
                      C30826 * C30812 +
                  ((((C4559 * C119 + C30772 * C126) * C116 +
                     (C4559 * C129 + C30772 * C140) * C31023) *
                        C4556 +
                    (C4737 + C4738) * C4557 + C4745 * C4558) *
                       C30927 -
                   ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                    ((C4559 * C424 + C30772 * C444) * C31023 +
                     (C4559 * C414 + C30772 * C427) * C116) *
                        C4556) *
                       C30934 +
                   (((C4559 * C419 + C30772 * C432) * C116 +
                     (C4559 * C435 + C30772 * C449) * C31023) *
                        C4556 +
                    ((C4559 * C1150 + C30772 * C1162) * C116 +
                     (C4559 * C1159 + C30772 * C1177) * C31023) *
                        C4557 +
                    ((C4559 * C1158 + C30772 * C1173) * C116 +
                     (C4559 * C1176 + C30772 * C1185) * C31023) *
                        C4558) *
                       C3602) *
                      C30826 * C2703)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                     C115 * C119 + C103 * C126) *
                        C116 +
                    (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                     C115 * C129 + C103 * C140) *
                        C31023) *
                       C31012 * C30927 -
                   ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                     C113 * C426 + C101 * C446) *
                        C31023 +
                    (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                     C113 * C416 + C101 * C429) *
                        C116) *
                       C31012 * C30934 +
                   ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                     C115 * C419 + C103 * C432) *
                        C116 +
                    (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                     C115 * C435 + C103 * C449) *
                        C31023) *
                       C31012 * C3602) *
                      C30826 * C30803 +
                  (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                     C115 * C420 + C103 * C436) *
                        C116 +
                    (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                     C115 * C437 + C103 * C450) *
                        C31023) *
                       C31012 * C30934 -
                   ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                     C113 * C128 + C101 * C139) *
                        C31023 +
                    (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                     C113 * C118 + C101 * C125) *
                        C116) *
                       C31012 * C30927 -
                   ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                     C113 * C434 + C101 * C448) *
                        C31023 +
                    (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                     C113 * C418 + C101 * C431) *
                        C116) *
                       C31012 * C3602) *
                      C30826 * C30812 +
                  (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                     C115 * C121 + C103 * C132) *
                        C116 +
                    (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                     C115 * C133 + C103 * C142) *
                        C31023) *
                       C31012 * C30927 -
                   ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                     C113 * C424 + C101 * C444) *
                        C31023 +
                    (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                     C113 * C414 + C101 * C427) *
                        C116) *
                       C31012 * C30934 +
                   ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
                     C115 * C423 + C103 * C442) *
                        C116 +
                    (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
                     C115 * C443 + C103 * C453) *
                        C31023) *
                       C31012 * C3602) *
                      C30826 * C2703)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C4559 * C117 + C30772 * C124) * C8973 +
                    (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
                    C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                       C31012 * C30927 -
                   (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 +
                    C9235 * C8974 + C9234 * C8970 + C9233 * C8973) *
                       C31012 * C30934 +
                   (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 +
                    C9237 * C8971 + C10533 * C8975 + C10534 * C8972) *
                       C31012 * C3602) *
                      C30826 * C30803 +
                  ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 +
                    C9242 * C8971 + C9243 * C8975 + C9244 * C8972) *
                       C31012 * C30934 -
                   (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 +
                    C9239 * C8974 + (C4559 * C128 + C30772 * C139) * C8970 +
                    (C4559 * C118 + C30772 * C125) * C8973) *
                       C31012 * C30927 -
                   (C10799 * C8972 + C10800 * C8975 + C9244 * C8971 +
                    C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
                       C31012 * C3602) *
                      C30826 * C30812 +
                  (((C4559 * C119 + C30772 * C126) * C8973 +
                    (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
                    C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                       C31012 * C30927 -
                   (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 +
                    C9247 * C8974 + C9246 * C8970 + C9245 * C8973) *
                       C31012 * C30934 +
                   (C9247 * C8973 + C9248 * C8970 + C9250 * C8974 +
                    C9249 * C8971 + (C4559 * C1849 + C30772 * C1858) * C8975 +
                    (C4559 * C1861 + C30772 * C1867) * C8972) *
                       C31012 * C3602) *
                      C30826 * C2703)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31147 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C31135 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C31147 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C31135 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C31153 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C31133 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C31153 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C3094) *
              C30826 * C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C3094 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C31133 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31147 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C31135 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C31110) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C31147 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C31135 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C3094 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C30826 * C31153 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C30931 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C3094 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C30931) *
              C30826 * C31133 +
          ((C9455 * C8973 + C9456 * C8970 + C9457 * C8974 + C9458 * C8971 +
            (C4559 * C2120 + C30772 * C2121) * C8975 +
            (C4559 * C2122 + C30772 * C2123) * C8972) *
               C31012 * C30931 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C3094 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C31147 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C3094) *
               C31135 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C3094 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C3094) *
               C31147 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C3094 -
            (C10691 * C8972 + C10692 * C8975 + C6451 * C8971 + C6452 * C8974 +
             C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C31135 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C1284 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C1285 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C1286 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C31065 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C1285 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C1284 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C1286 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C554 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C556 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31079 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C554 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31079) *
              C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31079 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C556 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C1284 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C1285 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C1286 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C31065 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C1285 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C1284 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C1286 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C31079 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C30889) *
              C554 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C30889 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C31079 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C30889) *
              C556 +
          ((C4962 * C8973 + C4963 * C8970 +
            (C4559 * C815 + C30772 * C824) * C8974 +
            (C4559 * C823 + C30772 * C830) * C8971 +
            (C4559 * C2014 + C30772 * C2015) * C8975 +
            (C4559 * C2016 + C30772 * C2017) * C8972) *
               C31012 * C30844 * C30889 -
           ((C4559 * C438 + C30772 * C451) * C8972 +
            (C4559 * C421 + C30772 * C439) * C8975 +
            (C4559 * C437 + C30772 * C450) * C8971 +
            (C4559 * C420 + C30772 * C436) * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C1284 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C1285 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C1286 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C30844 * C31120) *
              C31065 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C1285 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C1284 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C1286 +
           (C4717 * C8973 + C4718 * C8970 + C5883 * C8974 + C5882 * C8971 +
            (C4559 * C6436 + C30772 * C6437) * C8975 +
            (C4559 * C6438 + C30772 * C6439) * C8972) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C1284 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31080) *
              C1285 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C1286 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C258 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            ((C5250 + C5251) * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             ((C4559 * C1542 + C30772 * C1545) * C116 +
              (C4559 * C1548 + C30772 * C1551) * C31023) *
                 C4558) *
                C30931 -
            ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30889) *
              C258 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + (C5256 + C5257) * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             (C4735 + C4736) * C4558) *
                C31080 -
            (((C4559 * C1549 + C30772 * C1552) * C31023 +
              (C4559 * C1543 + C30772 * C1546) * C116) *
                 C4558 +
             (C5257 + C5256) * C4557 + (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C259 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C31080 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C1284 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31080) *
              C1285 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C1286 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31080 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C31079 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31080) *
               C30889) *
              C258 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31080) *
               C31079 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31080 -
            ((C4559 * C2229 + C30772 * C2232) * C8972 +
             (C4559 * C2223 + C30772 * C2226) * C8975 + C6451 * C8971 +
             C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C8973 +
             (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
             C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
                C31012 * C31080 -
            (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
             C9246 * C8970 + C9245 * C8973) *
                C31012 * C30931) *
               C31079 +
           ((C5249 * C8973 + C5248 * C8970 + C9609 * C8974 + C9610 * C8971 +
             (C4559 * C2224 + C30772 * C2227) * C8975 +
             (C4559 * C2230 + C30772 * C2233) * C8972) *
                C31012 * C30931 -
            (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
             C4720 * C8970 + C4719 * C8973) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31080 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C1284 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C30931 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C31080) *
              C1285 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C31080 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C30931) *
              C1286 +
          ((C5603 * C8973 + C5604 * C8970 + C5606 * C8974 + C5605 * C8971 +
            (C4559 * C6656 + C30772 * C6657) * C8975 +
            (C4559 * C6658 + C30772 * C6659) * C8972) *
               C31012 * C30931 -
           (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
            C4711 * C8970 + C4712 * C8973) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31023) *
                  C31012 * C30844 * C30826 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31023 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31012 * C30844 * C30826 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31023) *
                  C31012 * C30844 * C30826 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31023 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31012 * C30844 * C30826 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31023) *
                  C31012 * C30844 * C30826 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C31135 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C31147 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C31110) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C258 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31148 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C31137 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C942 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31148 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C943 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C31137 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            ((C4559 * C1152 + C30772 * C1164) * C116 +
             (C4559 * C1161 + C30772 * C1179) * C31023) *
                C4557 +
            ((C4559 * C1156 + C30772 * C1171) * C116 +
             (C4559 * C1174 + C30772 * C1183) * C31023) *
                C4558) *
               C31113) *
              C30826 * C258 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C31137 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31148 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31148 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C942 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
            (C5611 + C5612) * C4558) *
               C31137 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31148 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C943 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31148 -
           (((C4559 * C5574 + C30772 * C5579) * C31023 +
             (C4559 * C5570 + C30772 * C5575) * C116) *
                C4558 +
            (C5612 + C5611) * C4557 + C5582 * C4556) *
               C31137 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 +
           (C4559 * C416 + C30772 * C429) * C8974 +
           (C4559 * C426 + C30772 * C446) * C8971 +
           (C4559 * C417 + C30772 * C430) * C8975 +
           (C4559 * C433 + C30772 * C447) * C8972) *
              C31012 * C30844 * C30826 * C108 -
          ((C4559 * C434 + C30772 * C448) * C8972 +
           (C4559 * C418 + C30772 * C431) * C8975 +
           (C4559 * C425 + C30772 * C445) * C8971 +
           (C4559 * C415 + C30772 * C428) * C8974 +
           (C4559 * C128 + C30772 * C139) * C8970 +
           (C4559 * C118 + C30772 * C125) * C8973) *
              C31012 * C30844 * C30826 * C109 +
          ((C4559 * C119 + C30772 * C126) * C8973 +
           (C4559 * C129 + C30772 * C140) * C8970 +
           (C4559 * C414 + C30772 * C427) * C8974 +
           (C4559 * C424 + C30772 * C444) * C8971 +
           (C4559 * C419 + C30772 * C432) * C8975 +
           (C4559 * C435 + C30772 * C449) * C8972) *
              C31012 * C30844 * C30826 * C110 -
          ((C4559 * C438 + C30772 * C451) * C8972 +
           (C4559 * C421 + C30772 * C439) * C8975 +
           (C4559 * C437 + C30772 * C450) * C8971 +
           (C4559 * C420 + C30772 * C436) * C8974 +
           (C4559 * C130 + C30772 * C141) * C8970 +
           (C4559 * C120 + C30772 * C131) * C8973) *
              C31012 * C30844 * C30826 * C111 +
          ((C4559 * C121 + C30772 * C132) * C8973 +
           (C4559 * C133 + C30772 * C142) * C8970 +
           (C4559 * C422 + C30772 * C441) * C8974 +
           (C4559 * C440 + C30772 * C452) * C8971 +
           (C4559 * C423 + C30772 * C442) * C8975 +
           (C4559 * C443 + C30772 * C453) * C8972) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 +
            (C4559 * C416 + C30772 * C429) * C8974 +
            (C4559 * C426 + C30772 * C446) * C8971 +
            (C4559 * C417 + C30772 * C430) * C8975 +
            (C4559 * C433 + C30772 * C447) * C8972) *
               C31012 * C30844 * C31147 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31135 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C258 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31135 -
           ((C4559 * C434 + C30772 * C448) * C8972 +
            (C4559 * C418 + C30772 * C431) * C8975 +
            (C4559 * C425 + C30772 * C445) * C8971 +
            (C4559 * C415 + C30772 * C428) * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31147 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 +
            (C4559 * C414 + C30772 * C427) * C8974 +
            (C4559 * C424 + C30772 * C444) * C8971 +
            (C4559 * C419 + C30772 * C432) * C8975 +
            (C4559 * C435 + C30772 * C449) * C8972) *
               C31012 * C30844 * C31147 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C31135 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31148 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31137 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C30826 * C258 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C31137 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C31148 -
           ((C4559 * C1860 + C30772 * C1866) * C8972 +
            (C4559 * C1848 + C30772 * C1857) * C8975 + C9244 * C8971 +
            C9243 * C8974 + C9242 * C8970 + C9241 * C8973) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C31148 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C31137 +
           (C9247 * C8973 + C9248 * C8970 + C9250 * C8974 + C9249 * C8971 +
            (C4559 * C1849 + C30772 * C1858) * C8975 +
            (C4559 * C1861 + C30772 * C1867) * C8972) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C942 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C943 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C31144 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C943 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C942 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C942 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C943 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
           C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
              C31012 * C30844 * C1010 -
          (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
           C4708 * C8970 + C4707 * C8973) *
              C31012 * C30844 * C1011 +
          (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
           C5601 * C8975 + C5602 * C8972) *
              C31012 * C30844 * C1012 -
          (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
           C4711 * C8970 + C4712 * C8973) *
              C31012 * C30844 * C1013 +
          (C5451 * C8973 + C5452 * C8970 + C5994 * C8974 + C5993 * C8971 +
           (C4559 * C5571 + C30772 * C5576) * C8975 +
           (C4559 * C5577 + C30772 * C5580) * C8972) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31148 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C31137 +
           (C9235 * C8973 + C9236 * C8970 + C9238 * C8974 + C9237 * C8971 +
            (C4559 * C1847 + C30772 * C1856) * C8975 +
            (C4559 * C1859 + C30772 * C1865) * C8972) *
               C31012 * C31113) *
              C942 +
          ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
            C6672 * C8975 + C6671 * C8972) *
               C31012 * C31137 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C31148 -
           ((C4559 * C6284 + C30772 * C6288) * C8972 +
            (C4559 * C6279 + C30772 * C6283) * C8975 + C6671 * C8971 +
            C6672 * C8974 + C5600 * C8970 + C5599 * C8973) *
               C31012 * C31113) *
              C943 +
          ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C31148 -
           (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
            C5238 * C8970 + C5239 * C8973) *
               C31012 * C31137 +
           (C5601 * C8973 + C5602 * C8970 + C6670 * C8974 + C6669 * C8971 +
            (C4559 * C6280 + C30772 * C6285) * C8975 +
            (C4559 * C6286 + C30772 * C6289) * C8972) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C942 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C943 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C942 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C943 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C554 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C556 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C554 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31080) *
              C30826 * C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31080 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C556 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C942 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             (C5611 + C5612) * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C943 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            (((C4559 * C5574 + C30772 * C5579) * C31023 +
              (C4559 * C5570 + C30772 * C5575) * C116) *
                 C4558 +
             (C5612 + C5611) * C4557 + C5582 * C4556) *
                C30931) *
               C31110) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C942 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C943 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C31080 -
           (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
            C9234 * C8970 + C9233 * C8973) *
               C31012 * C30931) *
              C30826 * C554 +
          ((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
            C9243 * C8975 + C9244 * C8972) *
               C31012 * C30931 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C31080 -
           (C9249 * C8972 + C9250 * C8975 + C9248 * C8971 + C9247 * C8974 +
            C9246 * C8970 + C9245 * C8973) *
               C31012 * C30931) *
              C30826 * C556 +
          ((C9455 * C8973 + C9456 * C8970 + C9457 * C8974 + C9458 * C8971 +
            (C4559 * C2120 + C30772 * C2121) * C8975 +
            (C4559 * C2122 + C30772 * C2123) * C8972) *
               C31012 * C30931 -
           (C9458 * C8972 + C9457 * C8975 + C9456 * C8971 + C9455 * C8974 +
            (C4559 * C130 + C30772 * C141) * C8970 +
            (C4559 * C120 + C30772 * C131) * C8973) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C8973 +
             (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
             C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
                C31012 * C31080 -
            (C9237 * C8972 + C9238 * C8975 + C9236 * C8971 + C9235 * C8974 +
             C9234 * C8970 + C9233 * C8973) *
                C31012 * C30931) *
               C942 +
           ((C5241 * C8973 + C5240 * C8970 + C5599 * C8974 + C5600 * C8971 +
             C6672 * C8975 + C6671 * C8972) *
                C31012 * C30931 -
            (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
             C4708 * C8970 + C4707 * C8973) *
                C31012 * C31080) *
               C943 +
           ((C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
             C5601 * C8975 + C5602 * C8972) *
                C31012 * C31080 -
            (C6669 * C8972 + C6670 * C8975 + C5602 * C8971 + C5601 * C8974 +
             C5238 * C8970 + C5239 * C8973) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          (((C9239 * C8973 + C9240 * C8970 + C9241 * C8974 + C9242 * C8971 +
             C9243 * C8975 + C9244 * C8972) *
                C31012 * C30931 -
            (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
             (C4559 * C128 + C30772 * C139) * C8970 +
             (C4559 * C118 + C30772 * C125) * C8973) *
                C31012 * C31080) *
               C942 +
           ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
             C6452 * C8975 + C6451 * C8972) *
                C31012 * C31080 -
            ((C4559 * C2229 + C30772 * C2232) * C8972 +
             (C4559 * C2223 + C30772 * C2226) * C8975 + C6451 * C8971 +
             C6452 * C8974 + C5243 * C8970 + C5242 * C8973) *
                C31012 * C30931) *
               C943 +
           ((C5244 * C8973 + C5245 * C8970 + C6450 * C8974 + C6449 * C8971 +
             (C4559 * C6554 + C30772 * C6555) * C8975 +
             (C4559 * C6556 + C30772 * C6557) * C8972) *
                C31012 * C30931 -
            (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
             C4716 * C8970 + C4715 * C8973) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31135 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31147 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C30826 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31023 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31012 * C30844 * C30826 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31023) *
              C31012 * C30844 * C30826 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31023 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31012 * C30844 * C30826 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31023) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 +
           (C4559 * C416 + C30772 * C429) * C8974 +
           (C4559 * C426 + C30772 * C446) * C8971 +
           (C4559 * C417 + C30772 * C430) * C8975 +
           (C4559 * C433 + C30772 * C447) * C8972) *
              C31012 * C30844 * C30826 * C108 -
          ((C4559 * C434 + C30772 * C448) * C8972 +
           (C4559 * C418 + C30772 * C431) * C8975 +
           (C4559 * C425 + C30772 * C445) * C8971 +
           (C4559 * C415 + C30772 * C428) * C8974 +
           (C4559 * C128 + C30772 * C139) * C8970 +
           (C4559 * C118 + C30772 * C125) * C8973) *
              C31012 * C30844 * C30826 * C109 +
          ((C4559 * C119 + C30772 * C126) * C8973 +
           (C4559 * C129 + C30772 * C140) * C8970 +
           (C4559 * C414 + C30772 * C427) * C8974 +
           (C4559 * C424 + C30772 * C444) * C8971 +
           (C4559 * C419 + C30772 * C432) * C8975 +
           (C4559 * C435 + C30772 * C449) * C8972) *
              C31012 * C30844 * C30826 * C110 -
          ((C4559 * C438 + C30772 * C451) * C8972 +
           (C4559 * C421 + C30772 * C439) * C8975 +
           (C4559 * C437 + C30772 * C450) * C8971 +
           (C4559 * C420 + C30772 * C436) * C8974 +
           (C4559 * C130 + C30772 * C141) * C8970 +
           (C4559 * C120 + C30772 * C131) * C8973) *
              C31012 * C30844 * C30826 * C111 +
          ((C4559 * C121 + C30772 * C132) * C8973 +
           (C4559 * C133 + C30772 * C142) * C8970 +
           (C4559 * C422 + C30772 * C441) * C8974 +
           (C4559 * C440 + C30772 * C452) * C8971 +
           (C4559 * C423 + C30772 * C442) * C8975 +
           (C4559 * C443 + C30772 * C453) * C8972) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 +
            (C4559 * C416 + C30772 * C429) * C8974 +
            (C4559 * C426 + C30772 * C446) * C8971 +
            (C4559 * C417 + C30772 * C430) * C8975 +
            (C4559 * C433 + C30772 * C447) * C8972) *
               C31012 * C30844 * C31147 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C31135 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C258 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C31135 -
           ((C4559 * C434 + C30772 * C448) * C8972 +
            (C4559 * C418 + C30772 * C431) * C8975 +
            (C4559 * C425 + C30772 * C445) * C8971 +
            (C4559 * C415 + C30772 * C428) * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C31147 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 +
            (C4559 * C414 + C30772 * C427) * C8974 +
            (C4559 * C424 + C30772 * C444) * C8971 +
            (C4559 * C419 + C30772 * C432) * C8975 +
            (C4559 * C435 + C30772 * C449) * C8972) *
               C31012 * C30844 * C31147 -
           ((C4559 * C1159 + C30772 * C1177) * C8972 +
            (C4559 * C1150 + C30772 * C1162) * C8975 + C5248 * C8971 +
            C5249 * C8974 + C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C31135 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C8973 +
            (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
            C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
               C31012 * C30844 * C942 -
           (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
            C4708 * C8970 + C4707 * C8973) *
               C31012 * C30844 * C943 +
           (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
            C5601 * C8975 + C5602 * C8972) *
               C31012 * C30844 * C31110) *
              C31144 +
          ((C4713 * C8973 + C4714 * C8970 + C5242 * C8974 + C5243 * C8971 +
            C6452 * C8975 + C6451 * C8972) *
               C31012 * C30844 * C943 -
           (C9242 * C8972 + C9241 * C8975 + C9240 * C8971 + C9239 * C8974 +
            (C4559 * C128 + C30772 * C139) * C8970 +
            (C4559 * C118 + C30772 * C125) * C8973) *
               C31012 * C30844 * C942 -
           (C6449 * C8972 + C6450 * C8975 + C5245 * C8971 + C5244 * C8974 +
            C4716 * C8970 + C4715 * C8973) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C4559 * C119 + C30772 * C126) * C8973 +
            (C4559 * C129 + C30772 * C140) * C8970 + C9245 * C8974 +
            C9246 * C8971 + C9247 * C8975 + C9248 * C8972) *
               C31012 * C30844 * C942 -
           (C9610 * C8972 + C9609 * C8975 + C5248 * C8971 + C5249 * C8974 +
            C4720 * C8970 + C4719 * C8973) *
               C31012 * C30844 * C943 +
           (C4721 * C8973 + C4722 * C8970 + C5247 * C8974 + C5246 * C8971 +
            (C4559 * C1158 + C30772 * C1173) * C8975 +
            (C4559 * C1176 + C30772 * C1185) * C8972) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C4559 * C117 + C30772 * C124) * C8973 +
           (C4559 * C127 + C30772 * C138) * C8970 + C9233 * C8974 +
           C9234 * C8971 + C9235 * C8975 + C9236 * C8972) *
              C31012 * C30844 * C1010 -
          (C5600 * C8972 + C5599 * C8975 + C5240 * C8971 + C5241 * C8974 +
           C4708 * C8970 + C4707 * C8973) *
              C31012 * C30844 * C1011 +
          (C4709 * C8973 + C4710 * C8970 + C5239 * C8974 + C5238 * C8971 +
           C5601 * C8975 + C5602 * C8972) *
              C31012 * C30844 * C1012 -
          (C5605 * C8972 + C5606 * C8975 + C5604 * C8971 + C5603 * C8974 +
           C4711 * C8970 + C4712 * C8973) *
              C31012 * C30844 * C1013 +
          (C5451 * C8973 + C5452 * C8970 + C5994 * C8974 + C5993 * C8971 +
           (C4559 * C5571 + C30772 * C5576) * C8975 +
           (C4559 * C5577 + C30772 * C5580) * C8972) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C30885 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C30892 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C2700) *
              C30803 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C30892 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C30885 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C2700) *
              C30812 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C30885 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C30892 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C2700) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C30885 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C30892 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C31080 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C2700) *
              C2440 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C30885 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30892 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C31080) *
               C2700) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C31154 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C31150 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31140 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C30844 * C31120) *
              C2440 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C31150 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31154 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31140 +
           ((C14670 + C14669) * C18918 + (C14668 + C14667) * C18916 +
            (C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
             C13223 * C1547) *
                C18919 +
            (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
             C13223 * C1553) *
                C18917) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C2332 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C30889) *
              C31153 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C30889 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C2332 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C30889) *
              C31133 +
          (((C13731 + C13732) * C18918 + (C13733 + C13734) * C18916 +
            (C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                C18919 +
            (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                C18917) *
               C31012 * C30844 * C30889 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31148 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C31137 +
            ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
             (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
                C31012 * C31113) *
               C2332 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C31137 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31148 -
            ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
             (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
                C31012 * C31113) *
               C30889) *
              C2440 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C31137 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31148 -
            ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
             (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
                C31012 * C31113) *
               C2332 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31148 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C31137 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C18919 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C18917) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C30889) *
              C30803 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C2332 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C30812 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C31080 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C31080) *
               C30889) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C2332 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C30889) *
              C31153 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C30889 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C2332 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C30889) *
              C31133 +
          (((C13731 + C13732) * C18918 + (C13733 + C13734) * C18916 +
            (C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                C18919 +
            (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                C18917) *
               C31012 * C30844 * C30889 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C31154 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C31150 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31140 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C30844 * C31120) *
              C2440 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C31150 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31154 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31140 +
           ((C14670 + C14669) * C18918 + (C14668 + C14667) * C18916 +
            (C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
             C13223 * C1547) *
                C18919 +
            (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
             C13223 * C1553) *
                C18917) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C30885 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C30892 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C3094 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C2700) *
              C31065 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C30885 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30892 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C3094) *
               C2700) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30927 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30934 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C3602) *
              C30885 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C30934 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30927 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C3602) *
              C30892 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30927 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C30934 +
           ((C14528 + C14527) * C18918 + (C14526 + C14525) * C18916 +
            (C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
             C13223 * C6555) *
                C18919 +
            (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
             C13223 * C6557) *
                C18917) *
               C31012 * C3602) *
              C2700) *
         C30798) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C3094 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C31154 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C30931 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C3094) *
              C31150 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C3094 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C30931) *
              C31140 +
          (((C15018 + C15017) * C18918 + (C15016 + C15015) * C18916 +
            (C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
             C13223 * C6437) *
                C18919 +
            (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
             C13223 * C6439) *
                C18917) *
               C31012 * C30931 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C2332 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C3094 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31155 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31152 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C31143 -
           ((C20973 + C20974) * C18917 + (C20975 + C20976) * C18919 +
            (C20972 + C20971) * C18916 + (C20970 + C20969) * C18918) *
               C31012 * C31126) *
              C2332 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C31152 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C31155 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C31143 +
           ((C15870 + C15869) * C18918 + (C15868 + C15867) * C18916 +
            (C13226 * C6279 + C13222 * C6283 + C13227 * C10682 +
             C13223 * C10683) *
                C18919 +
            (C13226 * C6284 + C13222 * C6288 + C13227 * C10684 +
             C13223 * C10685) *
                C18917) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C30927 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30934 +
            ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
             (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
                C31012 * C3602) *
               C2332 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30934 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C30927 -
            ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
             (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
                C31012 * C3602) *
               C30889) *
              C31065 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30934 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C30927 -
            ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
             (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
                C31012 * C3602) *
               C2332 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C30927 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30934 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C18919 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C18917) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C2332 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C3094 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C2332 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C3094 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C31154 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C30931 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C3094) *
              C31150 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C3094 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C30931) *
              C31140 +
          (((C15018 + C15017) * C18918 + (C15016 + C15015) * C18916 +
            (C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
             C13223 * C6437) *
                C18919 +
            (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
             C13223 * C6439) *
                C18917) *
               C31012 * C30931 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C1284 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C1285 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C1286 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C30844 * C31120) *
              C31065 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C1285 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C1284 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C1286 +
           ((C14670 + C14669) * C18918 + (C14668 + C14667) * C18916 +
            (C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
             C13223 * C1547) *
                C18919 +
            (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
             C13223 * C1553) *
                C18917) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C31079 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C30889) *
              C554 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C30889 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C31079 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C30889) *
              C556 +
          (((C13731 + C13732) * C18918 + (C13733 + C13734) * C18916 +
            (C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                C18919 +
            (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                C18917) *
               C31012 * C30844 * C30889 -
           ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
                C18917 +
            (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
                C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C1664 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C1665 +
            ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
             (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
                C31012 * C31113) *
               C31079 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C1665 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C1664 -
            ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
             (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
                C31012 * C31113) *
               C30889) *
              C31065 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C1665 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C1664 -
            ((C13227 * C1850 + C13223 * C1862 + C13226 * C1851 +
              C13222 * C1863) *
                 C18917 +
             (C13227 * C1844 + C13223 * C1853 + C13226 * C1845 +
              C13222 * C1854) *
                 C18919 +
             (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
                C31012 * C31113) *
               C31079 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C1664 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C1665 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C18919 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C18917) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31080 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C1284 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C30931 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C31080) *
              C1285 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C31080 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C30931) *
              C1286 +
          (((C15018 + C15017) * C18918 + (C15016 + C15015) * C18916 +
            (C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
             C13223 * C6437) *
                C18919 +
            (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
             C13223 * C6439) *
                C18917) *
               C31012 * C30931 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C30889) *
              C258 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C31079 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C31080 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C2116 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C2117 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C2118 -
           ((C20973 + C20974) * C18917 + (C20975 + C20976) * C18919 +
            (C20972 + C20971) * C18916 + (C20970 + C20969) * C18918) *
               C31012 * C31126) *
              C31079 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C2117 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C2116 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C2118 +
           ((C15870 + C15869) * C18918 + (C15868 + C15867) * C18916 +
            (C13226 * C6279 + C13222 * C6283 + C13227 * C10682 +
             C13223 * C10683) *
                C18919 +
            (C13226 * C6284 + C13222 * C6288 + C13227 * C10684 +
             C13223 * C10685) *
                C18917) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                   C18918 +
               (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                   C18916 +
               (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
                   C18919 +
               (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
                   C18917) *
                  C31012 * C30844 * C30826 * C108 -
              ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
                   C18917 +
               (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
                   C18919 +
               (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                   C18916 +
               (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                   C18918) *
                  C31012 * C30844 * C30826 * C109 +
              ((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                   C18918 +
               (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                   C18916 +
               (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
                   C18919 +
               (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
                   C18917) *
                  C31012 * C30844 * C30826 * C110 -
              ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
                   C18917 +
               (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
                   C18919 +
               (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                   C18916 +
               (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                   C18918) *
                  C31012 * C30844 * C30826 * C111 +
              ((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
                   C18918 +
               (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
                   C18916 +
               (C13226 * C422 + C13222 * C441 + C13227 * C662 + C13223 * C663) *
                   C18919 +
               (C13226 * C440 + C13222 * C452 + C13227 * C664 + C13223 * C665) *
                   C18917) *
                  C31012 * C30844 * C30826 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13226 * C117 + C13222 * C124 + C13227 * C118 +
                 C13223 * C125) *
                    C18918 +
                (C13226 * C127 + C13222 * C138 + C13227 * C128 +
                 C13223 * C139) *
                    C18916 +
                (C13226 * C416 + C13222 * C429 + C13227 * C415 +
                 C13223 * C428) *
                    C18919 +
                (C13226 * C426 + C13222 * C446 + C13227 * C425 +
                 C13223 * C445) *
                    C18917) *
                   C31012 * C30844 * C31147 -
               ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
                (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                   C31012 * C30844 * C31135 +
               ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
                (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                   C31012 * C30844 * C31110) *
                  C258 +
              (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
                (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                   C31012 * C30844 * C31135 -
               ((C13227 * C424 + C13223 * C444 + C13226 * C425 +
                 C13222 * C445) *
                    C18917 +
                (C13227 * C414 + C13223 * C427 + C13226 * C415 +
                 C13222 * C428) *
                    C18919 +
                (C13227 * C129 + C13223 * C140 + C13226 * C128 +
                 C13222 * C139) *
                    C18916 +
                (C13227 * C119 + C13223 * C126 + C13226 * C118 +
                 C13222 * C125) *
                    C18918) *
                   C31012 * C30844 * C31147 -
               ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
                (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                   C31012 * C30844 * C31110) *
                  C259 +
              (((C13226 * C119 + C13222 * C126 + C13227 * C120 +
                 C13223 * C131) *
                    C18918 +
                (C13226 * C129 + C13222 * C140 + C13227 * C130 +
                 C13223 * C141) *
                    C18916 +
                (C13226 * C414 + C13222 * C427 + C13227 * C420 +
                 C13223 * C436) *
                    C18919 +
                (C13226 * C424 + C13222 * C444 + C13227 * C437 +
                 C13223 * C450) *
                    C18917) *
                   C31012 * C30844 * C31147 -
               ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
                (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                   C31012 * C30844 * C31135 +
               ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
                (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
                 C13223 * C1441) *
                    C18919 +
                (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
                 C13223 * C1443) *
                    C18917) *
                   C31012 * C30844 * C31110) *
                  C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31148 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31137 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C30826 * C258 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C31137 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C31148 -
           ((C13227 * C1850 + C13223 * C1862 + C13226 * C1851 +
             C13222 * C1863) *
                C18917 +
            (C13227 * C1844 + C13223 * C1853 + C13226 * C1845 +
             C13222 * C1854) *
                C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C31148 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C31137 +
           ((C19284 + C19283) * C18918 + (C19282 + C19281) * C18916 +
            (C13226 * C1844 + C13222 * C1853 + C13227 * C2120 +
             C13223 * C2121) *
                C18919 +
            (C13226 * C1850 + C13222 * C1862 + C13227 * C2122 +
             C13223 * C2123) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C942 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C943 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C943 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C942 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C942 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C943 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
              C31012 * C30844 * C1010 -
          ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
           (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
              C31012 * C30844 * C1011 +
          ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
           (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
              C31012 * C30844 * C1012 -
          ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
           (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
              C31012 * C30844 * C1013 +
          ((C14346 + C14345) * C18918 + (C14344 + C14343) * C18916 +
           (C13226 * C5570 + C13222 * C5575 + C13227 * C5872 + C13223 * C5873) *
               C18919 +
           (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 + C13223 * C5875) *
               C18917) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31148 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31137 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C942 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C31137 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C31148 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C31113) *
              C943 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C31148 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C31137 +
           ((C14528 + C14527) * C18918 + (C14526 + C14525) * C18916 +
            (C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
             C13223 * C6555) *
                C18919 +
            (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
             C13223 * C6557) *
                C18917) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C1664 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C1665 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31144 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C1665 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C1664 -
           ((C13227 * C1850 + C13223 * C1862 + C13226 * C1851 +
             C13222 * C1863) *
                C18917 +
            (C13227 * C1844 + C13223 * C1853 + C13226 * C1845 +
             C13222 * C1854) *
                C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C1664 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C1665 +
           ((C19284 + C19283) * C18918 + (C19282 + C19281) * C18916 +
            (C13226 * C1844 + C13222 * C1853 + C13227 * C2120 +
             C13223 * C2121) *
                C18919 +
            (C13226 * C1850 + C13222 * C1862 + C13227 * C2122 +
             C13223 * C2123) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C1664 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C1665 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C31147 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C1665 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C1664 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C31113) *
              C31135 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C1664 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C1665 +
           ((C14528 + C14527) * C18918 + (C14526 + C14525) * C18916 +
            (C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
             C13223 * C6555) *
                C18919 +
            (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
             C13223 * C6557) *
                C18917) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
              C31012 * C1839 -
          ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
           (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
              C31012 * C1840 +
          ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
           (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
              C31012 * C1841 -
          ((C20973 + C20974) * C18917 + (C20975 + C20976) * C18919 +
           (C20972 + C20971) * C18916 + (C20970 + C20969) * C18918) *
              C31012 * C1842 +
          ((C20976 + C20975) * C18918 + (C20974 + C20973) * C18916 +
           (C13226 * C10516 + C13222 * C10519 + C13227 * C10790 +
            C13223 * C10791) *
               C18919 +
           (C13226 * C10518 + C13222 * C10522 + C13227 * C10792 +
            C13223 * C10793) *
               C18917) *
              C31012 * C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C942 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C943 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C31080 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C942 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C943 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31080 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C30826 * C554 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C30931 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C31080 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C30931) *
              C30826 * C556 +
          (((C19553 + C19554) * C18918 + (C19555 + C19556) * C18916 +
            (C13226 * C421 + C13222 * C439 + C13227 * C423 + C13223 * C442) *
                C18919 +
            (C13226 * C438 + C13222 * C451 + C13227 * C443 + C13223 * C453) *
                C18917) *
               C31012 * C30931 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C2116 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C2117 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C2118 -
           ((C20973 + C20974) * C18917 + (C20975 + C20976) * C18919 +
            (C20972 + C20971) * C18916 + (C20970 + C20969) * C18918) *
               C31012 * C31126) *
              C30826 * C31065 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C2117 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C2116 -
           ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C2118 +
           ((C21312 + C21311) * C18918 + (C21310 + C21309) * C18916 +
            (C13226 * C1848 + C13222 * C1857 + C13227 * C1849 +
             C13223 * C1858) *
                C18919 +
            (C13226 * C1860 + C13222 * C1866 + C13227 * C1861 +
             C13223 * C1867) *
                C18917) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
                C18919 +
            (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C31135 -
           ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
                C18917 +
            (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
                C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31147 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
                C18919 +
            (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
               C18919 +
           (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
               C18917) *
              C31012 * C30844 * C30826 * C108 -
          ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
               C18917 +
           (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
               C18919 +
           (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
               C18916 +
           (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
               C18918) *
              C31012 * C30844 * C30826 * C109 +
          ((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
               C18918 +
           (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
               C18916 +
           (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
               C18919 +
           (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
               C18917) *
              C31012 * C30844 * C30826 * C110 -
          ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
               C18917 +
           (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
               C18919 +
           (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
               C18916 +
           (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
               C18918) *
              C31012 * C30844 * C30826 * C111 +
          ((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
               C18918 +
           (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
               C18916 +
           (C13226 * C422 + C13222 * C441 + C13227 * C662 + C13223 * C663) *
               C18919 +
           (C13226 * C440 + C13222 * C452 + C13227 * C664 + C13223 * C665) *
               C18917) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C942 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C943 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C943 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C942 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C942 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C943 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
              C31012 * C30844 * C1010 -
          ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
           (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
              C31012 * C30844 * C1011 +
          ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
           (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
              C31012 * C30844 * C1012 -
          ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
           (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
              C31012 * C30844 * C1013 +
          ((C14346 + C14345) * C18918 + (C14344 + C14343) * C18916 +
           (C13226 * C5570 + C13222 * C5575 + C13227 * C5872 + C13223 * C5873) *
               C18919 +
           (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 + C13223 * C5875) *
               C18917) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C1664 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C1665 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31144 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C1665 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C1664 -
           ((C13227 * C1850 + C13223 * C1862 + C13226 * C1851 +
             C13222 * C1863) *
                C18917 +
            (C13227 * C1844 + C13223 * C1853 + C13226 * C1845 +
             C13222 * C1854) *
                C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C1664 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C1665 +
           ((C19284 + C19283) * C18918 + (C19282 + C19281) * C18916 +
            (C13226 * C1844 + C13222 * C1853 + C13227 * C2120 +
             C13223 * C2121) *
                C18919 +
            (C13226 * C1850 + C13222 * C1862 + C13227 * C2122 +
             C13223 * C2123) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C1664 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C1665 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C31147 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C1665 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C1664 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C31113) *
              C31135 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C1664 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C1665 +
           ((C14528 + C14527) * C18918 + (C14526 + C14525) * C18916 +
            (C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
             C13223 * C6555) *
                C18919 +
            (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
             C13223 * C6557) *
                C18917) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C30889) *
              C30803 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C31079 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C30812 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C3094 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C3094) *
               C30889) *
              C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C30927 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30934 +
            ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
             (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
                C31012 * C3602) *
               C31079 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30934 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C30927 -
            ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
             (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
                C31012 * C3602) *
               C30889) *
              C2440 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30934 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C30927 -
            ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
             (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
                C31012 * C3602) *
               C31079 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C30927 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30934 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2223 + C13222 * C2226 + C13227 * C2224 +
              C13223 * C2227) *
                 C18919 +
             (C13226 * C2229 + C13222 * C2232 + C13227 * C2230 +
              C13223 * C2233) *
                 C18917) *
                C31012 * C3602) *
               C30889) *
              C30809)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C31147 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C31135 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C3094 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C31147 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C31135 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C3094 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C30826 * C31153 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C30931 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C3094 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C30931) *
              C30826 * C31133 +
          (((C19553 + C19554) * C18918 + (C19555 + C19556) * C18916 +
            (C13226 * C421 + C13222 * C439 + C13227 * C423 + C13223 * C442) *
                C18919 +
            (C13226 * C438 + C13222 * C451 + C13227 * C443 + C13223 * C453) *
                C18917) *
               C31012 * C30931 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31155 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31152 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C31143 -
           ((C20973 + C20974) * C18917 + (C20975 + C20976) * C18919 +
            (C20972 + C20971) * C18916 + (C20970 + C20969) * C18918) *
               C31012 * C31126) *
              C30826 * C2440 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C31152 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C31155 -
           ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C31143 +
           ((C21312 + C21311) * C18918 + (C21310 + C21309) * C18916 +
            (C13226 * C1848 + C13222 * C1857 + C13227 * C1849 +
             C13223 * C1858) *
                C18919 +
            (C13226 * C1860 + C13222 * C1866 + C13227 * C1861 +
             C13223 * C1867) *
                C18917) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30927 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30934 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C20969 + C20970) * C18919 + (C20971 + C20972) * C18917) *
               C31012 * C3602) *
              C30826 * C30803 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C30934 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30927 -
           ((C21309 + C21310) * C18917 + (C21311 + C21312) * C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C3602) *
              C30826 * C30812 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30927 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C30934 +
           ((C19284 + C19283) * C18918 + (C19282 + C19281) * C18916 +
            (C13226 * C1844 + C13222 * C1853 + C13227 * C2120 +
             C13223 * C2121) *
                C18919 +
            (C13226 * C1850 + C13222 * C1862 + C13227 * C2122 +
             C13223 * C2123) *
                C18917) *
               C31012 * C3602) *
              C30826 * C2703)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C3094 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C30826 * C31153 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C30931 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C3094 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C30931) *
              C30826 * C31133 +
          (((C19553 + C19554) * C18918 + (C19555 + C19556) * C18916 +
            (C13226 * C421 + C13222 * C439 + C13227 * C423 + C13223 * C442) *
                C18919 +
            (C13226 * C438 + C13222 * C451 + C13227 * C443 + C13223 * C453) *
                C18917) *
               C31012 * C30931 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C3094 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C31147 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C3094) *
               C31135 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C3094 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C3094) *
               C31147 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C3094 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C31135 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C31079 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C30889) *
              C554 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C30889 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C31079 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C30889) *
              C556 +
          (((C13731 + C13732) * C18918 + (C13733 + C13734) * C18916 +
            (C13226 * C815 + C13222 * C824 + C13227 * C816 + C13223 * C825) *
                C18919 +
            (C13226 * C823 + C13222 * C830 + C13227 * C826 + C13223 * C831) *
                C18917) *
               C31012 * C30844 * C30889 -
           ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
                C18917 +
            (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
                C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C1284 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C1285 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C1286 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C30844 * C31120) *
              C31065 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C1285 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C1284 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C1286 +
           ((C14670 + C14669) * C18918 + (C14668 + C14667) * C18916 +
            (C13226 * C1543 + C13222 * C1546 + C13227 * C1544 +
             C13223 * C1547) *
                C18919 +
            (C13226 * C1549 + C13222 * C1552 + C13227 * C1550 +
             C13223 * C1553) *
                C18917) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C30889) *
              C258 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C31079 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                 C18918 +
             (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                 C18916 +
             (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
                C31012 * C31080 -
            ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
             (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
                C31012 * C30931) *
               C31079 +
           (((C14094 + C14093) * C18918 + (C14092 + C14091) * C18916 +
             (C13226 * C1150 + C13222 * C1162 + C13227 * C2014 +
              C13223 * C2015) *
                 C18919 +
             (C13226 * C1159 + C13222 * C1177 + C13227 * C2016 +
              C13223 * C2017) *
                 C18917) *
                C31012 * C30931 -
            ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
             (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31080 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C1284 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C30931 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C31080) *
              C1285 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C31080 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C30931) *
              C1286 +
          (((C15018 + C15017) * C18918 + (C15016 + C15015) * C18916 +
            (C13226 * C5569 + C13222 * C5573 + C13227 * C6436 +
             C13223 * C6437) *
                C18919 +
            (C13226 * C5572 + C13222 * C5578 + C13227 * C6438 +
             C13223 * C6439) *
                C18917) *
               C31012 * C30931 -
           ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
            (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
                C18919 +
            (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C31135 -
           ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
                C18917 +
            (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
                C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31147 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
                C18919 +
            (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
               C18919 +
           (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
               C18917) *
              C31012 * C30844 * C30826 * C108 -
          ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
               C18917 +
           (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
               C18919 +
           (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
               C18916 +
           (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
               C18918) *
              C31012 * C30844 * C30826 * C109 +
          ((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
               C18918 +
           (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
               C18916 +
           (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
               C18919 +
           (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
               C18917) *
              C31012 * C30844 * C30826 * C110 -
          ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
               C18917 +
           (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
               C18919 +
           (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
               C18916 +
           (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
               C18918) *
              C31012 * C30844 * C30826 * C111 +
          ((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
               C18918 +
           (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
               C18916 +
           (C13226 * C422 + C13222 * C441 + C13227 * C662 + C13223 * C663) *
               C18919 +
           (C13226 * C440 + C13222 * C452 + C13227 * C664 + C13223 * C665) *
               C18917) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31148 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31137 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C30826 * C258 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C31137 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C31148 -
           ((C13227 * C1850 + C13223 * C1862 + C13226 * C1851 +
             C13222 * C1863) *
                C18917 +
            (C13227 * C1844 + C13223 * C1853 + C13226 * C1845 +
             C13222 * C1854) *
                C18919 +
            (C19276 + C19275) * C18916 + (C19274 + C19273) * C18918) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C31148 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C31137 +
           ((C19284 + C19283) * C18918 + (C19282 + C19281) * C18916 +
            (C13226 * C1844 + C13222 * C1853 + C13227 * C2120 +
             C13223 * C2121) *
                C18919 +
            (C13226 * C1850 + C13222 * C1862 + C13227 * C2122 +
             C13223 * C2123) *
                C18917) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C942 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C943 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C943 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C942 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C942 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C943 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
              C31012 * C30844 * C1010 -
          ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
           (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
              C31012 * C30844 * C1011 +
          ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
           (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
              C31012 * C30844 * C1012 -
          ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
           (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
              C31012 * C30844 * C1013 +
          ((C14346 + C14345) * C18918 + (C14344 + C14343) * C18916 +
           (C13226 * C5570 + C13222 * C5575 + C13227 * C5872 + C13223 * C5873) *
               C18919 +
           (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 + C13223 * C5875) *
               C18917) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31148 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C31137 +
           ((C19268 + C19267) * C18918 + (C19266 + C19265) * C18916 +
            (C13226 * C1846 + C13222 * C1855 + C13227 * C1845 +
             C13223 * C1854) *
                C18919 +
            (C13226 * C1852 + C13222 * C1864 + C13227 * C1851 +
             C13223 * C1863) *
                C18917) *
               C31012 * C31113) *
              C942 +
          (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
            (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
               C31012 * C31137 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C31148 -
           ((C15867 + C15868) * C18917 + (C15869 + C15870) * C18919 +
            (C14520 + C14519) * C18916 + (C14518 + C14517) * C18918) *
               C31012 * C31113) *
              C943 +
          (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C31148 -
           ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
            (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
               C31012 * C31137 +
           ((C14528 + C14527) * C18918 + (C14526 + C14525) * C18916 +
            (C13226 * C6278 + C13222 * C6282 + C13227 * C6554 +
             C13223 * C6555) *
                C18919 +
            (C13226 * C6281 + C13222 * C6287 + C13227 * C6556 +
             C13223 * C6557) *
                C18917) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C31080 -
           ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
            (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
               C31012 * C30931) *
              C30826 * C554 +
          (((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
            (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
               C31012 * C30931 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C31080 -
           ((C19281 + C19282) * C18917 + (C19283 + C19284) * C18919 +
            (C19280 + C19279) * C18916 + (C19278 + C19277) * C18918) *
               C31012 * C30931) *
              C30826 * C556 +
          (((C19553 + C19554) * C18918 + (C19555 + C19556) * C18916 +
            (C13226 * C421 + C13222 * C439 + C13227 * C423 + C13223 * C442) *
                C18919 +
            (C13226 * C438 + C13222 * C451 + C13227 * C443 + C13223 * C453) *
                C18917) *
               C31012 * C30931 -
           ((C19556 + C19555) * C18917 + (C19554 + C19553) * C18919 +
            (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
                C18916 +
            (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
                C18918) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                 C18918 +
             (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                 C18916 +
             (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
                C31012 * C31080 -
            ((C19265 + C19266) * C18917 + (C19267 + C19268) * C18919 +
             (C19264 + C19263) * C18916 + (C19262 + C19261) * C18918) *
                C31012 * C30931) *
               C942 +
           (((C14086 + C14085) * C18918 + (C14084 + C14083) * C18916 +
             (C14517 + C14518) * C18919 + (C14519 + C14520) * C18917) *
                C31012 * C30931 -
            ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
             (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
                C31012 * C31080) *
               C943 +
           (((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
             (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
                C31012 * C31080 -
            ((C14525 + C14526) * C18917 + (C14527 + C14528) * C18919 +
             (C14524 + C14523) * C18916 + (C14522 + C14521) * C18918) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          ((((C19269 + C19270) * C18918 + (C19271 + C19272) * C18916 +
             (C19273 + C19274) * C18919 + (C19275 + C19276) * C18917) *
                C31012 * C30931 -
            ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
             (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                 C18916 +
             (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                 C18918) *
                C31012 * C31080) *
               C942 +
           (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
             (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
                C31012 * C31080 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14090 + C14089) * C18916 + (C14088 + C14087) * C18918) *
                C31012 * C30931) *
               C943 +
           (((C14876 + C14875) * C18918 + (C14874 + C14873) * C18916 +
             (C13226 * C1157 + C13222 * C1172 + C13227 * C1158 +
              C13223 * C1173) *
                 C18919 +
             (C13226 * C1175 + C13222 * C1184 + C13227 * C1176 +
              C13223 * C1185) *
                 C18917) *
                C31012 * C30931 -
            ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
             (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
               C18919 +
           (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
               C18917) *
              C31012 * C30844 * C30826 * C108 -
          ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
               C18917 +
           (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
               C18919 +
           (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
               C18916 +
           (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
               C18918) *
              C31012 * C30844 * C30826 * C109 +
          ((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
               C18918 +
           (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
               C18916 +
           (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
               C18919 +
           (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
               C18917) *
              C31012 * C30844 * C30826 * C110 -
          ((C13227 * C440 + C13223 * C452 + C13226 * C437 + C13222 * C450) *
               C18917 +
           (C13227 * C422 + C13223 * C441 + C13226 * C420 + C13222 * C436) *
               C18919 +
           (C13227 * C133 + C13223 * C142 + C13226 * C130 + C13222 * C141) *
               C18916 +
           (C13227 * C121 + C13223 * C132 + C13226 * C120 + C13222 * C131) *
               C18918) *
              C31012 * C30844 * C30826 * C111 +
          ((C13226 * C121 + C13222 * C132 + C13227 * C122 + C13223 * C135) *
               C18918 +
           (C13226 * C133 + C13222 * C142 + C13227 * C134 + C13223 * C143) *
               C18916 +
           (C13226 * C422 + C13222 * C441 + C13227 * C662 + C13223 * C663) *
               C18919 +
           (C13226 * C440 + C13222 * C452 + C13227 * C664 + C13223 * C665) *
               C18917) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C13226 * C416 + C13222 * C429 + C13227 * C415 + C13223 * C428) *
                C18919 +
            (C13226 * C426 + C13222 * C446 + C13227 * C425 + C13223 * C445) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C31135 -
           ((C13227 * C424 + C13223 * C444 + C13226 * C425 + C13222 * C445) *
                C18917 +
            (C13227 * C414 + C13223 * C427 + C13226 * C415 + C13222 * C428) *
                C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C31147 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C13226 * C414 + C13222 * C427 + C13227 * C420 + C13223 * C436) *
                C18919 +
            (C13226 * C424 + C13222 * C444 + C13227 * C437 + C13223 * C450) *
                C18917) *
               C31012 * C30844 * C31147 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C31135 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
                C18918 +
            (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
                C18916 +
            (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
               C31012 * C30844 * C942 -
           ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
            (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
               C31012 * C30844 * C943 +
           ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
            (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C13431 + C13432) * C18918 + (C13433 + C13434) * C18916 +
            (C14087 + C14088) * C18919 + (C14089 + C14090) * C18917) *
               C31012 * C30844 * C943 -
           ((C19272 + C19271) * C18917 + (C19270 + C19269) * C18919 +
            (C13227 * C129 + C13223 * C140 + C13226 * C128 + C13222 * C139) *
                C18916 +
            (C13227 * C119 + C13223 * C126 + C13226 * C118 + C13222 * C125) *
                C18918) *
               C31012 * C30844 * C942 -
           ((C14873 + C14874) * C18917 + (C14875 + C14876) * C18919 +
            (C13438 + C13437) * C18916 + (C13436 + C13435) * C18918) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C13226 * C119 + C13222 * C126 + C13227 * C120 + C13223 * C131) *
                C18918 +
            (C13226 * C129 + C13222 * C140 + C13227 * C130 + C13223 * C141) *
                C18916 +
            (C19277 + C19278) * C18919 + (C19279 + C19280) * C18917) *
               C31012 * C30844 * C942 -
           ((C14091 + C14092) * C18917 + (C14093 + C14094) * C18919 +
            (C13442 + C13441) * C18916 + (C13440 + C13439) * C18918) *
               C31012 * C30844 * C943 +
           ((C13446 + C13445) * C18918 + (C13444 + C13443) * C18916 +
            (C13226 * C1153 + C13222 * C1168 + C13227 * C1440 +
             C13223 * C1441) *
                C18919 +
            (C13226 * C1165 + C13222 * C1180 + C13227 * C1442 +
             C13223 * C1443) *
                C18917) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C117 + C13222 * C124 + C13227 * C118 + C13223 * C125) *
               C18918 +
           (C13226 * C127 + C13222 * C138 + C13227 * C128 + C13223 * C139) *
               C18916 +
           (C19261 + C19262) * C18919 + (C19263 + C19264) * C18917) *
              C31012 * C30844 * C1010 -
          ((C14083 + C14084) * C18917 + (C14085 + C14086) * C18919 +
           (C13426 + C13425) * C18916 + (C13424 + C13423) * C18918) *
              C31012 * C30844 * C1011 +
          ((C13430 + C13429) * C18918 + (C13428 + C13427) * C18916 +
           (C14521 + C14522) * C18919 + (C14523 + C14524) * C18917) *
              C31012 * C30844 * C1012 -
          ((C15015 + C15016) * C18917 + (C15017 + C15018) * C18919 +
           (C14342 + C14341) * C18916 + (C14340 + C14339) * C18918) *
              C31012 * C30844 * C1013 +
          ((C14346 + C14345) * C18918 + (C14344 + C14343) * C18916 +
           (C13226 * C5570 + C13222 * C5575 + C13227 * C5872 + C13223 * C5873) *
               C18919 +
           (C13226 * C5574 + C13222 * C5579 + C13227 * C5874 + C13223 * C5875) *
               C18917) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C30885 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30892 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C2700) *
              C30803 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30892 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C30885 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C2700) *
              C30812 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C30885 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30892 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C2700) *
              C2703)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C30885 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30892 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C2700) *
              C30803 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30892 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C30885 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C2700) *
              C30812 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C30885 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30892 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C2700) *
              C2703)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C30885 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C30892 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C2700) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C30885 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30892 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C31080) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C30885 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30892 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C2700) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C30885 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30892 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31154 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31150 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31140 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C2440 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31150 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31154 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31140 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C31153 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C31133 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31148 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C31137 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C31113) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C31137 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31148 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C31113) *
               C30889) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C31137 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31148 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C31113) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31148 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C31137 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C2332 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C31153 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C2332) *
              C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C2332 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C31133 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31154 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C31150 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C31140 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C2440 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C31150 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31154 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31140 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31148 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C31137 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C31113) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C31137 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31148 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C31113) *
               C30889) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C31137 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31148 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C31113) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31148 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C31137 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                       C115 * C119 + C103 * C126) *
                          C116 +
                      (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                       C115 * C129 + C103 * C140) *
                          C31023) *
                         C31012 * C31080 -
                     ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                       C113 * C426 + C101 * C446) *
                          C31023 +
                      (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                       C113 * C416 + C101 * C429) *
                          C116) *
                         C31012 * C30931) *
                        C2332 +
                    (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                       C115 * C814 + C103 * C819) *
                          C116 +
                      (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                       C115 * C822 + C103 * C829) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                       C113 * C273 + C101 * C293) *
                          C31023 +
                      (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                       C113 * C263 + C101 * C276) *
                          C116) *
                         C31012 * C31080) *
                        C30889) *
                       C30803 +
                   ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                       C115 * C420 + C103 * C436) *
                          C116 +
                      (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                       C115 * C437 + C103 * C450) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31023 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C116) *
                         C31012 * C31080) *
                        C2332 +
                    (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                       C115 * C267 + C103 * C283) *
                          C116 +
                      (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                       C115 * C284 + C103 * C297) *
                          C31023) *
                         C31012 * C31080 -
                     ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                       C113 * C821 + C101 * C828) *
                          C31023 +
                      (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                       C113 * C813 + C101 * C818) *
                          C116) *
                         C31012 * C30931) *
                        C30889) *
                       C30812 +
                   ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                       C115 * C121 + C103 * C132) *
                          C116 +
                      (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                       C115 * C133 + C103 * C142) *
                          C31023) *
                         C31012 * C31080 -
                     ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                       C113 * C424 + C101 * C444) *
                          C31023 +
                      (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                       C113 * C414 + C101 * C427) *
                          C116) *
                         C31012 * C30931) *
                        C2332 +
                    (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                       C115 * C816 + C103 * C825) *
                          C116 +
                      (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                       C115 * C826 + C103 * C831) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                       C113 * C271 + C101 * C291) *
                          C31023 +
                      (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                       C113 * C261 + C101 * C274) *
                          C116) *
                         C31012 * C31080) *
                        C30889) *
                       C2703)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C4559 * C117 + C30772 * C124) * C116 +
                       (C4559 * C127 + C30772 * C138) * C31023) *
                          C4556 +
                      (C4725 + C4726) * C4557 + C4743 * C4558) *
                         C31080 -
                     (C5582 * C4558 + (C5252 + C5253) * C4557 +
                      ((C4559 * C426 + C30772 * C446) * C31023 +
                       (C4559 * C416 + C30772 * C429) * C116) *
                          C4556) *
                         C30931) *
                        C2332 +
                    (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                      C5988 * C4558) *
                         C30931 -
                     (C5442 * C4558 + (C4728 + C4727) * C4557 +
                      (C4726 + C4725) * C4556) *
                         C31080) *
                        C30889) *
                       C30803 +
                   (((((C4559 * C415 + C30772 * C428) * C116 +
                       (C4559 * C425 + C30772 * C445) * C31023) *
                          C4556 +
                      (C5254 + C5255) * C4557 + C5877 * C4558) *
                         C30931 -
                     (C4744 * C4558 + (C4732 + C4731) * C4557 +
                      ((C4559 * C128 + C30772 * C139) * C31023 +
                       (C4559 * C118 + C30772 * C125) * C116) *
                          C4556) *
                         C31080) *
                        C2332 +
                    (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                      C5718 * C4558) *
                         C31080 -
                     ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                      (C5255 + C5254) * C4556) *
                         C30931) *
                        C30889) *
                       C30812 +
                   (((((C4559 * C119 + C30772 * C126) * C116 +
                       (C4559 * C129 + C30772 * C140) * C31023) *
                          C4556 +
                      (C4737 + C4738) * C4557 + C4745 * C4558) *
                         C31080 -
                     ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                      ((C4559 * C424 + C30772 * C444) * C31023 +
                       (C4559 * C414 + C30772 * C427) * C116) *
                          C4556) *
                         C30931) *
                        C2332 +
                    (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
                      ((C4559 * C1544 + C30772 * C1547) * C116 +
                       (C4559 * C1550 + C30772 * C1553) * C31023) *
                          C4558) *
                         C30931 -
                     ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
                      (C4738 + C4737) * C4556) *
                         C31080) *
                        C30889) *
                       C2703)) /
                     (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C31153 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C2332) *
              C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C2332 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C31133 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31154 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31150 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31140 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C2440 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31150 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31154 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31140 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C2332 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C31153 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C2332) *
              C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C2332 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C31133 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C2332) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31154 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C31150 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C31140 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C2440 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C31150 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31154 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31140 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C30885 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C30892 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C2700) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C30885 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30892 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C3094) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C30885 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30892 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C2700) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C30885 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30892 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C2700) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30927 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30934 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C3602) *
              C30885 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30934 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30927 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C3602) *
              C30892 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30927 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30934 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C3602) *
              C2700) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30927 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30934 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C3602) *
              C30885 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30934 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30927 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C3602) *
              C30892 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30927 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30934 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C3602) *
              C2700) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C31154 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C3094) *
              C31150 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C31140 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31155 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31152 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31143 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C2332 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C31152 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31155 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31143 +
           ((C113 * C2222 + C101 * C2225 + C114 * C2223 + C102 * C2226 +
             C115 * C2224 + C103 * C2227) *
                C116 +
            (C113 * C2228 + C101 * C2231 + C114 * C2229 + C102 * C2232 +
             C115 * C2230 + C103 * C2233) *
                C31023) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30889) *
              C31144 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C31131 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C3094 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C31154 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C3094) *
              C31150 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C31140 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31155 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31152 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31143 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C2332 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C31152 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31155 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31143 +
           ((C6676 + C6675) * C4556 + (C6674 + C6673) * C4557 +
            ((C4559 * C6656 + C30772 * C6657) * C116 +
             (C4559 * C6658 + C30772 * C6659) * C31023) *
                C4558) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[108] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                       C115 * C119 + C103 * C126) *
                          C116 +
                      (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                       C115 * C129 + C103 * C140) *
                          C31023) *
                         C31012 * C30927 -
                     ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                       C113 * C426 + C101 * C446) *
                          C31023 +
                      (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                       C113 * C416 + C101 * C429) *
                          C116) *
                         C31012 * C30934 +
                     ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                       C115 * C419 + C103 * C432) *
                          C116 +
                      (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                       C115 * C435 + C103 * C449) *
                          C31023) *
                         C31012 * C3602) *
                        C2332 +
                    (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                       C115 * C814 + C103 * C819) *
                          C116 +
                      (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                       C115 * C822 + C103 * C829) *
                          C31023) *
                         C31012 * C30934 -
                     ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                       C113 * C273 + C101 * C293) *
                          C31023 +
                      (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                       C113 * C263 + C101 * C276) *
                          C116) *
                         C31012 * C30927 -
                     ((C115 * C1159 + C103 * C1177 + C114 * C1160 +
                       C102 * C1178 + C113 * C1161 + C101 * C1179) *
                          C31023 +
                      (C115 * C1150 + C103 * C1162 + C114 * C1151 +
                       C102 * C1163 + C113 * C1152 + C101 * C1164) *
                          C116) *
                         C31012 * C3602) *
                        C30889) *
                       C31065 +
                   ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                       C115 * C420 + C103 * C436) *
                          C116 +
                      (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                       C115 * C437 + C103 * C450) *
                          C31023) *
                         C31012 * C30934 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31023 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C116) *
                         C31012 * C30927 -
                     ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                       C113 * C434 + C101 * C448) *
                          C31023 +
                      (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                       C113 * C418 + C101 * C431) *
                          C116) *
                         C31012 * C3602) *
                        C2332 +
                    (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                       C115 * C267 + C103 * C283) *
                          C116 +
                      (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                       C115 * C284 + C103 * C297) *
                          C31023) *
                         C31012 * C30927 -
                     ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                       C113 * C821 + C101 * C828) *
                          C31023 +
                      (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                       C113 * C813 + C101 * C818) *
                          C116) *
                         C31012 * C30934 +
                     ((C113 * C1151 + C101 * C1163 + C114 * C1150 +
                       C102 * C1162 + C115 * C2014 + C103 * C2015) *
                          C116 +
                      (C113 * C1160 + C101 * C1178 + C114 * C1159 +
                       C102 * C1177 + C115 * C2016 + C103 * C2017) *
                          C31023) *
                         C31012 * C3602) *
                        C30889) *
                       C30809)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C4559 * C117 + C30772 * C124) * C116 +
                       (C4559 * C127 + C30772 * C138) * C31023) *
                          C4556 +
                      (C4725 + C4726) * C4557 + C4743 * C4558) *
                         C30927 -
                     (C5582 * C4558 + (C5252 + C5253) * C4557 +
                      ((C4559 * C426 + C30772 * C446) * C31023 +
                       (C4559 * C416 + C30772 * C429) * C116) *
                          C4556) *
                         C30934 +
                     (((C4559 * C417 + C30772 * C430) * C116 +
                       (C4559 * C433 + C30772 * C447) * C31023) *
                          C4556 +
                      (C5607 + C5608) * C4557 + C5615 * C4558) *
                         C3602) *
                        C2332 +
                    (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                      C5988 * C4558) *
                         C30934 -
                     (C5442 * C4558 + (C4728 + C4727) * C4557 +
                      (C4726 + C4725) * C4556) *
                         C30927 -
                     ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
                      (C5608 + C5607) * C4556) *
                         C3602) *
                        C30889) *
                       C31065 +
                   (((((C4559 * C415 + C30772 * C428) * C116 +
                       (C4559 * C425 + C30772 * C445) * C31023) *
                          C4556 +
                      (C5254 + C5255) * C4557 + C5877 * C4558) *
                         C30934 -
                     (C4744 * C4558 + (C4732 + C4731) * C4557 +
                      ((C4559 * C128 + C30772 * C139) * C31023 +
                       (C4559 * C118 + C30772 * C125) * C116) *
                          C4556) *
                         C30927 -
                     ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
                      ((C4559 * C434 + C30772 * C448) * C31023 +
                       (C4559 * C418 + C30772 * C431) * C116) *
                          C4556) *
                         C3602) *
                        C2332 +
                    (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                      C5718 * C4558) *
                         C30927 -
                     ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                      (C5255 + C5254) * C4556) *
                         C30934 +
                     ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
                      ((C4559 * C6436 + C30772 * C6437) * C116 +
                       (C4559 * C6438 + C30772 * C6439) * C31023) *
                          C4558) *
                         C3602) *
                        C30889) *
                       C30809)) /
                     (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31144 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C2332 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C31131 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C2332 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C31154 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C3094) *
              C31150 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C31140 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C30889) *
              C31144 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C2332 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C31131 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C3094 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C2332 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C3094) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C31154 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C3094) *
              C31150 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C31140 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C3094) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C1284 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C1285 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C1286 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C31065 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C1285 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C1284 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C1286 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C554 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C556 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C1664 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C1665 +
            ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
              C115 * C419 + C103 * C432) *
                 C116 +
             (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
              C115 * C435 + C103 * C449) *
                 C31023) *
                C31012 * C31113) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C1665 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C1664 -
            ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
              C113 * C1161 + C101 * C1179) *
                 C31023 +
             (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
              C113 * C1152 + C101 * C1164) *
                 C116) *
                C31012 * C31113) *
               C30889) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C1665 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C1664 -
            ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
              C113 * C434 + C101 * C448) *
                 C31023 +
             (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
              C113 * C418 + C101 * C431) *
                 C116) *
                C31012 * C31113) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C1664 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C1665 +
            ((C113 * C1151 + C101 * C1163 + C114 * C1150 + C102 * C1162 +
              C115 * C2014 + C103 * C2015) *
                 C116 +
             (C113 * C1160 + C101 * C1178 + C114 * C1159 + C102 * C1177 +
              C115 * C2016 + C103 * C2017) *
                 C31023) *
                C31012 * C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31079 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C554 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31079) *
              C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31079 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C556 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C1284 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C1285 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C1286 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C31065 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C1285 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C1284 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C1286 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C1664 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C1665 +
            (((C4559 * C417 + C30772 * C430) * C116 +
              (C4559 * C433 + C30772 * C447) * C31023) *
                 C4556 +
             (C5607 + C5608) * C4557 + C5615 * C4558) *
                C31113) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C1665 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C1664 -
            ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
             (C5608 + C5607) * C4556) *
                C31113) *
               C30889) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C1665 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C1664 -
            ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
             ((C4559 * C434 + C30772 * C448) * C31023 +
              (C4559 * C418 + C30772 * C431) * C116) *
                 C4556) *
                C31113) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C1664 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C1665 +
            ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
             ((C4559 * C6436 + C30772 * C6437) * C116 +
              (C4559 * C6438 + C30772 * C6439) * C31023) *
                 C4558) *
                C31113) *
               C30889) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C1284 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31080) *
              C1285 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C1286 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C258 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C2116 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C2117 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C2118 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C31079 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C2117 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C2116 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C2118 +
           ((C113 * C2222 + C101 * C2225 + C114 * C2223 + C102 * C2226 +
             C115 * C2224 + C103 * C2227) *
                C116 +
            (C113 * C2228 + C101 * C2231 + C114 * C2229 + C102 * C2232 +
             C115 * C2230 + C103 * C2233) *
                C31023) *
               C31012 * C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            ((C5250 + C5251) * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             ((C4559 * C1542 + C30772 * C1545) * C116 +
              (C4559 * C1548 + C30772 * C1551) * C31023) *
                 C4558) *
                C30931 -
            ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30889) *
              C258 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + (C5256 + C5257) * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             (C4735 + C4736) * C4558) *
                C31080 -
            (((C4559 * C1549 + C30772 * C1552) * C31023 +
              (C4559 * C1543 + C30772 * C1546) * C116) *
                 C4558 +
             (C5257 + C5256) * C4557 + (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C259 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C31080 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C1284 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31080) *
              C1285 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C1286 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C2116 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C2117 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C2118 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C31079 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C2117 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C2116 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C2118 +
           ((C6676 + C6675) * C4556 + (C6674 + C6673) * C4557 +
            ((C4559 * C6656 + C30772 * C6657) * C116 +
             (C4559 * C6658 + C30772 * C6659) * C31023) *
                C4558) *
               C31126) *
              C30889) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                C115 * C119 + C103 * C126) *
                   C116 +
               (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                C115 * C129 + C103 * C140) *
                   C31023) *
                  C31012 * C30844 * C30826 * C108 -
              ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                C113 * C128 + C101 * C139) *
                   C31023 +
               (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                C113 * C118 + C101 * C125) *
                   C116) *
                  C31012 * C30844 * C30826 * C109 +
              ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                C115 * C121 + C103 * C132) *
                   C116 +
               (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                C115 * C133 + C103 * C142) *
                   C31023) *
                  C31012 * C30844 * C30826 * C110 -
              ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
                C113 * C130 + C101 * C141) *
                   C31023 +
               (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
                C113 * C120 + C101 * C131) *
                   C116) *
                  C31012 * C30844 * C30826 * C111 +
              ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
                C115 * C123 + C103 * C136) *
                   C116 +
               (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
                C115 * C137 + C103 * C144) *
                   C31023) *
                  C31012 * C30844 * C30826 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                 C115 * C119 + C103 * C126) *
                    C116 +
                (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                 C115 * C129 + C103 * C140) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                 C113 * C273 + C101 * C293) *
                    C31023 +
                (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                 C113 * C263 + C101 * C276) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
                 C115 * C266 + C103 * C279) *
                    C116 +
                (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
                 C115 * C282 + C103 * C296) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C258 +
              (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                 C115 * C267 + C103 * C283) *
                    C116 +
                (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                 C115 * C284 + C103 * C297) *
                    C31023) *
                   C31012 * C30844 * C31135 -
               ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                 C113 * C128 + C101 * C139) *
                    C31023 +
                (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                 C113 * C118 + C101 * C125) *
                    C116) *
                   C31012 * C30844 * C31147 -
               ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
                 C113 * C281 + C101 * C295) *
                    C31023 +
                (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
                 C113 * C265 + C101 * C278) *
                    C116) *
                   C31012 * C30844 * C31110) *
                  C259 +
              (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                 C115 * C121 + C103 * C132) *
                    C116 +
                (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                 C115 * C133 + C103 * C142) *
                    C31023) *
                   C31012 * C30844 * C31147 -
               ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                 C113 * C271 + C101 * C291) *
                    C31023 +
                (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                 C113 * C261 + C101 * C274) *
                    C116) *
                   C31012 * C30844 * C31135 +
               ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
                 C115 * C270 + C103 * C289) *
                    C116 +
                (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
                 C115 * C290 + C103 * C300) *
                    C31023) *
                   C31012 * C30844 * C31110) *
                  C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C258 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31148 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C31137 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C942 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31148 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C943 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C31137 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31144 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C1664 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C1665 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C31147 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C1664 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C31135 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C1665 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C1839 -
          ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
            C113 * C426 + C101 * C446) *
               C31023 +
           (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
            C113 * C416 + C101 * C429) *
               C116) *
              C31012 * C1840 +
          ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
            C115 * C419 + C103 * C432) *
               C116 +
           (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
            C115 * C435 + C103 * C449) *
               C31023) *
              C31012 * C1841 -
          ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
            C113 * C1852 + C101 * C1864) *
               C31023 +
           (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
            C113 * C1846 + C101 * C1855) *
               C116) *
              C31012 * C1842 +
          ((C113 * C1847 + C101 * C1856 + C114 * C1848 + C102 * C1857 +
            C115 * C1849 + C103 * C1858) *
               C116 +
           (C113 * C1859 + C101 * C1865 + C114 * C1860 + C102 * C1866 +
            C115 * C1861 + C103 * C1867) *
               C31023) *
              C31012 * C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            ((C4559 * C1152 + C30772 * C1164) * C116 +
             (C4559 * C1161 + C30772 * C1179) * C31023) *
                C4557 +
            ((C4559 * C1156 + C30772 * C1171) * C116 +
             (C4559 * C1174 + C30772 * C1183) * C31023) *
                C4558) *
               C31113) *
              C30826 * C258 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C31137 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31148 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31148 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C942 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
            (C5611 + C5612) * C4558) *
               C31137 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31148 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C943 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31148 -
           (((C4559 * C5574 + C30772 * C5579) * C31023 +
             (C4559 * C5570 + C30772 * C5575) * C116) *
                C4558 +
            (C5612 + C5611) * C4557 + C5582 * C4556) *
               C31137 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C30826 * C31144 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C1665 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C1664 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C1664 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C31147 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C1665 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C1664 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C31135 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C1664 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C1665 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C1839 -
          (C5582 * C4558 + (C5252 + C5253) * C4557 +
           ((C4559 * C426 + C30772 * C446) * C31023 +
            (C4559 * C416 + C30772 * C429) * C116) *
               C4556) *
              C1840 +
          (((C4559 * C417 + C30772 * C430) * C116 +
            (C4559 * C433 + C30772 * C447) * C31023) *
               C4556 +
           (C5607 + C5608) * C4557 + C5615 * C4558) *
              C1841 -
          (((C4559 * C6281 + C30772 * C6287) * C31023 +
            (C4559 * C6278 + C30772 * C6282) * C116) *
               C4558 +
           ((C4559 * C2228 + C30772 * C2231) * C31023 +
            (C4559 * C2222 + C30772 * C2225) * C116) *
               C4557 +
           ((C4559 * C1852 + C30772 * C1864) * C31023 +
            (C4559 * C1846 + C30772 * C1855) * C116) *
               C4556) *
              C1842 +
          (((C4559 * C1847 + C30772 * C1856) * C116 +
            (C4559 * C1859 + C30772 * C1865) * C31023) *
               C4556 +
           ((C4559 * C6279 + C30772 * C6283) * C116 +
            (C4559 * C6284 + C30772 * C6288) * C31023) *
               C4557 +
           ((C4559 * C6280 + C30772 * C6285) * C116 +
            (C4559 * C6286 + C30772 * C6289) * C31023) *
               C4558) *
              C1843) *
         C30826 * C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C942 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C943 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C942 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C943 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C554 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C556 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C2116 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C2117 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C2118 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C30826 * C31065 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C2117 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C2116 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C2118 +
           ((C113 * C1845 + C101 * C1854 + C114 * C1844 + C102 * C1853 +
             C115 * C2120 + C103 * C2121) *
                C116 +
            (C113 * C1851 + C101 * C1863 + C114 * C1850 + C102 * C1862 +
             C115 * C2122 + C103 * C2123) *
                C31023) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C554 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31080) *
              C30826 * C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31080 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C556 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C942 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             (C5611 + C5612) * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C943 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            (((C4559 * C5574 + C30772 * C5579) * C31023 +
              (C4559 * C5570 + C30772 * C5575) * C116) *
                 C4558 +
             (C5612 + C5611) * C4557 + C5582 * C4556) *
                C30931) *
               C31110) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C942 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C943 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C2116 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C2117 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C2118 -
           (((C4559 * C6281 + C30772 * C6287) * C31023 +
             (C4559 * C6278 + C30772 * C6282) * C116) *
                C4558 +
            ((C4559 * C2228 + C30772 * C2231) * C31023 +
             (C4559 * C2222 + C30772 * C2225) * C116) *
                C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C30826 * C31065 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C2117 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C2116 -
           ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C2118 +
           (((C4559 * C1845 + C30772 * C1854) * C116 +
             (C4559 * C1851 + C30772 * C1863) * C31023) *
                C4556 +
            ((C4559 * C2223 + C30772 * C2226) * C116 +
             (C4559 * C2229 + C30772 * C2232) * C31023) *
                C4557 +
            ((C4559 * C6554 + C30772 * C6555) * C116 +
             (C4559 * C6556 + C30772 * C6557) * C31023) *
                C4558) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31135 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31147 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C30826 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31023 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31012 * C30844 * C30826 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31023) *
              C31012 * C30844 * C30826 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31023 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31012 * C30844 * C30826 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31023) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31144 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C1664 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C1665 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C1665 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C31147 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C1665 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C1664 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C31135 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C1664 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C1665 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C30826 * C31144 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C1665 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C1664 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C1664 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C1664 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C1665 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C31147 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C1665 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C1664 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C31135 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C1664 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C1665 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[115] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                       C115 * C119 + C103 * C126) *
                          C116 +
                      (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                       C115 * C129 + C103 * C140) *
                          C31023) *
                         C31012 * C3094 -
                     ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                       C113 * C426 + C101 * C446) *
                          C31023 +
                      (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                       C113 * C416 + C101 * C429) *
                          C116) *
                         C31012 * C30931) *
                        C31079 +
                    (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                       C115 * C814 + C103 * C819) *
                          C116 +
                      (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                       C115 * C822 + C103 * C829) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                       C113 * C273 + C101 * C293) *
                          C31023 +
                      (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                       C113 * C263 + C101 * C276) *
                          C116) *
                         C31012 * C3094) *
                        C30889) *
                       C30803 +
                   ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                       C115 * C420 + C103 * C436) *
                          C116 +
                      (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                       C115 * C437 + C103 * C450) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31023 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C116) *
                         C31012 * C3094) *
                        C31079 +
                    (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                       C115 * C267 + C103 * C283) *
                          C116 +
                      (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                       C115 * C284 + C103 * C297) *
                          C31023) *
                         C31012 * C3094 -
                     ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                       C113 * C821 + C101 * C828) *
                          C31023 +
                      (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                       C113 * C813 + C101 * C818) *
                          C116) *
                         C31012 * C30931) *
                        C30889) *
                       C30812 +
                   ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                       C115 * C121 + C103 * C132) *
                          C116 +
                      (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                       C115 * C133 + C103 * C142) *
                          C31023) *
                         C31012 * C3094 -
                     ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                       C113 * C424 + C101 * C444) *
                          C31023 +
                      (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                       C113 * C414 + C101 * C427) *
                          C116) *
                         C31012 * C30931) *
                        C31079 +
                    (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
                       C115 * C816 + C103 * C825) *
                          C116 +
                      (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
                       C115 * C826 + C103 * C831) *
                          C31023) *
                         C31012 * C30931 -
                     ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
                       C113 * C271 + C101 * C291) *
                          C31023 +
                      (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
                       C113 * C261 + C101 * C274) *
                          C116) *
                         C31012 * C3094) *
                        C30889) *
                       C2703)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C4559 * C117 + C30772 * C124) * C116 +
                       (C4559 * C127 + C30772 * C138) * C31023) *
                          C4556 +
                      (C4725 + C4726) * C4557 + C4743 * C4558) *
                         C3094 -
                     (C5582 * C4558 + (C5252 + C5253) * C4557 +
                      ((C4559 * C426 + C30772 * C446) * C31023 +
                       (C4559 * C416 + C30772 * C429) * C116) *
                          C4556) *
                         C30931) *
                        C31079 +
                    (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                      C5988 * C4558) *
                         C30931 -
                     (C5442 * C4558 + (C4728 + C4727) * C4557 +
                      (C4726 + C4725) * C4556) *
                         C3094) *
                        C30889) *
                       C30803 +
                   (((((C4559 * C415 + C30772 * C428) * C116 +
                       (C4559 * C425 + C30772 * C445) * C31023) *
                          C4556 +
                      (C5254 + C5255) * C4557 + C5877 * C4558) *
                         C30931 -
                     (C4744 * C4558 + (C4732 + C4731) * C4557 +
                      ((C4559 * C128 + C30772 * C139) * C31023 +
                       (C4559 * C118 + C30772 * C125) * C116) *
                          C4556) *
                         C3094) *
                        C31079 +
                    (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                      C5718 * C4558) *
                         C3094 -
                     ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                      (C5255 + C5254) * C4556) *
                         C30931) *
                        C30889) *
                       C30812 +
                   (((((C4559 * C119 + C30772 * C126) * C116 +
                       (C4559 * C129 + C30772 * C140) * C31023) *
                          C4556 +
                      (C4737 + C4738) * C4557 + C4745 * C4558) *
                         C3094 -
                     ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                      ((C4559 * C424 + C30772 * C444) * C31023 +
                       (C4559 * C414 + C30772 * C427) * C116) *
                          C4556) *
                         C30931) *
                        C31079 +
                    (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
                      ((C4559 * C1544 + C30772 * C1547) * C116 +
                       (C4559 * C1550 + C30772 * C1553) * C31023) *
                          C4558) *
                         C30931 -
                     ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
                      (C4738 + C4737) * C4556) *
                         C3094) *
                        C30889) *
                       C2703)) /
                     (p * q * std::sqrt(p + q));
    d2ee[116] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                       C115 * C119 + C103 * C126) *
                          C116 +
                      (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                       C115 * C129 + C103 * C140) *
                          C31023) *
                         C31012 * C30927 -
                     ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                       C113 * C426 + C101 * C446) *
                          C31023 +
                      (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                       C113 * C416 + C101 * C429) *
                          C116) *
                         C31012 * C30934 +
                     ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                       C115 * C419 + C103 * C432) *
                          C116 +
                      (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                       C115 * C435 + C103 * C449) *
                          C31023) *
                         C31012 * C3602) *
                        C31079 +
                    (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
                       C115 * C814 + C103 * C819) *
                          C116 +
                      (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
                       C115 * C822 + C103 * C829) *
                          C31023) *
                         C31012 * C30934 -
                     ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
                       C113 * C273 + C101 * C293) *
                          C31023 +
                      (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
                       C113 * C263 + C101 * C276) *
                          C116) *
                         C31012 * C30927 -
                     ((C115 * C1159 + C103 * C1177 + C114 * C1160 +
                       C102 * C1178 + C113 * C1161 + C101 * C1179) *
                          C31023 +
                      (C115 * C1150 + C103 * C1162 + C114 * C1151 +
                       C102 * C1163 + C113 * C1152 + C101 * C1164) *
                          C116) *
                         C31012 * C3602) *
                        C30889) *
                       C2440 +
                   ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                       C115 * C420 + C103 * C436) *
                          C116 +
                      (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                       C115 * C437 + C103 * C450) *
                          C31023) *
                         C31012 * C30934 -
                     ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                       C113 * C128 + C101 * C139) *
                          C31023 +
                      (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                       C113 * C118 + C101 * C125) *
                          C116) *
                         C31012 * C30927 -
                     ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                       C113 * C434 + C101 * C448) *
                          C31023 +
                      (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                       C113 * C418 + C101 * C431) *
                          C116) *
                         C31012 * C3602) *
                        C31079 +
                    (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
                       C115 * C267 + C103 * C283) *
                          C116 +
                      (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
                       C115 * C284 + C103 * C297) *
                          C31023) *
                         C31012 * C30927 -
                     ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
                       C113 * C821 + C101 * C828) *
                          C31023 +
                      (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
                       C113 * C813 + C101 * C818) *
                          C116) *
                         C31012 * C30934 +
                     ((C113 * C1151 + C101 * C1163 + C114 * C1150 +
                       C102 * C1162 + C115 * C2014 + C103 * C2015) *
                          C116 +
                      (C113 * C1160 + C101 * C1178 + C114 * C1159 +
                       C102 * C1177 + C115 * C2016 + C103 * C2017) *
                          C31023) *
                         C31012 * C3602) *
                        C30889) *
                       C30809)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((((C4559 * C117 + C30772 * C124) * C116 +
                       (C4559 * C127 + C30772 * C138) * C31023) *
                          C4556 +
                      (C4725 + C4726) * C4557 + C4743 * C4558) *
                         C30927 -
                     (C5582 * C4558 + (C5252 + C5253) * C4557 +
                      ((C4559 * C426 + C30772 * C446) * C31023 +
                       (C4559 * C416 + C30772 * C429) * C116) *
                          C4556) *
                         C30934 +
                     (((C4559 * C417 + C30772 * C430) * C116 +
                       (C4559 * C433 + C30772 * C447) * C31023) *
                          C4556 +
                      (C5607 + C5608) * C4557 + C5615 * C4558) *
                         C3602) *
                        C31079 +
                    (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
                      C5988 * C4558) *
                         C30934 -
                     (C5442 * C4558 + (C4728 + C4727) * C4557 +
                      (C4726 + C4725) * C4556) *
                         C30927 -
                     ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
                      (C5608 + C5607) * C4556) *
                         C3602) *
                        C30889) *
                       C2440 +
                   (((((C4559 * C415 + C30772 * C428) * C116 +
                       (C4559 * C425 + C30772 * C445) * C31023) *
                          C4556 +
                      (C5254 + C5255) * C4557 + C5877 * C4558) *
                         C30934 -
                     (C4744 * C4558 + (C4732 + C4731) * C4557 +
                      ((C4559 * C128 + C30772 * C139) * C31023 +
                       (C4559 * C118 + C30772 * C125) * C116) *
                          C4556) *
                         C30927 -
                     ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
                      ((C4559 * C434 + C30772 * C448) * C31023 +
                       (C4559 * C418 + C30772 * C431) * C116) *
                          C4556) *
                         C3602) *
                        C31079 +
                    (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
                      C5718 * C4558) *
                         C30927 -
                     ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
                      (C5255 + C5254) * C4556) *
                         C30934 +
                     ((C6456 + C6455) * C4556 + (C6454 + C6453) * C4557 +
                      ((C4559 * C6436 + C30772 * C6437) * C116 +
                       (C4559 * C6438 + C30772 * C6439) * C31023) *
                          C4558) *
                         C3602) *
                        C30889) *
                       C30809)) /
                     (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31147 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C31135 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C31147 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C31135 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C31153 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C31133 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31155 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31152 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31143 -
           ((C115 * C1850 + C103 * C1862 + C114 * C1851 + C102 * C1863 +
             C113 * C1852 + C101 * C1864) *
                C31023 +
            (C115 * C1844 + C103 * C1853 + C114 * C1845 + C102 * C1854 +
             C113 * C1846 + C101 * C1855) *
                C116) *
               C31012 * C31126) *
              C30826 * C2440 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C31152 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31155 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31143 +
           ((C113 * C1845 + C101 * C1854 + C114 * C1844 + C102 * C1853 +
             C115 * C2120 + C103 * C2121) *
                C116 +
            (C113 * C1851 + C101 * C1863 + C114 * C1850 + C102 * C1862 +
             C115 * C2122 + C103 * C2123) *
                C31023) *
               C31012 * C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C31153 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C3094) *
              C30826 * C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C3094 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C31133 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31147 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C31135 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C31110) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C31147 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C31135 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31155 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31152 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31143 -
           ((C6673 + C6674) * C4558 + (C6675 + C6676) * C4557 +
            ((C4559 * C1852 + C30772 * C1864) * C31023 +
             (C4559 * C1846 + C30772 * C1855) * C116) *
                C4556) *
               C31126) *
              C30826 * C2440 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C31152 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31155 -
           ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31143 +
           (((C4559 * C1845 + C30772 * C1854) * C116 +
             (C4559 * C1851 + C30772 * C1863) * C31023) *
                C4556 +
            ((C4559 * C2223 + C30772 * C2226) * C116 +
             (C4559 * C2229 + C30772 * C2232) * C31023) *
                C4557 +
            ((C4559 * C6554 + C30772 * C6555) * C116 +
             (C4559 * C6556 + C30772 * C6557) * C31023) *
                C4558) *
               C31126) *
              C30826 * C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
                      C115 * C119 + C103 * C126) *
                         C116 +
                     (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
                      C115 * C129 + C103 * C140) *
                         C31023) *
                        C31012 * C30927 -
                    ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
                      C113 * C426 + C101 * C446) *
                         C31023 +
                     (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
                      C113 * C416 + C101 * C429) *
                         C116) *
                        C31012 * C30934 +
                    ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
                      C115 * C419 + C103 * C432) *
                         C116 +
                     (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
                      C115 * C435 + C103 * C449) *
                         C31023) *
                        C31012 * C3602) *
                       C30826 * C30803 +
                   (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
                      C115 * C420 + C103 * C436) *
                         C116 +
                     (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
                      C115 * C437 + C103 * C450) *
                         C31023) *
                        C31012 * C30934 -
                    ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
                      C113 * C128 + C101 * C139) *
                         C31023 +
                     (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
                      C113 * C118 + C101 * C125) *
                         C116) *
                        C31012 * C30927 -
                    ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
                      C113 * C434 + C101 * C448) *
                         C31023 +
                     (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
                      C113 * C418 + C101 * C431) *
                         C116) *
                        C31012 * C3602) *
                       C30826 * C30812 +
                   (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
                      C115 * C121 + C103 * C132) *
                         C116 +
                     (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
                      C115 * C133 + C103 * C142) *
                         C31023) *
                        C31012 * C30927 -
                    ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
                      C113 * C424 + C101 * C444) *
                         C31023 +
                     (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
                      C113 * C414 + C101 * C427) *
                         C116) *
                        C31012 * C30934 +
                    ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
                      C115 * C423 + C103 * C442) *
                         C116 +
                     (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
                      C115 * C443 + C103 * C453) *
                         C31023) *
                        C31012 * C3602) *
                       C30826 * C2703)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C4559 * C117 + C30772 * C124) * C116 +
                      (C4559 * C127 + C30772 * C138) * C31023) *
                         C4556 +
                     (C4725 + C4726) * C4557 + C4743 * C4558) *
                        C30927 -
                    (C5582 * C4558 + (C5252 + C5253) * C4557 +
                     ((C4559 * C426 + C30772 * C446) * C31023 +
                      (C4559 * C416 + C30772 * C429) * C116) *
                         C4556) *
                        C30934 +
                    (((C4559 * C417 + C30772 * C430) * C116 +
                      (C4559 * C433 + C30772 * C447) * C31023) *
                         C4556 +
                     (C5607 + C5608) * C4557 + C5615 * C4558) *
                        C3602) *
                       C30826 * C30803 +
                   ((((C4559 * C415 + C30772 * C428) * C116 +
                      (C4559 * C425 + C30772 * C445) * C31023) *
                         C4556 +
                     (C5254 + C5255) * C4557 + C5877 * C4558) *
                        C30934 -
                    (C4744 * C4558 + (C4732 + C4731) * C4557 +
                     ((C4559 * C128 + C30772 * C139) * C31023 +
                      (C4559 * C118 + C30772 * C125) * C116) *
                         C4556) *
                        C30927 -
                    ((C6453 + C6454) * C4558 + (C6455 + C6456) * C4557 +
                     ((C4559 * C434 + C30772 * C448) * C31023 +
                      (C4559 * C418 + C30772 * C431) * C116) *
                         C4556) *
                        C3602) *
                       C30826 * C30812 +
                   ((((C4559 * C119 + C30772 * C126) * C116 +
                      (C4559 * C129 + C30772 * C140) * C31023) *
                         C4556 +
                     (C4737 + C4738) * C4557 + C4745 * C4558) *
                        C30927 -
                    ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
                     ((C4559 * C424 + C30772 * C444) * C31023 +
                      (C4559 * C414 + C30772 * C427) * C116) *
                         C4556) *
                        C30934 +
                    (((C4559 * C419 + C30772 * C432) * C116 +
                      (C4559 * C435 + C30772 * C449) * C31023) *
                         C4556 +
                     ((C4559 * C1150 + C30772 * C1162) * C116 +
                      (C4559 * C1159 + C30772 * C1177) * C31023) *
                         C4557 +
                     ((C4559 * C1158 + C30772 * C1173) * C116 +
                      (C4559 * C1176 + C30772 * C1185) * C31023) *
                         C4558) *
                        C3602) *
                       C30826 * C2703)) /
                     (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C31153 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C3094) *
              C30826 * C31146 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C3094 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C31133 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31147 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C3094) *
               C31135 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C2440 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C3094) *
               C31147 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C3094 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C31135 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C3094 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C31153 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            (C5254 + C5255) * C4557 + C5877 * C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C3094) *
              C30826 * C31146 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C3094 -
           ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C31133 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C3094) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C3094 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31147 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             C5988 * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C3094) *
               C31135 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C3094 -
            ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 +
             C5582 * C4556) *
                C30931) *
               C31110) *
              C2440 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C3094) *
               C31147 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C3094 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C31135 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C3094) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C30889) *
              C554 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31079) *
              C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31079 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C30889) *
              C556 +
          (((C113 * C267 + C101 * C283 + C114 * C269 + C102 * C288 +
             C115 * C558 + C103 * C559) *
                C116 +
            (C113 * C284 + C101 * C297 + C114 * C287 + C102 * C299 +
             C115 * C560 + C103 * C561) *
                C31023) *
               C31012 * C30844 * C30889 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C1284 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C1285 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C1286 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C30844 * C31120) *
              C31065 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C1285 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C1284 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C1286 +
           ((C113 * C1017 + C101 * C1026 + C114 * C1016 + C102 * C1025 +
             C115 * C1290 + C103 * C1291) *
                C116 +
            (C113 * C1023 + C101 * C1035 + C114 * C1022 + C102 * C1034 +
             C115 * C1292 + C103 * C1293) *
                C31023) *
               C31012 * C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31079 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C30889) *
              C554 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C30889 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31079) *
              C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31079 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C30889) *
              C556 +
          (((C4966 + C4967) * C4556 + (C4968 + C4969) * C4557 +
            ((C4559 * C1290 + C30772 * C1291) * C116 +
             (C4559 * C1292 + C30772 * C1293) * C31023) *
                C4558) *
               C30844 * C30889 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C30844 * C31079) *
              C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C1284 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C30844 * C1285 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
               C1286 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C30844 * C31120) *
              C31065 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 + C5718 * C4558) *
               C30844 * C1285 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C1284 -
           ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C1286 +
           (C5718 * C4556 + (C5726 + C5725) * C4557 +
            ((C4559 * C5713 + C30772 * C5714) * C116 +
             (C4559 * C5715 + C30772 * C5716) * C31023) *
                C4558) *
               C30844 * C31120) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C258 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C31079 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C30889) *
              C259 +
          ((((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
              C115 * C121 + C103 * C132) *
                 C116 +
             (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
              C115 * C133 + C103 * C142) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
              C113 * C424 + C101 * C444) *
                 C31023 +
             (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
              C113 * C414 + C101 * C427) *
                 C116) *
                C31012 * C30931) *
               C31079 +
           (((C113 * C814 + C101 * C819 + C114 * C815 + C102 * C824 +
              C115 * C816 + C103 * C825) *
                 C116 +
             (C113 * C822 + C101 * C829 + C114 * C823 + C102 * C830 +
              C115 * C826 + C103 * C831) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
              C113 * C271 + C101 * C291) *
                 C31023 +
             (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
              C113 * C261 + C101 * C274) *
                 C116) *
                C31012 * C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C1284 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31080) *
              C1285 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C30931) *
              C1286 +
          (((C113 * C1542 + C101 * C1545 + C114 * C1543 + C102 * C1546 +
             C115 * C1544 + C103 * C1547) *
                C116 +
            (C113 * C1548 + C101 * C1551 + C114 * C1549 + C102 * C1552 +
             C115 * C1550 + C103 * C1553) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
             C113 * C1024 + C101 * C1036) *
                C31023 +
            (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
             C113 * C1018 + C101 * C1027) *
                C116) *
               C31012 * C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            ((C5250 + C5251) * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             ((C4559 * C1542 + C30772 * C1545) * C116 +
              (C4559 * C1548 + C30772 * C1551) * C31023) *
                 C4558) *
                C30931 -
            ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C30889) *
              C258 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + (C5256 + C5257) * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C31079 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             (C4735 + C4736) * C4558) *
                C31080 -
            (((C4559 * C1549 + C30772 * C1552) * C31023 +
              (C4559 * C1543 + C30772 * C1546) * C116) *
                 C4558 +
             (C5257 + C5256) * C4557 + (C5255 + C5254) * C4556) *
                C30931) *
               C30889) *
              C259 +
          (((((C4559 * C119 + C30772 * C126) * C116 +
              (C4559 * C129 + C30772 * C140) * C31023) *
                 C4556 +
             (C4737 + C4738) * C4557 + C4745 * C4558) *
                C31080 -
            ((C5258 + C5259) * C4558 + (C5260 + C5261) * C4557 +
             ((C4559 * C424 + C30772 * C444) * C31023 +
              (C4559 * C414 + C30772 * C427) * C116) *
                 C4556) *
                C30931) *
               C31079 +
           (((C5261 + C5260) * C4556 + (C5259 + C5258) * C4557 +
             ((C4559 * C1544 + C30772 * C1547) * C116 +
              (C4559 * C1550 + C30772 * C1553) * C31023) *
                 C4558) *
                C30931 -
            ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
             (C4738 + C4737) * C4556) *
                C31080) *
               C30889) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C1284 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 + C5988 * C4558) *
               C30931 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31080) *
              C1285 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
           ((C5995 + C5996) * C4558 + (C5612 + C5611) * C4557 + C5582 * C4556) *
               C30931) *
              C1286 +
          ((C5988 * C4556 + (C5996 + C5995) * C4557 +
            ((C4559 * C5983 + C30772 * C5984) * C116 +
             (C4559 * C5985 + C30772 * C5986) * C31023) *
                C4558) *
               C30931 -
           ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
               C31080) *
              C31120) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31135 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31147 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C30826 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31023 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31012 * C30844 * C30826 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31023) *
              C31012 * C30844 * C30826 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31023 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31012 * C30844 * C30826 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31023) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C30826 * C258 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31148 -
           ((C115 * C438 + C103 * C451 + C114 * C435 + C102 * C449 +
             C113 * C434 + C101 * C448) *
                C31023 +
            (C115 * C421 + C103 * C439 + C114 * C419 + C102 * C432 +
             C113 * C418 + C101 * C431) *
                C116) *
               C31012 * C31113) *
              C30826 * C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C31137 +
           ((C113 * C419 + C101 * C432 + C114 * C421 + C102 * C439 +
             C115 * C423 + C103 * C442) *
                C116 +
            (C113 * C435 + C101 * C449 + C114 * C438 + C102 * C451 +
             C115 * C443 + C103 * C453) *
                C31023) *
               C31012 * C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C31137 +
           ((C113 * C417 + C101 * C430 + C114 * C418 + C102 * C431 +
             C115 * C419 + C103 * C432) *
                C116 +
            (C113 * C433 + C101 * C447 + C114 * C434 + C102 * C448 +
             C115 * C435 + C103 * C449) *
                C31023) *
               C31012 * C31113) *
              C942 +
          (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
             C115 * C814 + C103 * C819) *
                C116 +
            (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
             C115 * C822 + C103 * C829) *
                C31023) *
               C31012 * C31137 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C31148 -
           ((C115 * C1159 + C103 * C1177 + C114 * C1160 + C102 * C1178 +
             C113 * C1161 + C101 * C1179) *
                C31023 +
            (C115 * C1150 + C103 * C1162 + C114 * C1151 + C102 * C1163 +
             C113 * C1152 + C101 * C1164) *
                C116) *
               C31012 * C31113) *
              C943 +
          (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C31148 -
           ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
             C113 * C1167 + C101 * C1182) *
                C31023 +
            (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
             C113 * C1155 + C101 * C1170) *
                C116) *
               C31012 * C31137 +
           ((C113 * C1156 + C101 * C1171 + C114 * C1157 + C102 * C1172 +
             C115 * C1158 + C103 * C1173) *
                C116 +
            (C113 * C1174 + C101 * C1183 + C114 * C1175 + C102 * C1184 +
             C115 * C1176 + C103 * C1185) *
                C31023) *
               C31012 * C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            ((C4559 * C1152 + C30772 * C1164) * C116 +
             (C4559 * C1161 + C30772 * C1179) * C31023) *
                C4557 +
            ((C4559 * C1156 + C30772 * C1171) * C116 +
             (C4559 * C1174 + C30772 * C1183) * C31023) *
                C4558) *
               C31113) *
              C30826 * C258 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C31137 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31148 -
           (((C4559 * C1175 + C30772 * C1184) * C31023 +
             (C4559 * C1157 + C30772 * C1172) * C116) *
                C4558 +
            ((C4559 * C1160 + C30772 * C1178) * C31023 +
             (C4559 * C1151 + C30772 * C1163) * C116) *
                C4557 +
            ((C4559 * C434 + C30772 * C448) * C31023 +
             (C4559 * C418 + C30772 * C431) * C116) *
                C4556) *
               C31113) *
              C30826 * C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31148 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C419 + C30772 * C432) * C116 +
             (C4559 * C435 + C30772 * C449) * C31023) *
                C4556 +
            ((C4559 * C1150 + C30772 * C1162) * C116 +
             (C4559 * C1159 + C30772 * C1177) * C31023) *
                C4557 +
            ((C4559 * C1158 + C30772 * C1173) * C116 +
             (C4559 * C1176 + C30772 * C1185) * C31023) *
                C4558) *
               C31113) *
              C30826 * C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31148 -
           (C5582 * C4558 + (C5252 + C5253) * C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C31137 +
           (((C4559 * C417 + C30772 * C430) * C116 +
             (C4559 * C433 + C30772 * C447) * C31023) *
                C4556 +
            (C5607 + C5608) * C4557 + C5615 * C4558) *
               C31113) *
              C942 +
          (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
            (C5611 + C5612) * C4558) *
               C31137 -
           (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
               C31148 -
           ((C5613 + C5614) * C4558 + (C5610 + C5609) * C4557 +
            (C5608 + C5607) * C4556) *
               C31113) *
              C943 +
          ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31148 -
           (((C4559 * C5574 + C30772 * C5579) * C31023 +
             (C4559 * C5570 + C30772 * C5575) * C116) *
                C4558 +
            (C5612 + C5611) * C4557 + C5582 * C4556) *
               C31137 +
           (C5615 * C4556 + (C5614 + C5613) * C4557 +
            ((C4559 * C5571 + C30772 * C5576) * C116 +
             (C4559 * C5577 + C30772 * C5580) * C31023) *
                C4558) *
               C31113) *
              C31110) *
         C30798) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
             C113 * C426 + C101 * C446) *
                C31023 +
            (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
             C113 * C416 + C101 * C429) *
                C116) *
               C31012 * C30931) *
              C30826 * C554 +
          (((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
             C115 * C420 + C103 * C436) *
                C116 +
            (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
             C115 * C437 + C103 * C450) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C31080) *
              C30826 * C555 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C31080 -
           ((C115 * C440 + C103 * C452 + C114 * C437 + C102 * C450 +
             C113 * C424 + C101 * C444) *
                C31023 +
            (C115 * C422 + C103 * C441 + C114 * C420 + C102 * C436 +
             C113 * C414 + C101 * C427) *
                C116) *
               C31012 * C30931) *
              C30826 * C556 +
          (((C113 * C420 + C101 * C436 + C114 * C422 + C102 * C441 +
             C115 * C662 + C103 * C663) *
                C116 +
            (C113 * C437 + C101 * C450 + C114 * C440 + C102 * C452 +
             C115 * C664 + C103 * C665) *
                C31023) *
               C31012 * C30931 -
           ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
             C113 * C130 + C101 * C141) *
                C31023 +
            (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
             C113 * C120 + C101 * C131) *
                C116) *
               C31012 * C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
              C115 * C119 + C103 * C126) *
                 C116 +
             (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
              C115 * C129 + C103 * C140) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C424 + C103 * C444 + C114 * C425 + C102 * C445 +
              C113 * C426 + C101 * C446) *
                 C31023 +
             (C115 * C414 + C103 * C427 + C114 * C415 + C102 * C428 +
              C113 * C416 + C101 * C429) *
                 C116) *
                C31012 * C30931) *
               C942 +
           (((C113 * C812 + C101 * C817 + C114 * C813 + C102 * C818 +
              C115 * C814 + C103 * C819) *
                 C116 +
             (C113 * C820 + C101 * C827 + C114 * C821 + C102 * C828 +
              C115 * C822 + C103 * C829) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
              C113 * C273 + C101 * C293) *
                 C31023 +
             (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
              C113 * C263 + C101 * C276) *
                 C116) *
                C31012 * C31080) *
               C943 +
           (((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
              C115 * C266 + C103 * C279) *
                 C116 +
             (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
              C115 * C282 + C103 * C296) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C1165 + C103 * C1180 + C114 * C1166 + C102 * C1181 +
              C113 * C1167 + C101 * C1182) *
                 C31023 +
             (C115 * C1153 + C103 * C1168 + C114 * C1154 + C102 * C1169 +
              C113 * C1155 + C101 * C1170) *
                 C116) *
                C31012 * C30931) *
               C31110) *
              C31065 +
          ((((C113 * C415 + C101 * C428 + C114 * C414 + C102 * C427 +
              C115 * C420 + C103 * C436) *
                 C116 +
             (C113 * C425 + C101 * C445 + C114 * C424 + C102 * C444 +
              C115 * C437 + C103 * C450) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
              C113 * C128 + C101 * C139) *
                 C31023 +
             (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
              C113 * C118 + C101 * C125) *
                 C116) *
                C31012 * C31080) *
               C942 +
           (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
              C115 * C267 + C103 * C283) *
                 C116 +
             (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
              C115 * C284 + C103 * C297) *
                 C31023) *
                C31012 * C31080 -
            ((C115 * C823 + C103 * C830 + C114 * C822 + C102 * C829 +
              C113 * C821 + C101 * C828) *
                 C31023 +
             (C115 * C815 + C103 * C824 + C114 * C814 + C102 * C819 +
              C113 * C813 + C101 * C818) *
                 C116) *
                C31012 * C30931) *
               C943 +
           (((C113 * C1154 + C101 * C1169 + C114 * C1153 + C102 * C1168 +
              C115 * C1440 + C103 * C1441) *
                 C116 +
             (C113 * C1166 + C101 * C1181 + C114 * C1165 + C102 * C1180 +
              C115 * C1442 + C103 * C1443) *
                 C31023) *
                C31012 * C30931 -
            ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
              C113 * C281 + C101 * C295) *
                 C31023 +
             (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
              C113 * C265 + C101 * C278) *
                 C116) *
                C31012 * C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C31080 -
           (((C4559 * C1167 + C30772 * C1182) * C31023 +
             (C4559 * C1155 + C30772 * C1170) * C116) *
                C4558 +
            ((C4559 * C820 + C30772 * C827) * C31023 +
             (C4559 * C812 + C30772 * C817) * C116) *
                C4557 +
            ((C4559 * C426 + C30772 * C446) * C31023 +
             (C4559 * C416 + C30772 * C429) * C116) *
                C4556) *
               C30931) *
              C30826 * C554 +
          ((((C4559 * C415 + C30772 * C428) * C116 +
             (C4559 * C425 + C30772 * C445) * C31023) *
                C4556 +
            ((C4559 * C813 + C30772 * C818) * C116 +
             (C4559 * C821 + C30772 * C828) * C31023) *
                C4557 +
            ((C4559 * C1154 + C30772 * C1169) * C116 +
             (C4559 * C1166 + C30772 * C1181) * C31023) *
                C4558) *
               C30931 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C31080) *
              C30826 * C555 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C31080 -
           (((C4559 * C1165 + C30772 * C1180) * C31023 +
             (C4559 * C1153 + C30772 * C1168) * C116) *
                C4558 +
            ((C4559 * C822 + C30772 * C829) * C31023 +
             (C4559 * C814 + C30772 * C819) * C116) *
                C4557 +
            ((C4559 * C424 + C30772 * C444) * C31023 +
             (C4559 * C414 + C30772 * C427) * C116) *
                C4556) *
               C30931) *
              C30826 * C556 +
          ((((C4559 * C420 + C30772 * C436) * C116 +
             (C4559 * C437 + C30772 * C450) * C31023) *
                C4556 +
            ((C4559 * C815 + C30772 * C824) * C116 +
             (C4559 * C823 + C30772 * C830) * C31023) *
                C4557 +
            ((C4559 * C1440 + C30772 * C1441) * C116 +
             (C4559 * C1442 + C30772 * C1443) * C31023) *
                C4558) *
               C30931 -
           ((C4969 + C4968) * C4558 + (C4967 + C4966) * C4557 +
            ((C4559 * C130 + C30772 * C141) * C31023 +
             (C4559 * C120 + C30772 * C131) * C116) *
                C4556) *
               C31080) *
              C30826 * C31114)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C4559 * C117 + C30772 * C124) * C116 +
              (C4559 * C127 + C30772 * C138) * C31023) *
                 C4556 +
             (C4725 + C4726) * C4557 + C4743 * C4558) *
                C31080 -
            (C5582 * C4558 + (C5252 + C5253) * C4557 +
             ((C4559 * C426 + C30772 * C446) * C31023 +
              (C4559 * C416 + C30772 * C429) * C116) *
                 C4556) *
                C30931) *
               C942 +
           (((C5253 + C5252) * C4556 + (C5251 + C5250) * C4557 +
             (C5611 + C5612) * C4558) *
                C30931 -
            (C5442 * C4558 + (C4728 + C4727) * C4557 +
             (C4726 + C4725) * C4556) *
                C31080) *
               C943 +
           ((C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C31080 -
            (((C4559 * C5574 + C30772 * C5579) * C31023 +
              (C4559 * C5570 + C30772 * C5575) * C116) *
                 C4558 +
             (C5612 + C5611) * C4557 + C5582 * C4556) *
                C30931) *
               C31110) *
              C31065 +
          (((((C4559 * C415 + C30772 * C428) * C116 +
              (C4559 * C425 + C30772 * C445) * C31023) *
                 C4556 +
             (C5254 + C5255) * C4557 + C5877 * C4558) *
                C30931 -
            (C4744 * C4558 + (C4732 + C4731) * C4557 +
             ((C4559 * C128 + C30772 * C139) * C31023 +
              (C4559 * C118 + C30772 * C125) * C116) *
                 C4556) *
                C31080) *
               C942 +
           (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
             C5718 * C4558) *
                C31080 -
            ((C5884 + C5885) * C4558 + (C5257 + C5256) * C4557 +
             (C5255 + C5254) * C4556) *
                C30931) *
               C943 +
           ((C5877 * C4556 + (C5885 + C5884) * C4557 +
             ((C4559 * C5872 + C30772 * C5873) * C116 +
              (C4559 * C5874 + C30772 * C5875) * C31023) *
                 C4558) *
                C30931 -
            ((C5725 + C5726) * C4558 + (C4736 + C4735) * C4557 +
             C4744 * C4556) *
                C31080) *
               C31110) *
              C30809)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C30826 * C108 -
          ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
            C113 * C128 + C101 * C139) *
               C31023 +
           (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
            C113 * C118 + C101 * C125) *
               C116) *
              C31012 * C30844 * C30826 * C109 +
          ((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
            C115 * C121 + C103 * C132) *
               C116 +
           (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
            C115 * C133 + C103 * C142) *
               C31023) *
              C31012 * C30844 * C30826 * C110 -
          ((C115 * C134 + C103 * C143 + C114 * C133 + C102 * C142 +
            C113 * C130 + C101 * C141) *
               C31023 +
           (C115 * C122 + C103 * C135 + C114 * C121 + C102 * C132 +
            C113 * C120 + C101 * C131) *
               C116) *
              C31012 * C30844 * C30826 * C111 +
          ((C113 * C121 + C101 * C132 + C114 * C122 + C102 * C135 +
            C115 * C123 + C103 * C136) *
               C116 +
           (C113 * C133 + C101 * C142 + C114 * C134 + C102 * C143 +
            C115 * C137 + C103 * C144) *
               C31023) *
              C31012 * C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C258 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C31135 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C31147 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C259 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C31147 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C31135 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
             C115 * C119 + C103 * C126) *
                C116 +
            (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
             C115 * C129 + C103 * C140) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
             C113 * C273 + C101 * C293) *
                C31023 +
            (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
             C113 * C263 + C101 * C276) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
             C115 * C266 + C103 * C279) *
                C116 +
            (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
             C115 * C282 + C103 * C296) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31144 +
          (((C113 * C262 + C101 * C275 + C114 * C261 + C102 * C274 +
             C115 * C267 + C103 * C283) *
                C116 +
            (C113 * C272 + C101 * C292 + C114 * C271 + C102 * C291 +
             C115 * C284 + C103 * C297) *
                C31023) *
               C31012 * C30844 * C943 -
           ((C115 * C130 + C103 * C141 + C114 * C129 + C102 * C140 +
             C113 * C128 + C101 * C139) *
                C31023 +
            (C115 * C120 + C103 * C131 + C114 * C119 + C102 * C126 +
             C113 * C118 + C101 * C125) *
                C116) *
               C31012 * C30844 * C942 -
           ((C115 * C285 + C103 * C298 + C114 * C282 + C102 * C296 +
             C113 * C281 + C101 * C295) *
                C31023 +
            (C115 * C268 + C103 * C286 + C114 * C266 + C102 * C279 +
             C113 * C265 + C101 * C278) *
                C116) *
               C31012 * C30844 * C31110) *
              C31131 +
          (((C113 * C119 + C101 * C126 + C114 * C120 + C102 * C131 +
             C115 * C121 + C103 * C132) *
                C116 +
            (C113 * C129 + C101 * C140 + C114 * C130 + C102 * C141 +
             C115 * C133 + C103 * C142) *
                C31023) *
               C31012 * C30844 * C942 -
           ((C115 * C287 + C103 * C299 + C114 * C284 + C102 * C297 +
             C113 * C271 + C101 * C291) *
                C31023 +
            (C115 * C269 + C103 * C288 + C114 * C267 + C102 * C283 +
             C113 * C261 + C101 * C274) *
                C116) *
               C31012 * C30844 * C943 +
           ((C113 * C266 + C101 * C279 + C114 * C268 + C102 * C286 +
             C115 * C270 + C103 * C289) *
                C116 +
            (C113 * C282 + C101 * C296 + C114 * C285 + C102 * C298 +
             C115 * C290 + C103 * C300) *
                C31023) *
               C31012 * C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C117 + C101 * C124 + C114 * C118 + C102 * C125 +
            C115 * C119 + C103 * C126) *
               C116 +
           (C113 * C127 + C101 * C138 + C114 * C128 + C102 * C139 +
            C115 * C129 + C103 * C140) *
               C31023) *
              C31012 * C30844 * C1010 -
          ((C115 * C271 + C103 * C291 + C114 * C272 + C102 * C292 +
            C113 * C273 + C101 * C293) *
               C31023 +
           (C115 * C261 + C103 * C274 + C114 * C262 + C102 * C275 +
            C113 * C263 + C101 * C276) *
               C116) *
              C31012 * C30844 * C1011 +
          ((C113 * C264 + C101 * C277 + C114 * C265 + C102 * C278 +
            C115 * C266 + C103 * C279) *
               C116 +
           (C113 * C280 + C101 * C294 + C114 * C281 + C102 * C295 +
            C115 * C282 + C103 * C296) *
               C31023) *
              C31012 * C30844 * C1012 -
          ((C115 * C1022 + C103 * C1034 + C114 * C1023 + C102 * C1035 +
            C113 * C1024 + C101 * C1036) *
               C31023 +
           (C115 * C1016 + C103 * C1025 + C114 * C1017 + C102 * C1026 +
            C113 * C1018 + C101 * C1027) *
               C116) *
              C31012 * C30844 * C1013 +
          ((C113 * C1019 + C101 * C1028 + C114 * C1020 + C102 * C1029 +
            C115 * C1021 + C103 * C1030) *
               C116 +
           (C113 * C1031 + C101 * C1037 + C114 * C1032 + C102 * C1038 +
            C115 * C1033 + C103 * C1039) *
               C31023) *
              C31012 * C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           ((C4559 * C263 + C30772 * C276) * C116 +
            (C4559 * C273 + C30772 * C293) * C31023) *
               C4557 +
           ((C4559 * C264 + C30772 * C277) * C116 +
            (C4559 * C280 + C30772 * C294) * C31023) *
               C4558) *
              C30844 * C30826 * C108 -
          (((C4559 * C281 + C30772 * C295) * C31023 +
            (C4559 * C265 + C30772 * C278) * C116) *
               C4558 +
           ((C4559 * C272 + C30772 * C292) * C31023 +
            (C4559 * C262 + C30772 * C275) * C116) *
               C4557 +
           ((C4559 * C128 + C30772 * C139) * C31023 +
            (C4559 * C118 + C30772 * C125) * C116) *
               C4556) *
              C30844 * C30826 * C109 +
          (((C4559 * C119 + C30772 * C126) * C116 +
            (C4559 * C129 + C30772 * C140) * C31023) *
               C4556 +
           ((C4559 * C261 + C30772 * C274) * C116 +
            (C4559 * C271 + C30772 * C291) * C31023) *
               C4557 +
           ((C4559 * C266 + C30772 * C279) * C116 +
            (C4559 * C282 + C30772 * C296) * C31023) *
               C4558) *
              C30844 * C30826 * C110 -
          (((C4559 * C285 + C30772 * C298) * C31023 +
            (C4559 * C268 + C30772 * C286) * C116) *
               C4558 +
           ((C4559 * C284 + C30772 * C297) * C31023 +
            (C4559 * C267 + C30772 * C283) * C116) *
               C4557 +
           ((C4559 * C130 + C30772 * C141) * C31023 +
            (C4559 * C120 + C30772 * C131) * C116) *
               C4556) *
              C30844 * C30826 * C111 +
          (((C4559 * C121 + C30772 * C132) * C116 +
            (C4559 * C133 + C30772 * C142) * C31023) *
               C4556 +
           ((C4559 * C269 + C30772 * C288) * C116 +
            (C4559 * C287 + C30772 * C299) * C31023) *
               C4557 +
           ((C4559 * C270 + C30772 * C289) * C116 +
            (C4559 * C290 + C30772 * C300) * C31023) *
               C4558) *
              C30844 * C30826 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C31147 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C31135 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C258 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C31135 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C31147 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C259 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C31147 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C31135 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C4559 * C117 + C30772 * C124) * C116 +
             (C4559 * C127 + C30772 * C138) * C31023) *
                C4556 +
            (C4725 + C4726) * C4557 + C4743 * C4558) *
               C30844 * C942 -
           ((C4729 + C4730) * C4558 + (C4728 + C4727) * C4557 +
            (C4726 + C4725) * C4556) *
               C30844 * C943 +
           (C4743 * C4556 + (C4730 + C4729) * C4557 +
            ((C4559 * C1019 + C30772 * C1028) * C116 +
             (C4559 * C1031 + C30772 * C1037) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31144 +
          (((C4731 + C4732) * C4556 + (C4733 + C4734) * C4557 +
            (C4735 + C4736) * C4558) *
               C30844 * C943 -
           (C4744 * C4558 + (C4732 + C4731) * C4557 +
            ((C4559 * C128 + C30772 * C139) * C31023 +
             (C4559 * C118 + C30772 * C125) * C116) *
                C4556) *
               C30844 * C942 -
           (((C4559 * C1032 + C30772 * C1038) * C31023 +
             (C4559 * C1020 + C30772 * C1029) * C116) *
                C4558 +
            (C4736 + C4735) * C4557 + C4744 * C4556) *
               C30844 * C31110) *
              C31131 +
          ((((C4559 * C119 + C30772 * C126) * C116 +
             (C4559 * C129 + C30772 * C140) * C31023) *
                C4556 +
            (C4737 + C4738) * C4557 + C4745 * C4558) *
               C30844 * C942 -
           ((C4741 + C4742) * C4558 + (C4740 + C4739) * C4557 +
            (C4738 + C4737) * C4556) *
               C30844 * C943 +
           (C4745 * C4556 + (C4742 + C4741) * C4557 +
            ((C4559 * C1021 + C30772 * C1030) * C116 +
             (C4559 * C1033 + C30772 * C1039) * C31023) *
                C4558) *
               C30844 * C31110) *
              C31104)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4559 * C117 + C30772 * C124) * C116 +
            (C4559 * C127 + C30772 * C138) * C31023) *
               C4556 +
           (C4725 + C4726) * C4557 + C4743 * C4558) *
              C30844 * C1010 -
          (C5442 * C4558 + (C4728 + C4727) * C4557 + (C4726 + C4725) * C4556) *
              C30844 * C1011 +
          (C4743 * C4556 + (C4730 + C4729) * C4557 + C5459 * C4558) * C30844 *
              C1012 -
          ((C5457 + C5458) * C4558 + (C5456 + C5455) * C4557 + C5442 * C4556) *
              C30844 * C1013 +
          (C5459 * C4556 + (C5458 + C5457) * C4557 +
           ((C4559 * C5434 + C30772 * C5437) * C116 +
            (C4559 * C5438 + C30772 * C5440) * C31023) *
               C4558) *
              C30844 * C1014) *
         C30798) /
            (p * q * std::sqrt(p + q));
}
