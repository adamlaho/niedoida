/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AA_zy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_11_32(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29954 = ae * be;
    const double C29953 = ae + be;
    const double C29952 = 0 * be;
    const double C29951 = yA - yB;
    const double C29971 = 0 * be;
    const double C29970 = zA - zB;
    const double C29994 = std::pow(ae, 2);
    const double C29993 = yP - yQ;
    const double C29992 = zP - zQ;
    const double C29991 = p + q;
    const double C29990 = p * q;
    const double C30002 = bs[4];
    const double C30000 = xP - xQ;
    const double C30007 = bs[5];
    const double C30014 = bs[6];
    const double C30022 = bs[7];
    const double C30036 = bs[3];
    const double C30459 = bs[2];
    const double C115 = bs[0];
    const double C30812 = xA - xB;
    const double C30830 = ce + de;
    const double C30829 = ce * de;
    const double C30828 = xC - xD;
    const double C30862 = yC - yD;
    const double C30880 = zC - zD;
    const double C29955 = std::pow(C29953, 2);
    const double C31102 = 2 * C29953;
    const double C29956 = C29954 * C29951;
    const double C31046 = std::pow(C29951, 2);
    const double C31133 = C29951 * ae;
    const double C29972 = C29954 * C29970;
    const double C31059 = std::pow(C29970, 2);
    const double C31134 = C29970 * ae;
    const double C30072 = C29993 * ae;
    const double C30127 = std::pow(C29993, 2);
    const double C29996 = C29992 * C29993;
    const double C30031 = C29992 * ae;
    const double C30210 = std::pow(C29992, 2);
    const double C29995 = 2 * C29990;
    const double C30008 = std::pow(C30000, 2);
    const double C30813 = std::pow(C30812, 2);
    const double C31101 = C30812 * ae;
    const double C30834 = 2 * C30830;
    const double C30833 = std::pow(C30830, 2);
    const double C30835 = C30828 * de;
    const double C30832 = C30828 * ce;
    const double C30831 = std::pow(C30828, 2);
    const double C30863 = std::pow(C30862, 2);
    const double C30922 = C30862 * de;
    const double C30920 = C30862 * ce;
    const double C30881 = std::pow(C30880, 2);
    const double C30964 = C30880 * de;
    const double C30962 = C30880 * ce;
    const double C29957 = 2 * C29955;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C29955;
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (zP - zQ) * (yP - yQ) * std::pow(ae, 2)) /
                        C29955;
    const double C31137 = std::pow(C31102, -2);
    const double C31135 = std::pow(C31102, -1);
    const double C31047 = C31046 * C29954;
    const double C31060 = C31059 * C29954;
    const double C30076 = C30036 * C30072;
    const double C30079 = C30002 * C30072;
    const double C30083 = C30007 * C30072;
    const double C30090 = C30014 * C30072;
    const double C30101 = C30022 * C30072;
    const double C29998 = C29996 * C29994;
    const double C30037 = C30036 * C30031;
    const double C30040 = C30002 * C30031;
    const double C30044 = C30007 * C30031;
    const double C30051 = C30014 * C30031;
    const double C30062 = C30022 * C30031;
    const double C29997 = C29995 / C29991;
    const double C122 = (-(bs[1] * C30072 * C29995) / C29991) / C29953;
    const double C123 = (-(bs[1] * C30031 * C29995) / C29991) / C29953;
    const double C116 = -(C30000 * bs[1] * C29995) / C29991;
    const double C304 = -(C29993 * bs[1] * C29995) / C29991;
    const double C507 = -(C29992 * bs[1] * C29995) / C29991;
    const double C30814 = C30813 * C29954;
    const double C30847 = std::pow(C30834, -1);
    const double C31110 = std::pow(C30834, -2);
    const double C30848 = 2 * C30833;
    const double C31114 = C30833 * C30834;
    const double C31113 = 4 * C30833;
    const double C31103 = std::pow(C30832, 2);
    const double C30836 = C30831 * C30829;
    const double C30864 = C30863 * C30829;
    const double C31115 = std::pow(C30920, 2);
    const double C30882 = C30881 * C30829;
    const double C31117 = std::pow(C30962, 2);
    const double C31048 = C31047 / C29953;
    const double C31061 = C31060 / C29953;
    const double C30003 = C30002 * C29998;
    const double C30010 = C30007 * C29998;
    const double C30015 = C30014 * C29998;
    const double C30024 = C30022 * C29998;
    const double C30001 = std::pow(C29997, 4);
    const double C30006 = -C29997;
    const double C30013 = std::pow(C29997, 6);
    const double C138 =
        (std::pow(-C29997, 3) * bs[3] * C29998 +
         std::pow(C29997, 4) * bs[4] * C29998 * std::pow(xP - xQ, 2)) /
        C29955;
    const double C30458 = std::pow(C29997, 2);
    const double C124 =
        (C30000 * std::pow(C29997, 2) * bs[2] * C30072) / C29953;
    const double C125 =
        (C30000 * std::pow(C29997, 2) * bs[2] * C30031) / C29953;
    const double C316 =
        (C29993 * std::pow(C29997, 2) * bs[2] * C30031) / C29953;
    const double C317 =
        (C29993 * std::pow(C29997, 2) * bs[2] * C30072) / C29953 -
        (ae * bs[1] * C29995) / (C29991 * C29953);
    const double C30815 = C30814 / C29953;
    const double C31147 = 4 * C31114;
    const double C31146 = C30830 * C31113;
    const double C30837 = C30836 / C30830;
    const double C30865 = C30864 / C30830;
    const double C30883 = C30882 / C30830;
    const double C31049 = -C31048;
    const double C31062 = -C31061;
    const double C30004 = C30001 * C30003;
    const double C30041 = C30001 * C30040;
    const double C30080 = C30001 * C30079;
    const double C30116 = C30002 * C30001;
    const double C30009 = std::pow(C30006, 5);
    const double C30021 = std::pow(C30006, 7);
    const double C30035 = std::pow(C30006, 3);
    const double C334 = (ae * std::pow(C29997, 2) * bs[2] * C30031 +
                         C29993 * std::pow(C30006, 3) * bs[3] * C29998) /
                        C29955;
    const double C30016 = C30013 * C30015;
    const double C30053 = C30013 * C30051;
    const double C30092 = C30013 * C30090;
    const double C30185 = C30014 * C30013;
    const double C30460 = C30459 * C30458;
    const double C519 = (C29992 * C30458 * C30459 * C30031) / C29953 -
                        (ae * bs[1] * C29995) / (C29991 * C29953);
    const double C520 = (C29992 * C30458 * C30459 * C30072) / C29953;
    const double C30816 = -C30815;
    const double C30838 = -C30837;
    const double C30866 = -C30865;
    const double C30884 = -C30883;
    const double C31050 = std::exp(C31049);
    const double C31063 = std::exp(C31062);
    const double C139 = (2 * C30000 * C30004 +
                         C30000 * (C30004 + std::pow(-C29997, 5) * bs[5] *
                                                C29998 * std::pow(C30000, 2))) /
                        C29955;
    const double C333 = (ae * C30000 * std::pow(C30006, 3) * bs[3] * C30031 +
                         C29993 * C30000 * C30004) /
                        C29955;
    const double C30042 = C30000 * C30041;
    const double C30125 = ae * C30041;
    const double C30124 = C29993 * C30041;
    const double C30574 = C29992 * C30041;
    const double C30081 = C30000 * C30080;
    const double C30157 = C29993 * C30080;
    const double C30208 = ae * C30080;
    const double C30207 = C29992 * C30080;
    const double C30153 = C30000 * C30116;
    const double C30167 = C29993 * C30116;
    const double C30166 = C30116 * ae;
    const double C30466 = C30116 * C30008;
    const double C30525 = C30116 * C30127;
    const double C30576 = C30116 * C30210;
    const double C30653 = C29992 * C30116;
    const double C30011 = C30009 * C30010;
    const double C30045 = C30009 * C30044;
    const double C30084 = C30009 * C30083;
    const double C30118 = C30007 * C30009;
    const double C30025 = C30021 * C30024;
    const double C30064 = C30021 * C30062;
    const double C30103 = C30021 * C30101;
    const double C30038 = C30035 * C30037;
    const double C30077 = C30035 * C30076;
    const double C30158 = C30036 * C30035;
    const double C536 =
        (ae * C30000 * C30035 * C30036 * C30072 + C29992 * C30000 * C30004) /
        C29955;
    const double C537 = (ae * std::pow(C29997, 2) * bs[2] * C30072 +
                         C29992 * C30035 * C30036 * C29998) /
                        C29955;
    const double C30017 = C30016 * C30008;
    const double C30020 = C30000 * C30016;
    const double C30239 = C29993 * C30016;
    const double C30369 = C29992 * C30016;
    const double C30054 = C30053 * C30008;
    const double C30061 = C30000 * C30053;
    const double C30240 = C30053 * C30127;
    const double C30254 = ae * C30053;
    const double C30253 = C29993 * C30053;
    const double C30668 = C29992 * C30053;
    const double C30093 = C30092 * C30008;
    const double C30100 = C30000 * C30092;
    const double C30274 = C29993 * C30092;
    const double C30370 = C30092 * C30210;
    const double C30384 = ae * C30092;
    const double C30383 = C29992 * C30092;
    const double C30186 = C30185 * C30008;
    const double C30295 = C30185 * C30127;
    const double C30294 = C29993 * C30185;
    const double C30293 = C30185 * ae;
    const double C30330 = C30000 * C30185;
    const double C30671 = C30185 * C30210;
    const double C117 = C30460 * C30008 - (bs[1] * C29995) / C29991;
    const double C303 = C29993 * C30000 * C30460;
    const double C305 = C30460 * C30127 - (bs[1] * C29995) / C29991;
    const double C506 = C29992 * C30000 * C30460;
    const double C508 = C30460 * C30210 - (bs[1] * C29995) / C29991;
    const double C971 = C29992 * C29993 * C30460;
    const double C30817 = std::exp(C30816);
    const double C30839 = std::exp(C30838);
    const double C30867 = std::exp(C30866);
    const double C30885 = std::exp(C30884);
    const double C151 = C31050 * C138;
    const double C147 = C31050 * C137;
    const double C145 = C31050 * C124;
    const double C9198 = C31050 * C520;
    const double C29958 = C29956 * C31050;
    const double C113 = -(2 * ae * be * (yA - yB) * C31050) / (ae + be);
    const double C31167 = C31050 * C31133;
    const double C4803 =
        (C31050 * std::pow(C31133, 2)) / C29955 + C31050 / C31102;
    const double C4805 = C31137 * C31050;
    const double C13223 = C31135 * C31050;
    const double C29973 = C29972 * C31063;
    const double C114 = -(2 * ae * be * (zA - zB) * C31063) / (ae + be);
    const double C31168 = C31063 * C31134;
    const double C8970 =
        (C31063 * std::pow(C31134, 2)) / C29955 + C31063 / C31102;
    const double C8972 = C31137 * C31063;
    const double C18917 = C31135 * C31063;
    const double C153 = C31050 * C139;
    const double C348 = C31050 * C333;
    const double C30154 = C30153 * ae;
    const double C30473 = 2 * C30153;
    const double C30529 = C29993 * C30153;
    const double C30582 = C29992 * C30153;
    const double C30169 = C30167 * ae;
    const double C30606 = 2 * C30167;
    const double C30635 = C29992 * C30167;
    const double C30658 = 2 * C30653;
    const double C30656 = C30653 * ae;
    const double C30121 = C30000 * C30011;
    const double C30126 = C29993 * C30011;
    const double C30209 = C29992 * C30011;
    const double C140 =
        (3 * (C30004 + C30011 * C30008) +
         C30000 * (2 * C30000 * C30011 +
                   C30000 * (C30011 +
                             std::pow(C29997, 6) * bs[6] * C29998 * C30008))) /
        C29955;
    const double C332 = (ae * (std::pow(C30006, 3) * bs[3] * C30031 +
                               C30001 * C30002 * C30031 * C30008) +
                         C29993 * (C30004 + C30011 * C30008)) /
                        C29955;
    const double C336 = (C30000 * C30004 + ae * C29993 * C30042 +
                         C29993 * (ae * C30042 + C29993 * C30000 * C30011)) /
                        C29955;
    const double C535 =
        (ae * (C30035 * C30036 * C30072 + C30001 * C30002 * C30072 * C30008) +
         C29992 * (C30004 + C30011 * C30008)) /
        C29955;
    const double C539 = (C30000 * C30004 + ae * C29992 * C30081 +
                         C29992 * (ae * C30081 + C29992 * C30000 * C30011)) /
                        C29955;
    const double C987 =
        (ae * (C29993 * C30081 + C30000 * C30036 * C30035 * ae) +
         C29992 * (ae * C30042 + C29993 * C30000 * C30011)) /
        C29955;
    const double C30046 = C30045 * C30008;
    const double C30050 = C30000 * C30045;
    const double C30129 = C30045 * C30127;
    const double C30238 = ae * C30045;
    const double C30237 = C29993 * C30045;
    const double C30652 = C29992 * C30045;
    const double C30085 = C30084 * C30008;
    const double C30089 = C30000 * C30084;
    const double C30165 = C29993 * C30084;
    const double C30212 = C30084 * C30210;
    const double C30368 = ae * C30084;
    const double C30367 = C29992 * C30084;
    const double C30147 = C30118 * C30008;
    const double C30175 = C30000 * C30118;
    const double C30277 = C30118 * C30127;
    const double C30276 = C29993 * C30118;
    const double C30275 = C30118 * ae;
    const double C30654 = C30118 * C30210;
    const double C30669 = C29992 * C30118;
    const double C30026 = C30025 * C30008;
    const double C30255 = C29993 * C30025;
    const double C30316 = C30000 * C30025;
    const double C30385 = C29992 * C30025;
    const double C30065 = C30064 * C30008;
    const double C30257 = C30064 * C30127;
    const double C30317 = C30000 * C30064;
    const double C30104 = C30103 * C30008;
    const double C30292 = C29993 * C30103;
    const double C30351 = C30000 * C30103;
    const double C30387 = C30103 * C30210;
    const double C335 = (C30035 * C30036 * C29998 + ae * C29993 * C30038 +
                         C29993 * (ae * C30038 + C29993 * C30004)) /
                        C29955;
    const double C1220 = (2 * (ae * C30038 + C29993 * C30004) +
                          ae * (C30038 + C30041 * std::pow(C29993, 2)) +
                          C29993 * (C30004 + ae * C29993 * C30041 +
                                    C29993 * (ae * C30041 + C29993 * C30011))) /
                         C29955;
    const double C127 =
        (std::pow(C29997, 2) * bs[2] * C30031 + C30038 * C30008) / C29953;
    const double C128 =
        (2 * C30000 * C30038 + C30000 * (C30038 + C30041 * C30008)) / C29953;
    const double C312 = (C29993 * (C30038 + C30041 * C30008)) / C29953;
    const double C314 = (C29993 * C30000 * C30038) / C29953;
    const double C319 = (C30458 * C30459 * C30031 + C30038 * C30127) / C29953;
    const double C321 = (C30000 * C30038 + C30042 * C30127) / C29953;
    const double C517 =
        (C29992 * C30000 * C30038 + C30000 * C30460 * ae) / C29953;
    const double C522 =
        (C30458 * C30459 * C30031 + C29992 * (C29992 * C30038 + C30460 * ae) +
         C29992 * C30460 * ae) /
        C29953;
    const double C977 =
        (C29992 * C29993 * C30038 + C29993 * C30460 * ae) / C29953;
    const double C1210 =
        (2 * C29993 * C30038 + C29993 * (C30038 + C30041 * C30127)) / C29953;
    const double C538 = (C30035 * C30036 * C29998 + ae * C29992 * C30077 +
                         C29992 * (ae * C30077 + C29992 * C30004)) /
                        C29955;
    const double C986 =
        (ae * (C29993 * C30077 + bs[2] * std::pow(C29997, 2) * ae) +
         C29992 * (ae * C30038 + C29993 * C30004)) /
        C29955;
    const double C2080 = (2 * (ae * C30077 + C29992 * C30004) +
                          ae * (C30077 + C30080 * std::pow(C29992, 2)) +
                          C29992 * (C30004 + ae * C29992 * C30080 +
                                    C29992 * (ae * C30080 + C29992 * C30011))) /
                         C29955;
    const double C126 =
        (std::pow(C29997, 2) * bs[2] * C30072 + C30077 * C30008) / C29953;
    const double C129 =
        (2 * C30000 * C30077 + C30000 * (C30077 + C30080 * C30008)) / C29953;
    const double C315 =
        (C29993 * C30000 * C30077 + C30000 * bs[2] * std::pow(C29997, 2) * ae) /
        C29953;
    const double C318 =
        (C30458 * C30459 * C30072 + C29993 * (C29993 * C30077 + C30460 * ae) +
         C29993 * C30460 * ae) /
        C29953;
    const double C516 = (C29992 * (C30077 + C30080 * C30008)) / C29953;
    const double C518 = (C29992 * C30000 * C30077) / C29953;
    const double C521 = (C30458 * C30459 * C30072 + C30077 * C30210) / C29953;
    const double C523 = (C30000 * C30077 + C30081 * C30210) / C29953;
    const double C976 = (C29992 * (C29993 * C30077 + C30460 * ae)) / C29953;
    const double C2071 =
        (2 * C29992 * C30077 + C29992 * (C30077 + C30080 * C30210)) / C29953;
    const double C30159 = C30158 * ae;
    const double C30463 = C30000 * C30158;
    const double C30467 = C30158 + C30466;
    const double C30524 = C29993 * C30158;
    const double C30526 = C30158 + C30525;
    const double C30575 = C29992 * C30158;
    const double C30578 = C30158 + C30576;
    const double C313 = (C29993 * (C30077 + C30080 * C30008) +
                         (bs[2] * std::pow(C29997, 2) + C30158 * C30008) * ae) /
                        C29953;
    const double C515 = (C29992 * (C30038 + C30041 * C30008) +
                         (C30460 + C30158 * C30008) * ae) /
                        C29953;
    const double C1353 = (C29992 * (C30038 + C30041 * C30127) +
                          (C30460 + C30158 * C30127) * ae) /
                         C29953;
    const double C118 =
        2 * C30000 * C30460 + C30000 * (C30460 + C30158 * C30008);
    const double C302 = C29993 * (C30460 + C30158 * C30008);
    const double C505 = C29992 * (C30460 + C30158 * C30008);
    const double C1202 =
        2 * C29993 * C30460 + C29993 * (C30460 + C30158 * C30127);
    const double C1339 = C29992 * (C30460 + C30158 * C30127);
    const double C2062 =
        2 * C29992 * C30460 + C29992 * (C30460 + C30158 * C30210);
    const double C551 = C31050 * C536;
    const double C9200 = C31050 * C537;
    const double C30018 = C30011 + C30017;
    const double C30023 = 2 * C30020;
    const double C30134 = C29993 * C30020;
    const double C30217 = C29992 * C30020;
    const double C30055 = C30045 + C30054;
    const double C30063 = 2 * C30061;
    const double C30135 = C30061 * C30127;
    const double C30315 = ae * C30061;
    const double C30314 = C29993 * C30061;
    const double C30696 = C29992 * C30061;
    const double C30244 = C30045 + C30240;
    const double C30261 = 2 * C30253;
    const double C30259 = ae * C30253;
    const double C30710 = C29992 * C30253;
    const double C30094 = C30084 + C30093;
    const double C30102 = 2 * C30100;
    const double C30174 = C29993 * C30100;
    const double C30218 = C30100 * C30210;
    const double C30411 = ae * C30100;
    const double C30410 = C29992 * C30100;
    const double C30374 = C30084 + C30370;
    const double C30391 = 2 * C30383;
    const double C30389 = ae * C30383;
    const double C30187 = C30118 + C30186;
    const double C30299 = C30118 + C30295;
    const double C30298 = C30294 * ae;
    const double C30712 = C30294 * C30210;
    const double C30331 = C30330 * C30127;
    const double C30353 = C29993 * C30330;
    const double C30352 = C30330 * ae;
    const double C30698 = C30330 * C30210;
    const double C30675 = C30118 + C30671;
    const double C31136 = C30817 * C31101;
    const double C103 =
        (C30817 * std::pow(C31101, 2)) / C29955 + C30817 / C31102;
    const double C105 = C31137 * C30817;
    const double C13225 = C31135 * C30817;
    const double C30841 = C30839 * C30832;
    const double C30840 = C30839 / C30834;
    const double C30850 = C30847 * C30839;
    const double C31106 = C30839 * C30835;
    const double C31144 = C31110 * C30839;
    const double C31138 = C30839 * C31103;
    const double C30921 = C30867 / C30834;
    const double C30923 = C30867 * C30920;
    const double C30930 = C30847 * C30867;
    const double C31121 = C30867 * C30922;
    const double C31150 = C31110 * C30867;
    const double C31148 = C30867 * C31115;
    const double C30963 = C30885 / C30834;
    const double C30965 = C30885 * C30962;
    const double C30972 = C30847 * C30885;
    const double C31127 = C30885 * C30964;
    const double C31153 = C31110 * C30885;
    const double C31151 = C30885 * C31117;
    const double C4809 = ((0 * ae) / C29953 - C29958 / C29955) / (2 * C29953) +
                         (0 * ae) / C29953;
    const double C13226 =
        ((C31050 - (C29951 * 2 * C29958) / C29953) * ae) / C29953 -
        C29952 / C29957;
    const double C13227 = (0 * ae) / C29953 - C29958 / C29955;
    const double C148 = C113 * C117;
    const double C146 = C113 * C125;
    const double C144 = C113 * C116;
    const double C349 = C113 * C303;
    const double C552 = C113 * C506;
    const double C9201 = C113 * C508;
    const double C9199 = C113 * C519;
    const double C9197 = C113 * C507;
    const double C9557 = C113 * C971;
    const double C4804 = (2 * C31135 * C31167) / C29953;
    const double C13222 = C31167 / C29953;
    const double C13236 = C13223 * C333;
    const double C4808 =
        (((C31050 - (C29951 * 2 * C29958) / C29953) * ae) / C29953 -
         C29952 / C29957) /
            (2 * C29953) +
        ((C29951 * ((0 * ae) / C29953 - C29958 / C29955) + C13223) * ae) /
            C29953;
    const double C8975 = ((0 * ae) / C29953 - C29973 / C29955) / (2 * C29953) +
                         (0 * ae) / C29953;
    const double C18918 =
        ((C31063 - (C29970 * 2 * C29973) / C29953) * ae) / C29953 -
        C29971 / C29957;
    const double C18919 = (0 * ae) / C29953 - C29973 / C29955;
    const double C8971 = (2 * C31135 * C31168) / C29953;
    const double C18916 = C31168 / C29953;
    const double C8974 =
        (((C31063 - (C29970 * 2 * C29973) / C29953) * ae) / C29953 -
         C29971 / C29957) /
            (2 * C29953) +
        ((C29970 * ((0 * ae) / C29953 - C29973 / C29955) + C18917) * ae) /
            C29953;
    const double C30128 = C30125 + C30126;
    const double C30211 = C30208 + C30209;
    const double C159 = C31050 * C140;
    const double C344 = C31050 * C332;
    const double C13238 = C13223 * C332;
    const double C354 = C31050 * C336;
    const double C13424 = C13223 * C336;
    const double C547 = C31050 * C535;
    const double C557 = C31050 * C539;
    const double C995 = C31050 * C987;
    const double C13618 = C13223 * C987;
    const double C30047 = C30041 + C30046;
    const double C30052 = 2 * C30050;
    const double C30133 = ae * C30050;
    const double C30132 = C29993 * C30050;
    const double C1219 = (2 * (ae * C30042 + C29993 * C30121) +
                          ae * (C30042 + C30050 * std::pow(C29993, 2)) +
                          C29993 * (C30121 + ae * C29993 * C30050 +
                                    C29993 * (ae * C30050 + C29993 * C30020))) /
                         C29955;
    const double C30581 = C29992 * C30050;
    const double C1208 =
        (2 * C29993 * C30042 + C29993 * (C30042 + C30050 * C30127)) / C29953;
    const double C30130 = C30041 + C30129;
    const double C30242 = C30238 + C30239;
    const double C30243 = 2 * C30237;
    const double C30241 = ae * C30237;
    const double C30634 = C29992 * C30237;
    const double C30655 = C30652 + C30166;
    const double C30086 = C30080 + C30085;
    const double C30091 = 2 * C30089;
    const double C30152 = C29993 * C30089;
    const double C30216 = ae * C30089;
    const double C30215 = C29992 * C30089;
    const double C2079 = (2 * (ae * C30081 + C29992 * C30121) +
                          ae * (C30081 + C30089 * std::pow(C29992, 2)) +
                          C29992 * (C30121 + ae * C29992 * C30089 +
                                    C29992 * (ae * C30089 + C29992 * C30020))) /
                         C29955;
    const double C2069 =
        (2 * C29992 * C30081 + C29992 * (C30081 + C30089 * C30210)) / C29953;
    const double C30168 = C30165 + C30166;
    const double C30213 = C30080 + C30212;
    const double C30372 = C30368 + C30369;
    const double C30373 = 2 * C30367;
    const double C30371 = ae * C30367;
    const double C30148 = C30116 + C30147;
    const double C30177 = C29993 * C30175;
    const double C30176 = C30175 * ae;
    const double C30197 = 2 * C30175;
    const double C30530 = C30175 * C30127;
    const double C30583 = C30175 * C30210;
    const double C30697 = C29992 * C30175;
    const double C30280 = C30116 + C30277;
    const double C30279 = C30276 * ae;
    const double C30296 = 2 * C30276;
    const double C30636 = C30276 * C30210;
    const double C30711 = C29992 * C30276;
    const double C30278 = C30274 + C30275;
    const double C30673 = C30668 + C30275;
    const double C30657 = C30116 + C30654;
    const double C30676 = 2 * C30669;
    const double C30674 = C30669 * ae;
    const double C30027 = C30016 + C30026;
    const double C30260 = C30254 + C30255;
    const double C30319 = C29993 * C30316;
    const double C30412 = C29992 * C30316;
    const double C30390 = C30384 + C30385;
    const double C30066 = C30053 + C30065;
    const double C30262 = C30053 + C30257;
    const double C30321 = C30317 * C30127;
    const double C30105 = C30092 + C30104;
    const double C30297 = C30292 + C30293;
    const double C30355 = C29993 * C30351;
    const double C30413 = C30351 * C30210;
    const double C30392 = C30092 + C30387;
    const double C150 = C113 * C127;
    const double C152 = C113 * C128;
    const double C343 = C113 * C312;
    const double C347 = C113 * C314;
    const double C353 = C113 * C321;
    const double C550 = C113 * C517;
    const double C9203 = C113 * C522;
    const double C9559 = C113 * C977;
    const double C9204 = C31050 * C538;
    const double C9560 = C31050 * C986;
    const double C24754 = C13223 * C986;
    const double C9206 = C31050 * C2080;
    const double C149 = C31050 * C126;
    const double C155 = C31050 * C129;
    const double C350 = C31050 * C315;
    const double C13232 = C13223 * C315;
    const double C549 = C31050 * C516;
    const double C553 = C31050 * C518;
    const double C9202 = C31050 * C521;
    const double C555 = C31050 * C523;
    const double C9558 = C31050 * C976;
    const double C24750 = C13223 * C976;
    const double C9208 = C31050 * C2071;
    const double C30160 = C30157 + C30159;
    const double C30577 = C30574 + C30159;
    const double C2070 =
        (2 * (C29992 * C30038 + C30460 * ae) +
         C29992 * (C30038 + C29992 * (C29992 * C30041 + C30159) +
                   C29992 * C30158 * ae) +
         (C30460 + C30158 * C30210) * ae) /
        C29953;
    const double C320 =
        (C30000 * C30077 + C29993 * (C29993 * C30081 + C30463 * ae) +
         C29993 * C30463 * ae) /
        C29953;
    const double C524 =
        (C30000 * C30038 + C29992 * (C29992 * C30042 + C30463 * ae) +
         C29992 * C30463 * ae) /
        C29953;
    const double C978 = (C29992 * (C29993 * C30081 + C30463 * ae)) / C29953;
    const double C979 =
        (C29992 * C29993 * C30042 + C29993 * C30463 * ae) / C29953;
    const double C1351 = (C29992 * (C30042 + C30050 * C30127) +
                          (C30463 + C30153 * C30127) * ae) /
                         C29953;
    const double C2068 =
        (2 * (C29992 * C30042 + C30463 * ae) +
         C29992 * (C30042 + C29992 * (C29992 * C30050 + C30154) +
                   C29992 * C30153 * ae) +
         (C30463 + C30153 * C30210) * ae) /
        C29953;
    const double C306 = C30000 * C30460 + C30463 * C30127;
    const double C509 = C30000 * C30460 + C30463 * C30210;
    const double C972 = C29992 * C29993 * C30463;
    const double C1201 =
        2 * C29993 * C30463 + C29993 * (C30463 + C30153 * C30127);
    const double C1335 = C29993 * C30463 + C30529 * C30210;
    const double C1338 = C29992 * (C30463 + C30153 * C30127);
    const double C2061 =
        2 * C29992 * C30463 + C29992 * (C30463 + C30153 * C30210);
    const double C119 = 3 * (C30460 + C30158 * C30008) +
                        C30000 * (2 * C30463 + C30000 * C30467);
    const double C307 = C30460 + C30158 * C30008 + C30467 * C30127;
    const double C308 = C29993 * (2 * C30463 + C30000 * C30467);
    const double C510 = C30460 + C30158 * C30008 + C30467 * C30210;
    const double C511 = C29992 * (2 * C30463 + C30000 * C30467);
    const double C973 = C29992 * C29993 * C30467;
    const double C1347 =
        (C29993 * C30038 + C29992 * (C29992 * C30124 + C30524 * ae) +
         C29992 * C30524 * ae) /
        C29953;
    const double C2474 =
        (2 * (C29992 * C30124 + C30524 * ae) +
         C29992 * (C30124 + C29992 * (C29992 * C30237 + C30169) +
                   C29992 * C30167 * ae) +
         (C30524 + C30167 * C30210) * ae) /
        C29953;
    const double C1336 = C29993 * C30460 + C30524 * C30210;
    const double C2470 =
        2 * C29992 * C30524 + C29992 * (C30524 + C30167 * C30210);
    const double C1203 = 3 * (C30460 + C30158 * C30127) +
                         C29993 * (2 * C30524 + C29993 * C30526);
    const double C1340 = C30460 + C30158 * C30127 + C30526 * C30210;
    const double C1758 = C29992 * (2 * C30524 + C29993 * C30526);
    const double C2063 = 3 * (C30460 + C30158 * C30210) +
                         C29992 * (2 * C30575 + C29992 * C30578);
    const double C346 = C31050 * C313;
    const double C13242 = C13223 * C313;
    const double C546 = C113 * C515;
    const double C9857 = C113 * C1353;
    const double C154 = C113 * C118;
    const double C345 = C113 * C302;
    const double C548 = C113 * C505;
    const double C9855 = C113 * C1339;
    const double C9207 = C113 * C2062;
    const double C141 =
        (4 * (2 * C30000 * C30011 + C30000 * C30018) +
         C30000 * (3 * C30018 +
                   C30000 * (2 * C30000 * C30016 +
                             C30000 * (C30016 + std::pow(C30006, 7) * bs[7] *
                                                    C29998 * C30008)))) /
        C29955;
    const double C30056 = C30000 * C30055;
    const double C30060 = 3 * C30055;
    const double C30140 = ae * C30055;
    const double C30139 = C29993 * C30055;
    const double C30588 = C29992 * C30055;
    const double C30137 = C30050 + C30135;
    const double C30320 = 2 * C30314;
    const double C30318 = ae * C30314;
    const double C30689 = C29992 * C30314;
    const double C30247 = C29993 * C30244;
    const double C30256 = 3 * C30244;
    const double C30252 = ae * C30244;
    const double C30640 = C29992 * C30244;
    const double C30263 = C30016 + C30259;
    const double C30095 = C30000 * C30094;
    const double C30099 = 3 * C30094;
    const double C30146 = C29993 * C30094;
    const double C30223 = ae * C30094;
    const double C30222 = C29992 * C30094;
    const double C30220 = C30089 + C30218;
    const double C30416 = 2 * C30410;
    const double C30414 = ae * C30410;
    const double C30377 = C29992 * C30374;
    const double C30386 = 3 * C30374;
    const double C30382 = ae * C30374;
    const double C30393 = C30016 + C30389;
    const double C30189 = C29993 * C30187;
    const double C30188 = C30187 * ae;
    const double C30198 = C30000 * C30187;
    const double C30535 = C30187 * C30127;
    const double C30590 = C30187 * C30210;
    const double C30302 = C29993 * C30299;
    const double C30301 = C30299 * ae;
    const double C30642 = C30299 * C30210;
    const double C30715 = C30276 + C30712;
    const double C30332 = C30175 + C30331;
    const double C30356 = C30353 * ae;
    const double C30691 = C30353 * C30210;
    const double C30701 = C30175 + C30698;
    const double C30678 = C29992 * C30675;
    const double C104 = (2 * C31135 * C31136) / C29953;
    const double C13224 = C31136 / C29953;
    const double C30842 = C30841 * C30835;
    const double C30849 = C30841 / C30848;
    const double C31107 = C30847 * C30841;
    const double C31105 = C30841 / C30830;
    const double C299 = (C30839 * std::pow(C30835, 2)) / C30833 + C30840;
    const double C30851 = C30850 * C30835;
    const double C31111 = C30832 * C30850;
    const double C31109 = 2 * C30850;
    const double C31154 = C30850 / C31113;
    const double C112 = C30850 / C31147;
    const double C2951 = C30850 / C30834;
    const double C31140 = C31106 / C30830;
    const double C300 = (-2 * C30847 * C31106) / C30830;
    const double C31169 = C31138 / C30833;
    const double C1126 = (C30867 * std::pow(C30922, 2)) / C30833 + C30921;
    const double C30924 = C30923 * C30922;
    const double C30929 = C30923 / C30848;
    const double C31119 = C30923 / C30830;
    const double C31116 = C30847 * C30923;
    const double C30931 = C30930 * C30922;
    const double C31125 = C30920 * C30930;
    const double C31124 = 2 * C30930;
    const double C31160 = C30930 / C31113;
    const double C1198 = C30930 / C31147;
    const double C2948 = C30930 / C30834;
    const double C31156 = C31121 / C30830;
    const double C1127 = (-2 * C30847 * C31121) / C30830;
    const double C31174 = C31148 / C30833;
    const double C1880 = (C30885 * std::pow(C30964, 2)) / C30833 + C30963;
    const double C30966 = C30965 * C30964;
    const double C30971 = C30965 / C30848;
    const double C31120 = C30965 / C30830;
    const double C31118 = C30847 * C30965;
    const double C30973 = C30972 * C30964;
    const double C31131 = C30962 * C30972;
    const double C31130 = 2 * C30972;
    const double C31166 = C30972 / C31113;
    const double C2059 = C30972 / C31147;
    const double C3850 = C30972 / C30834;
    const double C31162 = C31127 / C30830;
    const double C1881 = (-2 * C30847 * C31127) / C30830;
    const double C31176 = C31151 / C30833;
    const double C13249 = C13226 * C128;
    const double C13245 = C13226 * C118;
    const double C13243 = C13226 * C117;
    const double C13239 = C13226 * C127;
    const double C13233 = C13226 * C125;
    const double C13229 = C13226 * C116;
    const double C13443 = C13226 * C312;
    const double C13439 = C13226 * C302;
    const double C13435 = C13226 * C321;
    const double C13429 = C13226 * C303;
    const double C13425 = C13226 * C314;
    const double C13637 = C13226 * C515;
    const double C13633 = C13226 * C505;
    const double C13623 = C13226 * C506;
    const double C13619 = C13226 * C517;
    const double C24761 = C13226 * C508;
    const double C24757 = C13226 * C522;
    const double C24751 = C13226 * C519;
    const double C24747 = C13226 * C507;
    const double C25229 = C13226 * C977;
    const double C25225 = C13226 * C971;
    const double C25623 = C13226 * C1353;
    const double C25619 = C13226 * C1339;
    const double C26487 = C13226 * C2062;
    const double C13241 = C13227 * C302;
    const double C13237 = C13227 * C312;
    const double C13235 = C13227 * C314;
    const double C13231 = C13227 * C303;
    const double C13423 = C13227 * C321;
    const double C24753 = C13227 * C977;
    const double C24749 = C13227 * C971;
    const double C25231 = C13227 * C1353;
    const double C25227 = C13227 * C1339;
    const double C165 = C146 + C147;
    const double C164 = C144 + C145;
    const double C9210 = C9199 + C9200;
    const double C9209 = C9197 + C9198;
    const double C13256 = C13222 * C140;
    const double C13250 = C13222 * C139;
    const double C13246 = C13222 * C129;
    const double C13244 = C13222 * C126;
    const double C13240 = C13222 * C138;
    const double C13234 = C13222 * C137;
    const double C13230 = C13222 * C124;
    const double C13444 = C13222 * C332;
    const double C13440 = C13222 * C313;
    const double C13436 = C13222 * C336;
    const double C13430 = C13222 * C315;
    const double C13426 = C13222 * C333;
    const double C13638 = C13222 * C535;
    const double C13634 = C13222 * C516;
    const double C13630 = C13222 * C539;
    const double C13626 = C13222 * C523;
    const double C13624 = C13222 * C518;
    const double C13620 = C13222 * C536;
    const double C14148 = C13222 * C987;
    const double C24762 = C13222 * C521;
    const double C24758 = C13222 * C538;
    const double C24752 = C13222 * C537;
    const double C24748 = C13222 * C520;
    const double C25230 = C13222 * C986;
    const double C25226 = C13222 * C976;
    const double C26492 = C13222 * C2080;
    const double C26488 = C13222 * C2071;
    const double C4807 =
        (((0 - (C29951 * C29952) / C29953) * ae) / C29953 - (0 * be) / C29957) /
            (2 * C29953) +
        ((C29951 * (((C31050 - (C29951 * 2 * C29958) / C29953) * ae) / C29953 -
                    C29952 / C29957) +
          C13222) *
         ae) /
            C29953 +
        (0 * ae) / C29953 - C29958 / C29955;
    const double C8973 =
        (((0 - (C29970 * C29971) / C29953) * ae) / C29953 - (0 * be) / C29957) /
            (2 * C29953) +
        ((C29970 * (((C31063 - (C29970 * 2 * C29973) / C29953) * ae) / C29953 -
                    C29971 / C29957) +
          C18916) *
         ae) /
            C29953 +
        (0 * ae) / C29953 - C29973 / C29955;
    const double C337 = (C30004 + C30011 * C30008 + ae * C29993 * C30047 +
                         C29993 * (ae * C30047 + C29993 * C30018)) /
                        C29955;
    const double C338 = (ae * (2 * C30042 + C30000 * C30047) +
                         C29993 * (2 * C30000 * C30011 + C30000 * C30018)) /
                        C29955;
    const double C131 = (3 * (C30038 + C30041 * C30008) +
                         C30000 * (2 * C30042 + C30000 * C30047)) /
                        C29953;
    const double C323 = (C30038 + C30041 * C30008 + C30047 * C30127) / C29953;
    const double C325 = (C29993 * (2 * C30042 + C30000 * C30047)) / C29953;
    const double C526 =
        (C30038 + C30041 * C30008 + C29992 * (C29992 * C30047 + C30467 * ae) +
         C29992 * C30467 * ae) /
        C29953;
    const double C528 = (C29992 * (2 * C30042 + C30000 * C30047) +
                         (2 * C30463 + C30000 * C30467) * ae) /
                        C29953;
    const double C981 =
        (C29992 * C29993 * C30047 + C29993 * C30467 * ae) / C29953;
    const double C1206 =
        (2 * C29993 * C30047 + C29993 * (C30047 + C30055 * C30127)) / C29953;
    const double C30136 = C30133 + C30134;
    const double C1345 =
        (C29993 * C30042 + C29992 * (C29992 * C30132 + C30529 * ae) +
         C29992 * C30529 * ae) /
        C29953;
    const double C1484 = C31050 * C1219;
    const double C13438 = C13223 * C1219;
    const double C14674 = C13222 * C1219;
    const double C30584 = C30581 + C30154;
    const double C1483 = C113 * C1208;
    const double C13437 = C13227 * C1208;
    const double C14673 = C13226 * C1208;
    const double C1221 =
        (3 * (C30004 + ae * C30124 + C29993 * C30128) +
         ae * (2 * C30124 + C29993 * C30130) +
         C29993 * (2 * C30128 + ae * C30130 +
                   C29993 * (C30011 + ae * C29993 * C30045 +
                             C29993 * (ae * C30045 + C29993 * C30016)))) /
        C29955;
    const double C1213 = (3 * (C30038 + C30041 * C30127) +
                          C29993 * (2 * C30124 + C29993 * C30130)) /
                         C29953;
    const double C1356 =
        (C30038 + C30041 * C30127 + C29992 * (C29992 * C30130 + C30526 * ae) +
         C29992 * C30526 * ae) /
        C29953;
    const double C1762 = (C29992 * (2 * C30124 + C29993 * C30130) +
                          (2 * C30524 + C29993 * C30526) * ae) /
                         C29953;
    const double C30246 = C29993 * C30242;
    const double C30251 = 2 * C30242;
    const double C30338 = C29992 * C30242;
    const double C30245 = C30011 + C30241;
    const double C30637 = C30634 + C30169;
    const double C30659 = C29992 * C30655;
    const double C30667 = 2 * C30655;
    const double C540 = (C30004 + C30011 * C30008 + ae * C29992 * C30086 +
                         C29992 * (ae * C30086 + C29992 * C30018)) /
                        C29955;
    const double C541 = (ae * (2 * C30081 + C30000 * C30086) +
                         C29992 * (2 * C30000 * C30011 + C30000 * C30018)) /
                        C29955;
    const double C988 =
        (ae * (C29993 * C30086 +
               (C30036 * C30035 + C30002 * C30001 * C30008) * ae) +
         C29992 * (ae * C30047 + C29993 * C30018)) /
        C29955;
    const double C130 = (3 * (C30077 + C30080 * C30008) +
                         C30000 * (2 * C30081 + C30000 * C30086)) /
                        C29953;
    const double C322 =
        (C30077 + C30080 * C30008 + C29993 * (C29993 * C30086 + C30467 * ae) +
         C29993 * C30467 * ae) /
        C29953;
    const double C324 = (C29993 * (2 * C30081 + C30000 * C30086) +
                         (2 * C30463 + C30000 * C30467) * ae) /
                        C29953;
    const double C525 = (C30077 + C30080 * C30008 + C30086 * C30210) / C29953;
    const double C527 = (C29992 * (2 * C30081 + C30000 * C30086)) / C29953;
    const double C980 = (C29992 * (C29993 * C30086 + C30467 * ae)) / C29953;
    const double C2067 =
        (2 * C29992 * C30086 + C29992 * (C30086 + C30094 * C30210)) / C29953;
    const double C30155 = C30152 + C30154;
    const double C30219 = C30216 + C30217;
    const double C2362 = C31050 * C2079;
    const double C15732 = C13222 * C2079;
    const double C2364 = C31050 * C2069;
    const double C15736 = C13222 * C2069;
    const double C30170 = C29993 * C30168;
    const double C30273 = 2 * C30168;
    const double C30337 = ae * C30168;
    const double C30336 = C29992 * C30168;
    const double C2081 =
        (3 * (C30004 + ae * C30207 + C29992 * C30211) +
         ae * (2 * C30207 + C29992 * C30213) +
         C29992 * (2 * C30211 + ae * C30213 +
                   C29992 * (C30011 + ae * C29992 * C30084 +
                             C29992 * (ae * C30084 + C29992 * C30016)))) /
        C29955;
    const double C2072 = (3 * (C30077 + C30080 * C30210) +
                          C29992 * (2 * C30207 + C29992 * C30213)) /
                         C29953;
    const double C30376 = C29992 * C30372;
    const double C30381 = 2 * C30372;
    const double C30375 = C30011 + C30371;
    const double C30149 = C30148 * ae;
    const double C30474 = C30000 * C30148;
    const double C30479 = 3 * C30148;
    const double C30534 = C29993 * C30148;
    const double C30589 = C29992 * C30148;
    const double C1349 = (C29992 * (C30047 + C30055 * C30127) +
                          (C30467 + C30148 * C30127) * ae) /
                         C29953;
    const double C1200 =
        2 * C29993 * C30467 + C29993 * (C30467 + C30148 * C30127);
    const double C1337 = C29992 * (C30467 + C30148 * C30127);
    const double C2060 =
        2 * C29992 * C30467 + C29992 * (C30467 + C30148 * C30210);
    const double C30179 = C30177 * ae;
    const double C30621 = 2 * C30177;
    const double C30690 = C29992 * C30177;
    const double C2471 =
        2 * C29992 * C30529 + C29992 * (C30529 + C30177 * C30210);
    const double C30178 = C30174 + C30176;
    const double C30699 = C30696 + C30176;
    const double C30531 = C30153 + C30530;
    const double C30585 = C30153 + C30583;
    const double C30702 = 2 * C30697;
    const double C30700 = C30697 * ae;
    const double C30282 = C30280 * ae;
    const double C30607 = C29993 * C30280;
    const double C30610 = 3 * C30280;
    const double C30641 = C29992 * C30280;
    const double C6310 =
        2 * C29992 * C30526 + C29992 * (C30526 + C30280 * C30210);
    const double C30713 = C30710 + C30279;
    const double C30638 = C30167 + C30636;
    const double C30716 = 2 * C30711;
    const double C30714 = C30711 * ae;
    const double C30281 = C29993 * C30278;
    const double C30291 = 2 * C30278;
    const double C30339 = C30278 * C30210;
    const double C30425 = ae * C30278;
    const double C30424 = C29992 * C30278;
    const double C30677 = C29992 * C30673;
    const double C30660 = C29992 * C30657;
    const double C30672 = 3 * C30657;
    const double C30670 = C30657 * ae;
    const double C30028 = C30000 * C30027;
    const double C30141 = C29993 * C30027;
    const double C30224 = C29992 * C30027;
    const double C1218 = (2 * (ae * C30047 + C29993 * C30018) +
                          ae * (C30047 + C30055 * std::pow(C29993, 2)) +
                          C29993 * (C30018 + ae * C29993 * C30055 +
                                    C29993 * (ae * C30055 + C29993 * C30027))) /
                         C29955;
    const double C2078 = (2 * (ae * C30086 + C29992 * C30018) +
                          ae * (C30086 + C30094 * std::pow(C29992, 2)) +
                          C29992 * (C30018 + ae * C29992 * C30094 +
                                    C29992 * (ae * C30094 + C29992 * C30027))) /
                         C29955;
    const double C30264 = C29993 * C30260;
    const double C30426 = C29992 * C30260;
    const double C30323 = C30315 + C30319;
    const double C30415 = C30411 + C30412;
    const double C30394 = C29992 * C30390;
    const double C30067 = C30000 * C30066;
    const double C30142 = C30066 * C30127;
    const double C30265 = C29993 * C30262;
    const double C30324 = C30061 + C30321;
    const double C30106 = C30000 * C30105;
    const double C30184 = C29993 * C30105;
    const double C30225 = C30105 * C30210;
    const double C30300 = C29993 * C30297;
    const double C30427 = C30297 * C30210;
    const double C30357 = C30355 + C30352;
    const double C30417 = C30100 + C30413;
    const double C30395 = C29992 * C30392;
    const double C167 = C150 + C151;
    const double C168 = C152 + C153;
    const double C367 = C343 + C344;
    const double C369 = C347 + C348;
    const double C372 = C353 + C354;
    const double C572 = C550 + C551;
    const double C9212 = C9203 + C9204;
    const double C9566 = C9559 + C9560;
    const double C166 = C148 + C149;
    const double C370 = C349 + C350;
    const double C573 = C552 + C553;
    const double C9211 = C9201 + C9202;
    const double C9565 = C9557 + C9558;
    const double C1363 = (ae * C30038 + C29993 * C30004 + ae * C29992 * C30160 +
                          C29992 * (ae * C30160 + C29992 * C30128)) /
                         C29955;
    const double C1366 =
        (ae * (C30077 + C29993 * C30160 + C29993 * C30158 * ae) +
         C29992 * (C30004 + ae * C30124 + C29993 * C30128)) /
        C29955;
    const double C2479 =
        (2 * (ae * C30160 + C29992 * C30128) + ae * (C30160 + C30168 * C30210) +
         C29992 * (C30128 + ae * C29992 * C30168 +
                   C29992 * (ae * C30168 +
                             C29992 * (ae * C30045 + C29993 * C30016)))) /
        C29955;
    const double C1211 =
        (2 * (C29993 * C30077 + C30460 * ae) +
         C29993 * (C30077 + C29993 * C30160 + C29993 * C30158 * ae) +
         (C30460 + C30158 * C30127) * ae) /
        C29953;
    const double C1348 =
        (C29993 * C30077 + C30460 * ae + C30160 * C30210) / C29953;
    const double C1354 =
        (C29992 * (C30077 + C29993 * C30160 + C30524 * ae)) / C29953;
    const double C2473 =
        (2 * C29992 * C30160 + C29992 * (C30160 + C30168 * C30210)) / C29953;
    const double C2073 =
        (3 * (C30038 + C29992 * C30577 + C30575 * ae) +
         C29992 * (2 * C30577 +
                   C29992 * (C30041 + C29992 * (C29992 * C30045 + C30166) +
                             C29992 * C30116 * ae) +
                   C30578 * ae) +
         (2 * C30575 + C29992 * C30578) * ae) /
        C29953;
    const double C9205 = C113 * C2070;
    const double C26491 = C13226 * C2070;
    const double C352 = C31050 * C320;
    const double C13432 = C13222 * C320;
    const double C13428 = C13223 * C320;
    const double C556 = C113 * C524;
    const double C13629 = C13226 * C524;
    const double C993 = C31050 * C978;
    const double C13622 = C13223 * C978;
    const double C14144 = C13222 * C978;
    const double C994 = C113 * C979;
    const double C13617 = C13227 * C979;
    const double C14147 = C13226 * C979;
    const double C1649 = C113 * C1351;
    const double C14149 = C13227 * C1351;
    const double C14879 = C13226 * C1351;
    const double C2361 = C113 * C2068;
    const double C15731 = C13226 * C2068;
    const double C351 = C113 * C306;
    const double C13431 = C13226 * C306;
    const double C13427 = C13227 * C306;
    const double C554 = C113 * C509;
    const double C13625 = C13226 * C509;
    const double C992 = C113 * C972;
    const double C13621 = C13227 * C972;
    const double C14143 = C13226 * C972;
    const double C1485 = C113 * C1201;
    const double C13433 = C13227 * C1201;
    const double C14677 = C13226 * C1201;
    const double C2241 = C113 * C1335;
    const double C13627 = C13227 * C1335;
    const double C15593 = C13226 * C1335;
    const double C1651 = C113 * C1338;
    const double C14145 = C13227 * C1338;
    const double C14883 = C13226 * C1338;
    const double C2363 = C113 * C2061;
    const double C15735 = C13226 * C2061;
    const double C156 = C113 * C119;
    const double C13259 = C13226 * C119;
    const double C355 = C113 * C307;
    const double C13453 = C13226 * C307;
    const double C13441 = C13227 * C307;
    const double C359 = C113 * C308;
    const double C13247 = C13227 * C308;
    const double C13801 = C13226 * C308;
    const double C558 = C113 * C510;
    const double C13647 = C13226 * C510;
    const double C562 = C113 * C511;
    const double C13943 = C13226 * C511;
    const double C996 = C113 * C973;
    const double C13635 = C13227 * C973;
    const double C14157 = C13226 * C973;
    const double C9563 = C113 * C1347;
    const double C24755 = C13227 * C1347;
    const double C25615 = C13226 * C1347;
    const double C9853 = C113 * C2474;
    const double C26493 = C13227 * C2474;
    const double C26967 = C13226 * C2474;
    const double C9561 = C113 * C1336;
    const double C24759 = C13227 * C1336;
    const double C25611 = C13226 * C1336;
    const double C9851 = C113 * C2470;
    const double C26489 = C13227 * C2470;
    const double C26971 = C13226 * C2470;
    const double C9859 = C113 * C1340;
    const double C25633 = C13226 * C1340;
    const double C25613 = C13227 * C1340;
    const double C10223 = C113 * C1758;
    const double C25621 = C13227 * C1758;
    const double C26101 = C13226 * C1758;
    const double C10525 = C113 * C2063;
    const double C26501 = C13226 * C2063;
    const double C570 = C546 + C547;
    const double C169 = C154 + C155;
    const double C368 = C345 + C346;
    const double C571 = C548 + C549;
    const double C9214 = C9207 + C9208;
    const double C161 = C31050 * C141;
    const double C30057 = C30052 + C30056;
    const double C1215 = (3 * (C30042 + C30050 * C30127) +
                          C29993 * (2 * C30132 + C29993 * C30137)) /
                         C29953;
    const double C30322 = C30020 + C30318;
    const double C30249 = C30243 + C30247;
    const double C30096 = C30091 + C30095;
    const double C2074 = (3 * (C30081 + C30089 * C30210) +
                          C29992 * (2 * C30215 + C29992 * C30220)) /
                         C29953;
    const double C30418 = C30020 + C30414;
    const double C30379 = C30373 + C30377;
    const double C30191 = C30189 * ae;
    const double C30199 = C30197 + C30198;
    const double C30536 = C30148 + C30535;
    const double C30592 = C30148 + C30590;
    const double C30304 = C30296 + C30302;
    const double C30644 = C30280 + C30642;
    const double C30718 = C29992 * C30715;
    const double C30354 = C30332 * ae;
    const double C30622 = C29993 * C30332;
    const double C30693 = C30177 + C30691;
    const double C30704 = C29992 * C30701;
    const double C30680 = C30676 + C30678;
    const double C30843 = C30842 / C30833;
    const double C31141 = 2 * C31107;
    const double C30852 = C30851 / C30830;
    const double C31145 = C31111 / C30848;
    const double C31170 = C31105 - C31140;
    const double C2688 = -C31140;
    const double C31184 = C31169 + C30840;
    const double C30925 = C30924 / C30833;
    const double C31149 = 2 * C31116;
    const double C30932 = C30931 / C30830;
    const double C31159 = C31125 / C30848;
    const double C31178 = C31119 - C31156;
    const double C2580 = -C31156;
    const double C31187 = C31174 + C30921;
    const double C30967 = C30966 / C30833;
    const double C31152 = 2 * C31118;
    const double C30974 = C30973 / C30830;
    const double C31165 = C31131 / C30848;
    const double C31181 = C31120 - C31162;
    const double C3342 = -C31162;
    const double C31188 = C31176 + C30963;
    const double C13267 = C13241 + C13242;
    const double C13265 = C13237 + C13238;
    const double C13264 = C13235 + C13236;
    const double C13262 = C13231 + C13232;
    const double C13455 = C13423 + C13424;
    const double C24766 = C24753 + C24754;
    const double C24764 = C24749 + C24750;
    const double C175 = C165 * C31063;
    const double C18922 = C165 * C18916;
    const double C174 = C164 * C114;
    const double C18921 = C164 * C18918;
    const double C13271 = C13249 + C13250;
    const double C13269 = C13245 + C13246;
    const double C13268 = C13243 + C13244;
    const double C13266 = C13239 + C13240;
    const double C13263 = C13233 + C13234;
    const double C13261 = C13229 + C13230;
    const double C13465 = C13443 + C13444;
    const double C13463 = C13439 + C13440;
    const double C13461 = C13435 + C13436;
    const double C13458 = C13429 + C13430;
    const double C13456 = C13425 + C13426;
    const double C13659 = C13637 + C13638;
    const double C13657 = C13633 + C13634;
    const double C13652 = C13623 + C13624;
    const double C13650 = C13619 + C13620;
    const double C24770 = C24761 + C24762;
    const double C24768 = C24757 + C24758;
    const double C24765 = C24751 + C24752;
    const double C24763 = C24747 + C24748;
    const double C25235 = C25229 + C25230;
    const double C25233 = C25225 + C25226;
    const double C26503 = C26487 + C26488;
    const double C358 = C31050 * C337;
    const double C13450 = C13222 * C337;
    const double C13446 = C13223 * C337;
    const double C362 = C31050 * C338;
    const double C13252 = C13223 * C338;
    const double C13798 = C13222 * C338;
    const double C158 = C113 * C131;
    const double C13255 = C13226 * C131;
    const double C357 = C113 * C323;
    const double C13449 = C13226 * C323;
    const double C13445 = C13227 * C323;
    const double C361 = C113 * C325;
    const double C13251 = C13227 * C325;
    const double C13797 = C13226 * C325;
    const double C560 = C113 * C526;
    const double C13643 = C13226 * C526;
    const double C564 = C113 * C528;
    const double C13939 = C13226 * C528;
    const double C998 = C113 * C981;
    const double C13639 = C13227 * C981;
    const double C14153 = C13226 * C981;
    const double C1479 = C113 * C1206;
    const double C13447 = C13227 * C1206;
    const double C1222 =
        (3 * (C30121 + ae * C30132 + C29993 * C30136) +
         ae * (2 * C30132 + C29993 * C30137) +
         C29993 *
             (2 * C30136 + ae * C30137 +
              C29993 * (C30020 + ae * C29993 * C30061 +
                        C29993 * (ae * C30061 + C29993 * C30000 * C30025)))) /
        C29955;
    const double C2239 = C113 * C1345;
    const double C13631 = C13227 * C1345;
    const double C15589 = C13226 * C1345;
    const double C1489 = C1483 + C1484;
    const double C13462 = C13437 + C13438;
    const double C14680 = C14673 + C14674;
    const double C9861 = C113 * C1356;
    const double C25629 = C13226 * C1356;
    const double C25617 = C13227 * C1356;
    const double C10225 = C113 * C1762;
    const double C25625 = C13227 * C1762;
    const double C26105 = C13226 * C1762;
    const double C30258 = C30251 + C30252;
    const double C30248 = C30245 + C30246;
    const double C30661 = C30041 + C30659;
    const double C561 = C31050 * C540;
    const double C13644 = C13222 * C540;
    const double C565 = C31050 * C541;
    const double C13940 = C13222 * C541;
    const double C999 = C31050 * C988;
    const double C13640 = C13223 * C988;
    const double C14154 = C13222 * C988;
    const double C157 = C31050 * C130;
    const double C13260 = C13222 * C130;
    const double C356 = C31050 * C322;
    const double C13454 = C13222 * C322;
    const double C13442 = C13223 * C322;
    const double C360 = C31050 * C324;
    const double C13248 = C13223 * C324;
    const double C13802 = C13222 * C324;
    const double C559 = C31050 * C525;
    const double C13648 = C13222 * C525;
    const double C563 = C31050 * C527;
    const double C13944 = C13222 * C527;
    const double C997 = C31050 * C980;
    const double C13636 = C13223 * C980;
    const double C14158 = C13222 * C980;
    const double C2360 = C31050 * C2067;
    const double C1362 = (ae * C30042 + C29993 * C30121 + ae * C29992 * C30155 +
                          C29992 * (ae * C30155 + C29992 * C30136)) /
                         C29955;
    const double C1365 =
        (ae * (C30081 + C29993 * C30155 + C29993 * C30153 * ae) +
         C29992 * (C30121 + ae * C30132 + C29993 * C30136)) /
        C29955;
    const double C1209 =
        (2 * (C29993 * C30081 + C30463 * ae) +
         C29993 * (C30081 + C29993 * C30155 + C29993 * C30153 * ae) +
         (C30463 + C30153 * C30127) * ae) /
        C29953;
    const double C1346 =
        (C29993 * C30081 + C30463 * ae + C30155 * C30210) / C29953;
    const double C1352 =
        (C29992 * (C30081 + C29993 * C30155 + C30529 * ae)) / C29953;
    const double C2082 =
        (3 * (C30121 + ae * C30215 + C29992 * C30219) +
         ae * (2 * C30215 + C29992 * C30220) +
         C29992 *
             (2 * C30219 + ae * C30220 +
              C29992 * (C30020 + ae * C29992 * C30100 +
                        C29992 * (ae * C30100 + C29992 * C30000 * C30025)))) /
        C29955;
    const double C30171 = C30080 + C30170;
    const double C30340 = C30337 + C30338;
    const double C10528 = C31050 * C2081;
    const double C26498 = C13222 * C2081;
    const double C10526 = C31050 * C2072;
    const double C26502 = C13222 * C2072;
    const double C30388 = C30381 + C30382;
    const double C30378 = C30375 + C30376;
    const double C30150 = C30146 + C30149;
    const double C30591 = C30588 + C30149;
    const double C2066 =
        (2 * (C29992 * C30047 + C30467 * ae) +
         C29992 * (C30047 + C29992 * (C29992 * C30055 + C30149) +
                   C29992 * C30148 * ae) +
         (C30467 + C30148 * C30210) * ae) /
        C29953;
    const double C30475 = C30473 + C30474;
    const double C1343 =
        (C29993 * C30047 + C29992 * (C29992 * C30139 + C30534 * ae) +
         C29992 * C30534 * ae) /
        C29953;
    const double C1334 = C29993 * C30467 + C30534 * C30210;
    const double C2472 =
        2 * C29992 * C30534 + C29992 * (C30534 + C30189 * C30210);
    const double C1645 = C113 * C1349;
    const double C14151 = C13227 * C1349;
    const double C1481 = C113 * C1200;
    const double C13451 = C13227 * C1200;
    const double C1647 = C113 * C1337;
    const double C14155 = C13227 * C1337;
    const double C2359 = C113 * C2060;
    const double C30692 = C30689 + C30179;
    const double C2476 =
        (2 * (C29992 * C30132 + C30529 * ae) +
         C29992 * (C30132 + C29992 * (C29992 * C30314 + C30179) +
                   C29992 * C30177 * ae) +
         (C30529 + C30177 * C30210) * ae) /
        C29953;
    const double C10689 = C113 * C2471;
    const double C15733 = C13227 * C2471;
    const double C30180 = C29993 * C30178;
    const double C30350 = 2 * C30178;
    const double C30404 = ae * C30178;
    const double C30403 = C29992 * C30178;
    const double C2480 =
        (2 * (ae * C30155 + C29992 * C30136) + ae * (C30155 + C30178 * C30210) +
         C29992 *
             (C30136 + ae * C29992 * C30178 +
              C29992 * (ae * C30178 +
                        C29992 * (ae * C30061 + C29993 * C30000 * C30025)))) /
        C29955;
    const double C2475 =
        (2 * C29992 * C30155 + C29992 * (C30155 + C30178 * C30210)) / C29953;
    const double C30703 = C29992 * C30699;
    const double C1358 =
        (C30042 + C30050 * C30127 + C29992 * (C29992 * C30137 + C30531 * ae) +
         C29992 * C30531 * ae) /
        C29953;
    const double C1764 = (C29992 * (2 * C30132 + C29993 * C30137) +
                          (2 * C30529 + C29993 * C30531) * ae) /
                         C29953;
    const double C1204 = 3 * (C30463 + C30153 * C30127) +
                         C29993 * (2 * C30529 + C29993 * C30531);
    const double C1341 = C30463 + C30153 * C30127 + C30531 * C30210;
    const double C1759 = C29992 * (2 * C30529 + C29993 * C30531);
    const double C6570 =
        2 * C29992 * C30531 + C29992 * (C30531 + C30332 * C30210);
    const double C2075 =
        (3 * (C30042 + C29992 * C30584 + C30582 * ae) +
         C29992 * (2 * C30584 +
                   C29992 * (C30050 + C29992 * (C29992 * C30061 + C30176) +
                             C29992 * C30175 * ae) +
                   C30585 * ae) +
         (2 * C30582 + C29992 * C30585) * ae) /
        C29953;
    const double C2064 = 3 * (C30463 + C30153 * C30210) +
                         C29992 * (2 * C30582 + C29992 * C30585);
    const double C30643 = C30640 + C30282;
    const double C6313 =
        (2 * (C29992 * C30130 + C30526 * ae) +
         C29992 * (C30130 + C29992 * (C29992 * C30244 + C30282) +
                   C29992 * C30280 * ae) +
         (C30526 + C30280 * C30210) * ae) /
        C29953;
    const double C30608 = C30606 + C30607;
    const double C9865 = C113 * C6310;
    const double C26969 = C13227 * C6310;
    const double C30717 = C29992 * C30713;
    const double C6317 =
        (3 * (C30124 + C29992 * C30637 + C30635 * ae) +
         C29992 * (2 * C30637 +
                   C29992 * (C30237 + C29992 * (C29992 * C30253 + C30279) +
                             C29992 * C30276 * ae) +
                   C30638 * ae) +
         (2 * C30635 + C29992 * C30638) * ae) /
        C29953;
    const double C6311 = 3 * (C30524 + C30167 * C30210) +
                         C29992 * (2 * C30635 + C29992 * C30638);
    const double C30283 = C30084 + C30281;
    const double C30341 = C30168 + C30339;
    const double C30430 = 2 * C30424;
    const double C30428 = ae * C30424;
    const double C30679 = C30045 + C30677;
    const double C30662 = C30658 + C30660;
    const double C30029 = C30023 + C30028;
    const double C30143 = C30140 + C30141;
    const double C30226 = C30223 + C30224;
    const double C1480 = C31050 * C1218;
    const double C13448 = C13223 * C1218;
    const double C2358 = C31050 * C2078;
    const double C30266 = C30263 + C30264;
    const double C30429 = C30425 + C30426;
    const double C30325 = C29993 * C30323;
    const double C30405 = C29992 * C30323;
    const double C30419 = C29992 * C30415;
    const double C30396 = C30393 + C30394;
    const double C30068 = C30063 + C30067;
    const double C30144 = C30055 + C30142;
    const double C30267 = C30261 + C30265;
    const double C30326 = C29993 * C30324;
    const double C30107 = C30102 + C30106;
    const double C30190 = C30184 + C30188;
    const double C30227 = C30094 + C30225;
    const double C30303 = C30092 + C30300;
    const double C30431 = C30278 + C30427;
    const double C30358 = C29993 * C30357;
    const double C30406 = C30357 * C30210;
    const double C30420 = C29992 * C30417;
    const double C30397 = C30391 + C30395;
    const double C177 = C167 * C31063;
    const double C18927 = C167 * C18916;
    const double C178 = C168 * C31063;
    const double C18930 = C168 * C18916;
    const double C379 = C367 * C31063;
    const double C19092 = C367 * C18916;
    const double C381 = C369 * C31063;
    const double C19085 = C369 * C18916;
    const double C384 = C372 * C31063;
    const double C19088 = C372 * C18916;
    const double C584 = C572 * C31063;
    const double C18924 = C572 * C18917;
    const double C19247 = C572 * C18916;
    const double C176 = C166 * C114;
    const double C18928 = C166 * C18918;
    const double C382 = C370 * C114;
    const double C19086 = C370 * C18918;
    const double C585 = C573 * C114;
    const double C18923 = C573 * C18919;
    const double C19248 = C573 * C18918;
    const double C9564 = C31050 * C1363;
    const double C24756 = C13223 * C1363;
    const double C25616 = C13222 * C1363;
    const double C9858 = C31050 * C1366;
    const double C25232 = C13223 * C1366;
    const double C25624 = C13222 * C1366;
    const double C9854 = C31050 * C2479;
    const double C26494 = C13223 * C2479;
    const double C26968 = C13222 * C2479;
    const double C9562 = C31050 * C1348;
    const double C24760 = C13223 * C1348;
    const double C25612 = C13222 * C1348;
    const double C9856 = C31050 * C1354;
    const double C25228 = C13223 * C1354;
    const double C25620 = C13222 * C1354;
    const double C9852 = C31050 * C2473;
    const double C26490 = C13223 * C2473;
    const double C26972 = C13222 * C2473;
    const double C10527 = C113 * C2073;
    const double C26497 = C13226 * C2073;
    const double C9213 = C9205 + C9206;
    const double C26505 = C26491 + C26492;
    const double C575 = C556 + C557;
    const double C13655 = C13629 + C13630;
    const double C1005 = C994 + C995;
    const double C13649 = C13617 + C13618;
    const double C14161 = C14147 + C14148;
    const double C2367 = C2361 + C2362;
    const double C15738 = C15731 + C15732;
    const double C371 = C351 + C352;
    const double C13459 = C13431 + C13432;
    const double C13457 = C13427 + C13428;
    const double C574 = C554 + C555;
    const double C13653 = C13625 + C13626;
    const double C1004 = C992 + C993;
    const double C13651 = C13621 + C13622;
    const double C14159 = C14143 + C14144;
    const double C2368 = C2363 + C2364;
    const double C15740 = C15735 + C15736;
    const double C582 = C570 * C31063;
    const double C18925 = C570 * C18917;
    const double C19254 = C570 * C18916;
    const double C179 = C169 * C114;
    const double C18929 = C169 * C18918;
    const double C380 = C368 * C114;
    const double C19091 = C368 * C18918;
    const double C583 = C571 * C114;
    const double C18926 = C571 * C18919;
    const double C19253 = C571 * C18918;
    const double C132 = (4 * (2 * C30042 + C30000 * C30047) +
                         C30000 * (3 * C30047 + C30000 * C30057)) /
                        C29953;
    const double C326 =
        (2 * C30042 + C30000 * C30047 + C30057 * C30127) / C29953;
    const double C328 = (C29993 * (3 * C30047 + C30000 * C30057)) / C29953;
    const double C14671 = C13227 * C1215;
    const double C5546 = (4 * (2 * C30124 + C29993 * C30130) +
                          C29993 * (3 * C30130 + C29993 * C30249)) /
                         C29953;
    const double C133 = (4 * (2 * C30081 + C30000 * C30086) +
                         C30000 * (3 * C30086 + C30000 * C30096)) /
                        C29953;
    const double C530 =
        (2 * C30081 + C30000 * C30086 + C30096 * C30210) / C29953;
    const double C532 = (C29992 * (3 * C30086 + C30000 * C30096)) / C29953;
    const double C10798 = C31050 * C2074;
    const double C10519 = (4 * (2 * C30207 + C29992 * C30213) +
                           C29992 * (3 * C30213 + C29992 * C30379)) /
                          C29953;
    const double C2478 =
        (2 * (C29992 * C30139 + C30534 * ae) +
         C29992 * (C30139 + C29992 * (C29992 * C29993 * C30066 + C30191) +
                   C29992 * C30189 * ae) +
         (C30534 + C30189 * C30210) * ae) /
        C29953;
    const double C30230 = C30199 * ae;
    const double C30480 = C30000 * C30199;
    const double C30595 = C29993 * C30199;
    const double C1205 = 3 * (C30467 + C30148 * C30127) +
                         C29993 * (2 * C30534 + C29993 * C30536);
    const double C1342 = C30467 + C30148 * C30127 + C30536 * C30210;
    const double C1760 = C29992 * (2 * C30534 + C29993 * C30536);
    const double C2065 = 3 * (C30467 + C30148 * C30210) +
                         C29992 * (2 * C30589 + C29992 * C30592);
    const double C30306 = C30304 * ae;
    const double C30611 = C29993 * C30304;
    const double C6312 = 3 * (C30526 + C30280 * C30210) +
                         C29992 * (2 * C30641 + C29992 * C30644);
    const double C30720 = C30716 + C30718;
    const double C6572 =
        (2 * (C29992 * C30137 + C30531 * ae) +
         C29992 * (C30137 + C29992 * (C29992 * C30324 + C30354) +
                   C29992 * C30332 * ae) +
         (C30531 + C30332 * C30210) * ae) /
        C29953;
    const double C30623 = C30621 + C30622;
    const double C10682 = 3 * (C30529 + C30177 * C30210) +
                          C29992 * (2 * C30690 + C29992 * C30693);
    const double C30706 = C30702 + C30704;
    const double C30682 = C29992 * C30680;
    const double C30844 = C30840 - C30843;
    const double C31171 = C31141 / C30830;
    const double C30853 = C30849 - C30852;
    const double C31185 = C31170 / C30834;
    const double C30926 = C30921 - C30925;
    const double C31175 = C31149 / C30830;
    const double C30933 = C30929 - C30932;
    const double C31189 = C31178 / C30834;
    const double C30968 = C30963 - C30967;
    const double C31177 = C31152 / C30830;
    const double C30975 = C30971 - C30974;
    const double C31191 = C31181 / C30834;
    const double C171 = C158 + C159;
    const double C13274 = C13255 + C13256;
    const double C374 = C357 + C358;
    const double C13468 = C13449 + C13450;
    const double C13466 = C13445 + C13446;
    const double C376 = C361 + C362;
    const double C13272 = C13251 + C13252;
    const double C13804 = C13797 + C13798;
    const double C14672 = C13223 * C1222;
    const double C1493 = C1489 * C31063;
    const double C20239 = C1489 * C18916;
    const double C5550 =
        (4 * (2 * C30128 + ae * C30130 + C29993 * C30248) +
         ae * (3 * C30130 + C29993 * C30249) +
         C29993 *
             (3 * C30248 + ae * C30249 +
              C29993 * (2 * C30242 + ae * C30244 +
                        C29993 * (C30016 + ae * C29993 * C30053 +
                                  C29993 * (ae * C30053 + C29993 * C30025))))) /
        C29955;
    const double C30663 = C30661 + C30656;
    const double C577 = C560 + C561;
    const double C13662 = C13643 + C13644;
    const double C579 = C564 + C565;
    const double C13946 = C13939 + C13940;
    const double C1007 = C998 + C999;
    const double C13660 = C13639 + C13640;
    const double C14164 = C14153 + C14154;
    const double C170 = C156 + C157;
    const double C13276 = C13259 + C13260;
    const double C373 = C355 + C356;
    const double C13470 = C13453 + C13454;
    const double C13464 = C13441 + C13442;
    const double C375 = C359 + C360;
    const double C13270 = C13247 + C13248;
    const double C13806 = C13801 + C13802;
    const double C576 = C558 + C559;
    const double C13664 = C13647 + C13648;
    const double C578 = C562 + C563;
    const double C13948 = C13943 + C13944;
    const double C1006 = C996 + C997;
    const double C13658 = C13635 + C13636;
    const double C14166 = C14157 + C14158;
    const double C2240 = C31050 * C1362;
    const double C13632 = C13223 * C1362;
    const double C15590 = C13222 * C1362;
    const double C1650 = C31050 * C1365;
    const double C14150 = C13223 * C1365;
    const double C14880 = C13222 * C1365;
    const double C1486 = C31050 * C1209;
    const double C13434 = C13223 * C1209;
    const double C14678 = C13222 * C1209;
    const double C2242 = C31050 * C1346;
    const double C13628 = C13223 * C1346;
    const double C15594 = C13222 * C1346;
    const double C1652 = C31050 * C1352;
    const double C14146 = C13223 * C1352;
    const double C14884 = C13222 * C1352;
    const double C10796 = C31050 * C2082;
    const double C30172 = C30171 + C30169;
    const double C10533 = C10525 + C10526;
    const double C26510 = C26501 + C26502;
    const double C10522 =
        (4 * (2 * C30211 + ae * C30213 + C29992 * C30378) +
         ae * (3 * C30213 + C29992 * C30379) +
         C29992 *
             (3 * C30378 + ae * C30379 +
              C29992 * (2 * C30372 + ae * C30374 +
                        C29992 * (C30016 + ae * C29992 * C30092 +
                                  C29992 * (ae * C30092 + C29992 * C30025))))) /
        C29955;
    const double C1207 =
        (2 * (C29993 * C30086 + C30467 * ae) +
         C29993 * (C30086 + C29993 * C30150 + C29993 * C30148 * ae) +
         (C30467 + C30148 * C30127) * ae) /
        C29953;
    const double C1344 =
        (C29993 * C30086 + C30467 * ae + C30150 * C30210) / C29953;
    const double C1350 =
        (C29992 * (C30086 + C29993 * C30150 + C30534 * ae)) / C29953;
    const double C2077 =
        (3 * (C30047 + C29992 * C30591 + C30589 * ae) +
         C29992 * (2 * C30591 +
                   C29992 * (C30055 + C29992 * (C29992 * C30066 + C30188) +
                             C29992 * C30187 * ae) +
                   C30592 * ae) +
         (2 * C30589 + C29992 * C30592) * ae) /
        C29953;
    const double C2357 = C113 * C2066;
    const double C327 =
        (2 * C30081 + C30000 * C30086 +
         C29993 * (C29993 * C30096 + C30475 * ae) + C29993 * C30475 * ae) /
        C29953;
    const double C329 = (C29993 * (3 * C30086 + C30000 * C30096) +
                         (3 * C30467 + C30000 * C30475) * ae) /
                        C29953;
    const double C529 =
        (2 * C30042 + C30000 * C30047 +
         C29992 * (C29992 * C30057 + C30475 * ae) + C29992 * C30475 * ae) /
        C29953;
    const double C531 = (C29992 * (3 * C30047 + C30000 * C30057) +
                         (3 * C30467 + C30000 * C30475) * ae) /
                        C29953;
    const double C982 =
        (C29992 * C29993 * C30057 + C29993 * C30475 * ae) / C29953;
    const double C983 = (C29992 * (C29993 * C30096 + C30475 * ae)) / C29953;
    const double C120 = 4 * (2 * C30463 + C30000 * C30467) +
                        C30000 * (3 * C30467 + C30000 * C30475);
    const double C309 = 2 * C30463 + C30000 * C30467 + C30475 * C30127;
    const double C310 = C29993 * (3 * C30467 + C30000 * C30475);
    const double C512 = 2 * C30463 + C30000 * C30467 + C30475 * C30210;
    const double C513 = C29992 * (3 * C30467 + C30000 * C30475);
    const double C974 = C29992 * C29993 * C30475;
    const double C1474 =
        2 * C29993 * C30475 + C29993 * (C30475 + C30199 * C30127);
    const double C1640 = C29992 * (C30475 + C30199 * C30127);
    const double C2352 =
        2 * C29992 * C30475 + C29992 * (C30475 + C30199 * C30210);
    const double C2235 = C113 * C1343;
    const double C13641 = C13227 * C1343;
    const double C2237 = C113 * C1334;
    const double C13645 = C13227 * C1334;
    const double C2366 = C2359 + C2360;
    const double C10684 =
        (3 * (C30132 + C29992 * C30692 + C30690 * ae) +
         C29992 *
             (2 * C30692 +
              C29992 * (C30314 + C29992 * (C29992 * C29993 * C30317 + C30356) +
                        C29992 * C30353 * ae) +
              C30693 * ae) +
         (2 * C30690 + C29992 * C30693) * ae) /
        C29953;
    const double C10687 = C113 * C2476;
    const double C15729 = C13227 * C2476;
    const double C30181 = C30089 + C30180;
    const double C10688 = C31050 * C2480;
    const double C15730 = C13223 * C2480;
    const double C10690 = C31050 * C2475;
    const double C15734 = C13223 * C2475;
    const double C30705 = C30050 + C30703;
    const double C10121 = C113 * C1358;
    const double C15587 = C13227 * C1358;
    const double C14877 = C13227 * C1764;
    const double C20235 = C113 * C1764;
    const double C14675 = C13227 * C1204;
    const double C10119 = C113 * C1341;
    const double C15591 = C13227 * C1341;
    const double C14881 = C13227 * C1759;
    const double C20237 = C113 * C1759;
    const double C10795 = C113 * C2075;
    const double C10797 = C113 * C2064;
    const double C6318 =
        (3 * (C30130 + C29992 * C30643 + C30641 * ae) +
         C29992 * (2 * C30643 +
                   C29992 * (C30244 + C29992 * (C29992 * C30262 + C30301) +
                             C29992 * C30299 * ae) +
                   C30644 * ae) +
         (2 * C30641 + C29992 * C30644) * ae) /
        C29953;
    const double C9863 = C113 * C6313;
    const double C26965 = C13227 * C6313;
    const double C5665 =
        (2 * C30124 + C29993 * C30130 +
         C29992 * (C29992 * C30249 + C30608 * ae) + C29992 * C30608 * ae) /
        C29953;
    const double C5667 = (C29992 * (3 * C30130 + C29993 * C30249) +
                          (3 * C30526 + C29993 * C30608) * ae) /
                         C29953;
    const double C5544 = 4 * (2 * C30524 + C29993 * C30526) +
                         C29993 * (3 * C30526 + C29993 * C30608);
    const double C5662 = 2 * C30524 + C29993 * C30526 + C30608 * C30210;
    const double C5663 = C29992 * (3 * C30526 + C29993 * C30608);
    const double C6672 =
        2 * C29992 * C30608 + C29992 * (C30608 + C30304 * C30210);
    const double C30719 = C30237 + C30717;
    const double C10903 = C113 * C6317;
    const double C26495 = C13227 * C6317;
    const double C10905 = C113 * C6311;
    const double C26499 = C13227 * C6311;
    const double C30284 = C30283 + C30279;
    const double C6320 =
        (3 * (C30128 + ae * C30336 + C29992 * C30340) +
         ae * (2 * C30336 + C29992 * C30341) +
         C29992 * (2 * C30340 + ae * C30341 +
                   C29992 * (C30242 + ae * C29992 * C30278 +
                             C29992 * (ae * C30278 + C29992 * C30260)))) /
        C29955;
    const double C6315 = (3 * (C30160 + C30168 * C30210) +
                          C29992 * (2 * C30336 + C29992 * C30341)) /
                         C29953;
    const double C30432 = C30242 + C30428;
    const double C30681 = C30679 + C30674;
    const double C10516 = 4 * (2 * C30575 + C29992 * C30578) +
                          C29992 * (3 * C30578 + C29992 * C30662);
    const double C142 =
        (5 * (3 * C30018 + C30000 * C30029) +
         C30000 * (4 * C30029 +
                   C30000 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C339 =
        (2 * C30000 * C30011 + C30000 * C30018 + ae * C29993 * C30057 +
         C29993 * (ae * C30057 + C29993 * C30029)) /
        C29955;
    const double C340 = (ae * (3 * C30047 + C30000 * C30057) +
                         C29993 * (3 * C30018 + C30000 * C30029)) /
                        C29955;
    const double C542 =
        (2 * C30000 * C30011 + C30000 * C30018 + ae * C29992 * C30096 +
         C29992 * (ae * C30096 + C29992 * C30029)) /
        C29955;
    const double C543 = (ae * (3 * C30086 + C30000 * C30096) +
                         C29992 * (3 * C30018 + C30000 * C30029)) /
                        C29955;
    const double C989 = (ae * (C29993 * C30096 +
                               (2 * C30000 * C30116 +
                                C30000 * (C30116 + C30007 * C30009 * C30008)) *
                                   ae) +
                         C29992 * (ae * C30057 + C29993 * C30029)) /
                        C29955;
    const double C1361 = (ae * C30047 + C29993 * C30018 + ae * C29992 * C30150 +
                          C29992 * (ae * C30150 + C29992 * C30143)) /
                         C29955;
    const double C1364 =
        (ae * (C30086 + C29993 * C30150 + C29993 * C30148 * ae) +
         C29992 * (C30018 + ae * C30139 + C29993 * C30143)) /
        C29955;
    const double C1487 = C1479 + C1480;
    const double C13467 = C13447 + C13448;
    const double C30268 = C29993 * C30266;
    const double C30345 = C29992 * C30266;
    const double C30433 = C29992 * C30429;
    const double C30327 = C30322 + C30325;
    const double C30407 = C30404 + C30405;
    const double C30421 = C30418 + C30419;
    const double C30398 = C29992 * C30396;
    const double C30069 = C30000 * C30068;
    const double C1477 =
        (2 * (ae * C30057 + C29993 * C30029) + ae * (C30057 + C30068 * C30127) +
         C29993 * (C30029 + ae * C29993 * C30068 +
                   C29993 * (ae * C30068 +
                             C29993 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C1476 =
        (2 * C29993 * C30057 + C29993 * (C30057 + C30068 * C30127)) / C29953;
    const double C1642 = (C29992 * (C30057 + C30068 * C30127) +
                          (C30475 + C30199 * C30127) * ae) /
                         C29953;
    const double C1223 =
        (3 * (C30018 + ae * C30139 + C29993 * C30143) +
         ae * (2 * C30139 + C29993 * C30144) +
         C29993 * (2 * C30143 + ae * C30144 +
                   C29993 * (C30027 + ae * C29993 * C30066 +
                             C29993 * (ae * C30066 +
                                       C29993 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C1217 = (3 * (C30047 + C30055 * C30127) +
                          C29993 * (2 * C30139 + C29993 * C30144)) /
                         C29953;
    const double C1360 =
        (C30047 + C30055 * C30127 + C29992 * (C29992 * C30144 + C30536 * ae) +
         C29992 * C30536 * ae) /
        C29953;
    const double C1766 = (C29992 * (2 * C30139 + C29993 * C30144) +
                          (2 * C30534 + C29993 * C30536) * ae) /
                         C29953;
    const double C30269 = C29993 * C30267;
    const double C30328 = C30320 + C30326;
    const double C30108 = C30000 * C30107;
    const double C30229 = C29993 * C30107;
    const double C1643 =
        (ae * (C30096 + C29993 * (C29993 * C30107 + C30199 * ae) +
               C29993 * C30199 * ae) +
         C29992 * (C30029 + ae * C29993 * C30068 +
                   C29993 * (ae * C30068 +
                             C29993 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C2355 =
        (2 * (ae * C30096 + C29992 * C30029) + ae * (C30096 + C30107 * C30210) +
         C29992 * (C30029 + ae * C29992 * C30107 +
                   C29992 * (ae * C30107 +
                             C29992 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C2353 =
        (2 * C29992 * C30096 + C29992 * (C30096 + C30107 * C30210)) / C29953;
    const double C30192 = C29993 * C30190;
    const double C2481 =
        (2 * (ae * C30150 + C29992 * C30143) + ae * (C30150 + C30190 * C30210) +
         C29992 * (C30143 + ae * C29992 * C30190 +
                   C29992 * (ae * C30190 +
                             C29992 * (ae * C30066 +
                                       C29993 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C2477 =
        (2 * C29992 * C30150 + C29992 * (C30150 + C30190 * C30210)) / C29953;
    const double C2083 =
        (3 * (C30018 + ae * C30222 + C29992 * C30226) +
         ae * (2 * C30222 + C29992 * C30227) +
         C29992 * (2 * C30226 + ae * C30227 +
                   C29992 * (C30027 + ae * C29992 * C30105 +
                             C29992 * (ae * C30105 +
                                       C29992 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C2076 = (3 * (C30086 + C30094 * C30210) +
                          C29992 * (2 * C30222 + C29992 * C30227)) /
                         C29953;
    const double C30305 = C30303 + C30298;
    const double C30434 = C29992 * C30431;
    const double C30359 = C30100 + C30358;
    const double C30408 = C30178 + C30406;
    const double C30422 = C30416 + C30420;
    const double C30399 = C29992 * C30397;
    const double C184 = C176 + C177;
    const double C9568 = C9563 + C9564;
    const double C24767 = C24755 + C24756;
    const double C25637 = C25615 + C25616;
    const double C9870 = C9857 + C9858;
    const double C25236 = C25231 + C25232;
    const double C25641 = C25623 + C25624;
    const double C9868 = C9853 + C9854;
    const double C26506 = C26493 + C26494;
    const double C26974 = C26967 + C26968;
    const double C9567 = C9561 + C9562;
    const double C24769 = C24759 + C24760;
    const double C25635 = C25611 + C25612;
    const double C9869 = C9855 + C9856;
    const double C25234 = C25227 + C25228;
    const double C25639 = C25619 + C25620;
    const double C9867 = C9851 + C9852;
    const double C26504 = C26489 + C26490;
    const double C26976 = C26971 + C26972;
    const double C10534 = C10527 + C10528;
    const double C26508 = C26497 + C26498;
    const double C587 = C575 * C31063;
    const double C19250 = C575 * C18916;
    const double C19245 = C575 * C18917;
    const double C1011 = C1005 * C31063;
    const double C19083 = C1005 * C18917;
    const double C19724 = C1005 * C18916;
    const double C2371 = C2367 * C31063;
    const double C19252 = C2367 * C18917;
    const double C21277 = C2367 * C18916;
    const double C383 = C371 * C114;
    const double C19087 = C371 * C18918;
    const double C586 = C574 * C114;
    const double C19249 = C574 * C18918;
    const double C19246 = C574 * C18919;
    const double C1010 = C1004 * C114;
    const double C19084 = C1004 * C18919;
    const double C19723 = C1004 * C18918;
    const double C2372 = C2368 * C114;
    const double C19251 = C2368 * C18919;
    const double C21278 = C2368 * C18918;
    const double C185 = C178 + C179;
    const double C391 = C379 + C380;
    const double C594 = C582 + C583;
    const double C160 = C113 * C132;
    const double C363 = C113 * C326;
    const double C13795 = C13227 * C326;
    const double C705 = C113 * C328;
    const double C13253 = C13227 * C328;
    const double C163 = C31050 * C133;
    const double C569 = C31050 * C530;
    const double C821 = C31050 * C532;
    const double C10532 = C31050 * C10519;
    const double C2354 =
        (2 * (C29992 * C30057 + C30475 * ae) +
         C29992 * (C30057 + C29992 * (C29992 * C30068 + C30230) +
                   C29992 * C30199 * ae) +
         (C30475 + C30199 * C30210) * ae) /
        C29953;
    const double C30481 = C30479 + C30480;
    const double C2232 =
        (C29993 * C30057 + C29992 * (C29992 * C29993 * C30068 + C30595 * ae) +
         C29992 * C30595 * ae) /
        C29953;
    const double C2230 = C29993 * C30475 + C30595 * C30210;
    const double C6674 =
        (2 * (C29992 * C30249 + C30608 * ae) +
         C29992 * (C30249 + C29992 * (C29992 * C30267 + C30306) +
                   C29992 * C30304 * ae) +
         (C30608 + C30304 * C30210) * ae) /
        C29953;
    const double C30612 = C30610 + C30611;
    const double C10898 = 4 * (2 * C30635 + C29992 * C30638) +
                          C29992 * (3 * C30638 + C29992 * C30720);
    const double C5772 = 4 * (2 * C30529 + C29993 * C30531) +
                         C29993 * (3 * C30531 + C29993 * C30623);
    const double C5922 = C29992 * (3 * C30531 + C29993 * C30623);
    const double C6468 = 2 * C30529 + C29993 * C30531 + C30623 * C30210;
    const double C10790 = 4 * (2 * C30582 + C29992 * C30585) +
                          C29992 * (3 * C30585 + C29992 * C30706);
    const double C30684 = C30672 + C30682;
    const double C31104 = C30844 * C30832;
    const double C31143 = C31109 + C30844;
    const double C31112 = C30853 / C30834;
    const double C31108 = C30853 * C30832;
    const double C695 = C31185 - (C30844 * C30835) / C30830;
    const double C31122 = C30926 * C30920;
    const double C31158 = C31124 + C30926;
    const double C31126 = C30933 / C30834;
    const double C31123 = C30933 * C30920;
    const double C1468 = C31189 - (C30926 * C30922) / C30830;
    const double C31128 = C30968 * C30962;
    const double C31164 = C31130 + C30968;
    const double C31132 = C30975 / C30834;
    const double C31129 = C30975 * C30962;
    const double C2348 = C31191 - (C30968 * C30964) / C30830;
    const double C181 = C171 * C31063;
    const double C18935 = C171 * C18916;
    const double C386 = C374 * C31063;
    const double C19097 = C374 * C18916;
    const double C388 = C376 * C31063;
    const double C19393 = C376 * C18916;
    const double C14679 = C14671 + C14672;
    const double C10518 =
        (4 * (2 * C30577 + C29992 * C30663 + C30578 * ae) +
         C29992 *
             (3 * C30663 +
              C29992 * (2 * C30655 +
                        C29992 * (C30045 + C29992 * (C29992 * C30053 + C30275) +
                                  C29992 * C30118 * ae) +
                        C30657 * ae) +
              C30662 * ae) +
         (3 * C30578 + C29992 * C30662) * ae) /
        C29953;
    const double C589 = C577 * C31063;
    const double C19259 = C577 * C18916;
    const double C19256 = C577 * C18917;
    const double C591 = C579 * C31063;
    const double C18932 = C579 * C18917;
    const double C19527 = C579 * C18916;
    const double C1013 = C1007 * C31063;
    const double C19094 = C1007 * C18917;
    const double C19729 = C1007 * C18916;
    const double C180 = C170 * C114;
    const double C18936 = C170 * C18918;
    const double C385 = C373 * C114;
    const double C19098 = C373 * C18918;
    const double C387 = C375 * C114;
    const double C19394 = C375 * C18918;
    const double C588 = C576 * C114;
    const double C19260 = C576 * C18918;
    const double C19255 = C576 * C18919;
    const double C590 = C578 * C114;
    const double C18931 = C578 * C18919;
    const double C19528 = C578 * C18918;
    const double C1012 = C1006 * C114;
    const double C19093 = C1006 * C18919;
    const double C19730 = C1006 * C18918;
    const double C2245 = C2239 + C2240;
    const double C13656 = C13631 + C13632;
    const double C15596 = C15589 + C15590;
    const double C1655 = C1649 + C1650;
    const double C14162 = C14149 + C14150;
    const double C14886 = C14879 + C14880;
    const double C1490 = C1485 + C1486;
    const double C13460 = C13433 + C13434;
    const double C14682 = C14677 + C14678;
    const double C2246 = C2241 + C2242;
    const double C13654 = C13627 + C13628;
    const double C15598 = C15593 + C15594;
    const double C1656 = C1651 + C1652;
    const double C14160 = C14145 + C14146;
    const double C14888 = C14883 + C14884;
    const double C1367 =
        (C30004 + ae * C30124 + C29993 * C30128 + ae * C29992 * C30172 +
         C29992 * (ae * C30172 +
                   C29992 * (C30011 + ae * C29993 * C30045 +
                             C29993 * (ae * C30045 + C29993 * C30016)))) /
        C29955;
    const double C1767 =
        (ae * (2 * C30160 + C29993 * C30172 + (C30158 + C30116 * C30127) * ae) +
         C29992 * (2 * C30128 + ae * C30130 +
                   C29993 * (C30011 + ae * C29993 * C30045 +
                             C29993 * (ae * C30045 + C29993 * C30016)))) /
        C29955;
    const double C1212 =
        (3 * (C30077 + C29993 * C30160 + C30524 * ae) +
         C29993 * (2 * C30160 + C29993 * C30172 + C30526 * ae) +
         (2 * C30524 + C29993 * C30526) * ae) /
        C29953;
    const double C1355 =
        (C30077 + C29993 * C30160 + C30524 * ae + C30172 * C30210) / C29953;
    const double C1761 =
        (C29992 * (2 * C30160 + C29993 * C30172 + C30526 * ae)) / C29953;
    const double C10530 = C31050 * C10522;
    const double C1482 = C31050 * C1207;
    const double C13452 = C13223 * C1207;
    const double C2238 = C31050 * C1344;
    const double C13646 = C13223 * C1344;
    const double C1648 = C31050 * C1350;
    const double C14156 = C13223 * C1350;
    const double C2365 = C2357 + C2358;
    const double C366 = C31050 * C327;
    const double C13800 = C13223 * C327;
    const double C708 = C31050 * C329;
    const double C13258 = C13223 * C329;
    const double C566 = C113 * C529;
    const double C818 = C113 * C531;
    const double C1000 = C113 * C982;
    const double C13937 = C13227 * C982;
    const double C1003 = C31050 * C983;
    const double C13942 = C13223 * C983;
    const double C162 = C113 * C120;
    const double C365 = C113 * C309;
    const double C13799 = C13227 * C309;
    const double C707 = C113 * C310;
    const double C13257 = C13227 * C310;
    const double C568 = C113 * C512;
    const double C820 = C113 * C513;
    const double C1002 = C113 * C974;
    const double C13941 = C13227 * C974;
    const double C2370 = C2366 * C114;
    const double C19258 = C2366 * C18919;
    const double C30182 = C30181 + C30179;
    const double C10691 = C10687 + C10688;
    const double C15737 = C15729 + C15730;
    const double C10692 = C10689 + C10690;
    const double C15739 = C15733 + C15734;
    const double C30707 = C30705 + C30700;
    const double C10799 = C10795 + C10796;
    const double C10800 = C10797 + C10798;
    const double C10229 = C113 * C5665;
    const double C25627 = C13227 * C5665;
    const double C26107 = C13227 * C5667;
    const double C10227 = C113 * C5662;
    const double C25631 = C13227 * C5662;
    const double C26103 = C13227 * C5663;
    const double C30721 = C30719 + C30714;
    const double C30285 = C29993 * C30284;
    const double C30290 = 3 * C30284;
    const double C30344 = ae * C30284;
    const double C30343 = C29992 * C30284;
    const double C6319 =
        (2 * (ae * C30172 + C29992 * C30248) + ae * (C30172 + C30284 * C30210) +
         C29992 * (C30248 + ae * C29992 * C30284 +
                   C29992 * (ae * C30284 + C29992 * C30266))) /
        C29955;
    const double C6314 =
        (2 * C29992 * C30172 + C29992 * (C30172 + C30284 * C30210)) / C29953;
    const double C10904 = C31050 * C6320;
    const double C26496 = C13223 * C6320;
    const double C10906 = C31050 * C6315;
    const double C26500 = C13223 * C6315;
    const double C30683 = C29992 * C30681;
    const double C10531 = C113 * C10516;
    const double C364 = C31050 * C339;
    const double C13796 = C13223 * C339;
    const double C706 = C31050 * C340;
    const double C13254 = C13223 * C340;
    const double C567 = C31050 * C542;
    const double C819 = C31050 * C543;
    const double C1001 = C31050 * C989;
    const double C13938 = C13223 * C989;
    const double C2236 = C31050 * C1361;
    const double C13642 = C13223 * C1361;
    const double C1646 = C31050 * C1364;
    const double C14152 = C13223 * C1364;
    const double C1491 = C1487 * C31063;
    const double C30270 = C30258 + C30268;
    const double C30435 = C30432 + C30433;
    const double C30400 = C30388 + C30398;
    const double C30070 = C30060 + C30069;
    const double C30271 = C30256 + C30269;
    const double C5775 =
        (4 * (2 * C30136 + ae * C30137 + C29993 * C30327) +
         ae * (3 * C30137 + C29993 * C30328) +
         C29993 * (3 * C30327 + ae * C30328 +
                   C29993 * (2 * C30323 + ae * C30324 +
                             C29993 * (C30316 + ae * C29993 * C30317 +
                                       C29993 * (ae * C30317 +
                                                 C29993 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C5774 = (4 * (2 * C30132 + C29993 * C30137) +
                          C29993 * (3 * C30137 + C29993 * C30328)) /
                         C29953;
    const double C5924 = (C29992 * (3 * C30137 + C29993 * C30328) +
                          (3 * C30531 + C29993 * C30623) * ae) /
                         C29953;
    const double C6470 =
        (2 * C30132 + C29993 * C30137 +
         C29992 * (C29992 * C30328 + C30623 * ae) + C29992 * C30623 * ae) /
        C29953;
    const double C30109 = C30099 + C30108;
    const double C30231 = C30229 + C30230;
    const double C30193 = C30094 + C30192;
    const double C30307 = C29993 * C30305;
    const double C30346 = C30305 * C30210;
    const double C30436 = C30430 + C30434;
    const double C30360 = C30359 + C30356;
    const double C10685 =
        (3 * (C30136 + ae * C30403 + C29992 * C30407) +
         ae * (2 * C30403 + C29992 * C30408) +
         C29992 * (2 * C30407 + ae * C30408 +
                   C29992 * (C30323 + ae * C29992 * C30357 +
                             C29992 * (ae * C30357 +
                                       C29992 * (ae * C30317 +
                                                 C29993 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C10683 = (3 * (C30155 + C30178 * C30210) +
                           C29992 * (2 * C30403 + C29992 * C30408)) /
                          C29953;
    const double C10793 =
        (4 * (2 * C30219 + ae * C30220 + C29992 * C30421) +
         ae * (3 * C30220 + C29992 * C30422) +
         C29992 * (3 * C30421 + ae * C30422 +
                   C29992 * (2 * C30415 + ae * C30417 +
                             C29992 * (C30316 + ae * C29992 * C30351 +
                                       C29992 * (ae * C30351 +
                                                 C29992 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C10791 = (4 * (2 * C30215 + C29992 * C30220) +
                           C29992 * (3 * C30220 + C29992 * C30422)) /
                          C29953;
    const double C30401 = C30386 + C30399;
    const double C172 = C160 + C161;
    const double C121 = 5 * (3 * C30467 + C30000 * C30475) +
                        C30000 * (4 * C30475 + C30000 * C30481);
    const double C311 = 3 * C30467 + C30000 * C30475 + C30481 * C30127;
    const double C514 = 3 * C30467 + C30000 * C30475 + C30481 * C30210;
    const double C699 = C29993 * (4 * C30475 + C30000 * C30481);
    const double C812 = C29992 * (4 * C30475 + C30000 * C30481);
    const double C975 = C29992 * C29993 * C30481;
    const double C5545 = 5 * (3 * C30526 + C29993 * C30608) +
                         C29993 * (4 * C30608 + C29993 * C30612);
    const double C5664 = 3 * C30526 + C29993 * C30608 + C30612 * C30210;
    const double C6024 = C29992 * (4 * C30608 + C29993 * C30612);
    const double C10517 = 5 * (3 * C30578 + C29992 * C30662) +
                          C29992 * (4 * C30662 + C29992 * C30684);
    const double C31139 = C31104 / C30830;
    const double C31172 = C31143 / C30834;
    const double C31173 = C31145 + C31112;
    const double C697 = C31112 - C30851 / C30848;
    const double C31142 = C31108 / C30830;
    const double C31155 = C31122 / C30830;
    const double C31179 = C31158 / C30834;
    const double C31180 = C31159 + C31126;
    const double C1470 = C31126 - C30931 / C30848;
    const double C31157 = C31123 / C30830;
    const double C31161 = C31128 / C30830;
    const double C31182 = C31164 / C30834;
    const double C31183 = C31165 + C31132;
    const double C2350 = C31132 - C30973 / C30848;
    const double C31163 = C31129 / C30830;
    const double C10529 = C113 * C10518;
    const double C186 = C180 + C181;
    const double C392 = C385 + C386;
    const double C704 = C387 + C388;
    const double C595 = C588 + C589;
    const double C817 = C590 + C591;
    const double C1016 = C1012 + C1013;
    const double C2249 = C2245 * C31063;
    const double C19726 = C2245 * C18917;
    const double C21143 = C2245 * C18916;
    const double C1659 = C1655 * C31063;
    const double C19090 = C1655 * C18917;
    const double C20441 = C1655 * C18916;
    const double C1494 = C1490 * C114;
    const double C20240 = C1490 * C18918;
    const double C2250 = C2246 * C114;
    const double C19725 = C2246 * C18919;
    const double C21144 = C2246 * C18918;
    const double C1660 = C1656 * C114;
    const double C19089 = C1656 * C18919;
    const double C20442 = C1656 * C18918;
    const double C9862 = C31050 * C1367;
    const double C25630 = C13222 * C1367;
    const double C25618 = C13223 * C1367;
    const double C10226 = C31050 * C1767;
    const double C25626 = C13223 * C1767;
    const double C26106 = C13222 * C1767;
    const double C9860 = C31050 * C1355;
    const double C25634 = C13222 * C1355;
    const double C25614 = C13223 * C1355;
    const double C10224 = C31050 * C1761;
    const double C25622 = C13223 * C1761;
    const double C26102 = C13222 * C1761;
    const double C1488 = C1481 + C1482;
    const double C13469 = C13451 + C13452;
    const double C2244 = C2237 + C2238;
    const double C13663 = C13645 + C13646;
    const double C1654 = C1647 + C1648;
    const double C14165 = C14155 + C14156;
    const double C2369 = C2365 * C31063;
    const double C19257 = C2365 * C18917;
    const double C173 = C162 + C163;
    const double C378 = C365 + C366;
    const double C13805 = C13799 + C13800;
    const double C710 = C707 + C708;
    const double C13275 = C13257 + C13258;
    const double C581 = C568 + C569;
    const double C823 = C820 + C821;
    const double C1009 = C1002 + C1003;
    const double C13947 = C13941 + C13942;
    const double C1368 =
        (C30121 + ae * C30132 + C29993 * C30136 + ae * C29992 * C30182 +
         C29992 *
             (ae * C30182 +
              C29992 * (C30020 + ae * C29993 * C30061 +
                        C29993 * (ae * C30061 + C29993 * C30000 * C30025)))) /
        C29955;
    const double C1768 =
        (ae * (2 * C30155 + C29993 * C30182 + (C30153 + C30175 * C30127) * ae) +
         C29992 *
             (2 * C30136 + ae * C30137 +
              C29993 * (C30020 + ae * C29993 * C30061 +
                        C29993 * (ae * C30061 + C29993 * C30000 * C30025)))) /
        C29955;
    const double C5925 =
        (ae * (3 * C30182 +
               C29993 * (2 * C30178 +
                         C29993 * (C30100 +
                                   C29993 * (C29993 * C30000 * C30103 +
                                             C30330 * ae) +
                                   C29993 * C30330 * ae) +
                         C30332 * ae) +
               (2 * C30177 + C29993 * C30332) * ae) +
         C29992 * (3 * C30327 + ae * C30328 +
                   C29993 * (2 * C30323 + ae * C30324 +
                             C29993 * (C30316 + ae * C29993 * C30317 +
                                       C29993 * (ae * C30317 +
                                                 C29993 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C1214 =
        (3 * (C30081 + C29993 * C30155 + C30529 * ae) +
         C29993 * (2 * C30155 + C29993 * C30182 + C30531 * ae) +
         (2 * C30529 + C29993 * C30531) * ae) /
        C29953;
    const double C1357 =
        (C30081 + C29993 * C30155 + C30529 * ae + C30182 * C30210) / C29953;
    const double C1763 =
        (C29992 * (2 * C30155 + C29993 * C30182 + C30531 * ae)) / C29953;
    const double C21141 = C10691 * C18917;
    const double C21142 = C10692 * C18919;
    const double C10792 =
        (4 * (2 * C30584 + C29992 * C30707 + C30585 * ae) +
         C29992 *
             (3 * C30707 +
              C29992 * (2 * C30699 +
                        C29992 * (C30061 + C29992 * (C29992 * C30317 + C30352) +
                                  C29992 * C30330 * ae) +
                        C30701 * ae) +
              C30706 * ae) +
         (3 * C30585 + C29992 * C30706) * ae) /
        C29953;
    const double C21275 = C10799 * C18917;
    const double C21276 = C10800 * C18919;
    const double C10900 =
        (4 * (2 * C30637 + C29992 * C30721 + C30638 * ae) +
         C29992 *
             (3 * C30721 +
              C29992 * (2 * C30713 +
                        C29992 * (C30253 +
                                  C29992 * (C29992 * C29993 * C30064 + C30298) +
                                  C29992 * C30294 * ae) +
                        C30715 * ae) +
              C30720 * ae) +
         (3 * C30638 + C29992 * C30720) * ae) /
        C29953;
    const double C30286 = C30273 + C30285;
    const double C30347 = C30344 + C30345;
    const double C9864 = C31050 * C6319;
    const double C26966 = C13223 * C6319;
    const double C9866 = C31050 * C6314;
    const double C26970 = C13223 * C6314;
    const double C10907 = C10903 + C10904;
    const double C26507 = C26495 + C26496;
    const double C10908 = C10905 + C10906;
    const double C26509 = C26499 + C26500;
    const double C30685 = C30667 + C30683;
    const double C10536 = C10531 + C10532;
    const double C377 = C363 + C364;
    const double C13803 = C13795 + C13796;
    const double C709 = C705 + C706;
    const double C13273 = C13253 + C13254;
    const double C580 = C566 + C567;
    const double C822 = C818 + C819;
    const double C1008 = C1000 + C1001;
    const double C13945 = C13937 + C13938;
    const double C2243 = C2235 + C2236;
    const double C13661 = C13641 + C13642;
    const double C1653 = C1645 + C1646;
    const double C14163 = C14151 + C14152;
    const double C341 =
        (3 * C30018 + C30000 * C30029 + ae * C29993 * C30070 +
         C29993 * (ae * C30070 +
                   C29993 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C702 =
        (ae * (4 * C30057 + C30000 * C30070) +
         C29993 * (4 * C30029 +
                   C30000 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C135 = (5 * (3 * C30047 + C30000 * C30057) +
                         C30000 * (4 * C30057 + C30000 * C30070)) /
                        C29953;
    const double C331 =
        (3 * C30047 + C30000 * C30057 + C30070 * C30127) / C29953;
    const double C534 =
        (3 * C30047 + C30000 * C30057 +
         C29992 * (C29992 * C30070 + C30481 * ae) + C29992 * C30481 * ae) /
        C29953;
    const double C701 = (C29993 * (4 * C30057 + C30000 * C30070)) / C29953;
    const double C814 = (C29992 * (4 * C30057 + C30000 * C30070) +
                         (4 * C30475 + C30000 * C30481) * ae) /
                        C29953;
    const double C985 =
        (C29992 * C29993 * C30070 + C29993 * C30481 * ae) / C29953;
    const double C5551 =
        (5 * (3 * C30248 + ae * C30249 + C29993 * C30270) +
         ae * (4 * C30249 + C29993 * C30271) +
         C29993 *
             (4 * C30270 + ae * C30271 +
              C29993 *
                  (3 * C30266 + ae * C30267 +
                   C29993 * (2 * C30260 + ae * C30262 +
                             C29993 * (C30025 + ae * C29993 * C30064 +
                                       C29993 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C5549 = (5 * (3 * C30130 + C29993 * C30249) +
                          C29993 * (4 * C30249 + C29993 * C30271)) /
                         C29953;
    const double C5670 =
        (3 * C30130 + C29993 * C30249 +
         C29992 * (C29992 * C30271 + C30612 * ae) + C29992 * C30612 * ae) /
        C29953;
    const double C6026 = (C29992 * (4 * C30249 + C29993 * C30271) +
                          (4 * C30608 + C29993 * C30612) * ae) /
                         C29953;
    const double C544 =
        (3 * C30018 + C30000 * C30029 + ae * C29992 * C30109 +
         C29992 * (ae * C30109 +
                   C29992 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C815 =
        (ae * (4 * C30096 + C30000 * C30109) +
         C29992 * (4 * C30029 +
                   C30000 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C990 =
        (ae * (C29993 * C30109 +
               (3 * (C30116 + C30118 * C30008) +
                C30000 * (2 * C30000 * C30118 +
                          C30000 * (C30118 + C30014 * C30013 * C30008))) *
                   ae) +
         C29992 * (ae * C30070 +
                   C29993 * (3 * C30027 +
                             C30000 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C134 = (5 * (3 * C30086 + C30000 * C30096) +
                         C30000 * (4 * C30096 + C30000 * C30109)) /
                        C29953;
    const double C330 =
        (3 * C30086 + C30000 * C30096 +
         C29993 * (C29993 * C30109 + C30481 * ae) + C29993 * C30481 * ae) /
        C29953;
    const double C533 =
        (3 * C30086 + C30000 * C30096 + C30109 * C30210) / C29953;
    const double C700 = (C29993 * (4 * C30096 + C30000 * C30109) +
                         (4 * C30475 + C30000 * C30481) * ae) /
                        C29953;
    const double C813 = (C29992 * (4 * C30096 + C30000 * C30109)) / C29953;
    const double C984 = (C29992 * (C29993 * C30109 + C30481 * ae)) / C29953;
    const double C2233 =
        (ae * C30057 + C29993 * C30029 + ae * C29992 * C30231 +
         C29992 * (ae * C30231 +
                   C29992 * (ae * C30068 +
                             C29993 * (2 * C30000 * C30025 +
                                       C30000 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C1475 =
        (2 * (C29993 * C30096 + C30475 * ae) +
         C29993 * (C30096 + C29993 * C30231 + C29993 * C30199 * ae) +
         (C30475 + C30199 * C30127) * ae) /
        C29953;
    const double C1641 =
        (C29992 * (C30096 + C29993 * C30231 + C29993 * C30199 * ae)) / C29953;
    const double C2231 =
        (C29993 * C30096 + C30475 * ae + C30231 * C30210) / C29953;
    const double C30194 = C30193 + C30191;
    const double C30308 = C30291 + C30307;
    const double C30348 = C30284 + C30346;
    const double C10901 =
        (4 * (2 * C30340 + ae * C30341 + C29992 * C30435) +
         ae * (3 * C30341 + C29992 * C30436) +
         C29992 *
             (3 * C30435 + ae * C30436 +
              C29992 *
                  (2 * C30429 + ae * C30431 +
                   C29992 * (C30260 + ae * C29992 * C30297 +
                             C29992 * (ae * C30297 +
                                       C29992 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C10899 = (4 * (2 * C30336 + C29992 * C30341) +
                           C29992 * (3 * C30341 + C29992 * C30436)) /
                          C29953;
    const double C30361 = C29993 * C30360;
    const double C6573 =
        (2 * (ae * C30182 + C29992 * C30327) + ae * (C30182 + C30360 * C30210) +
         C29992 * (C30327 + ae * C29992 * C30360 +
                   C29992 * (ae * C30360 +
                             C29992 * (C30316 + ae * C29993 * C30317 +
                                       C29993 * (ae * C30317 +
                                                 C29993 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C6571 =
        (2 * C29992 * C30182 + C29992 * (C30182 + C30360 * C30210)) / C29953;
    const double C10523 =
        (5 * (3 * C30378 + ae * C30379 + C29992 * C30400) +
         ae * (4 * C30379 + C29992 * C30401) +
         C29992 *
             (4 * C30400 + ae * C30401 +
              C29992 *
                  (3 * C30396 + ae * C30397 +
                   C29992 * (2 * C30390 + ae * C30392 +
                             C29992 * (C30025 + ae * C29992 * C30103 +
                                       C29992 * (ae * C30103 +
                                                 C29992 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C10520 = (5 * (3 * C30213 + C29992 * C30379) +
                           C29992 * (4 * C30379 + C29992 * C30401)) /
                          C29953;
    const double C182 = C172 * C31063;
    const double C31193 = C31139 + C31185;
    const double C696 = C31172 - (C30853 * C30835) / C30830;
    const double C111 = C31173 / C30834 - C30851 / C31146;
    const double C31186 = C31142 + C31172;
    const double C31194 = C31155 + C31189;
    const double C1469 = C31179 - (C30933 * C30922) / C30830;
    const double C1197 = C31180 / C30834 - C30931 / C31146;
    const double C31190 = C31157 + C31179;
    const double C31195 = C31161 + C31191;
    const double C2349 = C31182 - (C30975 * C30964) / C30830;
    const double C2058 = C31183 / C30834 - C30973 / C31146;
    const double C31192 = C31163 + C31182;
    const double C10535 = C10529 + C10530;
    const double C9872 = C9861 + C9862;
    const double C25644 = C25629 + C25630;
    const double C25638 = C25617 + C25618;
    const double C10232 = C10225 + C10226;
    const double C25642 = C25625 + C25626;
    const double C26111 = C26105 + C26106;
    const double C9871 = C9859 + C9860;
    const double C25646 = C25633 + C25634;
    const double C25636 = C25613 + C25614;
    const double C10231 = C10223 + C10224;
    const double C25640 = C25621 + C25622;
    const double C26109 = C26101 + C26102;
    const double C1492 = C1488 * C114;
    const double C2248 = C2244 * C114;
    const double C19728 = C2244 * C18919;
    const double C1658 = C1654 * C114;
    const double C19096 = C1654 * C18919;
    const double C183 = C173 * C114;
    const double C390 = C378 * C114;
    const double C712 = C710 * C114;
    const double C593 = C581 * C114;
    const double C19526 = C581 * C18919;
    const double C825 = C823 * C114;
    const double C18934 = C823 * C18919;
    const double C1015 = C1009 * C114;
    const double C19392 = C1009 * C18919;
    const double C10122 = C31050 * C1368;
    const double C15588 = C13223 * C1368;
    const double C14878 = C13223 * C1768;
    const double C20236 = C31050 * C1768;
    const double C14676 = C13223 * C1214;
    const double C10120 = C31050 * C1357;
    const double C15592 = C13223 * C1357;
    const double C14882 = C13223 * C1763;
    const double C20238 = C31050 * C1763;
    const double C30287 = C30286 + C30282;
    const double C9873 = C9863 + C9864;
    const double C26973 = C26965 + C26966;
    const double C9874 = C9865 + C9866;
    const double C26975 = C26969 + C26970;
    const double C30686 = C30685 + C30670;
    const double C389 = C377 * C31063;
    const double C711 = C709 * C31063;
    const double C592 = C580 * C31063;
    const double C19525 = C580 * C18917;
    const double C824 = C822 * C31063;
    const double C18933 = C822 * C18917;
    const double C1014 = C1008 * C31063;
    const double C19391 = C1008 * C18917;
    const double C2247 = C2243 * C31063;
    const double C19727 = C2243 * C18917;
    const double C1657 = C1653 * C31063;
    const double C19095 = C1653 * C18917;
    const double C1369 =
        (C30018 + ae * C30139 + C29993 * C30143 + ae * C29992 * C30194 +
         C29992 * (ae * C30194 +
                   C29992 * (C30027 + ae * C29993 * C30066 +
                             C29993 * (ae * C30066 +
                                       C29993 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C1769 =
        (ae * (2 * C30150 + C29993 * C30194 + (C30148 + C30187 * C30127) * ae) +
         C29992 * (2 * C30143 + ae * C30144 +
                   C29993 * (C30027 + ae * C29993 * C30066 +
                             C29993 * (ae * C30066 +
                                       C29993 * (C30025 + std::pow(C29997, 8) *
                                                              bs[8] * C29998 *
                                                              C30008))))) /
        C29955;
    const double C1216 =
        (3 * (C30086 + C29993 * C30150 + C30534 * ae) +
         C29993 * (2 * C30150 + C29993 * C30194 + C30536 * ae) +
         (2 * C30534 + C29993 * C30536) * ae) /
        C29953;
    const double C1359 =
        (C30086 + C29993 * C30150 + C30534 * ae + C30194 * C30210) / C29953;
    const double C1765 =
        (C29992 * (2 * C30150 + C29993 * C30194 + C30536 * ae)) / C29953;
    const double C30309 = C30308 + C30301;
    const double C6321 =
        (3 * (C30248 + ae * C30343 + C29992 * C30347) +
         ae * (2 * C30343 + C29992 * C30348) +
         C29992 *
             (2 * C30347 + ae * C30348 +
              C29992 *
                  (C30266 + ae * C29992 * C30305 +
                   C29992 * (ae * C30305 +
                             C29992 * (C30025 + ae * C29993 * C30064 +
                                       C29993 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C6316 = (3 * (C30172 + C30284 * C30210) +
                          C29992 * (2 * C30343 + C29992 * C30348)) /
                         C29953;
    const double C30362 = C30350 + C30361;
    const double C108 =
        (C31184 + 2 * C30844) / C30834 - (C31193 * C30835) / C30830;
    const double C109 =
        (C31171 + 2 * C30853 + C31193) / C30834 - (C31186 * C30835) / C30830;
    const double C110 = (C31144 + C30850 / C30830 + C31186) / C30834 -
                        (C31173 * C30835) / C30830;
    const double C1194 =
        (C31187 + 2 * C30926) / C30834 - (C31194 * C30922) / C30830;
    const double C1195 =
        (C31175 + 2 * C30933 + C31194) / C30834 - (C31190 * C30922) / C30830;
    const double C1196 = (C31150 + C30930 / C30830 + C31190) / C30834 -
                         (C31180 * C30922) / C30830;
    const double C2055 =
        (C31188 + 2 * C30968) / C30834 - (C31195 * C30964) / C30830;
    const double C2056 =
        (C31177 + 2 * C30975 + C31195) / C30834 - (C31192 * C30964) / C30830;
    const double C2057 = (C31153 + C30972 / C30830 + C31192) / C30834 -
                         (C31183 * C30964) / C30830;
    const double C10124 = C10121 + C10122;
    const double C15595 = C15587 + C15588;
    const double C14885 = C14877 + C14878;
    const double C20241 = C20235 + C20236;
    const double C14681 = C14675 + C14676;
    const double C10123 = C10119 + C10120;
    const double C15597 = C15591 + C15592;
    const double C14887 = C14881 + C14882;
    const double C20242 = C20237 + C20238;
    const double C5671 =
        (2 * C30128 + ae * C30130 + C29993 * C30248 + ae * C29992 * C30287 +
         C29992 * (ae * C30287 + C29992 * C30270)) /
        C29955;
    const double C5672 =
        (ae * (3 * C30172 + C29993 * C30287 +
               (2 * C30167 + C29993 * C30280) * ae) +
         C29992 * (3 * C30248 + ae * C30249 + C29993 * C30270)) /
        C29955;
    const double C5547 =
        (4 * (2 * C30160 + C29993 * C30172 + C30526 * ae) +
         C29993 * (3 * C30172 + C29993 * C30287 + C30608 * ae) +
         (3 * C30526 + C29993 * C30608) * ae) /
        C29953;
    const double C5666 =
        (2 * C30160 + C29993 * C30172 + C30526 * ae + C30287 * C30210) / C29953;
    const double C5668 =
        (C29992 * (3 * C30172 + C29993 * C30287 + C30608 * ae)) / C29953;
    const double C10521 =
        (5 * (3 * C30663 + C29992 * C30686 + C30662 * ae) +
         C29992 *
             (4 * C30686 +
              C29992 *
                  (3 * C30681 +
                   C29992 *
                       (2 * C30673 +
                        C29992 * (C30053 + C29992 * (C29992 * C30064 + C30293) +
                                  C29992 * C30185 * ae) +
                        C30675 * ae) +
                   C30680 * ae) +
              C30684 * ae) +
         (4 * C30662 + C29992 * C30684) * ae) /
        C29953;
    const double C30310 = C29993 * C30309;
    const double C6675 =
        (2 * (ae * C30287 + C29992 * C30270) + ae * (C30287 + C30309 * C30210) +
         C29992 *
             (C30270 + ae * C29992 * C30309 +
              C29992 *
                  (ae * C30309 +
                   C29992 * (2 * C30260 + ae * C30262 +
                             C29993 * (C30025 + ae * C29993 * C30064 +
                                       C29993 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C6673 =
        (2 * C29992 * C30287 + C29992 * (C30287 + C30309 * C30210)) / C29953;
    const double C30363 = C30362 + C30354;
    const double C20439 = C10124 * C18917;
    const double C20243 = C20241 * C18917;
    const double C20440 = C10123 * C18919;
    const double C20244 = C20242 * C18919;
    const double C10230 = C31050 * C5671;
    const double C25628 = C13223 * C5671;
    const double C26108 = C13223 * C5672;
    const double C10228 = C31050 * C5666;
    const double C25632 = C13223 * C5666;
    const double C26104 = C13223 * C5668;
    const double C30311 = C30290 + C30310;
    const double C6471 =
        (2 * C30136 + ae * C30137 + C29993 * C30327 + ae * C29992 * C30363 +
         C29992 * (ae * C30363 +
                   C29992 * (2 * C30323 + ae * C30324 +
                             C29993 * (C30316 + ae * C29993 * C30317 +
                                       C29993 * (ae * C30317 +
                                                 C29993 * C30000 *
                                                     std::pow(C29997, 8) *
                                                     bs[8] * C29998))))) /
        C29955;
    const double C5773 =
        (4 * (2 * C30155 + C29993 * C30182 + C30531 * ae) +
         C29993 * (3 * C30182 + C29993 * C30363 + C30623 * ae) +
         (3 * C30531 + C29993 * C30623) * ae) /
        C29953;
    const double C5923 =
        (C29992 * (3 * C30182 + C29993 * C30363 + C30623 * ae)) / C29953;
    const double C6469 =
        (2 * C30155 + C29993 * C30182 + C30531 * ae + C30363 * C30210) / C29953;
    const double C10234 = C10229 + C10230;
    const double C25643 = C25627 + C25628;
    const double C26112 = C26107 + C26108;
    const double C10233 = C10227 + C10228;
    const double C25645 = C25631 + C25632;
    const double C26110 = C26103 + C26104;
    const double C30312 = C30311 + C30306;
    const double C5673 =
        (3 * C30248 + ae * C30249 + C29993 * C30270 + ae * C29992 * C30312 +
         C29992 *
             (ae * C30312 +
              C29992 *
                  (3 * C30266 + ae * C30267 +
                   C29993 * (2 * C30260 + ae * C30262 +
                             C29993 * (C30025 + ae * C29993 * C30064 +
                                       C29993 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C6027 =
        (ae * (4 * C30287 + C29993 * C30312 +
               (3 * C30280 + C29993 * C30304) * ae) +
         C29992 *
             (4 * C30270 + ae * C30271 +
              C29993 *
                  (3 * C30266 + ae * C30267 +
                   C29993 * (2 * C30260 + ae * C30262 +
                             C29993 * (C30025 + ae * C29993 * C30064 +
                                       C29993 * (ae * C30064 +
                                                 C29993 * std::pow(C29997, 8) *
                                                     bs[8] * C29998)))))) /
        C29955;
    const double C5548 =
        (5 * (3 * C30172 + C29993 * C30287 + C30608 * ae) +
         C29993 * (4 * C30287 + C29993 * C30312 + C30612 * ae) +
         (4 * C30608 + C29993 * C30612) * ae) /
        C29953;
    const double C5669 =
        (3 * C30172 + C29993 * C30287 + C30608 * ae + C30312 * C30210) / C29953;
    const double C6025 =
        (C29992 * (4 * C30287 + C29993 * C30312 + C30612 * ae)) / C29953;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C30926 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C30933 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C2948) *
              C30844 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C30933 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C30926 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C2948) *
              C30853 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C30926 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C30933 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C2948) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C30926 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C30933 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C31120 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C2948) *
              C2688 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C30926 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30933 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C31120) *
               C2948) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31194 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C31190 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31180 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C30885 * C31160) *
              C2688 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C31190 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31194 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31180 +
           (((C14682 + C14681) * C114 + (C14680 + C14679) * C31063) * C13224 +
            ((C13226 * C1200 + C13222 * C1207 + C13227 * C1205 +
              C13223 * C1216) *
                 C114 +
             (C13226 * C1206 + C13222 * C1218 + C13227 * C1217 +
              C13223 * C1223) *
                 C31063) *
                C13225) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C2580 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C30930) *
              C31193 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C30930 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C2580) *
              C31186 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C2580 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C30930) *
              C31173 +
          ((((C13806 + C13805) * C114 + (C13804 + C13803) * C31063) * C13224 +
            ((C13226 * C310 + C13222 * C329 + C13227 * C311 + C13223 * C330) *
                 C114 +
             (C13226 * C328 + C13222 * C340 + C13227 * C331 + C13223 * C341) *
                 C31063) *
                C13225) *
               C30885 * C30930 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31188 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C31177 +
            (((C13226 * C508 + C13222 * C521 + C13227 * C1336 +
               C13223 * C1348) *
                  C114 +
              (C13226 * C522 + C13222 * C538 + C13227 * C1347 +
               C13223 * C1363) *
                  C31063) *
                 C13224 +
             ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
                C31153) *
               C2580 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C31177 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31188 -
            (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
             ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
               C13222 * C1363) *
                  C31063 +
              (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
               C13222 * C1348) *
                  C114) *
                 C13224) *
                C31153) *
               C30930) *
              C2688 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C31177 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31188 -
            (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
             ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
                C31153) *
               C2580 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31188 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C31177 +
            (((C15598 + C15597) * C114 + (C15596 + C15595) * C31063) * C13224 +
             ((C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
               C13223 * C1359) *
                  C114 +
              (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
               C13223 * C1369) *
                  C31063) *
                 C13225) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C2580 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C30930) *
              C30844 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C2580 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C30853 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C31120 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C2580 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C31120) *
               C30930) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C2580 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C30930) *
              C31193 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C30930 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C2580) *
              C31186 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C2580 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C30930) *
              C31173 +
          ((((C13806 + C13805) * C114 + (C13804 + C13803) * C31063) * C13224 +
            ((C13226 * C310 + C13222 * C329 + C13227 * C311 + C13223 * C330) *
                 C114 +
             (C13226 * C328 + C13222 * C340 + C13227 * C331 + C13223 * C341) *
                 C31063) *
                C13225) *
               C30885 * C30930 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31194 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C31190 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31180 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C30885 * C31160) *
              C2688 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C31190 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31194 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31180 +
           (((C14682 + C14681) * C114 + (C14680 + C14679) * C31063) * C13224 +
            ((C13226 * C1200 + C13222 * C1207 + C13227 * C1205 +
              C13223 * C1216) *
                 C114 +
             (C13226 * C1206 + C13222 * C1218 + C13227 * C1217 +
              C13223 * C1223) *
                 C31063) *
                C13225) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C30926 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30933 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C3342 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C2948) *
              C31105 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C30926 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30933 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C3342) *
               C2948) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30968 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30975 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C3850) *
              C30926 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C30975 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30968 -
           (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C3850) *
              C30933 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30968 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C30975 +
           (((C13226 * C1340 + C13222 * C1355 + C13227 * C5662 +
              C13223 * C5666) *
                 C114 +
             (C13226 * C1356 + C13222 * C1367 + C13227 * C5665 +
              C13223 * C5671) *
                 C31063) *
                C13224 +
            ((C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C114 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C31063) *
                C13225) *
               C3850) *
              C2948) *
         C30839) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C3342 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C31194 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C30972 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C3342) *
              C31190 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C3342 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C30972) *
              C31180 +
          ((((C13226 * C1758 + C13222 * C1761 + C13227 * C5663 +
              C13223 * C5668) *
                 C114 +
             (C13226 * C1762 + C13222 * C1767 + C13227 * C5667 +
              C13223 * C5672) *
                 C31063) *
                C13224 +
            ((C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
              C13223 * C5923) *
                 C114 +
             (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
              C13223 * C5925) *
                 C31063) *
                C13225) *
               C30972 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C2580 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30930) *
              C31184 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C2580 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C31171 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C3342 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C2580 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31195 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31192 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31183 -
           (((C15737 + C15738) * C31063 + (C15739 + C15740) * C114) * C13225 +
            ((C13227 * C2474 + C13223 * C2479 + C13226 * C2070 +
              C13222 * C2080) *
                 C31063 +
             (C13227 * C2470 + C13223 * C2473 + C13226 * C2062 +
              C13222 * C2071) *
                 C114) *
                C13224) *
               C31166) *
              C2580 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C31192 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C31195 -
           (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C31183 +
           (((C13226 * C2470 + C13222 * C2473 + C13227 * C6310 +
              C13223 * C6314) *
                 C114 +
             (C13226 * C2474 + C13222 * C2479 + C13227 * C6313 +
              C13223 * C6319) *
                 C31063) *
                C13224 +
            ((C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C114 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C31063) *
                C13225) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C30968 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30975 +
            (((C13226 * C508 + C13222 * C521 + C13227 * C1336 +
               C13223 * C1348) *
                  C114 +
              (C13226 * C522 + C13222 * C538 + C13227 * C1347 +
               C13223 * C1363) *
                  C31063) *
                 C13224 +
             ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
                C3850) *
               C2580 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30975 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C30968 -
            (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
             ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
               C13222 * C1363) *
                  C31063 +
              (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
               C13222 * C1348) *
                  C114) *
                 C13224) *
                C3850) *
               C30930) *
              C31105 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30975 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C30968 -
            (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
             ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
                C3850) *
               C2580 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C30968 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30975 +
            (((C15598 + C15597) * C114 + (C15596 + C15595) * C31063) * C13224 +
             ((C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
               C13223 * C1359) *
                  C114 +
              (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
               C13223 * C1369) *
                  C31063) *
                 C13225) *
                C3850) *
               C30930) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C2580 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30930) *
              C31184 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C2580 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C31171 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C3342 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C2580 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C3342 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C31194 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C30972 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C3342) *
              C31190 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C3342 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C30972) *
              C31180 +
          ((((C13226 * C1758 + C13222 * C1761 + C13227 * C5663 +
              C13223 * C5668) *
                 C114 +
             (C13226 * C1762 + C13222 * C1767 + C13227 * C5667 +
              C13223 * C5672) *
                 C31063) *
                C13224 +
            ((C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
              C13223 * C5923) *
                 C114 +
             (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
              C13223 * C5925) *
                 C31063) *
                C13225) *
               C30972 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1468 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1469 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C1470 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C30885 * C31160) *
              C31105 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1469 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1468 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C1470 +
           (((C14682 + C14681) * C114 + (C14680 + C14679) * C31063) * C13224 +
            ((C13226 * C1200 + C13222 * C1207 + C13227 * C1205 +
              C13223 * C1216) *
                 C114 +
             (C13226 * C1206 + C13222 * C1218 + C13227 * C1217 +
              C13223 * C1223) *
                 C31063) *
                C13225) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31119 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C30930) *
              C695 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C30930 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31119) *
              C696 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C31119 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C30930) *
              C697 +
          ((((C13806 + C13805) * C114 + (C13804 + C13803) * C31063) * C13224 +
            ((C13226 * C310 + C13222 * C329 + C13227 * C311 + C13223 * C330) *
                 C114 +
             (C13226 * C328 + C13222 * C340 + C13227 * C331 + C13223 * C341) *
                 C31063) *
                C13225) *
               C30885 * C30930 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C1880 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C1881 +
            (((C13226 * C508 + C13222 * C521 + C13227 * C1336 +
               C13223 * C1348) *
                  C114 +
              (C13226 * C522 + C13222 * C538 + C13227 * C1347 +
               C13223 * C1363) *
                  C31063) *
                 C13224 +
             ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
                C31153) *
               C31119 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C1881 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C1880 -
            (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
             ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
               C13222 * C1363) *
                  C31063 +
              (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
               C13222 * C1348) *
                  C114) *
                 C13224) *
                C31153) *
               C30930) *
              C31105 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C1881 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C1880 -
            (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
             ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
                C31153) *
               C31119 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C1880 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C1881 +
            (((C15598 + C15597) * C114 + (C15596 + C15595) * C31063) * C13224 +
             ((C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
               C13223 * C1359) *
                  C114 +
              (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
               C13223 * C1369) *
                  C31063) *
                 C13225) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31120 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C1468 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C30972 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C31120) *
              C1469 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C31120 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C30972) *
              C1470 +
          ((((C13226 * C1758 + C13222 * C1761 + C13227 * C5663 +
              C13223 * C5668) *
                 C114 +
             (C13226 * C1762 + C13222 * C1767 + C13227 * C5667 +
              C13223 * C5672) *
                 C31063) *
                C13224 +
            ((C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
              C13223 * C5923) *
                 C114 +
             (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
              C13223 * C5925) *
                 C31063) *
                C13225) *
               C30972 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C31119 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C30930) *
              C299 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C31119 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C300 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C31120 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C31119 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C2348 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C2349 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C2350 -
           (((C15737 + C15738) * C31063 + (C15739 + C15740) * C114) * C13225 +
            ((C13227 * C2474 + C13223 * C2479 + C13226 * C2070 +
              C13222 * C2080) *
                 C31063 +
             (C13227 * C2470 + C13223 * C2473 + C13226 * C2062 +
              C13222 * C2071) *
                 C114) *
                C13224) *
               C31166) *
              C31119 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C2349 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C2348 -
           (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C2350 +
           (((C13226 * C2470 + C13222 * C2473 + C13227 * C6310 +
              C13223 * C6314) *
                 C114 +
             (C13226 * C2474 + C13222 * C2479 + C13227 * C6313 +
              C13223 * C6319) *
                 C31063) *
                C13224 +
            ((C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C114 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C31063) *
                C13225) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13226 * C115 + C13222 * C122 + C13227 * C304 +
                 C13223 * C317) *
                    C114 +
                (C13226 * C123 + C13222 * C136 + C13227 * C316 +
                 C13223 * C334) *
                    C31063) *
                   C13224 +
               ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) *
                   C13225) *
                  C30885 * C30867 * C108 -
              (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) *
                   C13225 +
               ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) *
                   C13224) *
                  C30885 * C30867 * C109 +
              (((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) *
                   C13224 +
               ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) *
                   C13225) *
                  C30885 * C30867 * C110 -
              (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) *
                   C13225 +
               ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) *
                   C13224) *
                  C30885 * C30867 * C111 +
              (((C13276 + C13275) * C114 + (C13274 + C13273) * C31063) *
                   C13224 +
               ((C13226 * C120 + C13222 * C133 + C13227 * C699 +
                 C13223 * C700) *
                    C114 +
                (C13226 * C132 + C13222 * C141 + C13227 * C701 +
                 C13223 * C702) *
                    C31063) *
                   C13225) *
                  C30885 * C30867 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C13226 * C115 + C13222 * C122 + C13227 * C304 +
                  C13223 * C317) *
                     C114 +
                 (C13226 * C123 + C13222 * C136 + C13227 * C316 +
                  C13223 * C334) *
                     C31063) *
                    C13224 +
                ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) *
                    C13225) *
                   C30885 * C31187 -
               (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) *
                    C13225 +
                ((C13227 * C319 + C13223 * C335 + C13226 * C316 +
                  C13222 * C334) *
                     C31063 +
                 (C13227 * C305 + C13223 * C318 + C13226 * C304 +
                  C13222 * C317) *
                     C114) *
                    C13224) *
                   C30885 * C31175 +
               (((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
                  C13223 * C1211) *
                     C114 +
                 (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
                  C13223 * C1220) *
                     C31063) *
                    C13224 +
                ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) *
                    C13225) *
                   C30885 * C31150) *
                  C299 +
              ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) *
                    C13224 +
                ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) *
                    C13225) *
                   C30885 * C31175 -
               (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) *
                    C13225 +
                ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) *
                    C13224) *
                   C30885 * C31187 -
               (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) *
                    C13225 +
                ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) *
                    C13224) *
                   C30885 * C31150) *
                  C300 +
              ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) *
                    C13224 +
                ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) *
                    C13225) *
                   C30885 * C31187 -
               (((C13227 * C326 + C13223 * C339 + C13226 * C325 +
                  C13222 * C338) *
                     C31063 +
                 (C13227 * C309 + C13223 * C327 + C13226 * C308 +
                  C13222 * C324) *
                     C114) *
                    C13225 +
                ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) *
                    C13224) *
                   C30885 * C31175 +
               (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) *
                    C13224 +
                ((C13226 * C309 + C13222 * C327 + C13227 * C1474 +
                  C13223 * C1475) *
                     C114 +
                 (C13226 * C326 + C13222 * C339 + C13227 * C1476 +
                  C13223 * C1477) *
                     C31063) *
                    C13225) *
                   C30885 * C31150) *
                  C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31188 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C30867 * C299 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C31177 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C31188 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C31153) *
              C30867 * C300 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C31188 -
           (((C13227 * C982 + C13223 * C989 + C13226 * C528 + C13222 * C541) *
                 C31063 +
             (C13227 * C974 + C13223 * C983 + C13226 * C511 + C13222 * C527) *
                 C114) *
                C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C31177 +
           (((C13664 + C13663) * C114 + (C13662 + C13661) * C31063) * C13224 +
            ((C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                 C114 +
             (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                 C31063) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C31184 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1127 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1126 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C1127 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C1194 -
          (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
           ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C31063 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C114) *
               C13224) *
              C30885 * C1195 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C114 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C31063) *
               C13224 +
           ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
              C30885 * C1196 -
          (((C13227 * C1215 + C13223 * C1222 + C13226 * C1208 +
             C13222 * C1219) *
                C31063 +
            (C13227 * C1204 + C13223 * C1214 + C13226 * C1201 +
             C13222 * C1209) *
                C114) *
               C13225 +
           ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C31063 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C114) *
               C13224) *
              C30885 * C1197 +
          (((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 +
             C13223 * C5547) *
                C114 +
            (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 +
             C13223 * C5550) *
                C31063) *
               C13224 +
           ((C13226 * C1204 + C13222 * C1214 + C13227 * C5772 +
             C13223 * C5773) *
                C114 +
            (C13226 * C1215 + C13222 * C1222 + C13227 * C5774 +
             C13223 * C5775) *
                C31063) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31188 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C1126 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C31177 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C31188 -
           (((C13227 * C1358 + C13223 * C1368 + C13226 * C1345 +
              C13222 * C1362) *
                 C31063 +
             (C13227 * C1341 + C13223 * C1357 + C13226 * C1335 +
              C13222 * C1346) *
                 C114) *
                C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C31153) *
              C1127 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C31188 -
           (((C13227 * C1764 + C13223 * C1768 + C13226 * C1351 +
              C13222 * C1365) *
                 C31063 +
             (C13227 * C1759 + C13223 * C1763 + C13226 * C1338 +
              C13222 * C1352) *
                 C114) *
                C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C1340 + C13222 * C1355 + C13227 * C5662 +
              C13223 * C5666) *
                 C114 +
             (C13226 * C1356 + C13222 * C1367 + C13227 * C5665 +
              C13223 * C5671) *
                 C31063) *
                C13224 +
            ((C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C114 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C31063) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C1880 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C30867 * C31184 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C1881 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C1880 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C31153) *
              C30867 * C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C1880 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C1881 +
           (((C13664 + C13663) * C114 + (C13662 + C13661) * C31063) * C13224 +
            ((C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                 C114 +
             (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                 C31063) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C1880 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C31187 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C1881 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C1880 -
           (((C13227 * C1358 + C13223 * C1368 + C13226 * C1345 +
              C13222 * C1362) *
                 C31063 +
             (C13227 * C1341 + C13223 * C1357 + C13226 * C1335 +
              C13222 * C1346) *
                 C114) *
                C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C31153) *
              C31175 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C1880 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C1340 + C13222 * C1355 + C13227 * C5662 +
              C13223 * C5666) *
                 C114 +
             (C13226 * C1356 + C13222 * C1367 + C13227 * C5665 +
              C13223 * C5671) *
                 C31063) *
                C13224 +
            ((C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C114 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C31063) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C2055 -
          (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
           ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                C31063 +
            (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                C114) *
               C13224) *
              C2056 +
          (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                C114 +
            (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                C31063) *
               C13224 +
           ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
              C2057 -
          (((C13227 * C2476 + C13223 * C2480 + C13226 * C2068 +
             C13222 * C2079) *
                C31063 +
            (C13227 * C2471 + C13223 * C2475 + C13226 * C2061 +
             C13222 * C2069) *
                C114) *
               C13225 +
           ((C13227 * C2474 + C13223 * C2479 + C13226 * C2070 +
             C13222 * C2080) *
                C31063 +
            (C13227 * C2470 + C13223 * C2473 + C13226 * C2062 +
             C13222 * C2071) *
                C114) *
               C13224) *
              C2058 +
          (((C13226 * C2063 + C13222 * C2072 + C13227 * C6311 +
             C13223 * C6315) *
                C114 +
            (C13226 * C2073 + C13222 * C2081 + C13227 * C6317 +
             C13223 * C6320) *
                C31063) *
               C13224 +
           ((C13226 * C2064 + C13222 * C2074 + C13227 * C10682 +
             C13223 * C10683) *
                C114 +
            (C13226 * C2075 + C13222 * C2082 + C13227 * C10684 +
             C13223 * C10685) *
                C31063) *
               C13225) *
              C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C1126 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C1127 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C31120 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C31150) *
              C31105 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C1126 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C1127 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31120 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C30867 * C695 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C30972 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C31120) *
              C30867 * C696 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C31120 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C30972) *
              C30867 * C697 +
          ((((C13948 + C13947) * C114 + (C13946 + C13945) * C31063) * C13224 +
            ((C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
                 C114 +
             (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
                 C31063) *
                C13225) *
               C30972 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C2348 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C2349 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C2350 -
           (((C15737 + C15738) * C31063 + (C15739 + C15740) * C114) * C13225 +
            ((C13227 * C2474 + C13223 * C2479 + C13226 * C2070 +
              C13222 * C2080) *
                 C31063 +
             (C13227 * C2470 + C13223 * C2473 + C13226 * C2062 +
              C13222 * C2071) *
                 C114) *
                C13224) *
               C31166) *
              C30867 * C31105 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C2349 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C2348 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C2350 +
           (((C15740 + C15739) * C114 + (C15738 + C15737) * C31063) * C13224 +
            ((C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
              C13223 * C2477) *
                 C114 +
             (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
              C13223 * C2481) *
                 C31063) *
                C13225) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C31175 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C299 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C31175 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31187 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C300 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13227 * C326 + C13223 * C339 + C13226 * C325 + C13222 * C338) *
                 C31063 +
             (C13227 * C309 + C13223 * C327 + C13226 * C308 + C13222 * C324) *
                 C114) *
                C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C31175 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C30867 * C108 -
          (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
           ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
              C30885 * C30867 * C109 +
          (((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
           ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
              C30885 * C30867 * C110 -
          (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
           ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
              C30885 * C30867 * C111 +
          (((C13276 + C13275) * C114 + (C13274 + C13273) * C31063) * C13224 +
           ((C13226 * C120 + C13222 * C133 + C13227 * C699 + C13223 * C700) *
                C114 +
            (C13226 * C132 + C13222 * C141 + C13227 * C701 + C13223 * C702) *
                C31063) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C31184 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1127 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1126 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C1127 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C1194 -
          (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
           ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C31063 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C114) *
               C13224) *
              C30885 * C1195 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C114 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C31063) *
               C13224 +
           ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
              C30885 * C1196 -
          (((C13227 * C1215 + C13223 * C1222 + C13226 * C1208 +
             C13222 * C1219) *
                C31063 +
            (C13227 * C1204 + C13223 * C1214 + C13226 * C1201 +
             C13222 * C1209) *
                C114) *
               C13225 +
           ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C31063 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C114) *
               C13224) *
              C30885 * C1197 +
          (((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 +
             C13223 * C5547) *
                C114 +
            (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 +
             C13223 * C5550) *
                C31063) *
               C13224 +
           ((C13226 * C1204 + C13222 * C1214 + C13227 * C5772 +
             C13223 * C5773) *
                C114 +
            (C13226 * C1215 + C13222 * C1222 + C13227 * C5774 +
             C13223 * C5775) *
                C31063) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C1880 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C30867 * C31184 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C1881 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C1880 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C31153) *
              C30867 * C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C1880 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C1881 +
           (((C13664 + C13663) * C114 + (C13662 + C13661) * C31063) * C13224 +
            ((C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                 C114 +
             (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                 C31063) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C1880 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C31187 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C1881 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C1880 -
           (((C13227 * C1358 + C13223 * C1368 + C13226 * C1345 +
              C13222 * C1362) *
                 C31063 +
             (C13227 * C1341 + C13223 * C1357 + C13226 * C1335 +
              C13222 * C1346) *
                 C114) *
                C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C31153) *
              C31175 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C1880 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C1881 +
           (((C13226 * C1340 + C13222 * C1355 + C13227 * C5662 +
              C13223 * C5666) *
                 C114 +
             (C13226 * C1356 + C13222 * C1367 + C13227 * C5665 +
              C13223 * C5671) *
                 C31063) *
                C13224 +
            ((C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C114 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C31063) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C31119 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C30930) *
              C30844 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C31119 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C30853 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C3342 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C31119 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C3342) *
               C30930) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C30968 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30975 +
            (((C13226 * C508 + C13222 * C521 + C13227 * C1336 +
               C13223 * C1348) *
                  C114 +
              (C13226 * C522 + C13222 * C538 + C13227 * C1347 +
               C13223 * C1363) *
                  C31063) *
                 C13224 +
             ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
                C3850) *
               C31119 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30975 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C30968 -
            (((C15595 + C15596) * C31063 + (C15597 + C15598) * C114) * C13225 +
             ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
               C13222 * C1363) *
                  C31063 +
              (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
               C13222 * C1348) *
                  C114) *
                 C13224) *
                C3850) *
               C30930) *
              C2688 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30975 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C30968 -
            (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
             ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
                C3850) *
               C31119 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C30968 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30975 +
            (((C15598 + C15597) * C114 + (C15596 + C15595) * C31063) * C13224 +
             ((C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
               C13223 * C1359) *
                  C114 +
              (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
               C13223 * C1369) *
                  C31063) *
                 C13225) *
                C3850) *
               C30930) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C31187 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C31175 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C3342 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C31150) *
              C2688 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C31187 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C31175 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C3342 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C30867 * C31193 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C30972 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C3342) *
              C30867 * C31186 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C3342 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C30972) *
              C30867 * C31173 +
          ((((C13948 + C13947) * C114 + (C13946 + C13945) * C31063) * C13224 +
            ((C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
                 C114 +
             (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
                 C31063) *
                C13225) *
               C30972 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31195 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31192 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31183 -
           (((C15737 + C15738) * C31063 + (C15739 + C15740) * C114) * C13225 +
            ((C13227 * C2474 + C13223 * C2479 + C13226 * C2070 +
              C13222 * C2080) *
                 C31063 +
             (C13227 * C2470 + C13223 * C2473 + C13226 * C2062 +
              C13222 * C2071) *
                 C114) *
                C13224) *
               C31166) *
              C30867 * C2688 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C31192 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C31195 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C31183 +
           (((C15740 + C15739) * C114 + (C15738 + C15737) * C31063) * C13224 +
            ((C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
              C13223 * C2477) *
                 C114 +
             (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
              C13223 * C2481) *
                 C31063) *
                C13225) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30968 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30975 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C3850) *
              C30867 * C30844 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C30975 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30968 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C3850) *
              C30867 * C30853 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30968 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C30975 +
           (((C13664 + C13663) * C114 + (C13662 + C13661) * C31063) * C13224 +
            ((C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                 C114 +
             (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                 C31063) *
                C13225) *
               C3850) *
              C30867 * C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C3342 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C30867 * C31193 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C30972 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C3342) *
              C30867 * C31186 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C3342 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C30972) *
              C30867 * C31173 +
          ((((C13948 + C13947) * C114 + (C13946 + C13945) * C31063) * C13224 +
            ((C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
                 C114 +
             (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
                 C31063) *
                C13225) *
               C30972 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C3342 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C31187 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C3342) *
               C31175 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C3342 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C31150) *
              C2688 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C3342) *
               C31187 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C3342 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C31175 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31119 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C30930) *
              C695 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C30930 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31119) *
              C696 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C31119 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C30930) *
              C697 +
          ((((C13806 + C13805) * C114 + (C13804 + C13803) * C31063) * C13224 +
            ((C13226 * C310 + C13222 * C329 + C13227 * C311 + C13223 * C330) *
                 C114 +
             (C13226 * C328 + C13222 * C340 + C13227 * C331 + C13223 * C341) *
                 C31063) *
                C13225) *
               C30885 * C30930 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1468 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1469 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C1470 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C30885 * C31160) *
              C31105 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1469 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1468 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C1470 +
           (((C14682 + C14681) * C114 + (C14680 + C14679) * C31063) * C13224 +
            ((C13226 * C1200 + C13222 * C1207 + C13227 * C1205 +
              C13223 * C1216) *
                 C114 +
             (C13226 * C1206 + C13222 * C1218 + C13227 * C1217 +
              C13223 * C1223) *
                 C31063) *
                C13225) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C31119 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C30930) *
              C299 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C31119 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C30930) *
              C300 +
          (((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
             ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
                C31120 -
            (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
             ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
                C30972) *
               C31119 +
           ((((C14166 + C14165) * C114 + (C14164 + C14163) * C31063) * C13224 +
             ((C13226 * C974 + C13222 * C983 + C13227 * C1640 +
               C13223 * C1641) *
                  C114 +
              (C13226 * C982 + C13222 * C989 + C13227 * C1642 +
               C13223 * C1643) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
             ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
                C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31120 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C1468 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C30972 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C31120) *
              C1469 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C31120 -
           (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C30972) *
              C1470 +
          ((((C13226 * C1758 + C13222 * C1761 + C13227 * C5663 +
              C13223 * C5668) *
                 C114 +
             (C13226 * C1762 + C13222 * C1767 + C13227 * C5667 +
              C13223 * C5672) *
                 C31063) *
                C13224 +
            ((C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
              C13223 * C5923) *
                 C114 +
             (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
              C13223 * C5925) *
                 C31063) *
                C13225) *
               C30972 -
           (((C14679 + C14680) * C31063 + (C14681 + C14682) * C114) * C13225 +
            ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
              C13222 * C1220) *
                 C31063 +
             (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
              C13222 * C1211) *
                 C114) *
                C13224) *
               C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C31175 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C299 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C31175 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31187 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C300 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13227 * C326 + C13223 * C339 + C13226 * C325 + C13222 * C338) *
                 C31063 +
             (C13227 * C309 + C13223 * C327 + C13226 * C308 + C13222 * C324) *
                 C114) *
                C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C31175 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C30867 * C108 -
          (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
           ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
              C30885 * C30867 * C109 +
          (((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
           ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
              C30885 * C30867 * C110 -
          (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
           ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
              C30885 * C30867 * C111 +
          (((C13276 + C13275) * C114 + (C13274 + C13273) * C31063) * C13224 +
           ((C13226 * C120 + C13222 * C133 + C13227 * C699 + C13223 * C700) *
                C114 +
            (C13226 * C132 + C13222 * C141 + C13227 * C701 + C13223 * C702) *
                C31063) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31188 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C30867 * C299 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C31177 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C31188 -
           (((C13661 + C13662) * C31063 + (C13663 + C13664) * C114) * C13225 +
            ((C13656 + C13655) * C31063 + (C13654 + C13653) * C114) * C13224) *
               C31153) *
              C30867 * C300 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C31188 -
           (((C13227 * C982 + C13223 * C989 + C13226 * C528 + C13222 * C541) *
                 C31063 +
             (C13227 * C974 + C13223 * C983 + C13226 * C511 + C13222 * C527) *
                 C114) *
                C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C31177 +
           (((C13664 + C13663) * C114 + (C13662 + C13661) * C31063) * C13224 +
            ((C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                 C114 +
             (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                 C31063) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C31184 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1127 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1126 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C1127 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C1194 -
          (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
           ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C31063 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C114) *
               C13224) *
              C30885 * C1195 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C114 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C31063) *
               C13224 +
           ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
              C30885 * C1196 -
          (((C13227 * C1215 + C13223 * C1222 + C13226 * C1208 +
             C13222 * C1219) *
                C31063 +
            (C13227 * C1204 + C13223 * C1214 + C13226 * C1201 +
             C13222 * C1209) *
                C114) *
               C13225 +
           ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C31063 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C114) *
               C13224) *
              C30885 * C1197 +
          (((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 +
             C13223 * C5547) *
                C114 +
            (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 +
             C13223 * C5550) *
                C31063) *
               C13224 +
           ((C13226 * C1204 + C13222 * C1214 + C13227 * C5772 +
             C13223 * C5773) *
                C114 +
            (C13226 * C1215 + C13222 * C1222 + C13227 * C5774 +
             C13223 * C5775) *
                C31063) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31188 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C508 + C13222 * C521 + C13227 * C1336 + C13223 * C1348) *
                 C114 +
             (C13226 * C522 + C13222 * C538 + C13227 * C1347 + C13223 * C1363) *
                 C31063) *
                C13224 +
            ((C13653 + C13654) * C114 + (C13655 + C13656) * C31063) * C13225) *
               C31153) *
              C1126 +
          ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 + C13223 * C1354) *
                 C114 +
             (C13226 * C977 + C13222 * C986 + C13227 * C1353 + C13223 * C1366) *
                 C31063) *
                C13224 +
            ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
               C31177 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C31188 -
           (((C13227 * C1358 + C13223 * C1368 + C13226 * C1345 +
              C13222 * C1362) *
                 C31063 +
             (C13227 * C1341 + C13223 * C1357 + C13226 * C1335 +
              C13222 * C1346) *
                 C114) *
                C13225 +
            ((C13227 * C1356 + C13223 * C1367 + C13226 * C1347 +
              C13222 * C1363) *
                 C31063 +
             (C13227 * C1340 + C13223 * C1355 + C13226 * C1336 +
              C13222 * C1348) *
                 C114) *
                C13224) *
               C31153) *
              C1127 +
          ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C31188 -
           (((C13227 * C1764 + C13223 * C1768 + C13226 * C1351 +
              C13222 * C1365) *
                 C31063 +
             (C13227 * C1759 + C13223 * C1763 + C13226 * C1338 +
              C13222 * C1352) *
                 C114) *
                C13225 +
            ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
              C13222 * C1366) *
                 C31063 +
             (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
              C13222 * C1354) *
                 C114) *
                C13224) *
               C31177 +
           (((C13226 * C1340 + C13222 * C1355 + C13227 * C5662 +
              C13223 * C5666) *
                 C114 +
             (C13226 * C1356 + C13222 * C1367 + C13227 * C5665 +
              C13223 * C5671) *
                 C31063) *
                C13224 +
            ((C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C114 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C31063) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C31120 -
           (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
            ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                 C31063 +
             (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                 C114) *
                C13224) *
               C30972) *
              C30867 * C695 +
          ((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
            ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
               C30972 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C31120) *
              C30867 * C696 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C31120 -
           (((C13945 + C13946) * C31063 + (C13947 + C13948) * C114) * C13225 +
            ((C13660 + C13659) * C31063 + (C13658 + C13657) * C114) * C13224) *
               C30972) *
              C30867 * C697 +
          ((((C13948 + C13947) * C114 + (C13946 + C13945) * C31063) * C13224 +
            ((C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
                 C114 +
             (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
                 C31063) *
                C13225) *
               C30972 -
           (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
            ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
               C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                  C114 +
              (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                  C31063) *
                 C13224 +
             ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
                C31120 -
            (((C13649 + C13650) * C31063 + (C13651 + C13652) * C114) * C13225 +
             ((C13227 * C977 + C13223 * C986 + C13226 * C519 + C13222 * C537) *
                  C31063 +
              (C13227 * C971 + C13223 * C976 + C13226 * C507 + C13222 * C520) *
                  C114) *
                 C13224) *
                C30972) *
               C1126 +
           ((((C13226 * C971 + C13222 * C976 + C13227 * C1339 +
               C13223 * C1354) *
                  C114 +
              (C13226 * C977 + C13222 * C986 + C13227 * C1353 +
               C13223 * C1366) *
                  C31063) *
                 C13224 +
             ((C14159 + C14160) * C114 + (C14161 + C14162) * C31063) * C13225) *
                C30972 -
            (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
             ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                  C31063 +
              (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                  C114) *
                 C13224) *
                C31120) *
               C1127 +
           ((((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
               C13223 * C1211) *
                  C114 +
              (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
               C13223 * C1220) *
                  C31063) *
                 C13224 +
             ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
                C31120 -
            (((C14885 + C14886) * C31063 + (C14887 + C14888) * C114) * C13225 +
             ((C13227 * C1762 + C13223 * C1767 + C13226 * C1353 +
               C13222 * C1366) *
                  C31063 +
              (C13227 * C1758 + C13223 * C1761 + C13226 * C1339 +
               C13222 * C1354) *
                  C114) *
                 C13224) *
                C30972) *
               C31150) *
              C31105 +
          (((((C13652 + C13651) * C114 + (C13650 + C13649) * C31063) * C13224 +
             ((C13657 + C13658) * C114 + (C13659 + C13660) * C31063) * C13225) *
                C30972 -
            (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
             ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
                C31120) *
               C1126 +
           ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
             ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
                C31120 -
            (((C14163 + C14164) * C31063 + (C14165 + C14166) * C114) * C13225 +
             ((C14162 + C14161) * C31063 + (C14160 + C14159) * C114) * C13224) *
                C30972) *
               C1127 +
           ((((C14888 + C14887) * C114 + (C14886 + C14885) * C31063) * C13224 +
             ((C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
               C13223 * C1765) *
                  C114 +
              (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
               C13223 * C1769) *
                  C31063) *
                 C13225) *
                C30972 -
            (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
             ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
                C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C30867 * C108 -
          (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
           ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
              C30885 * C30867 * C109 +
          (((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
           ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
              C30885 * C30867 * C110 -
          (((C13273 + C13274) * C31063 + (C13275 + C13276) * C114) * C13225 +
           ((C13272 + C13271) * C31063 + (C13270 + C13269) * C114) * C13224) *
              C30885 * C30867 * C111 +
          (((C13276 + C13275) * C114 + (C13274 + C13273) * C31063) * C13224 +
           ((C13226 * C120 + C13222 * C133 + C13227 * C699 + C13223 * C700) *
                C114 +
            (C13226 * C132 + C13222 * C141 + C13227 * C701 + C13223 * C702) *
                C31063) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C31175 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C299 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C31175 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C31187 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C300 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C31187 -
           (((C13227 * C326 + C13223 * C339 + C13226 * C325 + C13222 * C338) *
                 C31063 +
             (C13227 * C309 + C13223 * C327 + C13226 * C308 + C13222 * C324) *
                 C114) *
                C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C31175 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C114 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C31063) *
                C13224 +
            ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
            ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C31063 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C114) *
                C13224) *
               C30885 * C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C114 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C31063) *
                C13224 +
            ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
               C30885 * C31150) *
              C31184 +
          ((((C13458 + C13457) * C114 + (C13456 + C13455) * C31063) * C13224 +
            ((C13463 + C13464) * C114 + (C13465 + C13466) * C31063) * C13225) *
               C30885 * C1127 -
           (((C13265 + C13266) * C31063 + (C13267 + C13268) * C114) * C13225 +
            ((C13264 + C13263) * C31063 + (C13262 + C13261) * C114) * C13224) *
               C30885 * C1126 -
           (((C13467 + C13468) * C31063 + (C13469 + C13470) * C114) * C13225 +
            ((C13462 + C13461) * C31063 + (C13460 + C13459) * C114) * C13224) *
               C30885 * C31150) *
              C31171 +
          ((((C13268 + C13267) * C114 + (C13266 + C13265) * C31063) * C13224 +
            ((C13269 + C13270) * C114 + (C13271 + C13272) * C31063) * C13225) *
               C30885 * C1126 -
           (((C13803 + C13804) * C31063 + (C13805 + C13806) * C114) * C13225 +
            ((C13466 + C13465) * C31063 + (C13464 + C13463) * C114) * C13224) *
               C30885 * C1127 +
           (((C13470 + C13469) * C114 + (C13468 + C13467) * C31063) * C13224 +
            ((C13226 * C309 + C13222 * C327 + C13227 * C1474 + C13223 * C1475) *
                 C114 +
             (C13226 * C326 + C13222 * C339 + C13227 * C1476 + C13223 * C1477) *
                 C31063) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C114 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C31063) *
               C13224 +
           ((C13261 + C13262) * C114 + (C13263 + C13264) * C31063) * C13225) *
              C30885 * C1194 -
          (((C13455 + C13456) * C31063 + (C13457 + C13458) * C114) * C13225 +
           ((C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C31063 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C114) *
               C13224) *
              C30885 * C1195 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C114 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C31063) *
               C13224 +
           ((C13459 + C13460) * C114 + (C13461 + C13462) * C31063) * C13225) *
              C30885 * C1196 -
          (((C13227 * C1215 + C13223 * C1222 + C13226 * C1208 +
             C13222 * C1219) *
                C31063 +
            (C13227 * C1204 + C13223 * C1214 + C13226 * C1201 +
             C13222 * C1209) *
                C114) *
               C13225 +
           ((C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C31063 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C114) *
               C13224) *
              C30885 * C1197 +
          (((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 +
             C13223 * C5547) *
                C114 +
            (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 +
             C13223 * C5550) *
                C31063) *
               C13224 +
           ((C13226 * C1204 + C13222 * C1214 + C13227 * C5772 +
             C13223 * C5773) *
                C114 +
            (C13226 * C1215 + C13222 * C1222 + C13227 * C5774 +
             C13223 * C5775) *
                C31063) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C30926 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C30933 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30885 * C2948) *
              C30844 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C30933 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C30926 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C2948) *
              C30853 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C30926 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C30933 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C2948) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C30926 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C30933 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C31120 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C2948) *
              C2688 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C30926 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30933 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C31120) *
               C2948) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C31194 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C31190 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30885 * C31180 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C31190 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31194 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31180 +
           ((C14682 + C14681) * C18918 + (C14680 + C14679) * C18916 +
            (C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
             C13223 * C5923) *
                C18919 +
            (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
             C13223 * C5925) *
                C18917) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C2580 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C30930 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C2580 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C13806 + C13805) * C18918 + (C13804 + C13803) * C18916 +
            (C13226 * C974 + C13222 * C983 + C13227 * C1640 + C13223 * C1641) *
                C18919 +
            (C13226 * C982 + C13222 * C989 + C13227 * C1642 + C13223 * C1643) *
                C18917) *
               C30817 * C30885 * C30930 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31188 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C31177 +
            ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
             (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
                C30817 * C31153) *
               C2580 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C31177 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31188 -
            ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
             (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
                C30817 * C31153) *
               C30930) *
              C2688 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C31177 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31188 -
            ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
             (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
                C30817 * C31153) *
               C2580 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31188 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C31177 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C18919 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C18917) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C30930) *
              C30844 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C2580 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C31120 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C31120) *
               C30930) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C2580 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C30930 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C2580 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C13806 + C13805) * C18918 + (C13804 + C13803) * C18916 +
            (C13226 * C974 + C13222 * C983 + C13227 * C1640 + C13223 * C1641) *
                C18919 +
            (C13226 * C982 + C13222 * C989 + C13227 * C1642 + C13223 * C1643) *
                C18917) *
               C30817 * C30885 * C30930 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C31194 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C31190 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30885 * C31180 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C31190 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31194 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31180 +
           ((C14682 + C14681) * C18918 + (C14680 + C14679) * C18916 +
            (C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
             C13223 * C5923) *
                C18919 +
            (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
             C13223 * C5925) *
                C18917) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C30926 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C30933 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C3342 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C2948) *
              C31105 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C30926 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30933 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C3342) *
               C2948) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30968 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30975 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C3850) *
              C30926 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C30975 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30968 -
           ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C3850) *
              C30933 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30968 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C30975 +
           ((C25646 + C25645) * C18918 + (C25644 + C25643) * C18916 +
            (C13226 * C6310 + C13222 * C6314 + C13227 * C6672 +
             C13223 * C6673) *
                C18919 +
            (C13226 * C6313 + C13222 * C6319 + C13227 * C6674 +
             C13223 * C6675) *
                C18917) *
               C30817 * C3850) *
              C2948) *
         C30839) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C3342 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C31194 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C30972 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C3342) *
              C31190 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C3342 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C30972) *
              C31180 +
          (((C26109 + C26110) * C18918 + (C26111 + C26112) * C18916 +
            (C13226 * C5662 + C13222 * C5666 + C13227 * C5664 +
             C13223 * C5669) *
                C18919 +
            (C13226 * C5665 + C13222 * C5671 + C13227 * C5670 +
             C13223 * C5673) *
                C18917) *
               C30817 * C30972 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C2580 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C3342 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31195 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31192 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C31183 -
           ((C26507 + C26508) * C18917 + (C26509 + C26510) * C18919 +
            (C26506 + C26505) * C18916 + (C26504 + C26503) * C18918) *
               C30817 * C31166) *
              C2580 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C31192 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C31195 -
           ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C31183 +
           ((C26976 + C26975) * C18918 + (C26974 + C26973) * C18916 +
            (C13226 * C6311 + C13222 * C6315 + C13227 * C6312 +
             C13223 * C6316) *
                C18919 +
            (C13226 * C6317 + C13222 * C6320 + C13227 * C6318 +
             C13223 * C6321) *
                C18917) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C30968 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30975 +
            ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
             (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
                C30817 * C3850) *
               C2580 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30975 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C30968 -
            ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
             (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
                C30817 * C3850) *
               C30930) *
              C31105 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30975 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C30968 -
            ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
             (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
                C30817 * C3850) *
               C2580 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C30968 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30975 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C18919 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C18917) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C2580 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C3342 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C2580 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C3342 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C31194 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C30972 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C3342) *
              C31190 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C3342 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C30972) *
              C31180 +
          (((C26109 + C26110) * C18918 + (C26111 + C26112) * C18916 +
            (C13226 * C5662 + C13222 * C5666 + C13227 * C5664 +
             C13223 * C5669) *
                C18919 +
            (C13226 * C5665 + C13222 * C5671 + C13227 * C5670 +
             C13223 * C5673) *
                C18917) *
               C30817 * C30972 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1468 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1469 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30885 * C1470 -
           ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 +
             C13222 * C1767) *
                C18917 +
            (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 +
             C13222 * C1761) *
                C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C30885 * C31160) *
              C31105 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1469 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1468 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C1470 +
           ((C14682 + C14681) * C18918 + (C14680 + C14679) * C18916 +
            (C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
             C13223 * C5923) *
                C18919 +
            (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
             C13223 * C5925) *
                C18917) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C31119 -
           ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 + C13222 * C986) *
                C18917 +
            (C13227 * C1339 + C13223 * C1354 + C13226 * C971 + C13222 * C976) *
                C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C30930) *
              C695 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C30930 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31119) *
              C696 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C31119 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C30930) *
              C697 +
          (((C13806 + C13805) * C18918 + (C13804 + C13803) * C18916 +
            (C13226 * C974 + C13222 * C983 + C13227 * C1640 + C13223 * C1641) *
                C18919 +
            (C13226 * C982 + C13222 * C989 + C13227 * C1642 + C13223 * C1643) *
                C18917) *
               C30817 * C30885 * C30930 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C1880 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C1881 +
            ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
             (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
                C30817 * C31153) *
               C31119 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C1881 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C1880 -
            ((C13227 * C6313 + C13223 * C6319 + C13226 * C2474 +
              C13222 * C2479) *
                 C18917 +
             (C13227 * C6310 + C13223 * C6314 + C13226 * C2470 +
              C13222 * C2473) *
                 C18919 +
             (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
                C30817 * C31153) *
               C30930) *
              C31105 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C1881 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C1880 -
            ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
             (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
                C30817 * C31153) *
               C31119 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C1880 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C1881 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C18919 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C18917) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31120 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C1468 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C30972 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C31120) *
              C1469 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C31120 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C30972) *
              C1470 +
          (((C26109 + C26110) * C18918 + (C26111 + C26112) * C18916 +
            (C13226 * C5662 + C13222 * C5666 + C13227 * C5664 +
             C13223 * C5669) *
                C18919 +
            (C13226 * C5665 + C13222 * C5671 + C13227 * C5670 +
             C13223 * C5673) *
                C18917) *
               C30817 * C30972 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C13226 * C1336 + C13222 * C1348 + C13227 * C1340 +
              C13223 * C1355) *
                 C18919 +
             (C13226 * C1347 + C13222 * C1363 + C13227 * C1356 +
              C13223 * C1367) *
                 C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C31119 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C31120 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C2348 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C2349 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C2350 -
           ((C26507 + C26508) * C18917 + (C26509 + C26510) * C18919 +
            (C26506 + C26505) * C18916 + (C26504 + C26503) * C18918) *
               C30817 * C31166) *
              C31119 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C2349 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C2348 -
           ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C2350 +
           ((C26976 + C26975) * C18918 + (C26974 + C26973) * C18916 +
            (C13226 * C6311 + C13222 * C6315 + C13227 * C6312 +
             C13223 * C6316) *
                C18919 +
            (C13226 * C6317 + C13222 * C6320 + C13227 * C6318 +
             C13223 * C6321) *
                C18917) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                   C18918 +
               (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                   C18916 +
               (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
                   C18919 +
               (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
                   C18917) *
                  C30817 * C30885 * C30867 * C108 -
              ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
               (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                  C30817 * C30885 * C30867 * C109 +
              ((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
               (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                  C30817 * C30885 * C30867 * C110 -
              ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
               (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
                  C30817 * C30885 * C30867 * C111 +
              ((C13276 + C13275) * C18918 + (C13274 + C13273) * C18916 +
               (C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
                   C18919 +
               (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
                   C18917) *
                  C30817 * C30885 * C30867 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C13226 * C115 + C13222 * C122 + C13227 * C304 +
                 C13223 * C317) *
                    C18918 +
                (C13226 * C123 + C13222 * C136 + C13227 * C316 +
                 C13223 * C334) *
                    C18916 +
                (C13226 * C507 + C13222 * C520 + C13227 * C971 +
                 C13223 * C976) *
                    C18919 +
                (C13226 * C519 + C13222 * C537 + C13227 * C977 +
                 C13223 * C986) *
                    C18917) *
                   C30817 * C30885 * C31187 -
               ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 +
                 C13222 * C986) *
                    C18917 +
                (C13227 * C1339 + C13223 * C1354 + C13226 * C971 +
                 C13222 * C976) *
                    C18919 +
                (C13227 * C319 + C13223 * C335 + C13226 * C316 +
                 C13222 * C334) *
                    C18916 +
                (C13227 * C305 + C13223 * C318 + C13226 * C304 +
                 C13222 * C317) *
                    C18918) *
                   C30817 * C30885 * C31175 +
               ((C13226 * C305 + C13222 * C318 + C13227 * C1202 +
                 C13223 * C1211) *
                    C18918 +
                (C13226 * C319 + C13222 * C335 + C13227 * C1210 +
                 C13223 * C1220) *
                    C18916 +
                (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
                 C13223 * C1761) *
                    C18919 +
                (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
                 C13223 * C1767) *
                    C18917) *
                   C30817 * C30885 * C31150) *
                  C299 +
              (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
                (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                   C30817 * C30885 * C31175 -
               ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
                (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                   C30817 * C30885 * C31187 -
               ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
                (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                   C30817 * C30885 * C31150) *
                  C300 +
              (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
                (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                   C30817 * C30885 * C31187 -
               ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
                (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                   C30817 * C30885 * C31175 +
               ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
                (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
                 C13223 * C1765) *
                    C18919 +
                (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
                 C13223 * C1769) *
                    C18917) *
                   C30817 * C30885 * C31150) *
                  C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31188 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31177 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C31177 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C31188 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C31188 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C31177 +
           ((C13664 + C13663) * C18918 + (C13662 + C13661) * C18916 +
            (C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
             C13223 * C2477) *
                C18919 +
            (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
             C13223 * C2481) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1126 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1127 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1127 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1126 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C1126 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C1127 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
              C30817 * C30885 * C1194 -
          ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
           (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
               C18916 +
           (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
               C18918) *
              C30817 * C30885 * C1195 +
          ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
               C18918 +
           (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
               C18916 +
           (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 + C13223 * C1761) *
               C18919 +
           (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 + C13223 * C1767) *
               C18917) *
              C30817 * C30885 * C1196 -
          ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 + C13222 * C1767) *
               C18917 +
           (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 + C13222 * C1761) *
               C18919 +
           (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 + C13222 * C1220) *
               C18916 +
           (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 + C13222 * C1211) *
               C18918) *
              C30817 * C30885 * C1197 +
          ((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 + C13223 * C5547) *
               C18918 +
           (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 + C13223 * C5550) *
               C18916 +
           (C13226 * C5663 + C13222 * C5668 + C13227 * C6024 + C13223 * C6025) *
               C18919 +
           (C13226 * C5667 + C13222 * C5672 + C13227 * C6026 + C13223 * C6027) *
               C18917) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31188 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31177 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C1126 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C31177 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C31188 -
           ((C13227 * C6313 + C13223 * C6319 + C13226 * C2474 +
             C13222 * C2479) *
                C18917 +
            (C13227 * C6310 + C13223 * C6314 + C13226 * C2470 +
             C13222 * C2473) *
                C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C31153) *
              C1127 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C31188 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C31177 +
           ((C25646 + C25645) * C18918 + (C25644 + C25643) * C18916 +
            (C13226 * C6310 + C13222 * C6314 + C13227 * C6672 +
             C13223 * C6673) *
                C18919 +
            (C13226 * C6313 + C13222 * C6319 + C13227 * C6674 +
             C13223 * C6675) *
                C18917) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C1880 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C1881 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C1881 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C1880 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C1880 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C1881 +
           ((C13664 + C13663) * C18918 + (C13662 + C13661) * C18916 +
            (C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
             C13223 * C2477) *
                C18919 +
            (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
             C13223 * C2481) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C1880 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C1881 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C31187 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C1881 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C1880 -
           ((C13227 * C6313 + C13223 * C6319 + C13226 * C2474 +
             C13222 * C2479) *
                C18917 +
            (C13227 * C6310 + C13223 * C6314 + C13226 * C2470 +
             C13222 * C2473) *
                C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C31153) *
              C31175 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C1880 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C1881 +
           ((C25646 + C25645) * C18918 + (C25644 + C25643) * C18916 +
            (C13226 * C6310 + C13222 * C6314 + C13227 * C6672 +
             C13223 * C6673) *
                C18919 +
            (C13226 * C6313 + C13222 * C6319 + C13227 * C6674 +
             C13223 * C6675) *
                C18917) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
              C30817 * C2055 -
          ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
           (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
              C30817 * C2056 +
          ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
           (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
              C30817 * C2057 -
          ((C26507 + C26508) * C18917 + (C26509 + C26510) * C18919 +
           (C26506 + C26505) * C18916 + (C26504 + C26503) * C18918) *
              C30817 * C2058 +
          ((C26510 + C26509) * C18918 + (C26508 + C26507) * C18916 +
           (C13226 * C10516 + C13222 * C10519 + C13227 * C10898 +
            C13223 * C10899) *
               C18919 +
           (C13226 * C10518 + C13222 * C10522 + C13227 * C10900 +
            C13223 * C10901) *
               C18917) *
              C30817 * C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C1126 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C31120 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C1126 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C1127 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31120 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C30972 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C31120 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C13948 + C13947) * C18918 + (C13946 + C13945) * C18916 +
            (C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                C18919 +
            (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                C18917) *
               C30817 * C30972 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C2348 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C2349 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C2350 -
           ((C26507 + C26508) * C18917 + (C26509 + C26510) * C18919 +
            (C26506 + C26505) * C18916 + (C26504 + C26503) * C18918) *
               C30817 * C31166) *
              C30867 * C31105 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C2349 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C2348 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C2350 +
           ((C15740 + C15739) * C18918 + (C15738 + C15737) * C18916 +
            (C13226 * C2064 + C13222 * C2074 + C13227 * C10682 +
             C13223 * C10683) *
                C18919 +
            (C13226 * C2075 + C13222 * C2082 + C13227 * C10684 +
             C13223 * C10685) *
                C18917) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
                C18919 +
            (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
                C18917) *
               C30817 * C30885 * C31187 -
           ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 + C13222 * C986) *
                C18917 +
            (C13227 * C1339 + C13223 * C1354 + C13226 * C971 + C13222 * C976) *
                C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C31175 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C31175 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31187 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C31187 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C31175 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
               C18919 +
           (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
               C18917) *
              C30817 * C30885 * C30867 * C108 -
          ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
           (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
              C30817 * C30885 * C30867 * C109 +
          ((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
           (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
              C30817 * C30885 * C30867 * C110 -
          ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
           (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
              C30817 * C30885 * C30867 * C111 +
          ((C13276 + C13275) * C18918 + (C13274 + C13273) * C18916 +
           (C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
               C18919 +
           (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
               C18917) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1126 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1127 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1127 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1126 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C1126 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C1127 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
              C30817 * C30885 * C1194 -
          ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
           (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
               C18916 +
           (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
               C18918) *
              C30817 * C30885 * C1195 +
          ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
               C18918 +
           (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
               C18916 +
           (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 + C13223 * C1761) *
               C18919 +
           (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 + C13223 * C1767) *
               C18917) *
              C30817 * C30885 * C1196 -
          ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 + C13222 * C1767) *
               C18917 +
           (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 + C13222 * C1761) *
               C18919 +
           (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 + C13222 * C1220) *
               C18916 +
           (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 + C13222 * C1211) *
               C18918) *
              C30817 * C30885 * C1197 +
          ((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 + C13223 * C5547) *
               C18918 +
           (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 + C13223 * C5550) *
               C18916 +
           (C13226 * C5663 + C13222 * C5668 + C13227 * C6024 + C13223 * C6025) *
               C18919 +
           (C13226 * C5667 + C13222 * C5672 + C13227 * C6026 + C13223 * C6027) *
               C18917) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C1880 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C1881 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C1881 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C1880 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C1880 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C1881 +
           ((C13664 + C13663) * C18918 + (C13662 + C13661) * C18916 +
            (C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
             C13223 * C2477) *
                C18919 +
            (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
             C13223 * C2481) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C1880 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C1881 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C31187 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C1881 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C1880 -
           ((C13227 * C6313 + C13223 * C6319 + C13226 * C2474 +
             C13222 * C2479) *
                C18917 +
            (C13227 * C6310 + C13223 * C6314 + C13226 * C2470 +
             C13222 * C2473) *
                C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C31153) *
              C31175 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C1880 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C1881 +
           ((C25646 + C25645) * C18918 + (C25644 + C25643) * C18916 +
            (C13226 * C6310 + C13222 * C6314 + C13227 * C6672 +
             C13223 * C6673) *
                C18919 +
            (C13226 * C6313 + C13222 * C6319 + C13227 * C6674 +
             C13223 * C6675) *
                C18917) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C30930) *
              C30844 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C31119 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C3342 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C3342) *
               C30930) *
              C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C30968 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30975 +
            ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
             (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
                C30817 * C3850) *
               C31119 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30975 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C30968 -
            ((C26973 + C26974) * C18917 + (C26975 + C26976) * C18919 +
             (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
                C30817 * C3850) *
               C30930) *
              C2688 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30975 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C30968 -
            ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
             (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
                C30817 * C3850) *
               C31119 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C30968 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30975 +
            ((C15598 + C15597) * C18918 + (C15596 + C15595) * C18916 +
             (C13226 * C2471 + C13222 * C2475 + C13227 * C6570 +
              C13223 * C6571) *
                 C18919 +
             (C13226 * C2476 + C13222 * C2480 + C13227 * C6572 +
              C13223 * C6573) *
                 C18917) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C31187 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C31175 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C3342 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C31187 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C31175 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C3342 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C30972 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C3342 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C13948 + C13947) * C18918 + (C13946 + C13945) * C18916 +
            (C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                C18919 +
            (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                C18917) *
               C30817 * C30972 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31195 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31192 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C31183 -
           ((C26507 + C26508) * C18917 + (C26509 + C26510) * C18919 +
            (C26506 + C26505) * C18916 + (C26504 + C26503) * C18918) *
               C30817 * C31166) *
              C30867 * C2688 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C31192 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C31195 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C31183 +
           ((C15740 + C15739) * C18918 + (C15738 + C15737) * C18916 +
            (C13226 * C2064 + C13222 * C2074 + C13227 * C10682 +
             C13223 * C10683) *
                C18919 +
            (C13226 * C2075 + C13222 * C2082 + C13227 * C10684 +
             C13223 * C10685) *
                C18917) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30968 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30975 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C26503 + C26504) * C18919 + (C26505 + C26506) * C18917) *
               C30817 * C3850) *
              C30867 * C30844 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C30975 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30968 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C3850) *
              C30867 * C30853 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30968 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C30975 +
           ((C13664 + C13663) * C18918 + (C13662 + C13661) * C18916 +
            (C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
             C13223 * C2477) *
                C18919 +
            (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
             C13223 * C2481) *
                C18917) *
               C30817 * C3850) *
              C30867 * C2951)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C3342 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C30972 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C3342 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C13948 + C13947) * C18918 + (C13946 + C13945) * C18916 +
            (C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                C18919 +
            (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                C18917) *
               C30817 * C30972 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C3342 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C31187 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C3342) *
               C31175 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C3342 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C3342) *
               C31187 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C3342 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C31175 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C31119 -
           ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 + C13222 * C986) *
                C18917 +
            (C13227 * C1339 + C13223 * C1354 + C13226 * C971 + C13222 * C976) *
                C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C30930) *
              C695 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C30930 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31119) *
              C696 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C31119 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C30930) *
              C697 +
          (((C13806 + C13805) * C18918 + (C13804 + C13803) * C18916 +
            (C13226 * C974 + C13222 * C983 + C13227 * C1640 + C13223 * C1641) *
                C18919 +
            (C13226 * C982 + C13222 * C989 + C13227 * C1642 + C13223 * C1643) *
                C18917) *
               C30817 * C30885 * C30930 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1468 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1469 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C30885 * C1470 -
           ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 +
             C13222 * C1767) *
                C18917 +
            (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 +
             C13222 * C1761) *
                C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C30885 * C31160) *
              C31105 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1469 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1468 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C1470 +
           ((C14682 + C14681) * C18918 + (C14680 + C14679) * C18916 +
            (C13226 * C1759 + C13222 * C1763 + C13227 * C5922 +
             C13223 * C5923) *
                C18919 +
            (C13226 * C1764 + C13222 * C1768 + C13227 * C5924 +
             C13223 * C5925) *
                C18917) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C13226 * C1336 + C13222 * C1348 + C13227 * C1340 +
              C13223 * C1355) *
                 C18919 +
             (C13226 * C1347 + C13222 * C1363 + C13227 * C1356 +
              C13223 * C1367) *
                 C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C31119 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
             (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
                C30817 * C31120 -
            ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
             (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
                C30817 * C30972) *
               C31119 +
           (((C14166 + C14165) * C18918 + (C14164 + C14163) * C18916 +
             (C13226 * C1334 + C13222 * C1344 + C13227 * C1342 +
              C13223 * C1359) *
                 C18919 +
             (C13226 * C1343 + C13222 * C1361 + C13227 * C1360 +
              C13223 * C1369) *
                 C18917) *
                C30817 * C30972 -
            ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
             (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31120 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C1468 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C30972 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C31120) *
              C1469 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C31120 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C30972) *
              C1470 +
          (((C26109 + C26110) * C18918 + (C26111 + C26112) * C18916 +
            (C13226 * C5662 + C13222 * C5666 + C13227 * C5664 +
             C13223 * C5669) *
                C18919 +
            (C13226 * C5665 + C13222 * C5671 + C13227 * C5670 +
             C13223 * C5673) *
                C18917) *
               C30817 * C30972 -
           ((C26112 + C26111) * C18917 + (C26110 + C26109) * C18919 +
            (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 +
             C13222 * C1220) *
                C18916 +
            (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 +
             C13222 * C1211) *
                C18918) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
                C18919 +
            (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
                C18917) *
               C30817 * C30885 * C31187 -
           ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 + C13222 * C986) *
                C18917 +
            (C13227 * C1339 + C13223 * C1354 + C13226 * C971 + C13222 * C976) *
                C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C31175 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C31175 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31187 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C31187 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C31175 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
               C18919 +
           (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
               C18917) *
              C30817 * C30885 * C30867 * C108 -
          ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
           (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
              C30817 * C30885 * C30867 * C109 +
          ((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
           (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
              C30817 * C30885 * C30867 * C110 -
          ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
           (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
              C30817 * C30885 * C30867 * C111 +
          ((C13276 + C13275) * C18918 + (C13274 + C13273) * C18916 +
           (C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
               C18919 +
           (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
               C18917) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31188 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31177 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C31177 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C31188 -
           ((C15737 + C15738) * C18917 + (C15739 + C15740) * C18919 +
            (C13656 + C13655) * C18916 + (C13654 + C13653) * C18918) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C31188 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C31177 +
           ((C13664 + C13663) * C18918 + (C13662 + C13661) * C18916 +
            (C13226 * C2060 + C13222 * C2067 + C13227 * C2472 +
             C13223 * C2477) *
                C18919 +
            (C13226 * C2066 + C13222 * C2078 + C13227 * C2478 +
             C13223 * C2481) *
                C18917) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1126 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1127 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1127 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1126 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C1126 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C1127 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
              C30817 * C30885 * C1194 -
          ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
           (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
               C18916 +
           (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
               C18918) *
              C30817 * C30885 * C1195 +
          ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
               C18918 +
           (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
               C18916 +
           (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 + C13223 * C1761) *
               C18919 +
           (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 + C13223 * C1767) *
               C18917) *
              C30817 * C30885 * C1196 -
          ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 + C13222 * C1767) *
               C18917 +
           (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 + C13222 * C1761) *
               C18919 +
           (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 + C13222 * C1220) *
               C18916 +
           (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 + C13222 * C1211) *
               C18918) *
              C30817 * C30885 * C1197 +
          ((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 + C13223 * C5547) *
               C18918 +
           (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 + C13223 * C5550) *
               C18916 +
           (C13226 * C5663 + C13222 * C5668 + C13227 * C6024 + C13223 * C6025) *
               C18919 +
           (C13226 * C5667 + C13222 * C5672 + C13227 * C6026 + C13223 * C6027) *
               C18917) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31188 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C31177 +
           ((C24770 + C24769) * C18918 + (C24768 + C24767) * C18916 +
            (C13226 * C2062 + C13222 * C2071 + C13227 * C2470 +
             C13223 * C2473) *
                C18919 +
            (C13226 * C2070 + C13222 * C2080 + C13227 * C2474 +
             C13223 * C2479) *
                C18917) *
               C30817 * C31153) *
              C1126 +
          (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
            (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
               C30817 * C31177 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C31188 -
           ((C13227 * C6313 + C13223 * C6319 + C13226 * C2474 +
             C13222 * C2479) *
                C18917 +
            (C13227 * C6310 + C13223 * C6314 + C13226 * C2470 +
             C13222 * C2473) *
                C18919 +
            (C25638 + C25637) * C18916 + (C25636 + C25635) * C18918) *
               C30817 * C31153) *
              C1127 +
          (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
               C30817 * C31188 -
           ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
            (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
               C30817 * C31177 +
           ((C25646 + C25645) * C18918 + (C25644 + C25643) * C18916 +
            (C13226 * C6310 + C13222 * C6314 + C13227 * C6672 +
             C13223 * C6673) *
                C18919 +
            (C13226 * C6313 + C13222 * C6319 + C13227 * C6674 +
             C13223 * C6675) *
                C18917) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C31120 -
           ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
            (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
            (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
               C30817 * C30972 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C31120 -
           ((C13661 + C13662) * C18917 + (C13663 + C13664) * C18919 +
            (C13660 + C13659) * C18916 + (C13658 + C13657) * C18918) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C13948 + C13947) * C18918 + (C13946 + C13945) * C18916 +
            (C13226 * C512 + C13222 * C530 + C13227 * C2230 + C13223 * C2231) *
                C18919 +
            (C13226 * C529 + C13222 * C542 + C13227 * C2232 + C13223 * C2233) *
                C18917) *
               C30817 * C30972 -
           ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
            (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                 C18918 +
             (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                 C18916 +
             (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
                C30817 * C31120 -
            ((C24767 + C24768) * C18917 + (C24769 + C24770) * C18919 +
             (C24766 + C24765) * C18916 + (C24764 + C24763) * C18918) *
                C30817 * C30972) *
               C1126 +
           (((C25233 + C25234) * C18918 + (C25235 + C25236) * C18916 +
             (C25635 + C25636) * C18919 + (C25637 + C25638) * C18917) *
                C30817 * C30972 -
            ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
             (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                 C18916 +
             (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                 C18918) *
                C30817 * C31120) *
               C1127 +
           (((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                 C18918 +
             (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                 C18916 +
             (C25639 + C25640) * C18919 + (C25641 + C25642) * C18917) *
                C30817 * C31120 -
            ((C25643 + C25644) * C18917 + (C25645 + C25646) * C18919 +
             (C25642 + C25641) * C18916 + (C25640 + C25639) * C18918) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C13652 + C13651) * C18918 + (C13650 + C13649) * C18916 +
             (C13653 + C13654) * C18919 + (C13655 + C13656) * C18917) *
                C30817 * C30972 -
            ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
             (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
                C30817 * C31120) *
               C1126 +
           (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
             (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
                C30817 * C31120 -
            ((C15595 + C15596) * C18917 + (C15597 + C15598) * C18919 +
             (C14162 + C14161) * C18916 + (C14160 + C14159) * C18918) *
                C30817 * C30972) *
               C1127 +
           (((C14888 + C14887) * C18918 + (C14886 + C14885) * C18916 +
             (C13226 * C1341 + C13222 * C1357 + C13227 * C6468 +
              C13223 * C6469) *
                 C18919 +
             (C13226 * C1358 + C13222 * C1368 + C13227 * C6470 +
              C13223 * C6471) *
                 C18917) *
                C30817 * C30972 -
            ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
             (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
               C18919 +
           (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
               C18917) *
              C30817 * C30885 * C30867 * C108 -
          ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
           (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
              C30817 * C30885 * C30867 * C109 +
          ((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
           (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
              C30817 * C30885 * C30867 * C110 -
          ((C13945 + C13946) * C18917 + (C13947 + C13948) * C18919 +
           (C13272 + C13271) * C18916 + (C13270 + C13269) * C18918) *
              C30817 * C30885 * C30867 * C111 +
          ((C13276 + C13275) * C18918 + (C13274 + C13273) * C18916 +
           (C13226 * C513 + C13222 * C532 + C13227 * C975 + C13223 * C984) *
               C18919 +
           (C13226 * C531 + C13222 * C543 + C13227 * C985 + C13223 * C990) *
               C18917) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C13226 * C507 + C13222 * C520 + C13227 * C971 + C13223 * C976) *
                C18919 +
            (C13226 * C519 + C13222 * C537 + C13227 * C977 + C13223 * C986) *
                C18917) *
               C30817 * C30885 * C31187 -
           ((C13227 * C1353 + C13223 * C1366 + C13226 * C977 + C13222 * C986) *
                C18917 +
            (C13227 * C1339 + C13223 * C1354 + C13226 * C971 + C13222 * C976) *
                C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C31175 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C31175 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C31187 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C31187 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C31175 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
                C18918 +
            (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
                C18916 +
            (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
               C30817 * C30885 * C1126 -
           ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
            (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
                C18916 +
            (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
                C18918) *
               C30817 * C30885 * C1127 +
           ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
                C18918 +
            (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
                C18916 +
            (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 +
             C13223 * C1761) *
                C18919 +
            (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 +
             C13223 * C1767) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C13458 + C13457) * C18918 + (C13456 + C13455) * C18916 +
            (C14159 + C14160) * C18919 + (C14161 + C14162) * C18917) *
               C30817 * C30885 * C1127 -
           ((C13649 + C13650) * C18917 + (C13651 + C13652) * C18919 +
            (C13264 + C13263) * C18916 + (C13262 + C13261) * C18918) *
               C30817 * C30885 * C1126 -
           ((C14885 + C14886) * C18917 + (C14887 + C14888) * C18919 +
            (C13462 + C13461) * C18916 + (C13460 + C13459) * C18918) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C13268 + C13267) * C18918 + (C13266 + C13265) * C18916 +
            (C13657 + C13658) * C18919 + (C13659 + C13660) * C18917) *
               C30817 * C30885 * C1126 -
           ((C14163 + C14164) * C18917 + (C14165 + C14166) * C18919 +
            (C13466 + C13465) * C18916 + (C13464 + C13463) * C18918) *
               C30817 * C30885 * C1127 +
           ((C13470 + C13469) * C18918 + (C13468 + C13467) * C18916 +
            (C13226 * C1337 + C13222 * C1350 + C13227 * C1760 +
             C13223 * C1765) *
                C18919 +
            (C13226 * C1349 + C13222 * C1364 + C13227 * C1766 +
             C13223 * C1769) *
                C18917) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C13226 * C115 + C13222 * C122 + C13227 * C304 + C13223 * C317) *
               C18918 +
           (C13226 * C123 + C13222 * C136 + C13227 * C316 + C13223 * C334) *
               C18916 +
           (C24763 + C24764) * C18919 + (C24765 + C24766) * C18917) *
              C30817 * C30885 * C1194 -
          ((C25236 + C25235) * C18917 + (C25234 + C25233) * C18919 +
           (C13227 * C319 + C13223 * C335 + C13226 * C316 + C13222 * C334) *
               C18916 +
           (C13227 * C305 + C13223 * C318 + C13226 * C304 + C13222 * C317) *
               C18918) *
              C30817 * C30885 * C1195 +
          ((C13226 * C305 + C13222 * C318 + C13227 * C1202 + C13223 * C1211) *
               C18918 +
           (C13226 * C319 + C13222 * C335 + C13227 * C1210 + C13223 * C1220) *
               C18916 +
           (C13226 * C1339 + C13222 * C1354 + C13227 * C1758 + C13223 * C1761) *
               C18919 +
           (C13226 * C1353 + C13222 * C1366 + C13227 * C1762 + C13223 * C1767) *
               C18917) *
              C30817 * C30885 * C1196 -
          ((C13227 * C5667 + C13223 * C5672 + C13226 * C1762 + C13222 * C1767) *
               C18917 +
           (C13227 * C5663 + C13223 * C5668 + C13226 * C1758 + C13222 * C1761) *
               C18919 +
           (C13227 * C1213 + C13223 * C1221 + C13226 * C1210 + C13222 * C1220) *
               C18916 +
           (C13227 * C1203 + C13223 * C1212 + C13226 * C1202 + C13222 * C1211) *
               C18918) *
              C30817 * C30885 * C1197 +
          ((C13226 * C1203 + C13222 * C1212 + C13227 * C5544 + C13223 * C5547) *
               C18918 +
           (C13226 * C1213 + C13222 * C1221 + C13227 * C5546 + C13223 * C5550) *
               C18916 +
           (C13226 * C5663 + C13222 * C5668 + C13227 * C6024 + C13223 * C6025) *
               C18919 +
           (C13226 * C5667 + C13222 * C5672 + C13227 * C6026 + C13223 * C6027) *
               C18917) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[50] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
                     C4809 * C305 + C4805 * C318) *
                        C114 +
                    (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
                     C4809 * C319 + C4805 * C335) *
                        C31063) *
                       C30817 * C30885 * C30926 -
                   ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 +
                     C4804 * C335 + C4807 * C316 + C4803 * C334) *
                        C31063 +
                    (C4809 * C1202 + C4805 * C1211 + C4808 * C305 +
                     C4804 * C318 + C4807 * C304 + C4803 * C317) *
                        C114) *
                       C30817 * C30885 * C30933 +
                   ((C4807 * C305 + C4803 * C318 + C4808 * C1202 +
                     C4804 * C1211 + C4809 * C1203 + C4805 * C1212) *
                        C114 +
                    (C4807 * C319 + C4803 * C335 + C4808 * C1210 +
                     C4804 * C1220 + C4809 * C1213 + C4805 * C1221) *
                        C31063) *
                       C30817 * C30885 * C2948) *
                      C30844 +
                  (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
                     C4809 * C1201 + C4805 * C1209) *
                        C114 +
                    (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
                     C4809 * C1208 + C4805 * C1219) *
                        C31063) *
                       C30817 * C30885 * C30933 -
                   ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
                     C4807 * C125 + C4803 * C137) *
                        C31063 +
                    (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
                     C4807 * C116 + C4803 * C124) *
                        C114) *
                       C30817 * C30885 * C30926 -
                   ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 +
                     C4804 * C1219 + C4807 * C321 + C4803 * C336) *
                        C31063 +
                    (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 +
                     C4804 * C1209 + C4807 * C306 + C4803 * C320) *
                        C114) *
                       C30817 * C30885 * C2948) *
                      C30853 +
                  (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
                     C4809 * C307 + C4805 * C322) *
                        C114 +
                    (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
                     C4809 * C323 + C4805 * C337) *
                        C31063) *
                       C30817 * C30885 * C30926 -
                   ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 +
                     C4804 * C337 + C4807 * C312 + C4803 * C332) *
                        C31063 +
                    (C4809 * C1200 + C4805 * C1207 + C4808 * C307 +
                     C4804 * C322 + C4807 * C302 + C4803 * C313) *
                        C114) *
                       C30817 * C30885 * C30933 +
                   ((C4807 * C307 + C4803 * C322 + C4808 * C1200 +
                     C4804 * C1207 + C4809 * C1205 + C4805 * C1216) *
                        C114 +
                    (C4807 * C323 + C4803 * C337 + C4808 * C1206 +
                     C4804 * C1218 + C4809 * C1217 + C4805 * C1223) *
                        C31063) *
                       C30817 * C30885 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C114 +
                     (C113 * C123 + C31050 * C136) * C31063) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30885 * C30926 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31050 * C334) * C31063 +
                     (C113 * C304 + C31050 * C317) * C114) *
                        C103) *
                       C30885 * C30933 +
                   (((C113 * C305 + C31050 * C318) * C114 +
                     (C113 * C319 + C31050 * C335) * C31063) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30885 * C2948) *
                      C30844 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30885 * C30933 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30885 * C30926 -
                   ((C389 + C390) * C105 + (C386 + C385) * C104 +
                    (C384 + C383) * C103) *
                       C30885 * C2948) *
                      C30853 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                       C30926 -
                   ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                       C30885 * C30933 +
                   (C392 * C103 + (C390 + C389) * C104 +
                    ((C113 * C311 + C31050 * C330) * C114 +
                     (C113 * C331 + C31050 * C341) * C31063) *
                        C105) *
                       C30885 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31050 * C122) * C8973 +
                    (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
                    C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                       C30817 * C30885 * C30926 -
                   (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 +
                    C9565 * C8974 + (C113 * C316 + C31050 * C334) * C8970 +
                    (C113 * C304 + C31050 * C317) * C8973) *
                       C30817 * C30885 * C30933 +
                   ((C113 * C305 + C31050 * C318) * C8973 +
                    (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
                    C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                       C30817 * C30885 * C2948) *
                      C30844 +
                  ((C370 * C8973 + C369 * C8970 + C1004 * C8974 +
                    C1005 * C8971 + C2246 * C8975 + C2245 * C8972) *
                       C30817 * C30885 * C30933 -
                   (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
                    C165 * C8970 + C164 * C8973) *
                       C30817 * C30885 * C30926 -
                   (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 +
                    C1656 * C8974 + C372 * C8970 + C371 * C8973) *
                       C30817 * C30885 * C2948) *
                      C30853 +
                  ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
                    C576 * C8975 + C577 * C8972) *
                       C30817 * C30885 * C30926 -
                   (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 +
                    C1006 * C8974 + C367 * C8970 + C368 * C8973) *
                       C30817 * C30885 * C30933 +
                   (C373 * C8973 + C374 * C8970 + C1654 * C8974 +
                    C1653 * C8971 + (C113 * C1342 + C31050 * C1359) * C8975 +
                    (C113 * C1360 + C31050 * C1369) * C8972) *
                       C30817 * C30885 * C2948) *
                      C2951)) /
                    (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C30926 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30933 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C2948) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C30926 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30933 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C30926 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30933 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31120 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C2948) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C30926 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30933 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31120) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C30926 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C30933 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C31120 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C2948) *
              C2688 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C30926 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30933 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C31120) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C2580 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C30930) *
                  C31193 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30885 * C30930 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C2580) *
                  C31186 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C2580 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C30930) *
                  C31173 +
              ((C704 * C103 + (C712 + C711) * C104 +
                ((C113 * C699 + C31050 * C700) * C114 +
                 (C113 * C701 + C31050 * C702) * C31063) *
                    C105) *
                   C30885 * C30930 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C30885 * C2580) *
                  C31154) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C31194 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C31190 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C31180 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31050 * C1220) * C31063 +
                 (C113 * C1202 + C31050 * C1211) * C114) *
                    C103) *
                   C30885 * C31160) *
                  C2688 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30885 * C31190 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C31194 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C31180 +
               ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                ((C113 * C1474 + C31050 * C1475) * C114 +
                 (C113 * C1476 + C31050 * C1477) * C31063) *
                    C105) *
                   C30885 * C31160) *
                  C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31188 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C31177 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31153) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C31177 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31188 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C31153) *
               C30930) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C31177 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31188 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31153) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31188 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C31177 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31190 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31180 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31190 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31180 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31188 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C31177 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C31153) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C31177 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31188 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C31153) *
               C30930) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C31177 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31188 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C31153) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31188 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C31177 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C2580 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C30930) *
              C31193 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C30930 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C2580) *
              C31186 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C2580 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C30930) *
              C31173 +
          ((C375 * C8973 + C376 * C8970 + C1009 * C8974 + C1008 * C8971 +
            (C113 * C2230 + C31050 * C2231) * C8975 +
            (C113 * C2232 + C31050 * C2233) * C8972) *
               C30817 * C30885 * C30930 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C31194 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31190 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C30885 * C31180 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C30885 * C31160) *
              C2688 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31190 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31194 -
           (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
            C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31180 +
           (C1490 * C8973 + C1489 * C8970 +
            (C113 * C1759 + C31050 * C1763) * C8974 +
            (C113 * C1764 + C31050 * C1768) * C8971 +
            (C113 * C6468 + C31050 * C6469) * C8975 +
            (C113 * C6470 + C31050 * C6471) * C8972) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31188 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C31177 +
            (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C30817 * C31153) *
               C2580 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C31177 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31188 -
            (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 + C9867 * C8974 +
             C9568 * C8970 + C9567 * C8973) *
                C30817 * C31153) *
               C30930) *
              C2688 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C31177 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31188 -
            (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 + C2368 * C8974 +
             C575 * C8970 + C574 * C8973) *
                C30817 * C31153) *
               C2580 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31188 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C31177 +
            (C2246 * C8973 + C2245 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C113 * C10682 + C31050 * C10683) * C8975 +
             (C113 * C10684 + C31050 * C10685) * C8972) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C30844 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30930) *
              C30844 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C30853 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31120) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C30930) *
              C30844 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C2580 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C31120 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C31120) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31194 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31190 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31180 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C30885 * C31160) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C31190 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31194 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31180 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31050 * C1475) * C114 +
             (C113 * C1476 + C31050 * C1477) * C31063) *
                C105) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30930) *
              C31193 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30930 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C2580) *
              C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30930) *
              C31173 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31050 * C700) * C114 +
             (C113 * C701 + C31050 * C702) * C31063) *
                C105) *
               C30885 * C30930 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31190 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31180 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31190 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31180 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C2580 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C30930) *
              C31193 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C30930 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C2580) *
              C31186 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C2580 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C30930) *
              C31173 +
          ((C375 * C8973 + C376 * C8970 + C1009 * C8974 + C1008 * C8971 +
            (C113 * C2230 + C31050 * C2231) * C8975 +
            (C113 * C2232 + C31050 * C2233) * C8972) *
               C30817 * C30885 * C30930 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C31194 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31190 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C30885 * C31180 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C30885 * C31160) *
              C2688 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31190 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31194 -
           (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
            C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31180 +
           (C1490 * C8973 + C1489 * C8970 +
            (C113 * C1759 + C31050 * C1763) * C8974 +
            (C113 * C1764 + C31050 * C1768) * C8971 +
            (C113 * C6468 + C31050 * C6469) * C8975 +
            (C113 * C6470 + C31050 * C6471) * C8972) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C30926 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30933 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C2948) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C30926 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30933 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C30926 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30933 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C2948) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C30926 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30933 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C30926 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C30933 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C3342 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C2948) *
              C31105 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C30926 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30933 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C3342) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
                     C4809 * C305 + C4805 * C318) *
                        C114 +
                    (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
                     C4809 * C319 + C4805 * C335) *
                        C31063) *
                       C30817 * C30968 -
                   ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 +
                     C4804 * C986 + C4807 * C519 + C4803 * C537) *
                        C31063 +
                    (C4809 * C1339 + C4805 * C1354 + C4808 * C971 +
                     C4804 * C976 + C4807 * C507 + C4803 * C520) *
                        C114) *
                       C30817 * C30975 +
                   ((C4807 * C508 + C4803 * C521 + C4808 * C1336 +
                     C4804 * C1348 + C4809 * C1340 + C4805 * C1355) *
                        C114 +
                    (C4807 * C522 + C4803 * C538 + C4808 * C1347 +
                     C4804 * C1363 + C4809 * C1356 + C4805 * C1367) *
                        C31063) *
                       C30817 * C3850) *
                      C30926 +
                  (((C4807 * C971 + C4803 * C976 + C4808 * C1339 +
                     C4804 * C1354 + C4809 * C1758 + C4805 * C1761) *
                        C114 +
                    (C4807 * C977 + C4803 * C986 + C4808 * C1353 +
                     C4804 * C1366 + C4809 * C1762 + C4805 * C1767) *
                        C31063) *
                       C30817 * C30975 -
                   ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 +
                     C4804 * C335 + C4807 * C316 + C4803 * C334) *
                        C31063 +
                    (C4809 * C1202 + C4805 * C1211 + C4808 * C305 +
                     C4804 * C318 + C4807 * C304 + C4803 * C317) *
                        C114) *
                       C30817 * C30968 -
                   ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 +
                     C4804 * C1367 + C4807 * C1347 + C4803 * C1363) *
                        C31063 +
                    (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 +
                     C4804 * C1355 + C4807 * C1336 + C4803 * C1348) *
                        C114) *
                       C30817 * C3850) *
                      C30933 +
                  (((C4807 * C305 + C4803 * C318 + C4808 * C1202 +
                     C4804 * C1211 + C4809 * C1203 + C4805 * C1212) *
                        C114 +
                    (C4807 * C319 + C4803 * C335 + C4808 * C1210 +
                     C4804 * C1220 + C4809 * C1213 + C4805 * C1221) *
                        C31063) *
                       C30817 * C30968 -
                   ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 +
                     C4804 * C1767 + C4807 * C1353 + C4803 * C1366) *
                        C31063 +
                    (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 +
                     C4804 * C1761 + C4807 * C1339 + C4803 * C1354) *
                        C114) *
                       C30817 * C30975 +
                   ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 +
                     C4804 * C5666 + C4809 * C5664 + C4805 * C5669) *
                        C114 +
                    (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 +
                     C4804 * C5671 + C4809 * C5670 + C4805 * C5673) *
                        C31063) *
                       C30817 * C3850) *
                      C2948) *
                 C30839) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C114 +
                     (C113 * C123 + C31050 * C136) * C31063) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30968 -
                   (C594 * C105 + (C584 + C585) * C104 +
                    ((C113 * C519 + C31050 * C537) * C31063 +
                     (C113 * C507 + C31050 * C520) * C114) *
                        C103) *
                       C30975 +
                   (((C113 * C508 + C31050 * C521) * C114 +
                     (C113 * C522 + C31050 * C538) * C31063) *
                        C103 +
                    (C586 + C587) * C104 + C595 * C105) *
                       C3850) *
                      C30926 +
                  ((((C113 * C971 + C31050 * C976) * C114 +
                     (C113 * C977 + C31050 * C986) * C31063) *
                        C103 +
                    (C1010 + C1011) * C104 + C1016 * C105) *
                       C30975 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31050 * C334) * C31063 +
                     (C113 * C304 + C31050 * C317) * C114) *
                        C103) *
                       C30968 -
                   ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
                    ((C113 * C1347 + C31050 * C1363) * C31063 +
                     (C113 * C1336 + C31050 * C1348) * C114) *
                        C103) *
                       C3850) *
                      C30933 +
                  ((((C113 * C305 + C31050 * C318) * C114 +
                     (C113 * C319 + C31050 * C335) * C31063) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30968 -
                   ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                    ((C113 * C1353 + C31050 * C1366) * C31063 +
                     (C113 * C1339 + C31050 * C1354) * C114) *
                        C103) *
                       C30975 +
                   (((C113 * C1340 + C31050 * C1355) * C114 +
                     (C113 * C1356 + C31050 * C1367) * C31063) *
                        C103 +
                    ((C113 * C1341 + C31050 * C1357) * C114 +
                     (C113 * C1358 + C31050 * C1368) * C31063) *
                        C104 +
                    ((C113 * C1342 + C31050 * C1359) * C114 +
                     (C113 * C1360 + C31050 * C1369) * C31063) *
                        C105) *
                       C3850) *
                      C2948) *
                 C30839) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31050 * C122) * C8973 +
                    (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
                    C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                       C30817 * C30968 -
                   (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 +
                    C9211 * C8974 + C9210 * C8970 + C9209 * C8973) *
                       C30817 * C30975 +
                   (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 +
                    C9213 * C8971 + C10533 * C8975 + C10534 * C8972) *
                       C30817 * C3850) *
                      C30926 +
                  ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 +
                    C9568 * C8971 + C9867 * C8975 + C9868 * C8972) *
                       C30817 * C30975 -
                   (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 +
                    C9565 * C8974 + (C113 * C316 + C31050 * C334) * C8970 +
                    (C113 * C304 + C31050 * C317) * C8973) *
                       C30817 * C30968 -
                   (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 +
                    C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
                       C30817 * C3850) *
                      C30933 +
                  (((C113 * C305 + C31050 * C318) * C8973 +
                    (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
                    C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                       C30817 * C30968 -
                   (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 +
                    C9871 * C8974 + C9870 * C8970 + C9869 * C8973) *
                       C30817 * C30975 +
                   (C9871 * C8973 + C9872 * C8970 + C9874 * C8974 +
                    C9873 * C8971 + (C113 * C6312 + C31050 * C6316) * C8975 +
                    (C113 * C6318 + C31050 * C6321) * C8972) *
                       C30817 * C3850) *
                      C2948) *
                 C30839) /
                    (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31050 * C122) * C114 +
                  (C113 * C123 + C31050 * C136) * C31063) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C3342 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31050 * C537) * C31063 +
                  (C113 * C507 + C31050 * C520) * C114) *
                     C103) *
                    C30972) *
                   C2580 +
               ((((C113 * C971 + C31050 * C976) * C114 +
                  (C113 * C977 + C31050 * C986) * C31063) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30972 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31050 * C334) * C31063 +
                  (C113 * C304 + C31050 * C317) * C114) *
                     C103) *
                    C3342) *
                   C30930) *
                  C31184 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30972 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C3342) *
                   C2580 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C3342 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30972) *
                   C30930) *
                  C31171 +
              (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
                ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                    C30972) *
                   C2580 +
               ((C1016 * C103 + (C1015 + C1014) * C104 +
                 ((C113 * C975 + C31050 * C984) * C114 +
                  (C113 * C985 + C31050 * C990) * C31063) *
                     C105) *
                    C30972 -
                ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                    C3342) *
                   C30930) *
                  C31144) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C3342 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C30972) *
                  C31194 +
              ((((C113 * C971 + C31050 * C976) * C114 +
                 (C113 * C977 + C31050 * C986) * C31063) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C30972 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C3342) *
                  C31190 +
              ((((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C3342 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31050 * C1366) * C31063 +
                 (C113 * C1339 + C31050 * C1354) * C114) *
                    C103) *
                   C30972) *
                  C31180 +
              ((((C113 * C1758 + C31050 * C1761) * C114 +
                 (C113 * C1762 + C31050 * C1767) * C31063) *
                    C103 +
                ((C113 * C1759 + C31050 * C1763) * C114 +
                 (C113 * C1764 + C31050 * C1768) * C31063) *
                    C104 +
                ((C113 * C1760 + C31050 * C1765) * C114 +
                 (C113 * C1766 + C31050 * C1769) * C31063) *
                    C105) *
                   C30972 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31050 * C1220) * C31063 +
                 (C113 * C1202 + C31050 * C1211) * C114) *
                    C103) *
                   C3342) *
                  C31160) *
             C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31195 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31192 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31183 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C2580 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31192 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31195 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31183 +
           (((C113 * C2470 + C31050 * C2473) * C114 +
             (C113 * C2474 + C31050 * C2479) * C31063) *
                C103 +
            ((C113 * C2471 + C31050 * C2475) * C114 +
             (C113 * C2476 + C31050 * C2480) * C31063) *
                C104 +
            ((C113 * C2472 + C31050 * C2477) * C114 +
             (C113 * C2478 + C31050 * C2481) * C31063) *
                C105) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C31194 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C3342) *
              C31190 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C31180 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31195 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31192 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31183 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C2580 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31192 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31195 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31183 +
           ((C4807 * C2470 + C4803 * C2473 + C4808 * C6310 + C4804 * C6314 +
             C4809 * C6672 + C4805 * C6673) *
                C114 +
            (C4807 * C2474 + C4803 * C2479 + C4808 * C6313 + C4804 * C6319 +
             C4809 * C6674 + C4805 * C6675) *
                C31063) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C2580 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C3342 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C3342 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C31194 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C30972 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C3342) *
              C31190 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C3342 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C30972) *
              C31180 +
          ((C10231 * C8973 + C10232 * C8970 + C10233 * C8974 + C10234 * C8971 +
            (C113 * C6672 + C31050 * C6673) * C8975 +
            (C113 * C6674 + C31050 * C6675) * C8972) *
               C30817 * C30972 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31195 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31192 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C30817 * C31183 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9213 * C8970 + C9214 * C8973) *
               C30817 * C31166) *
              C2580 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C31192 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C31195 -
           (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 + C9867 * C8974 +
            C9568 * C8970 + C9567 * C8973) *
               C30817 * C31183 +
           (C9867 * C8973 + C9868 * C8970 + C10908 * C8974 + C10907 * C8971 +
            (C113 * C10898 + C31050 * C10899) * C8975 +
            (C113 * C10900 + C31050 * C10901) * C8972) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C3850) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C3850) *
               C30930) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C3850) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30968 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30975 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30975 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C30968 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C3850) *
               C30930) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30975 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30968 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30968 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30975 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C30968 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30975 +
            (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C30817 * C3850) *
               C2580 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30975 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C30968 -
            (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 + C9867 * C8974 +
             C9568 * C8970 + C9567 * C8973) *
                C30817 * C3850) *
               C30930) *
              C31105 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30975 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C30968 -
            (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 + C2368 * C8974 +
             C575 * C8970 + C574 * C8973) *
                C30817 * C3850) *
               C2580 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C30968 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30975 +
            (C2246 * C8973 + C2245 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C113 * C10682 + C31050 * C10683) * C8975 +
             (C113 * C10684 + C31050 * C10685) * C8972) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C31194 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C3342) *
              C31190 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C31180 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30930) *
              C31184 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C31171 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C31194 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C3342) *
              C31190 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C31180 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C2580 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C3342 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C2580 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C3342 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C31194 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C30972 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C3342) *
              C31190 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C3342 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C30972) *
              C31180 +
          ((C10231 * C8973 + C10232 * C8970 + C10233 * C8974 + C10234 * C8971 +
            (C113 * C6672 + C31050 * C6673) * C8975 +
            (C113 * C6674 + C31050 * C6675) * C8972) *
               C30817 * C30972 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C31119 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C30930) *
                  C695 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30885 * C30930 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C31119) *
                  C696 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C31119 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C30930) *
                  C697 +
              ((C704 * C103 + (C712 + C711) * C104 +
                ((C113 * C699 + C31050 * C700) * C114 +
                 (C113 * C701 + C31050 * C702) * C31063) *
                    C105) *
                   C30885 * C30930 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C30885 * C31119) *
                  C31154) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C1468 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C1469 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C1470 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31050 * C1220) * C31063 +
                 (C113 * C1202 + C31050 * C1211) * C114) *
                    C103) *
                   C30885 * C31160) *
                  C31105 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30885 * C1469 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C1468 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C1470 +
               ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                ((C113 * C1474 + C31050 * C1475) * C114 +
                 (C113 * C1476 + C31050 * C1477) * C31063) *
                    C105) *
                   C30885 * C31160) *
                  C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C1880 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C1881 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31153) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C1881 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C1880 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C31153) *
               C30930) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C1881 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C1880 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31153) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C1880 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C1881 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C695 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31119) *
              C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C697 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1469 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C1470 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C31105 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1469 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C1470 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C1880 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C1881 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C31153) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C1881 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C1880 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C31153) *
               C30930) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C1881 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C1880 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C31153) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C1880 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C1881 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C31119 -
           ((C113 * C1347 + C31050 * C1363) * C8972 +
            (C113 * C1336 + C31050 * C1348) * C8975 +
            (C113 * C977 + C31050 * C986) * C8971 +
            (C113 * C971 + C31050 * C976) * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C30930) *
              C695 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C30930 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31119) *
              C696 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C31119 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C30930) *
              C697 +
          ((C375 * C8973 + C376 * C8970 + C1009 * C8974 + C1008 * C8971 +
            (C113 * C2230 + C31050 * C2231) * C8975 +
            (C113 * C2232 + C31050 * C2233) * C8972) *
               C30817 * C30885 * C30930 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C1468 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C1469 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C30885 * C1470 -
           ((C113 * C5665 + C31050 * C5671) * C8972 +
            (C113 * C5662 + C31050 * C5666) * C8975 +
            (C113 * C1762 + C31050 * C1767) * C8971 +
            (C113 * C1758 + C31050 * C1761) * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C30885 * C31160) *
              C31105 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C1469 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C1468 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C1470 +
           (C1490 * C8973 + C1489 * C8970 +
            (C113 * C1759 + C31050 * C1763) * C8974 +
            (C113 * C1764 + C31050 * C1768) * C8971 +
            (C113 * C6468 + C31050 * C6469) * C8975 +
            (C113 * C6470 + C31050 * C6471) * C8972) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C1880 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C1881 +
            (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C30817 * C31153) *
               C31119 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C1881 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C1880 -
            ((C113 * C6317 + C31050 * C6320) * C8972 +
             (C113 * C6311 + C31050 * C6315) * C8975 + C9868 * C8971 +
             C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
                C30817 * C31153) *
               C30930) *
              C31105 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C1881 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C1880 -
            ((C113 * C2075 + C31050 * C2082) * C8972 +
             (C113 * C2064 + C31050 * C2074) * C8975 + C2367 * C8971 +
             C2368 * C8974 + C575 * C8970 + C574 * C8973) *
                C30817 * C31153) *
               C31119 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C1880 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C1881 +
            (C2246 * C8973 + C2245 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C113 * C10682 + C31050 * C10683) * C8975 +
             (C113 * C10684 + C31050 * C10685) * C8972) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31050 * C122) * C114 +
                  (C113 * C123 + C31050 * C136) * C31063) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C31120 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31050 * C537) * C31063 +
                  (C113 * C507 + C31050 * C520) * C114) *
                     C103) *
                    C30972) *
                   C31119 +
               ((((C113 * C971 + C31050 * C976) * C114 +
                  (C113 * C977 + C31050 * C986) * C31063) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30972 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31050 * C334) * C31063 +
                  (C113 * C304 + C31050 * C317) * C114) *
                     C103) *
                    C31120) *
                   C30930) *
                  C299 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30972 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C31120) *
                   C31119 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C31120 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30972) *
                   C30930) *
                  C300 +
              (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
                ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                    C30972) *
                   C31119 +
               ((C1016 * C103 + (C1015 + C1014) * C104 +
                 ((C113 * C975 + C31050 * C984) * C114 +
                  (C113 * C985 + C31050 * C990) * C31063) *
                     C105) *
                    C30972 -
                ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                    C31120) *
                   C30930) *
                  C31144) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31120 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C30972) *
                  C1468 +
              ((((C113 * C971 + C31050 * C976) * C114 +
                 (C113 * C977 + C31050 * C986) * C31063) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C30972 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C31120) *
                  C1469 +
              ((((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31120 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31050 * C1366) * C31063 +
                 (C113 * C1339 + C31050 * C1354) * C114) *
                    C103) *
                   C30972) *
                  C1470 +
              ((((C113 * C1758 + C31050 * C1761) * C114 +
                 (C113 * C1762 + C31050 * C1767) * C31063) *
                    C103 +
                ((C113 * C1759 + C31050 * C1763) * C114 +
                 (C113 * C1764 + C31050 * C1768) * C31063) *
                    C104 +
                ((C113 * C1760 + C31050 * C1765) * C114 +
                 (C113 * C1766 + C31050 * C1769) * C31063) *
                    C105) *
                   C30972 -
               ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                ((C113 * C1210 + C31050 * C1220) * C31063 +
                 (C113 * C1202 + C31050 * C1211) * C114) *
                    C103) *
                   C31120) *
                  C31160) *
             C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C31119 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C2349 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C2348 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C2350 +
           (((C113 * C2470 + C31050 * C2473) * C114 +
             (C113 * C2474 + C31050 * C2479) * C31063) *
                C103 +
            ((C113 * C2471 + C31050 * C2475) * C114 +
             (C113 * C2476 + C31050 * C2480) * C31063) *
                C104 +
            ((C113 * C2472 + C31050 * C2477) * C114 +
             (C113 * C2478 + C31050 * C2481) * C31063) *
                C105) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C1468 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31120) *
              C1469 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C1470 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C2348 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C2349 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C2350 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C31119 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C2349 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C2348 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C2350 +
           ((C4807 * C2470 + C4803 * C2473 + C4808 * C6310 + C4804 * C6314 +
             C4809 * C6672 + C4805 * C6673) *
                C114 +
            (C4807 * C2474 + C4803 * C2479 + C4808 * C6313 + C4804 * C6319 +
             C4809 * C6674 + C4805 * C6675) *
                C31063) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             (C113 * C2470 + C31050 * C2473) * C8975 +
             (C113 * C2474 + C31050 * C2479) * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C30930) *
              C299 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C31119 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            ((C113 * C2476 + C31050 * C2480) * C8972 +
             (C113 * C2471 + C31050 * C2475) * C8975 + C2245 * C8971 +
             C2246 * C8974 + C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C300 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C31120 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31120 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C1468 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C30972 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C31120) *
              C1469 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C31120 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C30972) *
              C1470 +
          ((C10231 * C8973 + C10232 * C8970 + C10233 * C8974 + C10234 * C8971 +
            (C113 * C6672 + C31050 * C6673) * C8975 +
            (C113 * C6674 + C31050 * C6675) * C8972) *
               C30817 * C30972 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C2348 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C2349 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C30817 * C2350 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9213 * C8970 + C9214 * C8973) *
               C30817 * C31166) *
              C31119 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C2349 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C2348 -
           (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 + C9867 * C8974 +
            C9568 * C8970 + C9567 * C8973) *
               C30817 * C2350 +
           (C9867 * C8973 + C9868 * C8970 + C10908 * C8974 + C10907 * C8971 +
            (C113 * C10898 + C31050 * C10899) * C8975 +
            (C113 * C10900 + C31050 * C10901) * C8972) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31050 * C122) * C114 +
                (C113 * C123 + C31050 * C136) * C31063) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30885 * C30867 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30885 * C30867 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                  C30867 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30885 * C30867 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31050 * C134) * C114 +
                (C113 * C135 + C31050 * C142) * C31063) *
                   C105) *
                  C30885 * C30867 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C31187 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C31175 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C31150) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30885 * C31175 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C31187 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C31150) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C31187 -
               (((C113 * C328 + C31050 * C340) * C31063 +
                 (C113 * C310 + C31050 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C31175 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31050 * C330) * C114 +
                 (C113 * C331 + C31050 * C341) * C31063) *
                    C105) *
                   C30885 * C31150) *
                  C31144) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31188 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C31177 +
               (((C113 * C508 + C31050 * C521) * C114 +
                 (C113 * C522 + C31050 * C538) * C31063) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31153) *
                  C30867 * C299 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 +
                (C590 + C591) * C105) *
                   C31177 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31188 -
               ((C592 + C593) * C105 + (C589 + C588) * C104 +
                (C587 + C586) * C103) *
                   C31153) *
                  C30867 * C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31188 -
               (((C113 * C531 + C31050 * C543) * C31063 +
                 (C113 * C513 + C31050 * C532) * C114) *
                    C105 +
                (C591 + C590) * C104 + C594 * C103) *
                   C31177 +
               (C595 * C103 + (C593 + C592) * C104 +
                ((C113 * C514 + C31050 * C533) * C114 +
                 (C113 * C534 + C31050 * C544) * C31063) *
                    C105) *
                   C31153) *
                  C30867 * C31144) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C1126 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C1127 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C31150) *
                  C31184 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                   C30885 * C1127 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C1126 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C31150) *
                  C31171 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C1126 -
               ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C1127 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31050 * C330) * C114 +
                 (C113 * C331 + C31050 * C341) * C31063) *
                    C105) *
                   C30885 * C31150) *
                  C31144) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31050 * C122) * C114 +
                (C113 * C123 + C31050 * C136) * C31063) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30885 * C1194 -
              (C391 * C105 + (C381 + C382) * C104 +
               ((C113 * C316 + C31050 * C334) * C31063 +
                (C113 * C304 + C31050 * C317) * C114) *
                   C103) *
                  C30885 * C1195 +
              (((C113 * C305 + C31050 * C318) * C114 +
                (C113 * C319 + C31050 * C335) * C31063) *
                   C103 +
               (C383 + C384) * C104 + C392 * C105) *
                  C30885 * C1196 -
              (((C113 * C1206 + C31050 * C1218) * C31063 +
                (C113 * C1200 + C31050 * C1207) * C114) *
                   C105 +
               ((C113 * C1208 + C31050 * C1219) * C31063 +
                (C113 * C1201 + C31050 * C1209) * C114) *
                   C104 +
               ((C113 * C1210 + C31050 * C1220) * C31063 +
                (C113 * C1202 + C31050 * C1211) * C114) *
                   C103) *
                  C30885 * C1197 +
              (((C113 * C1203 + C31050 * C1212) * C114 +
                (C113 * C1213 + C31050 * C1221) * C31063) *
                   C103 +
               ((C113 * C1204 + C31050 * C1214) * C114 +
                (C113 * C1215 + C31050 * C1222) * C31063) *
                   C104 +
               ((C113 * C1205 + C31050 * C1216) * C114 +
                (C113 * C1217 + C31050 * C1223) * C31063) *
                   C105) *
                  C30885 * C1198) *
             C30839 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31188 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C31177 +
               (((C113 * C508 + C31050 * C521) * C114 +
                 (C113 * C522 + C31050 * C538) * C31063) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31153) *
                  C1126 +
              ((((C113 * C971 + C31050 * C976) * C114 +
                 (C113 * C977 + C31050 * C986) * C31063) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C31177 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C31188 -
               (((C113 * C1343 + C31050 * C1361) * C31063 +
                 (C113 * C1334 + C31050 * C1344) * C114) *
                    C105 +
                ((C113 * C1345 + C31050 * C1362) * C31063 +
                 (C113 * C1335 + C31050 * C1346) * C114) *
                    C104 +
                ((C113 * C1347 + C31050 * C1363) * C31063 +
                 (C113 * C1336 + C31050 * C1348) * C114) *
                    C103) *
                   C31153) *
                  C1127 +
              ((((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C31188 -
               (((C113 * C1349 + C31050 * C1364) * C31063 +
                 (C113 * C1337 + C31050 * C1350) * C114) *
                    C105 +
                ((C113 * C1351 + C31050 * C1365) * C31063 +
                 (C113 * C1338 + C31050 * C1352) * C114) *
                    C104 +
                ((C113 * C1353 + C31050 * C1366) * C31063 +
                 (C113 * C1339 + C31050 * C1354) * C114) *
                    C103) *
                   C31177 +
               (((C113 * C1340 + C31050 * C1355) * C114 +
                 (C113 * C1356 + C31050 * C1367) * C31063) *
                    C103 +
                ((C113 * C1341 + C31050 * C1357) * C114 +
                 (C113 * C1358 + C31050 * C1368) * C31063) *
                    C104 +
                ((C113 * C1342 + C31050 * C1359) * C114 +
                 (C113 * C1360 + C31050 * C1369) * C31063) *
                    C105) *
                   C31153) *
                  C31150) *
             C30839 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C1880 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C508 + C31050 * C521) * C114 +
                 (C113 * C522 + C31050 * C538) * C31063) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31153) *
                  C30867 * C31184 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C1881 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C1880 -
               ((C592 + C593) * C105 + (C589 + C588) * C104 +
                (C587 + C586) * C103) *
                   C31153) *
                  C30867 * C31171 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C1881 +
               (C595 * C103 + (C593 + C592) * C104 +
                ((C113 * C514 + C31050 * C533) * C114 +
                 (C113 * C534 + C31050 * C544) * C31063) *
                    C105) *
                   C31153) *
                  C30867 * C31144) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C1880 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C508 + C31050 * C521) * C114 +
                 (C113 * C522 + C31050 * C538) * C31063) *
                    C103 +
                (C586 + C587) * C104 + C595 * C105) *
                   C31153) *
                  C31187 +
              ((((C113 * C971 + C31050 * C976) * C114 +
                 (C113 * C977 + C31050 * C986) * C31063) *
                    C103 +
                (C1010 + C1011) * C104 + C1016 * C105) *
                   C1881 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C1880 -
               (((C113 * C1343 + C31050 * C1361) * C31063 +
                 (C113 * C1334 + C31050 * C1344) * C114) *
                    C105 +
                ((C113 * C1345 + C31050 * C1362) * C31063 +
                 (C113 * C1335 + C31050 * C1346) * C114) *
                    C104 +
                ((C113 * C1347 + C31050 * C1363) * C31063 +
                 (C113 * C1336 + C31050 * C1348) * C114) *
                    C103) *
                   C31153) *
                  C31175 +
              ((((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C1880 -
               ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                ((C113 * C1353 + C31050 * C1366) * C31063 +
                 (C113 * C1339 + C31050 * C1354) * C114) *
                    C103) *
                   C1881 +
               (((C113 * C1340 + C31050 * C1355) * C114 +
                 (C113 * C1356 + C31050 * C1367) * C31063) *
                    C103 +
                ((C113 * C1341 + C31050 * C1357) * C114 +
                 (C113 * C1358 + C31050 * C1368) * C31063) *
                    C104 +
                ((C113 * C1342 + C31050 * C1359) * C114 +
                 (C113 * C1360 + C31050 * C1369) * C31063) *
                    C105) *
                   C31153) *
                  C31150) *
             C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C2055 -
          (C594 * C105 + (C584 + C585) * C104 +
           ((C113 * C519 + C31050 * C537) * C31063 +
            (C113 * C507 + C31050 * C520) * C114) *
               C103) *
              C2056 +
          (((C113 * C508 + C31050 * C521) * C114 +
            (C113 * C522 + C31050 * C538) * C31063) *
               C103 +
           (C586 + C587) * C104 + C595 * C105) *
              C2057 -
          (((C113 * C2066 + C31050 * C2078) * C31063 +
            (C113 * C2060 + C31050 * C2067) * C114) *
               C105 +
           ((C113 * C2068 + C31050 * C2079) * C31063 +
            (C113 * C2061 + C31050 * C2069) * C114) *
               C104 +
           ((C113 * C2070 + C31050 * C2080) * C31063 +
            (C113 * C2062 + C31050 * C2071) * C114) *
               C103) *
              C2058 +
          (((C113 * C2063 + C31050 * C2072) * C114 +
            (C113 * C2073 + C31050 * C2081) * C31063) *
               C103 +
           ((C113 * C2064 + C31050 * C2074) * C114 +
            (C113 * C2075 + C31050 * C2082) * C31063) *
               C104 +
           ((C113 * C2065 + C31050 * C2076) * C114 +
            (C113 * C2077 + C31050 * C2083) * C31063) *
               C105) *
              C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C1126 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C1127 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C31187 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C31175 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C2055 -
          ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
            C4807 * C519 + C4803 * C537) *
               C31063 +
           (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
            C4807 * C507 + C4803 * C520) *
               C114) *
              C30817 * C2056 +
          ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
            C4809 * C1340 + C4805 * C1355) *
               C114 +
           (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
            C4809 * C1356 + C4805 * C1367) *
               C31063) *
              C30817 * C2057 -
          ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
            C4807 * C2070 + C4803 * C2080) *
               C31063 +
           (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
            C4807 * C2062 + C4803 * C2071) *
               C114) *
              C30817 * C2058 +
          ((C4807 * C2063 + C4803 * C2072 + C4808 * C6311 + C4804 * C6315 +
            C4809 * C6312 + C4805 * C6316) *
               C114 +
           (C4807 * C2073 + C4803 * C2081 + C4808 * C6317 + C4804 * C6320 +
            C4809 * C6318 + C4805 * C6321) *
               C31063) *
              C30817 * C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 +
           (C113 * C507 + C31050 * C520) * C8974 +
           (C113 * C519 + C31050 * C537) * C8971 +
           (C113 * C508 + C31050 * C521) * C8975 +
           (C113 * C522 + C31050 * C538) * C8972) *
              C30817 * C30885 * C30867 * C108 -
          (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
           C165 * C8970 + C164 * C8973) *
              C30817 * C30885 * C30867 * C109 +
          (C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
           C576 * C8975 + C577 * C8972) *
              C30817 * C30885 * C30867 * C110 -
          (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
           C168 * C8970 + C169 * C8973) *
              C30817 * C30885 * C30867 * C111 +
          (C170 * C8973 + C171 * C8970 + C823 * C8974 + C822 * C8971 +
           (C113 * C514 + C31050 * C533) * C8975 +
           (C113 * C534 + C31050 * C544) * C8972) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 +
            (C113 * C507 + C31050 * C520) * C8974 +
            (C113 * C519 + C31050 * C537) * C8971 +
            (C113 * C508 + C31050 * C521) * C8975 +
            (C113 * C522 + C31050 * C538) * C8972) *
               C30817 * C30885 * C31187 -
           ((C113 * C1347 + C31050 * C1363) * C8972 +
            (C113 * C1336 + C31050 * C1348) * C8975 +
            (C113 * C977 + C31050 * C986) * C8971 +
            (C113 * C971 + C31050 * C976) * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31175 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C299 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31175 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31187 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C31187 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C31175 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31188 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31177 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C30867 * C299 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C31177 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C31188 -
           ((C113 * C2075 + C31050 * C2082) * C8972 +
            (C113 * C2064 + C31050 * C2074) * C8975 + C2367 * C8971 +
            C2368 * C8974 + C575 * C8970 + C574 * C8973) *
               C30817 * C31153) *
              C30867 * C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C31188 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C31177 +
           (C576 * C8973 + C577 * C8970 + C2366 * C8974 + C2365 * C8971 +
            (C113 * C2065 + C31050 * C2076) * C8975 +
            (C113 * C2077 + C31050 * C2083) * C8972) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C1126 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C1127 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C31184 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C1127 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C1126 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C1126 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C1127 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
           C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
              C30817 * C30885 * C1194 -
          (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
           (C113 * C316 + C31050 * C334) * C8970 +
           (C113 * C304 + C31050 * C317) * C8973) *
              C30817 * C30885 * C1195 +
          ((C113 * C305 + C31050 * C318) * C8973 +
           (C113 * C319 + C31050 * C335) * C8970 +
           (C113 * C1339 + C31050 * C1354) * C8974 +
           (C113 * C1353 + C31050 * C1366) * C8971 +
           (C113 * C1340 + C31050 * C1355) * C8975 +
           (C113 * C1356 + C31050 * C1367) * C8972) *
              C30817 * C30885 * C1196 -
          ((C113 * C5665 + C31050 * C5671) * C8972 +
           (C113 * C5662 + C31050 * C5666) * C8975 +
           (C113 * C1762 + C31050 * C1767) * C8971 +
           (C113 * C1758 + C31050 * C1761) * C8974 +
           (C113 * C1210 + C31050 * C1220) * C8970 +
           (C113 * C1202 + C31050 * C1211) * C8973) *
              C30817 * C30885 * C1197 +
          ((C113 * C1203 + C31050 * C1212) * C8973 +
           (C113 * C1213 + C31050 * C1221) * C8970 +
           (C113 * C5663 + C31050 * C5668) * C8974 +
           (C113 * C5667 + C31050 * C5672) * C8971 +
           (C113 * C5664 + C31050 * C5669) * C8975 +
           (C113 * C5670 + C31050 * C5673) * C8972) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31188 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31177 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C1126 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C31177 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C31188 -
           ((C113 * C6317 + C31050 * C6320) * C8972 +
            (C113 * C6311 + C31050 * C6315) * C8975 + C9868 * C8971 +
            C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
               C30817 * C31153) *
              C1127 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C31188 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C31177 +
           (C9871 * C8973 + C9872 * C8970 + C9874 * C8974 + C9873 * C8971 +
            (C113 * C6312 + C31050 * C6316) * C8975 +
            (C113 * C6318 + C31050 * C6321) * C8972) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C1880 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C1881 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C30867 * C31184 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C1881 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C1880 -
           ((C113 * C2075 + C31050 * C2082) * C8972 +
            (C113 * C2064 + C31050 * C2074) * C8975 + C2367 * C8971 +
            C2368 * C8974 + C575 * C8970 + C574 * C8973) *
               C30817 * C31153) *
              C30867 * C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C1880 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C1881 +
           (C576 * C8973 + C577 * C8970 + C2366 * C8974 + C2365 * C8971 +
            (C113 * C2065 + C31050 * C2076) * C8975 +
            (C113 * C2077 + C31050 * C2083) * C8972) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C1880 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C1881 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C31187 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C1881 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C1880 -
           ((C113 * C6317 + C31050 * C6320) * C8972 +
            (C113 * C6311 + C31050 * C6315) * C8975 + C9868 * C8971 +
            C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
               C30817 * C31153) *
              C31175 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C1880 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C1881 +
           (C9871 * C8973 + C9872 * C8970 + C9874 * C8974 + C9873 * C8971 +
            (C113 * C6312 + C31050 * C6316) * C8975 +
            (C113 * C6318 + C31050 * C6321) * C8972) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
           C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
              C30817 * C2055 -
          (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
           C9210 * C8970 + C9209 * C8973) *
              C30817 * C2056 +
          (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
           C10533 * C8975 + C10534 * C8972) *
              C30817 * C2057 -
          (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
           C9213 * C8970 + C9214 * C8973) *
              C30817 * C2058 +
          (C10533 * C8973 + C10534 * C8970 + C10536 * C8974 + C10535 * C8971 +
           (C113 * C10517 + C31050 * C10520) * C8975 +
           (C113 * C10521 + C31050 * C10523) * C8972) *
              C30817 * C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C31120 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C30972) *
                  C30867 * C695 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C30972 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C31120) *
                  C30867 * C696 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C30972) *
                  C30867 * C697 +
              ((C817 * C103 + (C825 + C824) * C104 +
                ((C113 * C812 + C31050 * C813) * C114 +
                 (C113 * C814 + C31050 * C815) * C31063) *
                    C105) *
                   C30972 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C31120) *
                  C30867 * C31154) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31050 * C122) * C114 +
                  (C113 * C123 + C31050 * C136) * C31063) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C31120 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31050 * C537) * C31063 +
                  (C113 * C507 + C31050 * C520) * C114) *
                     C103) *
                    C30972) *
                   C1126 +
               ((((C113 * C971 + C31050 * C976) * C114 +
                  (C113 * C977 + C31050 * C986) * C31063) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30972 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31050 * C334) * C31063 +
                  (C113 * C304 + C31050 * C317) * C114) *
                     C103) *
                    C31120) *
                   C1127 +
               ((((C113 * C305 + C31050 * C318) * C114 +
                  (C113 * C319 + C31050 * C335) * C31063) *
                     C103 +
                 (C383 + C384) * C104 + C392 * C105) *
                    C31120 -
                ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                 ((C113 * C1353 + C31050 * C1366) * C31063 +
                  (C113 * C1339 + C31050 * C1354) * C114) *
                     C103) *
                    C30972) *
                   C31150) *
                  C31105 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30972 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C31120) *
                   C1126 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C31120 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30972) *
                   C1127 +
               (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
                 ((C113 * C1640 + C31050 * C1641) * C114 +
                  (C113 * C1642 + C31050 * C1643) * C31063) *
                     C105) *
                    C30972 -
                ((C389 + C390) * C105 + (C386 + C385) * C104 +
                 (C384 + C383) * C103) *
                    C31120) *
                   C31150) *
                  C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C30867 * C31105 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C2349 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C2348 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C2350 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31050 * C2353) * C114 +
             (C113 * C2354 + C31050 * C2355) * C31063) *
                C105) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C1126 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C1127 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C1126 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C1127 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C2348 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C2349 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C2350 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C30867 * C31105 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C2349 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C2348 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C2350 +
           ((C4807 * C2061 + C4803 * C2069 + C4808 * C2471 + C4804 * C2475 +
             C4809 * C6570 + C4805 * C6571) *
                C114 +
            (C4807 * C2068 + C4803 * C2079 + C4808 * C2476 + C4804 * C2480 +
             C4809 * C6572 + C4805 * C6573) *
                C31063) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31120 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C30867 * C695 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C30972 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C31120) *
              C30867 * C696 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C31120 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C30972) *
              C30867 * C697 +
          ((C578 * C8973 + C579 * C8970 + C581 * C8974 + C580 * C8971 +
            (C113 * C2352 + C31050 * C2353) * C8975 +
            (C113 * C2354 + C31050 * C2355) * C8972) *
               C30817 * C30972 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C1126 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C1127 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C31120 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C1126 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            ((C113 * C2476 + C31050 * C2480) * C8972 +
             (C113 * C2471 + C31050 * C2475) * C8975 + C2245 * C8971 +
             C2246 * C8974 + C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C1127 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C2348 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C2349 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C30817 * C2350 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9213 * C8970 + C9214 * C8973) *
               C30817 * C31166) *
              C30867 * C31105 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C2349 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C2348 -
           (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 + C2368 * C8974 +
            C575 * C8970 + C574 * C8973) *
               C30817 * C2350 +
           (C2368 * C8973 + C2367 * C8970 + C10800 * C8974 + C10799 * C8971 +
            (C113 * C10790 + C31050 * C10791) * C8975 +
            (C113 * C10792 + C31050 * C10793) * C8972) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C30867 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30885 *
              C30867 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C30867 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30885 *
              C30867 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31050 * C134) * C114 +
            (C113 * C135 + C31050 * C142) * C31063) *
               C105) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31187 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30885 * C31175 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31187 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31187 -
           (((C113 * C328 + C31050 * C340) * C31063 +
             (C113 * C310 + C31050 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30885 * C31175 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C31184 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C31187 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C31175 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C31187 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C31175 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 +
           (C113 * C507 + C31050 * C520) * C8974 +
           (C113 * C519 + C31050 * C537) * C8971 +
           (C113 * C508 + C31050 * C521) * C8975 +
           (C113 * C522 + C31050 * C538) * C8972) *
              C30817 * C30885 * C30867 * C108 -
          (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
           C165 * C8970 + C164 * C8973) *
              C30817 * C30885 * C30867 * C109 +
          (C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
           C576 * C8975 + C577 * C8972) *
              C30817 * C30885 * C30867 * C110 -
          (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
           C168 * C8970 + C169 * C8973) *
              C30817 * C30885 * C30867 * C111 +
          (C170 * C8973 + C171 * C8970 + C823 * C8974 + C822 * C8971 +
           (C113 * C514 + C31050 * C533) * C8975 +
           (C113 * C534 + C31050 * C544) * C8972) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 +
            (C113 * C507 + C31050 * C520) * C8974 +
            (C113 * C519 + C31050 * C537) * C8971 +
            (C113 * C508 + C31050 * C521) * C8975 +
            (C113 * C522 + C31050 * C538) * C8972) *
               C30817 * C30885 * C31187 -
           ((C113 * C1347 + C31050 * C1363) * C8972 +
            (C113 * C1336 + C31050 * C1348) * C8975 +
            (C113 * C977 + C31050 * C986) * C8971 +
            (C113 * C971 + C31050 * C976) * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31175 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C299 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31175 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31187 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C31187 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C31175 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C1126 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C1127 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C31184 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C1127 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C1126 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C1126 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C1127 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
           C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
              C30817 * C30885 * C1194 -
          (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
           (C113 * C316 + C31050 * C334) * C8970 +
           (C113 * C304 + C31050 * C317) * C8973) *
              C30817 * C30885 * C1195 +
          ((C113 * C305 + C31050 * C318) * C8973 +
           (C113 * C319 + C31050 * C335) * C8970 +
           (C113 * C1339 + C31050 * C1354) * C8974 +
           (C113 * C1353 + C31050 * C1366) * C8971 +
           (C113 * C1340 + C31050 * C1355) * C8975 +
           (C113 * C1356 + C31050 * C1367) * C8972) *
              C30817 * C30885 * C1196 -
          ((C113 * C5665 + C31050 * C5671) * C8972 +
           (C113 * C5662 + C31050 * C5666) * C8975 +
           (C113 * C1762 + C31050 * C1767) * C8971 +
           (C113 * C1758 + C31050 * C1761) * C8974 +
           (C113 * C1210 + C31050 * C1220) * C8970 +
           (C113 * C1202 + C31050 * C1211) * C8973) *
              C30817 * C30885 * C1197 +
          ((C113 * C1203 + C31050 * C1212) * C8973 +
           (C113 * C1213 + C31050 * C1221) * C8970 +
           (C113 * C5663 + C31050 * C5668) * C8974 +
           (C113 * C5667 + C31050 * C5672) * C8971 +
           (C113 * C5664 + C31050 * C5669) * C8975 +
           (C113 * C5670 + C31050 * C5673) * C8972) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C1880 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C1881 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C30867 * C31184 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C1881 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C1880 -
           ((C113 * C2075 + C31050 * C2082) * C8972 +
            (C113 * C2064 + C31050 * C2074) * C8975 + C2367 * C8971 +
            C2368 * C8974 + C575 * C8970 + C574 * C8973) *
               C30817 * C31153) *
              C30867 * C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C1880 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C1881 +
           (C576 * C8973 + C577 * C8970 + C2366 * C8974 + C2365 * C8971 +
            (C113 * C2065 + C31050 * C2076) * C8975 +
            (C113 * C2077 + C31050 * C2083) * C8972) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C1880 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C1881 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C31187 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C1881 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C1880 -
           ((C113 * C6317 + C31050 * C6320) * C8972 +
            (C113 * C6311 + C31050 * C6315) * C8975 + C9868 * C8971 +
            C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
               C30817 * C31153) *
              C31175 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C1880 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C1881 +
           (C9871 * C8973 + C9872 * C8970 + C9874 * C8974 + C9873 * C8971 +
            (C113 * C6312 + C31050 * C6316) * C8975 +
            (C113 * C6318 + C31050 * C6321) * C8972) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C30844 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30930) *
              C30844 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C30853 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C31119 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C30930) *
              C30844 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C31119 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C3342 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C3342) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C3850) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C3850) *
               C30930) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C3850) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30968 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30975 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30975 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C30968 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C3850) *
               C30930) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30975 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30968 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30968 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30975 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C30968 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30975 +
            (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
             C10533 * C8975 + C10534 * C8972) *
                C30817 * C3850) *
               C31119 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30975 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C30968 -
            (C10907 * C8972 + C10908 * C8975 + C9868 * C8971 + C9867 * C8974 +
             C9568 * C8970 + C9567 * C8973) *
                C30817 * C3850) *
               C30930) *
              C2688 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30975 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C30968 -
            (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 + C2368 * C8974 +
             C575 * C8970 + C574 * C8973) *
                C30817 * C3850) *
               C31119 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C30968 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30975 +
            (C2246 * C8973 + C2245 * C8970 + C10692 * C8974 + C10691 * C8971 +
             (C113 * C10682 + C31050 * C10683) * C8975 +
             (C113 * C10684 + C31050 * C10685) * C8972) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C3342 -
               (C594 * C105 + (C584 + C585) * C104 +
                ((C113 * C519 + C31050 * C537) * C31063 +
                 (C113 * C507 + C31050 * C520) * C114) *
                    C103) *
                   C30972) *
                  C30867 * C31193 +
              (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                   C30972 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C3342) *
                  C30867 * C31186 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
               ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                   C30972) *
                  C30867 * C31173 +
              ((C817 * C103 + (C825 + C824) * C104 +
                ((C113 * C812 + C31050 * C813) * C114 +
                 (C113 * C814 + C31050 * C815) * C31063) *
                    C105) *
                   C30972 -
               ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                   C3342) *
                  C30867 * C31154) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C113 * C115 + C31050 * C122) * C114 +
                  (C113 * C123 + C31050 * C136) * C31063) *
                     C103 +
                 (C174 + C175) * C104 + C184 * C105) *
                    C3342 -
                (C594 * C105 + (C584 + C585) * C104 +
                 ((C113 * C519 + C31050 * C537) * C31063 +
                  (C113 * C507 + C31050 * C520) * C114) *
                     C103) *
                    C30972) *
                   C31187 +
               ((((C113 * C971 + C31050 * C976) * C114 +
                  (C113 * C977 + C31050 * C986) * C31063) *
                     C103 +
                 (C1010 + C1011) * C104 + C1016 * C105) *
                    C30972 -
                (C391 * C105 + (C381 + C382) * C104 +
                 ((C113 * C316 + C31050 * C334) * C31063 +
                  (C113 * C304 + C31050 * C317) * C114) *
                     C103) *
                    C3342) *
                   C31175 +
               ((((C113 * C305 + C31050 * C318) * C114 +
                  (C113 * C319 + C31050 * C335) * C31063) *
                     C103 +
                 (C383 + C384) * C104 + C392 * C105) *
                    C3342 -
                ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                 ((C113 * C1353 + C31050 * C1366) * C31063 +
                  (C113 * C1339 + C31050 * C1354) * C114) *
                     C103) *
                    C30972) *
                   C31150) *
                  C2688 +
              ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                    C30972 -
                (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                    C3342) *
                   C31187 +
               (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                    C3342 -
                ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
                 (C1011 + C1010) * C103) *
                    C30972) *
                   C31175 +
               (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
                 ((C113 * C1640 + C31050 * C1641) * C114 +
                  (C113 * C1642 + C31050 * C1643) * C31063) *
                     C105) *
                    C30972 -
                ((C389 + C390) * C105 + (C386 + C385) * C104 +
                 (C384 + C383) * C103) *
                    C3342) *
                   C31150) *
                  C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31195 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31192 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31183 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C30867 * C2688 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C31192 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31195 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31183 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31050 * C2353) * C114 +
             (C113 * C2354 + C31050 * C2355) * C31063) *
                C105) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31187 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C31175 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31187 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C31175 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31195 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31192 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31183 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C30867 * C2688 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31192 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31195 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31183 +
           ((C4807 * C2061 + C4803 * C2069 + C4808 * C2471 + C4804 * C2475 +
             C4809 * C6570 + C4805 * C6571) *
                C114 +
            (C4807 * C2068 + C4803 * C2079 + C4808 * C2476 + C4804 * C2480 +
             C4809 * C6572 + C4805 * C6573) *
                C31063) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C3342 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C30867 * C31193 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C30972 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C3342) *
              C30867 * C31186 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C3342 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C30972) *
              C30867 * C31173 +
          ((C578 * C8973 + C579 * C8970 + C581 * C8974 + C580 * C8971 +
            (C113 * C2352 + C31050 * C2353) * C8975 +
            (C113 * C2354 + C31050 * C2355) * C8972) *
               C30817 * C30972 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C31187 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C31175 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C3342 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C31187 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C31175 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31195 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31192 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            C10533 * C8975 + C10534 * C8972) *
               C30817 * C31183 -
           (C10535 * C8972 + C10536 * C8975 + C10534 * C8971 + C10533 * C8974 +
            C9213 * C8970 + C9214 * C8973) *
               C30817 * C31166) *
              C30867 * C2688 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C31192 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C31195 -
           (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 + C2368 * C8974 +
            C575 * C8970 + C574 * C8973) *
               C30817 * C31183 +
           (C2368 * C8973 + C2367 * C8970 + C10800 * C8974 + C10799 * C8971 +
            (C113 * C10790 + C31050 * C10791) * C8975 +
            (C113 * C10792 + C31050 * C10793) * C8972) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
                     C4809 * C305 + C4805 * C318) *
                        C114 +
                    (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
                     C4809 * C319 + C4805 * C335) *
                        C31063) *
                       C30817 * C30968 -
                   ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 +
                     C4804 * C986 + C4807 * C519 + C4803 * C537) *
                        C31063 +
                    (C4809 * C1339 + C4805 * C1354 + C4808 * C971 +
                     C4804 * C976 + C4807 * C507 + C4803 * C520) *
                        C114) *
                       C30817 * C30975 +
                   ((C4807 * C508 + C4803 * C521 + C4808 * C1336 +
                     C4804 * C1348 + C4809 * C1340 + C4805 * C1355) *
                        C114 +
                    (C4807 * C522 + C4803 * C538 + C4808 * C1347 +
                     C4804 * C1363 + C4809 * C1356 + C4805 * C1367) *
                        C31063) *
                       C30817 * C3850) *
                      C30867 * C30844 +
                  (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
                     C4809 * C1338 + C4805 * C1352) *
                        C114 +
                    (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
                     C4809 * C1351 + C4805 * C1365) *
                        C31063) *
                       C30817 * C30975 -
                   ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
                     C4807 * C125 + C4803 * C137) *
                        C31063 +
                    (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
                     C4807 * C116 + C4803 * C124) *
                        C114) *
                       C30817 * C30968 -
                   ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 +
                     C4804 * C1362 + C4807 * C524 + C4803 * C539) *
                        C31063 +
                    (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 +
                     C4804 * C1346 + C4807 * C509 + C4803 * C523) *
                        C114) *
                       C30817 * C3850) *
                      C30867 * C30853 +
                  (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
                     C4809 * C307 + C4805 * C322) *
                        C114 +
                    (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
                     C4809 * C323 + C4805 * C337) *
                        C31063) *
                       C30817 * C30968 -
                   ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 +
                     C4804 * C988 + C4807 * C515 + C4803 * C535) *
                        C31063 +
                    (C4809 * C1337 + C4805 * C1350 + C4808 * C973 +
                     C4804 * C980 + C4807 * C505 + C4803 * C516) *
                        C114) *
                       C30817 * C30975 +
                   ((C4807 * C510 + C4803 * C525 + C4808 * C1334 +
                     C4804 * C1344 + C4809 * C1342 + C4805 * C1359) *
                        C114 +
                    (C4807 * C526 + C4803 * C540 + C4808 * C1343 +
                     C4804 * C1361 + C4809 * C1360 + C4805 * C1369) *
                        C31063) *
                       C30817 * C3850) *
                      C30867 * C2951)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C114 +
                     (C113 * C123 + C31050 * C136) * C31063) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30968 -
                   (C594 * C105 + (C584 + C585) * C104 +
                    ((C113 * C519 + C31050 * C537) * C31063 +
                     (C113 * C507 + C31050 * C520) * C114) *
                        C103) *
                       C30975 +
                   (((C113 * C508 + C31050 * C521) * C114 +
                     (C113 * C522 + C31050 * C538) * C31063) *
                        C103 +
                    (C586 + C587) * C104 + C595 * C105) *
                       C3850) *
                      C30867 * C30844 +
                  (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                       C30975 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30968 -
                   ((C592 + C593) * C105 + (C589 + C588) * C104 +
                    (C587 + C586) * C103) *
                       C3850) *
                      C30867 * C30853 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30968 -
                   ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                       C30975 +
                   (C595 * C103 + (C593 + C592) * C104 +
                    ((C113 * C514 + C31050 * C533) * C114 +
                     (C113 * C534 + C31050 * C544) * C31063) *
                        C105) *
                       C3850) *
                      C30867 * C2951)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31050 * C122) * C8973 +
                    (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
                    C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                       C30817 * C30968 -
                   (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 +
                    C9211 * C8974 + C9210 * C8970 + C9209 * C8973) *
                       C30817 * C30975 +
                   (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 +
                    C9213 * C8971 + C10533 * C8975 + C10534 * C8972) *
                       C30817 * C3850) *
                      C30867 * C30844 +
                  ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
                    C2368 * C8975 + C2367 * C8972) *
                       C30817 * C30975 -
                   (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
                    C165 * C8970 + C164 * C8973) *
                       C30817 * C30968 -
                   (C10799 * C8972 + C10800 * C8975 + C2367 * C8971 +
                    C2368 * C8974 + C575 * C8970 + C574 * C8973) *
                       C30817 * C3850) *
                      C30867 * C30853 +
                  ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
                    C576 * C8975 + C577 * C8972) *
                       C30817 * C30968 -
                   (C2365 * C8972 + C2366 * C8975 + C577 * C8971 +
                    C576 * C8974 + C570 * C8970 + C571 * C8973) *
                       C30817 * C30975 +
                   (C576 * C8973 + C577 * C8970 + C2366 * C8974 +
                    C2365 * C8971 + (C113 * C2065 + C31050 * C2076) * C8975 +
                    (C113 * C2077 + C31050 * C2083) * C8972) *
                       C30817 * C3850) *
                      C30867 * C2951)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31187 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C31175 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31187 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C31175 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C31193 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30867 * C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C31173 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31187 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C31175 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31187 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C31175 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C3342 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C30867 * C31193 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C30972 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C3342) *
              C30867 * C31186 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C3342 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C30972) *
              C30867 * C31173 +
          ((C578 * C8973 + C579 * C8970 + C581 * C8974 + C580 * C8971 +
            (C113 * C2352 + C31050 * C2353) * C8975 +
            (C113 * C2354 + C31050 * C2355) * C8972) *
               C30817 * C30972 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C3342 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C31187 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C3342) *
               C31175 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C3342 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C3342) *
               C31187 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C3342 -
            (C10691 * C8972 + C10692 * C8975 + C2245 * C8971 + C2246 * C8974 +
             C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C31175 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C114 +
                     (C113 * C123 + C31050 * C136) * C31063) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30885 * C1468 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31050 * C334) * C31063 +
                     (C113 * C304 + C31050 * C317) * C114) *
                        C103) *
                       C30885 * C1469 +
                   (((C113 * C305 + C31050 * C318) * C114 +
                     (C113 * C319 + C31050 * C335) * C31063) *
                        C103 +
                    (C383 + C384) * C104 + C392 * C105) *
                       C30885 * C1470 -
                   ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
                    ((C113 * C1210 + C31050 * C1220) * C31063 +
                     (C113 * C1202 + C31050 * C1211) * C114) *
                        C103) *
                       C30885 * C31160) *
                      C31105 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30885 * C1469 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30885 * C1468 -
                   ((C389 + C390) * C105 + (C386 + C385) * C104 +
                    (C384 + C383) * C103) *
                       C30885 * C1470 +
                   ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
                    ((C113 * C1474 + C31050 * C1475) * C114 +
                     (C113 * C1476 + C31050 * C1477) * C31063) *
                        C105) *
                       C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C114 +
                     (C113 * C123 + C31050 * C136) * C31063) *
                        C103 +
                    (C174 + C175) * C104 + C184 * C105) *
                       C30885 * C31119 -
                   (C391 * C105 + (C381 + C382) * C104 +
                    ((C113 * C316 + C31050 * C334) * C31063 +
                     (C113 * C304 + C31050 * C317) * C114) *
                        C103) *
                       C30885 * C30930) *
                      C695 +
                  (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                       C30885 * C30930 -
                   (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                       C30885 * C31119) *
                      C696 +
                  ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                       C31119 -
                   ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                       C30885 * C30930) *
                      C697 +
                  ((C704 * C103 + (C712 + C711) * C104 +
                    ((C113 * C699 + C31050 * C700) * C114 +
                     (C113 * C701 + C31050 * C702) * C31063) *
                        C105) *
                       C30885 * C30930 -
                   ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                       C30885 * C31119) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
                     C4809 * C305 + C4805 * C318) *
                        C114 +
                    (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
                     C4809 * C319 + C4805 * C335) *
                        C31063) *
                       C30817 * C30885 * C31119 -
                   ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 +
                     C4804 * C335 + C4807 * C316 + C4803 * C334) *
                        C31063 +
                    (C4809 * C1202 + C4805 * C1211 + C4808 * C305 +
                     C4804 * C318 + C4807 * C304 + C4803 * C317) *
                        C114) *
                       C30817 * C30885 * C30930) *
                      C695 +
                  (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
                     C4809 * C1201 + C4805 * C1209) *
                        C114 +
                    (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
                     C4809 * C1208 + C4805 * C1219) *
                        C31063) *
                       C30817 * C30885 * C30930 -
                   ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
                     C4807 * C125 + C4803 * C137) *
                        C31063 +
                    (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
                     C4807 * C116 + C4803 * C124) *
                        C114) *
                       C30817 * C30885 * C31119) *
                      C696 +
                  (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
                     C4809 * C307 + C4805 * C322) *
                        C114 +
                    (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
                     C4809 * C323 + C4805 * C337) *
                        C31063) *
                       C30817 * C30885 * C31119 -
                   ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 +
                     C4804 * C337 + C4807 * C312 + C4803 * C332) *
                        C31063 +
                    (C4809 * C1200 + C4805 * C1207 + C4808 * C307 +
                     C4804 * C322 + C4807 * C302 + C4803 * C313) *
                        C114) *
                       C30817 * C30885 * C30930) *
                      C697 +
                  (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
                     C4809 * C1474 + C4805 * C1475) *
                        C114 +
                    (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
                     C4809 * C1476 + C4805 * C1477) *
                        C31063) *
                       C30817 * C30885 * C30930 -
                   ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
                     C4807 * C128 + C4803 * C139) *
                        C31063 +
                    (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
                     C4807 * C118 + C4803 * C129) *
                        C114) *
                       C30817 * C30885 * C31119) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
                     C4809 * C305 + C4805 * C318) *
                        C114 +
                    (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
                     C4809 * C319 + C4805 * C335) *
                        C31063) *
                       C30817 * C30885 * C1468 -
                   ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 +
                     C4804 * C335 + C4807 * C316 + C4803 * C334) *
                        C31063 +
                    (C4809 * C1202 + C4805 * C1211 + C4808 * C305 +
                     C4804 * C318 + C4807 * C304 + C4803 * C317) *
                        C114) *
                       C30817 * C30885 * C1469 +
                   ((C4807 * C305 + C4803 * C318 + C4808 * C1202 +
                     C4804 * C1211 + C4809 * C1203 + C4805 * C1212) *
                        C114 +
                    (C4807 * C319 + C4803 * C335 + C4808 * C1210 +
                     C4804 * C1220 + C4809 * C1213 + C4805 * C1221) *
                        C31063) *
                       C30817 * C30885 * C1470 -
                   ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 +
                     C4804 * C1221 + C4807 * C1210 + C4803 * C1220) *
                        C31063 +
                    (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 +
                     C4804 * C1212 + C4807 * C1202 + C4803 * C1211) *
                        C114) *
                       C30817 * C30885 * C31160) *
                      C31105 +
                  (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
                     C4809 * C1201 + C4805 * C1209) *
                        C114 +
                    (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
                     C4809 * C1208 + C4805 * C1219) *
                        C31063) *
                       C30817 * C30885 * C1469 -
                   ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
                     C4807 * C125 + C4803 * C137) *
                        C31063 +
                    (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
                     C4807 * C116 + C4803 * C124) *
                        C114) *
                       C30817 * C30885 * C1468 -
                   ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 +
                     C4804 * C1219 + C4807 * C321 + C4803 * C336) *
                        C31063 +
                    (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 +
                     C4804 * C1209 + C4807 * C306 + C4803 * C320) *
                        C114) *
                       C30817 * C30885 * C1470 +
                   ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 +
                     C4804 * C1214 + C4809 * C5772 + C4805 * C5773) *
                        C114 +
                    (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 +
                     C4804 * C1222 + C4809 * C5774 + C4805 * C5775) *
                        C31063) *
                       C30817 * C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31050 * C122) * C8973 +
                    (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
                    C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                       C30817 * C30885 * C31119 -
                   ((C113 * C1347 + C31050 * C1363) * C8972 +
                    (C113 * C1336 + C31050 * C1348) * C8975 +
                    (C113 * C977 + C31050 * C986) * C8971 +
                    (C113 * C971 + C31050 * C976) * C8974 +
                    (C113 * C316 + C31050 * C334) * C8970 +
                    (C113 * C304 + C31050 * C317) * C8973) *
                       C30817 * C30885 * C30930) *
                      C695 +
                  ((C370 * C8973 + C369 * C8970 + C1004 * C8974 +
                    C1005 * C8971 + C2246 * C8975 + C2245 * C8972) *
                       C30817 * C30885 * C30930 -
                   (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
                    C165 * C8970 + C164 * C8973) *
                       C30817 * C30885 * C31119) *
                      C696 +
                  ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
                    C576 * C8975 + C577 * C8972) *
                       C30817 * C30885 * C31119 -
                   (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 +
                    C1006 * C8974 + C367 * C8970 + C368 * C8973) *
                       C30817 * C30885 * C30930) *
                      C697 +
                  ((C375 * C8973 + C376 * C8970 + C1009 * C8974 +
                    C1008 * C8971 + (C113 * C2230 + C31050 * C2231) * C8975 +
                    (C113 * C2232 + C31050 * C2233) * C8972) *
                       C30817 * C30885 * C30930 -
                   (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
                    C168 * C8970 + C169 * C8973) *
                       C30817 * C30885 * C31119) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C113 * C115 + C31050 * C122) * C8973 +
                    (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
                    C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                       C30817 * C30885 * C1468 -
                   (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 +
                    C9565 * C8974 + (C113 * C316 + C31050 * C334) * C8970 +
                    (C113 * C304 + C31050 * C317) * C8973) *
                       C30817 * C30885 * C1469 +
                   ((C113 * C305 + C31050 * C318) * C8973 +
                    (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
                    C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                       C30817 * C30885 * C1470 -
                   ((C113 * C5665 + C31050 * C5671) * C8972 +
                    (C113 * C5662 + C31050 * C5666) * C8975 +
                    (C113 * C1762 + C31050 * C1767) * C8971 +
                    (C113 * C1758 + C31050 * C1761) * C8974 +
                    (C113 * C1210 + C31050 * C1220) * C8970 +
                    (C113 * C1202 + C31050 * C1211) * C8973) *
                       C30817 * C30885 * C31160) *
                      C31105 +
                  ((C370 * C8973 + C369 * C8970 + C1004 * C8974 +
                    C1005 * C8971 + C2246 * C8975 + C2245 * C8972) *
                       C30817 * C30885 * C1469 -
                   (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
                    C165 * C8970 + C164 * C8973) *
                       C30817 * C30885 * C1468 -
                   ((C113 * C1358 + C31050 * C1368) * C8972 +
                    (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
                    C1656 * C8974 + C372 * C8970 + C371 * C8973) *
                       C30817 * C30885 * C1470 +
                   (C1490 * C8973 + C1489 * C8970 +
                    (C113 * C1759 + C31050 * C1763) * C8974 +
                    (C113 * C1764 + C31050 * C1768) * C8971 +
                    (C113 * C6468 + C31050 * C6469) * C8975 +
                    (C113 * C6470 + C31050 * C6471) * C8972) *
                       C30817 * C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C1468 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31120) *
              C1469 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31120 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C1470 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30930) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C31119 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C1468 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31120) *
              C1469 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C1470 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             (C113 * C2470 + C31050 * C2473) * C8975 +
             (C113 * C2474 + C31050 * C2479) * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C30930) *
              C299 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C31119 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            ((C113 * C2476 + C31050 * C2480) * C8972 +
             (C113 * C2471 + C31050 * C2475) * C8975 + C2245 * C8971 +
             C2246 * C8974 + C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C30930) *
              C300 +
          (((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
             C576 * C8975 + C577 * C8972) *
                C30817 * C31120 -
            (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
             C570 * C8970 + C571 * C8973) *
                C30817 * C30972) *
               C31119 +
           ((C1006 * C8973 + C1007 * C8970 + C2244 * C8974 + C2243 * C8971 +
             (C113 * C2472 + C31050 * C2477) * C8975 +
             (C113 * C2478 + C31050 * C2481) * C8972) *
                C30817 * C30972 -
            (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
             C367 * C8970 + C368 * C8973) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31120 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C1468 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C30972 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C31120) *
              C1469 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C31120 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C30972) *
              C1470 +
          ((C10231 * C8973 + C10232 * C8970 + C10233 * C8974 + C10234 * C8971 +
            (C113 * C6672 + C31050 * C6673) * C8975 +
            (C113 * C6674 + C31050 * C6675) * C8972) *
               C30817 * C30972 -
           (C10234 * C8972 + C10233 * C8975 + C10232 * C8971 + C10231 * C8974 +
            (C113 * C1210 + C31050 * C1220) * C8970 +
            (C113 * C1202 + C31050 * C1211) * C8973) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31050 * C122) * C114 +
                (C113 * C123 + C31050 * C136) * C31063) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30885 * C30867 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30885 * C30867 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                  C30867 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30885 * C30867 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31050 * C134) * C114 +
                (C113 * C135 + C31050 * C142) * C31063) *
                   C105) *
                  C30885 * C30867 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C31187 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C31175 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C31150) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30885 * C31175 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C31187 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C31150) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C31187 -
               (((C113 * C328 + C31050 * C340) * C31063 +
                 (C113 * C310 + C31050 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C31175 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31050 * C330) * C114 +
                 (C113 * C331 + C31050 * C341) * C31063) *
                    C105) *
                   C30885 * C31150) *
                  C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31177 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31188 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31188 -
           (((C113 * C531 + C31050 * C543) * C31063 +
             (C113 * C513 + C31050 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31177 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C1126 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31177 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31188 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C1127 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31188 -
           (((C113 * C1349 + C31050 * C1364) * C31063 +
             (C113 * C1337 + C31050 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31050 * C1365) * C31063 +
             (C113 * C1338 + C31050 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C31177 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C1126 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C1127 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 +
           (C113 * C507 + C31050 * C520) * C8974 +
           (C113 * C519 + C31050 * C537) * C8971 +
           (C113 * C508 + C31050 * C521) * C8975 +
           (C113 * C522 + C31050 * C538) * C8972) *
              C30817 * C30885 * C30867 * C108 -
          (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
           C165 * C8970 + C164 * C8973) *
              C30817 * C30885 * C30867 * C109 +
          (C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
           C576 * C8975 + C577 * C8972) *
              C30817 * C30885 * C30867 * C110 -
          (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
           C168 * C8970 + C169 * C8973) *
              C30817 * C30885 * C30867 * C111 +
          (C170 * C8973 + C171 * C8970 + C823 * C8974 + C822 * C8971 +
           (C113 * C514 + C31050 * C533) * C8975 +
           (C113 * C534 + C31050 * C544) * C8972) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 +
            (C113 * C507 + C31050 * C520) * C8974 +
            (C113 * C519 + C31050 * C537) * C8971 +
            (C113 * C508 + C31050 * C521) * C8975 +
            (C113 * C522 + C31050 * C538) * C8972) *
               C30817 * C30885 * C31187 -
           ((C113 * C1347 + C31050 * C1363) * C8972 +
            (C113 * C1336 + C31050 * C1348) * C8975 +
            (C113 * C977 + C31050 * C986) * C8971 +
            (C113 * C971 + C31050 * C976) * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31175 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C299 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31175 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31187 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C31187 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C31175 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31188 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31177 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C30867 * C299 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C31177 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C31188 -
           ((C113 * C2075 + C31050 * C2082) * C8972 +
            (C113 * C2064 + C31050 * C2074) * C8975 + C2367 * C8971 +
            C2368 * C8974 + C575 * C8970 + C574 * C8973) *
               C30817 * C31153) *
              C30867 * C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C31188 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C31177 +
           (C576 * C8973 + C577 * C8970 + C2366 * C8974 + C2365 * C8971 +
            (C113 * C2065 + C31050 * C2076) * C8975 +
            (C113 * C2077 + C31050 * C2083) * C8972) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C1126 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C1127 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C31184 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C1127 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C1126 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C1126 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C1127 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
           C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
              C30817 * C30885 * C1194 -
          (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
           (C113 * C316 + C31050 * C334) * C8970 +
           (C113 * C304 + C31050 * C317) * C8973) *
              C30817 * C30885 * C1195 +
          ((C113 * C305 + C31050 * C318) * C8973 +
           (C113 * C319 + C31050 * C335) * C8970 +
           (C113 * C1339 + C31050 * C1354) * C8974 +
           (C113 * C1353 + C31050 * C1366) * C8971 +
           (C113 * C1340 + C31050 * C1355) * C8975 +
           (C113 * C1356 + C31050 * C1367) * C8972) *
              C30817 * C30885 * C1196 -
          ((C113 * C5665 + C31050 * C5671) * C8972 +
           (C113 * C5662 + C31050 * C5666) * C8975 +
           (C113 * C1762 + C31050 * C1767) * C8971 +
           (C113 * C1758 + C31050 * C1761) * C8974 +
           (C113 * C1210 + C31050 * C1220) * C8970 +
           (C113 * C1202 + C31050 * C1211) * C8973) *
              C30817 * C30885 * C1197 +
          ((C113 * C1203 + C31050 * C1212) * C8973 +
           (C113 * C1213 + C31050 * C1221) * C8970 +
           (C113 * C5663 + C31050 * C5668) * C8974 +
           (C113 * C5667 + C31050 * C5672) * C8971 +
           (C113 * C5664 + C31050 * C5669) * C8975 +
           (C113 * C5670 + C31050 * C5673) * C8972) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31188 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C31177 +
           (C9211 * C8973 + C9212 * C8970 + C9214 * C8974 + C9213 * C8971 +
            (C113 * C2063 + C31050 * C2072) * C8975 +
            (C113 * C2073 + C31050 * C2081) * C8972) *
               C30817 * C31153) *
              C1126 +
          ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
            C9867 * C8975 + C9868 * C8972) *
               C30817 * C31177 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C31188 -
           ((C113 * C6317 + C31050 * C6320) * C8972 +
            (C113 * C6311 + C31050 * C6315) * C8975 + C9868 * C8971 +
            C9867 * C8974 + C9568 * C8970 + C9567 * C8973) *
               C30817 * C31153) *
              C1127 +
          (((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
            C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
               C30817 * C31188 -
           (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
            C9870 * C8970 + C9869 * C8973) *
               C30817 * C31177 +
           (C9871 * C8973 + C9872 * C8970 + C9874 * C8974 + C9873 * C8971 +
            (C113 * C6312 + C31050 * C6316) * C8975 +
            (C113 * C6318 + C31050 * C6321) * C8972) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C1126 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C1127 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31120 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31120) *
              C30867 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C1126 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C1127 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C1126 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C1127 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C31120 -
           (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
            C9210 * C8970 + C9209 * C8973) *
               C30817 * C30972) *
              C30867 * C695 +
          ((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
            C2368 * C8975 + C2367 * C8972) *
               C30817 * C30972 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C31120) *
              C30867 * C696 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C31120 -
           (C2365 * C8972 + C2366 * C8975 + C577 * C8971 + C576 * C8974 +
            C570 * C8970 + C571 * C8973) *
               C30817 * C30972) *
              C30867 * C697 +
          ((C578 * C8973 + C579 * C8970 + C581 * C8974 + C580 * C8971 +
            (C113 * C2352 + C31050 * C2353) * C8975 +
            (C113 * C2354 + C31050 * C2355) * C8972) *
               C30817 * C30972 -
           (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
            C168 * C8970 + C169 * C8973) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C8973 +
             (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
             C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
                C30817 * C31120 -
            (C9213 * C8972 + C9214 * C8975 + C9212 * C8971 + C9211 * C8974 +
             C9210 * C8970 + C9209 * C8973) *
                C30817 * C30972) *
               C1126 +
           ((C9565 * C8973 + C9566 * C8970 + C9567 * C8974 + C9568 * C8971 +
             C9867 * C8975 + C9868 * C8972) *
                C30817 * C30972 -
            (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
             (C113 * C316 + C31050 * C334) * C8970 +
             (C113 * C304 + C31050 * C317) * C8973) *
                C30817 * C31120) *
               C1127 +
           (((C113 * C305 + C31050 * C318) * C8973 +
             (C113 * C319 + C31050 * C335) * C8970 + C9869 * C8974 +
             C9870 * C8971 + C9871 * C8975 + C9872 * C8972) *
                C30817 * C31120 -
            (C9873 * C8972 + C9874 * C8975 + C9872 * C8971 + C9871 * C8974 +
             C9870 * C8970 + C9869 * C8973) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          (((C573 * C8973 + C572 * C8970 + C574 * C8974 + C575 * C8971 +
             C2368 * C8975 + C2367 * C8972) *
                C30817 * C30972 -
            (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
             C165 * C8970 + C164 * C8973) *
                C30817 * C31120) *
               C1126 +
           ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
             C2246 * C8975 + C2245 * C8972) *
                C30817 * C31120 -
            ((C113 * C2476 + C31050 * C2480) * C8972 +
             (C113 * C2471 + C31050 * C2475) * C8975 + C2245 * C8971 +
             C2246 * C8974 + C1005 * C8970 + C1004 * C8973) *
                C30817 * C30972) *
               C1127 +
           ((C1656 * C8973 + C1655 * C8970 + C10123 * C8974 + C10124 * C8971 +
             (C113 * C6570 + C31050 * C6571) * C8975 +
             (C113 * C6572 + C31050 * C6573) * C8972) *
                C30817 * C30972 -
            (C10124 * C8972 + C10123 * C8975 + C1655 * C8971 + C1656 * C8974 +
             C372 * C8970 + C371 * C8973) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31187 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30885 * C31175 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31187 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31187 -
           (((C113 * C328 + C31050 * C340) * C31063 +
             (C113 * C310 + C31050 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30885 * C31175 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C30867 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30885 *
              C30867 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C30867 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30885 *
              C30867 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31050 * C134) * C114 +
            (C113 * C135 + C31050 * C142) * C31063) *
               C105) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 +
           (C113 * C507 + C31050 * C520) * C8974 +
           (C113 * C519 + C31050 * C537) * C8971 +
           (C113 * C508 + C31050 * C521) * C8975 +
           (C113 * C522 + C31050 * C538) * C8972) *
              C30817 * C30885 * C30867 * C108 -
          (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
           C165 * C8970 + C164 * C8973) *
              C30817 * C30885 * C30867 * C109 +
          (C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
           C576 * C8975 + C577 * C8972) *
              C30817 * C30885 * C30867 * C110 -
          (C580 * C8972 + C581 * C8975 + C579 * C8971 + C578 * C8974 +
           C168 * C8970 + C169 * C8973) *
              C30817 * C30885 * C30867 * C111 +
          (C170 * C8973 + C171 * C8970 + C823 * C8974 + C822 * C8971 +
           (C113 * C514 + C31050 * C533) * C8975 +
           (C113 * C534 + C31050 * C544) * C8972) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 +
            (C113 * C507 + C31050 * C520) * C8974 +
            (C113 * C519 + C31050 * C537) * C8971 +
            (C113 * C508 + C31050 * C521) * C8975 +
            (C113 * C522 + C31050 * C538) * C8972) *
               C30817 * C30885 * C31187 -
           ((C113 * C1347 + C31050 * C1363) * C8972 +
            (C113 * C1336 + C31050 * C1348) * C8975 +
            (C113 * C977 + C31050 * C986) * C8971 +
            (C113 * C971 + C31050 * C976) * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C31175 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C299 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C31175 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C31187 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C300 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C31187 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C31175 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C8973 +
            (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
            C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
               C30817 * C30885 * C1126 -
           (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
            (C113 * C316 + C31050 * C334) * C8970 +
            (C113 * C304 + C31050 * C317) * C8973) *
               C30817 * C30885 * C1127 +
           ((C113 * C305 + C31050 * C318) * C8973 +
            (C113 * C319 + C31050 * C335) * C8970 +
            (C113 * C1339 + C31050 * C1354) * C8974 +
            (C113 * C1353 + C31050 * C1366) * C8971 +
            (C113 * C1340 + C31050 * C1355) * C8975 +
            (C113 * C1356 + C31050 * C1367) * C8972) *
               C30817 * C30885 * C31150) *
              C31184 +
          ((C370 * C8973 + C369 * C8970 + C1004 * C8974 + C1005 * C8971 +
            C2246 * C8975 + C2245 * C8972) *
               C30817 * C30885 * C1127 -
           (C575 * C8972 + C574 * C8975 + C572 * C8971 + C573 * C8974 +
            C165 * C8970 + C164 * C8973) *
               C30817 * C30885 * C1126 -
           ((C113 * C1358 + C31050 * C1368) * C8972 +
            (C113 * C1341 + C31050 * C1357) * C8975 + C1655 * C8971 +
            C1656 * C8974 + C372 * C8970 + C371 * C8973) *
               C30817 * C30885 * C31150) *
              C31171 +
          ((C166 * C8973 + C167 * C8970 + C571 * C8974 + C570 * C8971 +
            C576 * C8975 + C577 * C8972) *
               C30817 * C30885 * C1126 -
           (C2243 * C8972 + C2244 * C8975 + C1007 * C8971 + C1006 * C8974 +
            C367 * C8970 + C368 * C8973) *
               C30817 * C30885 * C1127 +
           (C373 * C8973 + C374 * C8970 + C1654 * C8974 + C1653 * C8971 +
            (C113 * C1342 + C31050 * C1359) * C8975 +
            (C113 * C1360 + C31050 * C1369) * C8972) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C115 + C31050 * C122) * C8973 +
           (C113 * C123 + C31050 * C136) * C8970 + C9209 * C8974 +
           C9210 * C8971 + C9211 * C8975 + C9212 * C8972) *
              C30817 * C30885 * C1194 -
          (C9568 * C8972 + C9567 * C8975 + C9566 * C8971 + C9565 * C8974 +
           (C113 * C316 + C31050 * C334) * C8970 +
           (C113 * C304 + C31050 * C317) * C8973) *
              C30817 * C30885 * C1195 +
          ((C113 * C305 + C31050 * C318) * C8973 +
           (C113 * C319 + C31050 * C335) * C8970 +
           (C113 * C1339 + C31050 * C1354) * C8974 +
           (C113 * C1353 + C31050 * C1366) * C8971 +
           (C113 * C1340 + C31050 * C1355) * C8975 +
           (C113 * C1356 + C31050 * C1367) * C8972) *
              C30817 * C30885 * C1196 -
          ((C113 * C5665 + C31050 * C5671) * C8972 +
           (C113 * C5662 + C31050 * C5666) * C8975 +
           (C113 * C1762 + C31050 * C1767) * C8971 +
           (C113 * C1758 + C31050 * C1761) * C8974 +
           (C113 * C1210 + C31050 * C1220) * C8970 +
           (C113 * C1202 + C31050 * C1211) * C8973) *
              C30817 * C30885 * C1197 +
          ((C113 * C1203 + C31050 * C1212) * C8973 +
           (C113 * C1213 + C31050 * C1221) * C8970 +
           (C113 * C5663 + C31050 * C5668) * C8974 +
           (C113 * C5667 + C31050 * C5672) * C8971 +
           (C113 * C5664 + C31050 * C5669) * C8975 +
           (C113 * C5670 + C31050 * C5673) * C8972) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[75] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C30926 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C30933 +
                   (((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30885 * C2948) *
                      C30844 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C30933 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C30926 -
                   ((C19095 + C19096 + C19097 + C19098) * C13225 +
                    (C19090 + C19089 + C19088 + C19087) * C13224) *
                       C30885 * C2948) *
                      C30853 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30885 * C30926 -
                   ((C19391 + C19392 + C19393 + C19394) * C13225 +
                    (C19094 + C19093 + C19092 + C19091) * C13224) *
                       C30885 * C30933 +
                   ((C19098 + C19097 + C19096 + C19095) * C13224 +
                    (C378 * C18918 + C377 * C18916 +
                     (C113 * C1640 + C31050 * C1641) * C18919 +
                     (C113 * C1642 + C31050 * C1643) * C18917) *
                        C13225) *
                       C30885 * C2948) *
                      C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[76] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C30926 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C30933 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C31120 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C2948) *
                      C2688 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C30926 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30933 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C31120) *
                       C2948) *
                      C30850)) /
                (p * q * std::sqrt(p + q));
    d2ee[77] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C31194 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C31190 +
                   (((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30885 * C31180 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C30885 * C31160) *
                      C2688 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C31190 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C31194 -
                   ((C19095 + C19096 + C19097 + C19098) * C13225 +
                    (C19090 + C19089 + C19088 + C19087) * C13224) *
                       C30885 * C31180 +
                   ((C20240 + C20239 + C20244 + C20243) * C13224 +
                    (C1488 * C18918 + C1487 * C18916 +
                     (C113 * C1760 + C31050 * C1765) * C18919 +
                     (C113 * C1766 + C31050 * C1769) * C18917) *
                        C13225) *
                       C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C2580 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C30930) *
                      C31193 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C30930 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C2580) *
                      C31186 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30885 * C2580 -
                   ((C19391 + C19392 + C19393 + C19394) * C13225 +
                    (C19094 + C19093 + C19092 + C19091) * C13224) *
                       C30885 * C30930) *
                      C31173 +
                  (((C19394 + C19393 + C19392 + C19391) * C13224 +
                    (C710 * C18918 + C709 * C18916 +
                     (C113 * C975 + C31050 * C984) * C18919 +
                     (C113 * C985 + C31050 * C990) * C18917) *
                        C13225) *
                       C30885 * C30930 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C30885 * C2580) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31188 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C31177 +
                    ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                      C9213 * C18917) *
                         C13224 +
                     (C19249 + C19250 + C19251 + C19252) * C13225) *
                        C31153) *
                       C2580 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C31177 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31188 -
                    ((C21141 + C21142 + C21143 + C21144) * C13225 +
                     (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                      C9567 * C18918) *
                         C13224) *
                        C31153) *
                       C30930) *
                      C2688 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C31177 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31188 -
                    ((C19257 + C19258 + C19259 + C19260) * C13225 +
                     (C19252 + C19251 + C19250 + C19249) * C13224) *
                        C31153) *
                       C2580 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31188 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C31177 +
                    ((C21144 + C21143 + C21142 + C21141) * C13224 +
                     (C2244 * C18918 + C2243 * C18916 +
                      (C113 * C2472 + C31050 * C2477) * C18919 +
                      (C113 * C2478 + C31050 * C2481) * C18917) *
                         C13225) *
                        C31153) *
                       C30930) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[78] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C2580 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C30930) *
                      C30844 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C2580 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C30853 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C31120 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C2580 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C31120) *
                       C30930) *
                      C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[79] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C2580 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C30930) *
                      C31193 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C30930 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C2580) *
                      C31186 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30885 * C2580 -
                   ((C19391 + C19392 + C19393 + C19394) * C13225 +
                    (C19094 + C19093 + C19092 + C19091) * C13224) *
                       C30885 * C30930) *
                      C31173 +
                  (((C19394 + C19393 + C19392 + C19391) * C13224 +
                    (C710 * C18918 + C709 * C18916 +
                     (C113 * C975 + C31050 * C984) * C18919 +
                     (C113 * C985 + C31050 * C990) * C18917) *
                        C13225) *
                       C30885 * C30930 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C30885 * C2580) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C31194 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C31190 +
                   (((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30885 * C31180 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C30885 * C31160) *
                      C2688 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C31190 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C31194 -
                   ((C19095 + C19096 + C19097 + C19098) * C13225 +
                    (C19090 + C19089 + C19088 + C19087) * C13224) *
                       C30885 * C31180 +
                   ((C20240 + C20239 + C20244 + C20243) * C13224 +
                    (C1488 * C18918 + C1487 * C18916 +
                     (C113 * C1760 + C31050 * C1765) * C18919 +
                     (C113 * C1766 + C31050 * C1769) * C18917) *
                        C13225) *
                       C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[80] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C30926 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C30933 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C3342 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C2948) *
                      C31105 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C30926 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30933 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C3342) *
                       C2948) *
                      C30850)) /
                (p * q * std::sqrt(p + q));
    d2ee[81] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30968 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30975 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C3850) *
                      C30926 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C30975 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30968 -
                   ((C21141 + C21142 + C21143 + C21144) * C13225 +
                    (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                     C9567 * C18918) *
                        C13224) *
                       C3850) *
                      C30933 +
                  ((((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30968 -
                   ((C20439 + C20440 + C20441 + C20442) * C13225 +
                    (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                     C9869 * C18918) *
                        C13224) *
                       C30975 +
                   ((C9871 * C18918 + C9872 * C18916 + C9874 * C18919 +
                     C9873 * C18917) *
                        C13224 +
                    (C10123 * C18918 + C10124 * C18916 +
                     (C113 * C6570 + C31050 * C6571) * C18919 +
                     (C113 * C6572 + C31050 * C6573) * C18917) *
                        C13225) *
                       C3850) *
                      C2948) *
                 C30839) /
                (p * q * std::sqrt(p + q));
    d2ee[82] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C3342 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C31194 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C30972 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C3342) *
                      C31190 +
                  ((((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C3342 -
                   ((C20439 + C20440 + C20441 + C20442) * C13225 +
                    (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                     C9869 * C18918) *
                        C13224) *
                       C30972) *
                      C31180 +
                  (((C10231 * C18918 + C10232 * C18916 + C10233 * C18919 +
                     C10234 * C18917) *
                        C13224 +
                    (C20242 * C18918 + C20241 * C18916 +
                     (C113 * C6468 + C31050 * C6469) * C18919 +
                     (C113 * C6470 + C31050 * C6471) * C18917) *
                        C13225) *
                       C30972 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C3342) *
                      C31160) *
                 C30839) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C2580 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C30930) *
                      C31184 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C2580 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C31171 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C3342 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C2580 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C3342) *
                       C30930) *
                      C31144)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31195 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C31192 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C31183 -
                   ((C21275 + C21276 + C21277 + C21278) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9213 * C18916 +
                     C9214 * C18918) *
                        C13224) *
                       C31166) *
                      C2580 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C31192 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C31195 -
                   ((C21141 + C21142 + C21143 + C21144) * C13225 +
                    (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                     C9567 * C18918) *
                        C13224) *
                       C31183 +
                   ((C9867 * C18918 + C9868 * C18916 + C10908 * C18919 +
                     C10907 * C18917) *
                        C13224 +
                    (C10692 * C18918 + C10691 * C18916 +
                     (C113 * C10682 + C31050 * C10683) * C18919 +
                     (C113 * C10684 + C31050 * C10685) * C18917) *
                        C13225) *
                       C31166) *
                      C30930) *
                 C30839) /
                    (p * q * std::sqrt(p + q));
    d2ee[83] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C30968 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30975 +
                    ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                      C9213 * C18917) *
                         C13224 +
                     (C19249 + C19250 + C19251 + C19252) * C13225) *
                        C3850) *
                       C2580 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30975 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C30968 -
                    ((C21141 + C21142 + C21143 + C21144) * C13225 +
                     (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                      C9567 * C18918) *
                         C13224) *
                        C3850) *
                       C30930) *
                      C31105 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30975 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C30968 -
                    ((C19257 + C19258 + C19259 + C19260) * C13225 +
                     (C19252 + C19251 + C19250 + C19249) * C13224) *
                        C3850) *
                       C2580 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C30968 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30975 +
                    ((C21144 + C21143 + C21142 + C21141) * C13224 +
                     (C2244 * C18918 + C2243 * C18916 +
                      (C113 * C2472 + C31050 * C2477) * C18919 +
                      (C113 * C2478 + C31050 * C2481) * C18917) *
                         C13225) *
                        C3850) *
                       C30930) *
                      C30850)) /
                (p * q * std::sqrt(p + q));
    d2ee[84] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C2580 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C30930) *
                      C31184 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C2580 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C31171 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C3342 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C2580 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C3342) *
                       C30930) *
                      C31144)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C3342 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C31194 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C30972 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C3342) *
                      C31190 +
                  ((((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C3342 -
                   ((C20439 + C20440 + C20441 + C20442) * C13225 +
                    (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                     C9869 * C18918) *
                        C13224) *
                       C30972) *
                      C31180 +
                  (((C10231 * C18918 + C10232 * C18916 + C10233 * C18919 +
                     C10234 * C18917) *
                        C13224 +
                    (C20242 * C18918 + C20241 * C18916 +
                     (C113 * C6468 + C31050 * C6469) * C18919 +
                     (C113 * C6470 + C31050 * C6471) * C18917) *
                        C13225) *
                       C30972 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C3342) *
                      C31160) *
                 C30839) /
                    (p * q * std::sqrt(p + q));
    d2ee[85] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C1468 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C1469 +
                   (((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30885 * C1470 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C30885 * C31160) *
                      C31105 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C1469 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C1468 -
                   ((C19095 + C19096 + C19097 + C19098) * C13225 +
                    (C19090 + C19089 + C19088 + C19087) * C13224) *
                       C30885 * C1470 +
                   ((C20240 + C20239 + C20244 + C20243) * C13224 +
                    (C1488 * C18918 + C1487 * C18916 +
                     (C113 * C1760 + C31050 * C1765) * C18919 +
                     (C113 * C1766 + C31050 * C1769) * C18917) *
                        C13225) *
                       C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C31119 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C30930) *
                      C695 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C30930 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C31119) *
                      C696 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30885 * C31119 -
                   ((C19391 + C19392 + C19393 + C19394) * C13225 +
                    (C19094 + C19093 + C19092 + C19091) * C13224) *
                       C30885 * C30930) *
                      C697 +
                  (((C19394 + C19393 + C19392 + C19391) * C13224 +
                    (C710 * C18918 + C709 * C18916 +
                     (C113 * C975 + C31050 * C984) * C18919 +
                     (C113 * C985 + C31050 * C990) * C18917) *
                        C13225) *
                       C30885 * C30930 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C30885 * C31119) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C1880 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C1881 +
                    ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                      C9213 * C18917) *
                         C13224 +
                     (C19249 + C19250 + C19251 + C19252) * C13225) *
                        C31153) *
                       C31119 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C1881 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C1880 -
                    ((C21141 + C21142 + C21143 + C21144) * C13225 +
                     (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                      C9567 * C18918) *
                         C13224) *
                        C31153) *
                       C30930) *
                      C31105 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C1881 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C1880 -
                    ((C19257 + C19258 + C19259 + C19260) * C13225 +
                     (C19252 + C19251 + C19250 + C19249) * C13224) *
                        C31153) *
                       C31119 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C1880 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C1881 +
                    ((C21144 + C21143 + C21142 + C21141) * C13224 +
                     (C2244 * C18918 + C2243 * C18916 +
                      (C113 * C2472 + C31050 * C2477) * C18919 +
                      (C113 * C2478 + C31050 * C2481) * C18917) *
                         C13225) *
                        C31153) *
                       C30930) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[86] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31120 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C1468 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C30972 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C31120) *
                      C1469 +
                  ((((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C31120 -
                   ((C20439 + C20440 + C20441 + C20442) * C13225 +
                    (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                     C9869 * C18918) *
                        C13224) *
                       C30972) *
                      C1470 +
                  (((C10231 * C18918 + C10232 * C18916 + C10233 * C18919 +
                     C10234 * C18917) *
                        C13224 +
                    (C20242 * C18918 + C20241 * C18916 +
                     (C113 * C6468 + C31050 * C6469) * C18919 +
                     (C113 * C6470 + C31050 * C6471) * C18917) *
                        C13225) *
                       C30972 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C31120) *
                      C31160) *
                 C30839) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C31119 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C30930) *
                      C299 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C31119 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C300 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C31120 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C31119 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C31120) *
                       C30930) *
                      C31144)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C2348 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C2349 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C2350 -
                   ((C21275 + C21276 + C21277 + C21278) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9213 * C18916 +
                     C9214 * C18918) *
                        C13224) *
                       C31166) *
                      C31119 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C2349 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C2348 -
                   ((C21141 + C21142 + C21143 + C21144) * C13225 +
                    (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                     C9567 * C18918) *
                        C13224) *
                       C2350 +
                   ((C9867 * C18918 + C9868 * C18916 + C10908 * C18919 +
                     C10907 * C18917) *
                        C13224 +
                    (C10692 * C18918 + C10691 * C18916 +
                     (C113 * C10682 + C31050 * C10683) * C18919 +
                     (C113 * C10684 + C31050 * C10685) * C18917) *
                        C13225) *
                       C31166) *
                      C30930) *
                 C30839) /
                    (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31050 * C122) * C18918 +
                (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                C9210 * C18917) *
                   C13224 +
               (C18921 + C18922 + C18923 + C18924) * C13225) *
                  C30885 * C30867 * C108 -
              ((C18925 + C18926 + C18927 + C18928) * C13225 +
               (C18924 + C18923 + C18922 + C18921) * C13224) *
                  C30885 * C30867 * C109 +
              ((C18928 + C18927 + C18926 + C18925) * C13224 +
               (C18929 + C18930 + C18931 + C18932) * C13225) *
                  C30885 * C30867 * C110 -
              ((C18933 + C18934 + C18935 + C18936) * C13225 +
               (C18932 + C18931 + C18930 + C18929) * C13224) *
                  C30885 * C30867 * C111 +
              ((C18936 + C18935 + C18934 + C18933) * C13224 +
               (C173 * C18918 + C172 * C18916 +
                (C113 * C812 + C31050 * C813) * C18919 +
                (C113 * C814 + C31050 * C815) * C18917) *
                   C13225) *
                  C30885 * C30867 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C18918 +
                 (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                 C9210 * C18917) *
                    C13224 +
                (C18921 + C18922 + C18923 + C18924) * C13225) *
                   C30885 * C31187 -
               ((C19083 + C19084 + C19085 + C19086) * C13225 +
                (C9566 * C18917 + C9565 * C18919 +
                 (C113 * C316 + C31050 * C334) * C18916 +
                 (C113 * C304 + C31050 * C317) * C18918) *
                    C13224) *
                   C30885 * C31175 +
               (((C113 * C305 + C31050 * C318) * C18918 +
                 (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                 C9870 * C18917) *
                    C13224 +
                (C19087 + C19088 + C19089 + C19090) * C13225) *
                   C30885 * C31150) *
                  C299 +
              (((C19086 + C19085 + C19084 + C19083) * C13224 +
                (C19091 + C19092 + C19093 + C19094) * C13225) *
                   C30885 * C31175 -
               ((C18925 + C18926 + C18927 + C18928) * C13225 +
                (C18924 + C18923 + C18922 + C18921) * C13224) *
                   C30885 * C31187 -
               ((C19095 + C19096 + C19097 + C19098) * C13225 +
                (C19090 + C19089 + C19088 + C19087) * C13224) *
                   C30885 * C31150) *
                  C300 +
              (((C18928 + C18927 + C18926 + C18925) * C13224 +
                (C18929 + C18930 + C18931 + C18932) * C13225) *
                   C30885 * C31187 -
               ((C1008 * C18917 + C1009 * C18919 + C376 * C18916 +
                 C375 * C18918) *
                    C13225 +
                (C19094 + C19093 + C19092 + C19091) * C13224) *
                   C30885 * C31175 +
               ((C19098 + C19097 + C19096 + C19095) * C13224 +
                (C378 * C18918 + C377 * C18916 +
                 (C113 * C1640 + C31050 * C1641) * C18919 +
                 (C113 * C1642 + C31050 * C1643) * C18917) *
                    C13225) *
                   C30885 * C31150) *
                  C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C31188 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C31177 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C30867 * C299 +
          (((C19248 + C19247 + C19246 + C19245) * C13224 +
            (C19253 + C19254 + C19255 + C19256) * C13225) *
               C31177 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C31188 -
           ((C19257 + C19258 + C19259 + C19260) * C13225 +
            (C19252 + C19251 + C19250 + C19249) * C13224) *
               C31153) *
              C30867 * C300 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C31188 -
           ((C580 * C18917 + C581 * C18919 + C579 * C18916 + C578 * C18918) *
                C13225 +
            (C19256 + C19255 + C19254 + C19253) * C13224) *
               C31177 +
           ((C19260 + C19259 + C19258 + C19257) * C13224 +
            (C581 * C18918 + C580 * C18916 +
             (C113 * C2352 + C31050 * C2353) * C18919 +
             (C113 * C2354 + C31050 * C2355) * C18917) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C1126 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C31184 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C1127 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C1126 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C1126 -
           ((C19391 + C19392 + C19393 + C19394) * C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C1127 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C1194 -
          ((C19083 + C19084 + C19085 + C19086) * C13225 +
           (C9566 * C18917 + C9565 * C18919 +
            (C113 * C316 + C31050 * C334) * C18916 +
            (C113 * C304 + C31050 * C317) * C18918) *
               C13224) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C18918 +
            (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
            C9870 * C18917) *
               C13224 +
           (C19087 + C19088 + C19089 + C19090) * C13225) *
              C30885 * C1196 -
          (((C113 * C1764 + C31050 * C1768) * C18917 +
            (C113 * C1759 + C31050 * C1763) * C18919 + C1489 * C18916 +
            C1490 * C18918) *
               C13225 +
           (C10232 * C18917 + C10231 * C18919 +
            (C113 * C1210 + C31050 * C1220) * C18916 +
            (C113 * C1202 + C31050 * C1211) * C18918) *
               C13224) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C18918 +
            (C113 * C1213 + C31050 * C1221) * C18916 +
            (C113 * C5663 + C31050 * C5668) * C18919 +
            (C113 * C5667 + C31050 * C5672) * C18917) *
               C13224 +
           ((C113 * C1204 + C31050 * C1214) * C18918 +
            (C113 * C1215 + C31050 * C1222) * C18916 +
            (C113 * C5922 + C31050 * C5923) * C18919 +
            (C113 * C5924 + C31050 * C5925) * C18917) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C31188 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C31177 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C1126 +
          (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
             C9568 * C18917) *
                C13224 +
            (C19723 + C19724 + C19725 + C19726) * C13225) *
               C31177 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C31188 -
           ((C10691 * C18917 + C10692 * C18919 + C2245 * C18916 +
             C2246 * C18918) *
                C13225 +
            (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
             C9567 * C18918) *
                C13224) *
               C31153) *
              C1127 +
          ((((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C31188 -
           ((C10124 * C18917 + C10123 * C18919 + C1655 * C18916 +
             C1656 * C18918) *
                C13225 +
            (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
             C9869 * C18918) *
                C13224) *
               C31177 +
           ((C9871 * C18918 + C9872 * C18916 + C9874 * C18919 +
             C9873 * C18917) *
                C13224 +
            (C10123 * C18918 + C10124 * C18916 +
             (C113 * C6570 + C31050 * C6571) * C18919 +
             (C113 * C6572 + C31050 * C6573) * C18917) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C1880 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C1881 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C30867 * C31184 +
          (((C19248 + C19247 + C19246 + C19245) * C13224 +
            (C19253 + C19254 + C19255 + C19256) * C13225) *
               C1881 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C1880 -
           ((C19257 + C19258 + C19259 + C19260) * C13225 +
            (C19252 + C19251 + C19250 + C19249) * C13224) *
               C31153) *
              C30867 * C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C1880 -
           ((C19525 + C19526 + C19527 + C19528) * C13225 +
            (C19256 + C19255 + C19254 + C19253) * C13224) *
               C1881 +
           ((C19260 + C19259 + C19258 + C19257) * C13224 +
            (C581 * C18918 + C580 * C18916 +
             (C113 * C2352 + C31050 * C2353) * C18919 +
             (C113 * C2354 + C31050 * C2355) * C18917) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C1880 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C1881 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C31187 +
          (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
             C9568 * C18917) *
                C13224 +
            (C19723 + C19724 + C19725 + C19726) * C13225) *
               C1881 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C1880 -
           ((C10691 * C18917 + C10692 * C18919 + C2245 * C18916 +
             C2246 * C18918) *
                C13225 +
            (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
             C9567 * C18918) *
                C13224) *
               C31153) *
              C31175 +
          ((((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C1880 -
           ((C20439 + C20440 + C20441 + C20442) * C13225 +
            (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
             C9869 * C18918) *
                C13224) *
               C1881 +
           ((C9871 * C18918 + C9872 * C18916 + C9874 * C18919 +
             C9873 * C18917) *
                C13224 +
            (C10123 * C18918 + C10124 * C18916 +
             (C113 * C6570 + C31050 * C6571) * C18919 +
             (C113 * C6572 + C31050 * C6573) * C18917) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C2055 -
          ((C19245 + C19246 + C19247 + C19248) * C13225 +
           (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 + C9209 * C18918) *
               C13224) *
              C2056 +
          ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 + C9213 * C18917) *
               C13224 +
           (C19249 + C19250 + C19251 + C19252) * C13225) *
              C2057 -
          ((C10799 * C18917 + C10800 * C18919 + C2367 * C18916 +
            C2368 * C18918) *
               C13225 +
           (C10534 * C18917 + C10533 * C18919 + C9213 * C18916 +
            C9214 * C18918) *
               C13224) *
              C2058 +
          ((C10533 * C18918 + C10534 * C18916 + C10536 * C18919 +
            C10535 * C18917) *
               C13224 +
           (C10800 * C18918 + C10799 * C18916 +
            (C113 * C10790 + C31050 * C10791) * C18919 +
            (C113 * C10792 + C31050 * C10793) * C18917) *
               C13225) *
              C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[88] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C1126 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C1127 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C31120 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C31150) *
                      C31105 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C1126 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C1127 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C31120) *
                       C31150) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31120 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C30867 * C695 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C30972 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C31120) *
                      C30867 * C696 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C31120 -
                   ((C19525 + C19526 + C19527 + C19528) * C13225 +
                    (C19256 + C19255 + C19254 + C19253) * C13224) *
                       C30972) *
                      C30867 * C697 +
                  (((C19528 + C19527 + C19526 + C19525) * C13224 +
                    (C823 * C18918 + C822 * C18916 +
                     (C113 * C514 + C31050 * C533) * C18919 +
                     (C113 * C534 + C31050 * C544) * C18917) *
                        C13225) *
                       C30972 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C31120) *
                      C30867 * C31154)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C2348 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C2349 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C2350 -
                   ((C21275 + C21276 + C21277 + C21278) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9213 * C18916 +
                     C9214 * C18918) *
                        C13224) *
                       C31166) *
                      C30867 * C31105 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C2349 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C2348 -
                   ((C19257 + C19258 + C19259 + C19260) * C13225 +
                    (C19252 + C19251 + C19250 + C19249) * C13224) *
                       C2350 +
                   ((C21278 + C21277 + C21276 + C21275) * C13224 +
                    (C2366 * C18918 + C2365 * C18916 +
                     (C113 * C2065 + C31050 * C2076) * C18919 +
                     (C113 * C2077 + C31050 * C2083) * C18917) *
                        C13225) *
                       C31166) *
                      C30867 * C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C31187 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C299 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C31175 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C31187 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C300 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C31187 -
           ((C1008 * C18917 + C1009 * C18919 + C376 * C18916 + C375 * C18918) *
                C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C31175 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C30867 * C108 -
          ((C18925 + C18926 + C18927 + C18928) * C13225 +
           (C18924 + C18923 + C18922 + C18921) * C13224) *
              C30885 * C30867 * C109 +
          ((C18928 + C18927 + C18926 + C18925) * C13224 +
           (C18929 + C18930 + C18931 + C18932) * C13225) *
              C30885 * C30867 * C110 -
          ((C18933 + C18934 + C18935 + C18936) * C13225 +
           (C18932 + C18931 + C18930 + C18929) * C13224) *
              C30885 * C30867 * C111 +
          ((C18936 + C18935 + C18934 + C18933) * C13224 +
           (C173 * C18918 + C172 * C18916 +
            (C113 * C812 + C31050 * C813) * C18919 +
            (C113 * C814 + C31050 * C815) * C18917) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C1126 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C31184 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C1127 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C1126 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C1126 -
           ((C19391 + C19392 + C19393 + C19394) * C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C1127 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C1194 -
          ((C19083 + C19084 + C19085 + C19086) * C13225 +
           (C9566 * C18917 + C9565 * C18919 +
            (C113 * C316 + C31050 * C334) * C18916 +
            (C113 * C304 + C31050 * C317) * C18918) *
               C13224) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C18918 +
            (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
            C9870 * C18917) *
               C13224 +
           (C19087 + C19088 + C19089 + C19090) * C13225) *
              C30885 * C1196 -
          (((C113 * C1764 + C31050 * C1768) * C18917 +
            (C113 * C1759 + C31050 * C1763) * C18919 + C1489 * C18916 +
            C1490 * C18918) *
               C13225 +
           (C10232 * C18917 + C10231 * C18919 +
            (C113 * C1210 + C31050 * C1220) * C18916 +
            (C113 * C1202 + C31050 * C1211) * C18918) *
               C13224) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C18918 +
            (C113 * C1213 + C31050 * C1221) * C18916 +
            (C113 * C5663 + C31050 * C5668) * C18919 +
            (C113 * C5667 + C31050 * C5672) * C18917) *
               C13224 +
           ((C113 * C1204 + C31050 * C1214) * C18918 +
            (C113 * C1215 + C31050 * C1222) * C18916 +
            (C113 * C5922 + C31050 * C5923) * C18919 +
            (C113 * C5924 + C31050 * C5925) * C18917) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C1880 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C1881 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C30867 * C31184 +
          (((C19248 + C19247 + C19246 + C19245) * C13224 +
            (C19253 + C19254 + C19255 + C19256) * C13225) *
               C1881 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C1880 -
           ((C19257 + C19258 + C19259 + C19260) * C13225 +
            (C19252 + C19251 + C19250 + C19249) * C13224) *
               C31153) *
              C30867 * C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C1880 -
           ((C19525 + C19526 + C19527 + C19528) * C13225 +
            (C19256 + C19255 + C19254 + C19253) * C13224) *
               C1881 +
           ((C19260 + C19259 + C19258 + C19257) * C13224 +
            (C581 * C18918 + C580 * C18916 +
             (C113 * C2352 + C31050 * C2353) * C18919 +
             (C113 * C2354 + C31050 * C2355) * C18917) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C1880 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C1881 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C31187 +
          (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
             C9568 * C18917) *
                C13224 +
            (C19723 + C19724 + C19725 + C19726) * C13225) *
               C1881 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C1880 -
           ((C10691 * C18917 + C10692 * C18919 + C2245 * C18916 +
             C2246 * C18918) *
                C13225 +
            (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
             C9567 * C18918) *
                C13224) *
               C31153) *
              C31175 +
          ((((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C1880 -
           ((C20439 + C20440 + C20441 + C20442) * C13225 +
            (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
             C9869 * C18918) *
                C13224) *
               C1881 +
           ((C9871 * C18918 + C9872 * C18916 + C9874 * C18919 +
             C9873 * C18917) *
                C13224 +
            (C10123 * C18918 + C10124 * C18916 +
             (C113 * C6570 + C31050 * C6571) * C18919 +
             (C113 * C6572 + C31050 * C6573) * C18917) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[90] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C31119 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C30930) *
                      C30844 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C31119 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C30853 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C3342 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C31119 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C3342) *
                       C30930) *
                      C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[91] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C30968 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30975 +
                    ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                      C9213 * C18917) *
                         C13224 +
                     (C19249 + C19250 + C19251 + C19252) * C13225) *
                        C3850) *
                       C31119 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30975 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C30968 -
                    ((C21141 + C21142 + C21143 + C21144) * C13225 +
                     (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
                      C9567 * C18918) *
                         C13224) *
                        C3850) *
                       C30930) *
                      C2688 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30975 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C30968 -
                    ((C19257 + C19258 + C19259 + C19260) * C13225 +
                     (C19252 + C19251 + C19250 + C19249) * C13224) *
                        C3850) *
                       C31119 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C30968 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30975 +
                    ((C21144 + C21143 + C21142 + C21141) * C13224 +
                     (C2244 * C18918 + C2243 * C18916 +
                      (C113 * C2472 + C31050 * C2477) * C18919 +
                      (C113 * C2478 + C31050 * C2481) * C18917) *
                         C13225) *
                        C3850) *
                       C30930) *
                      C30850)) /
                (p * q * std::sqrt(p + q));
    d2ee[92] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C31187 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C31175 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C3342 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C31150) *
                      C2688 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C31187 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C31175 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C3342) *
                       C31150) *
                      C30850)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C3342 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C30867 * C31193 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C30972 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C3342) *
                      C30867 * C31186 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C3342 -
                   ((C19525 + C19526 + C19527 + C19528) * C13225 +
                    (C19256 + C19255 + C19254 + C19253) * C13224) *
                       C30972) *
                      C30867 * C31173 +
                  (((C19528 + C19527 + C19526 + C19525) * C13224 +
                    (C823 * C18918 + C822 * C18916 +
                     (C113 * C514 + C31050 * C533) * C18919 +
                     (C113 * C534 + C31050 * C544) * C18917) *
                        C13225) *
                       C30972 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C3342) *
                      C30867 * C31154)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31195 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C31192 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C31183 -
                   ((C21275 + C21276 + C21277 + C21278) * C13225 +
                    (C10534 * C18917 + C10533 * C18919 + C9213 * C18916 +
                     C9214 * C18918) *
                        C13224) *
                       C31166) *
                      C30867 * C2688 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C31192 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C31195 -
                   ((C19257 + C19258 + C19259 + C19260) * C13225 +
                    (C19252 + C19251 + C19250 + C19249) * C13224) *
                       C31183 +
                   ((C21278 + C21277 + C21276 + C21275) * C13224 +
                    (C2366 * C18918 + C2365 * C18916 +
                     (C113 * C2065 + C31050 * C2076) * C18919 +
                     (C113 * C2077 + C31050 * C2083) * C18917) *
                        C13225) *
                       C31166) *
                      C30867 * C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[93] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30968 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30975 +
                   ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
                     C9213 * C18917) *
                        C13224 +
                    (C19249 + C19250 + C19251 + C19252) * C13225) *
                       C3850) *
                      C30867 * C30844 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C30975 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30968 -
                   ((C19257 + C19258 + C19259 + C19260) * C13225 +
                    (C19252 + C19251 + C19250 + C19249) * C13224) *
                       C3850) *
                      C30867 * C30853 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30968 -
                   ((C19525 + C19526 + C19527 + C19528) * C13225 +
                    (C19256 + C19255 + C19254 + C19253) * C13224) *
                       C30975 +
                   ((C19260 + C19259 + C19258 + C19257) * C13224 +
                    (C581 * C18918 + C580 * C18916 +
                     (C113 * C2352 + C31050 * C2353) * C18919 +
                     (C113 * C2354 + C31050 * C2355) * C18917) *
                        C13225) *
                       C3850) *
                      C30867 * C2951)) /
                (p * q * std::sqrt(p + q));
    d2ee[94] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C3342 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C30867 * C31193 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C30972 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C3342) *
                      C30867 * C31186 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C3342 -
                   ((C19525 + C19526 + C19527 + C19528) * C13225 +
                    (C19256 + C19255 + C19254 + C19253) * C13224) *
                       C30972) *
                      C30867 * C31173 +
                  (((C19528 + C19527 + C19526 + C19525) * C13224 +
                    (C823 * C18918 + C822 * C18916 +
                     (C113 * C514 + C31050 * C533) * C18919 +
                     (C113 * C534 + C31050 * C544) * C18917) *
                        C13225) *
                       C30972 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C3342) *
                      C30867 * C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C3342 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C31187 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C3342) *
                       C31175 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C3342 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C31150) *
                      C2688 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C3342) *
                       C31187 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C3342 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C31175 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C3342) *
                       C31150) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[95] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C31119 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C30930) *
                      C695 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C30930 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C31119) *
                      C696 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C30885 * C31119 -
                   ((C19391 + C19392 + C19393 + C19394) * C13225 +
                    (C19094 + C19093 + C19092 + C19091) * C13224) *
                       C30885 * C30930) *
                      C697 +
                  (((C19394 + C19393 + C19392 + C19391) * C13224 +
                    (C710 * C18918 + C709 * C18916 +
                     (C113 * C975 + C31050 * C984) * C18919 +
                     (C113 * C985 + C31050 * C990) * C18917) *
                        C13225) *
                       C30885 * C30930 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C30885 * C31119) *
                      C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C30885 * C1468 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C30885 * C1469 +
                   (((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C30885 * C1470 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C30885 * C31160) *
                      C31105 +
                  (((C19086 + C19085 + C19084 + C19083) * C13224 +
                    (C19091 + C19092 + C19093 + C19094) * C13225) *
                       C30885 * C1469 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C30885 * C1468 -
                   ((C19095 + C19096 + C19097 + C19098) * C13225 +
                    (C19090 + C19089 + C19088 + C19087) * C13224) *
                       C30885 * C1470 +
                   ((C20240 + C20239 + C20244 + C20243) * C13224 +
                    (C1488 * C18918 + C1487 * C18916 +
                     (C113 * C1760 + C31050 * C1765) * C18919 +
                     (C113 * C1766 + C31050 * C1769) * C18917) *
                        C13225) *
                       C30885 * C31160) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[96] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C31119 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C30930) *
                      C299 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C31119 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C30930) *
                      C300 +
                  ((((C18928 + C18927 + C18926 + C18925) * C13224 +
                     (C18929 + C18930 + C18931 + C18932) * C13225) *
                        C31120 -
                    ((C19525 + C19526 + C19527 + C19528) * C13225 +
                     (C19256 + C19255 + C19254 + C19253) * C13224) *
                        C30972) *
                       C31119 +
                   (((C19730 + C19729 + C19728 + C19727) * C13224 +
                     (C1009 * C18918 + C1008 * C18916 +
                      (C113 * C2230 + C31050 * C2231) * C18919 +
                      (C113 * C2232 + C31050 * C2233) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19391 + C19392 + C19393 + C19394) * C13225 +
                     (C19094 + C19093 + C19092 + C19091) * C13224) *
                        C31120) *
                       C30930) *
                      C31144)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31120 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C1468 +
                  (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                     C9568 * C18917) *
                        C13224 +
                    (C19723 + C19724 + C19725 + C19726) * C13225) *
                       C30972 -
                   ((C19083 + C19084 + C19085 + C19086) * C13225 +
                    (C9566 * C18917 + C9565 * C18919 +
                     (C113 * C316 + C31050 * C334) * C18916 +
                     (C113 * C304 + C31050 * C317) * C18918) *
                        C13224) *
                       C31120) *
                      C1469 +
                  ((((C113 * C305 + C31050 * C318) * C18918 +
                     (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                     C9870 * C18917) *
                        C13224 +
                    (C19087 + C19088 + C19089 + C19090) * C13225) *
                       C31120 -
                   ((C20439 + C20440 + C20441 + C20442) * C13225 +
                    (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                     C9869 * C18918) *
                        C13224) *
                       C30972) *
                      C1470 +
                  (((C10231 * C18918 + C10232 * C18916 + C10233 * C18919 +
                     C10234 * C18917) *
                        C13224 +
                    (C20242 * C18918 + C20241 * C18916 +
                     (C113 * C6468 + C31050 * C6469) * C18919 +
                     (C113 * C6470 + C31050 * C6471) * C18917) *
                        C13225) *
                       C30972 -
                   ((C20243 + C20244 + C20239 + C20240) * C13225 +
                    (C10232 * C18917 + C10231 * C18919 +
                     (C113 * C1210 + C31050 * C1220) * C18916 +
                     (C113 * C1202 + C31050 * C1211) * C18918) *
                        C13224) *
                       C31120) *
                      C31160) *
                 C30839) /
                    (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C31187 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C299 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C31175 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C31187 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C300 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C31187 -
           ((C1008 * C18917 + C1009 * C18919 + C376 * C18916 + C375 * C18918) *
                C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C31175 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C30867 * C108 -
          ((C18925 + C18926 + C18927 + C18928) * C13225 +
           (C18924 + C18923 + C18922 + C18921) * C13224) *
              C30885 * C30867 * C109 +
          ((C18928 + C18927 + C18926 + C18925) * C13224 +
           (C18929 + C18930 + C18931 + C18932) * C13225) *
              C30885 * C30867 * C110 -
          ((C18933 + C18934 + C18935 + C18936) * C13225 +
           (C18932 + C18931 + C18930 + C18929) * C13224) *
              C30885 * C30867 * C111 +
          ((C18936 + C18935 + C18934 + C18933) * C13224 +
           (C173 * C18918 + C172 * C18916 +
            (C113 * C812 + C31050 * C813) * C18919 +
            (C113 * C814 + C31050 * C815) * C18917) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C31188 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C31177 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C30867 * C299 +
          (((C19248 + C19247 + C19246 + C19245) * C13224 +
            (C19253 + C19254 + C19255 + C19256) * C13225) *
               C31177 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C31188 -
           ((C19257 + C19258 + C19259 + C19260) * C13225 +
            (C19252 + C19251 + C19250 + C19249) * C13224) *
               C31153) *
              C30867 * C300 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C31188 -
           ((C580 * C18917 + C581 * C18919 + C579 * C18916 + C578 * C18918) *
                C13225 +
            (C19256 + C19255 + C19254 + C19253) * C13224) *
               C31177 +
           ((C19260 + C19259 + C19258 + C19257) * C13224 +
            (C581 * C18918 + C580 * C18916 +
             (C113 * C2352 + C31050 * C2353) * C18919 +
             (C113 * C2354 + C31050 * C2355) * C18917) *
                C13225) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C1126 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C31184 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C1127 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C1126 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C1126 -
           ((C19391 + C19392 + C19393 + C19394) * C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C1127 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C1194 -
          ((C19083 + C19084 + C19085 + C19086) * C13225 +
           (C9566 * C18917 + C9565 * C18919 +
            (C113 * C316 + C31050 * C334) * C18916 +
            (C113 * C304 + C31050 * C317) * C18918) *
               C13224) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C18918 +
            (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
            C9870 * C18917) *
               C13224 +
           (C19087 + C19088 + C19089 + C19090) * C13225) *
              C30885 * C1196 -
          (((C113 * C1764 + C31050 * C1768) * C18917 +
            (C113 * C1759 + C31050 * C1763) * C18919 + C1489 * C18916 +
            C1490 * C18918) *
               C13225 +
           (C10232 * C18917 + C10231 * C18919 +
            (C113 * C1210 + C31050 * C1220) * C18916 +
            (C113 * C1202 + C31050 * C1211) * C18918) *
               C13224) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C18918 +
            (C113 * C1213 + C31050 * C1221) * C18916 +
            (C113 * C5663 + C31050 * C5668) * C18919 +
            (C113 * C5667 + C31050 * C5672) * C18917) *
               C13224 +
           ((C113 * C1204 + C31050 * C1214) * C18918 +
            (C113 * C1215 + C31050 * C1222) * C18916 +
            (C113 * C5922 + C31050 * C5923) * C18919 +
            (C113 * C5924 + C31050 * C5925) * C18917) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C31188 -
           ((C19245 + C19246 + C19247 + C19248) * C13225 +
            (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
             C9209 * C18918) *
                C13224) *
               C31177 +
           ((C9211 * C18918 + C9212 * C18916 + C9214 * C18919 +
             C9213 * C18917) *
                C13224 +
            (C19249 + C19250 + C19251 + C19252) * C13225) *
               C31153) *
              C1126 +
          (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
             C9568 * C18917) *
                C13224 +
            (C19723 + C19724 + C19725 + C19726) * C13225) *
               C31177 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C31188 -
           ((C10691 * C18917 + C10692 * C18919 + C2245 * C18916 +
             C2246 * C18918) *
                C13225 +
            (C9868 * C18917 + C9867 * C18919 + C9568 * C18916 +
             C9567 * C18918) *
                C13224) *
               C31153) *
              C1127 +
          ((((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C31188 -
           ((C10124 * C18917 + C10123 * C18919 + C1655 * C18916 +
             C1656 * C18918) *
                C13225 +
            (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
             C9869 * C18918) *
                C13224) *
               C31177 +
           ((C9871 * C18918 + C9872 * C18916 + C9874 * C18919 +
             C9873 * C18917) *
                C13224 +
            (C10123 * C18918 + C10124 * C18916 +
             (C113 * C6570 + C31050 * C6571) * C18919 +
             (C113 * C6572 + C31050 * C6573) * C18917) *
                C13225) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[98] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C115 + C31050 * C122) * C18918 +
                     (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                     C9210 * C18917) *
                        C13224 +
                    (C18921 + C18922 + C18923 + C18924) * C13225) *
                       C31120 -
                   ((C19245 + C19246 + C19247 + C19248) * C13225 +
                    (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                     C9209 * C18918) *
                        C13224) *
                       C30972) *
                      C30867 * C695 +
                  (((C19248 + C19247 + C19246 + C19245) * C13224 +
                    (C19253 + C19254 + C19255 + C19256) * C13225) *
                       C30972 -
                   ((C18925 + C18926 + C18927 + C18928) * C13225 +
                    (C18924 + C18923 + C18922 + C18921) * C13224) *
                       C31120) *
                      C30867 * C696 +
                  (((C18928 + C18927 + C18926 + C18925) * C13224 +
                    (C18929 + C18930 + C18931 + C18932) * C13225) *
                       C31120 -
                   ((C19525 + C19526 + C19527 + C19528) * C13225 +
                    (C19256 + C19255 + C19254 + C19253) * C13224) *
                       C30972) *
                      C30867 * C697 +
                  (((C19528 + C19527 + C19526 + C19525) * C13224 +
                    (C823 * C18918 + C822 * C18916 +
                     (C113 * C514 + C31050 * C533) * C18919 +
                     (C113 * C534 + C31050 * C544) * C18917) *
                        C13225) *
                       C30972 -
                   ((C18933 + C18934 + C18935 + C18936) * C13225 +
                    (C18932 + C18931 + C18930 + C18929) * C13224) *
                       C31120) *
                      C30867 * C31154)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C113 * C115 + C31050 * C122) * C18918 +
                      (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
                      C9210 * C18917) *
                         C13224 +
                     (C18921 + C18922 + C18923 + C18924) * C13225) *
                        C31120 -
                    ((C19245 + C19246 + C19247 + C19248) * C13225 +
                     (C9212 * C18917 + C9211 * C18919 + C9210 * C18916 +
                      C9209 * C18918) *
                         C13224) *
                        C30972) *
                       C1126 +
                   (((C9565 * C18918 + C9566 * C18916 + C9567 * C18919 +
                      C9568 * C18917) *
                         C13224 +
                     (C19723 + C19724 + C19725 + C19726) * C13225) *
                        C30972 -
                    ((C19083 + C19084 + C19085 + C19086) * C13225 +
                     (C9566 * C18917 + C9565 * C18919 +
                      (C113 * C316 + C31050 * C334) * C18916 +
                      (C113 * C304 + C31050 * C317) * C18918) *
                         C13224) *
                        C31120) *
                       C1127 +
                   ((((C113 * C305 + C31050 * C318) * C18918 +
                      (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
                      C9870 * C18917) *
                         C13224 +
                     (C19087 + C19088 + C19089 + C19090) * C13225) *
                        C31120 -
                    ((C20439 + C20440 + C20441 + C20442) * C13225 +
                     (C9872 * C18917 + C9871 * C18919 + C9870 * C18916 +
                      C9869 * C18918) *
                         C13224) *
                        C30972) *
                       C31150) *
                      C31105 +
                  ((((C19248 + C19247 + C19246 + C19245) * C13224 +
                     (C19253 + C19254 + C19255 + C19256) * C13225) *
                        C30972 -
                    ((C18925 + C18926 + C18927 + C18928) * C13225 +
                     (C18924 + C18923 + C18922 + C18921) * C13224) *
                        C31120) *
                       C1126 +
                   (((C19086 + C19085 + C19084 + C19083) * C13224 +
                     (C19091 + C19092 + C19093 + C19094) * C13225) *
                        C31120 -
                    ((C19727 + C19728 + C19729 + C19730) * C13225 +
                     (C19726 + C19725 + C19724 + C19723) * C13224) *
                        C30972) *
                       C1127 +
                   (((C20442 + C20441 + C20440 + C20439) * C13224 +
                     (C1654 * C18918 + C1653 * C18916 +
                      (C113 * C1342 + C31050 * C1359) * C18919 +
                      (C113 * C1360 + C31050 * C1369) * C18917) *
                         C13225) *
                        C30972 -
                    ((C19095 + C19096 + C19097 + C19098) * C13225 +
                     (C19090 + C19089 + C19088 + C19087) * C13224) *
                        C31120) *
                       C31150) *
                      C30850)) /
                    (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C30867 * C108 -
          ((C18925 + C18926 + C18927 + C18928) * C13225 +
           (C18924 + C18923 + C18922 + C18921) * C13224) *
              C30885 * C30867 * C109 +
          ((C18928 + C18927 + C18926 + C18925) * C13224 +
           (C18929 + C18930 + C18931 + C18932) * C13225) *
              C30885 * C30867 * C110 -
          ((C18933 + C18934 + C18935 + C18936) * C13225 +
           (C18932 + C18931 + C18930 + C18929) * C13224) *
              C30885 * C30867 * C111 +
          ((C18936 + C18935 + C18934 + C18933) * C13224 +
           (C173 * C18918 + C172 * C18916 +
            (C113 * C812 + C31050 * C813) * C18919 +
            (C113 * C814 + C31050 * C815) * C18917) *
               C13225) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C31187 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C299 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C31175 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C31187 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C300 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C31187 -
           ((C1008 * C18917 + C1009 * C18919 + C376 * C18916 + C375 * C18918) *
                C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C31175 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C18918 +
             (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
             C9210 * C18917) *
                C13224 +
            (C18921 + C18922 + C18923 + C18924) * C13225) *
               C30885 * C1126 -
           ((C19083 + C19084 + C19085 + C19086) * C13225 +
            (C9566 * C18917 + C9565 * C18919 +
             (C113 * C316 + C31050 * C334) * C18916 +
             (C113 * C304 + C31050 * C317) * C18918) *
                C13224) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C18918 +
             (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
             C9870 * C18917) *
                C13224 +
            (C19087 + C19088 + C19089 + C19090) * C13225) *
               C30885 * C31150) *
              C31184 +
          (((C19086 + C19085 + C19084 + C19083) * C13224 +
            (C19091 + C19092 + C19093 + C19094) * C13225) *
               C30885 * C1127 -
           ((C18925 + C18926 + C18927 + C18928) * C13225 +
            (C18924 + C18923 + C18922 + C18921) * C13224) *
               C30885 * C1126 -
           ((C19095 + C19096 + C19097 + C19098) * C13225 +
            (C19090 + C19089 + C19088 + C19087) * C13224) *
               C30885 * C31150) *
              C31171 +
          (((C18928 + C18927 + C18926 + C18925) * C13224 +
            (C18929 + C18930 + C18931 + C18932) * C13225) *
               C30885 * C1126 -
           ((C19391 + C19392 + C19393 + C19394) * C13225 +
            (C19094 + C19093 + C19092 + C19091) * C13224) *
               C30885 * C1127 +
           ((C19098 + C19097 + C19096 + C19095) * C13224 +
            (C378 * C18918 + C377 * C18916 +
             (C113 * C1640 + C31050 * C1641) * C18919 +
             (C113 * C1642 + C31050 * C1643) * C18917) *
                C13225) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C18918 +
            (C113 * C123 + C31050 * C136) * C18916 + C9209 * C18919 +
            C9210 * C18917) *
               C13224 +
           (C18921 + C18922 + C18923 + C18924) * C13225) *
              C30885 * C1194 -
          ((C19083 + C19084 + C19085 + C19086) * C13225 +
           (C9566 * C18917 + C9565 * C18919 +
            (C113 * C316 + C31050 * C334) * C18916 +
            (C113 * C304 + C31050 * C317) * C18918) *
               C13224) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C18918 +
            (C113 * C319 + C31050 * C335) * C18916 + C9869 * C18919 +
            C9870 * C18917) *
               C13224 +
           (C19087 + C19088 + C19089 + C19090) * C13225) *
              C30885 * C1196 -
          (((C113 * C1764 + C31050 * C1768) * C18917 +
            (C113 * C1759 + C31050 * C1763) * C18919 + C1489 * C18916 +
            C1490 * C18918) *
               C13225 +
           (C10232 * C18917 + C10231 * C18919 +
            (C113 * C1210 + C31050 * C1220) * C18916 +
            (C113 * C1202 + C31050 * C1211) * C18918) *
               C13224) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C18918 +
            (C113 * C1213 + C31050 * C1221) * C18916 +
            (C113 * C5663 + C31050 * C5668) * C18919 +
            (C113 * C5667 + C31050 * C5672) * C18917) *
               C13224 +
           ((C113 * C1204 + C31050 * C1214) * C18918 +
            (C113 * C1215 + C31050 * C1222) * C18916 +
            (C113 * C5922 + C31050 * C5923) * C18919 +
            (C113 * C5924 + C31050 * C5925) * C18917) *
               C13225) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C30926 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30933 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C2948) *
              C30844 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30933 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C30926 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C2948) *
              C30853 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C30926 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30933 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C2948) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C30926 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30933 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C2948) *
              C30844 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30933 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C30926 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C2948) *
              C30853 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C30926 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30933 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C2948) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C30926 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30933 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31120 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C2948) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C30926 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30933 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31120) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C30926 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30933 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C2948) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C30926 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30933 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31194 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31190 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31180 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C30885 * C31160) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C31190 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31194 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31180 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31050 * C1475) * C114 +
             (C113 * C1476 + C31050 * C1477) * C31063) *
                C105) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30930) *
              C31193 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30930 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C2580) *
              C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30930) *
              C31173 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31050 * C700) * C114 +
             (C113 * C701 + C31050 * C702) * C31063) *
                C105) *
               C30885 * C30930 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31188 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C31177 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31153) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C31177 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31188 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C31153) *
               C30930) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C31177 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31188 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31153) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31188 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C31177 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31190 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31180 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31190 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31180 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31188 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C31177 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C31153) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C31177 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31188 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C31153) *
               C30930) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C31177 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31188 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C31153) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31188 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C31177 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30930) *
              C30844 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C30853 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31120) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C30844 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C2580 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30930) *
              C31193 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30930 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C2580) *
              C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C2580 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30930) *
              C31173 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31050 * C700) * C114 +
             (C113 * C701 + C31050 * C702) * C31063) *
                C105) *
               C30885 * C30930 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31194 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31190 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31180 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C30885 * C31160) *
              C2688 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C31190 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31194 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31180 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31050 * C1475) * C114 +
             (C113 * C1476 + C31050 * C1477) * C31063) *
                C105) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C31193 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C2580) *
              C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C2580 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C31173 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C2580) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31190 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31180 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C2688 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31190 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31194 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31180 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C30926 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30933 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C2948) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C30926 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30933 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C30926 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30933 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C2948) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C30926 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30933 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C2948) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C113 * C115 + C31050 * C122) * C114 +
                      (C113 * C123 + C31050 * C136) * C31063) *
                         C103 +
                     (C174 + C175) * C104 + C184 * C105) *
                        C30968 -
                    (C594 * C105 + (C584 + C585) * C104 +
                     ((C113 * C519 + C31050 * C537) * C31063 +
                      (C113 * C507 + C31050 * C520) * C114) *
                         C103) *
                        C30975 +
                    (((C113 * C508 + C31050 * C521) * C114 +
                      (C113 * C522 + C31050 * C538) * C31063) *
                         C103 +
                     (C586 + C587) * C104 + C595 * C105) *
                        C3850) *
                       C30926 +
                   ((((C113 * C971 + C31050 * C976) * C114 +
                      (C113 * C977 + C31050 * C986) * C31063) *
                         C103 +
                     (C1010 + C1011) * C104 + C1016 * C105) *
                        C30975 -
                    (C391 * C105 + (C381 + C382) * C104 +
                     ((C113 * C316 + C31050 * C334) * C31063 +
                      (C113 * C304 + C31050 * C317) * C114) *
                         C103) *
                        C30968 -
                    ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
                     ((C113 * C1347 + C31050 * C1363) * C31063 +
                      (C113 * C1336 + C31050 * C1348) * C114) *
                         C103) *
                        C3850) *
                       C30933 +
                   ((((C113 * C305 + C31050 * C318) * C114 +
                      (C113 * C319 + C31050 * C335) * C31063) *
                         C103 +
                     (C383 + C384) * C104 + C392 * C105) *
                        C30968 -
                    ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
                     ((C113 * C1353 + C31050 * C1366) * C31063 +
                      (C113 * C1339 + C31050 * C1354) * C114) *
                         C103) *
                        C30975 +
                    (((C113 * C1340 + C31050 * C1355) * C114 +
                      (C113 * C1356 + C31050 * C1367) * C31063) *
                         C103 +
                     ((C113 * C1341 + C31050 * C1357) * C114 +
                      (C113 * C1358 + C31050 * C1368) * C31063) *
                         C104 +
                     ((C113 * C1342 + C31050 * C1359) * C114 +
                      (C113 * C1360 + C31050 * C1369) * C31063) *
                         C105) *
                        C3850) *
                       C2948) *
                  C30839) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C4807 * C115 + C4803 * C122 + C4808 * C304 +
                      C4804 * C317 + C4809 * C305 + C4805 * C318) *
                         C114 +
                     (C4807 * C123 + C4803 * C136 + C4808 * C316 +
                      C4804 * C334 + C4809 * C319 + C4805 * C335) *
                         C31063) *
                        C30817 * C30968 -
                    ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 +
                      C4804 * C986 + C4807 * C519 + C4803 * C537) *
                         C31063 +
                     (C4809 * C1339 + C4805 * C1354 + C4808 * C971 +
                      C4804 * C976 + C4807 * C507 + C4803 * C520) *
                         C114) *
                        C30817 * C30975 +
                    ((C4807 * C508 + C4803 * C521 + C4808 * C1336 +
                      C4804 * C1348 + C4809 * C1340 + C4805 * C1355) *
                         C114 +
                     (C4807 * C522 + C4803 * C538 + C4808 * C1347 +
                      C4804 * C1363 + C4809 * C1356 + C4805 * C1367) *
                         C31063) *
                        C30817 * C3850) *
                       C30926 +
                   (((C4807 * C971 + C4803 * C976 + C4808 * C1339 +
                      C4804 * C1354 + C4809 * C1758 + C4805 * C1761) *
                         C114 +
                     (C4807 * C977 + C4803 * C986 + C4808 * C1353 +
                      C4804 * C1366 + C4809 * C1762 + C4805 * C1767) *
                         C31063) *
                        C30817 * C30975 -
                    ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 +
                      C4804 * C335 + C4807 * C316 + C4803 * C334) *
                         C31063 +
                     (C4809 * C1202 + C4805 * C1211 + C4808 * C305 +
                      C4804 * C318 + C4807 * C304 + C4803 * C317) *
                         C114) *
                        C30817 * C30968 -
                    ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 +
                      C4804 * C1367 + C4807 * C1347 + C4803 * C1363) *
                         C31063 +
                     (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 +
                      C4804 * C1355 + C4807 * C1336 + C4803 * C1348) *
                         C114) *
                        C30817 * C3850) *
                       C30933 +
                   (((C4807 * C305 + C4803 * C318 + C4808 * C1202 +
                      C4804 * C1211 + C4809 * C1203 + C4805 * C1212) *
                         C114 +
                     (C4807 * C319 + C4803 * C335 + C4808 * C1210 +
                      C4804 * C1220 + C4809 * C1213 + C4805 * C1221) *
                         C31063) *
                        C30817 * C30968 -
                    ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 +
                      C4804 * C1767 + C4807 * C1353 + C4803 * C1366) *
                         C31063 +
                     (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 +
                      C4804 * C1761 + C4807 * C1339 + C4803 * C1354) *
                         C114) *
                        C30817 * C30975 +
                    ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 +
                      C4804 * C5666 + C4809 * C5664 + C4805 * C5669) *
                         C114 +
                     (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 +
                      C4804 * C5671 + C4809 * C5670 + C4805 * C5673) *
                         C31063) *
                        C30817 * C3850) *
                       C2948) *
                  C30839) /
                     (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C31194 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C3342) *
              C31190 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C31180 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30930) *
              C31184 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C31171 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31195 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31192 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31183 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C2580 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31192 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31195 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31183 +
           (((C113 * C2470 + C31050 * C2473) * C114 +
             (C113 * C2474 + C31050 * C2479) * C31063) *
                C103 +
            ((C113 * C2471 + C31050 * C2475) * C114 +
             (C113 * C2476 + C31050 * C2480) * C31063) *
                C104 +
            ((C113 * C2472 + C31050 * C2477) * C114 +
             (C113 * C2478 + C31050 * C2481) * C31063) *
                C105) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C31194 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C3342) *
              C31190 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C31180 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31195 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31192 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31183 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C2580 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31192 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31195 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31183 +
           ((C4807 * C2470 + C4803 * C2473 + C4808 * C6310 + C4804 * C6314 +
             C4809 * C6672 + C4805 * C6673) *
                C114 +
            (C4807 * C2474 + C4803 * C2479 + C4808 * C6313 + C4804 * C6319 +
             C4809 * C6674 + C4805 * C6675) *
                C31063) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30968 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30975 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30975 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C30968 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C3850) *
               C30930) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30975 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30968 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30968 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30975 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C3850) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C3850) *
               C30930) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C3850) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C2580 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30930) *
              C31184 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C2580 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C31171 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C2580 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C31194 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C3342) *
              C31190 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C3342 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C31180 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31184 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C2580 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C31171 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C2580 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C31194 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C3342) *
              C31190 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C31180 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C3342) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1468 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1469 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C1470 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C30885 * C31160) *
              C31105 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1469 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1468 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C1470 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31050 * C1475) * C114 +
             (C113 * C1476 + C31050 * C1477) * C31063) *
                C105) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31119 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30930) *
              C695 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30930 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31119) *
              C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31119 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30930) *
              C697 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31050 * C700) * C114 +
             (C113 * C701 + C31050 * C702) * C31063) *
                C105) *
               C30885 * C30930 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C1880 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C1881 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C31153) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C1881 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C1880 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C31153) *
               C30930) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C1881 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C1880 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C31153) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C1880 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C1881 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C695 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31119) *
              C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C697 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1469 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C1470 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C31105 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1469 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C1470 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C1880 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C1881 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C31153) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C1881 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C1880 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C31153) *
               C30930) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C1881 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C1880 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C31153) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C1880 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C1881 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C31153) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C1468 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31120) *
              C1469 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31120 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C1470 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30930) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C31119 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C31119 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C2349 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C2348 -
           ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C2350 +
           (((C113 * C2470 + C31050 * C2473) * C114 +
             (C113 * C2474 + C31050 * C2479) * C31063) *
                C103 +
            ((C113 * C2471 + C31050 * C2475) * C114 +
             (C113 * C2476 + C31050 * C2480) * C31063) *
                C104 +
            ((C113 * C2472 + C31050 * C2477) * C114 +
             (C113 * C2478 + C31050 * C2481) * C31063) *
                C105) *
               C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C1468 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31120) *
              C1469 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C1470 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C2348 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C2349 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C2350 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C31119 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C2349 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C2348 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C2350 +
           ((C4807 * C2470 + C4803 * C2473 + C4808 * C6310 + C4804 * C6314 +
             C4809 * C6672 + C4805 * C6673) *
                C114 +
            (C4807 * C2474 + C4803 * C2479 + C4808 * C6313 + C4804 * C6319 +
             C4809 * C6674 + C4805 * C6675) *
                C31063) *
               C30817 * C31166) *
              C30930) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C115 + C31050 * C122) * C114 +
                (C113 * C123 + C31050 * C136) * C31063) *
                   C103 +
               (C174 + C175) * C104 + C184 * C105) *
                  C30885 * C30867 * C108 -
              (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                  C30885 * C30867 * C109 +
              (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                  C30867 * C110 -
              ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
                  C30885 * C30867 * C111 +
              (C186 * C103 + (C183 + C182) * C104 +
               ((C113 * C121 + C31050 * C134) * C114 +
                (C113 * C135 + C31050 * C142) * C31063) *
                   C105) *
                  C30885 * C30867 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C115 + C31050 * C122) * C114 +
                 (C113 * C123 + C31050 * C136) * C31063) *
                    C103 +
                (C174 + C175) * C104 + C184 * C105) *
                   C30885 * C31187 -
               (C391 * C105 + (C381 + C382) * C104 +
                ((C113 * C316 + C31050 * C334) * C31063 +
                 (C113 * C304 + C31050 * C317) * C114) *
                    C103) *
                   C30885 * C31175 +
               (((C113 * C305 + C31050 * C318) * C114 +
                 (C113 * C319 + C31050 * C335) * C31063) *
                    C103 +
                (C383 + C384) * C104 + C392 * C105) *
                   C30885 * C31150) *
                  C299 +
              (((C382 + C381) * C103 + (C380 + C379) * C104 +
                (C387 + C388) * C105) *
                   C30885 * C31175 -
               (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                   C30885 * C31187 -
               ((C389 + C390) * C105 + (C386 + C385) * C104 +
                (C384 + C383) * C103) *
                   C30885 * C31150) *
                  C300 +
              ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
                   C31187 -
               (((C113 * C328 + C31050 * C340) * C31063 +
                 (C113 * C310 + C31050 * C329) * C114) *
                    C105 +
                (C388 + C387) * C104 + C391 * C103) *
                   C30885 * C31175 +
               (C392 * C103 + (C390 + C389) * C104 +
                ((C113 * C311 + C31050 * C330) * C114 +
                 (C113 * C331 + C31050 * C341) * C31063) *
                    C105) *
                   C30885 * C31150) *
                  C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31177 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31188 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31188 -
           (((C113 * C531 + C31050 * C543) * C31063 +
             (C113 * C513 + C31050 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31177 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C1126 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31177 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31188 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C1127 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31188 -
           (((C113 * C1349 + C31050 * C1364) * C31063 +
             (C113 * C1337 + C31050 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31050 * C1365) * C31063 +
             (C113 * C1338 + C31050 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C31177 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C31184 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C31187 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C31175 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C2055 -
          (C594 * C105 + (C584 + C585) * C104 +
           ((C113 * C519 + C31050 * C537) * C31063 +
            (C113 * C507 + C31050 * C520) * C114) *
               C103) *
              C2056 +
          (((C113 * C508 + C31050 * C521) * C114 +
            (C113 * C522 + C31050 * C538) * C31063) *
               C103 +
           (C586 + C587) * C104 + C595 * C105) *
              C2057 -
          (((C113 * C2066 + C31050 * C2078) * C31063 +
            (C113 * C2060 + C31050 * C2067) * C114) *
               C105 +
           ((C113 * C2068 + C31050 * C2079) * C31063 +
            (C113 * C2061 + C31050 * C2069) * C114) *
               C104 +
           ((C113 * C2070 + C31050 * C2080) * C31063 +
            (C113 * C2062 + C31050 * C2071) * C114) *
               C103) *
              C2058 +
          (((C113 * C2063 + C31050 * C2072) * C114 +
            (C113 * C2073 + C31050 * C2081) * C31063) *
               C103 +
           ((C113 * C2064 + C31050 * C2074) * C114 +
            (C113 * C2075 + C31050 * C2082) * C31063) *
               C104 +
           ((C113 * C2065 + C31050 * C2076) * C114 +
            (C113 * C2077 + C31050 * C2083) * C31063) *
               C105) *
              C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C1126 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C1127 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C31187 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C31175 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C2055 -
          ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
            C4807 * C519 + C4803 * C537) *
               C31063 +
           (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
            C4807 * C507 + C4803 * C520) *
               C114) *
              C30817 * C2056 +
          ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
            C4809 * C1340 + C4805 * C1355) *
               C114 +
           (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
            C4809 * C1356 + C4805 * C1367) *
               C31063) *
              C30817 * C2057 -
          ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
            C4807 * C2070 + C4803 * C2080) *
               C31063 +
           (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
            C4807 * C2062 + C4803 * C2071) *
               C114) *
              C30817 * C2058 +
          ((C4807 * C2063 + C4803 * C2072 + C4808 * C6311 + C4804 * C6315 +
            C4809 * C6312 + C4805 * C6316) *
               C114 +
           (C4807 * C2073 + C4803 * C2081 + C4808 * C6317 + C4804 * C6320 +
            C4809 * C6318 + C4805 * C6321) *
               C31063) *
              C30817 * C2059) *
         C30867 * C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C1126 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C1127 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31120 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31120) *
              C30867 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C2348 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C2349 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C2350 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C30867 * C31105 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C2349 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C2348 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C2350 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31050 * C2353) * C114 +
             (C113 * C2354 + C31050 * C2355) * C31063) *
                C105) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C1126 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C1127 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C1126 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C1127 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C2348 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C2349 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C2350 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C30867 * C31105 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C2349 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C2348 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C2350 +
           ((C4807 * C2061 + C4803 * C2069 + C4808 * C2471 + C4804 * C2475 +
             C4809 * C6570 + C4805 * C6571) *
                C114 +
            (C4807 * C2068 + C4803 * C2079 + C4808 * C2476 + C4804 * C2480 +
             C4809 * C6572 + C4805 * C6573) *
                C31063) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31187 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30885 * C31175 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31187 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31187 -
           (((C113 * C328 + C31050 * C340) * C31063 +
             (C113 * C310 + C31050 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30885 * C31175 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C30867 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30885 *
              C30867 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C30867 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30885 *
              C30867 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31050 * C134) * C114 +
            (C113 * C135 + C31050 * C142) * C31063) *
               C105) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C31184 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) * C1881 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C1880 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C1880 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) * C1881 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C1880 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C1881 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C31187 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C1881 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C1880 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C31175 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C1880 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C1881 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31184 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C31187 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C1881 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C1880 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C31175 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C1880 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C1881 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C30930) *
              C30844 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C30853 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C31119 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C3342) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C30844 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C30853 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C3342) *
               C30930) *
              C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C30968 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30975 +
            (((C113 * C508 + C31050 * C521) * C114 +
              (C113 * C522 + C31050 * C538) * C31063) *
                 C103 +
             (C586 + C587) * C104 + C595 * C105) *
                C3850) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30975 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C30968 -
            ((C2247 + C2248) * C105 + (C2249 + C2250) * C104 +
             ((C113 * C1347 + C31050 * C1363) * C31063 +
              (C113 * C1336 + C31050 * C1348) * C114) *
                 C103) *
                C3850) *
               C30930) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30975 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C30968 -
            ((C592 + C593) * C105 + (C589 + C588) * C104 +
             (C587 + C586) * C103) *
                C3850) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C30968 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30975 +
            ((C2250 + C2249) * C103 + (C2248 + C2247) * C104 +
             ((C113 * C2230 + C31050 * C2231) * C114 +
              (C113 * C2232 + C31050 * C2233) * C31063) *
                 C105) *
                C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
              C4809 * C1340 + C4805 * C1355) *
                 C114 +
             (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
              C4809 * C1356 + C4805 * C1367) *
                 C31063) *
                C30817 * C3850) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
              C4807 * C1347 + C4803 * C1363) *
                 C31063 +
             (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
              C4807 * C1336 + C4803 * C1348) *
                 C114) *
                C30817 * C3850) *
               C30930) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30975 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C30968 -
            ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
              C4807 * C524 + C4803 * C539) *
                 C31063 +
             (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
              C4807 * C509 + C4803 * C523) *
                 C114) *
                C30817 * C3850) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C30968 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30975 +
            ((C4807 * C1335 + C4803 * C1346 + C4808 * C1341 + C4804 * C1357 +
              C4809 * C6468 + C4805 * C6469) *
                 C114 +
             (C4807 * C1345 + C4803 * C1362 + C4808 * C1358 + C4804 * C1368 +
              C4809 * C6470 + C4805 * C6471) *
                 C31063) *
                C30817 * C3850) *
               C30930) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31187 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C31175 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31187 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C31175 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C31193 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30867 * C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C31173 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31195 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31192 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31183 -
           ((C2369 + C2370) * C105 + (C2371 + C2372) * C104 +
            ((C113 * C2070 + C31050 * C2080) * C31063 +
             (C113 * C2062 + C31050 * C2071) * C114) *
                C103) *
               C31166) *
              C30867 * C2688 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C31192 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31195 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31183 +
           ((C2372 + C2371) * C103 + (C2370 + C2369) * C104 +
            ((C113 * C2352 + C31050 * C2353) * C114 +
             (C113 * C2354 + C31050 * C2355) * C31063) *
                C105) *
               C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31187 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C31175 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31187 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C31175 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31195 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31192 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31183 -
           ((C4809 * C6313 + C4805 * C6319 + C4808 * C2474 + C4804 * C2479 +
             C4807 * C2070 + C4803 * C2080) *
                C31063 +
            (C4809 * C6310 + C4805 * C6314 + C4808 * C2470 + C4804 * C2473 +
             C4807 * C2062 + C4803 * C2071) *
                C114) *
               C30817 * C31166) *
              C30867 * C2688 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31192 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31195 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31183 +
           ((C4807 * C2061 + C4803 * C2069 + C4808 * C2471 + C4804 * C2475 +
             C4809 * C6570 + C4805 * C6571) *
                C114 +
            (C4807 * C2068 + C4803 * C2079 + C4808 * C2476 + C4804 * C2480 +
             C4809 * C6572 + C4805 * C6573) *
                C31063) *
               C30817 * C31166) *
              C30867 * C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30968 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30975 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C3850) *
              C30867 * C30844 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30975 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30968 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C3850) *
              C30867 * C30853 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30968 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30975 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C3850) *
              C30867 * C2951)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30968 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30975 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C3850) *
              C30867 * C30844 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30975 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30968 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C3850) *
              C30867 * C30853 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30968 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30975 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C3850) *
              C30867 * C2951)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C3342 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C31193 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C3342) *
              C30867 * C31186 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C3342 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C31173 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C3342 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31187 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C3342) *
               C31175 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C3342 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C2688 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C3342) *
               C31187 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C3342 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C31175 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C31193 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C3342) *
              C30867 * C31186 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C3342 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C31173 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C3342) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31187 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C3342) *
               C31175 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C2688 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C3342) *
               C31187 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C3342 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C31175 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C3342) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31119 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C30930) *
              C695 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C30930 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31119) *
              C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31119 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C30930) *
              C697 +
          ((C704 * C103 + (C712 + C711) * C104 +
            ((C113 * C699 + C31050 * C700) * C114 +
             (C113 * C701 + C31050 * C702) * C31063) *
                C105) *
               C30885 * C30930 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1468 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1469 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C1470 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C30885 * C31160) *
              C31105 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1469 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1468 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C1470 +
           ((C1494 + C1493) * C103 + (C1492 + C1491) * C104 +
            ((C113 * C1474 + C31050 * C1475) * C114 +
             (C113 * C1476 + C31050 * C1477) * C31063) *
                C105) *
               C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C30930) *
              C695 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31119) *
              C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31119 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C30930) *
              C697 +
          (((C4807 * C308 + C4803 * C324 + C4808 * C309 + C4804 * C327 +
             C4809 * C1474 + C4805 * C1475) *
                C114 +
            (C4807 * C325 + C4803 * C338 + C4808 * C326 + C4804 * C339 +
             C4809 * C1476 + C4805 * C1477) *
                C31063) *
               C30817 * C30885 * C30930 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C30885 * C31119) *
              C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1469 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C1470 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C30885 * C31160) *
              C31105 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1469 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1468 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C1470 +
           ((C4807 * C1201 + C4803 * C1209 + C4808 * C1204 + C4804 * C1214 +
             C4809 * C5772 + C4805 * C5773) *
                C114 +
            (C4807 * C1208 + C4803 * C1219 + C4808 * C1215 + C4804 * C1222 +
             C4809 * C5774 + C4805 * C5775) *
                C31063) *
               C30817 * C30885 * C31160) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C31119 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C30930) *
              C299 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C31119 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C30930) *
              C300 +
          (((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
            ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
                C30972) *
               C31119 +
           ((C1016 * C103 + (C1015 + C1014) * C104 +
             ((C113 * C975 + C31050 * C984) * C114 +
              (C113 * C985 + C31050 * C990) * C31063) *
                 C105) *
                C30972 -
            ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
                C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C1468 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C30972 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31120) *
              C1469 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31120 -
           ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C30972) *
              C1470 +
          ((((C113 * C1758 + C31050 * C1761) * C114 +
             (C113 * C1762 + C31050 * C1767) * C31063) *
                C103 +
            ((C113 * C1759 + C31050 * C1763) * C114 +
             (C113 * C1764 + C31050 * C1768) * C31063) *
                C104 +
            ((C113 * C1760 + C31050 * C1765) * C114 +
             (C113 * C1766 + C31050 * C1769) * C31063) *
                C105) *
               C30972 -
           ((C1491 + C1492) * C105 + (C1493 + C1494) * C104 +
            ((C113 * C1210 + C31050 * C1220) * C31063 +
             (C113 * C1202 + C31050 * C1211) * C114) *
                C103) *
               C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C299 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C31119 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C30930) *
              C300 +
          ((((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
              C4809 * C307 + C4805 * C322) *
                 C114 +
             (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
              C4809 * C323 + C4805 * C337) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
              C4807 * C515 + C4803 * C535) *
                 C31063 +
             (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
              C4807 * C505 + C4803 * C516) *
                 C114) *
                C30817 * C30972) *
               C31119 +
           (((C4807 * C973 + C4803 * C980 + C4808 * C1337 + C4804 * C1350 +
              C4809 * C1760 + C4805 * C1765) *
                 C114 +
             (C4807 * C981 + C4803 * C988 + C4808 * C1349 + C4804 * C1364 +
              C4809 * C1766 + C4805 * C1769) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
              C4807 * C312 + C4803 * C332) *
                 C31063 +
             (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
              C4807 * C302 + C4803 * C313) *
                 C114) *
                C30817 * C31120) *
               C30930) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C1468 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31120) *
              C1469 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C30972) *
              C1470 +
          (((C4807 * C1758 + C4803 * C1761 + C4808 * C5663 + C4804 * C5668 +
             C4809 * C6024 + C4805 * C6025) *
                C114 +
            (C4807 * C1762 + C4803 * C1767 + C4808 * C5667 + C4804 * C5672 +
             C4809 * C6026 + C4805 * C6027) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
             C4807 * C1210 + C4803 * C1220) *
                C31063 +
            (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
             C4807 * C1202 + C4803 * C1211) *
                C114) *
               C30817 * C31120) *
              C31160) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31187 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30885 * C31175 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31187 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31187 -
           (((C113 * C328 + C31050 * C340) * C31063 +
             (C113 * C310 + C31050 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30885 * C31175 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C30867 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30885 *
              C30867 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C30867 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30885 *
              C30867 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31050 * C134) * C114 +
            (C113 * C135 + C31050 * C142) * C31063) *
               C105) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C30867 * C299 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 +
            (C590 + C591) * C105) *
               C31177 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31188 -
           ((C592 + C593) * C105 + (C589 + C588) * C104 +
            (C587 + C586) * C103) *
               C31153) *
              C30867 * C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31188 -
           (((C113 * C531 + C31050 * C543) * C31063 +
             (C113 * C513 + C31050 * C532) * C114) *
                C105 +
            (C591 + C590) * C104 + C594 * C103) *
               C31177 +
           (C595 * C103 + (C593 + C592) * C104 +
            ((C113 * C514 + C31050 * C533) * C114 +
             (C113 * C534 + C31050 * C544) * C31063) *
                C105) *
               C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31188 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C31177 +
           (((C113 * C508 + C31050 * C521) * C114 +
             (C113 * C522 + C31050 * C538) * C31063) *
                C103 +
            (C586 + C587) * C104 + C595 * C105) *
               C31153) *
              C1126 +
          ((((C113 * C971 + C31050 * C976) * C114 +
             (C113 * C977 + C31050 * C986) * C31063) *
                C103 +
            (C1010 + C1011) * C104 + C1016 * C105) *
               C31177 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C31188 -
           (((C113 * C1343 + C31050 * C1361) * C31063 +
             (C113 * C1334 + C31050 * C1344) * C114) *
                C105 +
            ((C113 * C1345 + C31050 * C1362) * C31063 +
             (C113 * C1335 + C31050 * C1346) * C114) *
                C104 +
            ((C113 * C1347 + C31050 * C1363) * C31063 +
             (C113 * C1336 + C31050 * C1348) * C114) *
                C103) *
               C31153) *
              C1127 +
          ((((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C31188 -
           (((C113 * C1349 + C31050 * C1364) * C31063 +
             (C113 * C1337 + C31050 * C1350) * C114) *
                C105 +
            ((C113 * C1351 + C31050 * C1365) * C31063 +
             (C113 * C1338 + C31050 * C1352) * C114) *
                C104 +
            ((C113 * C1353 + C31050 * C1366) * C31063 +
             (C113 * C1339 + C31050 * C1354) * C114) *
                C103) *
               C31177 +
           (((C113 * C1340 + C31050 * C1355) * C114 +
             (C113 * C1356 + C31050 * C1367) * C31063) *
                C103 +
            ((C113 * C1341 + C31050 * C1357) * C114 +
             (C113 * C1358 + C31050 * C1368) * C31063) *
                C104 +
            ((C113 * C1342 + C31050 * C1359) * C114 +
             (C113 * C1360 + C31050 * C1369) * C31063) *
                C105) *
               C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C30867 * C299 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C1358 + C4805 * C1368 + C4808 * C1345 + C4804 * C1362 +
             C4807 * C524 + C4803 * C539) *
                C31063 +
            (C4809 * C1341 + C4805 * C1357 + C4808 * C1335 + C4804 * C1346 +
             C4807 * C509 + C4803 * C523) *
                C114) *
               C30817 * C31153) *
              C30867 * C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C510 + C4803 * C525 + C4808 * C1334 + C4804 * C1344 +
             C4809 * C1342 + C4805 * C1359) *
                C114 +
            (C4807 * C526 + C4803 * C540 + C4808 * C1343 + C4804 * C1361 +
             C4809 * C1360 + C4805 * C1369) *
                C31063) *
               C30817 * C31153) *
              C30867 * C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C508 + C4803 * C521 + C4808 * C1336 + C4804 * C1348 +
             C4809 * C1340 + C4805 * C1355) *
                C114 +
            (C4807 * C522 + C4803 * C538 + C4808 * C1347 + C4804 * C1363 +
             C4809 * C1356 + C4805 * C1367) *
                C31063) *
               C30817 * C31153) *
              C1126 +
          (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
             C4809 * C1758 + C4805 * C1761) *
                C114 +
            (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
             C4809 * C1762 + C4805 * C1767) *
                C31063) *
               C30817 * C31177 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C31188 -
           ((C4809 * C5665 + C4805 * C5671 + C4808 * C1356 + C4804 * C1367 +
             C4807 * C1347 + C4803 * C1363) *
                C31063 +
            (C4809 * C5662 + C4805 * C5666 + C4808 * C1340 + C4804 * C1355 +
             C4807 * C1336 + C4803 * C1348) *
                C114) *
               C30817 * C31153) *
              C1127 +
          (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C31188 -
           ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
             C4807 * C1353 + C4803 * C1366) *
                C31063 +
            (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
             C4807 * C1339 + C4803 * C1354) *
                C114) *
               C30817 * C31177 +
           ((C4807 * C1340 + C4803 * C1355 + C4808 * C5662 + C4804 * C5666 +
             C4809 * C5664 + C4805 * C5669) *
                C114 +
            (C4807 * C1356 + C4803 * C1367 + C4808 * C5665 + C4804 * C5671 +
             C4809 * C5670 + C4805 * C5673) *
                C31063) *
               C30817 * C31153) *
              C31150) *
         C30839) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C31120 -
           (C594 * C105 + (C584 + C585) * C104 +
            ((C113 * C519 + C31050 * C537) * C31063 +
             (C113 * C507 + C31050 * C520) * C114) *
                C103) *
               C30972) *
              C30867 * C695 +
          (((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
               C30972 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C31120) *
              C30867 * C696 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C31120 -
           ((C824 + C825) * C105 + (C591 + C590) * C104 + C594 * C103) *
               C30972) *
              C30867 * C697 +
          ((C817 * C103 + (C825 + C824) * C104 +
            ((C113 * C812 + C31050 * C813) * C114 +
             (C113 * C814 + C31050 * C815) * C31063) *
                C105) *
               C30972 -
           ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) *
               C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C115 + C31050 * C122) * C114 +
              (C113 * C123 + C31050 * C136) * C31063) *
                 C103 +
             (C174 + C175) * C104 + C184 * C105) *
                C31120 -
            (C594 * C105 + (C584 + C585) * C104 +
             ((C113 * C519 + C31050 * C537) * C31063 +
              (C113 * C507 + C31050 * C520) * C114) *
                 C103) *
                C30972) *
               C1126 +
           ((((C113 * C971 + C31050 * C976) * C114 +
              (C113 * C977 + C31050 * C986) * C31063) *
                 C103 +
             (C1010 + C1011) * C104 + C1016 * C105) *
                C30972 -
            (C391 * C105 + (C381 + C382) * C104 +
             ((C113 * C316 + C31050 * C334) * C31063 +
              (C113 * C304 + C31050 * C317) * C114) *
                 C103) *
                C31120) *
               C1127 +
           ((((C113 * C305 + C31050 * C318) * C114 +
              (C113 * C319 + C31050 * C335) * C31063) *
                 C103 +
             (C383 + C384) * C104 + C392 * C105) *
                C31120 -
            ((C1657 + C1658) * C105 + (C1659 + C1660) * C104 +
             ((C113 * C1353 + C31050 * C1366) * C31063 +
              (C113 * C1339 + C31050 * C1354) * C114) *
                 C103) *
                C30972) *
               C31150) *
              C31105 +
          ((((C585 + C584) * C103 + (C583 + C582) * C104 + C817 * C105) *
                C30972 -
            (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
                C31120) *
               C1126 +
           (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
                C31120 -
            ((C1014 + C1015) * C105 + (C1013 + C1012) * C104 +
             (C1011 + C1010) * C103) *
                C30972) *
               C1127 +
           (((C1660 + C1659) * C103 + (C1658 + C1657) * C104 +
             ((C113 * C1640 + C31050 * C1641) * C114 +
              (C113 * C1642 + C31050 * C1643) * C31063) *
                 C105) *
                C30972 -
            ((C389 + C390) * C105 + (C386 + C385) * C104 +
             (C384 + C383) * C103) *
                C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
             C4807 * C519 + C4803 * C537) *
                C31063 +
            (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
             C4807 * C507 + C4803 * C520) *
                C114) *
               C30817 * C30972) *
              C30867 * C695 +
          (((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
             C4809 * C1338 + C4805 * C1352) *
                C114 +
            (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
             C4809 * C1351 + C4805 * C1365) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C31120) *
              C30867 * C696 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C31120 -
           ((C4809 * C1349 + C4805 * C1364 + C4808 * C981 + C4804 * C988 +
             C4807 * C515 + C4803 * C535) *
                C31063 +
            (C4809 * C1337 + C4805 * C1350 + C4808 * C973 + C4804 * C980 +
             C4807 * C505 + C4803 * C516) *
                C114) *
               C30817 * C30972) *
              C30867 * C697 +
          (((C4807 * C511 + C4803 * C527 + C4808 * C974 + C4804 * C983 +
             C4809 * C1640 + C4805 * C1641) *
                C114 +
            (C4807 * C528 + C4803 * C541 + C4808 * C982 + C4804 * C989 +
             C4809 * C1642 + C4805 * C1643) *
                C31063) *
               C30817 * C30972 -
           ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
             C4807 * C128 + C4803 * C139) *
                C31063 +
            (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
             C4807 * C118 + C4803 * C129) *
                C114) *
               C30817 * C31120) *
              C30867 * C31154)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
              C4809 * C305 + C4805 * C318) *
                 C114 +
             (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
              C4809 * C319 + C4805 * C335) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1353 + C4805 * C1366 + C4808 * C977 + C4804 * C986 +
              C4807 * C519 + C4803 * C537) *
                 C31063 +
             (C4809 * C1339 + C4805 * C1354 + C4808 * C971 + C4804 * C976 +
              C4807 * C507 + C4803 * C520) *
                 C114) *
                C30817 * C30972) *
               C1126 +
           (((C4807 * C971 + C4803 * C976 + C4808 * C1339 + C4804 * C1354 +
              C4809 * C1758 + C4805 * C1761) *
                 C114 +
             (C4807 * C977 + C4803 * C986 + C4808 * C1353 + C4804 * C1366 +
              C4809 * C1762 + C4805 * C1767) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
              C4807 * C316 + C4803 * C334) *
                 C31063 +
             (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
              C4807 * C304 + C4803 * C317) *
                 C114) *
                C30817 * C31120) *
               C1127 +
           (((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
              C4809 * C1203 + C4805 * C1212) *
                 C114 +
             (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
              C4809 * C1213 + C4805 * C1221) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C5667 + C4805 * C5672 + C4808 * C1762 + C4804 * C1767 +
              C4807 * C1353 + C4803 * C1366) *
                 C31063 +
             (C4809 * C5663 + C4805 * C5668 + C4808 * C1758 + C4804 * C1761 +
              C4807 * C1339 + C4803 * C1354) *
                 C114) *
                C30817 * C30972) *
               C31150) *
              C31105 +
          ((((C4807 * C506 + C4803 * C518 + C4808 * C972 + C4804 * C978 +
              C4809 * C1338 + C4805 * C1352) *
                 C114 +
             (C4807 * C517 + C4803 * C536 + C4808 * C979 + C4804 * C987 +
              C4809 * C1351 + C4805 * C1365) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
              C4807 * C125 + C4803 * C137) *
                 C31063 +
             (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
              C4807 * C116 + C4803 * C124) *
                 C114) *
                C30817 * C31120) *
               C1126 +
           (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
              C4809 * C1201 + C4805 * C1209) *
                 C114 +
             (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
              C4809 * C1208 + C4805 * C1219) *
                 C31063) *
                C30817 * C31120 -
            ((C4809 * C1764 + C4805 * C1768 + C4808 * C1351 + C4804 * C1365 +
              C4807 * C979 + C4803 * C987) *
                 C31063 +
             (C4809 * C1759 + C4805 * C1763 + C4808 * C1338 + C4804 * C1352 +
              C4807 * C972 + C4803 * C978) *
                 C114) *
                C30817 * C30972) *
               C1127 +
           (((C4807 * C1338 + C4803 * C1352 + C4808 * C1759 + C4804 * C1763 +
              C4809 * C5922 + C4805 * C5923) *
                 C114 +
             (C4807 * C1351 + C4803 * C1365 + C4808 * C1764 + C4804 * C1768 +
              C4809 * C5924 + C4805 * C5925) *
                 C31063) *
                C30817 * C30972 -
            ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
              C4807 * C321 + C4803 * C336) *
                 C31063 +
             (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
              C4807 * C306 + C4803 * C320) *
                 C114) *
                C30817 * C31120) *
               C31150) *
              C30850)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C30867 * C108 -
          (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) * C30885 *
              C30867 * C109 +
          (C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C30867 *
              C110 -
          ((C182 + C183) * C105 + (C181 + C180) * C104 + C185 * C103) * C30885 *
              C30867 * C111 +
          (C186 * C103 + (C183 + C182) * C104 +
           ((C113 * C121 + C31050 * C134) * C114 +
            (C113 * C135 + C31050 * C142) * C31063) *
               C105) *
              C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C31187 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C31175 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C299 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 +
            (C387 + C388) * C105) *
               C30885 * C31175 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C31187 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C300 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 *
               C31187 -
           (((C113 * C328 + C31050 * C340) * C31063 +
             (C113 * C310 + C31050 * C329) * C114) *
                C105 +
            (C388 + C387) * C104 + C391 * C103) *
               C30885 * C31175 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C115 + C31050 * C122) * C114 +
             (C113 * C123 + C31050 * C136) * C31063) *
                C103 +
            (C174 + C175) * C104 + C184 * C105) *
               C30885 * C1126 -
           (C391 * C105 + (C381 + C382) * C104 +
            ((C113 * C316 + C31050 * C334) * C31063 +
             (C113 * C304 + C31050 * C317) * C114) *
                C103) *
               C30885 * C1127 +
           (((C113 * C305 + C31050 * C318) * C114 +
             (C113 * C319 + C31050 * C335) * C31063) *
                C103 +
            (C383 + C384) * C104 + C392 * C105) *
               C30885 * C31150) *
              C31184 +
          (((C382 + C381) * C103 + (C380 + C379) * C104 + C704 * C105) *
               C30885 * C1127 -
           (C185 * C105 + (C177 + C176) * C104 + (C175 + C174) * C103) *
               C30885 * C1126 -
           ((C389 + C390) * C105 + (C386 + C385) * C104 +
            (C384 + C383) * C103) *
               C30885 * C31150) *
              C31171 +
          ((C184 * C103 + (C179 + C178) * C104 + C186 * C105) * C30885 * C1126 -
           ((C711 + C712) * C105 + (C388 + C387) * C104 + C391 * C103) *
               C30885 * C1127 +
           (C392 * C103 + (C390 + C389) * C104 +
            ((C113 * C311 + C31050 * C330) * C114 +
             (C113 * C331 + C31050 * C341) * C31063) *
                C105) *
               C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C115 + C31050 * C122) * C114 +
            (C113 * C123 + C31050 * C136) * C31063) *
               C103 +
           (C174 + C175) * C104 + C184 * C105) *
              C30885 * C1194 -
          (C391 * C105 + (C381 + C382) * C104 +
           ((C113 * C316 + C31050 * C334) * C31063 +
            (C113 * C304 + C31050 * C317) * C114) *
               C103) *
              C30885 * C1195 +
          (((C113 * C305 + C31050 * C318) * C114 +
            (C113 * C319 + C31050 * C335) * C31063) *
               C103 +
           (C383 + C384) * C104 + C392 * C105) *
              C30885 * C1196 -
          (((C113 * C1206 + C31050 * C1218) * C31063 +
            (C113 * C1200 + C31050 * C1207) * C114) *
               C105 +
           ((C113 * C1208 + C31050 * C1219) * C31063 +
            (C113 * C1201 + C31050 * C1209) * C114) *
               C104 +
           ((C113 * C1210 + C31050 * C1220) * C31063 +
            (C113 * C1202 + C31050 * C1211) * C114) *
               C103) *
              C30885 * C1197 +
          (((C113 * C1203 + C31050 * C1212) * C114 +
            (C113 * C1213 + C31050 * C1221) * C31063) *
               C103 +
           ((C113 * C1204 + C31050 * C1214) * C114 +
            (C113 * C1215 + C31050 * C1222) * C31063) *
               C104 +
           ((C113 * C1205 + C31050 * C1216) * C114 +
            (C113 * C1217 + C31050 * C1223) * C31063) *
               C105) *
              C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C30867 * C108 -
          ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
            C4807 * C125 + C4803 * C137) *
               C31063 +
           (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
            C4807 * C116 + C4803 * C124) *
               C114) *
              C30817 * C30885 * C30867 * C109 +
          ((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
            C4809 * C307 + C4805 * C322) *
               C114 +
           (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
            C4809 * C323 + C4805 * C337) *
               C31063) *
              C30817 * C30885 * C30867 * C110 -
          ((C4809 * C326 + C4805 * C339 + C4808 * C325 + C4804 * C338 +
            C4807 * C128 + C4803 * C139) *
               C31063 +
           (C4809 * C309 + C4805 * C327 + C4808 * C308 + C4804 * C324 +
            C4807 * C118 + C4803 * C129) *
               C114) *
              C30817 * C30885 * C30867 * C111 +
          ((C4807 * C119 + C4803 * C130 + C4808 * C310 + C4804 * C329 +
            C4809 * C311 + C4805 * C330) *
               C114 +
           (C4807 * C131 + C4803 * C140 + C4808 * C328 + C4804 * C340 +
            C4809 * C331 + C4805 * C341) *
               C31063) *
              C30817 * C30885 * C30867 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C299 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C31175 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C300 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C31187 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C31175 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
             C4809 * C305 + C4805 * C318) *
                C114 +
            (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
             C4809 * C319 + C4805 * C335) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
             C4807 * C316 + C4803 * C334) *
                C31063 +
            (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
             C4807 * C304 + C4803 * C317) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
             C4809 * C1203 + C4805 * C1212) *
                C114 +
            (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
             C4809 * C1213 + C4805 * C1221) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31184 +
          (((C4807 * C303 + C4803 * C315 + C4808 * C306 + C4804 * C320 +
             C4809 * C1201 + C4805 * C1209) *
                C114 +
            (C4807 * C314 + C4803 * C333 + C4808 * C321 + C4804 * C336 +
             C4809 * C1208 + C4805 * C1219) *
                C31063) *
               C30817 * C30885 * C1127 -
           ((C4809 * C321 + C4805 * C336 + C4808 * C314 + C4804 * C333 +
             C4807 * C125 + C4803 * C137) *
                C31063 +
            (C4809 * C306 + C4805 * C320 + C4808 * C303 + C4804 * C315 +
             C4807 * C116 + C4803 * C124) *
                C114) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1215 + C4805 * C1222 + C4808 * C1208 + C4804 * C1219 +
             C4807 * C321 + C4803 * C336) *
                C31063 +
            (C4809 * C1204 + C4805 * C1214 + C4808 * C1201 + C4804 * C1209 +
             C4807 * C306 + C4803 * C320) *
                C114) *
               C30817 * C30885 * C31150) *
              C31171 +
          (((C4807 * C117 + C4803 * C126 + C4808 * C302 + C4804 * C313 +
             C4809 * C307 + C4805 * C322) *
                C114 +
            (C4807 * C127 + C4803 * C138 + C4808 * C312 + C4804 * C332 +
             C4809 * C323 + C4805 * C337) *
                C31063) *
               C30817 * C30885 * C1126 -
           ((C4809 * C1206 + C4805 * C1218 + C4808 * C323 + C4804 * C337 +
             C4807 * C312 + C4803 * C332) *
                C31063 +
            (C4809 * C1200 + C4805 * C1207 + C4808 * C307 + C4804 * C322 +
             C4807 * C302 + C4803 * C313) *
                C114) *
               C30817 * C30885 * C1127 +
           ((C4807 * C307 + C4803 * C322 + C4808 * C1200 + C4804 * C1207 +
             C4809 * C1205 + C4805 * C1216) *
                C114 +
            (C4807 * C323 + C4803 * C337 + C4808 * C1206 + C4804 * C1218 +
             C4809 * C1217 + C4805 * C1223) *
                C31063) *
               C30817 * C30885 * C31150) *
              C31144)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C4807 * C115 + C4803 * C122 + C4808 * C304 + C4804 * C317 +
            C4809 * C305 + C4805 * C318) *
               C114 +
           (C4807 * C123 + C4803 * C136 + C4808 * C316 + C4804 * C334 +
            C4809 * C319 + C4805 * C335) *
               C31063) *
              C30817 * C30885 * C1194 -
          ((C4809 * C1210 + C4805 * C1220 + C4808 * C319 + C4804 * C335 +
            C4807 * C316 + C4803 * C334) *
               C31063 +
           (C4809 * C1202 + C4805 * C1211 + C4808 * C305 + C4804 * C318 +
            C4807 * C304 + C4803 * C317) *
               C114) *
              C30817 * C30885 * C1195 +
          ((C4807 * C305 + C4803 * C318 + C4808 * C1202 + C4804 * C1211 +
            C4809 * C1203 + C4805 * C1212) *
               C114 +
           (C4807 * C319 + C4803 * C335 + C4808 * C1210 + C4804 * C1220 +
            C4809 * C1213 + C4805 * C1221) *
               C31063) *
              C30817 * C30885 * C1196 -
          ((C4809 * C5546 + C4805 * C5550 + C4808 * C1213 + C4804 * C1221 +
            C4807 * C1210 + C4803 * C1220) *
               C31063 +
           (C4809 * C5544 + C4805 * C5547 + C4808 * C1203 + C4804 * C1212 +
            C4807 * C1202 + C4803 * C1211) *
               C114) *
              C30817 * C30885 * C1197 +
          ((C4807 * C1203 + C4803 * C1212 + C4808 * C5544 + C4804 * C5547 +
            C4809 * C5545 + C4805 * C5548) *
               C114 +
           (C4807 * C1213 + C4803 * C1221 + C4808 * C5546 + C4804 * C5550 +
            C4809 * C5549 + C4805 * C5551) *
               C31063) *
              C30817 * C30885 * C1198) *
         C30839) /
            (p * q * std::sqrt(p + q));
}
