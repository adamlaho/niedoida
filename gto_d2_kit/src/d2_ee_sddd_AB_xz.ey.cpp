/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AB_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_12_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29680 = ae * be;
    const double C29679 = ae + be;
    const double C29678 = 0 * be;
    const double C29677 = xA - xB;
    const double C29699 = 0 * be;
    const double C29698 = zA - zB;
    const double C29720 = xP - xQ;
    const double C29719 = zP - zQ;
    const double C29718 = p + q;
    const double C29717 = p * q;
    const double C29725 = bs[3];
    const double C29735 = bs[4];
    const double C29744 = bs[5];
    const double C29758 = bs[6];
    const double C29780 = bs[7];
    const double C29889 = yP - yQ;
    const double C30098 = bs[2];
    const double C117 = bs[0];
    const double C30523 = ce + de;
    const double C30522 = ce * de;
    const double C30521 = xC - xD;
    const double C30555 = yC - yD;
    const double C30573 = zC - zD;
    const double C30741 = yA - yB;
    const double C29681 = std::pow(C29679, 2);
    const double C30796 = 2 * C29679;
    const double C29682 = C29680 * C29677;
    const double C30504 = std::pow(C29677, 2);
    const double C30795 = C29677 * ae;
    const double C29700 = C29680 * C29698;
    const double C30753 = std::pow(C29698, 2);
    const double C30828 = C29698 * ae;
    const double C29745 = std::pow(C29720, 2);
    const double C29815 = C29720 * ae;
    const double C29727 = C29719 * be;
    const double C29726 = C29720 * C29719;
    const double C29931 = std::pow(C29719, 2);
    const double C29721 = 2 * C29717;
    const double C29898 = std::pow(C29889, 2);
    const double C30527 = 2 * C30523;
    const double C30526 = std::pow(C30523, 2);
    const double C30528 = C30521 * de;
    const double C30525 = C30521 * ce;
    const double C30524 = std::pow(C30521, 2);
    const double C30556 = std::pow(C30555, 2);
    const double C30615 = C30555 * de;
    const double C30613 = C30555 * ce;
    const double C30574 = std::pow(C30573, 2);
    const double C30657 = C30573 * de;
    const double C30655 = C30573 * ce;
    const double C30742 = std::pow(C30741, 2);
    const double C30827 = C30741 * ae;
    const double C29683 = 2 * C29681;
    const double C138 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * ae * be) /
                        C29681;
    const double C30831 = std::pow(C30796, -2);
    const double C30829 = std::pow(C30796, -1);
    const double C30505 = C30504 * C29680;
    const double C30754 = C30753 * C29680;
    const double C29818 = C29725 * C29815;
    const double C29821 = C29735 * C29815;
    const double C29827 = C29744 * C29815;
    const double C29841 = C29758 * C29815;
    const double C29862 = C29780 * C29815;
    const double C29730 = C29725 * C29727;
    const double C29737 = C29735 * C29727;
    const double C29747 = C29744 * C29727;
    const double C29762 = C29758 * C29727;
    const double C29786 = C29780 * C29727;
    const double C29729 = C29726 * ae;
    const double C29722 = C29721 / C29718;
    const double C124 = (-(bs[1] * C29727 * C29721) / C29718) / C29679;
    const double C125 = (-(bs[1] * C29815 * C29721) / C29718) / C29679;
    const double C118 = -(C29720 * bs[1] * C29721) / C29718;
    const double C287 = -(C29889 * bs[1] * C29721) / C29718;
    const double C468 = -(C29719 * bs[1] * C29721) / C29718;
    const double C30540 = std::pow(C30527, -1);
    const double C30804 = std::pow(C30527, -2);
    const double C30541 = 2 * C30526;
    const double C30808 = C30526 * C30527;
    const double C30807 = 4 * C30526;
    const double C30797 = std::pow(C30525, 2);
    const double C30529 = C30524 * C30522;
    const double C30557 = C30556 * C30522;
    const double C30809 = std::pow(C30613, 2);
    const double C30575 = C30574 * C30522;
    const double C30811 = std::pow(C30655, 2);
    const double C30743 = C30742 * C29680;
    const double C30506 = C30505 / C29679;
    const double C30755 = C30754 / C29679;
    const double C29731 = C29729 * be;
    const double C29724 = -C29722;
    const double C29734 = std::pow(C29722, 4);
    const double C29757 = std::pow(C29722, 6);
    const double C139 =
        (ae * std::pow(C29722, 2) * bs[2] * C29719 * be +
         C29720 * std::pow(-C29722, 3) * bs[3] * C29720 * C29719 * ae * be) /
        C29681;
    const double C30097 = std::pow(C29722, 2);
    const double C126 =
        (C29720 * std::pow(C29722, 2) * bs[2] * C29727) / C29679;
    const double C127 =
        (C29720 * std::pow(C29722, 2) * bs[2] * C29815) / C29679 -
        (ae * bs[1] * C29721) / (C29718 * C29679);
    const double C30841 = 4 * C30808;
    const double C30840 = C30523 * C30807;
    const double C30530 = C30529 / C30523;
    const double C30558 = C30557 / C30523;
    const double C30576 = C30575 / C30523;
    const double C30744 = C30743 / C29679;
    const double C30507 = -C30506;
    const double C30756 = -C30755;
    const double C29736 = C29735 * C29731;
    const double C29746 = C29744 * C29731;
    const double C29760 = C29758 * C29731;
    const double C29784 = C29780 * C29731;
    const double C29728 = std::pow(C29724, 3);
    const double C29743 = std::pow(C29724, 5);
    const double C29779 = std::pow(C29724, 7);
    const double C29739 = C29734 * C29737;
    const double C29823 = C29734 * C29821;
    const double C29828 = C29735 * C29734;
    const double C29765 = C29757 * C29762;
    const double C29843 = C29757 * C29841;
    const double C29863 = C29758 * C29757;
    const double C30099 = C30098 * C30097;
    const double C297 = (C29889 * C30097 * C30098 * C29727) / C29679;
    const double C298 = (C29889 * C30097 * C30098 * C29815) / C29679;
    const double C478 = (C29719 * C30097 * C30098 * C29727) / C29679 -
                        (be * bs[1] * C29721) / (C29718 * C29679);
    const double C479 = (C29719 * C30097 * C30098 * C29815) / C29679;
    const double C30531 = -C30530;
    const double C30559 = -C30558;
    const double C30577 = -C30576;
    const double C30745 = -C30744;
    const double C30508 = std::exp(C30507);
    const double C30757 = std::exp(C30756);
    const double C29738 = C29734 * C29736;
    const double C29764 = C29757 * C29760;
    const double C29732 = C29728 * C29730;
    const double C29816 = C29725 * C29728;
    const double C29819 = C29728 * C29818;
    const double C317 = ((yP - yQ) * C29728 * C29725 * C29731) / C29681;
    const double C498 = (be * std::pow(C29722, 2) * bs[2] * C29720 * ae +
                         C29719 * C29728 * C29725 * C29731) /
                        C29681;
    const double C29749 = C29743 * C29747;
    const double C29748 = C29743 * C29746;
    const double C29829 = C29743 * C29827;
    const double C29842 = C29744 * C29743;
    const double C29789 = C29779 * C29786;
    const double C29788 = C29779 * C29784;
    const double C29865 = C29779 * C29862;
    const double C29742 = ae * C29739;
    const double C29741 = C29720 * C29739;
    const double C30227 = C29719 * C29739;
    const double C30256 = C29889 * C29739;
    const double C29824 = C29720 * C29823;
    const double C29902 = C29889 * C29823;
    const double C29929 = be * C29823;
    const double C29928 = C29719 * C29823;
    const double C29831 = C29720 * C29828;
    const double C29830 = C29828 * ae;
    const double C30105 = C29828 * C29745;
    const double C30199 = C29828 * C29898;
    const double C30230 = C29828 * C29931;
    const double C30257 = C29889 * C29828;
    const double C30339 = C29719 * C29828;
    const double C30338 = C29828 * be;
    const double C29767 = C29765 * C29745;
    const double C29778 = ae * C29765;
    const double C29777 = C29720 * C29765;
    const double C30273 = C29765 * C29898;
    const double C30353 = C29719 * C29765;
    const double C30400 = C29889 * C29765;
    const double C29847 = C29720 * C29843;
    const double C29973 = C29843 * C29898;
    const double C29980 = C29889 * C29843;
    const double C30020 = C29843 * C29931;
    const double C30034 = be * C29843;
    const double C30033 = C29719 * C29843;
    const double C29868 = C29863 * C29745;
    const double C29867 = C29720 * C29863;
    const double C29866 = C29863 * ae;
    const double C30291 = C29863 * C29898;
    const double C30357 = C29863 * C29931;
    const double C30403 = C29889 * C29863;
    const double C119 = C30099 * C29745 - (bs[1] * C29721) / C29718;
    const double C288 = C29889 * C29720 * C30099;
    const double C290 = C30099 * C29898 - (bs[1] * C29721) / C29718;
    const double C469 = C29719 * C29720 * C30099;
    const double C471 = C30099 * C29931 - (bs[1] * C29721) / C29718;
    const double C906 = C29719 * C29889 * C30099;
    const double C30532 = std::exp(C30531);
    const double C30560 = std::exp(C30559);
    const double C30578 = std::exp(C30577);
    const double C30746 = std::exp(C30745);
    const double C29684 = C29682 * C30508;
    const double C30830 = C30508 * C30795;
    const double C102 =
        (C30508 * std::pow(C30795, 2)) / C29681 + C30508 / C30796;
    const double C104 = C30831 * C30508;
    const double C13127 = C30829 * C30508;
    const double C148 = C30757 * C139;
    const double C146 = C30757 * C126;
    const double C4811 = C30757 * C297;
    const double C29701 = C29700 * C30757;
    const double C113 = -(2 * ae * be * (zA - zB) * C30757) / (ae + be);
    const double C30862 = C30757 * C30828;
    const double C8976 =
        (C30757 * std::pow(C30828, 2)) / C29681 + C30757 / C30796;
    const double C8978 = C30831 * C30757;
    const double C18611 = C30829 * C30757;
    const double C320 =
        (C29728 * C29725 * C29731 + C29738 * std::pow(yP - yQ, 2)) / C29681;
    const double C29766 = C29720 * C29764;
    const double C29962 = C29764 * C29898;
    const double C29965 = C29889 * C29764;
    const double C30019 = C29719 * C29764;
    const double C140 = (C29728 * C29725 * C29731 + ae * C29720 * C29732 +
                         C29720 * (ae * C29732 + C29720 * std::pow(C29722, 4) *
                                                     bs[4] * C29731)) /
                        C29681;
    const double C141 =
        (2 * (ae * C29732 + C29720 * C29738) +
         ae * (C29732 + C29739 * std::pow(C29720, 2)) +
         C29720 * (C29738 + ae * C29720 * C29739 +
                   C29720 * (ae * C29739 +
                             C29720 * std::pow(C29724, 5) * bs[5] * C29731))) /
        C29681;
    const double C318 = ((yP - yQ) * (ae * C29732 + C29720 * C29738)) / C29681;
    const double C499 = (be * (C29720 * C29728 * C29725 * C29720 * ae +
                               bs[2] * std::pow(C29722, 2) * ae) +
                         C29719 * (ae * C29732 + C29720 * C29738)) /
                        C29681;
    const double C128 =
        (std::pow(C29722, 2) * bs[2] * C29727 + C29732 * C29745) / C29679;
    const double C130 =
        (2 * C29720 * C29732 + C29720 * (C29732 + C29739 * C29745)) / C29679;
    const double C299 = (C29889 * C29720 * C29732) / C29679;
    const double C301 = (C29889 * (C29732 + C29739 * C29745)) / C29679;
    const double C303 = (C30097 * C30098 * C29727 + C29732 * C29898) / C29679;
    const double C480 =
        (C29719 * C29720 * C29732 + C29720 * C30099 * be) / C29679;
    const double C484 =
        (C30097 * C30098 * C29727 + C29719 * (C29719 * C29732 + C30099 * be) +
         C29719 * C30099 * be) /
        C29679;
    const double C911 =
        (C29719 * C29889 * C29732 + C29889 * C30099 * be) / C29679;
    const double C1130 =
        (2 * C29889 * C29732 + C29889 * (C29732 + C29739 * C29898)) / C29679;
    const double C29822 = C29816 * ae;
    const double C30104 = C29720 * C29816;
    const double C30184 = C29889 * C29816;
    const double C30229 = C29719 * C29816;
    const double C30228 = C29816 * be;
    const double C482 = (C29719 * (C29732 + C29739 * C29745) +
                         (C30099 + C29816 * C29745) * be) /
                        C29679;
    const double C1273 = (C29719 * (C29732 + C29739 * C29898) +
                          (C30099 + C29816 * C29898) * be) /
                         C29679;
    const double C1974 =
        (2 * (C29719 * C29732 + C30099 * be) +
         C29719 * (C29732 + C29719 * (C29719 * C29739 + C29816 * be) +
                   C29719 * C29816 * be) +
         (C30099 + C29816 * C29931) * be) /
        C29679;
    const double C120 =
        2 * C29720 * C30099 + C29720 * (C30099 + C29816 * C29745);
    const double C289 = C29889 * (C30099 + C29816 * C29745);
    const double C470 = C29719 * (C30099 + C29816 * C29745);
    const double C1124 =
        2 * C29889 * C30099 + C29889 * (C30099 + C29816 * C29898);
    const double C1261 = C29719 * (C30099 + C29816 * C29898);
    const double C1968 =
        2 * C29719 * C30099 + C29719 * (C30099 + C29816 * C29931);
    const double C501 = (C29728 * C29725 * C29731 + be * C29719 * C29819 +
                         C29719 * (be * C29819 + C29719 * C29738)) /
                        C29681;
    const double C921 =
        (be * C29889 * C29819 + C29719 * C29889 * C29738) / C29681;
    const double C129 =
        (C30097 * C30098 * C29815 + C29720 * (C29720 * C29819 + C30099 * ae) +
         C29720 * C30099 * ae) /
        C29679;
    const double C300 = (C29889 * (C29720 * C29819 + C30099 * ae)) / C29679;
    const double C304 = (C30097 * C30098 * C29815 + C29819 * C29898) / C29679;
    const double C481 = (C29719 * (C29720 * C29819 + C30099 * ae)) / C29679;
    const double C485 = (C30097 * C30098 * C29815 + C29819 * C29931) / C29679;
    const double C912 = (C29719 * C29889 * C29819) / C29679;
    const double C1131 =
        (2 * C29889 * C29819 + C29889 * (C29819 + C29823 * C29898)) / C29679;
    const double C1274 = (C29719 * (C29819 + C29823 * C29898)) / C29679;
    const double C1975 =
        (2 * C29719 * C29819 + C29719 * (C29819 + C29823 * C29931)) / C29679;
    const double C4813 = C30757 * C317;
    const double C29751 = C29749 * C29745;
    const double C29756 = ae * C29749;
    const double C29755 = C29720 * C29749;
    const double C30268 = C29749 * C29898;
    const double C30272 = C29889 * C29749;
    const double C30337 = C29719 * C29749;
    const double C1136 =
        (3 * (C29732 + C29739 * C29898) +
         C29889 * (2 * C29889 * C29739 + C29889 * (C29739 + C29749 * C29898))) /
        C29679;
    const double C29750 = C29720 * C29748;
    const double C29930 = C29719 * C29748;
    const double C29953 = C29889 * C29748;
    const double C1142 = (2 * C29889 * C29738 +
                          C29889 * (C29738 + C29748 * std::pow(C29889, 2))) /
                         C29681;
    const double C1145 =
        (3 * (C29738 + C29748 * C29898) +
         C29889 * (2 * C29889 * C29748 + C29889 * (C29748 + C29764 * C29898))) /
        C29681;
    const double C1288 = (be * (C29819 + C29823 * C29898) +
                          C29719 * (C29738 + C29748 * C29898)) /
                         C29681;
    const double C1986 = (2 * (be * C29819 + C29719 * C29738) +
                          be * (C29819 + C29823 * std::pow(C29719, 2)) +
                          C29719 * (C29738 + be * C29719 * C29823 +
                                    C29719 * (be * C29823 + C29719 * C29748))) /
                         C29681;
    const double C29832 = C29720 * C29829;
    const double C29911 = C29829 * C29898;
    const double C29933 = C29829 * C29931;
    const double C29954 = C29889 * C29829;
    const double C30018 = be * C29829;
    const double C30017 = C29719 * C29829;
    const double C29846 = C29842 * C29745;
    const double C29845 = C29720 * C29842;
    const double C29844 = C29842 * ae;
    const double C30281 = C29842 * C29898;
    const double C30290 = C29889 * C29842;
    const double C30340 = C29842 * C29931;
    const double C30355 = C29719 * C29842;
    const double C30354 = C29842 * be;
    const double C29791 = C29789 * C29745;
    const double C29790 = C29720 * C29788;
    const double C29966 = C29788 * C29898;
    const double C30035 = C29719 * C29788;
    const double C30078 = C29889 * C29788;
    const double C29869 = C29720 * C29865;
    const double C29981 = C29865 * C29898;
    const double C30037 = C29865 * C29931;
    const double C30079 = C29889 * C29865;
    const double C305 = (C29720 * C29732 + C29741 * C29898) / C29679;
    const double C1285 = (C29889 * C29738 + be * C29719 * C29902 +
                          C29719 * (be * C29902 + C29719 * C29889 * C29748)) /
                         C29681;
    const double C1268 = (C29889 * C29819 + C29902 * C29931) / C29679;
    const double C29833 = C29831 * ae;
    const double C30109 = 2 * C29831;
    const double C30187 = C29889 * C29831;
    const double C30237 = C29719 * C29831;
    const double C30236 = C29831 * be;
    const double C30106 = C29816 + C30105;
    const double C30200 = C29816 + C30199;
    const double C30232 = C29816 + C30230;
    const double C30280 = 2 * C30257;
    const double C30312 = C29719 * C30257;
    const double C30311 = C30257 * be;
    const double C30344 = 2 * C30339;
    const double C30342 = C30339 * be;
    const double C29769 = C29749 + C29767;
    const double C29785 = 2 * C29777;
    const double C29783 = ae * C29777;
    const double C30300 = C29777 * C29898;
    const double C30375 = C29889 * C29777;
    const double C30385 = C29719 * C29777;
    const double C30275 = C29749 + C30273;
    const double C30404 = C29719 * C30400;
    const double C29974 = C29829 + C29973;
    const double C29982 = 2 * C29980;
    const double C29998 = C29980 * C29931;
    const double C30077 = be * C29980;
    const double C30076 = C29719 * C29980;
    const double C30024 = C29829 + C30020;
    const double C30041 = 2 * C30033;
    const double C30039 = be * C30033;
    const double C29871 = C29842 + C29868;
    const double C29870 = C29867 * ae;
    const double C30327 = C29867 * C29898;
    const double C30378 = C29889 * C29867;
    const double C30388 = C29867 * C29931;
    const double C30293 = C29842 + C30291;
    const double C30361 = C29842 + C30357;
    const double C30406 = C30403 * C29931;
    const double C30534 = C30532 * C30525;
    const double C30533 = C30532 / C30527;
    const double C30543 = C30540 * C30532;
    const double C30800 = C30532 * C30528;
    const double C30838 = C30804 * C30532;
    const double C30832 = C30532 * C30797;
    const double C30614 = C30560 / C30527;
    const double C30616 = C30560 * C30613;
    const double C30623 = C30540 * C30560;
    const double C30815 = C30560 * C30615;
    const double C30844 = C30804 * C30560;
    const double C30842 = C30560 * C30809;
    const double C30656 = C30578 / C30527;
    const double C30658 = C30578 * C30655;
    const double C30665 = C30540 * C30578;
    const double C30821 = C30578 * C30657;
    const double C30847 = C30804 * C30578;
    const double C30845 = C30578 * C30811;
    const double C30861 = C30746 * C30827;
    const double C4696 =
        (C30746 * std::pow(C30827, 2)) / C29681 + C30746 / C30796;
    const double C4698 = C30831 * C30746;
    const double C13129 = C30829 * C30746;
    const double C116 = ((0 * ae) / C29679 - C29684 / C29681) / (2 * C29679) +
                        (0 * ae) / C29679;
    const double C4699 = -(2 * C29684) / C29679;
    const double C13130 =
        ((C30508 - (C29677 * 2 * C29684) / C29679) * ae) / C29679 -
        C29678 / C29683;
    const double C13131 = (0 * ae) / C29679 - C29684 / C29681;
    const double C103 = (2 * C30829 * C30830) / C29679;
    const double C13126 = C30830 / C29679;
    const double C115 =
        (((C30508 - (C29677 * 2 * C29684) / C29679) * ae) / C29679 -
         C29678 / C29683) /
            (2 * C29679) +
        ((C29677 * ((0 * ae) / C29679 - C29684 / C29681) + C13127) * ae) /
            C29679;
    const double C8981 = ((0 * ae) / C29679 - C29701 / C29681) / (2 * C29679) +
                         (0 * ae) / C29679;
    const double C18612 =
        ((C30757 - (C29698 * 2 * C29701) / C29679) * ae) / C29679 -
        C29699 / C29683;
    const double C18613 = (0 * ae) / C29679 - C29701 / C29681;
    const double C151 = C113 * C119;
    const double C149 = C113 * C127;
    const double C147 = C113 * C118;
    const double C328 = C113 * C288;
    const double C509 = C113 * C469;
    const double C4816 = C113 * C290;
    const double C4814 = C113 * C298;
    const double C4812 = C113 * C287;
    const double C5288 = C113 * C906;
    const double C8977 = (2 * C30829 * C30862) / C29679;
    const double C18610 = C30862 / C29679;
    const double C8980 =
        (((C30757 - (C29698 * 2 * C29701) / C29679) * ae) / C29679 -
         C29699 / C29683) /
            (2 * C29679) +
        ((C29698 * ((0 * ae) / C29679 - C29701 / C29681) + C18611) * ae) /
            C29679;
    const double C4817 = C30757 * C320;
    const double C29963 = C29748 + C29962;
    const double C29967 = 2 * C29965;
    const double C29997 = C29719 * C29965;
    const double C152 = C30757 * C140;
    const double C157 = C30757 * C141;
    const double C331 = C30757 * C318;
    const double C512 = C30757 * C499;
    const double C18621 = C18611 * C499;
    const double C150 = C30757 * C128;
    const double C155 = C30757 * C130;
    const double C329 = C30757 * C299;
    const double C333 = C30757 * C301;
    const double C4815 = C30757 * C303;
    const double C510 = C30757 * C480;
    const double C18617 = C18611 * C480;
    const double C5289 = C30757 * C911;
    const double C24371 = C18611 * C911;
    const double C4820 = C30757 * C1130;
    const double C29825 = C29824 + C29822;
    const double C486 =
        (C29720 * C29732 + C29719 * (C29719 * C29741 + C30104 * be) +
         C29719 * C30104 * be) /
        C29679;
    const double C913 =
        (C29719 * C29889 * C29741 + C29889 * C30104 * be) / C29679;
    const double C291 = C29720 * C30099 + C30104 * C29898;
    const double C472 = C29720 * C30099 + C30104 * C29931;
    const double C907 = C29719 * C29889 * C30104;
    const double C1125 =
        2 * C29889 * C30104 + C29889 * (C30104 + C29831 * C29898);
    const double C1262 = C29719 * (C30104 + C29831 * C29898);
    const double C1969 =
        2 * C29719 * C30104 + C29719 * (C30104 + C29831 * C29931);
    const double C1267 =
        (C29889 * C29732 + C29719 * (C29719 * C29889 * C29739 + C30184 * be) +
         C29719 * C30184 * be) /
        C29679;
    const double C2365 =
        (2 * (C29719 * C30256 + C30184 * be) +
         C29719 * (C30256 + C29719 * (C29719 * C29889 * C29749 + C30257 * be) +
                   C29719 * C30257 * be) +
         (C30184 + C30257 * C29931) * be) /
        C29679;
    const double C1258 = C29889 * C30099 + C30184 * C29931;
    const double C2362 =
        2 * C29719 * C30184 + C29719 * (C30184 + C30257 * C29931);
    const double C30231 = C30227 + C30228;
    const double C514 = C30757 * C482;
    const double C18626 = C18611 * C482;
    const double C5293 = C30757 * C1273;
    const double C24380 = C18611 * C1273;
    const double C154 = C113 * C120;
    const double C332 = C113 * C289;
    const double C513 = C113 * C470;
    const double C4819 = C113 * C1124;
    const double C5292 = C113 * C1261;
    const double C5291 = C30757 * C921;
    const double C24375 = C18611 * C921;
    const double C153 = C113 * C129;
    const double C330 = C113 * C300;
    const double C4818 = C113 * C304;
    const double C511 = C113 * C481;
    const double C5290 = C113 * C912;
    const double C4821 = C113 * C1131;
    const double C5294 = C113 * C1274;
    const double C29753 = C29739 + C29751;
    const double C29768 = C29756 + C29766;
    const double C29761 = 2 * C29755;
    const double C29759 = ae * C29755;
    const double C30235 = C29719 * C29755;
    const double C30260 = C29889 * C29755;
    const double C1132 =
        (2 * C29889 * C29741 + C29889 * (C29741 + C29755 * C29898)) / C29679;
    const double C1138 =
        (3 * (C29741 + C29755 * C29898) +
         C29889 * (2 * C29889 * C29755 + C29889 * (C29755 + C29777 * C29898))) /
        C29679;
    const double C1275 = (C29719 * (C29741 + C29755 * C29898) +
                          (C30104 + C29831 * C29898) * be) /
                         C29679;
    const double C1976 =
        (2 * (C29719 * C29741 + C30104 * be) +
         C29719 * (C29741 + C29719 * (C29719 * C29755 + C29831 * be) +
                   C29719 * C29831 * be) +
         (C30104 + C29831 * C29931) * be) /
        C29679;
    const double C30269 = C29739 + C30268;
    const double C30274 = 2 * C30272;
    const double C30310 = C29719 * C30272;
    const double C30341 = C30337 + C30338;
    const double C5478 = C30757 * C1136;
    const double C29752 = C29742 + C29750;
    const double C29932 = C29929 + C29930;
    const double C4822 = C30757 * C1142;
    const double C5480 = C30757 * C1145;
    const double C5295 = C30757 * C1288;
    const double C24384 = C18611 * C1288;
    const double C29834 = C29832 + C29830;
    const double C29912 = C29823 + C29911;
    const double C29934 = C29823 + C29933;
    const double C29972 = 2 * C29954;
    const double C29996 = be * C29954;
    const double C29995 = C29719 * C29954;
    const double C2371 =
        (2 * (be * C29902 + C29719 * C29953) + be * (C29902 + C29954 * C29931) +
         C29719 * (C29953 + be * C29719 * C29954 +
                   C29719 * (be * C29954 + C29719 * C29889 * C29764))) /
        C29681;
    const double C2366 =
        (2 * C29719 * C29902 + C29719 * (C29902 + C29954 * C29931)) / C29679;
    const double C30022 = C30018 + C30019;
    const double C30023 = 2 * C30017;
    const double C30021 = be * C30017;
    const double C29849 = C29828 + C29846;
    const double C29848 = C29845 * ae;
    const double C29864 = 2 * C29845;
    const double C30203 = C29845 * C29898;
    const double C30238 = C29845 * C29931;
    const double C30261 = C29889 * C29845;
    const double C30387 = C29719 * C29845;
    const double C30386 = C29845 * be;
    const double C29850 = C29847 + C29844;
    const double C30282 = C29828 + C30281;
    const double C30292 = 2 * C30290;
    const double C30313 = C30290 * C29931;
    const double C30402 = C29719 * C30290;
    const double C30401 = C30290 * be;
    const double C30343 = C29828 + C30340;
    const double C30362 = 2 * C30355;
    const double C30360 = C30355 * be;
    const double C30359 = C30353 + C30354;
    const double C29793 = C29765 + C29791;
    const double C29792 = C29778 + C29790;
    const double C29968 = C29764 + C29966;
    const double C30040 = C30034 + C30035;
    const double C30081 = C29719 * C30078;
    const double C29872 = C29869 + C29866;
    const double C29983 = C29843 + C29981;
    const double C30042 = C29843 + C30037;
    const double C30083 = C30079 * C29931;
    const double C336 = C30757 * C305;
    const double C5620 = C30757 * C1285;
    const double C24992 = C18611 * C1285;
    const double C5621 = C113 * C1268;
    const double C1269 =
        (C29889 * C29741 + C29719 * (C29719 * C29889 * C29755 + C30187 * be) +
         C29719 * C30187 * be) /
        C29679;
    const double C1259 = C29889 * C30104 + C30187 * C29931;
    const double C121 = 3 * (C30099 + C29816 * C29745) +
                        C29720 * (2 * C30104 + C29720 * C30106);
    const double C292 = C30099 + C29816 * C29745 + C30106 * C29898;
    const double C293 = C29889 * (2 * C30104 + C29720 * C30106);
    const double C473 = C30099 + C29816 * C29745 + C30106 * C29931;
    const double C474 = C29719 * (2 * C30104 + C29720 * C30106);
    const double C908 = C29719 * C29889 * C30106;
    const double C1279 =
        (C29732 + C29739 * C29898 +
         C29719 * (C29719 * (C29739 + C29749 * C29898) + C30200 * be) +
         C29719 * C30200 * be) /
        C29679;
    const double C1669 =
        (C29719 * (2 * C29889 * C29739 + C29889 * (C29739 + C29749 * C29898)) +
         (2 * C30184 + C29889 * C30200) * be) /
        C29679;
    const double C1127 = 3 * (C30099 + C29816 * C29898) +
                         C29889 * (2 * C30184 + C29889 * C30200);
    const double C1264 = C30099 + C29816 * C29898 + C30200 * C29931;
    const double C1666 = C29719 * (2 * C30184 + C29889 * C30200);
    const double C1971 = 3 * (C30099 + C29816 * C29931) +
                         C29719 * (2 * C30229 + C29719 * C30232);
    const double C29771 = C29720 * C29769;
    const double C29781 = 3 * C29769;
    const double C29776 = ae * C29769;
    const double C30243 = C29719 * C29769;
    const double C30264 = C29889 * C29769;
    const double C29787 = C29764 + C29783;
    const double C30301 = C29755 + C30300;
    const double C30379 = C29719 * C30375;
    const double C30276 = C29889 * C30275;
    const double C30318 = C29719 * C30275;
    const double C29975 = C29889 * C29974;
    const double C29979 = 3 * C29974;
    const double C30003 = be * C29974;
    const double C30002 = C29719 * C29974;
    const double C30000 = C29954 + C29998;
    const double C30082 = 2 * C30076;
    const double C30080 = be * C30076;
    const double C30027 = C29719 * C30024;
    const double C30036 = 3 * C30024;
    const double C30032 = be * C30024;
    const double C30043 = C29764 + C30039;
    const double C29874 = C29720 * C29871;
    const double C29873 = C29871 * ae;
    const double C30207 = C29871 * C29898;
    const double C30246 = C29871 * C29931;
    const double C30265 = C29889 * C29871;
    const double C30328 = C29845 + C30327;
    const double C30380 = C30378 * C29931;
    const double C30391 = C29845 + C30388;
    const double C30294 = C29889 * C30293;
    const double C30321 = C30293 * C29931;
    const double C30364 = C29719 * C30361;
    const double C30409 = C30290 + C30406;
    const double C30535 = C30534 * C30528;
    const double C30542 = C30534 / C30541;
    const double C30801 = C30540 * C30534;
    const double C30799 = C30534 / C30523;
    const double C284 = (C30532 * std::pow(C30528, 2)) / C30526 + C30533;
    const double C30544 = C30543 * C30528;
    const double C30805 = C30525 * C30543;
    const double C30803 = 2 * C30543;
    const double C30848 = C30543 / C30807;
    const double C112 = C30543 / C30841;
    const double C2843 = C30543 / C30527;
    const double C30834 = C30800 / C30523;
    const double C285 = (-2 * C30540 * C30800) / C30523;
    const double C30863 = C30832 / C30526;
    const double C1050 = (C30560 * std::pow(C30615, 2)) / C30526 + C30614;
    const double C30617 = C30616 * C30615;
    const double C30622 = C30616 / C30541;
    const double C30813 = C30616 / C30523;
    const double C30810 = C30540 * C30616;
    const double C30624 = C30623 * C30615;
    const double C30819 = C30613 * C30623;
    const double C30818 = 2 * C30623;
    const double C30854 = C30623 / C30807;
    const double C1122 = C30623 / C30841;
    const double C2840 = C30623 / C30527;
    const double C30850 = C30815 / C30523;
    const double C1051 = (-2 * C30540 * C30815) / C30523;
    const double C30868 = C30842 / C30526;
    const double C1788 = (C30578 * std::pow(C30657, 2)) / C30526 + C30656;
    const double C30659 = C30658 * C30657;
    const double C30664 = C30658 / C30541;
    const double C30814 = C30658 / C30523;
    const double C30812 = C30540 * C30658;
    const double C30666 = C30665 * C30657;
    const double C30825 = C30655 * C30665;
    const double C30824 = 2 * C30665;
    const double C30860 = C30665 / C30807;
    const double C1967 = C30665 / C30841;
    const double C3742 = C30665 / C30527;
    const double C30856 = C30821 / C30523;
    const double C1789 = (-2 * C30540 * C30821) / C30523;
    const double C30870 = C30845 / C30526;
    const double C4697 = (2 * C30829 * C30861) / C29679;
    const double C13128 = C30861 / C29679;
    const double C114 =
        (((0 - (C29677 * C29678) / C29679) * ae) / C29679 - (0 * be) / C29683) /
            (2 * C29679) +
        ((C29677 * (((C30508 - (C29677 * 2 * C29684) / C29679) * ae) / C29679 -
                    C29678 / C29683) +
          C13126) *
         ae) /
            C29679 +
        (0 * ae) / C29679 - C29684 / C29681;
    const double C18632 = C18612 * C120;
    const double C18627 = C18612 * C129;
    const double C18623 = C18612 * C119;
    const double C18620 = C18612 * C127;
    const double C18616 = C18612 * C118;
    const double C18810 = C18612 * C289;
    const double C18797 = C18612 * C300;
    const double C18793 = C18612 * C288;
    const double C18988 = C18612 * C470;
    const double C18975 = C18612 * C481;
    const double C18971 = C18612 * C469;
    const double C24381 = C18612 * C304;
    const double C24377 = C18612 * C290;
    const double C24374 = C18612 * C298;
    const double C24370 = C18612 * C287;
    const double C24989 = C18612 * C912;
    const double C24985 = C18612 * C906;
    const double C25226 = C18612 * C1131;
    const double C25222 = C18612 * C1124;
    const double C25396 = C18612 * C1274;
    const double C25392 = C18612 * C1261;
    const double C25388 = C18612 * C1268;
    const double C18625 = C18613 * C470;
    const double C18622 = C18613 * C481;
    const double C18618 = C18613 * C469;
    const double C24383 = C18613 * C1274;
    const double C24379 = C18613 * C1261;
    const double C24376 = C18613 * C912;
    const double C24372 = C18613 * C906;
    const double C24991 = C18613 * C1268;
    const double C18635 = C18610 * C141;
    const double C18631 = C18610 * C130;
    const double C18628 = C18610 * C140;
    const double C18624 = C18610 * C128;
    const double C18619 = C18610 * C139;
    const double C18615 = C18610 * C126;
    const double C18809 = C18610 * C301;
    const double C18801 = C18610 * C305;
    const double C18798 = C18610 * C318;
    const double C18794 = C18610 * C299;
    const double C18987 = C18610 * C482;
    const double C18976 = C18610 * C499;
    const double C18972 = C18610 * C480;
    const double C24382 = C18610 * C320;
    const double C24378 = C18610 * C303;
    const double C24373 = C18610 * C317;
    const double C24369 = C18610 * C297;
    const double C24990 = C18610 * C921;
    const double C24986 = C18610 * C911;
    const double C25234 = C18610 * C1145;
    const double C25230 = C18610 * C1136;
    const double C25225 = C18610 * C1142;
    const double C25221 = C18610 * C1130;
    const double C25395 = C18610 * C1288;
    const double C25391 = C18610 * C1273;
    const double C25387 = C18610 * C1285;
    const double C8979 =
        (((0 - (C29698 * C29699) / C29679) * ae) / C29679 - (0 * be) / C29683) /
            (2 * C29679) +
        ((C29698 * (((C30757 - (C29698 * 2 * C29701) / C29679) * ae) / C29679 -
                    C29699 / C29683) +
          C18610) *
         ae) /
            C29679 +
        (0 * ae) / C29679 - C29701 / C29681;
    const double C5473 =
        (4 * (2 * C29953 + C29889 * C29963) +
         C29889 *
             (3 * C29963 + C29889 * (2 * C29889 * C29764 +
                                     C29889 * (C29764 + C29788 * C29898)))) /
        C29681;
    const double C166 = C150 - C151;
    const double C13281 = C328 - C329;
    const double C13279 = C329 - C328;
    const double C4827 = C4815 - C4816;
    const double C131 =
        (2 * (C29720 * C29819 + C30099 * ae) +
         C29720 * (C29819 + C29720 * C29825 + C29720 * C29816 * ae) +
         (C30099 + C29816 * C29745) * ae) /
        C29679;
    const double C302 =
        (C29889 * (C29819 + C29720 * C29825 + C30104 * ae)) / C29679;
    const double C306 =
        (C29720 * C29819 + C30099 * ae + C29825 * C29898) / C29679;
    const double C483 =
        (C29719 * (C29819 + C29720 * C29825 + C30104 * ae)) / C29679;
    const double C487 =
        (C29720 * C29819 + C30099 * ae + C29825 * C29931) / C29679;
    const double C914 = (C29719 * C29889 * C29825) / C29679;
    const double C517 = C30757 * C486;
    const double C18979 = C18610 * C486;
    const double C18974 = C18611 * C486;
    const double C927 = C30757 * C913;
    const double C18796 = C18611 * C913;
    const double C19473 = C18610 * C913;
    const double C337 = C113 * C291;
    const double C18802 = C18612 * C291;
    const double C518 = C113 * C472;
    const double C18980 = C18612 * C472;
    const double C18973 = C18613 * C472;
    const double C928 = C113 * C907;
    const double C18795 = C18613 * C907;
    const double C19474 = C18612 * C907;
    const double C1403 = C113 * C1125;
    const double C19993 = C18612 * C1125;
    const double C1561 = C113 * C1262;
    const double C18804 = C18613 * C1262;
    const double C20195 = C18612 * C1262;
    const double C2257 = C113 * C1969;
    const double C18982 = C18613 * C1969;
    const double C21039 = C18612 * C1969;
    const double C5618 = C30757 * C1267;
    const double C24988 = C18611 * C1267;
    const double C25383 = C18610 * C1267;
    const double C6676 = C30757 * C2365;
    const double C25385 = C18611 * C2365;
    const double C26698 = C18610 * C2365;
    const double C5619 = C113 * C1258;
    const double C24987 = C18613 * C1258;
    const double C25384 = C18612 * C1258;
    const double C6675 = C113 * C2362;
    const double C25386 = C18613 * C2362;
    const double C26697 = C18612 * C2362;
    const double C1980 =
        (3 * (C29732 + C29719 * C30231 + C30229 * be) +
         C29719 * (2 * C30231 +
                   C29719 * (C29739 + C29719 * (C29719 * C29749 + C29828 * be) +
                             C29719 * C29828 * be) +
                   C30232 * be) +
         (2 * C30229 + C29719 * C30232) * be) /
        C29679;
    const double C168 = C154 - C155;
    const double C352 = C332 - C333;
    const double C13285 = C333 - C332;
    const double C533 = C513 - C514;
    const double C5476 = C4819 - C4820;
    const double C5616 = C5292 - C5293;
    const double C167 = C152 - C153;
    const double C13282 = C330 - C331;
    const double C13280 = C331 - C330;
    const double C4828 = C4817 - C4818;
    const double C132 = (3 * (C29732 + C29739 * C29745) +
                         C29720 * (2 * C29741 + C29720 * C29753)) /
                        C29679;
    const double C307 = (C29732 + C29739 * C29745 + C29753 * C29898) / C29679;
    const double C309 = (C29889 * (2 * C29741 + C29720 * C29753)) / C29679;
    const double C488 =
        (C29732 + C29739 * C29745 + C29719 * (C29719 * C29753 + C30106 * be) +
         C29719 * C30106 * be) /
        C29679;
    const double C490 = (C29719 * (2 * C29741 + C29720 * C29753) +
                         (2 * C30104 + C29720 * C30106) * be) /
                        C29679;
    const double C915 =
        (C29719 * C29889 * C29753 + C29889 * C30106 * be) / C29679;
    const double C1134 =
        (2 * C29889 * C29753 + C29889 * (C29753 + C29769 * C29898)) / C29679;
    const double C29770 = C29720 * C29768;
    const double C29775 = 2 * C29768;
    const double C29938 = C29719 * C29768;
    const double C29956 = C29889 * C29768;
    const double C29763 = C29748 + C29759;
    const double C30239 = C30235 + C30236;
    const double C1404 = C30757 * C1132;
    const double C19994 = C18610 * C1132;
    const double C5747 = C30757 * C1138;
    const double C1562 = C30757 * C1275;
    const double C18803 = C18611 * C1275;
    const double C20196 = C18610 * C1275;
    const double C2258 = C30757 * C1976;
    const double C18981 = C18611 * C1976;
    const double C21040 = C18610 * C1976;
    const double C5469 =
        (4 * (2 * C30256 + C29889 * C30269) +
         C29889 *
             (3 * C30269 + C29889 * (2 * C29889 * C29749 +
                                     C29889 * (C29749 + C29765 * C29898)))) /
        C29679;
    const double C30314 = C30310 + C30311;
    const double C30345 = C29719 * C30341;
    const double C30352 = 2 * C30341;
    const double C142 =
        (3 * (C29738 + ae * C29741 + C29720 * C29752) +
         ae * (2 * C29741 + C29720 * C29753) +
         C29720 *
             (2 * C29752 + ae * C29753 +
              C29720 * (C29748 + ae * C29720 * C29749 +
                        C29720 * (ae * C29749 + C29720 * std::pow(C29722, 6) *
                                                    bs[6] * C29731)))) /
        C29681;
    const double C319 =
        ((yP - yQ) * (C29738 + ae * C29741 + C29720 * C29752)) / C29681;
    const double C321 =
        (ae * C29732 + C29720 * C29738 + C29752 * std::pow(yP - yQ, 2)) /
        C29681;
    const double C500 =
        (be * (C29728 * C29725 * C29815 +
               C29720 * (C29720 * C29734 * C29735 * C29815 + C29816 * ae) +
               C29720 * C29816 * ae) +
         C29719 * (C29738 + ae * C29741 + C29720 * C29752)) /
        C29681;
    const double C502 = (ae * C29732 + C29720 * C29738 + be * C29719 * C29825 +
                         C29719 * (be * C29825 + C29719 * C29752)) /
                        C29681;
    const double C922 =
        (be * C29889 * C29825 + C29719 * C29889 * C29752) / C29681;
    const double C1143 = (2 * C29889 * C29752 +
                          C29889 * (C29752 + C29768 * std::pow(C29889, 2))) /
                         C29681;
    const double C5477 = C4821 - C4822;
    const double C5617 = C5294 - C5295;
    const double C29835 = C29720 * C29834;
    const double C29840 = 2 * C29834;
    const double C29904 = C29889 * C29834;
    const double C29937 = be * C29834;
    const double C29936 = C29719 * C29834;
    const double C1289 = (be * (C29825 + C29834 * C29898) +
                          C29719 * (C29752 + C29768 * C29898)) /
                         C29681;
    const double C1987 = (2 * (be * C29825 + C29719 * C29752) +
                          be * (C29825 + C29834 * std::pow(C29719, 2)) +
                          C29719 * (C29752 + be * C29719 * C29834 +
                                    C29719 * (be * C29834 + C29719 * C29768))) /
                         C29681;
    const double C1133 =
        (2 * C29889 * C29825 + C29889 * (C29825 + C29834 * C29898)) / C29679;
    const double C1276 = (C29719 * (C29825 + C29834 * C29898)) / C29679;
    const double C1977 =
        (2 * C29719 * C29825 + C29719 * (C29825 + C29834 * C29931)) / C29679;
    const double C1291 =
        (C29738 + C29748 * C29898 + be * C29719 * C29912 +
         C29719 * (be * C29912 + C29719 * (C29748 + C29764 * C29898))) /
        C29681;
    const double C1675 =
        (be * (2 * C29902 + C29889 * C29912) +
         C29719 * (2 * C29889 * C29748 + C29889 * (C29748 + C29764 * C29898))) /
        C29681;
    const double C1137 = (3 * (C29819 + C29823 * C29898) +
                          C29889 * (2 * C29902 + C29889 * C29912)) /
                         C29679;
    const double C1280 = (C29819 + C29823 * C29898 + C29912 * C29931) / C29679;
    const double C1670 = (C29719 * (2 * C29902 + C29889 * C29912)) / C29679;
    const double C6308 =
        (2 * C29719 * C29912 + C29719 * (C29912 + C29974 * C29931)) / C29679;
    const double C1989 =
        (3 * (C29738 + be * C29928 + C29719 * C29932) +
         be * (2 * C29928 + C29719 * C29934) +
         C29719 * (2 * C29932 + be * C29934 +
                   C29719 * (C29748 + be * C29719 * C29829 +
                             C29719 * (be * C29829 + C29719 * C29764)))) /
        C29681;
    const double C1981 = (3 * (C29819 + C29823 * C29931) +
                          C29719 * (2 * C29928 + C29719 * C29934)) /
                         C29679;
    const double C29999 = C29996 + C29997;
    const double C6678 = C30757 * C2371;
    const double C25389 = C18611 * C2371;
    const double C26702 = C18610 * C2371;
    const double C6677 = C113 * C2366;
    const double C25390 = C18613 * C2366;
    const double C26701 = C18612 * C2366;
    const double C30026 = C29719 * C30022;
    const double C30031 = 2 * C30022;
    const double C30025 = C29748 + C30021;
    const double C29851 = C29849 * ae;
    const double C30110 = C29720 * C29849;
    const double C30114 = 3 * C29849;
    const double C30190 = C29889 * C29849;
    const double C30245 = C29719 * C29849;
    const double C30244 = C29849 * be;
    const double C1277 = (C29719 * (C29753 + C29769 * C29898) +
                          (C30106 + C29849 * C29898) * be) /
                         C29679;
    const double C1978 =
        (2 * (C29719 * C29753 + C30106 * be) +
         C29719 * (C29753 + C29719 * (C29719 * C29769 + C29849 * be) +
                   C29719 * C29849 * be) +
         (C30106 + C29849 * C29931) * be) /
        C29679;
    const double C1126 =
        2 * C29889 * C30106 + C29889 * (C30106 + C29849 * C29898);
    const double C1263 = C29719 * (C30106 + C29849 * C29898);
    const double C1970 =
        2 * C29719 * C30106 + C29719 * (C30106 + C29849 * C29931);
    const double C30204 = C29831 + C30203;
    const double C30240 = C29831 + C30238;
    const double C30326 = 2 * C30261;
    const double C30377 = C29719 * C30261;
    const double C30376 = C30261 * be;
    const double C2367 =
        (2 * (C29719 * C30260 + C30187 * be) +
         C29719 * (C30260 + C29719 * (C29719 * C29889 * C29777 + C30261 * be) +
                   C29719 * C30261 * be) +
         (C30187 + C30261 * C29931) * be) /
        C29679;
    const double C2363 =
        2 * C29719 * C30187 + C29719 * (C30187 + C30261 * C29931);
    const double C30392 = 2 * C30387;
    const double C30390 = C30387 * be;
    const double C30389 = C30385 + C30386;
    const double C29852 = C29720 * C29850;
    const double C29861 = 2 * C29850;
    const double C29914 = C29850 * C29898;
    const double C29939 = C29850 * C29931;
    const double C29957 = C29889 * C29850;
    const double C30063 = be * C29850;
    const double C30062 = C29719 * C29850;
    const double C30283 = C29889 * C30282;
    const double C30289 = 3 * C30282;
    const double C30320 = C29719 * C30282;
    const double C30319 = C30282 * be;
    const double C6307 =
        (2 * (C29719 * C30269 + C30200 * be) +
         C29719 * (C30269 + C29719 * (C29719 * C30275 + C30282 * be) +
                   C29719 * C30282 * be) +
         (C30200 + C30282 * C29931) * be) /
        C29679;
    const double C6304 =
        2 * C29719 * C30200 + C29719 * (C30200 + C30282 * C29931);
    const double C30315 = C30257 + C30313;
    const double C30407 = 2 * C30402;
    const double C30405 = C30402 * be;
    const double C30408 = C30404 + C30401;
    const double C30346 = C29719 * C30343;
    const double C30358 = 3 * C30343;
    const double C30356 = C30343 * be;
    const double C30363 = C29719 * C30359;
    const double C29795 = C29720 * C29793;
    const double C1140 =
        (3 * (C29753 + C29769 * C29898) +
         C29889 * (2 * C29889 * C29769 + C29889 * (C29769 + C29793 * C29898))) /
        C29679;
    const double C29794 = C29720 * C29792;
    const double C29989 = C29792 * C29898;
    const double C30055 = C29889 * C29792;
    const double C30064 = C29719 * C29792;
    const double C1146 =
        (3 * (C29752 + C29768 * C29898) +
         C29889 * (2 * C29889 * C29768 + C29889 * (C29768 + C29792 * C29898))) /
        C29681;
    const double C29969 = C29889 * C29968;
    const double C30004 = C29719 * C29968;
    const double C6313 =
        (2 * (be * C29912 + C29719 * C29963) + be * (C29912 + C29974 * C29931) +
         C29719 * (C29963 + be * C29719 * C29974 +
                   C29719 * (be * C29974 + C29719 * C29968))) /
        C29681;
    const double C30044 = C29719 * C30040;
    const double C30085 = C30077 + C30081;
    const double C29875 = C29720 * C29872;
    const double C30010 = C29872 * C29898;
    const double C30056 = C29889 * C29872;
    const double C30065 = C29872 * C29931;
    const double C29984 = C29889 * C29983;
    const double C30005 = C29983 * C29931;
    const double C30045 = C29719 * C30042;
    const double C30086 = C29980 + C30083;
    const double C2144 = C30757 * C1269;
    const double C19475 = C18611 * C1269;
    const double C20902 = C18610 * C1269;
    const double C2143 = C113 * C1259;
    const double C19476 = C18613 * C1259;
    const double C20901 = C18612 * C1259;
    const double C159 = C113 * C121;
    const double C18639 = C18612 * C121;
    const double C341 = C113 * C292;
    const double C18817 = C18612 * C292;
    const double C345 = C113 * C293;
    const double C19133 = C18612 * C293;
    const double C522 = C113 * C473;
    const double C18995 = C18612 * C473;
    const double C18990 = C18613 * C473;
    const double C526 = C113 * C474;
    const double C18634 = C18613 * C474;
    const double C19271 = C18612 * C474;
    const double C932 = C113 * C908;
    const double C18812 = C18613 * C908;
    const double C19481 = C18612 * C908;
    const double C5622 = C30757 * C1279;
    const double C25400 = C18610 * C1279;
    const double C25393 = C18611 * C1279;
    const double C5626 = C30757 * C1669;
    const double C25223 = C18611 * C1669;
    const double C25862 = C18610 * C1669;
    const double C5479 = C113 * C1127;
    const double C25229 = C18612 * C1127;
    const double C5623 = C113 * C1264;
    const double C25399 = C18612 * C1264;
    const double C25394 = C18613 * C1264;
    const double C5627 = C113 * C1666;
    const double C25224 = C18613 * C1666;
    const double C25861 = C18612 * C1666;
    const double C29773 = C29761 + C29771;
    const double C5740 =
        (4 * (2 * C30260 + C29889 * C30301) +
         C29889 * (3 * C30301 +
                   C29889 * (2 * C29889 * C29777 +
                             C29889 * (C29777 + C29720 * C29789 * C29898)))) /
        C29679;
    const double C30277 = C30274 + C30276;
    const double C29976 = C29972 + C29975;
    const double C6310 = (3 * (C29902 + C29954 * C29931) +
                          C29719 * (2 * C29995 + C29719 * C30000)) /
                         C29679;
    const double C30084 = C29965 + C30080;
    const double C30029 = C30023 + C30027;
    const double C29876 = C29864 + C29874;
    const double C30208 = C29849 + C30207;
    const double C30248 = C29849 + C30246;
    const double C30329 = C29889 * C30328;
    const double C30382 = C30261 + C30380;
    const double C30394 = C29719 * C30391;
    const double C30295 = C30292 + C30294;
    const double C30323 = C30282 + C30321;
    const double C30366 = C30362 + C30364;
    const double C30411 = C29719 * C30409;
    const double C30536 = C30535 / C30526;
    const double C30835 = 2 * C30801;
    const double C30545 = C30544 / C30523;
    const double C30839 = C30805 / C30541;
    const double C30864 = C30799 - C30834;
    const double C2580 = -C30834;
    const double C30878 = C30863 + C30533;
    const double C30618 = C30617 / C30526;
    const double C30843 = 2 * C30810;
    const double C30625 = C30624 / C30523;
    const double C30853 = C30819 / C30541;
    const double C30872 = C30813 - C30850;
    const double C2472 = -C30850;
    const double C30881 = C30868 + C30614;
    const double C30660 = C30659 / C30526;
    const double C30846 = 2 * C30812;
    const double C30667 = C30666 / C30523;
    const double C30859 = C30825 / C30541;
    const double C30875 = C30814 - C30856;
    const double C3234 = -C30856;
    const double C30882 = C30870 + C30656;
    const double C5485 = C30757 * C5473;
    const double C4832 = C4827 * C4699;
    const double C156 = C113 * C131;
    const double C18636 = C18612 * C131;
    const double C334 = C113 * C302;
    const double C18814 = C18612 * C302;
    const double C339 = C113 * C306;
    const double C18806 = C18612 * C306;
    const double C515 = C113 * C483;
    const double C18629 = C18613 * C483;
    const double C18992 = C18612 * C483;
    const double C520 = C113 * C487;
    const double C18984 = C18612 * C487;
    const double C18977 = C18613 * C487;
    const double C930 = C113 * C914;
    const double C18799 = C18613 * C914;
    const double C19478 = C18612 * C914;
    const double C4823 = C337 - C336;
    const double C13283 = C336 - C337;
    const double C13893 = C927 - C928;
    const double C13891 = C928 - C927;
    const double C5486 = C5476 * C4699;
    const double C5634 = C5616 * C4699;
    const double C4833 = C4828 * C30508;
    const double C158 = C30757 * C132;
    const double C18640 = C18610 * C132;
    const double C340 = C30757 * C307;
    const double C18818 = C18610 * C307;
    const double C344 = C30757 * C309;
    const double C19134 = C18610 * C309;
    const double C521 = C30757 * C488;
    const double C18996 = C18610 * C488;
    const double C18989 = C18611 * C488;
    const double C525 = C30757 * C490;
    const double C18633 = C18611 * C490;
    const double C19272 = C18610 * C490;
    const double C931 = C30757 * C915;
    const double C18811 = C18611 * C915;
    const double C19482 = C18610 * C915;
    const double C1408 = C30757 * C1134;
    const double C29782 = C29775 + C29776;
    const double C29772 = C29763 + C29770;
    const double C5744 = C1404 - C1403;
    const double C14401 = C1403 - C1404;
    const double C5903 = C1562 - C1561;
    const double C14597 = C1561 - C1562;
    const double C5483 = C30757 * C5469;
    const double C30347 = C29739 + C30345;
    const double C160 = C30757 * C142;
    const double C18644 = C18610 * C142;
    const double C335 = C30757 * C319;
    const double C18813 = C18610 * C319;
    const double C338 = C30757 * C321;
    const double C18805 = C18610 * C321;
    const double C516 = C30757 * C500;
    const double C18630 = C18611 * C500;
    const double C18991 = C18610 * C500;
    const double C519 = C30757 * C502;
    const double C18983 = C18610 * C502;
    const double C18978 = C18611 * C502;
    const double C929 = C30757 * C922;
    const double C18800 = C18611 * C922;
    const double C19477 = C18610 * C922;
    const double C1406 = C30757 * C1143;
    const double C19998 = C18610 * C1143;
    const double C5487 = C5477 * C30508;
    const double C5635 = C5617 * C30508;
    const double C29836 = C29823 + C29835;
    const double C1286 = (C29889 * C29752 + be * C29719 * C29904 +
                          C29719 * (be * C29904 + C29719 * C29889 * C29768)) /
                         C29681;
    const double C1270 = (C29889 * C29825 + C29904 * C29931) / C29679;
    const double C29940 = C29937 + C29938;
    const double C1564 = C30757 * C1289;
    const double C18807 = C18611 * C1289;
    const double C20200 = C18610 * C1289;
    const double C2260 = C30757 * C1987;
    const double C18985 = C18611 * C1987;
    const double C21044 = C18610 * C1987;
    const double C1405 = C113 * C1133;
    const double C19997 = C18612 * C1133;
    const double C1563 = C113 * C1276;
    const double C18808 = C18613 * C1276;
    const double C20199 = C18612 * C1276;
    const double C2259 = C113 * C1977;
    const double C18986 = C18613 * C1977;
    const double C21043 = C18612 * C1977;
    const double C5624 = C30757 * C1291;
    const double C25404 = C18610 * C1291;
    const double C25397 = C18611 * C1291;
    const double C5628 = C30757 * C1675;
    const double C25227 = C18611 * C1675;
    const double C25866 = C18610 * C1675;
    const double C5481 = C113 * C1137;
    const double C25233 = C18612 * C1137;
    const double C5625 = C113 * C1280;
    const double C25403 = C18612 * C1280;
    const double C25398 = C18613 * C1280;
    const double C5629 = C113 * C1670;
    const double C25228 = C18613 * C1670;
    const double C25865 = C18612 * C1670;
    const double C6681 = C113 * C6308;
    const double C25405 = C18613 * C6308;
    const double C6314 =
        (3 * (C29953 + be * C29995 + C29719 * C29999) +
         be * (2 * C29995 + C29719 * C30000) +
         C29719 *
             (2 * C29999 + be * C30000 +
              C29719 * (C29965 + be * C29719 * C29980 +
                        C29719 * (be * C29980 + C29719 * C29889 * C29788)))) /
        C29681;
    const double C30038 = C30031 + C30032;
    const double C30028 = C30025 + C30026;
    const double C30111 = C30109 + C30110;
    const double C1271 =
        (C29889 * C29753 + C29719 * (C29719 * C29889 * C29769 + C30190 * be) +
         C29719 * C30190 * be) /
        C29679;
    const double C2369 =
        (2 * (C29719 * C30264 + C30190 * be) +
         C29719 * (C30264 + C29719 * (C29719 * C29889 * C29793 + C30265 * be) +
                   C29719 * C30265 * be) +
         (C30190 + C30265 * C29931) * be) /
        C29679;
    const double C1260 = C29889 * C30106 + C30190 * C29931;
    const double C2364 =
        2 * C29719 * C30190 + C29719 * (C30190 + C30265 * C29931);
    const double C30247 = C30243 + C30244;
    const double C1566 = C30757 * C1277;
    const double C18820 = C18611 * C1277;
    const double C2262 = C30757 * C1978;
    const double C18998 = C18611 * C1978;
    const double C1407 = C113 * C1126;
    const double C1565 = C113 * C1263;
    const double C18819 = C18613 * C1263;
    const double C2261 = C113 * C1970;
    const double C18997 = C18613 * C1970;
    const double C1281 =
        (C29741 + C29755 * C29898 +
         C29719 * (C29719 * (C29755 + C29777 * C29898) + C30204 * be) +
         C29719 * C30204 * be) /
        C29679;
    const double C1671 =
        (C29719 * (2 * C29889 * C29755 + C29889 * (C29755 + C29777 * C29898)) +
         (2 * C30187 + C29889 * C30204) * be) /
        C29679;
    const double C5899 =
        (C29719 * (3 * C30301 +
                   C29889 * (2 * C29889 * C29777 +
                             C29889 * (C29777 + C29720 * C29789 * C29898))) +
         (3 * C30204 +
          C29889 * (2 * C30261 + C29889 * (C29845 + C29867 * C29898))) *
             be) /
        C29679;
    const double C6569 =
        (2 * (C29719 * C30301 + C30204 * be) +
         C29719 * (C30301 +
                   C29719 * (C29719 * (C29777 + C29720 * C29789 * C29898) +
                             C30328 * be) +
                   C29719 * C30328 * be) +
         (C30204 + C30328 * C29931) * be) /
        C29679;
    const double C1128 = 3 * (C30104 + C29831 * C29898) +
                         C29889 * (2 * C30187 + C29889 * C30204);
    const double C1265 = C30104 + C29831 * C29898 + C30204 * C29931;
    const double C1667 = C29719 * (2 * C30187 + C29889 * C30204);
    const double C6568 =
        2 * C29719 * C30204 + C29719 * (C30204 + C30328 * C29931);
    const double C1982 =
        (3 * (C29741 + C29719 * C30239 + C30237 * be) +
         C29719 * (2 * C30239 +
                   C29719 * (C29755 + C29719 * (C29719 * C29777 + C29845 * be) +
                             C29719 * C29845 * be) +
                   C30240 * be) +
         (2 * C30237 + C29719 * C30240) * be) /
        C29679;
    const double C1972 = 3 * (C30104 + C29831 * C29931) +
                         C29719 * (2 * C30237 + C29719 * C30240);
    const double C30381 = C30379 + C30376;
    const double C15432 = C30757 * C2367;
    const double C20904 = C18611 * C2367;
    const double C15431 = C113 * C2363;
    const double C20903 = C18613 * C2363;
    const double C30393 = C29719 * C30389;
    const double C29853 = C29829 + C29852;
    const double C29915 = C29834 + C29914;
    const double C29941 = C29834 + C29939;
    const double C30009 = 2 * C29957;
    const double C30054 = be * C29957;
    const double C30053 = C29719 * C29957;
    const double C2372 =
        (2 * (be * C29904 + C29719 * C29956) + be * (C29904 + C29957 * C29931) +
         C29719 * (C29956 + be * C29719 * C29957 +
                   C29719 * (be * C29957 + C29719 * C29889 * C29792))) /
        C29681;
    const double C2368 =
        (2 * C29719 * C29904 + C29719 * (C29904 + C29957 * C29931)) / C29679;
    const double C30068 = 2 * C30062;
    const double C30066 = be * C30062;
    const double C30284 = C30280 + C30283;
    const double C30322 = C30318 + C30319;
    const double C6680 = C30757 * C6307;
    const double C25402 = C18611 * C6307;
    const double C6679 = C113 * C6304;
    const double C25401 = C18613 * C6304;
    const double C6309 =
        (3 * (C30256 + C29719 * C30314 + C30312 * be) +
         C29719 * (2 * C30314 +
                   C29719 * (C30272 +
                             C29719 * (C29719 * C29889 * C29765 + C30290 * be) +
                             C29719 * C30290 * be) +
                   C30315 * be) +
         (2 * C30312 + C29719 * C30315) * be) /
        C29679;
    const double C6305 = 3 * (C30184 + C30257 * C29931) +
                         C29719 * (2 * C30312 + C29719 * C30315);
    const double C30410 = C29719 * C30408;
    const double C30348 = C30344 + C30346;
    const double C30365 = C29749 + C30363;
    const double C29797 = C29785 + C29795;
    const double C29796 = C29787 + C29794;
    const double C29990 = C29768 + C29989;
    const double C30057 = C29719 * C30055;
    const double C30067 = C30063 + C30064;
    const double C5749 = C30757 * C1146;
    const double C29970 = C29967 + C29969;
    const double C30006 = C30003 + C30004;
    const double C6682 = C30757 * C6313;
    const double C25406 = C18611 * C6313;
    const double C30046 = C30043 + C30044;
    const double C30087 = C29719 * C30085;
    const double C29877 = C29843 + C29875;
    const double C30011 = C29850 + C30010;
    const double C30058 = C30056 * C29931;
    const double C30069 = C29850 + C30065;
    const double C29985 = C29982 + C29984;
    const double C30007 = C29974 + C30005;
    const double C30047 = C30041 + C30045;
    const double C30088 = C29719 * C30086;
    const double C15299 = C2143 - C2144;
    const double C15297 = C2144 - C2143;
    const double C5488 = C5478 - C5479;
    const double C5636 = C5622 - C5623;
    const double C6014 = C5626 - C5627;
    const double C134 = (4 * (2 * C29741 + C29720 * C29753) +
                         C29720 * (3 * C29753 + C29720 * C29773)) /
                        C29679;
    const double C311 =
        (2 * C29741 + C29720 * C29753 + C29773 * C29898) / C29679;
    const double C313 = (C29889 * (3 * C29753 + C29720 * C29773)) / C29679;
    const double C5471 =
        (5 * (3 * C30269 + C29889 * C30277) +
         C29889 * (4 * C30277 +
                   C29889 * (3 * C30275 +
                             C29889 * (2 * C29889 * C29765 +
                                       C29889 * (C29765 + C29789 * C29898))))) /
        C29679;
    const double C5470 = (4 * (2 * C29902 + C29889 * C29912) +
                          C29889 * (3 * C29912 + C29889 * C29976)) /
                         C29679;
    const double C5607 =
        (2 * C29902 + C29889 * C29912 + C29976 * C29931) / C29679;
    const double C5609 = (C29719 * (3 * C29912 + C29889 * C29976)) / C29679;
    const double C26703 = C18613 * C6310;
    const double C10453 = (4 * (2 * C29928 + C29719 * C29934) +
                           C29719 * (3 * C29934 + C29719 * C30029)) /
                          C29679;
    const double C29878 = C29876 * ae;
    const double C30115 = C29720 * C29876;
    const double C30251 = C29889 * C29876;
    const double C1283 =
        (C29753 + C29769 * C29898 +
         C29719 * (C29719 * (C29769 + C29793 * C29898) + C30208 * be) +
         C29719 * C30208 * be) /
        C29679;
    const double C1673 =
        (C29719 * (2 * C29889 * C29769 + C29889 * (C29769 + C29793 * C29898)) +
         (2 * C30190 + C29889 * C30208) * be) /
        C29679;
    const double C1129 = 3 * (C30106 + C29849 * C29898) +
                         C29889 * (2 * C30190 + C29889 * C30208);
    const double C1266 = C30106 + C29849 * C29898 + C30208 * C29931;
    const double C1668 = C29719 * (2 * C30190 + C29889 * C30208);
    const double C1973 = 3 * (C30106 + C29849 * C29931) +
                         C29719 * (2 * C30245 + C29719 * C30248);
    const double C30330 = C30326 + C30329;
    const double C10604 = 3 * (C30187 + C30261 * C29931) +
                          C29719 * (2 * C30377 + C29719 * C30382);
    const double C30396 = C30392 + C30394;
    const double C30296 = C29889 * C30295;
    const double C6306 = 3 * (C30200 + C30282 * C29931) +
                         C29719 * (2 * C30320 + C29719 * C30323);
    const double C30368 = C29719 * C30366;
    const double C30413 = C30407 + C30411;
    const double C30537 = C30533 - C30536;
    const double C30865 = C30835 / C30523;
    const double C30546 = C30542 - C30545;
    const double C30879 = C30864 / C30527;
    const double C30619 = C30614 - C30618;
    const double C30869 = C30843 / C30523;
    const double C30626 = C30622 - C30625;
    const double C30883 = C30872 / C30527;
    const double C30661 = C30656 - C30660;
    const double C30871 = C30846 / C30523;
    const double C30668 = C30664 - C30667;
    const double C30885 = C30875 / C30527;
    const double C169 = C156 - C157;
    const double C4829 = C4823 * C4699;
    const double C4835 = C4832 + C4833;
    const double C170 = C158 - C159;
    const double C354 = C340 - C341;
    const double C13287 = C341 - C340;
    const double C645 = C344 - C345;
    const double C13565 = C345 - C344;
    const double C535 = C521 - C522;
    const double C755 = C525 - C526;
    const double C939 = C931 - C932;
    const double C13895 = C932 - C931;
    const double C143 =
        (4 * (2 * C29752 + ae * C29753 + C29720 * C29772) +
         ae * (3 * C29753 + C29720 * C29773) +
         C29720 * (3 * C29772 + ae * C29773 +
                   C29720 * (2 * C29768 + ae * C29769 +
                             C29720 * (C29764 + ae * C29720 * C29765 +
                                       C29720 * (ae * C29765 +
                                                 C29720 * std::pow(C29724, 7) *
                                                     bs[7] * C29731))))) /
        C29681;
    const double C322 = (C29738 + ae * C29741 + C29720 * C29752 +
                         C29772 * std::pow(yP - yQ, 2)) /
                        C29681;
    const double C323 =
        ((yP - yQ) * (2 * C29752 + ae * C29753 + C29720 * C29772)) / C29681;
    const double C5750 = C5744 * C4699;
    const double C5909 = C5903 * C4699;
    const double C30349 = C30347 + C30342;
    const double C353 = C334 - C335;
    const double C13286 = C335 - C334;
    const double C4824 = C339 - C338;
    const double C13284 = C338 - C339;
    const double C534 = C515 - C516;
    const double C13894 = C929 - C930;
    const double C13892 = C930 - C929;
    const double C5490 = C5486 + C5487;
    const double C5638 = C5634 + C5635;
    const double C29837 = C29836 + C29833;
    const double C2146 = C30757 * C1286;
    const double C19479 = C18611 * C1286;
    const double C20906 = C18610 * C1286;
    const double C2145 = C113 * C1270;
    const double C19480 = C18613 * C1270;
    const double C20905 = C18612 * C1270;
    const double C5745 = C1406 - C1405;
    const double C14402 = C1405 - C1406;
    const double C5904 = C1564 - C1563;
    const double C14598 = C1563 - C1564;
    const double C5489 = C5480 - C5481;
    const double C5637 = C5624 - C5625;
    const double C6015 = C5628 - C5629;
    const double C26704 = C18611 * C6314;
    const double C10456 =
        (4 * (2 * C29932 + be * C29934 + C29719 * C30028) +
         be * (3 * C29934 + C29719 * C30029) +
         C29719 *
             (3 * C30028 + be * C30029 +
              C29719 * (2 * C30022 + be * C30024 +
                        C29719 * (C29764 + be * C29719 * C29843 +
                                  C29719 * (be * C29843 + C29719 * C29788))))) /
        C29681;
    const double C492 =
        (2 * C29741 + C29720 * C29753 +
         C29719 * (C29719 * C29773 + C30111 * be) + C29719 * C30111 * be) /
        C29679;
    const double C494 = (C29719 * (3 * C29753 + C29720 * C29773) +
                         (3 * C30106 + C29720 * C30111) * be) /
                        C29679;
    const double C917 =
        (C29719 * C29889 * C29773 + C29889 * C30111 * be) / C29679;
    const double C122 = 4 * (2 * C30104 + C29720 * C30106) +
                        C29720 * (3 * C30106 + C29720 * C30111);
    const double C294 = 2 * C30104 + C29720 * C30106 + C30111 * C29898;
    const double C295 = C29889 * (3 * C30106 + C29720 * C30111);
    const double C475 = 2 * C30104 + C29720 * C30106 + C30111 * C29931;
    const double C476 = C29719 * (3 * C30106 + C29720 * C30111);
    const double C909 = C29719 * C29889 * C30111;
    const double C1398 =
        2 * C29889 * C30111 + C29889 * (C30111 + C29876 * C29898);
    const double C1556 = C29719 * (C30111 + C29876 * C29898);
    const double C2252 =
        2 * C29719 * C30111 + C29719 * (C30111 + C29876 * C29931);
    const double C2148 = C30757 * C1271;
    const double C19484 = C18611 * C1271;
    const double C2147 = C113 * C1260;
    const double C19483 = C18613 * C1260;
    const double C1984 =
        (3 * (C29753 + C29719 * C30247 + C30245 * be) +
         C29719 * (2 * C30247 +
                   C29719 * (C29769 + C29719 * (C29719 * C29793 + C29871 * be) +
                             C29719 * C29871 * be) +
                   C30248 * be) +
         (2 * C30245 + C29719 * C30248) * be) /
        C29679;
    const double C6468 = C30757 * C1281;
    const double C20198 = C18611 * C1281;
    const double C5906 = C30757 * C1671;
    const double C19996 = C18611 * C1671;
    const double C5746 = C113 * C1128;
    const double C6467 = C113 * C1265;
    const double C20197 = C18613 * C1265;
    const double C5905 = C113 * C1667;
    const double C19995 = C18613 * C1667;
    const double C21042 = C18611 * C1982;
    const double C21041 = C18613 * C1972;
    const double C10605 =
        (3 * (C30260 + C29719 * C30381 + C30377 * be) +
         C29719 * (2 * C30381 +
                   C29719 * (C30375 +
                             C29719 * (C29719 * C29889 * C29720 * C29789 +
                                       C30378 * be) +
                             C29719 * C30378 * be) +
                   C30382 * be) +
         (2 * C30377 + C29719 * C30382) * be) /
        C29679;
    const double C30395 = C29755 + C30393;
    const double C29854 = C29853 + C29848;
    const double C1292 =
        (C29752 + C29768 * C29898 + be * C29719 * C29915 +
         C29719 * (be * C29915 + C29719 * (C29768 + C29792 * C29898))) /
        C29681;
    const double C1676 =
        (be * (2 * C29904 + C29889 * C29915) +
         C29719 * (2 * C29889 * C29768 + C29889 * (C29768 + C29792 * C29898))) /
        C29681;
    const double C1139 = (3 * (C29825 + C29834 * C29898) +
                          C29889 * (2 * C29904 + C29889 * C29915)) /
                         C29679;
    const double C1282 = (C29825 + C29834 * C29898 + C29915 * C29931) / C29679;
    const double C1672 = (C29719 * (2 * C29904 + C29889 * C29915)) / C29679;
    const double C1990 =
        (3 * (C29752 + be * C29936 + C29719 * C29940) +
         be * (2 * C29936 + C29719 * C29941) +
         C29719 * (2 * C29940 + be * C29941 +
                   C29719 * (C29768 + be * C29719 * C29850 +
                             C29719 * (be * C29850 + C29719 * C29792)))) /
        C29681;
    const double C1983 = (3 * (C29825 + C29834 * C29931) +
                          C29719 * (2 * C29936 + C29719 * C29941)) /
                         C29679;
    const double C15434 = C30757 * C2372;
    const double C20908 = C18611 * C2372;
    const double C15433 = C113 * C2368;
    const double C20907 = C18613 * C2368;
    const double C30070 = C29768 + C30066;
    const double C5606 =
        (2 * C30256 + C29889 * C30269 +
         C29719 * (C29719 * C30277 + C30284 * be) + C29719 * C30284 * be) /
        C29679;
    const double C5608 = (C29719 * (3 * C30269 + C29889 * C30277) +
                          (3 * C30200 + C29889 * C30284) * be) /
                         C29679;
    const double C6671 =
        (2 * (C29719 * C30277 + C30284 * be) +
         C29719 * (C30277 +
                   C29719 * (C29719 * (2 * C29889 * C29765 +
                                       C29889 * (C29765 + C29789 * C29898)) +
                             C30295 * be) +
                   C29719 * C30295 * be) +
         (C30284 + C30295 * C29931) * be) /
        C29679;
    const double C5467 = 4 * (2 * C30184 + C29889 * C30200) +
                         C29889 * (3 * C30200 + C29889 * C30284);
    const double C5603 = 2 * C30184 + C29889 * C30200 + C30284 * C29931;
    const double C5604 = C29719 * (3 * C30200 + C29889 * C30284);
    const double C6670 =
        2 * C29719 * C30284 + C29719 * (C30284 + C30295 * C29931);
    const double C6311 =
        (3 * (C30269 + C29719 * C30322 + C30320 * be) +
         C29719 * (2 * C30322 +
                   C29719 * (C30275 +
                             C29719 * (C29719 * (C29765 + C29789 * C29898) +
                                       C30293 * be) +
                             C29719 * C30293 * be) +
                   C30323 * be) +
         (2 * C30320 + C29719 * C30323) * be) /
        C29679;
    const double C26700 = C18611 * C6309;
    const double C26699 = C18613 * C6305;
    const double C30412 = C30272 + C30410;
    const double C10450 = 4 * (2 * C30229 + C29719 * C30232) +
                          C29719 * (3 * C30232 + C29719 * C30348);
    const double C30367 = C30365 + C30360;
    const double C29799 = C29720 * C29797;
    const double C1399 =
        (2 * C29889 * C29773 + C29889 * (C29773 + C29797 * C29898)) / C29679;
    const double C1557 = (C29719 * (C29773 + C29797 * C29898) +
                          (C30111 + C29876 * C29898) * be) /
                         C29679;
    const double C2253 =
        (2 * (C29719 * C29773 + C30111 * be) +
         C29719 * (C29773 + C29719 * (C29719 * C29797 + C29876 * be) +
                   C29719 * C29876 * be) +
         (C30111 + C29876 * C29931) * be) /
        C29679;
    const double C29798 = C29720 * C29796;
    const double C29945 = C29719 * C29796;
    const double C29959 = C29889 * C29796;
    const double C1144 = (2 * C29889 * C29772 +
                          C29889 * (C29772 + C29796 * std::pow(C29889, 2))) /
                         C29681;
    const double C1147 =
        (3 * (C29772 + C29796 * C29898) +
         C29889 * (2 * C29889 * C29796 +
                   C29889 * (C29796 + (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)) *
                                          C29898))) /
        C29681;
    const double C5742 =
        (4 * (2 * C29956 + C29889 * C29990) +
         C29889 * (3 * C29990 +
                   C29889 * (2 * C29889 * C29792 +
                             C29889 * (C29792 + (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731) *
                                                    C29898)))) /
        C29681;
    const double C5901 =
        (be * (3 * C29915 +
               C29889 * (2 * C29957 + C29889 * (C29850 + C29872 * C29898))) +
         C29719 * (3 * C29990 +
                   C29889 * (2 * C29889 * C29792 +
                             C29889 * (C29792 + (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731) *
                                                    C29898)))) /
        C29681;
    const double C30059 = C30054 + C30057;
    const double C30071 = C29719 * C30067;
    const double C5474 =
        (5 * (3 * C29963 + C29889 * C29970) +
         C29889 * (4 * C29970 +
                   C29889 * (3 * C29968 +
                             C29889 * (2 * C29889 * C29788 +
                                       C29889 * (C29788 + std::pow(C29722, 8) *
                                                              bs[8] * C29731 *
                                                              C29898))))) /
        C29681;
    const double C5612 = (2 * C29953 + C29889 * C29963 + be * C29719 * C29976 +
                          C29719 * (be * C29976 + C29719 * C29970)) /
                         C29681;
    const double C5613 = (be * (3 * C29912 + C29889 * C29976) +
                          C29719 * (3 * C29963 + C29889 * C29970)) /
                         C29681;
    const double C30048 = C29719 * C30046;
    const double C30089 = C30084 + C30087;
    const double C29879 = C29877 + C29870;
    const double C30012 = C29889 * C30011;
    const double C6571 =
        (2 * (be * C29915 + C29719 * C29990) + be * (C29915 + C30011 * C29931) +
         C29719 * (C29990 + be * C29719 * C30011 +
                   C29719 * (be * C30011 +
                             C29719 * (C29792 + (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731) *
                                                    C29898)))) /
        C29681;
    const double C6570 =
        (2 * C29719 * C29915 + C29719 * (C29915 + C30011 * C29931)) / C29679;
    const double C30060 = C29957 + C30058;
    const double C30072 = C29719 * C30069;
    const double C29986 = C29889 * C29985;
    const double C6673 =
        (2 * (be * C29976 + C29719 * C29970) + be * (C29976 + C29985 * C29931) +
         C29719 * (C29970 + be * C29719 * C29985 +
                   C29719 * (be * C29985 +
                             C29719 * (2 * C29889 * C29788 +
                                       C29889 * (C29788 + std::pow(C29722, 8) *
                                                              bs[8] * C29731 *
                                                              C29898))))) /
        C29681;
    const double C6672 =
        (2 * C29719 * C29976 + C29719 * (C29976 + C29985 * C29931)) / C29679;
    const double C6315 =
        (3 * (C29963 + be * C30002 + C29719 * C30006) +
         be * (2 * C30002 + C29719 * C30007) +
         C29719 * (2 * C30006 + be * C30007 +
                   C29719 * (C29968 + be * C29719 * C29983 +
                             C29719 * (be * C29983 +
                                       C29719 * (C29788 + std::pow(C29722, 8) *
                                                              bs[8] * C29731 *
                                                              C29898))))) /
        C29681;
    const double C6312 = (3 * (C29912 + C29974 * C29931) +
                          C29719 * (2 * C30002 + C29719 * C30007)) /
                         C29679;
    const double C30049 = C29719 * C30047;
    const double C30090 = C30082 + C30088;
    const double C5491 = C5488 * C4699;
    const double C5639 = C5636 * C4699;
    const double C6020 = C6014 * C4699;
    const double C163 = C30757 * C134;
    const double C349 = C30757 * C311;
    const double C648 = C30757 * C313;
    const double C5484 = C113 * C5470;
    const double C5632 = C113 * C5607;
    const double C25867 = C18613 * C5607;
    const double C6018 = C113 * C5609;
    const double C25235 = C18613 * C5609;
    const double C30116 = C30114 + C30115;
    const double C2139 =
        (C29889 * C29773 + C29719 * (C29719 * C29889 * C29797 + C30251 * be) +
         C29719 * C30251 * be) /
        C29679;
    const double C2138 = C29889 * C30111 + C30251 * C29931;
    const double C6463 =
        (2 * C30260 + C29889 * C30301 +
         C29719 * (C29719 * (2 * C29889 * C29777 +
                             C29889 * (C29777 + C29720 * C29789 * C29898)) +
                   C30330 * be) +
         C29719 * C30330 * be) /
        C29679;
    const double C5739 = 4 * (2 * C30187 + C29889 * C30204) +
                         C29889 * (3 * C30204 + C29889 * C30330);
    const double C5898 = C29719 * (3 * C30204 + C29889 * C30330);
    const double C6462 = 2 * C30187 + C29889 * C30204 + C30330 * C29931;
    const double C10706 = 4 * (2 * C30237 + C29719 * C30240) +
                          C29719 * (3 * C30240 + C29719 * C30396);
    const double C30297 = C30289 + C30296;
    const double C30370 = C30358 + C30368;
    const double C10808 = 4 * (2 * C30312 + C29719 * C30315) +
                          C29719 * (3 * C30315 + C29719 * C30413);
    const double C30798 = C30537 * C30525;
    const double C30837 = C30803 + C30537;
    const double C30806 = C30546 / C30527;
    const double C30802 = C30546 * C30525;
    const double C636 = C30879 - (C30537 * C30528) / C30523;
    const double C30816 = C30619 * C30613;
    const double C30852 = C30818 + C30619;
    const double C30820 = C30626 / C30527;
    const double C30817 = C30626 * C30613;
    const double C1392 = C30883 - (C30619 * C30615) / C30523;
    const double C30822 = C30661 * C30655;
    const double C30858 = C30824 + C30661;
    const double C30826 = C30668 / C30527;
    const double C30823 = C30668 * C30655;
    const double C2248 = C30885 - (C30661 * C30657) / C30523;
    const double C4825 = C354 * C4699;
    const double C165 = C30757 * C143;
    const double C342 = C30757 * C322;
    const double C18822 = C18610 * C322;
    const double C346 = C30757 * C323;
    const double C19138 = C18610 * C323;
    const double C10452 =
        (4 * (2 * C30231 + C29719 * C30349 + C30232 * be) +
         C29719 *
             (3 * C30349 +
              C29719 *
                  (2 * C30341 +
                   C29719 * (C29749 + C29719 * (C29719 * C29765 + C29842 * be) +
                             C29719 * C29842 * be) +
                   C30343 * be) +
              C30348 * be) +
         (3 * C30232 + C29719 * C30348) * be) /
        C29679;
    const double C4830 = C4824 * C30508;
    const double C503 =
        (C29738 + ae * C29741 + C29720 * C29752 + be * C29719 * C29837 +
         C29719 * (be * C29837 + C29719 * C29772)) /
        C29681;
    const double C504 =
        (be * (2 * C29825 + C29720 * C29837 + (C29816 + C29828 * C29745) * ae) +
         C29719 * (2 * C29752 + ae * C29753 + C29720 * C29772)) /
        C29681;
    const double C923 =
        (be * C29889 * C29837 + C29719 * C29889 * C29772) / C29681;
    const double C133 = (3 * (C29819 + C29720 * C29825 + C30104 * ae) +
                         C29720 * (2 * C29825 + C29720 * C29837 + C30106 * ae) +
                         (2 * C30104 + C29720 * C30106) * ae) /
                        C29679;
    const double C308 =
        (C29819 + C29720 * C29825 + C30104 * ae + C29837 * C29898) / C29679;
    const double C310 =
        (C29889 * (2 * C29825 + C29720 * C29837 + C30106 * ae)) / C29679;
    const double C489 =
        (C29819 + C29720 * C29825 + C30104 * ae + C29837 * C29931) / C29679;
    const double C491 =
        (C29719 * (2 * C29825 + C29720 * C29837 + C30106 * ae)) / C29679;
    const double C916 = (C29719 * C29889 * C29837) / C29679;
    const double C15300 = C2145 - C2146;
    const double C15298 = C2146 - C2145;
    const double C5751 = C5745 * C30508;
    const double C5910 = C5904 * C30508;
    const double C5492 = C5489 * C30508;
    const double C5640 = C5637 * C30508;
    const double C6021 = C6015 * C30508;
    const double C530 = C30757 * C492;
    const double C19274 = C18611 * C492;
    const double C758 = C30757 * C494;
    const double C18642 = C18611 * C494;
    const double C936 = C30757 * C917;
    const double C19136 = C18611 * C917;
    const double C162 = C113 * C122;
    const double C348 = C113 * C294;
    const double C647 = C113 * C295;
    const double C529 = C113 * C475;
    const double C19273 = C18613 * C475;
    const double C757 = C113 * C476;
    const double C18641 = C18613 * C476;
    const double C935 = C113 * C909;
    const double C19135 = C18613 * C909;
    const double C30397 = C30395 + C30390;
    const double C29855 = C29720 * C29854;
    const double C29860 = 3 * C29854;
    const double C29906 = C29889 * C29854;
    const double C29944 = be * C29854;
    const double C29943 = C29719 * C29854;
    const double C1290 = (be * (C29837 + C29854 * C29898) +
                          C29719 * (C29772 + C29796 * C29898)) /
                         C29681;
    const double C1988 = (2 * (be * C29837 + C29719 * C29772) +
                          be * (C29837 + C29854 * std::pow(C29719, 2)) +
                          C29719 * (C29772 + be * C29719 * C29854 +
                                    C29719 * (be * C29854 + C29719 * C29796))) /
                         C29681;
    const double C1135 =
        (2 * C29889 * C29837 + C29889 * (C29837 + C29854 * C29898)) / C29679;
    const double C1278 = (C29719 * (C29837 + C29854 * C29898)) / C29679;
    const double C1979 =
        (2 * C29719 * C29837 + C29719 * (C29837 + C29854 * C29931)) / C29679;
    const double C6470 = C30757 * C1292;
    const double C20202 = C18611 * C1292;
    const double C5908 = C30757 * C1676;
    const double C20000 = C18611 * C1676;
    const double C5748 = C113 * C1139;
    const double C6469 = C113 * C1282;
    const double C20201 = C18613 * C1282;
    const double C5907 = C113 * C1672;
    const double C19999 = C18613 * C1672;
    const double C21046 = C18611 * C1990;
    const double C21045 = C18613 * C1983;
    const double C5631 = C30757 * C5606;
    const double C25864 = C18611 * C5606;
    const double C6017 = C30757 * C5608;
    const double C25232 = C18611 * C5608;
    const double C5482 = C113 * C5467;
    const double C5630 = C113 * C5603;
    const double C25863 = C18613 * C5603;
    const double C6016 = C113 * C5604;
    const double C25231 = C18613 * C5604;
    const double C30414 = C30412 + C30405;
    const double C30369 = C29719 * C30367;
    const double C29801 = C29781 + C29799;
    const double C29800 = C29782 + C29798;
    const double C1410 = C30757 * C1144;
    const double C30073 = C30070 + C30071;
    const double C5633 = C30757 * C5612;
    const double C25868 = C18611 * C5612;
    const double C6019 = C30757 * C5613;
    const double C25236 = C18611 * C5613;
    const double C30050 = C30038 + C30048;
    const double C29880 = C29720 * C29879;
    const double C29917 = C29879 * C29898;
    const double C29946 = C29879 * C29931;
    const double C29960 = C29889 * C29879;
    const double C30013 = C30009 + C30012;
    const double C10607 =
        (3 * (C29956 + be * C30053 + C29719 * C30059) +
         be * (2 * C30053 + C29719 * C30060) +
         C29719 * (2 * C30059 + be * C30060 +
                   C29719 * (C30055 + be * C29719 * C30056 +
                             C29719 * (be * C30056 +
                                       C29719 * C29889 *
                                           (ae * C29789 +
                                            C29720 * std::pow(C29722, 8) *
                                                bs[8] * C29731))))) /
        C29681;
    const double C10606 = (3 * (C29904 + C29957 * C29931) +
                           C29719 * (2 * C30053 + C29719 * C30060)) /
                          C29679;
    const double C30074 = C30068 + C30072;
    const double C29987 = C29979 + C29986;
    const double C30051 = C30036 + C30049;
    const double C10811 =
        (4 * (2 * C29999 + be * C30000 + C29719 * C30089) +
         be * (3 * C30000 + C29719 * C30090) +
         C29719 * (3 * C30089 + be * C30090 +
                   C29719 * (2 * C30085 + be * C30086 +
                             C29719 * (C30078 + be * C29719 * C30079 +
                                       C29719 * (be * C30079 +
                                                 C29719 * C29889 *
                                                     std::pow(C29722, 8) *
                                                     bs[8] * C29731))))) /
        C29681;
    const double C10810 = (4 * (2 * C29995 + C29719 * C30000) +
                           C29719 * (3 * C30000 + C29719 * C30090)) /
                          C29679;
    const double C123 = 5 * (3 * C30106 + C29720 * C30111) +
                        C29720 * (4 * C30111 + C29720 * C30116);
    const double C296 = 3 * C30106 + C29720 * C30111 + C30116 * C29898;
    const double C477 = 3 * C30106 + C29720 * C30111 + C30116 * C29931;
    const double C640 = C29889 * (4 * C30111 + C29720 * C30116);
    const double C750 = C29719 * (4 * C30111 + C29720 * C30116);
    const double C910 = C29719 * C29889 * C30116;
    const double C5610 =
        (3 * C30269 + C29889 * C30277 +
         C29719 * (C29719 * (3 * C30275 +
                             C29889 * (2 * C29889 * C29765 +
                                       C29889 * (C29765 + C29789 * C29898))) +
                   C30297 * be) +
         C29719 * C30297 * be) /
        C29679;
    const double C6010 =
        (C29719 * (4 * C30277 +
                   C29889 * (3 * C30275 +
                             C29889 * (2 * C29889 * C29765 +
                                       C29889 * (C29765 + C29789 * C29898)))) +
         (4 * C30284 + C29889 * C30297) * be) /
        C29679;
    const double C5468 = 5 * (3 * C30200 + C29889 * C30284) +
                         C29889 * (4 * C30284 + C29889 * C30297);
    const double C5605 = 3 * C30200 + C29889 * C30284 + C30297 * C29931;
    const double C6009 = C29719 * (4 * C30284 + C29889 * C30297);
    const double C10451 = 5 * (3 * C30232 + C29719 * C30348) +
                          C29719 * (4 * C30348 + C29719 * C30370);
    const double C30833 = C30798 / C30523;
    const double C30866 = C30837 / C30527;
    const double C30867 = C30839 + C30806;
    const double C638 = C30806 - C30544 / C30541;
    const double C30836 = C30802 / C30523;
    const double C30849 = C30816 / C30523;
    const double C30873 = C30852 / C30527;
    const double C30874 = C30853 + C30820;
    const double C1394 = C30820 - C30624 / C30541;
    const double C30851 = C30817 / C30523;
    const double C30855 = C30822 / C30523;
    const double C30876 = C30858 / C30527;
    const double C30877 = C30859 + C30826;
    const double C2250 = C30826 - C30666 / C30541;
    const double C30857 = C30823 / C30523;
    const double C4834 = C4829 + C4830;
    const double C523 = C30757 * C503;
    const double C19000 = C18610 * C503;
    const double C18993 = C18611 * C503;
    const double C527 = C30757 * C504;
    const double C18637 = C18611 * C504;
    const double C19276 = C18610 * C504;
    const double C933 = C30757 * C923;
    const double C18815 = C18611 * C923;
    const double C19486 = C18610 * C923;
    const double C161 = C113 * C133;
    const double C18643 = C18612 * C133;
    const double C343 = C113 * C308;
    const double C18821 = C18612 * C308;
    const double C347 = C113 * C310;
    const double C19137 = C18612 * C310;
    const double C524 = C113 * C489;
    const double C18999 = C18612 * C489;
    const double C18994 = C18613 * C489;
    const double C528 = C113 * C491;
    const double C18638 = C18613 * C491;
    const double C19275 = C18612 * C491;
    const double C934 = C113 * C916;
    const double C18816 = C18613 * C916;
    const double C19485 = C18612 * C916;
    const double C5752 = C5750 + C5751;
    const double C5911 = C5909 + C5910;
    const double C5493 = C5491 + C5492;
    const double C5641 = C5639 + C5640;
    const double C6022 = C6020 + C6021;
    const double C10707 =
        (4 * (2 * C30239 + C29719 * C30397 + C30240 * be) +
         C29719 * (3 * C30397 +
                   C29719 * (2 * C30389 +
                             C29719 * (C29777 +
                                       C29719 * (C29719 * C29720 * C29789 +
                                                 C29867 * be) +
                                       C29719 * C29867 * be) +
                             C30391 * be) +
                   C30396 * be) +
         (3 * C30240 + C29719 * C30396) * be) /
        C29679;
    const double C29856 = C29840 + C29855;
    const double C1287 = (C29889 * C29772 + be * C29719 * C29906 +
                          C29719 * (be * C29906 + C29719 * C29889 * C29796)) /
                         C29681;
    const double C1272 = (C29889 * C29837 + C29906 * C29931) / C29679;
    const double C29947 = C29944 + C29945;
    const double C1568 = C30757 * C1290;
    const double C18824 = C18611 * C1290;
    const double C2264 = C30757 * C1988;
    const double C19002 = C18611 * C1988;
    const double C1409 = C113 * C1135;
    const double C1567 = C113 * C1278;
    const double C18823 = C18613 * C1278;
    const double C2263 = C113 * C1979;
    const double C19001 = C18613 * C1979;
    const double C10809 =
        (4 * (2 * C30314 + C29719 * C30414 + C30315 * be) +
         C29719 * (3 * C30414 +
                   C29719 * (2 * C30408 +
                             C29719 * (C30400 +
                                       C29719 * (C29719 * C29889 * C29789 +
                                                 C30403 * be) +
                                       C29719 * C30403 * be) +
                             C30409 * be) +
                   C30413 * be) +
         (3 * C30315 + C29719 * C30413) * be) /
        C29679;
    const double C30371 = C30352 + C30369;
    const double C136 = (5 * (3 * C29753 + C29720 * C29773) +
                         C29720 * (4 * C29773 + C29720 * C29801)) /
                        C29679;
    const double C315 =
        (3 * C29753 + C29720 * C29773 + C29801 * C29898) / C29679;
    const double C496 =
        (3 * C29753 + C29720 * C29773 +
         C29719 * (C29719 * C29801 + C30116 * be) + C29719 * C30116 * be) /
        C29679;
    const double C641 = (C29889 * (4 * C29773 + C29720 * C29801)) / C29679;
    const double C751 = (C29719 * (4 * C29773 + C29720 * C29801) +
                         (4 * C30111 + C29720 * C30116) * be) /
                        C29679;
    const double C919 =
        (C29719 * C29889 * C29801 + C29889 * C30116 * be) / C29679;
    const double C144 =
        (5 * (3 * C29772 + ae * C29773 + C29720 * C29800) +
         ae * (4 * C29773 + C29720 * C29801) +
         C29720 *
             (4 * C29800 + ae * C29801 +
              C29720 *
                  (3 * C29796 + ae * C29797 +
                   C29720 * (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C324 = (2 * C29752 + ae * C29753 + C29720 * C29772 +
                         C29800 * std::pow(yP - yQ, 2)) /
                        C29681;
    const double C325 =
        ((yP - yQ) * (3 * C29772 + ae * C29773 + C29720 * C29800)) / C29681;
    const double C326 =
        (3 * C29772 + ae * C29773 + C29720 * C29800 +
         (3 * C29796 + ae * C29797 +
          C29720 *
              (2 * C29792 + ae * C29793 +
               C29720 * (C29788 + ae * C29720 * C29789 +
                         C29720 * (ae * C29789 + C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))) *
             std::pow(yP - yQ, 2)) /
        C29681;
    const double C643 =
        ((yP - yQ) *
         (4 * C29800 + ae * C29801 +
          C29720 * (3 * C29796 + ae * C29797 +
                    C29720 * (2 * C29792 + ae * C29793 +
                              C29720 * (C29788 + ae * C29720 * C29789 +
                                        C29720 * (ae * C29789 +
                                                  C29720 * std::pow(C29722, 8) *
                                                      bs[8] * C29731)))))) /
        C29681;
    const double C1401 =
        (2 * C29889 * C29800 +
         C29889 * (C29800 + (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731))) *
                                C29898)) /
        C29681;
    const double C29881 = C29861 + C29880;
    const double C29918 = C29854 + C29917;
    const double C29948 = C29854 + C29946;
    const double C2373 =
        (2 * (be * C29906 + C29719 * C29959) + be * (C29906 + C29960 * C29931) +
         C29719 * (C29959 + be * C29719 * C29960 +
                   C29719 * (be * C29960 +
                             C29719 * C29889 *
                                 (C29788 + ae * C29720 * C29789 +
                                  C29720 * (ae * C29789 +
                                            C29720 * std::pow(C29722, 8) *
                                                bs[8] * C29731))))) /
        C29681;
    const double C2370 =
        (2 * C29719 * C29906 + C29719 * (C29906 + C29960 * C29931)) / C29679;
    const double C6465 =
        (2 * C29956 + C29889 * C29990 + be * C29719 * C30013 +
         C29719 * (be * C30013 +
                   C29719 * (2 * C29889 * C29792 +
                             C29889 * (C29792 + (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731) *
                                                    C29898)))) /
        C29681;
    const double C5741 = (4 * (2 * C29904 + C29889 * C29915) +
                          C29889 * (3 * C29915 + C29889 * C30013)) /
                         C29679;
    const double C5900 = (C29719 * (3 * C29915 + C29889 * C30013)) / C29679;
    const double C6464 =
        (2 * C29904 + C29889 * C29915 + C30013 * C29931) / C29679;
    const double C10709 =
        (4 * (2 * C29940 + be * C29941 + C29719 * C30073) +
         be * (3 * C29941 + C29719 * C30074) +
         C29719 *
             (3 * C30073 + be * C30074 +
              C29719 *
                  (2 * C30067 + be * C30069 +
                   C29719 * (C29792 + be * C29719 * C29872 +
                             C29719 * (be * C29872 +
                                       C29719 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C10708 = (4 * (2 * C29936 + C29719 * C29941) +
                           C29719 * (3 * C29941 + C29719 * C30074)) /
                          C29679;
    const double C5614 =
        (3 * C29963 + C29889 * C29970 + be * C29719 * C29987 +
         C29719 * (be * C29987 +
                   C29719 * (3 * C29968 +
                             C29889 * (2 * C29889 * C29788 +
                                       C29889 * (C29788 + std::pow(C29722, 8) *
                                                              bs[8] * C29731 *
                                                              C29898))))) /
        C29681;
    const double C6012 =
        (be * (4 * C29976 + C29889 * C29987) +
         C29719 * (4 * C29970 +
                   C29889 * (3 * C29968 +
                             C29889 * (2 * C29889 * C29788 +
                                       C29889 * (C29788 + std::pow(C29722, 8) *
                                                              bs[8] * C29731 *
                                                              C29898))))) /
        C29681;
    const double C5472 = (5 * (3 * C29912 + C29889 * C29976) +
                          C29889 * (4 * C29976 + C29889 * C29987)) /
                         C29679;
    const double C5611 =
        (3 * C29912 + C29889 * C29976 + C29987 * C29931) / C29679;
    const double C6011 = (C29719 * (4 * C29976 + C29889 * C29987)) / C29679;
    const double C10457 =
        (5 * (3 * C30028 + be * C30029 + C29719 * C30050) +
         be * (4 * C30029 + C29719 * C30051) +
         C29719 *
             (4 * C30050 + be * C30051 +
              C29719 *
                  (3 * C30046 + be * C30047 +
                   C29719 * (2 * C30040 + be * C30042 +
                             C29719 * (C29788 + be * C29719 * C29865 +
                                       C29719 * (be * C29865 +
                                                 C29719 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C10455 = (5 * (3 * C29934 + C29719 * C30029) +
                           C29719 * (4 * C30029 + C29719 * C30051)) /
                          C29679;
    const double C30887 = C30833 + C30879;
    const double C637 = C30866 - (C30546 * C30528) / C30523;
    const double C111 = C30867 / C30527 - C30544 / C30840;
    const double C30880 = C30836 + C30866;
    const double C30888 = C30849 + C30883;
    const double C1393 = C30873 - (C30626 * C30615) / C30523;
    const double C1121 = C30874 / C30527 - C30624 / C30840;
    const double C30884 = C30851 + C30873;
    const double C30889 = C30855 + C30885;
    const double C2249 = C30876 - (C30668 * C30657) / C30523;
    const double C1966 = C30877 / C30527 - C30666 / C30840;
    const double C30886 = C30857 + C30876;
    const double C171 = C160 - C161;
    const double C355 = C342 - C343;
    const double C13288 = C343 - C342;
    const double C646 = C346 - C347;
    const double C13566 = C347 - C346;
    const double C536 = C523 - C524;
    const double C756 = C527 - C528;
    const double C940 = C933 - C934;
    const double C13896 = C934 - C933;
    const double C29857 = C29856 + C29851;
    const double C2150 = C30757 * C1287;
    const double C19488 = C18611 * C1287;
    const double C2149 = C113 * C1272;
    const double C19487 = C18613 * C1272;
    const double C30372 = C30371 + C30356;
    const double C351 = C30757 * C324;
    const double C650 = C30757 * C325;
    const double C29882 = C29881 + C29873;
    const double C1293 =
        (C29772 + C29796 * C29898 + be * C29719 * C29918 +
         C29719 * (be * C29918 +
                   C29719 * (C29796 + (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)) *
                                          C29898))) /
        C29681;
    const double C1677 =
        (be * (2 * C29906 + C29889 * C29918) +
         C29719 * (2 * C29889 * C29796 +
                   C29889 * (C29796 + (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)) *
                                          C29898))) /
        C29681;
    const double C1141 = (3 * (C29837 + C29854 * C29898) +
                          C29889 * (2 * C29906 + C29889 * C29918)) /
                         C29679;
    const double C1284 = (C29837 + C29854 * C29898 + C29918 * C29931) / C29679;
    const double C1674 = (C29719 * (2 * C29906 + C29889 * C29918)) / C29679;
    const double C1991 =
        (3 * (C29772 + be * C29943 + C29719 * C29947) +
         be * (2 * C29943 + C29719 * C29948) +
         C29719 *
             (2 * C29947 + be * C29948 +
              C29719 *
                  (C29796 + be * C29719 * C29879 +
                   C29719 * (be * C29879 +
                             C29719 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C1985 = (3 * (C29837 + C29854 * C29931) +
                          C29719 * (2 * C29943 + C29719 * C29948)) /
                         C29679;
    const double C108 =
        (C30878 + 2 * C30537) / C30527 - (C30887 * C30528) / C30523;
    const double C109 =
        (C30865 + 2 * C30546 + C30887) / C30527 - (C30880 * C30528) / C30523;
    const double C110 = (C30838 + C30543 / C30523 + C30880) / C30527 -
                        (C30867 * C30528) / C30523;
    const double C1118 =
        (C30881 + 2 * C30619) / C30527 - (C30888 * C30615) / C30523;
    const double C1119 =
        (C30869 + 2 * C30626 + C30888) / C30527 - (C30884 * C30615) / C30523;
    const double C1120 = (C30844 + C30623 / C30523 + C30884) / C30527 -
                         (C30874 * C30615) / C30523;
    const double C1963 =
        (C30882 + 2 * C30661) / C30527 - (C30889 * C30657) / C30523;
    const double C1964 =
        (C30871 + 2 * C30668 + C30889) / C30527 - (C30886 * C30657) / C30523;
    const double C1965 = (C30847 + C30665 / C30523 + C30886) / C30527 -
                         (C30877 * C30657) / C30523;
    const double C4826 = C355 * C30508;
    const double C505 =
        (2 * C29752 + ae * C29753 + C29720 * C29772 + be * C29719 * C29857 +
         C29719 * (be * C29857 + C29719 * C29800)) /
        C29681;
    const double C506 =
        (be * (3 * C29837 + C29720 * C29857 +
               (2 * C29831 + C29720 * C29849) * ae) +
         C29719 * (3 * C29772 + ae * C29773 + C29720 * C29800)) /
        C29681;
    const double C924 =
        (be * C29889 * C29857 + C29719 * C29889 * C29800) / C29681;
    const double C135 = (4 * (2 * C29825 + C29720 * C29837 + C30106 * ae) +
                         C29720 * (3 * C29837 + C29720 * C29857 + C30111 * ae) +
                         (3 * C30106 + C29720 * C30111) * ae) /
                        C29679;
    const double C312 =
        (2 * C29825 + C29720 * C29837 + C30106 * ae + C29857 * C29898) / C29679;
    const double C314 =
        (C29889 * (3 * C29837 + C29720 * C29857 + C30111 * ae)) / C29679;
    const double C493 =
        (2 * C29825 + C29720 * C29837 + C30106 * ae + C29857 * C29931) / C29679;
    const double C495 =
        (C29719 * (3 * C29837 + C29720 * C29857 + C30111 * ae)) / C29679;
    const double C918 = (C29719 * C29889 * C29857) / C29679;
    const double C10454 =
        (5 * (3 * C30349 + C29719 * C30372 + C30348 * be) +
         C29719 * (4 * C30372 +
                   C29719 * (3 * C30367 +
                             C29719 * (2 * C30359 +
                                       C29719 * (C29765 +
                                                 C29719 * (C29719 * C29789 +
                                                           C29863 * be) +
                                                 C29719 * C29863 * be) +
                                       C30361 * be) +
                             C30366 * be) +
                   C30370 * be) +
         (4 * C30348 + C29719 * C30370) * be) /
        C29679;
    const double C29883 = C29720 * C29882;
    const double C29950 = C29889 * C29882;
    const double C1559 =
        (be * (C29857 + C29882 * C29898) +
         C29719 * (C29800 + (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731))) *
                                C29898)) /
        C29681;
    const double C2255 =
        (2 * (be * C29857 + C29719 * C29800) + be * (C29857 + C29882 * C29931) +
         C29719 *
             (C29800 + be * C29719 * C29882 +
              C29719 *
                  (be * C29882 +
                   C29719 * (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C1400 =
        (2 * C29889 * C29857 + C29889 * (C29857 + C29882 * C29898)) / C29679;
    const double C1558 = (C29719 * (C29857 + C29882 * C29898)) / C29679;
    const double C2254 =
        (2 * C29719 * C29857 + C29719 * (C29857 + C29882 * C29931)) / C29679;
    const double C4831 = C4825 + C4826;
    const double C532 = C30757 * C505;
    const double C19278 = C18611 * C505;
    const double C760 = C30757 * C506;
    const double C18646 = C18611 * C506;
    const double C938 = C30757 * C924;
    const double C19140 = C18611 * C924;
    const double C164 = C113 * C135;
    const double C350 = C113 * C312;
    const double C649 = C113 * C314;
    const double C531 = C113 * C493;
    const double C19277 = C18613 * C493;
    const double C759 = C113 * C495;
    const double C18645 = C18613 * C495;
    const double C937 = C113 * C918;
    const double C19139 = C18613 * C918;
    const double C29884 = C29860 + C29883;
    const double C2141 =
        (C29889 * C29800 + be * C29719 * C29950 +
         C29719 * (be * C29950 +
                   C29719 * C29889 *
                       (2 * C29792 + ae * C29793 +
                        C29720 * (C29788 + ae * C29720 * C29789 +
                                  C29720 * (ae * C29789 +
                                            C29720 * std::pow(C29722, 8) *
                                                bs[8] * C29731))))) /
        C29681;
    const double C2140 = (C29889 * C29857 + C29950 * C29931) / C29679;
    const double C29885 = C29884 + C29878;
    const double C507 =
        (3 * C29772 + ae * C29773 + C29720 * C29800 + be * C29719 * C29885 +
         C29719 *
             (be * C29885 +
              C29719 *
                  (3 * C29796 + ae * C29797 +
                   C29720 * (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C753 =
        (be * (4 * C29857 + C29720 * C29885 +
               (3 * C29849 + C29720 * C29876) * ae) +
         C29719 *
             (4 * C29800 + ae * C29801 +
              C29720 *
                  (3 * C29796 + ae * C29797 +
                   C29720 * (2 * C29792 + ae * C29793 +
                             C29720 * (C29788 + ae * C29720 * C29789 +
                                       C29720 * (ae * C29789 +
                                                 C29720 * std::pow(C29722, 8) *
                                                     bs[8] * C29731)))))) /
        C29681;
    const double C925 =
        (be * C29889 * C29885 +
         C29719 * C29889 *
             (3 * C29796 + ae * C29797 +
              C29720 * (2 * C29792 + ae * C29793 +
                        C29720 * (C29788 + ae * C29720 * C29789 +
                                  C29720 * (ae * C29789 +
                                            C29720 * std::pow(C29722, 8) *
                                                bs[8] * C29731))))) /
        C29681;
    const double C137 = (5 * (3 * C29837 + C29720 * C29857 + C30111 * ae) +
                         C29720 * (4 * C29857 + C29720 * C29885 + C30116 * ae) +
                         (4 * C30111 + C29720 * C30116) * ae) /
                        C29679;
    const double C316 =
        (3 * C29837 + C29720 * C29857 + C30111 * ae + C29885 * C29898) / C29679;
    const double C497 =
        (3 * C29837 + C29720 * C29857 + C30111 * ae + C29885 * C29931) / C29679;
    const double C642 =
        (C29889 * (4 * C29857 + C29720 * C29885 + C30116 * ae)) / C29679;
    const double C752 =
        (C29719 * (4 * C29857 + C29720 * C29885 + C30116 * ae)) / C29679;
    const double C920 = (C29719 * C29889 * C29885) / C29679;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C30619 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C30626 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C2840) *
                     C30537 +
                 ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                    C353 * C13127) *
                       C13129) *
                      C30578 * C30619 +
                  ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                    C355 * C13127) *
                       C13129) *
                      C30578 * C30626 +
                  ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                       C13129) *
                      C30578 * C2840) *
                     C30546 +
                 (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                    C646 * C13127) *
                       C13129) *
                      C30578 * C30619 +
                  ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                    C13566 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 + (C348 - C349) * C13131 +
                    (C350 - C351) * C13127) *
                       C13129) *
                      C30578 * C30626 +
                  ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                    (C351 - C350) * C13127) *
                       C13128 +
                   ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                    (C30757 * C1399 - C113 * C1398) * C13131 +
                    (C30757 * C1401 - C113 * C1400) * C13127) *
                       C13129) *
                      C30578 * C2840) *
                     C2843)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C30619 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30814 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C30626 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30814 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30665) *
                      C2840) *
                     C2580 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30814 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30619 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30814 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30665) *
                      C30626 +
                  (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30814 +
                   ((C5903 * C13130 + C5904 * C13126 +
                     (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                        C13128 +
                    ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                     (C30757 * C1673 - C113 * C1668) * C13131 +
                     (C30757 * C1677 - C113 * C1674) * C13127) *
                        C13129) *
                       C30665) *
                      C2840) *
                     C30543)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C30888 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C30884 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C30874 +
                  ((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C30854) *
                     C2580 +
                 ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                    C353 * C13127) *
                       C13129) *
                      C30578 * C30888 +
                  ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                    C355 * C13127) *
                       C13129) *
                      C30578 * C30884 +
                  ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                       C13129) *
                      C30578 * C30874 +
                  ((C5744 * C13130 + C5745 * C13126 + (C1408 - C1407) * C13131 +
                    (C1410 - C1409) * C13127) *
                       C13128 +
                   ((C5747 - C5746) * C13130 + (C5749 - C5748) * C13126 +
                    (C30757 * C1140 - C113 * C1129) * C13131 +
                    (C30757 * C1147 - C113 * C1141) * C13127) *
                       C13129) *
                      C30578 * C30854) *
                     C30543)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30887 +
                 ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                    C353 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                    C355 * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30880 +
                 (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                    C646 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                    C13566 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 + (C348 - C349) * C13131 +
                    (C350 - C351) * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30867 +
                 (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                    (C161 - C160) * C13127) *
                       C13128 +
                   (C13565 * C13130 + C13566 * C13126 + (C647 - C648) * C13131 +
                    (C649 - C650) * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C645 * C13130 + C646 * C13126 + (C648 - C647) * C13131 +
                    (C650 - C649) * C13127) *
                       C13128 +
                   ((C349 - C348) * C13130 + (C351 - C350) * C13126 +
                    (C30757 * C315 - C113 * C296) * C13131 +
                    (C30757 * C326 - C113 * C316) * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30848)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30882 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30871 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C30847) *
                      C2472 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30882 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30871 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30847) *
                      C30623) *
                     C2580 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30882 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30871 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30847) *
                      C2472 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30882 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30871 +
                   ((C15297 * C13130 + C15298 * C13126 +
                     (C2148 - C2147) * C13131 + (C2150 - C2149) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30757 * C1283 - C113 * C1266) * C13131 +
                     (C30757 * C1293 - C113 * C1284) * C13127) *
                        C13129) *
                       C30847) *
                      C30623) *
                     C30543)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30814 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30537 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30814 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30814 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30546 +
                 ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30814 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30814 +
                   ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                     (C938 - C937) * C13127) *
                        C13128 +
                    ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                     (C30757 * C1557 - C113 * C1556) * C13131 +
                     (C30757 * C1559 - C113 * C1558) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C2843)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30887 +
                 ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                    C353 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                    C355 * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30880 +
                 (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                    C646 * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                    C13566 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 + (C348 - C349) * C13131 +
                    (C350 - C351) * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30867 +
                 (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                    (C161 - C160) * C13127) *
                       C13128 +
                   (C13565 * C13130 + C13566 * C13126 + (C647 - C648) * C13131 +
                    (C649 - C650) * C13127) *
                       C13129) *
                      C30578 * C2472 +
                  ((C645 * C13130 + C646 * C13126 + (C648 - C647) * C13131 +
                    (C650 - C649) * C13127) *
                       C13128 +
                   ((C349 - C348) * C13130 + (C351 - C350) * C13126 +
                    (C30757 * C315 - C113 * C296) * C13131 +
                    (C30757 * C326 - C113 * C316) * C13127) *
                       C13129) *
                      C30578 * C30623) *
                     C30848)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C30888 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C30884 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C30874 +
                  ((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C30854) *
                     C2580 +
                 ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                    C353 * C13127) *
                       C13129) *
                      C30578 * C30888 +
                  ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                    C355 * C13127) *
                       C13129) *
                      C30578 * C30884 +
                  ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                       C13129) *
                      C30578 * C30874 +
                  ((C5744 * C13130 + C5745 * C13126 + (C1408 - C1407) * C13131 +
                    (C1410 - C1409) * C13127) *
                       C13128 +
                   ((C5747 - C5746) * C13130 + (C5749 - C5748) * C13126 +
                    (C30757 * C1140 - C113 * C1129) * C13131 +
                    (C30757 * C1147 - C113 * C1141) * C13127) *
                       C13129) *
                      C30578 * C30854) *
                     C30543)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3234 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C30619 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C3234 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C30626 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C3234 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30665) *
                      C2840) *
                     C30799 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C3234 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30619 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C3234 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30665) *
                      C30626 +
                  (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C3234 +
                   ((C5903 * C13130 + C5904 * C13126 +
                     (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                        C13128 +
                    ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                     (C30757 * C1673 - C113 * C1668) * C13131 +
                     (C30757 * C1677 - C113 * C1674) * C13127) *
                        C13129) *
                       C30665) *
                      C2840) *
                     C30543)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30661 +
                  (((C113 * C468 - C30757 * C478) * C13130 +
                    (C113 * C479 - C30757 * C498) * C13126 +
                    (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                       C13128 +
                   ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30668 +
                  (((C30757 * C484 - C113 * C471) * C13130 +
                    (C30757 * C501 - C113 * C485) * C13126 +
                    (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                       C13128 +
                   ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                    C15297 * C13131 + C15298 * C13127) *
                       C13129) *
                      C3742) *
                     C30619 +
                 ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30661 +
                  (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                    C13893 * C13131 + C13894 * C13127) *
                       C13128 +
                   ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                    C5903 * C13131 + C5904 * C13127) *
                       C13129) *
                      C30668 +
                  (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                    C15299 * C13131 + C15300 * C13127) *
                       C13128 +
                   ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                    (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                       C13129) *
                      C3742) *
                     C30626 +
                 (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30661 +
                  ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                    C14598 * C13127) *
                       C13128 +
                   ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                    (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                       C13129) *
                      C30668 +
                  ((C5636 * C13130 + C5637 * C13126 + (C6468 - C6467) * C13131 +
                    (C6470 - C6469) * C13127) *
                       C13128 +
                   ((C5631 - C5630) * C13130 + (C5633 - C5632) * C13126 +
                    (C30757 * C6463 - C113 * C6462) * C13131 +
                    (C30757 * C6465 - C113 * C6464) * C13127) *
                       C13129) *
                      C3742) *
                     C2840) *
                C30532) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C3234 +
                  (((C113 * C468 - C30757 * C478) * C13130 +
                    (C113 * C479 - C30757 * C498) * C13126 +
                    (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                       C13128 +
                   ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30665) *
                     C30888 +
                 ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C3234 +
                  (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                    C13893 * C13131 + C13894 * C13127) *
                       C13128 +
                   ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                    C5903 * C13131 + C5904 * C13127) *
                       C13129) *
                      C30665) *
                     C30884 +
                 (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C3234 +
                  ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                    C14598 * C13127) *
                       C13128 +
                   ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                    (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                       C13129) *
                      C30665) *
                     C30874 +
                 (((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C3234 +
                  ((C6014 * C13130 + C6015 * C13126 + (C5906 - C5905) * C13131 +
                    (C5908 - C5907) * C13127) *
                       C13128 +
                   ((C6017 - C6016) * C13130 + (C6019 - C6018) * C13126 +
                    (C30757 * C5899 - C113 * C5898) * C13131 +
                    (C30757 * C5901 - C113 * C5900) * C13127) *
                       C13129) *
                      C30665) *
                     C30854) *
                C30532) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3234 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C3234 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30878 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C3234 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C3234 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30865 +
                 ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C3234 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C3234 +
                   ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                     (C938 - C937) * C13127) *
                        C13128 +
                    ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                     (C30757 * C1557 - C113 * C1556) * C13131 +
                     (C30757 * C1559 - C113 * C1558) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30838)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30889 +
                  (((C113 * C468 - C30757 * C478) * C13130 +
                    (C113 * C479 - C30757 * C498) * C13126 +
                    (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                       C13128 +
                   ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30886 +
                  (((C30757 * C484 - C113 * C471) * C13130 +
                    (C30757 * C501 - C113 * C485) * C13126 +
                    (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                       C13128 +
                   ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                    C15297 * C13131 + C15298 * C13127) *
                       C13129) *
                      C30877 +
                  (((C113 * C1968 - C30757 * C1974) * C13130 +
                    (C113 * C1975 - C30757 * C1986) * C13126 +
                    (C2257 - C2258) * C13131 + (C2259 - C2260) * C13127) *
                       C13128 +
                   ((C6675 - C6676) * C13130 + (C6677 - C6678) * C13126 +
                    (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                       C13129) *
                      C30860) *
                     C2472 +
                 ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30889 +
                  (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                    C13893 * C13131 + C13894 * C13127) *
                       C13128 +
                   ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                    C5903 * C13131 + C5904 * C13127) *
                       C13129) *
                      C30886 +
                  (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                    C15299 * C13131 + C15300 * C13127) *
                       C13128 +
                   ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                    (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                       C13129) *
                      C30877 +
                  (((C6676 - C6675) * C13130 + (C6678 - C6677) * C13126 +
                    (C15432 - C15431) * C13131 + (C15434 - C15433) * C13127) *
                       C13128 +
                   ((C6680 - C6679) * C13130 + (C6682 - C6681) * C13126 +
                    (C30757 * C6569 - C113 * C6568) * C13131 +
                    (C30757 * C6571 - C113 * C6570) * C13127) *
                       C13129) *
                      C30860) *
                     C30623) *
                C30532) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30661 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30668 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C3742) *
                      C2472 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30661 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30668 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C3742) *
                      C30623) *
                     C30799 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30661 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30668 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C3742) *
                      C2472 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30661 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30668 +
                   ((C15297 * C13130 + C15298 * C13126 +
                     (C2148 - C2147) * C13131 + (C2150 - C2149) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30757 * C1283 - C113 * C1266) * C13131 +
                     (C30757 * C1293 - C113 * C1284) * C13127) *
                        C13129) *
                       C3742) *
                      C30623) *
                     C30543)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3234 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C3234 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30878 +
                 (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C3234 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C3234 +
                   ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30865 +
                 ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C3234 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C2472 +
                  (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C3234 +
                   ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                     (C938 - C937) * C13127) *
                        C13128 +
                    ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                     (C30757 * C1557 - C113 * C1556) * C13131 +
                     (C30757 * C1559 - C113 * C1558) * C13127) *
                        C13129) *
                       C30665) *
                      C30623) *
                     C30838)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C3234 +
                  (((C113 * C468 - C30757 * C478) * C13130 +
                    (C113 * C479 - C30757 * C498) * C13126 +
                    (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                       C13128 +
                   ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30665) *
                     C30888 +
                 ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C3234 +
                  (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                    C13893 * C13131 + C13894 * C13127) *
                       C13128 +
                   ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                    C5903 * C13131 + C5904 * C13127) *
                       C13129) *
                      C30665) *
                     C30884 +
                 (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C3234 +
                  ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                    C14598 * C13127) *
                       C13128 +
                   ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                    (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                       C13129) *
                      C30665) *
                     C30874 +
                 (((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C3234 +
                  ((C6014 * C13130 + C6015 * C13126 + (C5906 - C5905) * C13131 +
                    (C5908 - C5907) * C13127) *
                       C13128 +
                   ((C6017 - C6016) * C13130 + (C6019 - C6018) * C13126 +
                    (C30757 * C5899 - C113 * C5898) * C13131 +
                    (C30757 * C5901 - C113 * C5900) * C13127) *
                       C13129) *
                      C30665) *
                     C30854) *
                C30532) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1392 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1393 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C1394 +
                   ((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                     (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                        C13129) *
                       C30578 * C30854) *
                      C30799 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1392 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1393 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C1394 +
                   ((C5744 * C13130 + C5745 * C13126 +
                     (C1408 - C1407) * C13131 + (C1410 - C1409) * C13127) *
                        C13128 +
                    ((C5747 - C5746) * C13130 + (C5749 - C5748) * C13126 +
                     (C30757 * C1140 - C113 * C1129) * C13131 +
                     (C30757 * C1147 - C113 * C1141) * C13127) *
                        C13129) *
                       C30578 * C30854) *
                      C30543)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C636 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C637 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C638 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C645 * C13130 + C646 * C13126 + (C648 - C647) * C13131 +
                     (C650 - C649) * C13127) *
                        C13128 +
                    ((C349 - C348) * C13130 + (C351 - C350) * C13126 +
                     (C30757 * C315 - C113 * C296) * C13131 +
                     (C30757 * C326 - C113 * C316) * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C30848)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C1788 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C1789 +
                    (((C30757 * C484 - C113 * C471) * C13130 +
                      (C30757 * C501 - C113 * C485) * C13126 +
                      (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                         C13128 +
                     ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                      C15297 * C13131 + C15298 * C13127) *
                         C13129) *
                        C30847) *
                       C30813 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C1788 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C1789 +
                    (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                      C15299 * C13131 + C15300 * C13127) *
                         C13128 +
                     ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                      (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                         C13129) *
                        C30847) *
                       C30623) *
                      C30799 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C1788 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C1789 +
                    (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                      (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                         C13128 +
                     (C15299 * C13130 + C15300 * C13126 +
                      (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                         C13129) *
                        C30847) *
                       C30813 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C1788 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C1789 +
                    ((C15297 * C13130 + C15298 * C13126 +
                      (C2148 - C2147) * C13131 + (C2150 - C2149) * C13127) *
                         C13128 +
                     ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                      (C30757 * C1283 - C113 * C1266) * C13131 +
                      (C30757 * C1293 - C113 * C1284) * C13127) *
                         C13129) *
                        C30847) *
                       C30623) *
                      C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C1392 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30814 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C1393 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30814 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30665) *
                      C1394 +
                  (((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                     (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                        C13129) *
                       C30814 +
                   ((C6014 * C13130 + C6015 * C13126 +
                     (C5906 - C5905) * C13131 + (C5908 - C5907) * C13127) *
                        C13128 +
                    ((C6017 - C6016) * C13130 + (C6019 - C6018) * C13126 +
                     (C30757 * C5899 - C113 * C5898) * C13131 +
                     (C30757 * C5901 - C113 * C5900) * C13127) *
                        C13129) *
                       C30665) *
                      C30854) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30814 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C30814 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C284 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C30814 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C30814 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     ((C1561 - C1562) * C13130 + (C1563 - C1564) * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C285 +
                  ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                      (C157 - C156) * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                      C646 * C13127) *
                         C13129) *
                        C30814 +
                    ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                      (C528 - C527) * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                      C13566 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                         C13129) *
                        C30814 +
                    ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                      (C938 - C937) * C13127) *
                         C13128 +
                     ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                      (C30757 * C1557 - C113 * C1556) * C13131 +
                      (C30757 * C1559 - C113 * C1558) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C2248 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C2249 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C2250 +
                   (((C113 * C1968 - C30757 * C1974) * C13130 +
                     (C113 * C1975 - C30757 * C1986) * C13126 +
                     (C2257 - C2258) * C13131 + (C2259 - C2260) * C13127) *
                        C13128 +
                    ((C6675 - C6676) * C13130 + (C6677 - C6678) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30860) *
                      C30813 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C2248 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C2249 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C2250 +
                   (((C6676 - C6675) * C13130 + (C6678 - C6677) * C13126 +
                     (C15432 - C15431) * C13131 + (C15434 - C15433) * C13127) *
                        C13128 +
                    ((C6680 - C6679) * C13130 + (C6682 - C6681) * C13126 +
                     (C30757 * C6569 - C113 * C6568) * C13131 +
                     (C30757 * C6571 - C113 * C6570) * C13127) *
                        C13129) *
                       C30860) *
                      C30623) *
                 C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C30757 * C124 - C113 * C117) * C13130 +
                        (C30757 * C138 - C113 * C125) * C13126 +
                        (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                           C13128 +
                       ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                        (C329 - C328) * C13131 + (C331 - C330) * C13127) *
                           C13129) *
                          C30578 * C30560 * C108 +
                      (((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                        (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                           C13128 +
                       ((C328 - C329) * C13130 + (C330 - C331) * C13126 +
                        C352 * C13131 + C353 * C13127) *
                           C13129) *
                          C30578 * C30560 * C109 +
                      ((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                        (C157 - C156) * C13127) *
                           C13128 +
                       ((C333 - C332) * C13130 + (C335 - C334) * C13126 +
                        C645 * C13131 + C646 * C13127) *
                           C13129) *
                          C30578 * C30560 * C110 +
                      ((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                        (C161 - C160) * C13127) *
                           C13128 +
                       ((C345 - C344) * C13130 + (C347 - C346) * C13126 +
                        (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                           C13129) *
                          C30578 * C30560 * C111 +
                      ((C170 * C13130 + C171 * C13126 + (C163 - C162) * C13131 +
                        (C165 - C164) * C13127) *
                           C13128 +
                       ((C648 - C647) * C13130 + (C650 - C649) * C13126 +
                        (C30757 * C641 - C113 * C640) * C13131 +
                        (C30757 * C643 - C113 * C642) * C13127) *
                           C13129) *
                          C30578 * C30560 * C112) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((((C30757 * C124 - C113 * C117) * C13130 +
                         (C30757 * C138 - C113 * C125) * C13126 +
                         (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                            C13128 +
                        ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                         C13279 * C13131 + C13280 * C13127) *
                            C13129) *
                           C30578 * C30881 +
                       (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                         C13281 * C13131 + C13282 * C13127) *
                            C13128 +
                        ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                         C4823 * C13131 + C4824 * C13127) *
                            C13129) *
                           C30578 * C30869 +
                       ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                         C13284 * C13127) *
                            C13128 +
                        ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                         C5744 * C13131 + C5745 * C13127) *
                            C13129) *
                           C30578 * C30844) *
                          C284 +
                      ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                         (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                            C13128 +
                        (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                         C353 * C13127) *
                            C13129) *
                           C30578 * C30881 +
                       ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                         C13286 * C13127) *
                            C13128 +
                        (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                         C355 * C13127) *
                            C13129) *
                           C30578 * C30869 +
                       ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                         C13288 * C13127) *
                            C13128 +
                        ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                         (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                            C13129) *
                           C30578 * C30844) *
                          C285 +
                      (((C166 * C13130 + C167 * C13126 +
                         (C155 - C154) * C13131 + (C157 - C156) * C13127) *
                            C13128 +
                        (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                         C646 * C13127) *
                            C13129) *
                           C30578 * C30881 +
                       ((C352 * C13130 + C353 * C13126 +
                         (C345 - C344) * C13131 + (C347 - C346) * C13127) *
                            C13128 +
                        (C13287 * C13130 + C13288 * C13126 +
                         (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                            C13129) *
                           C30578 * C30869 +
                       ((C354 * C13130 + C355 * C13126 +
                         (C349 - C348) * C13131 + (C351 - C350) * C13127) *
                            C13128 +
                        ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                         (C30757 * C1399 - C113 * C1398) * C13131 +
                         (C30757 * C1401 - C113 * C1400) * C13127) *
                            C13129) *
                           C30578 * C30844) *
                          C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30882 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     (C928 - C927) * C13131 + (C930 - C929) * C13127) *
                        C13129) *
                       C30871 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C284 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30882 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    ((C927 - C928) * C13130 + (C929 - C930) * C13126 +
                     C939 * C13131 + C940 * C13127) *
                        C13129) *
                       C30871 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    ((C2143 - C2144) * C13130 + (C2145 - C2146) * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C285 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30882 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    ((C932 - C931) * C13130 + (C934 - C933) * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30871 +
                   ((C535 * C13130 + C536 * C13126 + (C530 - C529) * C13131 +
                     (C532 - C531) * C13127) *
                        C13128 +
                    ((C2148 - C2147) * C13130 + (C2150 - C2149) * C13126 +
                     (C30757 * C2139 - C113 * C2138) * C13131 +
                     (C30757 * C2141 - C113 * C2140) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C1118 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C1119 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C1120 +
                  ((C5476 * C13130 + C5477 * C13126 + (C1403 - C1404) * C13131 +
                    (C1405 - C1406) * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C1121 +
                  ((C5488 * C13130 + C5489 * C13126 + (C5747 - C5746) * C13131 +
                    (C5749 - C5748) * C13127) *
                       C13128 +
                   ((C5483 - C5482) * C13130 + (C5485 - C5484) * C13126 +
                    (C30757 * C5740 - C113 * C5739) * C13131 +
                    (C30757 * C5742 - C113 * C5741) * C13127) *
                       C13129) *
                      C30578 * C1122) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30882 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30871 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C1050 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30882 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30871 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     (C2143 - C2144) * C13131 + (C2145 - C2146) * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30847) *
                      C1051 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30882 +
                   ((C5616 * C13130 + C5617 * C13126 +
                     (C1561 - C1562) * C13131 + (C1563 - C1564) * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30871 +
                   ((C5636 * C13130 + C5637 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C5631 - C5630) * C13130 + (C5633 - C5632) * C13126 +
                     (C30757 * C6463 - C113 * C6462) * C13131 +
                     (C30757 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30847) *
                      C30844) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1788 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1789 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C1788 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C1789 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    ((C2143 - C2144) * C13130 + (C2145 - C2146) * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C1788 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C1789 +
                   ((C535 * C13130 + C536 * C13126 + (C530 - C529) * C13131 +
                     (C532 - C531) * C13127) *
                        C13128 +
                    ((C2148 - C2147) * C13130 + (C2150 - C2149) * C13126 +
                     (C30757 * C2139 - C113 * C2138) * C13131 +
                     (C30757 * C2141 - C113 * C2140) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1788 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1789 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30881 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C1788 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C1789 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     (C2143 - C2144) * C13131 + (C2145 - C2146) * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30847) *
                      C30869 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C1788 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C1789 +
                   ((C5636 * C13130 + C5637 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C5631 - C5630) * C13130 + (C5633 - C5632) * C13126 +
                     (C30757 * C6463 - C113 * C6462) * C13131 +
                     (C30757 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30847) *
                      C30844) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C1963 +
                  (((C113 * C468 - C30757 * C478) * C13130 +
                    (C113 * C479 - C30757 * C498) * C13126 +
                    (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                       C13128 +
                   ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C1964 +
                  (((C30757 * C484 - C113 * C471) * C13130 +
                    (C30757 * C501 - C113 * C485) * C13126 +
                    (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                       C13128 +
                   ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                    (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                       C13129) *
                      C1965 +
                  (((C113 * C1968 - C30757 * C1974) * C13130 +
                    (C113 * C1975 - C30757 * C1986) * C13126 +
                    (C2257 - C2258) * C13131 + (C2259 - C2260) * C13127) *
                       C13128 +
                   ((C6675 - C6676) * C13130 + (C6677 - C6678) * C13126 +
                    (C113 * C2363 - C30757 * C2367) * C13131 +
                    (C113 * C2368 - C30757 * C2372) * C13127) *
                       C13129) *
                      C1966 +
                  (((C30757 * C1980 - C113 * C1971) * C13130 +
                    (C30757 * C1989 - C113 * C1981) * C13126 +
                    (C30757 * C1982 - C113 * C1972) * C13131 +
                    (C30757 * C1990 - C113 * C1983) * C13127) *
                       C13128 +
                   ((C30757 * C6309 - C113 * C6305) * C13130 +
                    (C30757 * C6314 - C113 * C6310) * C13126 +
                    (C30757 * C10605 - C113 * C10604) * C13131 +
                    (C30757 * C10607 - C113 * C10606) * C13127) *
                       C13129) *
                      C1967) *
                 C30560 * C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30814 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C1050 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C30814 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C1051 +
                   (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                      C5744 * C13131 + C5745 * C13127) *
                         C13129) *
                        C30814 +
                    ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                      (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30799 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C30814 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C1050 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C30814 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C1051 +
                   (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C14401 * C13130 + C14402 * C13126 +
                      (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                         C13129) *
                        C30814 +
                    ((C5903 * C13130 + C5904 * C13126 +
                      (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                         C13128 +
                     ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                      (C30757 * C1673 - C113 * C1668) * C13131 +
                      (C30757 * C1677 - C113 * C1674) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30543)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     (C928 - C927) * C13131 + (C930 - C929) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C636 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30814 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    ((C927 - C928) * C13130 + (C929 - C930) * C13126 +
                     C939 * C13131 + C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C637 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30814 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    ((C932 - C931) * C13130 + (C934 - C933) * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C638 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C30814 +
                   ((C755 * C13130 + C756 * C13126 + (C758 - C757) * C13131 +
                     (C760 - C759) * C13127) *
                        C13128 +
                    ((C936 - C935) * C13130 + (C938 - C937) * C13126 +
                     (C30757 * C919 - C113 * C910) * C13131 +
                     (C30757 * C925 - C113 * C920) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30848)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C2248 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C2249 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C2250 +
                   (((C113 * C1968 - C30757 * C1974) * C13130 +
                     (C113 * C1975 - C30757 * C1986) * C13126 +
                     (C2257 - C2258) * C13131 + (C2259 - C2260) * C13127) *
                        C13128 +
                    ((C6675 - C6676) * C13130 + (C6677 - C6678) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30860) *
                      C30560 * C30799 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C2248 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C2249 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C2250 +
                   (((C2258 - C2257) * C13130 + (C2260 - C2259) * C13126 +
                     (C2262 - C2261) * C13131 + (C2264 - C2263) * C13127) *
                        C13128 +
                    ((C15432 - C15431) * C13130 + (C15434 - C15433) * C13126 +
                     (C30757 * C2369 - C113 * C2364) * C13131 +
                     (C30757 * C2373 - C113 * C2370) * C13127) *
                        C13129) *
                       C30860) *
                      C30560 * C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C284 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C285 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C352 * C13130 + C353 * C13126 + (C345 - C344) * C13131 +
                     (C347 - C346) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    (C329 - C328) * C13131 + (C331 - C330) * C13127) *
                       C13129) *
                      C30578 * C30560 * C108 +
                  (((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   ((C328 - C329) * C13130 + (C330 - C331) * C13126 +
                    C352 * C13131 + C353 * C13127) *
                       C13129) *
                      C30578 * C30560 * C109 +
                  ((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   ((C333 - C332) * C13130 + (C335 - C334) * C13126 +
                    C645 * C13131 + C646 * C13127) *
                       C13129) *
                      C30578 * C30560 * C110 +
                  ((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                    (C161 - C160) * C13127) *
                       C13128 +
                   ((C345 - C344) * C13130 + (C347 - C346) * C13126 +
                    (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                       C13129) *
                      C30578 * C30560 * C111 +
                  ((C170 * C13130 + C171 * C13126 + (C163 - C162) * C13131 +
                    (C165 - C164) * C13127) *
                       C13128 +
                   ((C648 - C647) * C13130 + (C650 - C649) * C13126 +
                    (C30757 * C641 - C113 * C640) * C13131 +
                    (C30757 * C643 - C113 * C642) * C13127) *
                       C13129) *
                      C30578 * C30560 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C1118 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C1119 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C1120 +
                  ((C5476 * C13130 + C5477 * C13126 + (C1403 - C1404) * C13131 +
                    (C1405 - C1406) * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C1121 +
                  ((C5488 * C13130 + C5489 * C13126 + (C5747 - C5746) * C13131 +
                    (C5749 - C5748) * C13127) *
                       C13128 +
                   ((C5483 - C5482) * C13130 + (C5485 - C5484) * C13126 +
                    (C30757 * C5740 - C113 * C5739) * C13131 +
                    (C30757 * C5742 - C113 * C5741) * C13127) *
                       C13129) *
                      C30578 * C1122) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1788 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1789 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C1788 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C1789 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    ((C2143 - C2144) * C13130 + (C2145 - C2146) * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C1788 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C1789 +
                   ((C535 * C13130 + C536 * C13126 + (C530 - C529) * C13131 +
                     (C532 - C531) * C13127) *
                        C13128 +
                    ((C2148 - C2147) * C13130 + (C2150 - C2149) * C13126 +
                     (C30757 * C2139 - C113 * C2138) * C13131 +
                     (C30757 * C2141 - C113 * C2140) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1788 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1789 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30881 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C1788 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C1789 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     (C2143 - C2144) * C13131 + (C2145 - C2146) * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30847) *
                      C30869 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C1788 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C1789 +
                   ((C5636 * C13130 + C5637 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C5631 - C5630) * C13130 + (C5633 - C5632) * C13126 +
                     (C30757 * C6463 - C113 * C6462) * C13131 +
                     (C30757 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30847) *
                      C30844) *
                 C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3234 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C3234 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C30537 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C3234 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C3234 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C30546 +
                  ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                      (C157 - C156) * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                      C646 * C13127) *
                         C13129) *
                        C3234 +
                    ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                      (C528 - C527) * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                      C13566 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                         C13129) *
                        C3234 +
                    ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                      (C938 - C937) * C13127) *
                         C13128 +
                     ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                      (C30757 * C1557 - C113 * C1556) * C13131 +
                      (C30757 * C1559 - C113 * C1558) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C2843)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30661 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30668 +
                    (((C30757 * C484 - C113 * C471) * C13130 +
                      (C30757 * C501 - C113 * C485) * C13126 +
                      (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                         C13128 +
                     ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                      C15297 * C13131 + C15298 * C13127) *
                         C13129) *
                        C3742) *
                       C30813 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C30661 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30668 +
                    (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                      C15299 * C13131 + C15300 * C13127) *
                         C13128 +
                     ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                      (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                         C13129) *
                        C3742) *
                       C30623) *
                      C2580 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C30661 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30668 +
                    (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                      (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                         C13128 +
                     (C15299 * C13130 + C15300 * C13126 +
                      (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                         C13129) *
                        C3742) *
                       C30813 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C30661 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30668 +
                    ((C15297 * C13130 + C15298 * C13126 +
                      (C2148 - C2147) * C13131 + (C2150 - C2149) * C13127) *
                         C13128 +
                     ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                      (C30757 * C1283 - C113 * C1266) * C13131 +
                      (C30757 * C1293 - C113 * C1284) * C13127) *
                         C13129) *
                        C3742) *
                       C30623) *
                      C30543)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3234 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C30881 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C3234 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C30869 +
                   (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                      C5744 * C13131 + C5745 * C13127) *
                         C13129) *
                        C3234 +
                    ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                      (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C2580 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C3234 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C30881 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C3234 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C30869 +
                   (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C14401 * C13130 + C14402 * C13126 +
                      (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                         C13129) *
                        C3234 +
                    ((C5903 * C13130 + C5904 * C13126 +
                      (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                         C13128 +
                     ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                      (C30757 * C1673 - C113 * C1668) * C13131 +
                      (C30757 * C1677 - C113 * C1674) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30543)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3234 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30887 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C3234 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30880 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C3234 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30867 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C3234 +
                   ((C755 * C13130 + C756 * C13126 + (C758 - C757) * C13131 +
                     (C760 - C759) * C13127) *
                        C13128 +
                    ((C936 - C935) * C13130 + (C938 - C937) * C13126 +
                     (C30757 * C919 - C113 * C910) * C13131 +
                     (C30757 * C925 - C113 * C920) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30848)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30889 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30886 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C30877 +
                   (((C113 * C1968 - C30757 * C1974) * C13130 +
                     (C113 * C1975 - C30757 * C1986) * C13126 +
                     (C2257 - C2258) * C13131 + (C2259 - C2260) * C13127) *
                        C13128 +
                    ((C6675 - C6676) * C13130 + (C6677 - C6678) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30860) *
                      C30560 * C2580 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30889 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30886 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30877 +
                   (((C2258 - C2257) * C13130 + (C2260 - C2259) * C13126 +
                     (C2262 - C2261) * C13131 + (C2264 - C2263) * C13127) *
                        C13128 +
                    ((C15432 - C15431) * C13130 + (C15434 - C15433) * C13126 +
                     (C30757 * C2369 - C113 * C2364) * C13131 +
                     (C30757 * C2373 - C113 * C2370) * C13127) *
                        C13129) *
                       C30860) *
                      C30560 * C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30661 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30668 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C3742) *
                      C30560 * C30537 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30661 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30668 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C3742) *
                      C30560 * C30546 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30661 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30668 +
                   ((C535 * C13130 + C536 * C13126 + (C530 - C529) * C13131 +
                     (C532 - C531) * C13127) *
                        C13128 +
                    ((C2148 - C2147) * C13130 + (C2150 - C2149) * C13126 +
                     (C30757 * C2139 - C113 * C2138) * C13131 +
                     (C30757 * C2141 - C113 * C2140) * C13127) *
                        C13129) *
                       C3742) *
                      C30560 * C2843)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3234 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30887 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C3234 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                     C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30880 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C3234 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30867 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C3234 +
                   ((C755 * C13130 + C756 * C13126 + (C758 - C757) * C13131 +
                     (C760 - C759) * C13127) *
                        C13128 +
                    ((C936 - C935) * C13130 + (C938 - C937) * C13126 +
                     (C30757 * C919 - C113 * C910) * C13131 +
                     (C30757 * C925 - C113 * C920) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30848)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3234 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C30881 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C3234 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C30869 +
                   (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                      C5744 * C13131 + C5745 * C13127) *
                         C13129) *
                        C3234 +
                    ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                      (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C2580 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C3234 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C30881 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C3234 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C30869 +
                   (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C14401 * C13130 + C14402 * C13126 +
                      (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                         C13129) *
                        C3234 +
                    ((C5903 * C13130 + C5904 * C13126 +
                      (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                         C13128 +
                     ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                      (C30757 * C1673 - C113 * C1668) * C13131 +
                      (C30757 * C1677 - C113 * C1674) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C636 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C637 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C638 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C30578 * C30813 +
                   ((C645 * C13130 + C646 * C13126 + (C648 - C647) * C13131 +
                     (C650 - C649) * C13127) *
                        C13128 +
                    ((C349 - C348) * C13130 + (C351 - C350) * C13126 +
                     (C30757 * C315 - C113 * C296) * C13131 +
                     (C30757 * C326 - C113 * C316) * C13127) *
                        C13129) *
                       C30578 * C30623) *
                      C30848)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1392 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1393 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C1394 +
                   ((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                     (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                        C13129) *
                       C30578 * C30854) *
                      C30799 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1392 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1393 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C1394 +
                   ((C5744 * C13130 + C5745 * C13126 +
                     (C1408 - C1407) * C13131 + (C1410 - C1409) * C13127) *
                        C13128 +
                    ((C5747 - C5746) * C13130 + (C5749 - C5748) * C13126 +
                     (C30757 * C1140 - C113 * C1129) * C13131 +
                     (C30757 * C1147 - C113 * C1141) * C13127) *
                        C13129) *
                       C30578 * C30854) *
                      C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30814 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C30814 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C284 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C30814 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C30814 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     ((C1561 - C1562) * C13130 + (C1563 - C1564) * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C285 +
                  ((((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                      (C157 - C156) * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                      C646 * C13127) *
                         C13129) *
                        C30814 +
                    ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                      (C528 - C527) * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                         C13129) *
                        C30665) *
                       C30813 +
                   (((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                      C13566 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                         C13129) *
                        C30814 +
                    ((C939 * C13130 + C940 * C13126 + (C936 - C935) * C13131 +
                      (C938 - C937) * C13127) *
                         C13128 +
                     ((C1566 - C1565) * C13130 + (C1568 - C1567) * C13126 +
                      (C30757 * C1557 - C113 * C1556) * C13131 +
                      (C30757 * C1559 - C113 * C1558) * C13127) *
                         C13129) *
                        C30665) *
                       C30623) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30665) *
                      C1392 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30814 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30665) *
                      C1393 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30814 +
                   ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30665) *
                      C1394 +
                  (((C5476 * C13130 + C5477 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                     (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                        C13129) *
                       C30814 +
                   ((C6014 * C13130 + C6015 * C13126 +
                     (C5906 - C5905) * C13131 + (C5908 - C5907) * C13127) *
                        C13128 +
                    ((C6017 - C6016) * C13130 + (C6019 - C6018) * C13126 +
                     (C30757 * C5899 - C113 * C5898) * C13131 +
                     (C30757 * C5901 - C113 * C5900) * C13127) *
                        C13129) *
                       C30665) *
                      C30854) *
                 C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C284 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C285 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C352 * C13130 + C353 * C13126 + (C345 - C344) * C13131 +
                     (C347 - C346) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    (C329 - C328) * C13131 + (C331 - C330) * C13127) *
                       C13129) *
                      C30578 * C30560 * C108 +
                  (((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   ((C328 - C329) * C13130 + (C330 - C331) * C13126 +
                    C352 * C13131 + C353 * C13127) *
                       C13129) *
                      C30578 * C30560 * C109 +
                  ((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   ((C333 - C332) * C13130 + (C335 - C334) * C13126 +
                    C645 * C13131 + C646 * C13127) *
                       C13129) *
                      C30578 * C30560 * C110 +
                  ((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                    (C161 - C160) * C13127) *
                       C13128 +
                   ((C345 - C344) * C13130 + (C347 - C346) * C13126 +
                    (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                       C13129) *
                      C30578 * C30560 * C111 +
                  ((C170 * C13130 + C171 * C13126 + (C163 - C162) * C13131 +
                    (C165 - C164) * C13127) *
                       C13128 +
                   ((C648 - C647) * C13130 + (C650 - C649) * C13126 +
                    (C30757 * C641 - C113 * C640) * C13131 +
                    (C30757 * C643 - C113 * C642) * C13127) *
                       C13129) *
                      C30578 * C30560 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30882 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     (C928 - C927) * C13131 + (C930 - C929) * C13127) *
                        C13129) *
                       C30871 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C284 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30882 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    ((C927 - C928) * C13130 + (C929 - C930) * C13126 +
                     C939 * C13131 + C940 * C13127) *
                        C13129) *
                       C30871 +
                   (((C518 - C517) * C13130 + (C520 - C519) * C13126 +
                     (C522 - C521) * C13131 + (C524 - C523) * C13127) *
                        C13128 +
                    ((C2143 - C2144) * C13130 + (C2145 - C2146) * C13126 +
                     (C2147 - C2148) * C13131 + (C2149 - C2150) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C285 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30882 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    ((C932 - C931) * C13130 + (C934 - C933) * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30871 +
                   ((C535 * C13130 + C536 * C13126 + (C530 - C529) * C13131 +
                     (C532 - C531) * C13127) *
                        C13128 +
                    ((C2148 - C2147) * C13130 + (C2150 - C2149) * C13126 +
                     (C30757 * C2139 - C113 * C2138) * C13131 +
                     (C30757 * C2141 - C113 * C2140) * C13127) *
                        C13129) *
                       C30847) *
                      C30560 * C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C1118 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C1119 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C1120 +
                  ((C5476 * C13130 + C5477 * C13126 + (C1403 - C1404) * C13131 +
                    (C1405 - C1406) * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C1121 +
                  ((C5488 * C13130 + C5489 * C13126 + (C5747 - C5746) * C13131 +
                    (C5749 - C5748) * C13127) *
                       C13128 +
                   ((C5483 - C5482) * C13130 + (C5485 - C5484) * C13126 +
                    (C30757 * C5740 - C113 * C5739) * C13131 +
                    (C30757 * C5742 - C113 * C5741) * C13127) *
                       C13129) *
                      C30578 * C1122) *
                 C30532) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30882 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30871 +
                   (((C30757 * C484 - C113 * C471) * C13130 +
                     (C30757 * C501 - C113 * C485) * C13126 +
                     (C517 - C518) * C13131 + (C519 - C520) * C13127) *
                        C13128 +
                    ((C5618 - C5619) * C13130 + (C5620 - C5621) * C13126 +
                     (C2144 - C2143) * C13131 + (C2146 - C2145) * C13127) *
                        C13129) *
                       C30847) *
                      C1050 +
                  ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30882 +
                   (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                     C5903 * C13131 + C5904 * C13127) *
                        C13129) *
                       C30871 +
                   (((C5619 - C5618) * C13130 + (C5621 - C5620) * C13126 +
                     (C2143 - C2144) * C13131 + (C2145 - C2146) * C13127) *
                        C13128 +
                    ((C5623 - C5622) * C13130 + (C5625 - C5624) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30847) *
                      C1051 +
                  (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30882 +
                   ((C5616 * C13130 + C5617 * C13126 +
                     (C1561 - C1562) * C13131 + (C1563 - C1564) * C13127) *
                        C13128 +
                    ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                     (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                        C13129) *
                       C30871 +
                   ((C5636 * C13130 + C5637 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C5631 - C5630) * C13130 + (C5633 - C5632) * C13126 +
                     (C30757 * C6463 - C113 * C6462) * C13131 +
                     (C30757 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30847) *
                      C30844) *
                 C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30814 +
                   (((C113 * C468 - C30757 * C478) * C13130 +
                     (C113 * C479 - C30757 * C498) * C13126 +
                     (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                        C13128 +
                    ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                     (C928 - C927) * C13131 + (C930 - C929) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C636 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30814 +
                   (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                     (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                        C13128 +
                    ((C927 - C928) * C13130 + (C929 - C930) * C13126 +
                     C939 * C13131 + C940 * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C637 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30814 +
                   ((C533 * C13130 + C534 * C13126 + (C526 - C525) * C13131 +
                     (C528 - C527) * C13127) *
                        C13128 +
                    ((C932 - C931) * C13130 + (C934 - C933) * C13126 +
                     (C935 - C936) * C13131 + (C937 - C938) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C638 +
                  (((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                     (C161 - C160) * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                        C13129) *
                       C30814 +
                   ((C755 * C13130 + C756 * C13126 + (C758 - C757) * C13131 +
                     (C760 - C759) * C13127) *
                        C13128 +
                    ((C936 - C935) * C13130 + (C938 - C937) * C13126 +
                     (C30757 * C919 - C113 * C910) * C13131 +
                     (C30757 * C925 - C113 * C920) * C13127) *
                        C13129) *
                       C30665) *
                      C30560 * C30848)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30757 * C124 - C113 * C117) * C13130 +
                      (C30757 * C138 - C113 * C125) * C13126 +
                      (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                         C13128 +
                     ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30814 +
                    (((C113 * C468 - C30757 * C478) * C13130 +
                      (C113 * C479 - C30757 * C498) * C13126 +
                      (C509 - C510) * C13131 + (C511 - C512) * C13127) *
                         C13128 +
                     ((C5288 - C5289) * C13130 + (C5290 - C5291) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30665) *
                       C1050 +
                   ((((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                      C4823 * C13131 + C4824 * C13127) *
                         C13129) *
                        C30814 +
                    (((C5289 - C5288) * C13130 + (C5291 - C5290) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C5293 - C5292) * C13130 + (C5295 - C5294) * C13126 +
                      C5903 * C13131 + C5904 * C13127) *
                         C13129) *
                        C30665) *
                       C1051 +
                   (((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                      C5744 * C13131 + C5745 * C13127) *
                         C13129) *
                        C30814 +
                    ((C5616 * C13130 + C5617 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     ((C5627 - C5626) * C13130 + (C5629 - C5628) * C13126 +
                      (C5905 - C5906) * C13131 + (C5907 - C5908) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30799 +
                  (((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                      (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                      C353 * C13127) *
                         C13129) *
                        C30814 +
                    (((C510 - C509) * C13130 + (C512 - C511) * C13126 +
                      (C514 - C513) * C13131 + (C516 - C515) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C939 * C13131 +
                      C940 * C13127) *
                         C13129) *
                        C30665) *
                       C1050 +
                   (((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                      C355 * C13127) *
                         C13129) *
                        C30814 +
                    ((C13891 * C13130 + C13892 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C1565 - C1566) * C13131 + (C1567 - C1568) * C13127) *
                         C13129) *
                        C30665) *
                       C1051 +
                   (((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C14401 * C13130 + C14402 * C13126 +
                      (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                         C13129) *
                        C30814 +
                    ((C5903 * C13130 + C5904 * C13126 +
                      (C1566 - C1565) * C13131 + (C1568 - C1567) * C13127) *
                         C13128 +
                     ((C5906 - C5905) * C13130 + (C5908 - C5907) * C13126 +
                      (C30757 * C1673 - C113 * C1668) * C13131 +
                      (C30757 * C1677 - C113 * C1674) * C13127) *
                         C13129) *
                        C30665) *
                       C30844) *
                      C30543)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    (C329 - C328) * C13131 + (C331 - C330) * C13127) *
                       C13129) *
                      C30578 * C30560 * C108 +
                  (((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                    (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                       C13128 +
                   ((C328 - C329) * C13130 + (C330 - C331) * C13126 +
                    C352 * C13131 + C353 * C13127) *
                       C13129) *
                      C30578 * C30560 * C109 +
                  ((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                    (C157 - C156) * C13127) *
                       C13128 +
                   ((C333 - C332) * C13130 + (C335 - C334) * C13126 +
                    C645 * C13131 + C646 * C13127) *
                       C13129) *
                      C30578 * C30560 * C110 +
                  ((C168 * C13130 + C169 * C13126 + (C159 - C158) * C13131 +
                    (C161 - C160) * C13127) *
                       C13128 +
                   ((C345 - C344) * C13130 + (C347 - C346) * C13126 +
                    (C647 - C648) * C13131 + (C649 - C650) * C13127) *
                       C13129) *
                      C30578 * C30560 * C111 +
                  ((C170 * C13130 + C171 * C13126 + (C163 - C162) * C13131 +
                    (C165 - C164) * C13127) *
                       C13128 +
                   ((C648 - C647) * C13130 + (C650 - C649) * C13126 +
                    (C30757 * C641 - C113 * C640) * C13131 +
                    (C30757 * C643 - C113 * C642) * C13127) *
                       C13129) *
                      C30578 * C30560 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C284 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C285 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C30881 +
                   ((C352 * C13130 + C353 * C13126 + (C345 - C344) * C13131 +
                     (C347 - C346) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C30869 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30757 * C124 - C113 * C117) * C13130 +
                     (C30757 * C138 - C113 * C125) * C13126 +
                     (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                        C13128 +
                    ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                     C4823 * C13131 + C4824 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                     C5744 * C13131 + C5745 * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30878 +
                  ((((C147 - C146) * C13130 + (C149 - C148) * C13126 +
                     (C151 - C150) * C13131 + (C153 - C152) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C352 * C13131 +
                     C353 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C13279 * C13130 + C13280 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C354 * C13131 +
                     C355 * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C4823 * C13130 + C4824 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C1403 - C1404) * C13130 + (C1405 - C1406) * C13126 +
                     (C1407 - C1408) * C13131 + (C1409 - C1410) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30865 +
                  (((C166 * C13130 + C167 * C13126 + (C155 - C154) * C13131 +
                     (C157 - C156) * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C645 * C13131 +
                     C646 * C13127) *
                        C13129) *
                       C30578 * C1050 +
                   ((C352 * C13130 + C353 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C348 - C349) * C13131 + (C350 - C351) * C13127) *
                        C13129) *
                       C30578 * C1051 +
                   ((C354 * C13130 + C355 * C13126 + (C349 - C348) * C13131 +
                     (C351 - C350) * C13127) *
                        C13128 +
                    ((C1408 - C1407) * C13130 + (C1410 - C1409) * C13126 +
                     (C30757 * C1399 - C113 * C1398) * C13131 +
                     (C30757 * C1401 - C113 * C1400) * C13127) *
                        C13129) *
                       C30578 * C30844) *
                      C30838)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30757 * C124 - C113 * C117) * C13130 +
                    (C30757 * C138 - C113 * C125) * C13126 +
                    (C146 - C147) * C13131 + (C148 - C149) * C13127) *
                       C13128 +
                   ((C4811 - C4812) * C13130 + (C4813 - C4814) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30578 * C1118 +
                  (((C4812 - C4811) * C13130 + (C4814 - C4813) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C4816 - C4815) * C13130 + (C4818 - C4817) * C13126 +
                    C4823 * C13131 + C4824 * C13127) *
                       C13129) *
                      C30578 * C1119 +
                  ((C4827 * C13130 + C4828 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   ((C4820 - C4819) * C13130 + (C4822 - C4821) * C13126 +
                    C5744 * C13131 + C5745 * C13127) *
                       C13129) *
                      C30578 * C1120 +
                  ((C5476 * C13130 + C5477 * C13126 + (C1403 - C1404) * C13131 +
                    (C1405 - C1406) * C13127) *
                       C13128 +
                   ((C5479 - C5478) * C13130 + (C5481 - C5480) * C13126 +
                    (C5746 - C5747) * C13131 + (C5748 - C5749) * C13127) *
                       C13129) *
                      C30578 * C1121 +
                  ((C5488 * C13130 + C5489 * C13126 + (C5747 - C5746) * C13131 +
                    (C5749 - C5748) * C13127) *
                       C13128 +
                   ((C5483 - C5482) * C13130 + (C5485 - C5484) * C13126 +
                    (C30757 * C5740 - C113 * C5739) * C13131 +
                    (C30757 * C5742 - C113 * C5741) * C13127) *
                       C13129) *
                      C30578 * C1122) *
                 C30532) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30619 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30626 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30578 * C2840) *
              C30537 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30619 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30626 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C2840) *
              C30546 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30619 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30626 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C2840) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30619 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30626 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C30814 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C25861 - C25862 + C25863 - C25864) * C4699 +
              (C25865 - C25866 + C25867 - C25868) * C30508) *
                 C13129) *
                C30665) *
               C2840) *
              C2580 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30619 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30626 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C30814 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C2840) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30888 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30884 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30578 * C30874 +
           (((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30578 * C30854) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30888 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30884 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30874 +
           (((C19994 - C19993 + C19996 - C19995) * C4699 +
             (C19998 - C19997 + C20000 - C19999) * C30508) *
                C13128 +
            ((C18610 * C1138 - C18612 * C1128 + C18611 * C5899 -
              C18613 * C5898) *
                 C4699 +
             (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 -
              C18613 * C5900) *
                 C30508) *
                C13129) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30887 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30880 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30867 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C19134 - C19133 + C19136 - C19135) * C4699 +
             (C19138 - C19137 + C19140 - C19139) * C30508) *
                C13128 +
            ((C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                 C4699 +
             (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                 C30508) *
                C13129) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30882 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30871 +
            (((C18610 * C484 - C18612 * C471 + C18611 * C1974 -
               C18613 * C1968) *
                  C4699 +
              (C18610 * C501 - C18612 * C485 + C18611 * C1986 -
               C18613 * C1975) *
                  C30508) *
                 C13128 +
             ((C25383 - C25384 + C25385 - C25386) * C4699 +
              (C25387 - C25388 + C25389 - C25390) * C30508) *
                 C13129) *
                C30847) *
               C2472 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30882 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30871 +
            (((C25384 - C25383 + C25386 - C25385) * C4699 +
              (C25388 - C25387 + C25390 - C25389) * C30508) *
                 C13128 +
             ((C25399 - C25400 + C25401 - C25402) * C4699 +
              (C25403 - C25404 + C25405 - C25406) * C30508) *
                 C13129) *
                C30847) *
               C30623) *
              C2580 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30882 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30871 +
            (((C18980 - C18979 + C18982 - C18981) * C4699 +
              (C18984 - C18983 + C18986 - C18985) * C30508) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C4699 +
              (C20905 - C20906 + C20907 - C20908) * C30508) *
                 C13129) *
                C30847) *
               C2472 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30882 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30871 +
            (((C20902 - C20901 + C20904 - C20903) * C4699 +
              (C20906 - C20905 + C20908 - C20907) * C30508) *
                 C13128 +
             ((C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
               C18613 * C6568) *
                  C4699 +
              (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
               C18613 * C6570) *
                  C30508) *
                 C13129) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30537 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30546 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C30814 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C30814 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30887 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30880 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30623) *
              C30867 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30578 * C2472 +
           (((C19134 - C19133 + C19136 - C19135) * C4699 +
             (C19138 - C19137 + C19140 - C19139) * C30508) *
                C13128 +
            ((C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                 C4699 +
             (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                 C30508) *
                C13129) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30888 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30884 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30578 * C30874 +
           (((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30578 * C30854) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30888 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30884 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30874 +
           (((C19994 - C19993 + C19996 - C19995) * C4699 +
             (C19998 - C19997 + C20000 - C19999) * C30508) *
                C13128 +
            ((C18610 * C1138 - C18612 * C1128 + C18611 * C5899 -
              C18613 * C5898) *
                 C4699 +
             (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 -
              C18613 * C5900) *
                 C30508) *
                C13129) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30619 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30626 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C3234 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C25861 - C25862 + C25863 - C25864) * C4699 +
              (C25865 - C25866 + C25867 - C25868) * C30508) *
                 C13129) *
                C30665) *
               C2840) *
              C30799 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30619 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30626 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C3234 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C2840) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30661 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30668 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C3742) *
              C30619 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30661 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30668 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C3742) *
              C30626 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30661 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C30668 +
           (((C25400 - C25399 + C25402 - C25401) * C4699 +
             (C25404 - C25403 + C25406 - C25405) * C30508) *
                C13128 +
            ((C18610 * C5606 - C18612 * C5603 + C18611 * C6671 -
              C18613 * C6670) *
                 C4699 +
             (C18610 * C5612 - C18612 * C5607 + C18611 * C6673 -
              C18613 * C6672) *
                 C30508) *
                C13129) *
               C3742) *
              C2840) *
         C30532) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C3234 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C30888 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C3234 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30665) *
              C30884 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C3234 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C30665) *
              C30874 +
          ((((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C3234 +
           (((C25862 - C25861 + C25864 - C25863) * C4699 +
             (C25866 - C25865 + C25868 - C25867) * C30508) *
                C13128 +
            ((C18610 * C5608 - C18612 * C5604 + C18611 * C5610 -
              C18613 * C5605) *
                 C4699 +
             (C18610 * C5613 - C18612 * C5609 + C18611 * C5614 -
              C18613 * C5611) *
                 C30508) *
                C13129) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30878 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30865 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C3234 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C3234 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30889 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30886 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30877 +
           (((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
              C18611 * C1980) *
                 C4699 +
             (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
              C18611 * C1989) *
                 C30508) *
                C13128 +
            ((C26697 - C26698 + C26699 - C26700) * C4699 +
             (C26701 - C26702 + C26703 - C26704) * C30508) *
                C13129) *
               C30860) *
              C2472 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30889 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30886 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C30877 +
           (((C26698 - C26697 + C26700 - C26699) * C4699 +
             (C26702 - C26701 + C26704 - C26703) * C30508) *
                C13128 +
            ((C18610 * C6307 - C18612 * C6304 + C18611 * C6311 -
              C18613 * C6306) *
                 C4699 +
             (C18610 * C6313 - C18612 * C6308 + C18611 * C6315 -
              C18613 * C6312) *
                 C30508) *
                C13129) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30661 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30668 +
            (((C18610 * C484 - C18612 * C471 + C18611 * C1974 -
               C18613 * C1968) *
                  C4699 +
              (C18610 * C501 - C18612 * C485 + C18611 * C1986 -
               C18613 * C1975) *
                  C30508) *
                 C13128 +
             ((C25383 - C25384 + C25385 - C25386) * C4699 +
              (C25387 - C25388 + C25389 - C25390) * C30508) *
                 C13129) *
                C3742) *
               C2472 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30661 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30668 +
            (((C25384 - C25383 + C25386 - C25385) * C4699 +
              (C25388 - C25387 + C25390 - C25389) * C30508) *
                 C13128 +
             ((C25399 - C25400 + C25401 - C25402) * C4699 +
              (C25403 - C25404 + C25405 - C25406) * C30508) *
                 C13129) *
                C3742) *
               C30623) *
              C30799 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30661 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30668 +
            (((C18980 - C18979 + C18982 - C18981) * C4699 +
              (C18984 - C18983 + C18986 - C18985) * C30508) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C4699 +
              (C20905 - C20906 + C20907 - C20908) * C30508) *
                 C13129) *
                C3742) *
               C2472 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30661 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30668 +
            (((C20902 - C20901 + C20904 - C20903) * C4699 +
              (C20906 - C20905 + C20908 - C20907) * C30508) *
                 C13128 +
             ((C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
               C18613 * C6568) *
                  C4699 +
              (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
               C18613 * C6570) *
                  C30508) *
                 C13129) *
                C3742) *
               C30623) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30878 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30865 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C3234 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C2472 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C3234 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C3234 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C30888 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C3234 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30665) *
              C30884 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C3234 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C30665) *
              C30874 +
          ((((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C3234 +
           (((C25862 - C25861 + C25864 - C25863) * C4699 +
             (C25866 - C25865 + C25868 - C25867) * C30508) *
                C13128 +
            ((C18610 * C5608 - C18612 * C5604 + C18611 * C5610 -
              C18613 * C5605) *
                 C4699 +
             (C18610 * C5613 - C18612 * C5609 + C18611 * C5614 -
              C18613 * C5611) *
                 C30508) *
                C13129) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1392 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1393 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30578 * C1394 +
           (((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30578 * C30854) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1392 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1393 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C1394 +
           (((C19994 - C19993 + C19996 - C19995) * C4699 +
             (C19998 - C19997 + C20000 - C19999) * C30508) *
                C13128 +
            ((C18610 * C1138 - C18612 * C1128 + C18611 * C5899 -
              C18613 * C5898) *
                 C4699 +
             (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 -
              C18613 * C5900) *
                 C30508) *
                C13129) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30623) *
              C636 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30623) *
              C637 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30623) *
              C638 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C19134 - C19133 + C19136 - C19135) * C4699 +
             (C19138 - C19137 + C19140 - C19139) * C30508) *
                C13128 +
            ((C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                 C4699 +
             (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                 C30508) *
                C13129) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C1788 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C1789 +
            (((C18610 * C484 - C18612 * C471 + C18611 * C1974 -
               C18613 * C1968) *
                  C4699 +
              (C18610 * C501 - C18612 * C485 + C18611 * C1986 -
               C18613 * C1975) *
                  C30508) *
                 C13128 +
             ((C25383 - C25384 + C25385 - C25386) * C4699 +
              (C25387 - C25388 + C25389 - C25390) * C30508) *
                 C13129) *
                C30847) *
               C30813 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C1788 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C1789 +
            (((C25384 - C25383 + C25386 - C25385) * C4699 +
              (C25388 - C25387 + C25390 - C25389) * C30508) *
                 C13128 +
             ((C25399 - C25400 + C25401 - C25402) * C4699 +
              (C25403 - C25404 + C25405 - C25406) * C30508) *
                 C13129) *
                C30847) *
               C30623) *
              C30799 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C1788 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C1789 +
            (((C18980 - C18979 + C18982 - C18981) * C4699 +
              (C18984 - C18983 + C18986 - C18985) * C30508) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C4699 +
              (C20905 - C20906 + C20907 - C20908) * C30508) *
                 C13129) *
                C30847) *
               C30813 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C1788 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C1789 +
            (((C20902 - C20901 + C20904 - C20903) * C4699 +
              (C20906 - C20905 + C20908 - C20907) * C30508) *
                 C13128 +
             ((C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
               C18613 * C6568) *
                  C4699 +
              (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
               C18613 * C6570) *
                  C30508) *
                 C13129) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30814 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C1392 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30814 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30665) *
              C1393 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30814 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C30665) *
              C1394 +
          ((((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30814 +
           (((C25862 - C25861 + C25864 - C25863) * C4699 +
             (C25866 - C25865 + C25868 - C25867) * C30508) *
                C13128 +
            ((C18610 * C5608 - C18612 * C5604 + C18611 * C5610 -
              C18613 * C5605) *
                 C4699 +
             (C18610 * C5613 - C18612 * C5609 + C18611 * C5614 -
              C18613 * C5611) *
                 C30508) *
                C13129) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C18610 * C1273 - C18612 * C1261 + C18611 * C1279 -
               C18613 * C1264) *
                  C4699 +
              (C18610 * C1288 - C18612 * C1274 + C18611 * C1291 -
               C18613 * C1280) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C284 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C285 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C30814 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C30814 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C2248 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C2249 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C2250 +
           (((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
              C18611 * C1980) *
                 C4699 +
             (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
              C18611 * C1989) *
                 C30508) *
                C13128 +
            ((C26697 - C26698 + C26699 - C26700) * C4699 +
             (C26701 - C26702 + C26703 - C26704) * C30508) *
                C13129) *
               C30860) *
              C30813 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C2248 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C2249 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C2250 +
           (((C26698 - C26697 + C26700 - C26699) * C4699 +
             (C26702 - C26701 + C26704 - C26703) * C30508) *
                C13128 +
            ((C18610 * C6307 - C18612 * C6304 + C18611 * C6311 -
              C18613 * C6306) *
                 C4699 +
             (C18610 * C6313 - C18612 * C6308 + C18611 * C6315 -
              C18613 * C6312) *
                 C30508) *
                C13129) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18610 * C124 - C18612 * C117 + C18611 * C478 -
                 C18613 * C468) *
                    C4699 +
                (C18610 * C138 - C18612 * C125 + C18611 * C498 -
                 C18613 * C479) *
                    C30508) *
                   C13128 +
               ((C18610 * C297 - C18612 * C287 + C18611 * C911 -
                 C18613 * C906) *
                    C4699 +
                (C18610 * C317 - C18612 * C298 + C18611 * C921 -
                 C18613 * C912) *
                    C30508) *
                   C13129) *
                  C30578 * C30560 * C108 +
              (((C18616 - C18615 + C18618 - C18617) * C4699 +
                (C18620 - C18619 + C18622 - C18621) * C30508) *
                   C13128 +
               ((C18793 - C18794 + C18795 - C18796) * C4699 +
                (C18797 - C18798 + C18799 - C18800) * C30508) *
                   C13129) *
                  C30578 * C30560 * C109 +
              (((C18624 - C18623 + C18626 - C18625) * C4699 +
                (C18628 - C18627 + C18630 - C18629) * C30508) *
                   C13128 +
               ((C18809 - C18810 + C18811 - C18812) * C4699 +
                (C18813 - C18814 + C18815 - C18816) * C30508) *
                   C13129) *
                  C30578 * C30560 * C110 +
              (((C18632 - C18631 + C18634 - C18633) * C4699 +
                (C18636 - C18635 + C18638 - C18637) * C30508) *
                   C13128 +
               ((C19133 - C19134 + C19135 - C19136) * C4699 +
                (C19137 - C19138 + C19139 - C19140) * C30508) *
                   C13129) *
                  C30578 * C30560 * C111 +
              (((C18640 - C18639 + C18642 - C18641) * C4699 +
                (C18644 - C18643 + C18646 - C18645) * C30508) *
                   C13128 +
               ((C18610 * C313 - C18612 * C295 + C18611 * C919 -
                 C18613 * C910) *
                    C4699 +
                (C18610 * C325 - C18612 * C314 + C18611 * C925 -
                 C18613 * C920) *
                    C30508) *
                   C13129) *
                  C30578 * C30560 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C18610 * C124 - C18612 * C117 + C18611 * C478 -
                  C18613 * C468) *
                     C4699 +
                 (C18610 * C138 - C18612 * C125 + C18611 * C498 -
                  C18613 * C479) *
                     C30508) *
                    C13128 +
                ((C24369 - C24370 + C24371 - C24372) * C4699 +
                 (C24373 - C24374 + C24375 - C24376) * C30508) *
                    C13129) *
                   C30578 * C30881 +
               (((C24370 - C24369 + C24372 - C24371) * C4699 +
                 (C24374 - C24373 + C24376 - C24375) * C30508) *
                    C13128 +
                ((C24377 - C24378 + C24379 - C24380) * C4699 +
                 (C24381 - C24382 + C24383 - C24384) * C30508) *
                    C13129) *
                   C30578 * C30869 +
               (((C24378 - C24377 + C24380 - C24379) * C4699 +
                 (C24382 - C24381 + C24384 - C24383) * C30508) *
                    C13128 +
                ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
                  C18613 * C1666) *
                     C4699 +
                 (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
                  C18613 * C1670) *
                     C30508) *
                    C13129) *
                   C30578 * C30844) *
                  C284 +
              ((((C18616 - C18615 + C18618 - C18617) * C4699 +
                 (C18620 - C18619 + C18622 - C18621) * C30508) *
                    C13128 +
                ((C18793 - C18794 + C18795 - C18796) * C4699 +
                 (C18797 - C18798 + C18799 - C18800) * C30508) *
                    C13129) *
                   C30578 * C30881 +
               (((C18794 - C18793 + C18796 - C18795) * C4699 +
                 (C18798 - C18797 + C18800 - C18799) * C30508) *
                    C13128 +
                ((C18801 - C18802 + C18803 - C18804) * C4699 +
                 (C18805 - C18806 + C18807 - C18808) * C30508) *
                    C13129) *
                   C30578 * C30869 +
               (((C18802 - C18801 + C18804 - C18803) * C4699 +
                 (C18806 - C18805 + C18808 - C18807) * C30508) *
                    C13128 +
                ((C19993 - C19994 + C19995 - C19996) * C4699 +
                 (C19997 - C19998 + C19999 - C20000) * C30508) *
                    C13129) *
                   C30578 * C30844) *
                  C285 +
              ((((C18624 - C18623 + C18626 - C18625) * C4699 +
                 (C18628 - C18627 + C18630 - C18629) * C30508) *
                    C13128 +
                ((C18809 - C18810 + C18811 - C18812) * C4699 +
                 (C18813 - C18814 + C18815 - C18816) * C30508) *
                    C13129) *
                   C30578 * C30881 +
               (((C18810 - C18809 + C18812 - C18811) * C4699 +
                 (C18814 - C18813 + C18816 - C18815) * C30508) *
                    C13128 +
                ((C18817 - C18818 + C18819 - C18820) * C4699 +
                 (C18821 - C18822 + C18823 - C18824) * C30508) *
                    C13129) *
                   C30578 * C30869 +
               (((C18818 - C18817 + C18820 - C18819) * C4699 +
                 (C18822 - C18821 + C18824 - C18823) * C30508) *
                    C13128 +
                ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
                  C18613 * C1668) *
                     C4699 +
                 (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
                  C18613 * C1674) *
                     C30508) *
                    C13129) *
                   C30578 * C30844) *
                  C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30882 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C18612 * C906 - C18610 * C911 + C18613 * C1258 - C18611 * C1267) *
                 C4699 +
             (C18612 * C912 - C18610 * C921 + C18613 * C1268 - C18611 * C1285) *
                 C30508) *
                C13129) *
               C30871 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C18610 * C1267 - C18612 * C1258 + C18611 * C2365 -
              C18613 * C2362) *
                 C4699 +
             (C18610 * C1285 - C18612 * C1268 + C18611 * C2371 -
              C18613 * C2366) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30882 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30871 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C30847) *
              C30560 * C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30882 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30871 +
           (((C18996 - C18995 + C18998 - C18997) * C4699 +
             (C19000 - C18999 + C19002 - C19001) * C30508) *
                C13128 +
            ((C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C4699 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C24369 - C24370 + C24371 - C24372) * C4699 +
            (C24373 - C24374 + C24375 - C24376) * C30508) *
               C13129) *
              C30578 * C1118 +
          (((C24370 - C24369 + C24372 - C24371) * C4699 +
            (C24374 - C24373 + C24376 - C24375) * C30508) *
               C13128 +
           ((C24377 - C24378 + C24379 - C24380) * C4699 +
            (C24381 - C24382 + C24383 - C24384) * C30508) *
               C13129) *
              C30578 * C1119 +
          (((C24378 - C24377 + C24380 - C24379) * C4699 +
            (C24382 - C24381 + C24384 - C24383) * C30508) *
               C13128 +
           ((C25221 - C25222 + C25223 - C25224) * C4699 +
            (C25225 - C25226 + C25227 - C25228) * C30508) *
               C13129) *
              C30578 * C1120 +
          (((C25222 - C25221 + C25224 - C25223) * C4699 +
            (C25226 - C25225 + C25228 - C25227) * C30508) *
               C13128 +
           ((C25229 - C25230 + C25231 - C25232) * C4699 +
            (C25233 - C25234 + C25235 - C25236) * C30508) *
               C13129) *
              C30578 * C1121 +
          (((C25230 - C25229 + C25232 - C25231) * C4699 +
            (C25234 - C25233 + C25236 - C25235) * C30508) *
               C13128 +
           ((C18610 * C5469 - C18612 * C5467 + C18611 * C6010 -
             C18613 * C6009) *
                C4699 +
            (C18610 * C5473 - C18612 * C5470 + C18611 * C6012 -
             C18613 * C6011) *
                C30508) *
               C13129) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30882 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30871 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C1050 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30882 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30871 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C30847) *
              C1051 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30882 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C18612 * C1666 - C18610 * C1669 + C18613 * C5603 -
              C18611 * C5606) *
                 C4699 +
             (C18612 * C1670 - C18610 * C1675 + C18613 * C5607 -
              C18611 * C5612) *
                 C30508) *
                C13129) *
               C30871 +
           (((C25400 - C25399 + C25402 - C25401) * C4699 +
             (C25404 - C25403 + C25406 - C25405) * C30508) *
                C13128 +
            ((C18610 * C5606 - C18612 * C5603 + C18611 * C6671 -
              C18613 * C6670) *
                 C4699 +
             (C18610 * C5612 - C18612 * C5607 + C18611 * C6673 -
              C18613 * C6672) *
                 C30508) *
                C13129) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C1788 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C1789 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C30560 * C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C1788 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C1789 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C30847) *
              C30560 * C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C1788 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C1789 +
           (((C18996 - C18995 + C18998 - C18997) * C4699 +
             (C19000 - C18999 + C19002 - C19001) * C30508) *
                C13128 +
            ((C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C4699 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C1788 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C1789 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C30881 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C1788 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C1789 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C30847) *
              C30869 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C1788 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C1789 +
           (((C25400 - C25399 + C25402 - C25401) * C4699 +
             (C25404 - C25403 + C25406 - C25405) * C30508) *
                C13128 +
            ((C18610 * C5606 - C18612 * C5603 + C18611 * C6671 -
              C18613 * C6670) *
                 C4699 +
             (C18610 * C5612 - C18612 * C5607 + C18611 * C6673 -
              C18613 * C6672) *
                 C30508) *
                C13129) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C24369 - C24370 + C24371 - C24372) * C4699 +
            (C24373 - C24374 + C24375 - C24376) * C30508) *
               C13129) *
              C1963 +
          (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C4699 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C30508) *
               C13128 +
           ((C24985 - C24986 + C24987 - C24988) * C4699 +
            (C24989 - C24990 + C24991 - C24992) * C30508) *
               C13129) *
              C1964 +
          (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C4699 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C30508) *
               C13128 +
           ((C25383 - C25384 + C25385 - C25386) * C4699 +
            (C25387 - C25388 + C25389 - C25390) * C30508) *
               C13129) *
              C1965 +
          (((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
             C18611 * C1980) *
                C4699 +
            (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
             C18611 * C1989) *
                C30508) *
               C13128 +
           ((C18612 * C2362 - C18610 * C2365 + C18613 * C6305 -
             C18611 * C6309) *
                C4699 +
            (C18612 * C2366 - C18610 * C2371 + C18613 * C6310 -
             C18611 * C6314) *
                C30508) *
               C13129) *
              C1966 +
          (((C18610 * C1980 - C18612 * C1971 + C18611 * C10452 -
             C18613 * C10450) *
                C4699 +
            (C18610 * C1989 - C18612 * C1981 + C18611 * C10456 -
             C18613 * C10453) *
                C30508) *
               C13128 +
           ((C18610 * C6309 - C18612 * C6305 + C18611 * C10809 -
             C18613 * C10808) *
                C4699 +
            (C18610 * C6314 - C18612 * C6310 + C18611 * C10811 -
             C18613 * C10810) *
                C30508) *
               C13129) *
              C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C1050 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C1051 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C30814 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C18612 * C1666 - C18610 * C1669 + C18613 * C5603 -
               C18611 * C5606) *
                  C4699 +
              (C18612 * C1670 - C18610 * C1675 + C18613 * C5607 -
               C18611 * C5612) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30799 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C1050 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C1051 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C30814 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30814 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C18612 * C906 - C18610 * C911 + C18613 * C1258 - C18611 * C1267) *
                 C4699 +
             (C18612 * C912 - C18610 * C921 + C18613 * C1268 - C18611 * C1285) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C636 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30814 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30665) *
              C30560 * C637 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30814 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30665) *
              C30560 * C638 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30814 +
           (((C19272 - C19271 + C19274 - C19273) * C4699 +
             (C19276 - C19275 + C19278 - C19277) * C30508) *
                C13128 +
            ((C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C4699 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C2248 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C2249 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C2250 +
           (((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
              C18611 * C1980) *
                 C4699 +
             (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
              C18611 * C1989) *
                 C30508) *
                C13128 +
            ((C18612 * C2362 - C18610 * C2365 + C18613 * C6305 -
              C18611 * C6309) *
                 C4699 +
             (C18612 * C2366 - C18610 * C2371 + C18613 * C6310 -
              C18611 * C6314) *
                 C30508) *
                C13129) *
               C30860) *
              C30560 * C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C2248 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C2249 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C2250 +
           (((C21040 - C21039 + C21042 - C21041) * C4699 +
             (C21044 - C21043 + C21046 - C21045) * C30508) *
                C13128 +
            ((C18610 * C2367 - C18612 * C2363 + C18611 * C10605 -
              C18613 * C10604) *
                 C4699 +
             (C18610 * C2372 - C18612 * C2368 + C18611 * C10607 -
              C18613 * C10606) *
                 C30508) *
                C13129) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C18610 * C297 - C18612 * C287 + C18611 * C911 - C18613 * C906) *
                C4699 +
            (C18610 * C317 - C18612 * C298 + C18611 * C921 - C18613 * C912) *
                C30508) *
               C13129) *
              C30578 * C30560 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C4699 +
            (C18620 - C18619 + C18622 - C18621) * C30508) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C4699 +
            (C18797 - C18798 + C18799 - C18800) * C30508) *
               C13129) *
              C30578 * C30560 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C4699 +
            (C18628 - C18627 + C18630 - C18629) * C30508) *
               C13128 +
           ((C18809 - C18810 + C18811 - C18812) * C4699 +
            (C18813 - C18814 + C18815 - C18816) * C30508) *
               C13129) *
              C30578 * C30560 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C4699 +
            (C18636 - C18635 + C18638 - C18637) * C30508) *
               C13128 +
           ((C19133 - C19134 + C19135 - C19136) * C4699 +
            (C19137 - C19138 + C19139 - C19140) * C30508) *
               C13129) *
              C30578 * C30560 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C4699 +
            (C18644 - C18643 + C18646 - C18645) * C30508) *
               C13128 +
           ((C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C4699 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C30508) *
               C13129) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C24369 - C24370 + C24371 - C24372) * C4699 +
            (C24373 - C24374 + C24375 - C24376) * C30508) *
               C13129) *
              C30578 * C1118 +
          (((C24370 - C24369 + C24372 - C24371) * C4699 +
            (C24374 - C24373 + C24376 - C24375) * C30508) *
               C13128 +
           ((C24377 - C24378 + C24379 - C24380) * C4699 +
            (C24381 - C24382 + C24383 - C24384) * C30508) *
               C13129) *
              C30578 * C1119 +
          (((C24378 - C24377 + C24380 - C24379) * C4699 +
            (C24382 - C24381 + C24384 - C24383) * C30508) *
               C13128 +
           ((C25221 - C25222 + C25223 - C25224) * C4699 +
            (C25225 - C25226 + C25227 - C25228) * C30508) *
               C13129) *
              C30578 * C1120 +
          (((C25222 - C25221 + C25224 - C25223) * C4699 +
            (C25226 - C25225 + C25228 - C25227) * C30508) *
               C13128 +
           ((C25229 - C25230 + C25231 - C25232) * C4699 +
            (C25233 - C25234 + C25235 - C25236) * C30508) *
               C13129) *
              C30578 * C1121 +
          (((C25230 - C25229 + C25232 - C25231) * C4699 +
            (C25234 - C25233 + C25236 - C25235) * C30508) *
               C13128 +
           ((C18610 * C5469 - C18612 * C5467 + C18611 * C6010 -
             C18613 * C6009) *
                C4699 +
            (C18610 * C5473 - C18612 * C5470 + C18611 * C6012 -
             C18613 * C6011) *
                C30508) *
               C13129) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C1788 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C1789 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C30560 * C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C1788 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C1789 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C30847) *
              C30560 * C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C1788 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C1789 +
           (((C18996 - C18995 + C18998 - C18997) * C4699 +
             (C19000 - C18999 + C19002 - C19001) * C30508) *
                C13128 +
            ((C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C4699 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C1788 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C1789 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C30881 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C1788 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C1789 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C30847) *
              C30869 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C1788 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C1789 +
           (((C25400 - C25399 + C25402 - C25401) * C4699 +
             (C25404 - C25403 + C25406 - C25405) * C30508) *
                C13128 +
            ((C18610 * C5606 - C18612 * C5603 + C18611 * C6671 -
              C18613 * C6670) *
                 C4699 +
             (C18610 * C5612 - C18612 * C5607 + C18611 * C6673 -
              C18613 * C6672) *
                 C30508) *
                C13129) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30537 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30546 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C3234 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C3234 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30661 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30668 +
            (((C18610 * C484 - C18612 * C471 + C18611 * C1974 -
               C18613 * C1968) *
                  C4699 +
              (C18610 * C501 - C18612 * C485 + C18611 * C1986 -
               C18613 * C1975) *
                  C30508) *
                 C13128 +
             ((C25383 - C25384 + C25385 - C25386) * C4699 +
              (C25387 - C25388 + C25389 - C25390) * C30508) *
                 C13129) *
                C3742) *
               C30813 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30661 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30668 +
            (((C25384 - C25383 + C25386 - C25385) * C4699 +
              (C25388 - C25387 + C25390 - C25389) * C30508) *
                 C13128 +
             ((C25399 - C25400 + C25401 - C25402) * C4699 +
              (C25403 - C25404 + C25405 - C25406) * C30508) *
                 C13129) *
                C3742) *
               C30623) *
              C2580 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30661 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30668 +
            (((C18980 - C18979 + C18982 - C18981) * C4699 +
              (C18984 - C18983 + C18986 - C18985) * C30508) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C4699 +
              (C20905 - C20906 + C20907 - C20908) * C30508) *
                 C13129) *
                C3742) *
               C30813 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30661 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30668 +
            (((C20902 - C20901 + C20904 - C20903) * C4699 +
              (C20906 - C20905 + C20908 - C20907) * C30508) *
                 C13128 +
             ((C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
               C18613 * C6568) *
                  C4699 +
              (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
               C18613 * C6570) *
                  C30508) *
                 C13129) *
                C3742) *
               C30623) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30881 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30869 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C3234 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C25861 - C25862 + C25863 - C25864) * C4699 +
              (C25865 - C25866 + C25867 - C25868) * C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C2580 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30881 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30869 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C3234 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C3234 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30887 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C3234 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30880 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C3234 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30867 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C3234 +
           (((C19272 - C19271 + C19274 - C19273) * C4699 +
             (C19276 - C19275 + C19278 - C19277) * C30508) *
                C13128 +
            ((C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C4699 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30889 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30886 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30877 +
           (((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
              C18611 * C1980) *
                 C4699 +
             (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
              C18611 * C1989) *
                 C30508) *
                C13128 +
            ((C26697 - C26698 + C26699 - C26700) * C4699 +
             (C26701 - C26702 + C26703 - C26704) * C30508) *
                C13129) *
               C30860) *
              C30560 * C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30889 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30886 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C30877 +
           (((C21040 - C21039 + C21042 - C21041) * C4699 +
             (C21044 - C21043 + C21046 - C21045) * C30508) *
                C13128 +
            ((C18610 * C2367 - C18612 * C2363 + C18611 * C10605 -
              C18613 * C10604) *
                 C4699 +
             (C18610 * C2372 - C18612 * C2368 + C18611 * C10607 -
              C18613 * C10606) *
                 C30508) *
                C13129) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30661 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30668 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C3742) *
              C30560 * C30537 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30661 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30668 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C3742) *
              C30560 * C30546 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30661 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30668 +
           (((C18996 - C18995 + C18998 - C18997) * C4699 +
             (C19000 - C18999 + C19002 - C19001) * C30508) *
                C13128 +
            ((C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C4699 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C30508) *
                C13129) *
               C3742) *
              C30560 * C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C3234 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30887 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C3234 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30880 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C3234 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30665) *
              C30560 * C30867 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C3234 +
           (((C19272 - C19271 + C19274 - C19273) * C4699 +
             (C19276 - C19275 + C19278 - C19277) * C30508) *
                C13128 +
            ((C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C4699 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C3234 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30881 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C3234 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C30869 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C3234 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C25861 - C25862 + C25863 - C25864) * C4699 +
              (C25865 - C25866 + C25867 - C25868) * C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C2580 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C3234 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30881 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C3234 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30869 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C3234 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30623) *
              C636 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30623) *
              C637 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30623) *
              C638 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30578 * C30813 +
           (((C19134 - C19133 + C19136 - C19135) * C4699 +
             (C19138 - C19137 + C19140 - C19139) * C30508) *
                C13128 +
            ((C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                 C4699 +
             (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                 C30508) *
                C13129) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1392 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1393 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30578 * C1394 +
           (((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30578 * C30854) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1392 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1393 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C1394 +
           (((C19994 - C19993 + C19996 - C19995) * C4699 +
             (C19998 - C19997 + C20000 - C19999) * C30508) *
                C13128 +
            ((C18610 * C1138 - C18612 * C1128 + C18611 * C5899 -
              C18613 * C5898) *
                 C4699 +
             (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 -
              C18613 * C5900) *
                 C30508) *
                C13129) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C18610 * C1273 - C18612 * C1261 + C18611 * C1279 -
               C18613 * C1264) *
                  C4699 +
              (C18610 * C1288 - C18612 * C1274 + C18611 * C1291 -
               C18613 * C1280) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C284 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C285 +
          (((((C18624 - C18623 + C18626 - C18625) * C4699 +
              (C18628 - C18627 + C18630 - C18629) * C30508) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C4699 +
              (C18813 - C18814 + C18815 - C18816) * C30508) *
                 C13129) *
                C30814 +
            (((C18988 - C18987 + C18990 - C18989) * C4699 +
              (C18992 - C18991 + C18994 - C18993) * C30508) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C4699 +
              (C19485 - C19486 + C19487 - C19488) * C30508) *
                 C13129) *
                C30665) *
               C30813 +
           ((((C18810 - C18809 + C18812 - C18811) * C4699 +
              (C18814 - C18813 + C18816 - C18815) * C30508) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C4699 +
              (C18821 - C18822 + C18823 - C18824) * C30508) *
                 C13129) *
                C30814 +
            (((C19482 - C19481 + C19484 - C19483) * C4699 +
              (C19486 - C19485 + C19488 - C19487) * C30508) *
                 C13128 +
             ((C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
               C18613 * C1266) *
                  C4699 +
              (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
               C18613 * C1284) *
                  C30508) *
                 C13129) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30814 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30665) *
              C1392 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30814 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30665) *
              C1393 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30814 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C25861 - C25862 + C25863 - C25864) * C4699 +
             (C25865 - C25866 + C25867 - C25868) * C30508) *
                C13129) *
               C30665) *
              C1394 +
          ((((C25222 - C25221 + C25224 - C25223) * C4699 +
             (C25226 - C25225 + C25228 - C25227) * C30508) *
                C13128 +
            ((C25229 - C25230 + C25231 - C25232) * C4699 +
             (C25233 - C25234 + C25235 - C25236) * C30508) *
                C13129) *
               C30814 +
           (((C25862 - C25861 + C25864 - C25863) * C4699 +
             (C25866 - C25865 + C25868 - C25867) * C30508) *
                C13128 +
            ((C18610 * C5608 - C18612 * C5604 + C18611 * C5610 -
              C18613 * C5605) *
                 C4699 +
             (C18610 * C5613 - C18612 * C5609 + C18611 * C5614 -
              C18613 * C5611) *
                 C30508) *
                C13129) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C18610 * C297 - C18612 * C287 + C18611 * C911 - C18613 * C906) *
                C4699 +
            (C18610 * C317 - C18612 * C298 + C18611 * C921 - C18613 * C912) *
                C30508) *
               C13129) *
              C30578 * C30560 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C4699 +
            (C18620 - C18619 + C18622 - C18621) * C30508) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C4699 +
            (C18797 - C18798 + C18799 - C18800) * C30508) *
               C13129) *
              C30578 * C30560 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C4699 +
            (C18628 - C18627 + C18630 - C18629) * C30508) *
               C13128 +
           ((C18809 - C18810 + C18811 - C18812) * C4699 +
            (C18813 - C18814 + C18815 - C18816) * C30508) *
               C13129) *
              C30578 * C30560 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C4699 +
            (C18636 - C18635 + C18638 - C18637) * C30508) *
               C13128 +
           ((C19133 - C19134 + C19135 - C19136) * C4699 +
            (C19137 - C19138 + C19139 - C19140) * C30508) *
               C13129) *
              C30578 * C30560 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C4699 +
            (C18644 - C18643 + C18646 - C18645) * C30508) *
               C13128 +
           ((C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C4699 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C30508) *
               C13129) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30882 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C18612 * C906 - C18610 * C911 + C18613 * C1258 - C18611 * C1267) *
                 C4699 +
             (C18612 * C912 - C18610 * C921 + C18613 * C1268 - C18611 * C1285) *
                 C30508) *
                C13129) *
               C30871 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C18610 * C1267 - C18612 * C1258 + C18611 * C2365 -
              C18613 * C2362) *
                 C4699 +
             (C18610 * C1285 - C18612 * C1268 + C18611 * C2371 -
              C18613 * C2366) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30882 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30871 +
           (((C18980 - C18979 + C18982 - C18981) * C4699 +
             (C18984 - C18983 + C18986 - C18985) * C30508) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C4699 +
             (C20905 - C20906 + C20907 - C20908) * C30508) *
                C13129) *
               C30847) *
              C30560 * C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30882 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30871 +
           (((C18996 - C18995 + C18998 - C18997) * C4699 +
             (C19000 - C18999 + C19002 - C19001) * C30508) *
                C13128 +
            ((C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C4699 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C30508) *
                C13129) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C24369 - C24370 + C24371 - C24372) * C4699 +
            (C24373 - C24374 + C24375 - C24376) * C30508) *
               C13129) *
              C30578 * C1118 +
          (((C24370 - C24369 + C24372 - C24371) * C4699 +
            (C24374 - C24373 + C24376 - C24375) * C30508) *
               C13128 +
           ((C24377 - C24378 + C24379 - C24380) * C4699 +
            (C24381 - C24382 + C24383 - C24384) * C30508) *
               C13129) *
              C30578 * C1119 +
          (((C24378 - C24377 + C24380 - C24379) * C4699 +
            (C24382 - C24381 + C24384 - C24383) * C30508) *
               C13128 +
           ((C25221 - C25222 + C25223 - C25224) * C4699 +
            (C25225 - C25226 + C25227 - C25228) * C30508) *
               C13129) *
              C30578 * C1120 +
          (((C25222 - C25221 + C25224 - C25223) * C4699 +
            (C25226 - C25225 + C25228 - C25227) * C30508) *
               C13128 +
           ((C25229 - C25230 + C25231 - C25232) * C4699 +
            (C25233 - C25234 + C25235 - C25236) * C30508) *
               C13129) *
              C30578 * C1121 +
          (((C25230 - C25229 + C25232 - C25231) * C4699 +
            (C25234 - C25233 + C25236 - C25235) * C30508) *
               C13128 +
           ((C18610 * C5469 - C18612 * C5467 + C18611 * C6010 -
             C18613 * C6009) *
                C4699 +
            (C18610 * C5473 - C18612 * C5470 + C18611 * C6012 -
             C18613 * C6011) *
                C30508) *
               C13129) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30882 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C24985 - C24986 + C24987 - C24988) * C4699 +
             (C24989 - C24990 + C24991 - C24992) * C30508) *
                C13129) *
               C30871 +
           (((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C4699 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C30508) *
                C13128 +
            ((C25383 - C25384 + C25385 - C25386) * C4699 +
             (C25387 - C25388 + C25389 - C25390) * C30508) *
                C13129) *
               C30847) *
              C1050 +
          ((((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30882 +
           (((C24986 - C24985 + C24988 - C24987) * C4699 +
             (C24990 - C24989 + C24992 - C24991) * C30508) *
                C13128 +
            ((C25391 - C25392 + C25393 - C25394) * C4699 +
             (C25395 - C25396 + C25397 - C25398) * C30508) *
                C13129) *
               C30871 +
           (((C25384 - C25383 + C25386 - C25385) * C4699 +
             (C25388 - C25387 + C25390 - C25389) * C30508) *
                C13128 +
            ((C25399 - C25400 + C25401 - C25402) * C4699 +
             (C25403 - C25404 + C25405 - C25406) * C30508) *
                C13129) *
               C30847) *
              C1051 +
          ((((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C25221 - C25222 + C25223 - C25224) * C4699 +
             (C25225 - C25226 + C25227 - C25228) * C30508) *
                C13129) *
               C30882 +
           (((C25392 - C25391 + C25394 - C25393) * C4699 +
             (C25396 - C25395 + C25398 - C25397) * C30508) *
                C13128 +
            ((C18612 * C1666 - C18610 * C1669 + C18613 * C5603 -
              C18611 * C5606) *
                 C4699 +
             (C18612 * C1670 - C18610 * C1675 + C18613 * C5607 -
              C18611 * C5612) *
                 C30508) *
                C13129) *
               C30871 +
           (((C25400 - C25399 + C25402 - C25401) * C4699 +
             (C25404 - C25403 + C25406 - C25405) * C30508) *
                C13128 +
            ((C18610 * C5606 - C18612 * C5603 + C18611 * C6671 -
              C18613 * C6670) *
                 C4699 +
             (C18610 * C5612 - C18612 * C5607 + C18611 * C6673 -
              C18613 * C6672) *
                 C30508) *
                C13129) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30814 +
           (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C4699 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C30508) *
                C13128 +
            ((C18612 * C906 - C18610 * C911 + C18613 * C1258 - C18611 * C1267) *
                 C4699 +
             (C18612 * C912 - C18610 * C921 + C18613 * C1268 - C18611 * C1285) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C636 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30814 +
           (((C18972 - C18971 + C18974 - C18973) * C4699 +
             (C18976 - C18975 + C18978 - C18977) * C30508) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C4699 +
             (C19477 - C19478 + C19479 - C19480) * C30508) *
                C13129) *
               C30665) *
              C30560 * C637 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30814 +
           (((C18988 - C18987 + C18990 - C18989) * C4699 +
             (C18992 - C18991 + C18994 - C18993) * C30508) *
                C13128 +
            ((C19481 - C19482 + C19483 - C19484) * C4699 +
             (C19485 - C19486 + C19487 - C19488) * C30508) *
                C13129) *
               C30665) *
              C30560 * C638 +
          ((((C18632 - C18631 + C18634 - C18633) * C4699 +
             (C18636 - C18635 + C18638 - C18637) * C30508) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C4699 +
             (C19137 - C19138 + C19139 - C19140) * C30508) *
                C13129) *
               C30814 +
           (((C19272 - C19271 + C19274 - C19273) * C4699 +
             (C19276 - C19275 + C19278 - C19277) * C30508) *
                C13128 +
            ((C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C4699 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C30508) *
                C13129) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                  C4699 +
              (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                  C30508) *
                 C13128 +
             ((C24369 - C24370 + C24371 - C24372) * C4699 +
              (C24373 - C24374 + C24375 - C24376) * C30508) *
                 C13129) *
                C30814 +
            (((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                  C4699 +
              (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                  C30508) *
                 C13128 +
             ((C24985 - C24986 + C24987 - C24988) * C4699 +
              (C24989 - C24990 + C24991 - C24992) * C30508) *
                 C13129) *
                C30665) *
               C1050 +
           ((((C24370 - C24369 + C24372 - C24371) * C4699 +
              (C24374 - C24373 + C24376 - C24375) * C30508) *
                 C13128 +
             ((C24377 - C24378 + C24379 - C24380) * C4699 +
              (C24381 - C24382 + C24383 - C24384) * C30508) *
                 C13129) *
                C30814 +
            (((C24986 - C24985 + C24988 - C24987) * C4699 +
              (C24990 - C24989 + C24992 - C24991) * C30508) *
                 C13128 +
             ((C25391 - C25392 + C25393 - C25394) * C4699 +
              (C25395 - C25396 + C25397 - C25398) * C30508) *
                 C13129) *
                C30665) *
               C1051 +
           ((((C24378 - C24377 + C24380 - C24379) * C4699 +
              (C24382 - C24381 + C24384 - C24383) * C30508) *
                 C13128 +
             ((C25221 - C25222 + C25223 - C25224) * C4699 +
              (C25225 - C25226 + C25227 - C25228) * C30508) *
                 C13129) *
                C30814 +
            (((C25392 - C25391 + C25394 - C25393) * C4699 +
              (C25396 - C25395 + C25398 - C25397) * C30508) *
                 C13128 +
             ((C18612 * C1666 - C18610 * C1669 + C18613 * C5603 -
               C18611 * C5606) *
                  C4699 +
              (C18612 * C1670 - C18610 * C1675 + C18613 * C5607 -
               C18611 * C5612) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30799 +
          (((((C18616 - C18615 + C18618 - C18617) * C4699 +
              (C18620 - C18619 + C18622 - C18621) * C30508) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C4699 +
              (C18797 - C18798 + C18799 - C18800) * C30508) *
                 C13129) *
                C30814 +
            (((C18972 - C18971 + C18974 - C18973) * C4699 +
              (C18976 - C18975 + C18978 - C18977) * C30508) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C4699 +
              (C19477 - C19478 + C19479 - C19480) * C30508) *
                 C13129) *
                C30665) *
               C1050 +
           ((((C18794 - C18793 + C18796 - C18795) * C4699 +
              (C18798 - C18797 + C18800 - C18799) * C30508) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C4699 +
              (C18805 - C18806 + C18807 - C18808) * C30508) *
                 C13129) *
                C30814 +
            (((C19474 - C19473 + C19476 - C19475) * C4699 +
              (C19478 - C19477 + C19480 - C19479) * C30508) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C4699 +
              (C20199 - C20200 + C20201 - C20202) * C30508) *
                 C13129) *
                C30665) *
               C1051 +
           ((((C18802 - C18801 + C18804 - C18803) * C4699 +
              (C18806 - C18805 + C18808 - C18807) * C30508) *
                 C13128 +
             ((C19993 - C19994 + C19995 - C19996) * C4699 +
              (C19997 - C19998 + C19999 - C20000) * C30508) *
                 C13129) *
                C30814 +
            (((C20196 - C20195 + C20198 - C20197) * C4699 +
              (C20200 - C20199 + C20202 - C20201) * C30508) *
                 C13128 +
             ((C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
               C18613 * C6462) *
                  C4699 +
              (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
               C18613 * C6464) *
                  C30508) *
                 C13129) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C18610 * C297 - C18612 * C287 + C18611 * C911 - C18613 * C906) *
                C4699 +
            (C18610 * C317 - C18612 * C298 + C18611 * C921 - C18613 * C912) *
                C30508) *
               C13129) *
              C30578 * C30560 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C4699 +
            (C18620 - C18619 + C18622 - C18621) * C30508) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C4699 +
            (C18797 - C18798 + C18799 - C18800) * C30508) *
               C13129) *
              C30578 * C30560 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C4699 +
            (C18628 - C18627 + C18630 - C18629) * C30508) *
               C13128 +
           ((C18809 - C18810 + C18811 - C18812) * C4699 +
            (C18813 - C18814 + C18815 - C18816) * C30508) *
               C13129) *
              C30578 * C30560 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C4699 +
            (C18636 - C18635 + C18638 - C18637) * C30508) *
               C13128 +
           ((C19133 - C19134 + C19135 - C19136) * C4699 +
            (C19137 - C19138 + C19139 - C19140) * C30508) *
               C13129) *
              C30578 * C30560 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C4699 +
            (C18644 - C18643 + C18646 - C18645) * C30508) *
               C13128 +
           ((C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C4699 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C30508) *
               C13129) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C30881 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C30869 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C4699 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C30508) *
                C13128 +
            ((C24369 - C24370 + C24371 - C24372) * C4699 +
             (C24373 - C24374 + C24375 - C24376) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C24370 - C24369 + C24372 - C24371) * C4699 +
             (C24374 - C24373 + C24376 - C24375) * C30508) *
                C13128 +
            ((C24377 - C24378 + C24379 - C24380) * C4699 +
             (C24381 - C24382 + C24383 - C24384) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C24378 - C24377 + C24380 - C24379) * C4699 +
             (C24382 - C24381 + C24384 - C24383) * C30508) *
                C13128 +
            ((C18610 * C1130 - C18612 * C1124 + C18611 * C1669 -
              C18613 * C1666) *
                 C4699 +
             (C18610 * C1142 - C18612 * C1131 + C18611 * C1675 -
              C18613 * C1670) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C4699 +
             (C18620 - C18619 + C18622 - C18621) * C30508) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C4699 +
             (C18797 - C18798 + C18799 - C18800) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C4699 +
             (C18798 - C18797 + C18800 - C18799) * C30508) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C4699 +
             (C18805 - C18806 + C18807 - C18808) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C4699 +
             (C18806 - C18805 + C18808 - C18807) * C30508) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C4699 +
             (C19997 - C19998 + C19999 - C20000) * C30508) *
                C13129) *
               C30578 * C30844) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C4699 +
             (C18628 - C18627 + C18630 - C18629) * C30508) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C4699 +
             (C18813 - C18814 + C18815 - C18816) * C30508) *
                C13129) *
               C30578 * C1050 +
           (((C18810 - C18809 + C18812 - C18811) * C4699 +
             (C18814 - C18813 + C18816 - C18815) * C30508) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C4699 +
             (C18821 - C18822 + C18823 - C18824) * C30508) *
                C13129) *
               C30578 * C1051 +
           (((C18818 - C18817 + C18820 - C18819) * C4699 +
             (C18822 - C18821 + C18824 - C18823) * C30508) *
                C13128 +
            ((C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
              C18613 * C1668) *
                 C4699 +
             (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
              C18613 * C1674) *
                 C30508) *
                C13129) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C4699 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C30508) *
               C13128 +
           ((C24369 - C24370 + C24371 - C24372) * C4699 +
            (C24373 - C24374 + C24375 - C24376) * C30508) *
               C13129) *
              C30578 * C1118 +
          (((C24370 - C24369 + C24372 - C24371) * C4699 +
            (C24374 - C24373 + C24376 - C24375) * C30508) *
               C13128 +
           ((C24377 - C24378 + C24379 - C24380) * C4699 +
            (C24381 - C24382 + C24383 - C24384) * C30508) *
               C13129) *
              C30578 * C1119 +
          (((C24378 - C24377 + C24380 - C24379) * C4699 +
            (C24382 - C24381 + C24384 - C24383) * C30508) *
               C13128 +
           ((C25221 - C25222 + C25223 - C25224) * C4699 +
            (C25225 - C25226 + C25227 - C25228) * C30508) *
               C13129) *
              C30578 * C1120 +
          (((C25222 - C25221 + C25224 - C25223) * C4699 +
            (C25226 - C25225 + C25228 - C25227) * C30508) *
               C13128 +
           ((C25229 - C25230 + C25231 - C25232) * C4699 +
            (C25233 - C25234 + C25235 - C25236) * C30508) *
               C13129) *
              C30578 * C1121 +
          (((C25230 - C25229 + C25232 - C25231) * C4699 +
            (C25234 - C25233 + C25236 - C25235) * C30508) *
               C13128 +
           ((C18610 * C5469 - C18612 * C5467 + C18611 * C6010 -
             C18613 * C6009) *
                C4699 +
            (C18610 * C5473 - C18612 * C5470 + C18611 * C6012 -
             C18613 * C6011) *
                C30508) *
               C13129) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30619 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30626 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C2840) *
              C30537 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30619 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30626 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C2840) *
              C30546 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30619 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30626 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C2840) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30619 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30626 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C2840) *
              C30537 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30619 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30626 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C2840) *
              C30546 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30619 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30626 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C2840) *
              C2843)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30619 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30626 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C2840) *
              C30537 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30619 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30626 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C2840) *
              C30546 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30619 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30626 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C2840) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30619 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30626 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C2840) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30619 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30626 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30626 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C30814 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C2840) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30626 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C30814 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30619 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30626 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C2840) *
              C2580 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30619 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30626 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C2472 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30623) *
                  C30887 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C2472 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                C646 * C104) *
                   C30746 * C30578 * C30623) *
                  C30880 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C2472 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C647 - C648) * C116 +
                (C649 - C650) * C104) *
                   C30746 * C30578 * C30623) *
                  C30867 +
              ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
                (C161 - C160) * C103 + (C162 - C163) * C116 +
                (C164 - C165) * C104) *
                   C30746 * C30578 * C2472 +
               (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
                (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
                (C30757 * C643 - C113 * C642) * C104) *
                   C30746 * C30578 * C30623) *
                  C30848) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C30888 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30884 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C30874 +
               ((C113 * C1124 - C30757 * C1130) * C114 +
                (C113 * C1131 - C30757 * C1142) * C102 +
                (C1403 - C1404) * C115 + (C1405 - C1406) * C103 +
                (C1407 - C1408) * C116 + (C1409 - C1410) * C104) *
                   C30746 * C30578 * C30854) *
                  C2580 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C30888 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                C646 * C104) *
                   C30746 * C30578 * C30884 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C30874 +
               ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
                (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
                (C30757 * C1399 - C113 * C1398) * C116 +
                (C30757 * C1401 - C113 * C1400) * C104) *
                   C30746 * C30578 * C30854) *
                  C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30882 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30871 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C30847) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30882 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30871 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C30847) *
               C30623) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30882 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30871 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C30847) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30882 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30871 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C2472 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30623) *
              C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C2472 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30623) *
              C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C2472 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C2472 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30888 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30884 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C30874 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30888 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30884 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C30874 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30882 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30871 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C30847) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30882 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30871 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C30847) *
               C30623) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30882 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30871 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C30847) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30882 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30871 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30880 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30867 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8976 * C309 - C8979 * C293 + C8977 * C917 - C8980 * C909 +
             C8978 * C2139 - C8981 * C2138) *
                C4699 +
            (C8976 * C323 - C8979 * C310 + C8977 * C924 - C8980 * C918 +
             C8978 * C2141 - C8981 * C2140) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30888 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30884 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30874 +
           ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30888 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30884 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30874 +
           ((C8976 * C1132 - C8979 * C1125 + C8977 * C1671 - C8980 * C1667 +
             C8978 * C6463 - C8981 * C6462) *
                C4699 +
            (C8976 * C1143 - C8979 * C1133 + C8977 * C1676 - C8980 * C1672 +
             C8978 * C6465 - C8981 * C6464) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30882 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30871 +
            ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
              C8978 * C1980 - C8981 * C1971) *
                 C4699 +
             (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
              C8978 * C1989 - C8981 * C1981) *
                 C30508) *
                C30746 * C30847) *
               C2472 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30882 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30871 +
            ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
              C8981 * C6305 - C8978 * C6309) *
                 C4699 +
             (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
              C8981 * C6310 - C8978 * C6314) *
                 C30508) *
                C30746 * C30847) *
               C30623) *
              C2580 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30882 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30871 +
            ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
              C8981 * C1972 - C8978 * C1982) *
                 C4699 +
             (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
              C8981 * C1983 - C8978 * C1990) *
                 C30508) *
                C30746 * C30847) *
               C2472 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30882 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30871 +
            ((C8976 * C1269 - C8979 * C1259 + C8977 * C2367 - C8980 * C2363 +
              C8978 * C10605 - C8981 * C10604) *
                 C4699 +
             (C8976 * C1286 - C8979 * C1270 + C8977 * C2372 - C8980 * C2368 +
              C8978 * C10607 - C8981 * C10606) *
                 C30508) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30537 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30546 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C30814 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C2472 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C30814 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30888 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30884 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30874 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30888 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30884 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30874 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C2472 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C2472 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C2472 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C2472 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C2472 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30623) *
              C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C2472 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30623) *
              C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C2472 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C2472 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30888 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30884 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C30874 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30888 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30884 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C30874 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30880 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30867 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30578 * C2472 +
           ((C8976 * C309 - C8979 * C293 + C8977 * C917 - C8980 * C909 +
             C8978 * C2139 - C8981 * C2138) *
                C4699 +
            (C8976 * C323 - C8979 * C310 + C8977 * C924 - C8980 * C918 +
             C8978 * C2141 - C8981 * C2140) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30888 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30884 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30874 +
           ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30888 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30884 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30874 +
           ((C8976 * C1132 - C8979 * C1125 + C8977 * C1671 - C8980 * C1667 +
             C8978 * C6463 - C8981 * C6462) *
                C4699 +
            (C8976 * C1143 - C8979 * C1133 + C8977 * C1676 - C8980 * C1672 +
             C8978 * C6465 - C8981 * C6464) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30619 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30626 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C2840) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30619 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30626 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30626 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C3234 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C2840) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30626 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C3234 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30619 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30626 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C2840) *
              C30799 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30619 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30626 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30661 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30668 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C3742) *
              C30619 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30661 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30668 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C3742) *
              C30626 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30661 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30668 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C3742) *
              C2840) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30661 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30668 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C3742) *
              C30619 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30661 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30668 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C3742) *
              C30626 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30661 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30668 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C3742) *
              C2840) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30661 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30668 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C3742) *
              C30619 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30661 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30668 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C3742) *
              C30626 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30661 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30668 +
           ((C8976 * C1279 - C8979 * C1264 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C4699 +
            (C8976 * C1291 - C8979 * C1280 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30508) *
               C30746 * C3742) *
              C2840) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30757 * C124 - C113 * C117) * C114 +
                 (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                 (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                    C30746 * C3234 +
                ((C113 * C468 - C30757 * C478) * C114 +
                 (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                 (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                    C30746 * C30665) *
                   C2472 +
               (((C113 * C287 - C30757 * C297) * C114 +
                 (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                 (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                    C30746 * C3234 +
                ((C30757 * C911 - C113 * C906) * C114 +
                 (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                 (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C30878 +
              ((((C147 - C146) * C114 + (C149 - C148) * C102 +
                 (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                 C169 * C104) *
                    C30746 * C3234 +
                ((C510 - C509) * C114 + (C512 - C511) * C102 +
                 (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                 C756 * C104) *
                    C30746 * C30665) *
                   C2472 +
               (((C329 - C328) * C114 + (C331 - C330) * C102 +
                 (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                 C646 * C104) *
                    C30746 * C3234 +
                ((C928 - C927) * C114 + (C930 - C929) * C102 +
                 (C932 - C931) * C115 + (C934 - C933) * C103 +
                 (C935 - C936) * C116 + (C937 - C938) * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C30865 +
              (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                 (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                    C30746 * C3234 +
                (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                 (C528 - C527) * C103 + (C757 - C758) * C116 +
                 (C759 - C760) * C104) *
                    C30746 * C30665) *
                   C2472 +
               ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                 (C347 - C346) * C103 + (C647 - C648) * C116 +
                 (C649 - C650) * C104) *
                    C30746 * C3234 +
                (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
                 (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
                 (C30757 * C925 - C113 * C920) * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C30838) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C3234 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30665) *
                  C30888 +
              (((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C3234 +
               ((C30757 * C911 - C113 * C906) * C114 +
                (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                   C30746 * C30665) *
                  C30884 +
              (((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C3234 +
               ((C113 * C1261 - C30757 * C1273) * C114 +
                (C113 * C1274 - C30757 * C1288) * C102 +
                (C1561 - C1562) * C115 + (C1563 - C1564) * C103 +
                (C1565 - C1566) * C116 + (C1567 - C1568) * C104) *
                   C30746 * C30665) *
                  C30874 +
              (((C113 * C1124 - C30757 * C1130) * C114 +
                (C113 * C1131 - C30757 * C1142) * C102 +
                (C1403 - C1404) * C115 + (C1405 - C1406) * C103 +
                (C1407 - C1408) * C116 + (C1409 - C1410) * C104) *
                   C30746 * C3234 +
               ((C30757 * C1669 - C113 * C1666) * C114 +
                (C30757 * C1675 - C113 * C1670) * C102 +
                (C30757 * C1671 - C113 * C1667) * C115 +
                (C30757 * C1676 - C113 * C1672) * C103 +
                (C30757 * C1673 - C113 * C1668) * C116 +
                (C30757 * C1677 - C113 * C1674) * C104) *
                   C30746 * C30665) *
                  C30854) *
             C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30889 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30886 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30877 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C2472 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30889 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30886 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C30877 +
           ((C30757 * C2365 - C113 * C2362) * C114 +
            (C30757 * C2371 - C113 * C2366) * C102 +
            (C30757 * C2367 - C113 * C2363) * C115 +
            (C30757 * C2372 - C113 * C2368) * C103 +
            (C30757 * C2369 - C113 * C2364) * C116 +
            (C30757 * C2373 - C113 * C2370) * C104) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30878 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30865 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30888 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C3234 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C30884 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C3234 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C30874 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C3234 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30889 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30886 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30877 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C2472 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30889 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30886 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30877 +
           (((C6676 - C6675) * C4699 + (C6678 - C6677) * C30508) * C4696 +
            ((C6680 - C6679) * C4699 + (C6682 - C6681) * C30508) * C4697 +
            ((C30757 * C6671 - C113 * C6670) * C4699 +
             (C30757 * C6673 - C113 * C6672) * C30508) *
                C4698) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30888 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30665) *
              C30884 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30665) *
              C30874 +
          (((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C1669 - C8979 * C1666 + C8977 * C5606 - C8980 * C5603 +
             C8978 * C6671 - C8981 * C6670) *
                C4699 +
            (C8976 * C1675 - C8979 * C1670 + C8977 * C5612 - C8980 * C5607 +
             C8978 * C6673 - C8981 * C6672) *
                C30508) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30889 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30886 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30877 +
           ((C8979 * C1968 - C8976 * C1974 + C8980 * C1971 - C8977 * C1980 +
             C8981 * C10450 - C8978 * C10452) *
                C4699 +
            (C8979 * C1975 - C8976 * C1986 + C8980 * C1981 - C8977 * C1989 +
             C8981 * C10453 - C8978 * C10456) *
                C30508) *
               C30746 * C30860) *
              C2472 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30889 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30886 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C30877 +
           ((C8976 * C2365 - C8979 * C2362 + C8977 * C6309 - C8980 * C6305 +
             C8978 * C10809 - C8981 * C10808) *
                C4699 +
            (C8976 * C2371 - C8979 * C2366 + C8977 * C6314 - C8980 * C6310 +
             C8978 * C10811 - C8981 * C10810) *
                C30508) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30661 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30668 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C3742) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30661 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30668 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C3742) *
               C30623) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30661 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30668 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C3742) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30661 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30668 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30661 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30668 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C3742) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30661 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30668 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C3742) *
               C30623) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30661 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30668 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C3742) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30661 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30668 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30661 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30668 +
            ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
              C8978 * C1980 - C8981 * C1971) *
                 C4699 +
             (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
              C8978 * C1989 - C8981 * C1981) *
                 C30508) *
                C30746 * C3742) *
               C2472 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30661 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30668 +
            ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
              C8981 * C6305 - C8978 * C6309) *
                 C4699 +
             (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
              C8981 * C6310 - C8978 * C6314) *
                 C30508) *
                C30746 * C3742) *
               C30623) *
              C30799 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30661 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30668 +
            ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
              C8981 * C1972 - C8978 * C1982) *
                 C4699 +
             (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
              C8981 * C1983 - C8978 * C1990) *
                 C30508) *
                C30746 * C3742) *
               C2472 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30661 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30668 +
            ((C8976 * C1269 - C8979 * C1259 + C8977 * C2367 - C8980 * C2363 +
              C8978 * C10605 - C8981 * C10604) *
                 C4699 +
             (C8976 * C1286 - C8979 * C1270 + C8977 * C2372 - C8980 * C2368 +
              C8978 * C10607 - C8981 * C10606) *
                 C30508) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30888 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C3234 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C30884 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C3234 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C30874 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C3234 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C3234 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C2472 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C3234 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30878 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30865 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30888 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C3234 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C30884 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C3234 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C30874 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C3234 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C2472 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30888 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30665) *
              C30884 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30665) *
              C30874 +
          (((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C1669 - C8979 * C1666 + C8977 * C5606 - C8980 * C5603 +
             C8978 * C6671 - C8981 * C6670) *
                C4699 +
            (C8976 * C1675 - C8979 * C1670 + C8977 * C5612 - C8980 * C5607 +
             C8978 * C6673 - C8981 * C6672) *
                C30508) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C30813 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30623) *
                  C636 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C30813 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                C646 * C104) *
                   C30746 * C30578 * C30623) *
                  C637 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C30813 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C647 - C648) * C116 +
                (C649 - C650) * C104) *
                   C30746 * C30578 * C30623) *
                  C638 +
              ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
                (C161 - C160) * C103 + (C162 - C163) * C116 +
                (C164 - C165) * C104) *
                   C30746 * C30578 * C30813 +
               (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
                (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
                (C30757 * C643 - C113 * C642) * C104) *
                   C30746 * C30578 * C30623) *
                  C30848) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C1392 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C1393 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C1394 +
               ((C113 * C1124 - C30757 * C1130) * C114 +
                (C113 * C1131 - C30757 * C1142) * C102 +
                (C1403 - C1404) * C115 + (C1405 - C1406) * C103 +
                (C1407 - C1408) * C116 + (C1409 - C1410) * C104) *
                   C30746 * C30578 * C30854) *
                  C30799 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C1392 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                C646 * C104) *
                   C30746 * C30578 * C1393 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C1394 +
               ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
                (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
                (C30757 * C1399 - C113 * C1398) * C116 +
                (C30757 * C1401 - C113 * C1400) * C104) *
                   C30746 * C30578 * C30854) *
                  C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C1788 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C1789 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C30847) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C1788 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C1789 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C30847) *
               C30623) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C1788 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C1789 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C30847) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C1788 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C1789 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30813 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30623) *
              C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30813 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30623) *
              C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30813 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C30813 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1392 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C1393 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C1394 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1392 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C1393 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C1394 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C1788 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C1789 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C30847) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C1788 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C1789 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C30847) *
               C30623) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C1788 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C1789 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C30847) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C1788 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C1789 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30623) *
              C637 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30623) *
              C638 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8976 * C309 - C8979 * C293 + C8977 * C917 - C8980 * C909 +
             C8978 * C2139 - C8981 * C2138) *
                C4699 +
            (C8976 * C323 - C8979 * C310 + C8977 * C924 - C8980 * C918 +
             C8978 * C2141 - C8981 * C2140) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1392 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1393 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C1394 +
           ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1392 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1393 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C1394 +
           ((C8976 * C1132 - C8979 * C1125 + C8977 * C1671 - C8980 * C1667 +
             C8978 * C6463 - C8981 * C6462) *
                C4699 +
            (C8976 * C1143 - C8979 * C1133 + C8977 * C1676 - C8980 * C1672 +
             C8978 * C6465 - C8981 * C6464) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C1788 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C1789 +
            ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
              C8978 * C1980 - C8981 * C1971) *
                 C4699 +
             (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
              C8978 * C1989 - C8981 * C1981) *
                 C30508) *
                C30746 * C30847) *
               C30813 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C1788 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C1789 +
            ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
              C8981 * C6305 - C8978 * C6309) *
                 C4699 +
             (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
              C8981 * C6310 - C8978 * C6314) *
                 C30508) *
                C30746 * C30847) *
               C30623) *
              C30799 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C1788 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C1789 +
            ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
              C8981 * C1972 - C8978 * C1982) *
                 C4699 +
             (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
              C8981 * C1983 - C8978 * C1990) *
                 C30508) *
                C30746 * C30847) *
               C30813 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C1788 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C1789 +
            ((C8976 * C1269 - C8979 * C1259 + C8977 * C2367 - C8980 * C2363 +
              C8978 * C10605 - C8981 * C10604) *
                 C4699 +
             (C8976 * C1286 - C8979 * C1270 + C8977 * C2372 - C8980 * C2368 +
              C8978 * C10607 - C8981 * C10606) *
                 C30508) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30757 * C124 - C113 * C117) * C114 +
                 (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                 (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                    C30746 * C30814 +
                ((C113 * C468 - C30757 * C478) * C114 +
                 (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                 (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                    C30746 * C30665) *
                   C30813 +
               (((C113 * C287 - C30757 * C297) * C114 +
                 (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                 (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                    C30746 * C30814 +
                ((C30757 * C911 - C113 * C906) * C114 +
                 (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                 (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C284 +
              ((((C147 - C146) * C114 + (C149 - C148) * C102 +
                 (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                 C169 * C104) *
                    C30746 * C30814 +
                ((C510 - C509) * C114 + (C512 - C511) * C102 +
                 (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                 C756 * C104) *
                    C30746 * C30665) *
                   C30813 +
               (((C329 - C328) * C114 + (C331 - C330) * C102 +
                 (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                 C646 * C104) *
                    C30746 * C30814 +
                ((C928 - C927) * C114 + (C930 - C929) * C102 +
                 (C932 - C931) * C115 + (C934 - C933) * C103 +
                 (C935 - C936) * C116 + (C937 - C938) * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C285 +
              (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                 (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                    C30746 * C30814 +
                (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                 (C528 - C527) * C103 + (C757 - C758) * C116 +
                 (C759 - C760) * C104) *
                    C30746 * C30665) *
                   C30813 +
               ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                 (C347 - C346) * C103 + (C647 - C648) * C116 +
                 (C649 - C650) * C104) *
                    C30746 * C30814 +
                (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
                 (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
                 (C30757 * C925 - C113 * C920) * C104) *
                    C30746 * C30665) *
                   C30623) *
                  C30838) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30814 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30665) *
                  C1392 +
              (((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30814 +
               ((C30757 * C911 - C113 * C906) * C114 +
                (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                   C30746 * C30665) *
                  C1393 +
              (((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30814 +
               ((C113 * C1261 - C30757 * C1273) * C114 +
                (C113 * C1274 - C30757 * C1288) * C102 +
                (C1561 - C1562) * C115 + (C1563 - C1564) * C103 +
                (C1565 - C1566) * C116 + (C1567 - C1568) * C104) *
                   C30746 * C30665) *
                  C1394 +
              (((C113 * C1124 - C30757 * C1130) * C114 +
                (C113 * C1131 - C30757 * C1142) * C102 +
                (C1403 - C1404) * C115 + (C1405 - C1406) * C103 +
                (C1407 - C1408) * C116 + (C1409 - C1410) * C104) *
                   C30746 * C30814 +
               ((C30757 * C1669 - C113 * C1666) * C114 +
                (C30757 * C1675 - C113 * C1670) * C102 +
                (C30757 * C1671 - C113 * C1667) * C115 +
                (C30757 * C1676 - C113 * C1672) * C103 +
                (C30757 * C1673 - C113 * C1668) * C116 +
                (C30757 * C1677 - C113 * C1674) * C104) *
                   C30746 * C30665) *
                  C30854) *
             C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C2248 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C2249 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C2250 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30813 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C2248 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C2249 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C2250 +
           ((C30757 * C2365 - C113 * C2362) * C114 +
            (C30757 * C2371 - C113 * C2366) * C102 +
            (C30757 * C2367 - C113 * C2363) * C115 +
            (C30757 * C2372 - C113 * C2368) * C103 +
            (C30757 * C2369 - C113 * C2364) * C116 +
            (C30757 * C2373 - C113 * C2370) * C104) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             ((C5292 - C5293) * C4699 + (C5294 - C5295) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C30757 * C1669 - C113 * C1666) * C4699 +
              (C30757 * C1675 - C113 * C1670) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C284 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C113 * C1667 - C30757 * C1671) * C4699 +
              (C113 * C1672 - C30757 * C1676) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C285 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C1392 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30814 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C1393 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30814 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C1394 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30814 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C2248 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C2249 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C2250 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C30813 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C2248 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C2249 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C2250 +
           (((C6676 - C6675) * C4699 + (C6678 - C6677) * C30508) * C4696 +
            ((C6680 - C6679) * C4699 + (C6682 - C6681) * C30508) * C4697 +
            ((C30757 * C6671 - C113 * C6670) * C4699 +
             (C30757 * C6673 - C113 * C6672) * C30508) *
                C4698) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C285 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C1392 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30665) *
              C1393 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30665) *
              C1394 +
          (((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C1669 - C8979 * C1666 + C8977 * C5606 - C8980 * C5603 +
             C8978 * C6671 - C8981 * C6670) *
                C4699 +
            (C8976 * C1675 - C8979 * C1670 + C8977 * C5612 - C8980 * C5607 +
             C8978 * C6673 - C8981 * C6672) *
                C30508) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C2248 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C2249 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C2250 +
           ((C8979 * C1968 - C8976 * C1974 + C8980 * C1971 - C8977 * C1980 +
             C8981 * C10450 - C8978 * C10452) *
                C4699 +
            (C8979 * C1975 - C8976 * C1986 + C8980 * C1981 - C8977 * C1989 +
             C8981 * C10453 - C8978 * C10456) *
                C30508) *
               C30746 * C30860) *
              C30813 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C2248 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C2249 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C2250 +
           ((C8976 * C2365 - C8979 * C2362 + C8977 * C6309 - C8980 * C6305 +
             C8978 * C10809 - C8981 * C10808) *
                C4699 +
            (C8976 * C2371 - C8979 * C2366 + C8977 * C6314 - C8980 * C6310 +
             C8978 * C10811 - C8981 * C10810) *
                C30508) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C30757 * C124 - C113 * C117) * C114 +
               (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
               (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                  C30746 * C30578 * C30560 * C108 +
              ((C147 - C146) * C114 + (C149 - C148) * C102 +
               (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
               C169 * C104) *
                  C30746 * C30578 * C30560 * C109 +
              (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
               (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                  C30746 * C30578 * C30560 * C110 +
              (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
               (C161 - C160) * C103 + (C162 - C163) * C116 +
               (C164 - C165) * C104) *
                  C30746 * C30578 * C30560 * C111 +
              (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
               (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
               (C30757 * C144 - C113 * C137) * C104) *
                  C30746 * C30578 * C30560 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C30881 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30869 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C30844) *
                  C284 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C30881 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 +
                (C344 - C345) * C116 + (C346 - C347) * C104) *
                   C30746 * C30578 * C30869 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C30844) *
                  C285 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C30881 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
                (C113 * C314 - C30757 * C325) * C104) *
                   C30746 * C30578 * C30869 +
               (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
                (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
                (C30757 * C326 - C113 * C316) * C104) *
                   C30746 * C30578 * C30844) *
                  C30838) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30882 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30871 +
               ((C30757 * C484 - C113 * C471) * C114 +
                (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
                (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                   C30746 * C30847) *
                  C30560 * C284 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30882 +
               ((C510 - C509) * C114 + (C512 - C511) * C102 +
                (C514 - C513) * C115 + (C516 - C515) * C103 +
                (C525 - C526) * C116 + (C527 - C528) * C104) *
                   C30746 * C30871 +
               ((C518 - C517) * C114 + (C520 - C519) * C102 +
                (C522 - C521) * C115 + (C524 - C523) * C103 +
                (C529 - C530) * C116 + (C531 - C532) * C104) *
                   C30746 * C30847) *
                  C30560 * C285 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30882 +
               (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                (C528 - C527) * C103 + (C113 * C476 - C30757 * C494) * C116 +
                (C113 * C495 - C30757 * C506) * C104) *
                   C30746 * C30871 +
               (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
                (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
                (C30757 * C507 - C113 * C497) * C104) *
                   C30746 * C30847) *
                  C30560 * C30838) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C1050 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C1051 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C30844) *
                  C30878 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C1050 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                C646 * C104) *
                   C30746 * C30578 * C1051 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C30844) *
                  C30865 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C1050 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C647 - C648) * C116 +
                (C649 - C650) * C104) *
                   C30746 * C30578 * C1051 +
               (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
                (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
                (C30757 * C326 - C113 * C316) * C104) *
                   C30746 * C30578 * C30844) *
                  C30838) -
         0.25 * std::pow(Pi, 2.5) *
             (((C30757 * C124 - C113 * C117) * C114 +
               (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
               (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                  C30746 * C30578 * C1118 +
              ((C113 * C287 - C30757 * C297) * C114 +
               (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
               (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                  C30746 * C30578 * C1119 +
              ((C30757 * C303 - C113 * C290) * C114 +
               (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
               (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                  C30746 * C30578 * C1120 +
              ((C113 * C1124 - C30757 * C1130) * C114 +
               (C113 * C1131 - C30757 * C1142) * C102 +
               (C113 * C1125 - C30757 * C1132) * C115 +
               (C113 * C1133 - C30757 * C1143) * C103 +
               (C113 * C1126 - C30757 * C1134) * C116 +
               (C113 * C1135 - C30757 * C1144) * C104) *
                  C30746 * C30578 * C1121 +
              ((C30757 * C1136 - C113 * C1127) * C114 +
               (C30757 * C1145 - C113 * C1137) * C102 +
               (C30757 * C1138 - C113 * C1128) * C115 +
               (C30757 * C1146 - C113 * C1139) * C103 +
               (C30757 * C1140 - C113 * C1129) * C116 +
               (C30757 * C1147 - C113 * C1141) * C104) *
                  C30746 * C30578 * C1122) *
             C30532 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30882 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30871 +
               ((C30757 * C484 - C113 * C471) * C114 +
                (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
                (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                   C30746 * C30847) *
                  C1050 +
              (((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30882 +
               ((C30757 * C911 - C113 * C906) * C114 +
                (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                   C30746 * C30871 +
               ((C113 * C1258 - C30757 * C1267) * C114 +
                (C113 * C1268 - C30757 * C1285) * C102 +
                (C113 * C1259 - C30757 * C1269) * C115 +
                (C113 * C1270 - C30757 * C1286) * C103 +
                (C113 * C1260 - C30757 * C1271) * C116 +
                (C113 * C1272 - C30757 * C1287) * C104) *
                   C30746 * C30847) *
                  C1051 +
              (((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30882 +
               ((C113 * C1261 - C30757 * C1273) * C114 +
                (C113 * C1274 - C30757 * C1288) * C102 +
                (C113 * C1262 - C30757 * C1275) * C115 +
                (C113 * C1276 - C30757 * C1289) * C103 +
                (C113 * C1263 - C30757 * C1277) * C116 +
                (C113 * C1278 - C30757 * C1290) * C104) *
                   C30746 * C30871 +
               ((C30757 * C1279 - C113 * C1264) * C114 +
                (C30757 * C1291 - C113 * C1280) * C102 +
                (C30757 * C1281 - C113 * C1265) * C115 +
                (C30757 * C1292 - C113 * C1282) * C103 +
                (C30757 * C1283 - C113 * C1266) * C116 +
                (C30757 * C1293 - C113 * C1284) * C104) *
                   C30746 * C30847) *
                  C30844) *
             C30532 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C1788 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C1789 +
               ((C30757 * C484 - C113 * C471) * C114 +
                (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
                (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                   C30746 * C30847) *
                  C30560 * C30878 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C1788 +
               ((C510 - C509) * C114 + (C512 - C511) * C102 +
                (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                C756 * C104) *
                   C30746 * C1789 +
               ((C518 - C517) * C114 + (C520 - C519) * C102 +
                (C522 - C521) * C115 + (C524 - C523) * C103 +
                (C529 - C530) * C116 + (C531 - C532) * C104) *
                   C30746 * C30847) *
                  C30560 * C30865 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C1788 +
               (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                (C528 - C527) * C103 + (C757 - C758) * C116 +
                (C759 - C760) * C104) *
                   C30746 * C1789 +
               (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
                (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
                (C30757 * C507 - C113 * C497) * C104) *
                   C30746 * C30847) *
                  C30560 * C30838) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C1788 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C1789 +
               ((C30757 * C484 - C113 * C471) * C114 +
                (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
                (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                   C30746 * C30847) *
                  C30881 +
              (((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C1788 +
               ((C30757 * C911 - C113 * C906) * C114 +
                (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                   C30746 * C1789 +
               ((C113 * C1258 - C30757 * C1267) * C114 +
                (C113 * C1268 - C30757 * C1285) * C102 +
                (C113 * C1259 - C30757 * C1269) * C115 +
                (C113 * C1270 - C30757 * C1286) * C103 +
                (C113 * C1260 - C30757 * C1271) * C116 +
                (C113 * C1272 - C30757 * C1287) * C104) *
                   C30746 * C30847) *
                  C30869 +
              (((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C1788 +
               ((C113 * C1261 - C30757 * C1273) * C114 +
                (C113 * C1274 - C30757 * C1288) * C102 +
                (C1561 - C1562) * C115 + (C1563 - C1564) * C103 +
                (C1565 - C1566) * C116 + (C1567 - C1568) * C104) *
                   C30746 * C1789 +
               ((C30757 * C1279 - C113 * C1264) * C114 +
                (C30757 * C1291 - C113 * C1280) * C102 +
                (C30757 * C1281 - C113 * C1265) * C115 +
                (C30757 * C1292 - C113 * C1282) * C103 +
                (C30757 * C1283 - C113 * C1266) * C116 +
                (C30757 * C1293 - C113 * C1284) * C104) *
                   C30746 * C30847) *
                  C30844) *
             C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C1963 +
          ((C113 * C468 - C30757 * C478) * C114 +
           (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
           (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
              C30746 * C1964 +
          ((C30757 * C484 - C113 * C471) * C114 +
           (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
           (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
              C30746 * C1965 +
          ((C113 * C1968 - C30757 * C1974) * C114 +
           (C113 * C1975 - C30757 * C1986) * C102 +
           (C113 * C1969 - C30757 * C1976) * C115 +
           (C113 * C1977 - C30757 * C1987) * C103 +
           (C113 * C1970 - C30757 * C1978) * C116 +
           (C113 * C1979 - C30757 * C1988) * C104) *
              C30746 * C1966 +
          ((C30757 * C1980 - C113 * C1971) * C114 +
           (C30757 * C1989 - C113 * C1981) * C102 +
           (C30757 * C1982 - C113 * C1972) * C115 +
           (C30757 * C1990 - C113 * C1983) * C103 +
           (C30757 * C1984 - C113 * C1973) * C116 +
           (C30757 * C1991 - C113 * C1985) * C104) *
              C30746 * C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C30757 * C1267 - C113 * C1258) * C4699 +
             (C30757 * C1285 - C113 * C1268) * C30508) *
                C4697 +
            ((C30757 * C1279 - C113 * C1264) * C4699 +
             (C30757 * C1291 - C113 * C1280) * C30508) *
                C4698) *
               C30847) *
              C30560 * C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30882 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30871 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30882 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30871 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C1050 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30882 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
               C30871 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C1051 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30882 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C113 * C5604 - C30757 * C5608) * C4699 +
             (C113 * C5609 - C30757 * C5613) * C30508) *
                C4698) *
               C30871 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30560 * C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C1788 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C1789 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C1788 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C1789 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30881 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C1788 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C1789 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C30869 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C1788 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C1789 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C1963 +
          (((C113 * C468 - C30757 * C478) * C4699 +
            (C113 * C479 - C30757 * C498) * C30508) *
               C4696 +
           ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
           C5638 * C4698) *
              C1964 +
          (((C30757 * C484 - C113 * C471) * C4699 +
            (C30757 * C501 - C113 * C485) * C30508) *
               C4696 +
           ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
           C5641 * C4698) *
              C1965 +
          (((C113 * C1968 - C30757 * C1974) * C4699 +
            (C113 * C1975 - C30757 * C1986) * C30508) *
               C4696 +
           ((C113 * C2362 - C30757 * C2365) * C4699 +
            (C113 * C2366 - C30757 * C2371) * C30508) *
               C4697 +
           ((C113 * C6304 - C30757 * C6307) * C4699 +
            (C113 * C6308 - C30757 * C6313) * C30508) *
               C4698) *
              C1966 +
          (((C30757 * C1980 - C113 * C1971) * C4699 +
            (C30757 * C1989 - C113 * C1981) * C30508) *
               C4696 +
           ((C30757 * C6309 - C113 * C6305) * C4699 +
            (C30757 * C6314 - C113 * C6310) * C30508) *
               C4697 +
           ((C30757 * C6311 - C113 * C6306) * C4699 +
            (C30757 * C6315 - C113 * C6312) * C30508) *
               C4698) *
              C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C30560 * C108 +
          ((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
            C8981 * C472 - C8978 * C486) *
               C4699 +
           (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
            C8981 * C487 - C8978 * C502) *
               C30508) *
              C30746 * C30578 * C30560 * C109 +
          ((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
            C8978 * C488 - C8981 * C473) *
               C4699 +
           (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
            C8978 * C503 - C8981 * C489) *
               C30508) *
              C30746 * C30578 * C30560 * C110 +
          ((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
            C8981 * C475 - C8978 * C492) *
               C4699 +
           (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
            C8981 * C493 - C8978 * C505) *
               C30508) *
              C30746 * C30578 * C30560 * C111 +
          ((C8976 * C132 - C8979 * C121 + C8977 * C494 - C8980 * C476 +
            C8978 * C496 - C8981 * C477) *
               C4699 +
           (C8976 * C142 - C8979 * C133 + C8977 * C506 - C8980 * C495 +
            C8978 * C507 - C8981 * C497) *
               C30508) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30882 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30871 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C30847) *
              C30560 * C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C488 - C8979 * C473 + C8977 * C1978 - C8980 * C1970 +
             C8978 * C1984 - C8981 * C1973) *
                C4699 +
            (C8976 * C503 - C8979 * C489 + C8977 * C1988 - C8980 * C1979 +
             C8978 * C1991 - C8981 * C1985) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C1118 +
          ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
            C8981 * C1258 - C8978 * C1267) *
               C4699 +
           (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
            C8981 * C1268 - C8978 * C1285) *
               C30508) *
              C30746 * C30578 * C1119 +
          ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
            C8978 * C1279 - C8981 * C1264) *
               C4699 +
           (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
            C8978 * C1291 - C8981 * C1280) *
               C30508) *
              C30746 * C30578 * C1120 +
          ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
            C8981 * C5603 - C8978 * C5606) *
               C4699 +
           (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
            C8981 * C5607 - C8978 * C5612) *
               C30508) *
              C30746 * C30578 * C1121 +
          ((C8976 * C1136 - C8979 * C1127 + C8977 * C5608 - C8980 * C5604 +
            C8978 * C5610 - C8981 * C5605) *
               C4699 +
           (C8976 * C1145 - C8979 * C1137 + C8977 * C5613 - C8980 * C5609 +
            C8978 * C5614 - C8981 * C5611) *
               C30508) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C1050 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30882 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30871 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C30847) *
              C1051 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C1279 - C8979 * C1264 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C4699 +
            (C8976 * C1291 - C8979 * C1280 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30508) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C1788 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C1789 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C488 - C8979 * C473 + C8977 * C1978 - C8980 * C1970 +
             C8978 * C1984 - C8981 * C1973) *
                C4699 +
            (C8976 * C503 - C8979 * C489 + C8977 * C1988 - C8980 * C1979 +
             C8978 * C1991 - C8981 * C1985) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30881 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C1788 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C1789 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C30847) *
              C30869 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C1279 - C8979 * C1264 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C4699 +
            (C8976 * C1291 - C8979 * C1280 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30508) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C1963 +
          ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
            C8981 * C1968 - C8978 * C1974) *
               C4699 +
           (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
            C8981 * C1975 - C8978 * C1986) *
               C30508) *
              C30746 * C1964 +
          ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
            C8978 * C1980 - C8981 * C1971) *
               C4699 +
           (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
            C8978 * C1989 - C8981 * C1981) *
               C30508) *
              C30746 * C1965 +
          ((C8979 * C1968 - C8976 * C1974 + C8980 * C1971 - C8977 * C1980 +
            C8981 * C10450 - C8978 * C10452) *
               C4699 +
           (C8979 * C1975 - C8976 * C1986 + C8980 * C1981 - C8977 * C1989 +
            C8981 * C10453 - C8978 * C10456) *
               C30508) *
              C30746 * C1966 +
          ((C8976 * C1980 - C8979 * C1971 + C8977 * C10452 - C8980 * C10450 +
            C8978 * C10454 - C8981 * C10451) *
               C4699 +
           (C8976 * C1989 - C8979 * C1981 + C8977 * C10456 - C8980 * C10453 +
            C8978 * C10457 - C8981 * C10455) *
               C30508) *
              C30746 * C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30814 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30665) *
                  C30560 * C636 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30814 +
               ((C510 - C509) * C114 + (C512 - C511) * C102 +
                (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                C756 * C104) *
                   C30746 * C30665) *
                  C30560 * C637 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30814 +
               (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                (C528 - C527) * C103 + (C757 - C758) * C116 +
                (C759 - C760) * C104) *
                   C30746 * C30665) *
                  C30560 * C638 +
              ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
                (C161 - C160) * C103 + (C162 - C163) * C116 +
                (C164 - C165) * C104) *
                   C30746 * C30814 +
               (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
                (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
                (C30757 * C753 - C113 * C752) * C104) *
                   C30746 * C30665) *
                  C30560 * C30848) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30757 * C124 - C113 * C117) * C114 +
                 (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                 (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                    C30746 * C30814 +
                ((C113 * C468 - C30757 * C478) * C114 +
                 (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                 (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                    C30746 * C30665) *
                   C1050 +
               (((C113 * C287 - C30757 * C297) * C114 +
                 (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                 (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                    C30746 * C30814 +
                ((C30757 * C911 - C113 * C906) * C114 +
                 (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                 (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                    C30746 * C30665) *
                   C1051 +
               (((C30757 * C303 - C113 * C290) * C114 +
                 (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                 (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                    C30746 * C30814 +
                ((C113 * C1261 - C30757 * C1273) * C114 +
                 (C113 * C1274 - C30757 * C1288) * C102 +
                 (C1561 - C1562) * C115 + (C1563 - C1564) * C103 +
                 (C1565 - C1566) * C116 + (C1567 - C1568) * C104) *
                    C30746 * C30665) *
                   C30844) *
                  C30799 +
              ((((C147 - C146) * C114 + (C149 - C148) * C102 +
                 (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                 C169 * C104) *
                    C30746 * C30814 +
                ((C510 - C509) * C114 + (C512 - C511) * C102 +
                 (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                 C756 * C104) *
                    C30746 * C30665) *
                   C1050 +
               (((C329 - C328) * C114 + (C331 - C330) * C102 +
                 (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                 C646 * C104) *
                    C30746 * C30814 +
                ((C928 - C927) * C114 + (C930 - C929) * C102 +
                 (C932 - C931) * C115 + (C934 - C933) * C103 +
                 (C935 - C936) * C116 + (C937 - C938) * C104) *
                    C30746 * C30665) *
                   C1051 +
               (((C337 - C336) * C114 + (C339 - C338) * C102 +
                 (C341 - C340) * C115 + (C343 - C342) * C103 +
                 (C348 - C349) * C116 + (C350 - C351) * C104) *
                    C30746 * C30814 +
                ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
                 (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
                 (C30757 * C1557 - C113 * C1556) * C116 +
                 (C30757 * C1559 - C113 * C1558) * C104) *
                    C30746 * C30665) *
                   C30844) *
                  C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C2248 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C2249 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C2250 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30560 * C30799 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C2248 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C2249 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C2250 +
           ((C2258 - C2257) * C114 + (C2260 - C2259) * C102 +
            (C2262 - C2261) * C115 + (C2264 - C2263) * C103 +
            (C30757 * C2253 - C113 * C2252) * C116 +
            (C30757 * C2255 - C113 * C2254) * C104) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30665) *
              C30560 * C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30814 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30665) *
              C30560 * C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30814 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30814 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C1050 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C113 * C5604 - C30757 * C5608) * C4699 +
              (C113 * C5609 - C30757 * C5613) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C1050 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C2248 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C2249 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C2250 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C113 * C2362 - C30757 * C2365) * C4699 +
             (C113 * C2366 - C30757 * C2371) * C30508) *
                C4697 +
            ((C113 * C6304 - C30757 * C6307) * C4699 +
             (C113 * C6308 - C30757 * C6313) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C2248 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C2249 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C2250 +
           (((C2258 - C2257) * C4699 + (C2260 - C2259) * C30508) * C4696 +
            ((C30757 * C2367 - C113 * C2363) * C4699 +
             (C30757 * C2372 - C113 * C2368) * C30508) *
                C4697 +
            ((C30757 * C6569 - C113 * C6568) * C4699 +
             (C30757 * C6571 - C113 * C6570) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30665) *
              C30560 * C637 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30665) *
              C30560 * C638 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C490 - C8979 * C474 + C8977 * C492 - C8980 * C475 +
             C8978 * C2253 - C8981 * C2252) *
                C4699 +
            (C8976 * C504 - C8979 * C491 + C8977 * C505 - C8980 * C493 +
             C8978 * C2255 - C8981 * C2254) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C1050 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C1051 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C1050 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C1051 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C2248 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C2249 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C2250 +
           ((C8979 * C1968 - C8976 * C1974 + C8980 * C1971 - C8977 * C1980 +
             C8981 * C10450 - C8978 * C10452) *
                C4699 +
            (C8979 * C1975 - C8976 * C1986 + C8980 * C1981 - C8977 * C1989 +
             C8981 * C10453 - C8978 * C10456) *
                C30508) *
               C30746 * C30860) *
              C30560 * C30799 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C2248 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C2249 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C2250 +
           ((C8976 * C1976 - C8979 * C1969 + C8977 * C1982 - C8980 * C1972 +
             C8978 * C10707 - C8981 * C10706) *
                C4699 +
            (C8976 * C1987 - C8979 * C1977 + C8977 * C1990 - C8980 * C1983 +
             C8978 * C10709 - C8981 * C10708) *
                C30508) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C30560 * C108 +
          ((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
           (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
              C30746 * C30578 * C30560 * C109 +
          (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
           (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
              C30746 * C30578 * C30560 * C110 +
          (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
           (C161 - C160) * C103 + (C162 - C163) * C116 + (C164 - C165) * C104) *
              C30746 * C30578 * C30560 * C111 +
          (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
           (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
           (C30757 * C144 - C113 * C137) * C104) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30881 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30869 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30881 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + (C344 - C345) * C116 +
            (C346 - C347) * C104) *
               C30746 * C30578 * C30869 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30881 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
            (C113 * C314 - C30757 * C325) * C104) *
               C30746 * C30578 * C30869 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C1788 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C1789 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C1788 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C1789 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30881 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C1788 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C1789 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C30869 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C1788 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C1789 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30560 * C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C1788 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C1789 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C1788 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C1789 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30881 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C1788 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C1789 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C30869 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C1788 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C1789 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C30560 * C108 +
          ((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
            C8981 * C472 - C8978 * C486) *
               C4699 +
           (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
            C8981 * C487 - C8978 * C502) *
               C30508) *
              C30746 * C30578 * C30560 * C109 +
          ((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
            C8978 * C488 - C8981 * C473) *
               C4699 +
           (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
            C8978 * C503 - C8981 * C489) *
               C30508) *
              C30746 * C30578 * C30560 * C110 +
          ((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
            C8981 * C475 - C8978 * C492) *
               C4699 +
           (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
            C8981 * C493 - C8978 * C505) *
               C30508) *
              C30746 * C30578 * C30560 * C111 +
          ((C8976 * C132 - C8979 * C121 + C8977 * C494 - C8980 * C476 +
            C8978 * C496 - C8981 * C477) *
               C4699 +
           (C8976 * C142 - C8979 * C133 + C8977 * C506 - C8980 * C495 +
            C8978 * C507 - C8981 * C497) *
               C30508) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C1118 +
          ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
            C8981 * C1258 - C8978 * C1267) *
               C4699 +
           (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
            C8981 * C1268 - C8978 * C1285) *
               C30508) *
              C30746 * C30578 * C1119 +
          ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
            C8978 * C1279 - C8981 * C1264) *
               C4699 +
           (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
            C8978 * C1291 - C8981 * C1280) *
               C30508) *
              C30746 * C30578 * C1120 +
          ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
            C8981 * C5603 - C8978 * C5606) *
               C4699 +
           (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
            C8981 * C5607 - C8978 * C5612) *
               C30508) *
              C30746 * C30578 * C1121 +
          ((C8976 * C1136 - C8979 * C1127 + C8977 * C5608 - C8980 * C5604 +
            C8978 * C5610 - C8981 * C5605) *
               C4699 +
           (C8976 * C1145 - C8979 * C1137 + C8977 * C5613 - C8980 * C5609 +
            C8978 * C5614 - C8981 * C5611) *
               C30508) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C1788 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C1789 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C488 - C8979 * C473 + C8977 * C1978 - C8980 * C1970 +
             C8978 * C1984 - C8981 * C1973) *
                C4699 +
            (C8976 * C503 - C8979 * C489 + C8977 * C1988 - C8980 * C1979 +
             C8978 * C1991 - C8981 * C1985) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30881 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C1788 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C1789 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C30847) *
              C30869 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C1788 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C1789 +
           ((C8976 * C1279 - C8979 * C1264 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C4699 +
            (C8976 * C1291 - C8979 * C1280 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30508) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30537 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30546 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C3234 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C30813 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C3234 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30661 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30668 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C3742) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30661 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30668 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C3742) *
               C30623) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30661 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30668 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C3742) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30661 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30668 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30661 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30668 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C3742) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30661 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30668 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C3742) *
               C30623) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30661 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30668 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C3742) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30661 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30668 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30661 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30668 +
            ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
              C8978 * C1980 - C8981 * C1971) *
                 C4699 +
             (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
              C8978 * C1989 - C8981 * C1981) *
                 C30508) *
                C30746 * C3742) *
               C30813 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30661 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30668 +
            ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
              C8981 * C6305 - C8978 * C6309) *
                 C4699 +
             (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
              C8981 * C6310 - C8978 * C6314) *
                 C30508) *
                C30746 * C3742) *
               C30623) *
              C2580 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30661 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30668 +
            ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
              C8981 * C1972 - C8978 * C1982) *
                 C4699 +
             (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
              C8981 * C1983 - C8978 * C1990) *
                 C30508) *
                C30746 * C3742) *
               C30813 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30661 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30668 +
            ((C8976 * C1269 - C8979 * C1259 + C8977 * C2367 - C8980 * C2363 +
              C8978 * C10605 - C8981 * C10604) *
                 C4699 +
             (C8976 * C1286 - C8979 * C1270 + C8977 * C2372 - C8980 * C2368 +
              C8978 * C10607 - C8981 * C10606) *
                 C30508) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C3234 +
               ((C113 * C468 - C30757 * C478) * C114 +
                (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                   C30746 * C30665) *
                  C30560 * C30887 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C3234 +
               ((C510 - C509) * C114 + (C512 - C511) * C102 +
                (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                C756 * C104) *
                   C30746 * C30665) *
                  C30560 * C30880 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C3234 +
               (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
                (C528 - C527) * C103 + (C757 - C758) * C116 +
                (C759 - C760) * C104) *
                   C30746 * C30665) *
                  C30560 * C30867 +
              ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
                (C161 - C160) * C103 + (C162 - C163) * C116 +
                (C164 - C165) * C104) *
                   C30746 * C3234 +
               (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
                (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
                (C30757 * C753 - C113 * C752) * C104) *
                   C30746 * C30665) *
                  C30560 * C30848) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30757 * C124 - C113 * C117) * C114 +
                 (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                 (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                    C30746 * C3234 +
                ((C113 * C468 - C30757 * C478) * C114 +
                 (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
                 (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                    C30746 * C30665) *
                   C30881 +
               (((C113 * C287 - C30757 * C297) * C114 +
                 (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                 (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                    C30746 * C3234 +
                ((C30757 * C911 - C113 * C906) * C114 +
                 (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
                 (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                    C30746 * C30665) *
                   C30869 +
               (((C30757 * C303 - C113 * C290) * C114 +
                 (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                 (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                    C30746 * C3234 +
                ((C113 * C1261 - C30757 * C1273) * C114 +
                 (C113 * C1274 - C30757 * C1288) * C102 +
                 (C1561 - C1562) * C115 + (C1563 - C1564) * C103 +
                 (C1565 - C1566) * C116 + (C1567 - C1568) * C104) *
                    C30746 * C30665) *
                   C30844) *
                  C2580 +
              ((((C147 - C146) * C114 + (C149 - C148) * C102 +
                 (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                 C169 * C104) *
                    C30746 * C3234 +
                ((C510 - C509) * C114 + (C512 - C511) * C102 +
                 (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
                 C756 * C104) *
                    C30746 * C30665) *
                   C30881 +
               (((C329 - C328) * C114 + (C331 - C330) * C102 +
                 (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
                 C646 * C104) *
                    C30746 * C3234 +
                ((C928 - C927) * C114 + (C930 - C929) * C102 +
                 (C932 - C931) * C115 + (C934 - C933) * C103 +
                 (C935 - C936) * C116 + (C937 - C938) * C104) *
                    C30746 * C30665) *
                   C30869 +
               (((C337 - C336) * C114 + (C339 - C338) * C102 +
                 (C341 - C340) * C115 + (C343 - C342) * C103 +
                 (C348 - C349) * C116 + (C350 - C351) * C104) *
                    C30746 * C3234 +
                ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
                 (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
                 (C30757 * C1557 - C113 * C1556) * C116 +
                 (C30757 * C1559 - C113 * C1558) * C104) *
                    C30746 * C30665) *
                   C30844) *
                  C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30889 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30886 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30877 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30560 * C2580 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30889 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30886 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30877 +
           ((C2258 - C2257) * C114 + (C2260 - C2259) * C102 +
            (C2262 - C2261) * C115 + (C2264 - C2263) * C103 +
            (C30757 * C2253 - C113 * C2252) * C116 +
            (C30757 * C2255 - C113 * C2254) * C104) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30560 * C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C3234 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30665) *
              C30560 * C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C3234 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C3234 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30881 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30869 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C30844) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30881 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30869 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30889 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30886 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30877 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C30560 * C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30889 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30886 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C30877 +
           (((C2258 - C2257) * C4699 + (C2260 - C2259) * C30508) * C4696 +
            ((C30757 * C2367 - C113 * C2363) * C4699 +
             (C30757 * C2372 - C113 * C2368) * C30508) *
                C4697 +
            ((C30757 * C6569 - C113 * C6568) * C4699 +
             (C30757 * C6571 - C113 * C6570) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30880 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30867 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C490 - C8979 * C474 + C8977 * C492 - C8980 * C475 +
             C8978 * C2253 - C8981 * C2252) *
                C4699 +
            (C8976 * C504 - C8979 * C491 + C8977 * C505 - C8980 * C493 +
             C8978 * C2255 - C8981 * C2254) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30881 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30869 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30881 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30869 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30889 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30886 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30877 +
           ((C8979 * C1968 - C8976 * C1974 + C8980 * C1971 - C8977 * C1980 +
             C8981 * C10450 - C8978 * C10452) *
                C4699 +
            (C8979 * C1975 - C8976 * C1986 + C8980 * C1981 - C8977 * C1989 +
             C8981 * C10453 - C8978 * C10456) *
                C30508) *
               C30746 * C30860) *
              C30560 * C2580 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30889 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30886 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C30877 +
           ((C8976 * C1976 - C8979 * C1969 + C8977 * C1982 - C8980 * C1972 +
             C8978 * C10707 - C8981 * C10706) *
                C4699 +
            (C8976 * C1987 - C8979 * C1977 + C8977 * C1990 - C8980 * C1983 +
             C8978 * C10709 - C8981 * C10708) *
                C30508) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30661 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30668 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C3742) *
              C30560 * C30537 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30661 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30668 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C3742) *
              C30560 * C30546 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30661 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30668 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C3742) *
              C30560 * C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30661 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30668 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C3742) *
              C30560 * C30537 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30661 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30668 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C3742) *
              C30560 * C30546 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30661 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30668 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C3742) *
              C30560 * C2843)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30661 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30668 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C3742) *
              C30560 * C30537 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30661 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30668 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C3742) *
              C30560 * C30546 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30661 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30668 +
           ((C8976 * C488 - C8979 * C473 + C8977 * C1978 - C8980 * C1970 +
             C8978 * C1984 - C8981 * C1973) *
                C4699 +
            (C8976 * C503 - C8979 * C489 + C8977 * C1988 - C8980 * C1979 +
             C8978 * C1991 - C8981 * C1985) *
                C30508) *
               C30746 * C3742) *
              C30560 * C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30869 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C3234 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30869 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C3234 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C3234 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C3234 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C3234 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30560 * C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C3234 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30665) *
              C30560 * C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C3234 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C3234 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30881 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30869 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C30844) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30881 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30869 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30880 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C3234 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30867 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C3234 +
           ((C8976 * C490 - C8979 * C474 + C8977 * C492 - C8980 * C475 +
             C8978 * C2253 - C8981 * C2252) *
                C4699 +
            (C8976 * C504 - C8979 * C491 + C8977 * C505 - C8980 * C493 +
             C8978 * C2255 - C8981 * C2254) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30881 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30869 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30881 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C3234 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30869 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C3234 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1392 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1393 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C1394 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1392 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1393 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C1394 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30813 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30813 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30813 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C30813 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30813 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30623) *
              C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30813 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30623) *
              C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30813 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C30813 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1392 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C1393 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C1394 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1392 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C1393 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C1394 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30623) *
              C637 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30623) *
              C638 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30578 * C30813 +
           ((C8976 * C309 - C8979 * C293 + C8977 * C917 - C8980 * C909 +
             C8978 * C2139 - C8981 * C2138) *
                C4699 +
            (C8976 * C323 - C8979 * C310 + C8977 * C924 - C8980 * C918 +
             C8978 * C2141 - C8981 * C2140) *
                C30508) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1392 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1393 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C1394 +
           ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1392 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1393 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C1394 +
           ((C8976 * C1132 - C8979 * C1125 + C8977 * C1671 - C8980 * C1667 +
             C8978 * C6463 - C8981 * C6462) *
                C4699 +
            (C8976 * C1143 - C8979 * C1133 + C8977 * C1676 - C8980 * C1672 +
             C8978 * C6465 - C8981 * C6464) *
                C30508) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C1392 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30814 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C1393 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30814 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C1394 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30814 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C285 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C30814 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C30813 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C30814 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             ((C5292 - C5293) * C4699 + (C5294 - C5295) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C30757 * C1669 - C113 * C1666) * C4699 +
              (C30757 * C1675 - C113 * C1670) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C284 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C113 * C1667 - C30757 * C1671) * C4699 +
              (C113 * C1672 - C30757 * C1676) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C285 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C1392 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30814 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C1393 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30814 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C1394 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30814 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C285 +
          ((((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
              C8978 * C488 - C8981 * C473) *
                 C4699 +
             (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
              C8978 * C503 - C8981 * C489) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
              C8981 * C1970 - C8978 * C1978) *
                 C4699 +
             (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
              C8981 * C1979 - C8978 * C1988) *
                 C30508) *
                C30746 * C30665) *
               C30813 +
           (((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
              C8981 * C1260 - C8978 * C1271) *
                 C4699 +
             (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
              C8981 * C1272 - C8978 * C1287) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C915 - C8979 * C908 + C8977 * C1271 - C8980 * C1260 +
              C8978 * C2369 - C8981 * C2364) *
                 C4699 +
             (C8976 * C923 - C8979 * C916 + C8977 * C1287 - C8980 * C1272 +
              C8978 * C2373 - C8981 * C2370) *
                 C30508) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C1392 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30665) *
              C1393 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30665) *
              C1394 +
          (((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
             C8981 * C5603 - C8978 * C5606) *
                C4699 +
            (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
             C8981 * C5607 - C8978 * C5612) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C1669 - C8979 * C1666 + C8977 * C5606 - C8980 * C5603 +
             C8978 * C6671 - C8981 * C6670) *
                C4699 +
            (C8976 * C1675 - C8979 * C1670 + C8977 * C5612 - C8980 * C5607 +
             C8978 * C6673 - C8981 * C6672) *
                C30508) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C30757 * C124 - C113 * C117) * C114 +
               (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
               (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                  C30746 * C30578 * C30560 * C108 +
              ((C147 - C146) * C114 + (C149 - C148) * C102 +
               (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
               C169 * C104) *
                  C30746 * C30578 * C30560 * C109 +
              (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
               (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                  C30746 * C30578 * C30560 * C110 +
              (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
               (C161 - C160) * C103 + (C162 - C163) * C116 +
               (C164 - C165) * C104) *
                  C30746 * C30578 * C30560 * C111 +
              (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
               (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
               (C30757 * C144 - C113 * C137) * C104) *
                  C30746 * C30578 * C30560 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C30881 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30869 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C30844) *
                  C284 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C30881 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 +
                (C344 - C345) * C116 + (C346 - C347) * C104) *
                   C30746 * C30578 * C30869 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C30844) *
                  C285 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C30881 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
                (C113 * C314 - C30757 * C325) * C104) *
                   C30746 * C30578 * C30869 +
               (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
                (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
                (C30757 * C326 - C113 * C316) * C104) *
                   C30746 * C30578 * C30844) *
                  C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30882 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + (C525 - C526) * C116 +
            (C527 - C528) * C104) *
               C30746 * C30871 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30882 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C113 * C476 - C30757 * C494) * C116 +
            (C113 * C495 - C30757 * C506) * C104) *
               C30746 * C30871 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C1050 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30882 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30871 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C1051 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30882 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 +
            (C113 * C1262 - C30757 * C1275) * C115 +
            (C113 * C1276 - C30757 * C1289) * C103 +
            (C113 * C1263 - C30757 * C1277) * C116 +
            (C113 * C1278 - C30757 * C1290) * C104) *
               C30746 * C30871 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C30757 * C1267 - C113 * C1258) * C4699 +
             (C30757 * C1285 - C113 * C1268) * C30508) *
                C4697 +
            ((C30757 * C1279 - C113 * C1264) * C4699 +
             (C30757 * C1291 - C113 * C1280) * C30508) *
                C4698) *
               C30847) *
              C30560 * C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30882 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30871 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30882 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30871 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C1050 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30882 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
               C30871 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C1051 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30882 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C113 * C5604 - C30757 * C5608) * C4699 +
             (C113 * C5609 - C30757 * C5613) * C30508) *
                C4698) *
               C30871 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C30560 * C108 +
          ((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
            C8981 * C472 - C8978 * C486) *
               C4699 +
           (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
            C8981 * C487 - C8978 * C502) *
               C30508) *
              C30746 * C30578 * C30560 * C109 +
          ((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
            C8978 * C488 - C8981 * C473) *
               C4699 +
           (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
            C8978 * C503 - C8981 * C489) *
               C30508) *
              C30746 * C30578 * C30560 * C110 +
          ((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
            C8981 * C475 - C8978 * C492) *
               C4699 +
           (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
            C8981 * C493 - C8978 * C505) *
               C30508) *
              C30746 * C30578 * C30560 * C111 +
          ((C8976 * C132 - C8979 * C121 + C8977 * C494 - C8980 * C476 +
            C8978 * C496 - C8981 * C477) *
               C4699 +
           (C8976 * C142 - C8979 * C133 + C8977 * C506 - C8980 * C495 +
            C8978 * C507 - C8981 * C497) *
               C30508) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30882 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30871 +
           ((C8979 * C472 - C8976 * C486 + C8980 * C1969 - C8977 * C1976 +
             C8981 * C1972 - C8978 * C1982) *
                C4699 +
            (C8979 * C487 - C8976 * C502 + C8980 * C1977 - C8977 * C1987 +
             C8981 * C1983 - C8978 * C1990) *
                C30508) *
               C30746 * C30847) *
              C30560 * C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C488 - C8979 * C473 + C8977 * C1978 - C8980 * C1970 +
             C8978 * C1984 - C8981 * C1973) *
                C4699 +
            (C8976 * C503 - C8979 * C489 + C8977 * C1988 - C8980 * C1979 +
             C8978 * C1991 - C8981 * C1985) *
                C30508) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C1118 +
          ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
            C8981 * C1258 - C8978 * C1267) *
               C4699 +
           (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
            C8981 * C1268 - C8978 * C1285) *
               C30508) *
              C30746 * C30578 * C1119 +
          ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
            C8978 * C1279 - C8981 * C1264) *
               C4699 +
           (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
            C8978 * C1291 - C8981 * C1280) *
               C30508) *
              C30746 * C30578 * C1120 +
          ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
            C8981 * C5603 - C8978 * C5606) *
               C4699 +
           (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
            C8981 * C5607 - C8978 * C5612) *
               C30508) *
              C30746 * C30578 * C1121 +
          ((C8976 * C1136 - C8979 * C1127 + C8977 * C5608 - C8980 * C5604 +
            C8978 * C5610 - C8981 * C5605) *
               C4699 +
           (C8976 * C1145 - C8979 * C1137 + C8977 * C5613 - C8980 * C5609 +
            C8978 * C5614 - C8981 * C5611) *
               C30508) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C484 - C8979 * C471 + C8977 * C1974 - C8980 * C1968 +
             C8978 * C1980 - C8981 * C1971) *
                C4699 +
            (C8976 * C501 - C8979 * C485 + C8977 * C1986 - C8980 * C1975 +
             C8978 * C1989 - C8981 * C1981) *
                C30508) *
               C30746 * C30847) *
              C1050 +
          (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30882 +
           ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
             C8978 * C2365 - C8981 * C2362) *
                C4699 +
            (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
             C8978 * C2371 - C8981 * C2366) *
                C30508) *
               C30746 * C30871 +
           ((C8979 * C1258 - C8976 * C1267 + C8980 * C2362 - C8977 * C2365 +
             C8981 * C6305 - C8978 * C6309) *
                C4699 +
            (C8979 * C1268 - C8976 * C1285 + C8980 * C2366 - C8977 * C2371 +
             C8981 * C6310 - C8978 * C6314) *
                C30508) *
               C30746 * C30847) *
              C1051 +
          (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30882 +
           ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
             C8981 * C6304 - C8978 * C6307) *
                C4699 +
            (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
             C8981 * C6308 - C8978 * C6313) *
                C30508) *
               C30746 * C30871 +
           ((C8976 * C1279 - C8979 * C1264 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C4699 +
            (C8976 * C1291 - C8979 * C1280 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30508) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C1051 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C30814 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C1051 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C30814 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30814 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30814 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30814 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30665) *
              C30560 * C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30814 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30665) *
              C30560 * C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30814 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30814 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C1050 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C113 * C5604 - C30757 * C5608) * C4699 +
              (C113 * C5609 - C30757 * C5613) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C1050 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
             C8981 * C1968 - C8978 * C1974) *
                C4699 +
            (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
             C8981 * C1975 - C8978 * C1986) *
                C30508) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
             C8978 * C1976 - C8981 * C1969) *
                C4699 +
            (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
             C8978 * C1987 - C8981 * C1977) *
                C30508) *
               C30746 * C30665) *
              C30560 * C637 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30814 +
           ((C8979 * C470 - C8976 * C482 + C8980 * C473 - C8977 * C488 +
             C8981 * C1970 - C8978 * C1978) *
                C4699 +
            (C8979 * C483 - C8976 * C500 + C8980 * C489 - C8977 * C503 +
             C8981 * C1979 - C8978 * C1988) *
                C30508) *
               C30746 * C30665) *
              C30560 * C638 +
          (((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
             C8981 * C475 - C8978 * C492) *
                C4699 +
            (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
             C8981 * C493 - C8978 * C505) *
                C30508) *
               C30746 * C30814 +
           ((C8976 * C490 - C8979 * C474 + C8977 * C492 - C8980 * C475 +
             C8978 * C2253 - C8981 * C2252) *
                C4699 +
            (C8976 * C504 - C8979 * C491 + C8977 * C505 - C8980 * C493 +
             C8978 * C2255 - C8981 * C2254) *
                C30508) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
              C8978 * C484 - C8981 * C471) *
                 C4699 +
             (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
              C8978 * C501 - C8981 * C485) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C468 - C8976 * C478 + C8980 * C471 - C8977 * C484 +
              C8981 * C1968 - C8978 * C1974) *
                 C4699 +
             (C8979 * C479 - C8976 * C498 + C8980 * C485 - C8977 * C501 +
              C8981 * C1975 - C8978 * C1986) *
                 C30508) *
                C30746 * C30665) *
               C1050 +
           (((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
              C8981 * C1258 - C8978 * C1267) *
                 C4699 +
             (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
              C8981 * C1268 - C8978 * C1285) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C911 - C8979 * C906 + C8977 * C1267 - C8980 * C1258 +
              C8978 * C2365 - C8981 * C2362) *
                 C4699 +
             (C8976 * C921 - C8979 * C912 + C8977 * C1285 - C8980 * C1268 +
              C8978 * C2371 - C8981 * C2366) *
                 C30508) *
                C30746 * C30665) *
               C1051 +
           (((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
              C8978 * C1279 - C8981 * C1264) *
                 C4699 +
             (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
              C8978 * C1291 - C8981 * C1280) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C1261 - C8976 * C1273 + C8980 * C1264 - C8977 * C1279 +
              C8981 * C6304 - C8978 * C6307) *
                 C4699 +
             (C8979 * C1274 - C8976 * C1288 + C8980 * C1280 - C8977 * C1291 +
              C8981 * C6308 - C8978 * C6313) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
              C8981 * C472 - C8978 * C486) *
                 C4699 +
             (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
              C8981 * C487 - C8978 * C502) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C480 - C8979 * C469 + C8977 * C486 - C8980 * C472 +
              C8978 * C1976 - C8981 * C1969) *
                 C4699 +
             (C8976 * C499 - C8979 * C481 + C8977 * C502 - C8980 * C487 +
              C8978 * C1987 - C8981 * C1977) *
                 C30508) *
                C30746 * C30665) *
               C1050 +
           (((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
              C8978 * C1269 - C8981 * C1259) *
                 C4699 +
             (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
              C8978 * C1286 - C8981 * C1270) *
                 C30508) *
                C30746 * C30814 +
            ((C8979 * C907 - C8976 * C913 + C8980 * C1259 - C8977 * C1269 +
              C8981 * C2363 - C8978 * C2367) *
                 C4699 +
             (C8979 * C914 - C8976 * C922 + C8980 * C1270 - C8977 * C1286 +
              C8981 * C2368 - C8978 * C2372) *
                 C30508) *
                C30746 * C30665) *
               C1051 +
           (((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
              C8981 * C1265 - C8978 * C1281) *
                 C4699 +
             (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
              C8981 * C1282 - C8978 * C1292) *
                 C30508) *
                C30746 * C30814 +
            ((C8976 * C1275 - C8979 * C1262 + C8977 * C1281 - C8980 * C1265 +
              C8978 * C6569 - C8981 * C6568) *
                 C4699 +
             (C8976 * C1289 - C8979 * C1276 + C8977 * C1292 - C8980 * C1282 +
              C8978 * C6571 - C8981 * C6570) *
                 C30508) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30881 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30869 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30881 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + (C344 - C345) * C116 +
            (C346 - C347) * C104) *
               C30746 * C30578 * C30869 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30881 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
            (C113 * C314 - C30757 * C325) * C104) *
               C30746 * C30578 * C30869 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C30560 * C108 +
          ((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
           (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
              C30746 * C30578 * C30560 * C109 +
          (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
           (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
              C30746 * C30578 * C30560 * C110 +
          (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
           (C161 - C160) * C103 + (C162 - C163) * C116 + (C164 - C165) * C104) *
              C30746 * C30578 * C30560 * C111 +
          (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
           (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
           (C30757 * C144 - C113 * C137) * C104) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C30560 * C108 +
          ((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
            C8981 * C472 - C8978 * C486) *
               C4699 +
           (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
            C8981 * C487 - C8978 * C502) *
               C30508) *
              C30746 * C30578 * C30560 * C109 +
          ((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
            C8978 * C488 - C8981 * C473) *
               C4699 +
           (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
            C8978 * C503 - C8981 * C489) *
               C30508) *
              C30746 * C30578 * C30560 * C110 +
          ((C8979 * C120 - C8976 * C130 + C8980 * C474 - C8977 * C490 +
            C8981 * C475 - C8978 * C492) *
               C4699 +
           (C8979 * C131 - C8976 * C141 + C8980 * C491 - C8977 * C504 +
            C8981 * C493 - C8978 * C505) *
               C30508) *
              C30746 * C30578 * C30560 * C111 +
          ((C8976 * C132 - C8979 * C121 + C8977 * C494 - C8980 * C476 +
            C8978 * C496 - C8981 * C477) *
               C4699 +
           (C8976 * C142 - C8979 * C133 + C8977 * C506 - C8980 * C495 +
            C8978 * C507 - C8981 * C497) *
               C30508) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C30881 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C30869 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
             C8978 * C484 - C8981 * C471) *
                C4699 +
            (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
             C8978 * C501 - C8981 * C485) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
             C8981 * C1258 - C8978 * C1267) *
                C4699 +
            (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
             C8981 * C1268 - C8978 * C1285) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
             C8978 * C1279 - C8981 * C1264) *
                C4699 +
            (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
             C8978 * C1291 - C8981 * C1280) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C8979 * C118 - C8976 * C126 + C8980 * C469 - C8977 * C480 +
             C8981 * C472 - C8978 * C486) *
                C4699 +
            (C8979 * C127 - C8976 * C139 + C8980 * C481 - C8977 * C499 +
             C8981 * C487 - C8978 * C502) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8976 * C299 - C8979 * C288 + C8977 * C913 - C8980 * C907 +
             C8978 * C1269 - C8981 * C1259) *
                C4699 +
            (C8976 * C318 - C8979 * C300 + C8977 * C922 - C8980 * C914 +
             C8978 * C1286 - C8981 * C1270) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8979 * C291 - C8976 * C305 + C8980 * C1262 - C8977 * C1275 +
             C8981 * C1265 - C8978 * C1281) *
                C4699 +
            (C8979 * C306 - C8976 * C321 + C8980 * C1276 - C8977 * C1289 +
             C8981 * C1282 - C8978 * C1292) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C8976 * C128 - C8979 * C119 + C8977 * C482 - C8980 * C470 +
             C8978 * C488 - C8981 * C473) *
                C4699 +
            (C8976 * C140 - C8979 * C129 + C8977 * C500 - C8980 * C483 +
             C8978 * C503 - C8981 * C489) *
                C30508) *
               C30746 * C30578 * C1050 +
           ((C8979 * C289 - C8976 * C301 + C8980 * C908 - C8977 * C915 +
             C8981 * C1260 - C8978 * C1271) *
                C4699 +
            (C8979 * C302 - C8976 * C319 + C8980 * C916 - C8977 * C923 +
             C8981 * C1272 - C8978 * C1287) *
                C30508) *
               C30746 * C30578 * C1051 +
           ((C8976 * C307 - C8979 * C292 + C8977 * C1277 - C8980 * C1263 +
             C8978 * C1283 - C8981 * C1266) *
                C4699 +
            (C8976 * C322 - C8979 * C308 + C8977 * C1290 - C8980 * C1278 +
             C8978 * C1293 - C8981 * C1284) *
                C30508) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C124 - C8979 * C117 + C8977 * C478 - C8980 * C468 +
            C8978 * C484 - C8981 * C471) *
               C4699 +
           (C8976 * C138 - C8979 * C125 + C8977 * C498 - C8980 * C479 +
            C8978 * C501 - C8981 * C485) *
               C30508) *
              C30746 * C30578 * C1118 +
          ((C8979 * C287 - C8976 * C297 + C8980 * C906 - C8977 * C911 +
            C8981 * C1258 - C8978 * C1267) *
               C4699 +
           (C8979 * C298 - C8976 * C317 + C8980 * C912 - C8977 * C921 +
            C8981 * C1268 - C8978 * C1285) *
               C30508) *
              C30746 * C30578 * C1119 +
          ((C8976 * C303 - C8979 * C290 + C8977 * C1273 - C8980 * C1261 +
            C8978 * C1279 - C8981 * C1264) *
               C4699 +
           (C8976 * C320 - C8979 * C304 + C8977 * C1288 - C8980 * C1274 +
            C8978 * C1291 - C8981 * C1280) *
               C30508) *
              C30746 * C30578 * C1120 +
          ((C8979 * C1124 - C8976 * C1130 + C8980 * C1666 - C8977 * C1669 +
            C8981 * C5603 - C8978 * C5606) *
               C4699 +
           (C8979 * C1131 - C8976 * C1142 + C8980 * C1670 - C8977 * C1675 +
            C8981 * C5607 - C8978 * C5612) *
               C30508) *
              C30746 * C30578 * C1121 +
          ((C8976 * C1136 - C8979 * C1127 + C8977 * C5608 - C8980 * C5604 +
            C8978 * C5610 - C8981 * C5605) *
               C4699 +
           (C8976 * C1145 - C8979 * C1137 + C8977 * C5613 - C8980 * C5609 +
            C8978 * C5614 - C8981 * C5611) *
               C30508) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30619 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30626 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C2840) *
              C30537 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30619 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30626 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C2840) *
              C30546 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30619 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C30626 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C2840) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30619 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30626 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C30814 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C2840) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30619 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30626 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C30814 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30888 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30884 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30874 +
           ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30888 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30884 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30874 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
             C18613 * C1668) *
                C13131 +
            (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
             C18613 * C1674) *
                C13127) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30623) *
              C30880 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C30623) *
              C30867 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30578 * C2472 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C13131 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C13127) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30882 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30871 +
            ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C13130 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C13126 +
             (C18979 - C18980 + C18981 - C18982) * C13131 +
             (C18983 - C18984 + C18985 - C18986) * C13127) *
                C30746 * C30847) *
               C2472 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30882 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30871 +
            ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
              C18611 * C2365) *
                 C13130 +
             (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
              C18611 * C2371) *
                 C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30746 * C30847) *
               C30623) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30882 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30871 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C18995 - C18996 + C18997 - C18998) * C13131 +
             (C18999 - C19000 + C19001 - C19002) * C13127) *
                C30746 * C30847) *
               C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30882 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30871 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C13131 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C13127) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C30814 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C30814 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30623) *
              C30880 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C2472 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C30623) *
              C30867 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30578 * C2472 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C13131 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C13127) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30888 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30884 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30874 +
           ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30888 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30884 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30874 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
             C18613 * C1668) *
                C13131 +
            (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
             C18613 * C1674) *
                C13127) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30619 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30626 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C3234 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C2840) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30619 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30626 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C3234 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30661 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30668 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C3742) *
              C30619 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30661 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30668 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30746 * C3742) *
              C30626 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30661 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C30668 +
           ((C18610 * C1279 - C18612 * C1264 + C18611 * C6307 -
             C18613 * C6304) *
                C13130 +
            (C18610 * C1291 - C18612 * C1280 + C18611 * C6313 -
             C18613 * C6308) *
                C13126 +
            (C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
             C18613 * C6568) *
                C13131 +
            (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
             C18613 * C6570) *
                C13127) *
               C30746 * C3742) *
              C2840) *
         C30532) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C3234 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30888 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C3234 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30665) *
              C30884 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C3234 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C30665) *
              C30874 +
          (((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C3234 +
           ((C18610 * C1669 - C18612 * C1666 + C18611 * C5606 -
             C18613 * C5603) *
                C13130 +
            (C18610 * C1675 - C18612 * C1670 + C18611 * C5612 -
             C18613 * C5607) *
                C13126 +
            (C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
             C18613 * C6462) *
                C13131 +
            (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
             C18613 * C6464) *
                C13127) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C3234 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C3234 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30889 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30886 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30877 +
           ((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
             C18611 * C1980) *
                C13130 +
            (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
             C18611 * C1989) *
                C13126 +
            (C21039 - C21040 + C21041 - C21042) * C13131 +
            (C21043 - C21044 + C21045 - C21046) * C13127) *
               C30746 * C30860) *
              C2472 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30889 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30886 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30746 * C30877 +
           ((C18610 * C2365 - C18612 * C2362 + C18611 * C6309 -
             C18613 * C6305) *
                C13130 +
            (C18610 * C2371 - C18612 * C2366 + C18611 * C6314 -
             C18613 * C6310) *
                C13126 +
            (C18610 * C2367 - C18612 * C2363 + C18611 * C10605 -
             C18613 * C10604) *
                C13131 +
            (C18610 * C2372 - C18612 * C2368 + C18611 * C10607 -
             C18613 * C10606) *
                C13127) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30661 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30668 +
            ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C13130 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C13126 +
             (C18979 - C18980 + C18981 - C18982) * C13131 +
             (C18983 - C18984 + C18985 - C18986) * C13127) *
                C30746 * C3742) *
               C2472 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30661 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30668 +
            ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
              C18611 * C2365) *
                 C13130 +
             (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
              C18611 * C2371) *
                 C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30746 * C3742) *
               C30623) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30661 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30668 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C18995 - C18996 + C18997 - C18998) * C13131 +
             (C18999 - C19000 + C19001 - C19002) * C13127) *
                C30746 * C3742) *
               C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30661 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30668 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C13131 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C13127) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C3234 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C2472 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C3234 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C3234 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30888 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C3234 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30665) *
              C30884 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C3234 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C30665) *
              C30874 +
          (((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C3234 +
           ((C18610 * C1669 - C18612 * C1666 + C18611 * C5606 -
             C18613 * C5603) *
                C13130 +
            (C18610 * C1675 - C18612 * C1670 + C18611 * C5612 -
             C18613 * C5607) *
                C13126 +
            (C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
             C18613 * C6462) *
                C13131 +
            (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
             C18613 * C6464) *
                C13127) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1392 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1393 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C1394 +
           ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1392 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1393 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C1394 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
             C18613 * C1668) *
                C13131 +
            (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
             C18613 * C1674) *
                C13127) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30623) *
              C637 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C30623) *
              C638 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30578 * C30813 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C13131 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C13127) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C1788 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C1789 +
            ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C13130 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C13126 +
             (C18979 - C18980 + C18981 - C18982) * C13131 +
             (C18983 - C18984 + C18985 - C18986) * C13127) *
                C30746 * C30847) *
               C30813 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C1788 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C1789 +
            ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
              C18611 * C2365) *
                 C13130 +
             (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
              C18611 * C2371) *
                 C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30746 * C30847) *
               C30623) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C1788 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C1789 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C18995 - C18996 + C18997 - C18998) * C13131 +
             (C18999 - C19000 + C19001 - C19002) * C13127) *
                C30746 * C30847) *
               C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C1788 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C1789 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C13131 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C13127) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30814 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C1392 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30814 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30665) *
              C1393 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30814 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C30665) *
              C1394 +
          (((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30814 +
           ((C18610 * C1669 - C18612 * C1666 + C18611 * C5606 -
             C18613 * C5603) *
                C13130 +
            (C18610 * C1675 - C18612 * C1670 + C18611 * C5612 -
             C18613 * C5607) *
                C13126 +
            (C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
             C18613 * C6462) *
                C13131 +
            (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
             C18613 * C6464) *
                C13127) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C30814 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C30814 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C2248 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C2249 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C2250 +
           ((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
             C18611 * C1980) *
                C13130 +
            (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
             C18611 * C1989) *
                C13126 +
            (C21039 - C21040 + C21041 - C21042) * C13131 +
            (C21043 - C21044 + C21045 - C21046) * C13127) *
               C30746 * C30860) *
              C30813 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C2248 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C2249 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30746 * C2250 +
           ((C18610 * C2365 - C18612 * C2362 + C18611 * C6309 -
             C18613 * C6305) *
                C13130 +
            (C18610 * C2371 - C18612 * C2366 + C18611 * C6314 -
             C18613 * C6310) *
                C13126 +
            (C18610 * C2367 - C18612 * C2363 + C18611 * C10605 -
             C18613 * C10604) *
                C13131 +
            (C18610 * C2372 - C18612 * C2368 + C18611 * C10607 -
             C18613 * C10606) *
                C13127) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                   C13130 +
               (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                   C13126 +
               (C18615 - C18616 + C18617 - C18618) * C13131 +
               (C18619 - C18620 + C18621 - C18622) * C13127) *
                  C30746 * C30578 * C30560 * C108 +
              ((C18616 - C18615 + C18618 - C18617) * C13130 +
               (C18620 - C18619 + C18622 - C18621) * C13126 +
               (C18623 - C18624 + C18625 - C18626) * C13131 +
               (C18627 - C18628 + C18629 - C18630) * C13127) *
                  C30746 * C30578 * C30560 * C109 +
              ((C18624 - C18623 + C18626 - C18625) * C13130 +
               (C18628 - C18627 + C18630 - C18629) * C13126 +
               (C18631 - C18632 + C18633 - C18634) * C13131 +
               (C18635 - C18636 + C18637 - C18638) * C13127) *
                  C30746 * C30578 * C30560 * C110 +
              ((C18632 - C18631 + C18634 - C18633) * C13130 +
               (C18636 - C18635 + C18638 - C18637) * C13126 +
               (C18639 - C18640 + C18641 - C18642) * C13131 +
               (C18643 - C18644 + C18645 - C18646) * C13127) *
                  C30746 * C30578 * C30560 * C111 +
              ((C18640 - C18639 + C18642 - C18641) * C13130 +
               (C18644 - C18643 + C18646 - C18645) * C13126 +
               (C18610 * C134 - C18612 * C122 + C18611 * C751 - C18613 * C750) *
                   C13131 +
               (C18610 * C143 - C18612 * C135 + C18611 * C753 - C18613 * C752) *
                   C13127) *
                  C30746 * C30578 * C30560 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18610 * C124 - C18612 * C117 + C18611 * C478 -
                 C18613 * C468) *
                    C13130 +
                (C18610 * C138 - C18612 * C125 + C18611 * C498 -
                 C18613 * C479) *
                    C13126 +
                (C18615 - C18616 + C18617 - C18618) * C13131 +
                (C18619 - C18620 + C18621 - C18622) * C13127) *
                   C30746 * C30578 * C30881 +
               ((C18612 * C287 - C18610 * C297 + C18613 * C906 -
                 C18611 * C911) *
                    C13130 +
                (C18612 * C298 - C18610 * C317 + C18613 * C912 -
                 C18611 * C921) *
                    C13126 +
                (C18793 - C18794 + C18795 - C18796) * C13131 +
                (C18797 - C18798 + C18799 - C18800) * C13127) *
                   C30746 * C30578 * C30869 +
               ((C18610 * C303 - C18612 * C290 + C18611 * C1273 -
                 C18613 * C1261) *
                    C13130 +
                (C18610 * C320 - C18612 * C304 + C18611 * C1288 -
                 C18613 * C1274) *
                    C13126 +
                (C18801 - C18802 + C18803 - C18804) * C13131 +
                (C18805 - C18806 + C18807 - C18808) * C13127) *
                   C30746 * C30578 * C30844) *
                  C284 +
              (((C18616 - C18615 + C18618 - C18617) * C13130 +
                (C18620 - C18619 + C18622 - C18621) * C13126 +
                (C18623 - C18624 + C18625 - C18626) * C13131 +
                (C18627 - C18628 + C18629 - C18630) * C13127) *
                   C30746 * C30578 * C30881 +
               ((C18794 - C18793 + C18796 - C18795) * C13130 +
                (C18798 - C18797 + C18800 - C18799) * C13126 +
                (C18809 - C18810 + C18811 - C18812) * C13131 +
                (C18813 - C18814 + C18815 - C18816) * C13127) *
                   C30746 * C30578 * C30869 +
               ((C18802 - C18801 + C18804 - C18803) * C13130 +
                (C18806 - C18805 + C18808 - C18807) * C13126 +
                (C18817 - C18818 + C18819 - C18820) * C13131 +
                (C18821 - C18822 + C18823 - C18824) * C13127) *
                   C30746 * C30578 * C30844) *
                  C285 +
              (((C18624 - C18623 + C18626 - C18625) * C13130 +
                (C18628 - C18627 + C18630 - C18629) * C13126 +
                (C18631 - C18632 + C18633 - C18634) * C13131 +
                (C18635 - C18636 + C18637 - C18638) * C13127) *
                   C30746 * C30578 * C30881 +
               ((C18810 - C18809 + C18812 - C18811) * C13130 +
                (C18814 - C18813 + C18816 - C18815) * C13126 +
                (C18612 * C293 - C18610 * C309 + C18613 * C909 -
                 C18611 * C917) *
                    C13131 +
                (C18612 * C310 - C18610 * C323 + C18613 * C918 -
                 C18611 * C924) *
                    C13127) *
                   C30746 * C30578 * C30869 +
               ((C18818 - C18817 + C18820 - C18819) * C13130 +
                (C18822 - C18821 + C18824 - C18823) * C13126 +
                (C18610 * C311 - C18612 * C294 + C18611 * C1557 -
                 C18613 * C1556) *
                    C13131 +
                (C18610 * C324 - C18612 * C312 + C18611 * C1559 -
                 C18613 * C1558) *
                    C13127) *
                   C30746 * C30578 * C30844) *
                  C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30882 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30871 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30882 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30871 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C30847) *
              C30560 * C285 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30882 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C18612 * C474 - C18610 * C490 + C18613 * C475 - C18611 * C492) *
                C13131 +
            (C18612 * C491 - C18610 * C504 + C18613 * C493 - C18611 * C505) *
                C13127) *
               C30746 * C30871 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C492 - C18612 * C475 + C18611 * C2253 - C18613 * C2252) *
                C13131 +
            (C18610 * C505 - C18612 * C493 + C18611 * C2255 - C18613 * C2254) *
                C13127) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C1118 +
          ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
               C13130 +
           (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
               C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30746 * C30578 * C1119 +
          ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
               C13130 +
           (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
               C13126 +
           (C18801 - C18802 + C18803 - C18804) * C13131 +
           (C18805 - C18806 + C18807 - C18808) * C13127) *
              C30746 * C30578 * C1120 +
          ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 - C18611 * C1669) *
               C13130 +
           (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 - C18611 * C1675) *
               C13126 +
           (C18612 * C1125 - C18610 * C1132 + C18613 * C1667 - C18611 * C1671) *
               C13131 +
           (C18612 * C1133 - C18610 * C1143 + C18613 * C1672 - C18611 * C1676) *
               C13127) *
              C30746 * C30578 * C1121 +
          ((C18610 * C1136 - C18612 * C1127 + C18611 * C5608 - C18613 * C5604) *
               C13130 +
           (C18610 * C1145 - C18612 * C1137 + C18611 * C5613 - C18613 * C5609) *
               C13126 +
           (C18610 * C1138 - C18612 * C1128 + C18611 * C5899 - C18613 * C5898) *
               C13131 +
           (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 - C18613 * C5900) *
               C13127) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30882 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30871 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C1050 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30882 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30871 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C18612 * C1259 - C18610 * C1269 + C18613 * C2363 -
             C18611 * C2367) *
                C13131 +
            (C18612 * C1270 - C18610 * C1286 + C18613 * C2368 -
             C18611 * C2372) *
                C13127) *
               C30746 * C30847) *
              C1051 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30882 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C18612 * C1262 - C18610 * C1275 + C18613 * C1265 -
             C18611 * C1281) *
                C13131 +
            (C18612 * C1276 - C18610 * C1289 + C18613 * C1282 -
             C18611 * C1292) *
                C13127) *
               C30746 * C30871 +
           ((C18610 * C1279 - C18612 * C1264 + C18611 * C6307 -
             C18613 * C6304) *
                C13130 +
            (C18610 * C1291 - C18612 * C1280 + C18611 * C6313 -
             C18613 * C6308) *
                C13126 +
            (C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
             C18613 * C6568) *
                C13131 +
            (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
             C18613 * C6570) *
                C13127) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C1788 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C1789 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C1788 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C1789 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C30847) *
              C30560 * C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C1788 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C1789 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C492 - C18612 * C475 + C18611 * C2253 - C18613 * C2252) *
                C13131 +
            (C18610 * C505 - C18612 * C493 + C18611 * C2255 - C18613 * C2254) *
                C13127) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C1788 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C1789 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30881 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C1788 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C1789 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C18612 * C1259 - C18610 * C1269 + C18613 * C2363 -
             C18611 * C2367) *
                C13131 +
            (C18612 * C1270 - C18610 * C1286 + C18613 * C2368 -
             C18611 * C2372) *
                C13127) *
               C30746 * C30847) *
              C30869 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C1788 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C1789 +
           ((C18610 * C1279 - C18612 * C1264 + C18611 * C6307 -
             C18613 * C6304) *
                C13130 +
            (C18610 * C1291 - C18612 * C1280 + C18611 * C6313 -
             C18613 * C6308) *
                C13126 +
            (C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
             C18613 * C6568) *
                C13131 +
            (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
             C18613 * C6570) *
                C13127) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C1963 +
          ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
               C13130 +
           (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
               C13126 +
           (C18971 - C18972 + C18973 - C18974) * C13131 +
           (C18975 - C18976 + C18977 - C18978) * C13127) *
              C30746 * C1964 +
          ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
               C13130 +
           (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
               C13126 +
           (C18979 - C18980 + C18981 - C18982) * C13131 +
           (C18983 - C18984 + C18985 - C18986) * C13127) *
              C30746 * C1965 +
          ((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 - C18611 * C1980) *
               C13130 +
           (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 - C18611 * C1989) *
               C13126 +
           (C18612 * C1969 - C18610 * C1976 + C18613 * C1972 - C18611 * C1982) *
               C13131 +
           (C18612 * C1977 - C18610 * C1987 + C18613 * C1983 - C18611 * C1990) *
               C13127) *
              C30746 * C1966 +
          ((C18610 * C1980 - C18612 * C1971 + C18611 * C10452 -
            C18613 * C10450) *
               C13130 +
           (C18610 * C1989 - C18612 * C1981 + C18611 * C10456 -
            C18613 * C10453) *
               C13126 +
           (C18610 * C1982 - C18612 * C1972 + C18611 * C10707 -
            C18613 * C10706) *
               C13131 +
           (C18610 * C1990 - C18612 * C1983 + C18611 * C10709 -
            C18613 * C10708) *
               C13127) *
              C30746 * C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C1050 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C1051 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C30814 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C30814 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30814 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30814 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30665) *
              C30560 * C637 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30814 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C30665) *
              C30560 * C638 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30814 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C494 - C18612 * C476 + C18611 * C496 - C18613 * C477) *
                C13131 +
            (C18610 * C506 - C18612 * C495 + C18611 * C507 - C18613 * C497) *
                C13127) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C2248 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C2249 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C2250 +
           ((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
             C18611 * C1980) *
                C13130 +
            (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
             C18611 * C1989) *
                C13126 +
            (C21039 - C21040 + C21041 - C21042) * C13131 +
            (C21043 - C21044 + C21045 - C21046) * C13127) *
               C30746 * C30860) *
              C30560 * C30799 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C2248 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C2249 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C2250 +
           ((C21040 - C21039 + C21042 - C21041) * C13130 +
            (C21044 - C21043 + C21046 - C21045) * C13126 +
            (C18610 * C1978 - C18612 * C1970 + C18611 * C1984 -
             C18613 * C1973) *
                C13131 +
            (C18610 * C1988 - C18612 * C1979 + C18611 * C1991 -
             C18613 * C1985) *
                C13127) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18612 * C293 - C18610 * C309 + C18613 * C909 - C18611 * C917) *
                C13131 +
            (C18612 * C310 - C18610 * C323 + C18613 * C918 - C18611 * C924) *
                C13127) *
               C30746 * C30578 * C30869 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C30560 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18623 - C18624 + C18625 - C18626) * C13131 +
           (C18627 - C18628 + C18629 - C18630) * C13127) *
              C30746 * C30578 * C30560 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18631 - C18632 + C18633 - C18634) * C13131 +
           (C18635 - C18636 + C18637 - C18638) * C13127) *
              C30746 * C30578 * C30560 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C18639 - C18640 + C18641 - C18642) * C13131 +
           (C18643 - C18644 + C18645 - C18646) * C13127) *
              C30746 * C30578 * C30560 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C134 - C18612 * C122 + C18611 * C751 - C18613 * C750) *
               C13131 +
           (C18610 * C143 - C18612 * C135 + C18611 * C753 - C18613 * C752) *
               C13127) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C1118 +
          ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
               C13130 +
           (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
               C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30746 * C30578 * C1119 +
          ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
               C13130 +
           (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
               C13126 +
           (C18801 - C18802 + C18803 - C18804) * C13131 +
           (C18805 - C18806 + C18807 - C18808) * C13127) *
              C30746 * C30578 * C1120 +
          ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 - C18611 * C1669) *
               C13130 +
           (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 - C18611 * C1675) *
               C13126 +
           (C18612 * C1125 - C18610 * C1132 + C18613 * C1667 - C18611 * C1671) *
               C13131 +
           (C18612 * C1133 - C18610 * C1143 + C18613 * C1672 - C18611 * C1676) *
               C13127) *
              C30746 * C30578 * C1121 +
          ((C18610 * C1136 - C18612 * C1127 + C18611 * C5608 - C18613 * C5604) *
               C13130 +
           (C18610 * C1145 - C18612 * C1137 + C18611 * C5613 - C18613 * C5609) *
               C13126 +
           (C18610 * C1138 - C18612 * C1128 + C18611 * C5899 - C18613 * C5898) *
               C13131 +
           (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 - C18613 * C5900) *
               C13127) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C1788 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C1789 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C1788 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C1789 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C30847) *
              C30560 * C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C1788 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C1789 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C492 - C18612 * C475 + C18611 * C2253 - C18613 * C2252) *
                C13131 +
            (C18610 * C505 - C18612 * C493 + C18611 * C2255 - C18613 * C2254) *
                C13127) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C1788 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C1789 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30881 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C1788 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C1789 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C18612 * C1259 - C18610 * C1269 + C18613 * C2363 -
             C18611 * C2367) *
                C13131 +
            (C18612 * C1270 - C18610 * C1286 + C18613 * C2368 -
             C18611 * C2372) *
                C13127) *
               C30746 * C30847) *
              C30869 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C1788 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C1789 +
           ((C18610 * C1279 - C18612 * C1264 + C18611 * C6307 -
             C18613 * C6304) *
                C13130 +
            (C18610 * C1291 - C18612 * C1280 + C18611 * C6313 -
             C18613 * C6308) *
                C13126 +
            (C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
             C18613 * C6568) *
                C13131 +
            (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
             C18613 * C6570) *
                C13127) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C3234 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C3234 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30661 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30668 +
            ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                 C13130 +
             (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                 C13126 +
             (C18979 - C18980 + C18981 - C18982) * C13131 +
             (C18983 - C18984 + C18985 - C18986) * C13127) *
                C30746 * C3742) *
               C30813 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30661 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30668 +
            ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
              C18611 * C2365) *
                 C13130 +
             (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
              C18611 * C2371) *
                 C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30746 * C3742) *
               C30623) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30661 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30668 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C18995 - C18996 + C18997 - C18998) * C13131 +
             (C18999 - C19000 + C19001 - C19002) * C13127) *
                C30746 * C3742) *
               C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30661 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30668 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1271 - C18612 * C1260 + C18611 * C2369 -
              C18613 * C2364) *
                 C13131 +
             (C18610 * C1287 - C18612 * C1272 + C18611 * C2373 -
              C18613 * C2370) *
                 C13127) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30881 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30869 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C3234 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30881 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30869 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C3234 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C3234 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C3234 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30665) *
              C30560 * C30880 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C3234 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C30665) *
              C30560 * C30867 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C3234 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C494 - C18612 * C476 + C18611 * C496 - C18613 * C477) *
                C13131 +
            (C18610 * C506 - C18612 * C495 + C18611 * C507 - C18613 * C497) *
                C13127) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30889 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30886 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30877 +
           ((C18612 * C1968 - C18610 * C1974 + C18613 * C1971 -
             C18611 * C1980) *
                C13130 +
            (C18612 * C1975 - C18610 * C1986 + C18613 * C1981 -
             C18611 * C1989) *
                C13126 +
            (C21039 - C21040 + C21041 - C21042) * C13131 +
            (C21043 - C21044 + C21045 - C21046) * C13127) *
               C30746 * C30860) *
              C30560 * C2580 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30889 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30886 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C30877 +
           ((C21040 - C21039 + C21042 - C21041) * C13130 +
            (C21044 - C21043 + C21046 - C21045) * C13126 +
            (C18610 * C1978 - C18612 * C1970 + C18611 * C1984 -
             C18613 * C1973) *
                C13131 +
            (C18610 * C1988 - C18612 * C1979 + C18611 * C1991 -
             C18613 * C1985) *
                C13127) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30661 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30668 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C3742) *
              C30560 * C30537 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30661 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30668 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C3742) *
              C30560 * C30546 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30661 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C30668 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C492 - C18612 * C475 + C18611 * C2253 - C18613 * C2252) *
                C13131 +
            (C18610 * C505 - C18612 * C493 + C18611 * C2255 - C18613 * C2254) *
                C13127) *
               C30746 * C3742) *
              C30560 * C2843)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C3234 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C3234 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30665) *
              C30560 * C30880 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C3234 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C30665) *
              C30560 * C30867 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C3234 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C494 - C18612 * C476 + C18611 * C496 - C18613 * C477) *
                C13131 +
            (C18610 * C506 - C18612 * C495 + C18611 * C507 - C18613 * C497) *
                C13127) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C3234 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30881 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C3234 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30869 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C3234 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C3234 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30881 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C3234 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30869 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C3234 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30623) *
              C637 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30813 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C30623) *
              C638 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30578 * C30813 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C313 - C18612 * C295 + C18611 * C919 - C18613 * C910) *
                C13131 +
            (C18610 * C325 - C18612 * C314 + C18611 * C925 - C18613 * C920) *
                C13127) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1392 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1393 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C1394 +
           ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1392 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1393 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C1394 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1134 - C18612 * C1126 + C18611 * C1673 -
             C18613 * C1668) *
                C13131 +
            (C18610 * C1144 - C18612 * C1135 + C18611 * C1677 -
             C18613 * C1674) *
                C13127) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C30623) *
              C285 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18631 - C18632 + C18633 - C18634) * C13131 +
             (C18635 - C18636 + C18637 - C18638) * C13127) *
                C30746 * C30814 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19271 - C19272 + C19273 - C19274) * C13131 +
             (C19275 - C19276 + C19277 - C19278) * C13127) *
                C30746 * C30665) *
               C30813 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C19133 - C19134 + C19135 - C19136) * C13131 +
             (C19137 - C19138 + C19139 - C19140) * C13127) *
                C30746 * C30814 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C917 - C18612 * C909 + C18611 * C2139 - C18613 * C2138) *
                 C13131 +
             (C18610 * C924 - C18612 * C918 + C18611 * C2141 - C18613 * C2140) *
                 C13127) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30814 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C1392 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30814 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30665) *
              C1393 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30814 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C20195 - C20196 + C20197 - C20198) * C13131 +
            (C20199 - C20200 + C20201 - C20202) * C13127) *
               C30746 * C30665) *
              C1394 +
          (((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 -
             C18611 * C1669) *
                C13130 +
            (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 -
             C18611 * C1675) *
                C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30746 * C30814 +
           ((C18610 * C1669 - C18612 * C1666 + C18611 * C5606 -
             C18613 * C5603) *
                C13130 +
            (C18610 * C1675 - C18612 * C1670 + C18611 * C5612 -
             C18613 * C5607) *
                C13126 +
            (C18610 * C1671 - C18612 * C1667 + C18611 * C6463 -
             C18613 * C6462) *
                C13131 +
            (C18610 * C1676 - C18612 * C1672 + C18611 * C6465 -
             C18613 * C6464) *
                C13127) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18612 * C293 - C18610 * C309 + C18613 * C909 - C18611 * C917) *
                C13131 +
            (C18612 * C310 - C18610 * C323 + C18613 * C918 - C18611 * C924) *
                C13127) *
               C30746 * C30578 * C30869 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C30560 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18623 - C18624 + C18625 - C18626) * C13131 +
           (C18627 - C18628 + C18629 - C18630) * C13127) *
              C30746 * C30578 * C30560 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18631 - C18632 + C18633 - C18634) * C13131 +
           (C18635 - C18636 + C18637 - C18638) * C13127) *
              C30746 * C30578 * C30560 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C18639 - C18640 + C18641 - C18642) * C13131 +
           (C18643 - C18644 + C18645 - C18646) * C13127) *
              C30746 * C30578 * C30560 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C134 - C18612 * C122 + C18611 * C751 - C18613 * C750) *
               C13131 +
           (C18610 * C143 - C18612 * C135 + C18611 * C753 - C18613 * C752) *
               C13127) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30882 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30871 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30882 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30871 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C18995 - C18996 + C18997 - C18998) * C13131 +
            (C18999 - C19000 + C19001 - C19002) * C13127) *
               C30746 * C30847) *
              C30560 * C285 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30882 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C18612 * C474 - C18610 * C490 + C18613 * C475 - C18611 * C492) *
                C13131 +
            (C18612 * C491 - C18610 * C504 + C18613 * C493 - C18611 * C505) *
                C13127) *
               C30746 * C30871 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C492 - C18612 * C475 + C18611 * C2253 - C18613 * C2252) *
                C13131 +
            (C18610 * C505 - C18612 * C493 + C18611 * C2255 - C18613 * C2254) *
                C13127) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C1118 +
          ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
               C13130 +
           (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
               C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30746 * C30578 * C1119 +
          ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
               C13130 +
           (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
               C13126 +
           (C18801 - C18802 + C18803 - C18804) * C13131 +
           (C18805 - C18806 + C18807 - C18808) * C13127) *
              C30746 * C30578 * C1120 +
          ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 - C18611 * C1669) *
               C13130 +
           (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 - C18611 * C1675) *
               C13126 +
           (C18612 * C1125 - C18610 * C1132 + C18613 * C1667 - C18611 * C1671) *
               C13131 +
           (C18612 * C1133 - C18610 * C1143 + C18613 * C1672 - C18611 * C1676) *
               C13127) *
              C30746 * C30578 * C1121 +
          ((C18610 * C1136 - C18612 * C1127 + C18611 * C5608 - C18613 * C5604) *
               C13130 +
           (C18610 * C1145 - C18612 * C1137 + C18611 * C5613 - C18613 * C5609) *
               C13126 +
           (C18610 * C1138 - C18612 * C1128 + C18611 * C5899 - C18613 * C5898) *
               C13131 +
           (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 - C18613 * C5900) *
               C13127) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30882 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30871 +
           ((C18610 * C484 - C18612 * C471 + C18611 * C1974 - C18613 * C1968) *
                C13130 +
            (C18610 * C501 - C18612 * C485 + C18611 * C1986 - C18613 * C1975) *
                C13126 +
            (C18979 - C18980 + C18981 - C18982) * C13131 +
            (C18983 - C18984 + C18985 - C18986) * C13127) *
               C30746 * C30847) *
              C1050 +
          (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30882 +
           ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                C13130 +
            (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30746 * C30871 +
           ((C18612 * C1258 - C18610 * C1267 + C18613 * C2362 -
             C18611 * C2365) *
                C13130 +
            (C18612 * C1268 - C18610 * C1285 + C18613 * C2366 -
             C18611 * C2371) *
                C13126 +
            (C18612 * C1259 - C18610 * C1269 + C18613 * C2363 -
             C18611 * C2367) *
                C13131 +
            (C18612 * C1270 - C18610 * C1286 + C18613 * C2368 -
             C18611 * C2372) *
                C13127) *
               C30746 * C30847) *
              C1051 +
          (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30882 +
           ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
             C18611 * C1279) *
                C13130 +
            (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
             C18611 * C1291) *
                C13126 +
            (C18612 * C1262 - C18610 * C1275 + C18613 * C1265 -
             C18611 * C1281) *
                C13131 +
            (C18612 * C1276 - C18610 * C1289 + C18613 * C1282 -
             C18611 * C1292) *
                C13127) *
               C30746 * C30871 +
           ((C18610 * C1279 - C18612 * C1264 + C18611 * C6307 -
             C18613 * C6304) *
                C13130 +
            (C18610 * C1291 - C18612 * C1280 + C18611 * C6313 -
             C18613 * C6308) *
                C13126 +
            (C18610 * C1281 - C18612 * C1265 + C18611 * C6569 -
             C18613 * C6568) *
                C13131 +
            (C18610 * C1292 - C18612 * C1282 + C18611 * C6571 -
             C18613 * C6570) *
                C13127) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30814 +
           ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                C13130 +
            (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                C13126 +
            (C18971 - C18972 + C18973 - C18974) * C13131 +
            (C18975 - C18976 + C18977 - C18978) * C13127) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30814 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C18987 - C18988 + C18989 - C18990) * C13131 +
            (C18991 - C18992 + C18993 - C18994) * C13127) *
               C30746 * C30665) *
              C30560 * C637 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30814 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19271 - C19272 + C19273 - C19274) * C13131 +
            (C19275 - C19276 + C19277 - C19278) * C13127) *
               C30746 * C30665) *
              C30560 * C638 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C18639 - C18640 + C18641 - C18642) * C13131 +
            (C18643 - C18644 + C18645 - C18646) * C13127) *
               C30746 * C30814 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C494 - C18612 * C476 + C18611 * C496 - C18613 * C477) *
                C13131 +
            (C18610 * C506 - C18612 * C495 + C18611 * C507 - C18613 * C497) *
                C13127) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                 C13130 +
             (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                 C13126 +
             (C18615 - C18616 + C18617 - C18618) * C13131 +
             (C18619 - C18620 + C18621 - C18622) * C13127) *
                C30746 * C30814 +
            ((C18612 * C468 - C18610 * C478 + C18613 * C471 - C18611 * C484) *
                 C13130 +
             (C18612 * C479 - C18610 * C498 + C18613 * C485 - C18611 * C501) *
                 C13126 +
             (C18971 - C18972 + C18973 - C18974) * C13131 +
             (C18975 - C18976 + C18977 - C18978) * C13127) *
                C30746 * C30665) *
               C1050 +
           (((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                 C13130 +
             (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                 C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30746 * C30814 +
            ((C18610 * C911 - C18612 * C906 + C18611 * C1267 - C18613 * C1258) *
                 C13130 +
             (C18610 * C921 - C18612 * C912 + C18611 * C1285 - C18613 * C1268) *
                 C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30746 * C30665) *
               C1051 +
           (((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                 C13130 +
             (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                 C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30746 * C30814 +
            ((C18612 * C1261 - C18610 * C1273 + C18613 * C1264 -
              C18611 * C1279) *
                 C13130 +
             (C18612 * C1274 - C18610 * C1288 + C18613 * C1280 -
              C18611 * C1291) *
                 C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18623 - C18624 + C18625 - C18626) * C13131 +
             (C18627 - C18628 + C18629 - C18630) * C13127) *
                C30746 * C30814 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C18987 - C18988 + C18989 - C18990) * C13131 +
             (C18991 - C18992 + C18993 - C18994) * C13127) *
                C30746 * C30665) *
               C1050 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30746 * C30814 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30746 * C30665) *
               C1051 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30746 * C30814 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1277 - C18612 * C1263 + C18611 * C1283 -
              C18613 * C1266) *
                 C13131 +
             (C18610 * C1290 - C18612 * C1278 + C18611 * C1293 -
              C18613 * C1284) *
                 C13127) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C30560 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18623 - C18624 + C18625 - C18626) * C13131 +
           (C18627 - C18628 + C18629 - C18630) * C13127) *
              C30746 * C30578 * C30560 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18631 - C18632 + C18633 - C18634) * C13131 +
           (C18635 - C18636 + C18637 - C18638) * C13127) *
              C30746 * C30578 * C30560 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C18639 - C18640 + C18641 - C18642) * C13131 +
           (C18643 - C18644 + C18645 - C18646) * C13127) *
              C30746 * C30578 * C30560 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C134 - C18612 * C122 + C18611 * C751 - C18613 * C750) *
               C13131 +
           (C18610 * C143 - C18612 * C135 + C18611 * C753 - C18613 * C752) *
               C13127) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C30869 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C285 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C30881 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18612 * C293 - C18610 * C309 + C18613 * C909 - C18611 * C917) *
                C13131 +
            (C18612 * C310 - C18610 * C323 + C18613 * C918 - C18611 * C924) *
                C13127) *
               C30746 * C30578 * C30869 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
                C13130 +
            (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
                C13126 +
            (C18615 - C18616 + C18617 - C18618) * C13131 +
            (C18619 - C18620 + C18621 - C18622) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
                C13130 +
            (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
                C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
                C13130 +
            (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
                C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18623 - C18624 + C18625 - C18626) * C13131 +
            (C18627 - C18628 + C18629 - C18630) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30746 * C30578 * C30844) *
              C30865 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18631 - C18632 + C18633 - C18634) * C13131 +
            (C18635 - C18636 + C18637 - C18638) * C13127) *
               C30746 * C30578 * C1050 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30746 * C30578 * C1051 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C311 - C18612 * C294 + C18611 * C1557 - C18613 * C1556) *
                C13131 +
            (C18610 * C324 - C18612 * C312 + C18611 * C1559 - C18613 * C1558) *
                C13127) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C124 - C18612 * C117 + C18611 * C478 - C18613 * C468) *
               C13130 +
           (C18610 * C138 - C18612 * C125 + C18611 * C498 - C18613 * C479) *
               C13126 +
           (C18615 - C18616 + C18617 - C18618) * C13131 +
           (C18619 - C18620 + C18621 - C18622) * C13127) *
              C30746 * C30578 * C1118 +
          ((C18612 * C287 - C18610 * C297 + C18613 * C906 - C18611 * C911) *
               C13130 +
           (C18612 * C298 - C18610 * C317 + C18613 * C912 - C18611 * C921) *
               C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30746 * C30578 * C1119 +
          ((C18610 * C303 - C18612 * C290 + C18611 * C1273 - C18613 * C1261) *
               C13130 +
           (C18610 * C320 - C18612 * C304 + C18611 * C1288 - C18613 * C1274) *
               C13126 +
           (C18801 - C18802 + C18803 - C18804) * C13131 +
           (C18805 - C18806 + C18807 - C18808) * C13127) *
              C30746 * C30578 * C1120 +
          ((C18612 * C1124 - C18610 * C1130 + C18613 * C1666 - C18611 * C1669) *
               C13130 +
           (C18612 * C1131 - C18610 * C1142 + C18613 * C1670 - C18611 * C1675) *
               C13126 +
           (C18612 * C1125 - C18610 * C1132 + C18613 * C1667 - C18611 * C1671) *
               C13131 +
           (C18612 * C1133 - C18610 * C1143 + C18613 * C1672 - C18611 * C1676) *
               C13127) *
              C30746 * C30578 * C1121 +
          ((C18610 * C1136 - C18612 * C1127 + C18611 * C5608 - C18613 * C5604) *
               C13130 +
           (C18610 * C1145 - C18612 * C1137 + C18611 * C5613 - C18613 * C5609) *
               C13126 +
           (C18610 * C1138 - C18612 * C1128 + C18611 * C5899 - C18613 * C5898) *
               C13131 +
           (C18610 * C1146 - C18612 * C1139 + C18611 * C5901 - C18613 * C5900) *
               C13127) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30619 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30626 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C2840) *
              C30537 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30619 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30626 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C2840) *
              C30546 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30619 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30626 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C2840) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30619 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30626 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C2840) *
              C30537 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30619 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30626 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C2840) *
              C30546 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30619 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30626 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C2840) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30626 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C30814 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C2840) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30626 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C30814 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30619 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30626 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C2840) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30619 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30626 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30888 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30884 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30874 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30888 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30884 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30874 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C2472 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C2472 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C2472 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C2472 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30882 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30871 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C30847) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30882 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30871 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C30847) *
               C30623) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30882 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30871 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C30847) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30882 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30871 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C2472 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30623) *
              C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C2472 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30623) *
              C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C2472 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C2472 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30888 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30884 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C30874 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30888 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30884 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C30874 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30882 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30871 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C30847) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30882 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30871 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C30847) *
               C30623) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30882 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30871 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C30847) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30882 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30871 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C30814 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C2472 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C30814 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30537 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30546 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C2472 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C2472 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C2472 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C2472 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30888 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30884 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30874 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C2580 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30888 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30884 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30874 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C2472 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30623) *
              C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C2472 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30623) *
              C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C2472 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C2472 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30888 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C30884 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C30874 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30888 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C30884 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C30874 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30626 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C3234 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C2840) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30619 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30626 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C3234 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30619 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30626 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C2840) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30619 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30626 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C2840) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30661 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30668 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C3742) *
              C30619 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30661 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30668 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C3742) *
              C30626 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30661 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30668 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C3742) *
              C2840) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30661 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30668 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C3742) *
              C30619 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30661 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30668 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C3742) *
              C30626 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30661 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30668 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C3742) *
              C2840) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30888 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C3234 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C30884 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C3234 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C30874 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C3234 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C3234 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C2472 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C3234 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30889 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30886 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30877 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C2472 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30889 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30886 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C30877 +
           ((C30757 * C2365 - C113 * C2362) * C114 +
            (C30757 * C2371 - C113 * C2366) * C102 +
            (C30757 * C2367 - C113 * C2363) * C115 +
            (C30757 * C2372 - C113 * C2368) * C103 +
            (C30757 * C2369 - C113 * C2364) * C116 +
            (C30757 * C2373 - C113 * C2370) * C104) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30878 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30865 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30888 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C3234 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C30884 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C3234 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C30874 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C3234 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30889 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30886 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30877 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C2472 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30889 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30886 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30877 +
           (((C6676 - C6675) * C4699 + (C6678 - C6677) * C30508) * C4696 +
            ((C6680 - C6679) * C4699 + (C6682 - C6681) * C30508) * C4697 +
            ((C30757 * C6671 - C113 * C6670) * C4699 +
             (C30757 * C6673 - C113 * C6672) * C30508) *
                C4698) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30661 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30668 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C3742) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30661 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30668 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C3742) *
               C30623) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30661 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30668 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C3742) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30661 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30668 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30661 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30668 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C3742) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30661 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30668 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C3742) *
               C30623) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30661 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30668 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C3742) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30661 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30668 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30878 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C2472 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30865 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C3234 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C2472 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C3234 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30888 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C3234 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C30884 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C3234 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C30874 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C3234 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C2472 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30878 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C2472 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30865 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C2472 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30888 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C3234 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C30884 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C3234 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C30874 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C3234 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1392 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1393 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C1394 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1392 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1393 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C1394 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30813 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30813 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30813 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C30813 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C1788 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C1789 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C30847) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C1788 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C1789 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C30847) *
               C30623) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C1788 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C1789 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C30847) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C1788 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C1789 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30813 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30623) *
              C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30813 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30623) *
              C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30813 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C30813 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1392 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C1393 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C1394 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1392 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C1393 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C1394 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C1788 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C1789 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C30847) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C1788 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C1789 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C30847) *
               C30623) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C1788 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C1789 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C30847) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C1788 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C1789 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C30847) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C1392 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30814 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C1393 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30814 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C1394 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30814 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C285 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C30814 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C30813 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C30814 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C2248 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C2249 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C2250 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30813 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C2248 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C2249 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
            (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
            (C2149 - C2150) * C104) *
               C30746 * C2250 +
           ((C30757 * C2365 - C113 * C2362) * C114 +
            (C30757 * C2371 - C113 * C2366) * C102 +
            (C30757 * C2367 - C113 * C2363) * C115 +
            (C30757 * C2372 - C113 * C2368) * C103 +
            (C30757 * C2369 - C113 * C2364) * C116 +
            (C30757 * C2373 - C113 * C2370) * C104) *
               C30746 * C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             ((C5292 - C5293) * C4699 + (C5294 - C5295) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C30757 * C1669 - C113 * C1666) * C4699 +
              (C30757 * C1675 - C113 * C1670) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C284 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C113 * C1667 - C30757 * C1671) * C4699 +
              (C113 * C1672 - C30757 * C1676) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C285 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C1392 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30814 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C1393 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30814 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C1394 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30814 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C2248 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C2249 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C2250 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C30813 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C2248 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C2249 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C2250 +
           (((C6676 - C6675) * C4699 + (C6678 - C6677) * C30508) * C4696 +
            ((C6680 - C6679) * C4699 + (C6682 - C6681) * C30508) * C4697 +
            ((C30757 * C6671 - C113 * C6670) * C4699 +
             (C30757 * C6673 - C113 * C6672) * C30508) *
                C4698) *
               C30860) *
              C30623) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C30757 * C124 - C113 * C117) * C114 +
               (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
               (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                  C30746 * C30578 * C30560 * C108 +
              ((C147 - C146) * C114 + (C149 - C148) * C102 +
               (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
               C169 * C104) *
                  C30746 * C30578 * C30560 * C109 +
              (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
               (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                  C30746 * C30578 * C30560 * C110 +
              (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
               (C161 - C160) * C103 + (C162 - C163) * C116 +
               (C164 - C165) * C104) *
                  C30746 * C30578 * C30560 * C111 +
              (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
               (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
               (C30757 * C144 - C113 * C137) * C104) *
                  C30746 * C30578 * C30560 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C30757 * C124 - C113 * C117) * C114 +
                (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
                (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                   C30746 * C30578 * C30881 +
               ((C113 * C287 - C30757 * C297) * C114 +
                (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
                (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                   C30746 * C30578 * C30869 +
               ((C30757 * C303 - C113 * C290) * C114 +
                (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
                (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                   C30746 * C30578 * C30844) *
                  C284 +
              (((C147 - C146) * C114 + (C149 - C148) * C102 +
                (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
                C169 * C104) *
                   C30746 * C30578 * C30881 +
               ((C329 - C328) * C114 + (C331 - C330) * C102 +
                (C333 - C332) * C115 + (C335 - C334) * C103 +
                (C344 - C345) * C116 + (C346 - C347) * C104) *
                   C30746 * C30578 * C30869 +
               ((C337 - C336) * C114 + (C339 - C338) * C102 +
                (C341 - C340) * C115 + (C343 - C342) * C103 +
                (C348 - C349) * C116 + (C350 - C351) * C104) *
                   C30746 * C30578 * C30844) *
                  C285 +
              ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
                (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                   C30746 * C30578 * C30881 +
               (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
                (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
                (C113 * C314 - C30757 * C325) * C104) *
                   C30746 * C30578 * C30869 +
               (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
                (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
                (C30757 * C326 - C113 * C316) * C104) *
                   C30746 * C30578 * C30844) *
                  C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30882 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + (C525 - C526) * C116 +
            (C527 - C528) * C104) *
               C30746 * C30871 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30882 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C113 * C476 - C30757 * C494) * C116 +
            (C113 * C495 - C30757 * C506) * C104) *
               C30746 * C30871 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C1050 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30882 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30871 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C1051 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30882 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 +
            (C113 * C1262 - C30757 * C1275) * C115 +
            (C113 * C1276 - C30757 * C1289) * C103 +
            (C113 * C1263 - C30757 * C1277) * C116 +
            (C113 * C1278 - C30757 * C1290) * C104) *
               C30746 * C30871 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C1788 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C1789 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C1788 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C1789 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30881 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C1788 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C1789 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C30869 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C1788 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C1789 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C1963 +
          ((C113 * C468 - C30757 * C478) * C114 +
           (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
           (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
              C30746 * C1964 +
          ((C30757 * C484 - C113 * C471) * C114 +
           (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
           (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
              C30746 * C1965 +
          ((C113 * C1968 - C30757 * C1974) * C114 +
           (C113 * C1975 - C30757 * C1986) * C102 +
           (C113 * C1969 - C30757 * C1976) * C115 +
           (C113 * C1977 - C30757 * C1987) * C103 +
           (C113 * C1970 - C30757 * C1978) * C116 +
           (C113 * C1979 - C30757 * C1988) * C104) *
              C30746 * C1966 +
          ((C30757 * C1980 - C113 * C1971) * C114 +
           (C30757 * C1989 - C113 * C1981) * C102 +
           (C30757 * C1982 - C113 * C1972) * C115 +
           (C30757 * C1990 - C113 * C1983) * C103 +
           (C30757 * C1984 - C113 * C1973) * C116 +
           (C30757 * C1991 - C113 * C1985) * C104) *
              C30746 * C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C30757 * C1267 - C113 * C1258) * C4699 +
             (C30757 * C1285 - C113 * C1268) * C30508) *
                C4697 +
            ((C30757 * C1279 - C113 * C1264) * C4699 +
             (C30757 * C1291 - C113 * C1280) * C30508) *
                C4698) *
               C30847) *
              C30560 * C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30882 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30871 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30882 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30871 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C1050 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30882 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
               C30871 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C1051 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30882 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C113 * C5604 - C30757 * C5608) * C4699 +
             (C113 * C5609 - C30757 * C5613) * C30508) *
                C4698) *
               C30871 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30560 * C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C1788 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C1789 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C1788 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C1789 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30881 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C1788 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C1789 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C30869 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C1788 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C1789 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C1963 +
          (((C113 * C468 - C30757 * C478) * C4699 +
            (C113 * C479 - C30757 * C498) * C30508) *
               C4696 +
           ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
           C5638 * C4698) *
              C1964 +
          (((C30757 * C484 - C113 * C471) * C4699 +
            (C30757 * C501 - C113 * C485) * C30508) *
               C4696 +
           ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
           C5641 * C4698) *
              C1965 +
          (((C113 * C1968 - C30757 * C1974) * C4699 +
            (C113 * C1975 - C30757 * C1986) * C30508) *
               C4696 +
           ((C113 * C2362 - C30757 * C2365) * C4699 +
            (C113 * C2366 - C30757 * C2371) * C30508) *
               C4697 +
           ((C113 * C6304 - C30757 * C6307) * C4699 +
            (C113 * C6308 - C30757 * C6313) * C30508) *
               C4698) *
              C1966 +
          (((C30757 * C1980 - C113 * C1971) * C4699 +
            (C30757 * C1989 - C113 * C1981) * C30508) *
               C4696 +
           ((C30757 * C6309 - C113 * C6305) * C4699 +
            (C30757 * C6314 - C113 * C6310) * C30508) *
               C4697 +
           ((C30757 * C6311 - C113 * C6306) * C4699 +
            (C30757 * C6315 - C113 * C6312) * C30508) *
               C4698) *
              C1967) *
         C30560 * C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C1051 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C30814 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C1051 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C30814 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30814 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30814 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30814 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C2248 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C2249 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C2250 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30560 * C30799 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C2248 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C2249 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C2250 +
           ((C2258 - C2257) * C114 + (C2260 - C2259) * C102 +
            (C2262 - C2261) * C115 + (C2264 - C2263) * C103 +
            (C30757 * C2253 - C113 * C2252) * C116 +
            (C30757 * C2255 - C113 * C2254) * C104) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30665) *
              C30560 * C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30814 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30665) *
              C30560 * C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30814 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30814 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C1050 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C113 * C5604 - C30757 * C5608) * C4699 +
              (C113 * C5609 - C30757 * C5613) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C1050 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C2248 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C2249 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C2250 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C113 * C2362 - C30757 * C2365) * C4699 +
             (C113 * C2366 - C30757 * C2371) * C30508) *
                C4697 +
            ((C113 * C6304 - C30757 * C6307) * C4699 +
             (C113 * C6308 - C30757 * C6313) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C2248 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C2249 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C2250 +
           (((C2258 - C2257) * C4699 + (C2260 - C2259) * C30508) * C4696 +
            ((C30757 * C2367 - C113 * C2363) * C4699 +
             (C30757 * C2372 - C113 * C2368) * C30508) *
                C4697 +
            ((C30757 * C6569 - C113 * C6568) * C4699 +
             (C30757 * C6571 - C113 * C6570) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30881 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30869 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30881 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + (C344 - C345) * C116 +
            (C346 - C347) * C104) *
               C30746 * C30578 * C30869 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30881 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
            (C113 * C314 - C30757 * C325) * C104) *
               C30746 * C30578 * C30869 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C30560 * C108 +
          ((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
           (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
              C30746 * C30578 * C30560 * C109 +
          (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
           (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
              C30746 * C30578 * C30560 * C110 +
          (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
           (C161 - C160) * C103 + (C162 - C163) * C116 + (C164 - C165) * C104) *
              C30746 * C30578 * C30560 * C111 +
          (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
           (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
           (C30757 * C144 - C113 * C137) * C104) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C1788 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C1789 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C1788 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C1789 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C1788 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C1789 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30881 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C1788 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C1789 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C30869 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C1788 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C1789 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30560 * C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C1788 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C1789 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C1788 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C1789 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C1788 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C1789 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C30881 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C1788 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C1789 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C30869 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C1788 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C1789 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C30537 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C30546 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C3234 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C30813 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C3234 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30623) *
              C30537 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30623) *
              C30546 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C3234 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C3234 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30661 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30668 +
            ((C30757 * C484 - C113 * C471) * C114 +
             (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
             (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
                C30746 * C3742) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30661 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30668 +
            ((C113 * C1258 - C30757 * C1267) * C114 +
             (C113 * C1268 - C30757 * C1285) * C102 + (C2143 - C2144) * C115 +
             (C2145 - C2146) * C103 + (C2147 - C2148) * C116 +
             (C2149 - C2150) * C104) *
                C30746 * C3742) *
               C30623) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30661 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30668 +
            ((C518 - C517) * C114 + (C520 - C519) * C102 +
             (C522 - C521) * C115 + (C524 - C523) * C103 +
             (C529 - C530) * C116 + (C531 - C532) * C104) *
                C30746 * C3742) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30661 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30668 +
            ((C2144 - C2143) * C114 + (C2146 - C2145) * C102 +
             (C2148 - C2147) * C115 + (C2150 - C2149) * C103 +
             (C30757 * C2139 - C113 * C2138) * C116 +
             (C30757 * C2141 - C113 * C2140) * C104) *
                C30746 * C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30661 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30668 +
            (((C30757 * C484 - C113 * C471) * C4699 +
              (C30757 * C501 - C113 * C485) * C30508) *
                 C4696 +
             ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
             C5641 * C4698) *
                C3742) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30661 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30668 +
            (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
             ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
             ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
                C3742) *
               C30623) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30661 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30668 +
            (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
             ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
             ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
                C3742) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30661 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30668 +
            (((C2144 - C2143) * C4699 + (C2146 - C2145) * C30508) * C4696 +
             ((C6468 - C6467) * C4699 + (C6470 - C6469) * C30508) * C4697 +
             ((C30757 * C6463 - C113 * C6462) * C4699 +
              (C30757 * C6465 - C113 * C6464) * C30508) *
                 C4698) *
                C3742) *
               C30623) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30869 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C3234 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30869 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C3234 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C3234 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C3234 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C3234 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30889 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30886 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30877 +
           ((C113 * C1968 - C30757 * C1974) * C114 +
            (C113 * C1975 - C30757 * C1986) * C102 + (C2257 - C2258) * C115 +
            (C2259 - C2260) * C103 + (C2261 - C2262) * C116 +
            (C2263 - C2264) * C104) *
               C30746 * C30860) *
              C30560 * C2580 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30889 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30886 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30877 +
           ((C2258 - C2257) * C114 + (C2260 - C2259) * C102 +
            (C2262 - C2261) * C115 + (C2264 - C2263) * C103 +
            (C30757 * C2253 - C113 * C2252) * C116 +
            (C30757 * C2255 - C113 * C2254) * C104) *
               C30746 * C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30560 * C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C3234 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30665) *
              C30560 * C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C3234 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C3234 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30881 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30869 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C30844) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30881 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30869 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30889 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30886 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30877 +
           (((C113 * C1968 - C30757 * C1974) * C4699 +
             (C113 * C1975 - C30757 * C1986) * C30508) *
                C4696 +
            ((C6675 - C6676) * C4699 + (C6677 - C6678) * C30508) * C4697 +
            ((C6679 - C6680) * C4699 + (C6681 - C6682) * C30508) * C4698) *
               C30860) *
              C30560 * C2580 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30889 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30886 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C30877 +
           (((C2258 - C2257) * C4699 + (C2260 - C2259) * C30508) * C4696 +
            ((C30757 * C2367 - C113 * C2363) * C4699 +
             (C30757 * C2372 - C113 * C2368) * C30508) *
                C4697 +
            ((C30757 * C6569 - C113 * C6568) * C4699 +
             (C30757 * C6571 - C113 * C6570) * C30508) *
                C4698) *
               C30860) *
              C30560 * C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30661 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30668 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C3742) *
              C30560 * C30537 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30661 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30668 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C3742) *
              C30560 * C30546 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30661 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30668 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C3742) *
              C30560 * C2843)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30661 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30668 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C3742) *
              C30560 * C30537 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30661 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30668 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C6467 - C6468) * C4699 + (C6469 - C6470) * C30508) * C4698) *
               C3742) *
              C30560 * C30546 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30661 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30668 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C3742) *
              C30560 * C2843)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C3234 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C30887 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C3234 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C30880 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C3234 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C30867 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C3234 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C3234 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C3234 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30869 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C3234 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C2580 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C3234 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30881 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C3234 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30869 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C3234 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C3234 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C30560 * C30887 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C3234 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            C5911 * C4698) *
               C30665) *
              C30560 * C30880 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C3234 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C30867 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C3234 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C3234 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C30881 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C3234 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             C6022 * C4698) *
                C30665) *
               C30869 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C3234 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
                C30665) *
               C30844) *
              C2580 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C3234 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C30881 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C3234 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C30869 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C3234 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30813 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30623) *
              C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30813 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C30623) *
              C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30813 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C30623) *
              C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30578 * C30813 +
           (C645 * C114 + C646 * C102 + (C648 - C647) * C115 +
            (C650 - C649) * C103 + (C30757 * C641 - C113 * C640) * C116 +
            (C30757 * C643 - C113 * C642) * C104) *
               C30746 * C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1392 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1393 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C1394 +
           ((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30578 * C30854) *
              C30799 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1392 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1393 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C1394 +
           ((C1404 - C1403) * C114 + (C1406 - C1405) * C102 +
            (C1408 - C1407) * C115 + (C1410 - C1409) * C103 +
            (C30757 * C1399 - C113 * C1398) * C116 +
            (C30757 * C1401 - C113 * C1400) * C104) *
               C30746 * C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30813 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30623) *
              C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30813 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30623) *
              C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30813 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30623) *
              C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30578 * C30813 +
           ((C645 * C4699 + C646 * C30508) * C4696 +
            ((C349 - C348) * C4699 + (C351 - C350) * C30508) * C4697 +
            ((C30757 * C1399 - C113 * C1398) * C4699 +
             (C30757 * C1401 - C113 * C1400) * C30508) *
                C4698) *
               C30578 * C30623) *
              C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1392 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30578 * C1393 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30578 * C1394 +
           (C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30578 * C30854) *
              C30799 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1392 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            C5752 * C4698) *
               C30578 * C1393 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
               C30578 * C1394 +
           (C5752 * C4696 +
            ((C5747 - C5746) * C4699 + (C5749 - C5748) * C30508) * C4697 +
            ((C30757 * C5740 - C113 * C5739) * C4699 +
             (C30757 * C5742 - C113 * C5741) * C30508) *
                C4698) *
               C30578 * C30854) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C30623) *
              C284 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C30813 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C30623) *
              C285 +
          (((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
             (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
                C30746 * C30814 +
            (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
             (C528 - C527) * C103 + (C757 - C758) * C116 +
             (C759 - C760) * C104) *
                C30746 * C30665) *
               C30813 +
           ((C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
             (C347 - C346) * C103 + (C647 - C648) * C116 +
             (C649 - C650) * C104) *
                C30746 * C30814 +
            (C939 * C114 + C940 * C102 + (C936 - C935) * C115 +
             (C938 - C937) * C103 + (C30757 * C919 - C113 * C910) * C116 +
             (C30757 * C925 - C113 * C920) * C104) *
                C30746 * C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C1392 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30814 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30665) *
              C1393 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30814 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
            (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
            (C1567 - C1568) * C104) *
               C30746 * C30665) *
              C1394 +
          (((C113 * C1124 - C30757 * C1130) * C114 +
            (C113 * C1131 - C30757 * C1142) * C102 + (C1403 - C1404) * C115 +
            (C1405 - C1406) * C103 + (C1407 - C1408) * C116 +
            (C1409 - C1410) * C104) *
               C30746 * C30814 +
           ((C30757 * C1669 - C113 * C1666) * C114 +
            (C30757 * C1675 - C113 * C1670) * C102 +
            (C30757 * C1671 - C113 * C1667) * C115 +
            (C30757 * C1676 - C113 * C1672) * C103 +
            (C30757 * C1673 - C113 * C1668) * C116 +
            (C30757 * C1677 - C113 * C1674) * C104) *
               C30746 * C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             ((C5292 - C5293) * C4699 + (C5294 - C5295) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C30757 * C1669 - C113 * C1666) * C4699 +
              (C30757 * C1675 - C113 * C1670) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C284 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
                C30665) *
               C30813 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C113 * C1667 - C30757 * C1671) * C4699 +
              (C113 * C1672 - C30757 * C1676) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C285 +
          ((((C166 * C4699 + C167 * C30508) * C4696 +
             ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
             C4831 * C4698) *
                C30814 +
            ((C533 * C4699 + C534 * C30508) * C4696 +
             ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
             ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
                C30665) *
               C30813 +
           (((C352 * C4699 + C353 * C30508) * C4696 +
             ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
             ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
                C30814 +
            ((C939 * C4699 + C940 * C30508) * C4696 +
             ((C1566 - C1565) * C4699 + (C1568 - C1567) * C30508) * C4697 +
             ((C30757 * C1673 - C113 * C1668) * C4699 +
              (C30757 * C1677 - C113 * C1674) * C30508) *
                 C4698) *
                C30665) *
               C30623) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30665) *
              C1392 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30814 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            C6022 * C4698) *
               C30665) *
              C1393 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30814 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C6016 - C6017) * C4699 + (C6018 - C6019) * C30508) * C4698) *
               C30665) *
              C1394 +
          ((C5490 * C4696 +
            ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
            ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
               C30814 +
           (C6022 * C4696 +
            ((C6017 - C6016) * C4699 + (C6019 - C6018) * C30508) * C4697 +
            ((C30757 * C6010 - C113 * C6009) * C4699 +
             (C30757 * C6012 - C113 * C6011) * C30508) *
                C4698) *
               C30665) *
              C30854) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30881 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30869 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30881 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + (C344 - C345) * C116 +
            (C346 - C347) * C104) *
               C30746 * C30578 * C30869 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30881 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
            (C113 * C314 - C30757 * C325) * C104) *
               C30746 * C30578 * C30869 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C30560 * C108 +
          ((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
           (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
              C30746 * C30578 * C30560 * C109 +
          (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
           (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
              C30746 * C30578 * C30560 * C110 +
          (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
           (C161 - C160) * C103 + (C162 - C163) * C116 + (C164 - C165) * C104) *
              C30746 * C30578 * C30560 * C111 +
          (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
           (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
           (C30757 * C144 - C113 * C137) * C104) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C30560 * C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30882 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + (C525 - C526) * C116 +
            (C527 - C528) * C104) *
               C30746 * C30871 +
           ((C518 - C517) * C114 + (C520 - C519) * C102 + (C522 - C521) * C115 +
            (C524 - C523) * C103 + (C529 - C530) * C116 +
            (C531 - C532) * C104) *
               C30746 * C30847) *
              C30560 * C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30882 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C113 * C476 - C30757 * C494) * C116 +
            (C113 * C495 - C30757 * C506) * C104) *
               C30746 * C30871 +
           (C535 * C114 + C536 * C102 + (C530 - C529) * C115 +
            (C532 - C531) * C103 + (C30757 * C496 - C113 * C477) * C116 +
            (C30757 * C507 - C113 * C497) * C104) *
               C30746 * C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30882 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30871 +
           ((C30757 * C484 - C113 * C471) * C114 +
            (C30757 * C501 - C113 * C485) * C102 + (C517 - C518) * C115 +
            (C519 - C520) * C103 + C535 * C116 + C536 * C104) *
               C30746 * C30847) *
              C1050 +
          (((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30882 +
           ((C30757 * C911 - C113 * C906) * C114 +
            (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
            (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
               C30746 * C30871 +
           ((C113 * C1258 - C30757 * C1267) * C114 +
            (C113 * C1268 - C30757 * C1285) * C102 +
            (C113 * C1259 - C30757 * C1269) * C115 +
            (C113 * C1270 - C30757 * C1286) * C103 +
            (C113 * C1260 - C30757 * C1271) * C116 +
            (C113 * C1272 - C30757 * C1287) * C104) *
               C30746 * C30847) *
              C1051 +
          (((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30882 +
           ((C113 * C1261 - C30757 * C1273) * C114 +
            (C113 * C1274 - C30757 * C1288) * C102 +
            (C113 * C1262 - C30757 * C1275) * C115 +
            (C113 * C1276 - C30757 * C1289) * C103 +
            (C113 * C1263 - C30757 * C1277) * C116 +
            (C113 * C1278 - C30757 * C1290) * C104) *
               C30746 * C30871 +
           ((C30757 * C1279 - C113 * C1264) * C114 +
            (C30757 * C1291 - C113 * C1280) * C102 +
            (C30757 * C1281 - C113 * C1265) * C115 +
            (C30757 * C1292 - C113 * C1282) * C103 +
            (C30757 * C1283 - C113 * C1266) * C116 +
            (C30757 * C1293 - C113 * C1284) * C104) *
               C30746 * C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C30757 * C1267 - C113 * C1258) * C4699 +
             (C30757 * C1285 - C113 * C1268) * C30508) *
                C4697 +
            ((C30757 * C1279 - C113 * C1264) * C4699 +
             (C30757 * C1291 - C113 * C1280) * C30508) *
                C4698) *
               C30847) *
              C30560 * C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30882 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30871 +
           (((C518 - C517) * C4699 + (C520 - C519) * C30508) * C4696 +
            ((C2143 - C2144) * C4699 + (C2145 - C2146) * C30508) * C4697 +
            ((C113 * C1265 - C30757 * C1281) * C4699 +
             (C113 * C1282 - C30757 * C1292) * C30508) *
                C4698) *
               C30847) *
              C30560 * C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30882 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30871 +
           ((C535 * C4699 + C536 * C30508) * C4696 +
            ((C2148 - C2147) * C4699 + (C2150 - C2149) * C30508) * C4697 +
            ((C30757 * C1283 - C113 * C1266) * C4699 +
             (C30757 * C1293 - C113 * C1284) * C30508) *
                C4698) *
               C30847) *
              C30560 * C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30882 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
            C5638 * C4698) *
               C30871 +
           (((C30757 * C484 - C113 * C471) * C4699 +
             (C30757 * C501 - C113 * C485) * C30508) *
                C4696 +
            ((C5618 - C5619) * C4699 + (C5620 - C5621) * C30508) * C4697 +
            C5641 * C4698) *
               C30847) *
              C1050 +
          ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            C5490 * C4698) *
               C30882 +
           (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
            ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
            ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
               C30871 +
           (((C5619 - C5618) * C4699 + (C5621 - C5620) * C30508) * C4696 +
            ((C5623 - C5622) * C4699 + (C5625 - C5624) * C30508) * C4697 +
            ((C5630 - C5631) * C4699 + (C5632 - C5633) * C30508) * C4698) *
               C30847) *
              C1051 +
          ((C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            C5493 * C4698) *
               C30882 +
           (C5638 * C4696 +
            ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
            ((C113 * C5604 - C30757 * C5608) * C4699 +
             (C113 * C5609 - C30757 * C5613) * C30508) *
                C4698) *
               C30871 +
           (C5641 * C4696 +
            ((C5631 - C5630) * C4699 + (C5633 - C5632) * C30508) * C4697 +
            ((C30757 * C5610 - C113 * C5605) * C4699 +
             (C30757 * C5614 - C113 * C5611) * C30508) *
                C4698) *
               C30847) *
              C30844) *
         C30532) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30814 +
           ((C113 * C468 - C30757 * C478) * C114 +
            (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
            (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
               C30746 * C30665) *
              C30560 * C636 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30814 +
           ((C510 - C509) * C114 + (C512 - C511) * C102 + (C514 - C513) * C115 +
            (C516 - C515) * C103 + C755 * C116 + C756 * C104) *
               C30746 * C30665) *
              C30560 * C637 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30814 +
           (C533 * C114 + C534 * C102 + (C526 - C525) * C115 +
            (C528 - C527) * C103 + (C757 - C758) * C116 +
            (C759 - C760) * C104) *
               C30746 * C30665) *
              C30560 * C638 +
          ((C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
            (C161 - C160) * C103 + (C162 - C163) * C116 +
            (C164 - C165) * C104) *
               C30746 * C30814 +
           (C755 * C114 + C756 * C102 + (C758 - C757) * C115 +
            (C760 - C759) * C103 + (C30757 * C751 - C113 * C750) * C116 +
            (C30757 * C753 - C113 * C752) * C104) *
               C30746 * C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C114 +
             (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
             (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
                C30746 * C30814 +
            ((C113 * C468 - C30757 * C478) * C114 +
             (C113 * C479 - C30757 * C498) * C102 + (C509 - C510) * C115 +
             (C511 - C512) * C103 + C533 * C116 + C534 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C113 * C287 - C30757 * C297) * C114 +
             (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
             (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
                C30746 * C30814 +
            ((C30757 * C911 - C113 * C906) * C114 +
             (C30757 * C921 - C113 * C912) * C102 + (C927 - C928) * C115 +
             (C929 - C930) * C103 + C939 * C116 + C940 * C104) *
                C30746 * C30665) *
               C1051 +
           (((C30757 * C303 - C113 * C290) * C114 +
             (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
             (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
                C30746 * C30814 +
            ((C113 * C1261 - C30757 * C1273) * C114 +
             (C113 * C1274 - C30757 * C1288) * C102 + (C1561 - C1562) * C115 +
             (C1563 - C1564) * C103 + (C1565 - C1566) * C116 +
             (C1567 - C1568) * C104) *
                C30746 * C30665) *
               C30844) *
              C30799 +
          ((((C147 - C146) * C114 + (C149 - C148) * C102 +
             (C151 - C150) * C115 + (C153 - C152) * C103 + C168 * C116 +
             C169 * C104) *
                C30746 * C30814 +
            ((C510 - C509) * C114 + (C512 - C511) * C102 +
             (C514 - C513) * C115 + (C516 - C515) * C103 + C755 * C116 +
             C756 * C104) *
                C30746 * C30665) *
               C1050 +
           (((C329 - C328) * C114 + (C331 - C330) * C102 +
             (C333 - C332) * C115 + (C335 - C334) * C103 + C645 * C116 +
             C646 * C104) *
                C30746 * C30814 +
            ((C928 - C927) * C114 + (C930 - C929) * C102 +
             (C932 - C931) * C115 + (C934 - C933) * C103 +
             (C935 - C936) * C116 + (C937 - C938) * C104) *
                C30746 * C30665) *
               C1051 +
           (((C337 - C336) * C114 + (C339 - C338) * C102 +
             (C341 - C340) * C115 + (C343 - C342) * C103 +
             (C348 - C349) * C116 + (C350 - C351) * C104) *
                C30746 * C30814 +
            ((C1562 - C1561) * C114 + (C1564 - C1563) * C102 +
             (C1566 - C1565) * C115 + (C1568 - C1567) * C103 +
             (C30757 * C1557 - C113 * C1556) * C116 +
             (C30757 * C1559 - C113 * C1558) * C104) *
                C30746 * C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30814 +
           (((C113 * C468 - C30757 * C478) * C4699 +
             (C113 * C479 - C30757 * C498) * C30508) *
                C4696 +
            ((C113 * C906 - C30757 * C911) * C4699 +
             (C113 * C912 - C30757 * C921) * C30508) *
                C4697 +
            ((C113 * C1261 - C30757 * C1273) * C4699 +
             (C113 * C1274 - C30757 * C1288) * C30508) *
                C4698) *
               C30665) *
              C30560 * C636 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30814 +
           (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
            ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
            ((C1562 - C1561) * C4699 + (C1564 - C1563) * C30508) * C4698) *
               C30665) *
              C30560 * C637 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30814 +
           ((C533 * C4699 + C534 * C30508) * C4696 +
            ((C932 - C931) * C4699 + (C934 - C933) * C30508) * C4697 +
            ((C1565 - C1566) * C4699 + (C1567 - C1568) * C30508) * C4698) *
               C30665) *
              C30560 * C638 +
          (((C168 * C4699 + C169 * C30508) * C4696 +
            ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
            ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
               C30814 +
           ((C755 * C4699 + C756 * C30508) * C4696 +
            ((C936 - C935) * C4699 + (C938 - C937) * C30508) * C4697 +
            ((C30757 * C1557 - C113 * C1556) * C4699 +
             (C30757 * C1559 - C113 * C1558) * C30508) *
                C4698) *
               C30665) *
              C30560 * C30848)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30757 * C124 - C113 * C117) * C4699 +
              (C30757 * C138 - C113 * C125) * C30508) *
                 C4696 +
             ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
             C4835 * C4698) *
                C30814 +
            (((C113 * C468 - C30757 * C478) * C4699 +
              (C113 * C479 - C30757 * C498) * C30508) *
                 C4696 +
             ((C5288 - C5289) * C4699 + (C5290 - C5291) * C30508) * C4697 +
             C5638 * C4698) *
                C30665) *
               C1050 +
           ((((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
             ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
             C5490 * C4698) *
                C30814 +
            (((C5289 - C5288) * C4699 + (C5291 - C5290) * C30508) * C4696 +
             ((C5293 - C5292) * C4699 + (C5295 - C5294) * C30508) * C4697 +
             ((C5626 - C5627) * C4699 + (C5628 - C5629) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4835 * C4696 +
             ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
             C5493 * C4698) *
                C30814 +
            (C5638 * C4696 +
             ((C5627 - C5626) * C4699 + (C5629 - C5628) * C30508) * C4697 +
             ((C113 * C5604 - C30757 * C5608) * C4699 +
              (C113 * C5609 - C30757 * C5613) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30799 +
          (((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
             ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
             C4834 * C4698) *
                C30814 +
            (((C510 - C509) * C4699 + (C512 - C511) * C30508) * C4696 +
             ((C927 - C928) * C4699 + (C929 - C930) * C30508) * C4697 +
             C5911 * C4698) *
                C30665) *
               C1050 +
           ((((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
             ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
             C5752 * C4698) *
                C30814 +
            (((C928 - C927) * C4699 + (C930 - C929) * C30508) * C4696 +
             ((C1561 - C1562) * C4699 + (C1563 - C1564) * C30508) * C4697 +
             ((C5905 - C5906) * C4699 + (C5907 - C5908) * C30508) * C4698) *
                C30665) *
               C1051 +
           ((C4834 * C4696 +
             ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
             ((C5746 - C5747) * C4699 + (C5748 - C5749) * C30508) * C4698) *
                C30814 +
            (C5911 * C4696 +
             ((C5906 - C5905) * C4699 + (C5908 - C5907) * C30508) * C4697 +
             ((C30757 * C5899 - C113 * C5898) * C4699 +
              (C30757 * C5901 - C113 * C5900) * C30508) *
                 C4698) *
                C30665) *
               C30844) *
              C30543)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C30560 * C108 +
          ((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
           (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
              C30746 * C30578 * C30560 * C109 +
          (C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
           (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
              C30746 * C30578 * C30560 * C110 +
          (C168 * C114 + C169 * C102 + (C159 - C158) * C115 +
           (C161 - C160) * C103 + (C162 - C163) * C116 + (C164 - C165) * C104) *
              C30746 * C30578 * C30560 * C111 +
          (C170 * C114 + C171 * C102 + (C163 - C162) * C115 +
           (C165 - C164) * C103 + (C30757 * C136 - C113 * C123) * C116 +
           (C30757 * C144 - C113 * C137) * C104) *
              C30746 * C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C30881 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C30869 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C284 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C30881 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + (C344 - C345) * C116 +
            (C346 - C347) * C104) *
               C30746 * C30578 * C30869 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C285 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C30881 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C113 * C295 - C30757 * C313) * C116 +
            (C113 * C314 - C30757 * C325) * C104) *
               C30746 * C30578 * C30869 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C114 +
            (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
            (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
               C30746 * C30578 * C1050 +
           ((C113 * C287 - C30757 * C297) * C114 +
            (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
            (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
               C30746 * C30578 * C1051 +
           ((C30757 * C303 - C113 * C290) * C114 +
            (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
            (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
               C30746 * C30578 * C30844) *
              C30878 +
          (((C147 - C146) * C114 + (C149 - C148) * C102 + (C151 - C150) * C115 +
            (C153 - C152) * C103 + C168 * C116 + C169 * C104) *
               C30746 * C30578 * C1050 +
           ((C329 - C328) * C114 + (C331 - C330) * C102 + (C333 - C332) * C115 +
            (C335 - C334) * C103 + C645 * C116 + C646 * C104) *
               C30746 * C30578 * C1051 +
           ((C337 - C336) * C114 + (C339 - C338) * C102 + (C341 - C340) * C115 +
            (C343 - C342) * C103 + (C348 - C349) * C116 +
            (C350 - C351) * C104) *
               C30746 * C30578 * C30844) *
              C30865 +
          ((C166 * C114 + C167 * C102 + (C155 - C154) * C115 +
            (C157 - C156) * C103 + C170 * C116 + C171 * C104) *
               C30746 * C30578 * C1050 +
           (C352 * C114 + C353 * C102 + (C345 - C344) * C115 +
            (C347 - C346) * C103 + (C647 - C648) * C116 +
            (C649 - C650) * C104) *
               C30746 * C30578 * C1051 +
           (C354 * C114 + C355 * C102 + (C349 - C348) * C115 +
            (C351 - C350) * C103 + (C30757 * C315 - C113 * C296) * C116 +
            (C30757 * C326 - C113 * C316) * C104) *
               C30746 * C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C30757 * C124 - C113 * C117) * C114 +
           (C30757 * C138 - C113 * C125) * C102 + (C146 - C147) * C115 +
           (C148 - C149) * C103 + C166 * C116 + C167 * C104) *
              C30746 * C30578 * C1118 +
          ((C113 * C287 - C30757 * C297) * C114 +
           (C113 * C298 - C30757 * C317) * C102 + (C328 - C329) * C115 +
           (C330 - C331) * C103 + C352 * C116 + C353 * C104) *
              C30746 * C30578 * C1119 +
          ((C30757 * C303 - C113 * C290) * C114 +
           (C30757 * C320 - C113 * C304) * C102 + (C336 - C337) * C115 +
           (C338 - C339) * C103 + C354 * C116 + C355 * C104) *
              C30746 * C30578 * C1120 +
          ((C113 * C1124 - C30757 * C1130) * C114 +
           (C113 * C1131 - C30757 * C1142) * C102 +
           (C113 * C1125 - C30757 * C1132) * C115 +
           (C113 * C1133 - C30757 * C1143) * C103 +
           (C113 * C1126 - C30757 * C1134) * C116 +
           (C113 * C1135 - C30757 * C1144) * C104) *
              C30746 * C30578 * C1121 +
          ((C30757 * C1136 - C113 * C1127) * C114 +
           (C30757 * C1145 - C113 * C1137) * C102 +
           (C30757 * C1138 - C113 * C1128) * C115 +
           (C30757 * C1146 - C113 * C1139) * C103 +
           (C30757 * C1140 - C113 * C1129) * C116 +
           (C30757 * C1147 - C113 * C1141) * C104) *
              C30746 * C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C30757 * C297 - C113 * C287) * C4699 +
            (C30757 * C317 - C113 * C298) * C30508) *
               C4697 +
           ((C30757 * C303 - C113 * C290) * C4699 +
            (C30757 * C320 - C113 * C304) * C30508) *
               C4698) *
              C30578 * C30560 * C108 +
          (((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
           ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
           ((C337 - C336) * C4699 + (C339 - C338) * C30508) * C4698) *
              C30578 * C30560 * C109 +
          ((C166 * C4699 + C167 * C30508) * C4696 +
           ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
           (C354 * C4699 + C355 * C30508) * C4698) *
              C30578 * C30560 * C110 +
          ((C168 * C4699 + C169 * C30508) * C4696 +
           ((C345 - C344) * C4699 + (C347 - C346) * C30508) * C4697 +
           ((C348 - C349) * C4699 + (C350 - C351) * C30508) * C4698) *
              C30578 * C30560 * C111 +
          ((C170 * C4699 + C171 * C30508) * C4696 +
           ((C648 - C647) * C4699 + (C650 - C649) * C30508) * C4697 +
           ((C30757 * C315 - C113 * C296) * C4699 +
            (C30757 * C326 - C113 * C316) * C30508) *
               C4698) *
              C30578 * C30560 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C30881 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C30869 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C284 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C30881 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C30869 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C285 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C30881 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C30869 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C30757 * C124 - C113 * C117) * C4699 +
             (C30757 * C138 - C113 * C125) * C30508) *
                C4696 +
            ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
            C4835 * C4698) *
               C30578 * C1050 +
           (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
            ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
            ((C4819 - C4820) * C4699 + (C4821 - C4822) * C30508) * C4698) *
               C30578 * C1051 +
           (C4835 * C4696 +
            ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
            ((C30757 * C1136 - C113 * C1127) * C4699 +
             (C30757 * C1145 - C113 * C1137) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30878 +
          ((((C147 - C146) * C4699 + (C149 - C148) * C30508) * C4696 +
            ((C328 - C329) * C4699 + (C330 - C331) * C30508) * C4697 +
            C4834 * C4698) *
               C30578 * C1050 +
           (((C329 - C328) * C4699 + (C331 - C330) * C30508) * C4696 +
            ((C336 - C337) * C4699 + (C338 - C339) * C30508) * C4697 +
            ((C1404 - C1403) * C4699 + (C1406 - C1405) * C30508) * C4698) *
               C30578 * C1051 +
           (C4834 * C4696 +
            ((C1403 - C1404) * C4699 + (C1405 - C1406) * C30508) * C4697 +
            ((C113 * C1128 - C30757 * C1138) * C4699 +
             (C113 * C1139 - C30757 * C1146) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30865 +
          (((C166 * C4699 + C167 * C30508) * C4696 +
            ((C333 - C332) * C4699 + (C335 - C334) * C30508) * C4697 +
            C4831 * C4698) *
               C30578 * C1050 +
           ((C352 * C4699 + C353 * C30508) * C4696 +
            ((C341 - C340) * C4699 + (C343 - C342) * C30508) * C4697 +
            ((C1407 - C1408) * C4699 + (C1409 - C1410) * C30508) * C4698) *
               C30578 * C1051 +
           (C4831 * C4696 +
            ((C1408 - C1407) * C4699 + (C1410 - C1409) * C30508) * C4697 +
            ((C30757 * C1140 - C113 * C1129) * C4699 +
             (C30757 * C1147 - C113 * C1141) * C30508) *
                C4698) *
               C30578 * C30844) *
              C30838)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30757 * C124 - C113 * C117) * C4699 +
            (C30757 * C138 - C113 * C125) * C30508) *
               C4696 +
           ((C4811 - C4812) * C4699 + (C4813 - C4814) * C30508) * C4697 +
           C4835 * C4698) *
              C30578 * C1118 +
          (((C4812 - C4811) * C4699 + (C4814 - C4813) * C30508) * C4696 +
           ((C4816 - C4815) * C4699 + (C4818 - C4817) * C30508) * C4697 +
           C5490 * C4698) *
              C30578 * C1119 +
          (C4835 * C4696 +
           ((C4820 - C4819) * C4699 + (C4822 - C4821) * C30508) * C4697 +
           C5493 * C4698) *
              C30578 * C1120 +
          (C5490 * C4696 +
           ((C5479 - C5478) * C4699 + (C5481 - C5480) * C30508) * C4697 +
           ((C5482 - C5483) * C4699 + (C5484 - C5485) * C30508) * C4698) *
              C30578 * C1121 +
          (C5493 * C4696 +
           ((C5483 - C5482) * C4699 + (C5485 - C5484) * C30508) * C4697 +
           ((C30757 * C5471 - C113 * C5468) * C4699 +
            (C30757 * C5474 - C113 * C5472) * C30508) *
               C4698) *
              C30578 * C1122) *
         C30532) /
            (p * q * std::sqrt(p + q));
}
