/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AB_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_12_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29682 = ae * be;
    const double C29681 = ae + be;
    const double C29680 = 0 * be;
    const double C29679 = yA - yB;
    const double C29699 = 0 * be;
    const double C29698 = zA - zB;
    const double C29721 = zP - zQ;
    const double C29720 = yP - yQ;
    const double C29719 = p + q;
    const double C29718 = p * q;
    const double C29730 = bs[4];
    const double C29728 = xP - xQ;
    const double C29735 = bs[5];
    const double C29742 = bs[6];
    const double C29750 = bs[7];
    const double C29764 = bs[3];
    const double C30130 = bs[2];
    const double C115 = bs[0];
    const double C30498 = xA - xB;
    const double C30516 = ce + de;
    const double C30515 = ce * de;
    const double C30514 = xC - xD;
    const double C30548 = yC - yD;
    const double C30566 = zC - zD;
    const double C29683 = std::pow(C29681, 2);
    const double C30788 = 2 * C29681;
    const double C29684 = C29682 * C29679;
    const double C30732 = std::pow(C29679, 2);
    const double C30819 = C29679 * ae;
    const double C29700 = C29682 * C29698;
    const double C30745 = std::pow(C29698, 2);
    const double C30820 = C29698 * ae;
    const double C29761 = C29721 * be;
    const double C29915 = std::pow(C29721, 2);
    const double C29723 = C29720 * C29721;
    const double C29802 = C29720 * ae;
    const double C29855 = std::pow(C29720, 2);
    const double C29722 = 2 * C29718;
    const double C29736 = std::pow(C29728, 2);
    const double C30499 = std::pow(C30498, 2);
    const double C30787 = C30498 * ae;
    const double C30520 = 2 * C30516;
    const double C30519 = std::pow(C30516, 2);
    const double C30521 = C30514 * de;
    const double C30518 = C30514 * ce;
    const double C30517 = std::pow(C30514, 2);
    const double C30549 = std::pow(C30548, 2);
    const double C30608 = C30548 * de;
    const double C30606 = C30548 * ce;
    const double C30567 = std::pow(C30566, 2);
    const double C30650 = C30566 * de;
    const double C30648 = C30566 * ce;
    const double C29685 = 2 * C29683;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * ae * be) /
                        C29683;
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * ae * be) /
                        C29683;
    const double C30823 = std::pow(C30788, -2);
    const double C30821 = std::pow(C30788, -1);
    const double C30733 = C30732 * C29682;
    const double C30746 = C30745 * C29682;
    const double C29765 = C29764 * C29761;
    const double C29768 = C29730 * C29761;
    const double C29772 = C29735 * C29761;
    const double C29779 = C29742 * C29761;
    const double C29790 = C29750 * C29761;
    const double C29725 = C29723 * ae;
    const double C29804 = C29764 * C29802;
    const double C29807 = C29730 * C29802;
    const double C29811 = C29735 * C29802;
    const double C29818 = C29742 * C29802;
    const double C29829 = C29750 * C29802;
    const double C29724 = C29722 / C29719;
    const double C122 = (-(bs[1] * C29761 * C29722) / C29719) / C29681;
    const double C123 = (-(bs[1] * C29802 * C29722) / C29719) / C29681;
    const double C116 = -(C29728 * bs[1] * C29722) / C29719;
    const double C294 = -(C29720 * bs[1] * C29722) / C29719;
    const double C481 = -(C29721 * bs[1] * C29722) / C29719;
    const double C30500 = C30499 * C29682;
    const double C30533 = std::pow(C30520, -1);
    const double C30796 = std::pow(C30520, -2);
    const double C30534 = 2 * C30519;
    const double C30800 = C30519 * C30520;
    const double C30799 = 4 * C30519;
    const double C30789 = std::pow(C30518, 2);
    const double C30522 = C30517 * C30515;
    const double C30550 = C30549 * C30515;
    const double C30801 = std::pow(C30606, 2);
    const double C30568 = C30567 * C30515;
    const double C30803 = std::pow(C30648, 2);
    const double C30734 = C30733 / C29681;
    const double C30747 = C30746 / C29681;
    const double C29726 = C29725 * be;
    const double C29729 = std::pow(C29724, 4);
    const double C29734 = -C29724;
    const double C29741 = std::pow(C29724, 6);
    const double C30129 = std::pow(C29724, 2);
    const double C124 =
        (C29728 * std::pow(C29724, 2) * bs[2] * C29761) / C29681;
    const double C125 =
        (C29728 * std::pow(C29724, 2) * bs[2] * C29802) / C29681;
    const double C304 =
        (C29720 * std::pow(C29724, 2) * bs[2] * C29761) / C29681;
    const double C305 =
        (C29720 * std::pow(C29724, 2) * bs[2] * C29802) / C29681 -
        (ae * bs[1] * C29722) / (C29719 * C29681);
    const double C30501 = C30500 / C29681;
    const double C30833 = 4 * C30800;
    const double C30832 = C30516 * C30799;
    const double C30523 = C30522 / C30516;
    const double C30551 = C30550 / C30516;
    const double C30569 = C30568 / C30516;
    const double C30735 = -C30734;
    const double C30748 = -C30747;
    const double C29731 = C29730 * C29726;
    const double C29738 = C29735 * C29726;
    const double C29743 = C29742 * C29726;
    const double C29752 = C29750 * C29726;
    const double C138 =
        (std::pow(-C29724, 3) * bs[3] * C29726 +
         std::pow(C29724, 4) * bs[4] * C29726 * std::pow(xP - xQ, 2)) /
        C29683;
    const double C29769 = C29729 * C29768;
    const double C29808 = C29729 * C29807;
    const double C29844 = C29730 * C29729;
    const double C29737 = std::pow(C29734, 5);
    const double C29749 = std::pow(C29734, 7);
    const double C29763 = std::pow(C29734, 3);
    const double C324 = (ae * std::pow(C29724, 2) * bs[2] * C29721 * be +
                         C29720 * std::pow(C29734, 3) * bs[3] * C29726) /
                        C29683;
    const double C29781 = C29741 * C29779;
    const double C29820 = C29741 * C29818;
    const double C29889 = C29742 * C29741;
    const double C30131 = C30130 * C30129;
    const double C491 = (C29721 * C30129 * C30130 * C29761) / C29681 -
                        (be * bs[1] * C29722) / (C29719 * C29681);
    const double C492 = (C29721 * C30129 * C30130 * C29802) / C29681;
    const double C30502 = -C30501;
    const double C30524 = -C30523;
    const double C30552 = -C30551;
    const double C30570 = -C30569;
    const double C30736 = std::exp(C30735);
    const double C30749 = std::exp(C30748);
    const double C29732 = C29729 * C29731;
    const double C29744 = C29741 * C29743;
    const double C29770 = C29728 * C29769;
    const double C29853 = ae * C29769;
    const double C29852 = C29720 * C29769;
    const double C30252 = C29721 * C29769;
    const double C29809 = C29728 * C29808;
    const double C29899 = be * C29808;
    const double C29914 = C29721 * C29808;
    const double C30195 = C29720 * C29808;
    const double C29876 = C29728 * C29844;
    const double C29884 = C29720 * C29844;
    const double C29981 = C29844 * be;
    const double C30054 = C29721 * C29844;
    const double C30137 = C29844 * C29736;
    const double C30198 = C29844 * C29855;
    const double C30255 = C29844 * C29915;
    const double C30289 = C29844 * ae;
    const double C29739 = C29737 * C29738;
    const double C29773 = C29737 * C29772;
    const double C29812 = C29737 * C29811;
    const double C29846 = C29735 * C29737;
    const double C29753 = C29749 * C29752;
    const double C29792 = C29749 * C29790;
    const double C29831 = C29749 * C29829;
    const double C29766 = C29763 * C29765;
    const double C29805 = C29763 * C29804;
    const double C29874 = C29764 * C29763;
    const double C511 = (be * std::pow(C29724, 2) * bs[2] * C29720 * ae +
                         C29721 * C29763 * C29764 * C29726) /
                        C29683;
    const double C29782 = C29781 * C29736;
    const double C29789 = C29728 * C29781;
    const double C29935 = C29781 * C29855;
    const double C29949 = ae * C29781;
    const double C29948 = C29720 * C29781;
    const double C29987 = C29721 * C29781;
    const double C29821 = C29820 * C29736;
    const double C29828 = C29728 * C29820;
    const double C29991 = be * C29820;
    const double C29990 = C29721 * C29820;
    const double C30056 = C29820 * C29915;
    const double C30301 = C29720 * C29820;
    const double C29890 = C29889 * C29736;
    const double C29995 = C29720 * C29889;
    const double C29994 = C29889 * C29855;
    const double C30033 = C29728 * C29889;
    const double C30062 = C29889 * C29915;
    const double C117 = C30131 * C29736 - (bs[1] * C29722) / C29719;
    const double C295 = C29720 * C29728 * C30131;
    const double C297 = C30131 * C29855 - (bs[1] * C29722) / C29719;
    const double C482 = C29721 * C29728 * C30131;
    const double C484 = C30131 * C29915 - (bs[1] * C29722) / C29719;
    const double C931 = C29721 * C29720 * C30131;
    const double C30503 = std::exp(C30502);
    const double C30525 = std::exp(C30524);
    const double C30553 = std::exp(C30552);
    const double C30571 = std::exp(C30570);
    const double C29686 = C29684 * C30736;
    const double C114 = -(2 * ae * be * (yA - yB) * C30736) / (ae + be);
    const double C30853 = C30736 * C30819;
    const double C4723 =
        (C30736 * std::pow(C30819, 2)) / C29683 + C30736 / C30788;
    const double C4725 = C30823 * C30736;
    const double C13127 = C30821 * C30736;
    const double C150 = C30749 * C138;
    const double C146 = C30749 * C137;
    const double C144 = C30749 * C124;
    const double C4843 = C30749 * C324;
    const double C4841 = C30749 * C304;
    const double C29701 = C29700 * C30749;
    const double C113 = -(2 * ae * be * (zA - zB) * C30749) / (ae + be);
    const double C30854 = C30749 * C30820;
    const double C8976 =
        (C30749 * std::pow(C30820, 2)) / C29683 + C30749 / C30788;
    const double C8978 = C30823 * C30749;
    const double C18611 = C30821 * C30749;
    const double C139 = (2 * C29728 * C29732 +
                         C29728 * (C29732 + std::pow(-C29724, 5) * bs[5] *
                                                C29726 * std::pow(C29728, 2))) /
                        C29683;
    const double C325 =
        (ae * C29728 * std::pow(C29734, 3) * bs[3] * C29721 * be +
         C29720 * C29728 * C29732) /
        C29683;
    const double C512 = (be * C29728 * C29763 * C29764 * C29720 * ae +
                         C29721 * C29728 * C29732) /
                        C29683;
    const double C29745 = C29744 * C29736;
    const double C29748 = C29728 * C29744;
    const double C29934 = C29720 * C29744;
    const double C29970 = C29721 * C29744;
    const double C30143 = 2 * C29876;
    const double C30205 = C29720 * C29876;
    const double C30204 = C29876 * ae;
    const double C30262 = C29721 * C29876;
    const double C30261 = C29876 * be;
    const double C30291 = 2 * C29884;
    const double C30290 = C29884 * ae;
    const double C30342 = C29721 * C29884;
    const double C30341 = C29884 * be;
    const double C30364 = 2 * C30054;
    const double C30363 = C30054 * be;
    const double C29849 = C29728 * C29739;
    const double C29854 = C29720 * C29739;
    const double C29900 = C29721 * C29739;
    const double C140 =
        (3 * (C29732 + C29739 * C29736) +
         C29728 * (2 * C29728 * C29739 +
                   C29728 * (C29739 +
                             std::pow(C29724, 6) * bs[6] * C29726 * C29736))) /
        C29683;
    const double C326 = (ae * (std::pow(C29734, 3) * bs[3] * C29761 +
                               C29729 * C29730 * C29761 * C29736) +
                         C29720 * (C29732 + C29739 * C29736)) /
                        C29683;
    const double C328 = (C29728 * C29732 + ae * C29720 * C29770 +
                         C29720 * (ae * C29770 + C29720 * C29728 * C29739)) /
                        C29683;
    const double C513 =
        (be * (C29763 * C29764 * C29802 + C29729 * C29730 * C29802 * C29736) +
         C29721 * (C29732 + C29739 * C29736)) /
        C29683;
    const double C515 = (C29728 * C29732 + be * C29721 * C29809 +
                         C29721 * (be * C29809 + C29721 * C29728 * C29739)) /
                        C29683;
    const double C947 =
        (ae * (C29721 * C29770 + C29728 * C29764 * C29763 * be) +
         C29720 * (be * C29809 + C29721 * C29728 * C29739)) /
        C29683;
    const double C29774 = C29773 * C29736;
    const double C29778 = C29728 * C29773;
    const double C29857 = C29773 * C29855;
    const double C29933 = ae * C29773;
    const double C29932 = C29720 * C29773;
    const double C29980 = C29721 * C29773;
    const double C29813 = C29812 * C29736;
    const double C29817 = C29728 * C29812;
    const double C29916 = C29812 * C29915;
    const double C29969 = be * C29812;
    const double C29968 = C29721 * C29812;
    const double C1319 =
        (C29732 + be * C29721 * C29808 +
         C29721 * (be * C29808 + C29721 * C29739) +
         ae * (C29852 + C29721 * (C29721 * C29720 * C29773 + C29884 * be) +
               C29721 * C29884 * be) +
         C29720 * (ae * (C29769 + C29721 * (C29721 * C29773 + C29844 * be) +
                         C29721 * C29844 * be) +
                   C29720 * (C29739 + be * C29721 * C29812 +
                             C29721 * (be * C29812 + C29721 * C29744)))) /
        C29683;
    const double C30288 = C29720 * C29812;
    const double C29878 = C29846 * C29736;
    const double C29886 = C29728 * C29846;
    const double C29972 = C29720 * C29846;
    const double C29971 = C29846 * C29855;
    const double C29989 = C29721 * C29846;
    const double C29988 = C29846 * be;
    const double C30055 = C29846 * C29915;
    const double C30302 = C29846 * ae;
    const double C29754 = C29753 * C29736;
    const double C29950 = C29720 * C29753;
    const double C29992 = C29721 * C29753;
    const double C30015 = C29728 * C29753;
    const double C29793 = C29792 * C29736;
    const double C29952 = C29792 * C29855;
    const double C30016 = C29728 * C29792;
    const double C29832 = C29831 * C29736;
    const double C30063 = C29831 * C29915;
    const double C30071 = C29728 * C29831;
    const double C327 = (C29763 * C29764 * C29726 + ae * C29720 * C29766 +
                         C29720 * (ae * C29766 + C29720 * C29732)) /
                        C29683;
    const double C1170 = (2 * (ae * C29766 + C29720 * C29732) +
                          ae * (C29766 + C29769 * std::pow(C29720, 2)) +
                          C29720 * (C29732 + ae * C29720 * C29769 +
                                    C29720 * (ae * C29769 + C29720 * C29739))) /
                         C29683;
    const double C126 =
        (std::pow(C29724, 2) * bs[2] * C29761 + C29766 * C29736) / C29681;
    const double C128 =
        (2 * C29728 * C29766 + C29728 * (C29766 + C29769 * C29736)) / C29681;
    const double C306 = (C29720 * C29728 * C29766) / C29681;
    const double C308 = (C29720 * (C29766 + C29769 * C29736)) / C29681;
    const double C310 =
        (std::pow(C29724, 2) * bs[2] * C29761 + C29766 * C29855) / C29681;
    const double C312 = (C29728 * C29766 + C29770 * C29855) / C29681;
    const double C493 =
        (C29721 * C29728 * C29766 + C29728 * C30131 * be) / C29681;
    const double C497 =
        (C30129 * C30130 * C29761 + C29721 * (C29721 * C29766 + C30131 * be) +
         C29721 * C30131 * be) /
        C29681;
    const double C936 =
        (C29721 * C29720 * C29766 + C29720 * C30131 * be) / C29681;
    const double C1158 =
        (2 * C29720 * C29766 + C29720 * (C29766 + C29769 * C29855)) / C29681;
    const double C514 = (C29763 * C29764 * C29726 + be * C29721 * C29805 +
                         C29721 * (be * C29805 + C29721 * C29732)) /
                        C29683;
    const double C946 =
        (ae * (C29721 * C29766 + bs[2] * std::pow(C29724, 2) * be) +
         C29720 * (be * C29805 + C29721 * C29732)) /
        C29683;
    const double C127 =
        (std::pow(C29724, 2) * bs[2] * C29802 + C29805 * C29736) / C29681;
    const double C129 =
        (2 * C29728 * C29805 + C29728 * (C29805 + C29808 * C29736)) / C29681;
    const double C307 =
        (C29720 * C29728 * C29805 + C29728 * bs[2] * std::pow(C29724, 2) * ae) /
        C29681;
    const double C311 =
        (C30129 * C30130 * C29802 + C29720 * (C29720 * C29805 + C30131 * ae) +
         C29720 * C30131 * ae) /
        C29681;
    const double C494 = (C29721 * C29728 * C29805) / C29681;
    const double C496 = (C29721 * (C29805 + C29808 * C29736)) / C29681;
    const double C498 = (C30129 * C30130 * C29802 + C29805 * C29915) / C29681;
    const double C500 = (C29728 * C29805 + C29809 * C29915) / C29681;
    const double C937 = (C29721 * (C29720 * C29805 + C30131 * ae)) / C29681;
    const double C2003 =
        (2 * C29721 * C29805 + C29721 * (C29805 + C29808 * C29915)) / C29681;
    const double C1313 =
        (ae * (C29766 + C29721 * (C29721 * C29769 + C29874 * be) +
               C29721 * C29874 * be) +
         C29720 * (C29732 + be * C29721 * C29808 +
                   C29721 * (be * C29808 + C29721 * C29739))) /
        C29683;
    const double C1316 = (be * C29805 + C29721 * C29732 +
                          ae * (C29721 * C29852 + C29720 * C29874 * be) +
                          C29720 * (ae * (C29721 * C29769 + C29874 * be) +
                                    C29720 * (be * C29808 + C29721 * C29739))) /
                         C29683;
    const double C30134 = C29728 * C29874;
    const double C30138 = C29874 + C30137;
    const double C30197 = C29720 * C29874;
    const double C30196 = C29874 * ae;
    const double C30200 = C29874 + C30198;
    const double C30254 = C29721 * C29874;
    const double C30253 = C29874 * be;
    const double C30257 = C29874 + C30255;
    const double C309 = (C29720 * (C29805 + C29808 * C29736) +
                         (bs[2] * std::pow(C29724, 2) + C29874 * C29736) * ae) /
                        C29681;
    const double C495 = (C29721 * (C29766 + C29769 * C29736) +
                         (C30131 + C29874 * C29736) * be) /
                        C29681;
    const double C1159 =
        (2 * (C29720 * C29805 + C30131 * ae) +
         C29720 * (C29805 + C29720 * (C29720 * C29808 + C29874 * ae) +
                   C29720 * C29874 * ae) +
         (C30131 + C29874 * C29855) * ae) /
        C29681;
    const double C1301 = (C29721 * (C29766 + C29769 * C29855) +
                          (C30131 + C29874 * C29855) * be) /
                         C29681;
    const double C2002 =
        (2 * (C29721 * C29766 + C30131 * be) +
         C29721 * (C29766 + C29721 * (C29721 * C29769 + C29874 * be) +
                   C29721 * C29874 * be) +
         (C30131 + C29874 * C29915) * be) /
        C29681;
    const double C118 =
        2 * C29728 * C30131 + C29728 * (C30131 + C29874 * C29736);
    const double C296 = C29720 * (C30131 + C29874 * C29736);
    const double C483 = C29721 * (C30131 + C29874 * C29736);
    const double C1152 =
        2 * C29720 * C30131 + C29720 * (C30131 + C29874 * C29855);
    const double C1289 = C29721 * (C30131 + C29874 * C29855);
    const double C1996 =
        2 * C29721 * C30131 + C29721 * (C30131 + C29874 * C29915);
    const double C29783 = C29773 + C29782;
    const double C29791 = 2 * C29789;
    const double C29863 = C29789 * C29855;
    const double C30014 = ae * C29789;
    const double C30013 = C29720 * C29789;
    const double C30029 = C29721 * C29789;
    const double C29939 = C29773 + C29935;
    const double C29956 = 2 * C29948;
    const double C29954 = ae * C29948;
    const double C30042 = C29721 * C29948;
    const double C29822 = C29812 + C29821;
    const double C29830 = 2 * C29828;
    const double C29920 = C29828 * C29915;
    const double C30031 = be * C29828;
    const double C30068 = C29721 * C29828;
    const double C30323 = C29720 * C29828;
    const double C29998 = be * C29990;
    const double C30088 = 2 * C29990;
    const double C30058 = C29812 + C30056;
    const double C29891 = C29846 + C29890;
    const double C30061 = C29995 * C29915;
    const double C30000 = C29846 + C29994;
    const double C30036 = C30033 * C29855;
    const double C30070 = C29720 * C30033;
    const double C30095 = C30033 * C29915;
    const double C30065 = C29846 + C30062;
    const double C30822 = C30503 * C30787;
    const double C103 =
        (C30503 * std::pow(C30787, 2)) / C29683 + C30503 / C30788;
    const double C105 = C30823 * C30503;
    const double C13129 = C30821 * C30503;
    const double C30527 = C30525 * C30518;
    const double C30526 = C30525 / C30520;
    const double C30536 = C30533 * C30525;
    const double C30792 = C30525 * C30521;
    const double C30830 = C30796 * C30525;
    const double C30824 = C30525 * C30789;
    const double C30607 = C30553 / C30520;
    const double C30609 = C30553 * C30606;
    const double C30616 = C30533 * C30553;
    const double C30807 = C30553 * C30608;
    const double C30836 = C30796 * C30553;
    const double C30834 = C30553 * C30801;
    const double C30649 = C30571 / C30520;
    const double C30651 = C30571 * C30648;
    const double C30658 = C30533 * C30571;
    const double C30813 = C30571 * C30650;
    const double C30839 = C30796 * C30571;
    const double C30837 = C30571 * C30803;
    const double C4729 = ((0 * ae) / C29681 - C29686 / C29683) / (2 * C29681) +
                         (0 * ae) / C29681;
    const double C13130 =
        ((C30736 - (C29679 * 2 * C29686) / C29681) * ae) / C29681 -
        C29680 / C29685;
    const double C13131 = (0 * ae) / C29681 - C29686 / C29683;
    const double C4724 = (2 * C30821 * C30853) / C29681;
    const double C13126 = C30853 / C29681;
    const double C4728 =
        (((C30736 - (C29679 * 2 * C29686) / C29681) * ae) / C29681 -
         C29680 / C29685) /
            (2 * C29681) +
        ((C29679 * ((0 * ae) / C29681 - C29686 / C29683) + C13127) * ae) /
            C29681;
    const double C8981 = ((0 * ae) / C29681 - C29701 / C29683) / (2 * C29681) +
                         (0 * ae) / C29681;
    const double C18612 =
        ((C30749 - (C29698 * 2 * C29701) / C29681) * ae) / C29681 -
        C29699 / C29685;
    const double C18613 = (0 * ae) / C29681 - C29701 / C29683;
    const double C149 = C113 * C117;
    const double C147 = C113 * C125;
    const double C145 = C113 * C116;
    const double C335 = C113 * C295;
    const double C522 = C113 * C482;
    const double C4846 = C113 * C297;
    const double C4844 = C113 * C305;
    const double C4842 = C113 * C294;
    const double C5309 = C113 * C931;
    const double C8977 = (2 * C30821 * C30854) / C29681;
    const double C18610 = C30854 / C29681;
    const double C8980 =
        (((C30749 - (C29698 * 2 * C29701) / C29681) * ae) / C29681 -
         C29699 / C29685) /
            (2 * C29681) +
        ((C29698 * ((0 * ae) / C29681 - C29701 / C29683) + C18611) * ae) /
            C29681;
    const double C155 = C30749 * C139;
    const double C338 = C30749 * C325;
    const double C525 = C30749 * C512;
    const double C18621 = C18611 * C512;
    const double C29746 = C29739 + C29745;
    const double C29751 = 2 * C29748;
    const double C29862 = C29720 * C29748;
    const double C29904 = C29721 * C29748;
    const double C29856 = C29853 + C29854;
    const double C29901 = C29899 + C29900;
    const double C158 = C30749 * C140;
    const double C342 = C30749 * C326;
    const double C345 = C30749 * C328;
    const double C529 = C30749 * C513;
    const double C18630 = C18611 * C513;
    const double C532 = C30749 * C515;
    const double C18978 = C18611 * C515;
    const double C954 = C30749 * C947;
    const double C18800 = C18611 * C947;
    const double C29775 = C29769 + C29774;
    const double C29780 = 2 * C29778;
    const double C29861 = ae * C29778;
    const double C29860 = C29720 * C29778;
    const double C1171 = (2 * (ae * C29770 + C29720 * C29849) +
                          ae * (C29770 + C29778 * std::pow(C29720, 2)) +
                          C29720 * (C29849 + ae * C29720 * C29778 +
                                    C29720 * (ae * C29778 + C29720 * C29748))) /
                         C29683;
    const double C30260 = C29721 * C29778;
    const double C1160 =
        (2 * C29720 * C29770 + C29720 * (C29770 + C29778 * C29855)) / C29681;
    const double C29858 = C29769 + C29857;
    const double C29937 = C29933 + C29934;
    const double C29938 = 2 * C29932;
    const double C29936 = ae * C29932;
    const double C30340 = C29721 * C29932;
    const double C29983 = C29980 + C29981;
    const double C29814 = C29808 + C29813;
    const double C29819 = 2 * C29817;
    const double C29903 = be * C29817;
    const double C29919 = C29721 * C29817;
    const double C1314 =
        (ae * (C29770 + C29721 * (C29721 * C29778 + C29876 * be) +
               C29721 * C29876 * be) +
         C29720 * (C29849 + be * C29721 * C29817 +
                   C29721 * (be * C29817 + C29721 * C29748))) /
        C29683;
    const double C30203 = C29720 * C29817;
    const double C2005 =
        (2 * C29721 * C29809 + C29721 * (C29809 + C29817 * C29915)) / C29681;
    const double C29917 = C29808 + C29916;
    const double C29974 = C29969 + C29970;
    const double C29973 = be * C29968;
    const double C30083 = 2 * C29968;
    const double C5639 = C30749 * C1319;
    const double C25397 = C18611 * C1319;
    const double C30293 = C30288 + C30289;
    const double C29879 = C29844 + C29878;
    const double C29887 = C29720 * C29886;
    const double C29895 = 2 * C29886;
    const double C30030 = C29886 * be;
    const double C30094 = C29721 * C29886;
    const double C30206 = C29886 * C29855;
    const double C30263 = C29886 * C29915;
    const double C30324 = C29886 * ae;
    const double C29993 = 2 * C29972;
    const double C30043 = C29972 * be;
    const double C30060 = C29721 * C29972;
    const double C30303 = C29972 * ae;
    const double C30343 = C29972 * C29915;
    const double C29975 = C29844 + C29971;
    const double C29997 = C29989 * be;
    const double C30104 = 2 * C29989;
    const double C29996 = C29987 + C29988;
    const double C30057 = C29844 + C30055;
    const double C30307 = C30301 + C30302;
    const double C29755 = C29744 + C29754;
    const double C29955 = C29949 + C29950;
    const double C29999 = C29991 + C29992;
    const double C30018 = C29720 * C30015;
    const double C30032 = C29721 * C30015;
    const double C29794 = C29781 + C29793;
    const double C29957 = C29781 + C29952;
    const double C30020 = C30016 * C29855;
    const double C29833 = C29820 + C29832;
    const double C30066 = C29820 + C30063;
    const double C30096 = C30071 * C29915;
    const double C4847 = C30749 * C327;
    const double C4852 = C30749 * C1170;
    const double C148 = C30749 * C126;
    const double C153 = C30749 * C128;
    const double C336 = C30749 * C306;
    const double C340 = C30749 * C308;
    const double C4845 = C30749 * C310;
    const double C343 = C30749 * C312;
    const double C523 = C30749 * C493;
    const double C18617 = C18611 * C493;
    const double C5310 = C30749 * C936;
    const double C24371 = C18611 * C936;
    const double C4850 = C30749 * C1158;
    const double C5312 = C30749 * C946;
    const double C24375 = C18611 * C946;
    const double C151 = C113 * C127;
    const double C154 = C113 * C129;
    const double C337 = C113 * C307;
    const double C4848 = C113 * C311;
    const double C524 = C113 * C494;
    const double C528 = C113 * C496;
    const double C533 = C113 * C500;
    const double C5311 = C113 * C937;
    const double C5635 = C30749 * C1313;
    const double C24992 = C18611 * C1313;
    const double C5316 = C30749 * C1316;
    const double C24384 = C18611 * C1316;
    const double C313 =
        (C29728 * C29805 + C29720 * (C29720 * C29809 + C30134 * ae) +
         C29720 * C30134 * ae) /
        C29681;
    const double C499 =
        (C29728 * C29766 + C29721 * (C29721 * C29770 + C30134 * be) +
         C29721 * C30134 * be) /
        C29681;
    const double C938 =
        (C29721 * C29720 * C29770 + C29720 * C30134 * be) / C29681;
    const double C939 = (C29721 * (C29720 * C29809 + C30134 * ae)) / C29681;
    const double C1161 =
        (2 * (C29720 * C29809 + C30134 * ae) +
         C29720 * (C29809 + C29720 * (C29720 * C29817 + C29876 * ae) +
                   C29720 * C29876 * ae) +
         (C30134 + C29876 * C29855) * ae) /
        C29681;
    const double C1303 = (C29721 * (C29770 + C29778 * C29855) +
                          (C30134 + C29876 * C29855) * be) /
                         C29681;
    const double C2004 =
        (2 * (C29721 * C29770 + C30134 * be) +
         C29721 * (C29770 + C29721 * (C29721 * C29778 + C29876 * be) +
                   C29721 * C29876 * be) +
         (C30134 + C29876 * C29915) * be) /
        C29681;
    const double C298 = C29728 * C30131 + C30134 * C29855;
    const double C485 = C29728 * C30131 + C30134 * C29915;
    const double C932 = C29721 * C29720 * C30134;
    const double C1153 =
        2 * C29720 * C30134 + C29720 * (C30134 + C29876 * C29855);
    const double C1287 = C29720 * C30134 + C30205 * C29915;
    const double C1290 = C29721 * (C30134 + C29876 * C29855);
    const double C1997 =
        2 * C29721 * C30134 + C29721 * (C30134 + C29876 * C29915);
    const double C119 = 3 * (C30131 + C29874 * C29736) +
                        C29728 * (2 * C30134 + C29728 * C30138);
    const double C299 = C30131 + C29874 * C29736 + C30138 * C29855;
    const double C300 = C29720 * (2 * C30134 + C29728 * C30138);
    const double C486 = C30131 + C29874 * C29736 + C30138 * C29915;
    const double C487 = C29721 * (2 * C30134 + C29728 * C30138);
    const double C933 = C29721 * C29720 * C30138;
    const double C1295 =
        (C29720 * C29766 + C29721 * (C29721 * C29852 + C30197 * be) +
         C29721 * C30197 * be) /
        C29681;
    const double C2393 =
        (2 * (C29721 * C29852 + C30197 * be) +
         C29721 * (C29852 + C29721 * (C29721 * C29932 + C29884 * be) +
                   C29721 * C29884 * be) +
         (C30197 + C29884 * C29915) * be) /
        C29681;
    const double C1286 = C29720 * C30131 + C30197 * C29915;
    const double C2390 =
        2 * C29721 * C30197 + C29721 * (C30197 + C29884 * C29915);
    const double C30199 = C30195 + C30196;
    const double C1155 = 3 * (C30131 + C29874 * C29855) +
                         C29720 * (2 * C30197 + C29720 * C30200);
    const double C1292 = C30131 + C29874 * C29855 + C30200 * C29915;
    const double C1694 = C29721 * (2 * C30197 + C29720 * C30200);
    const double C30256 = C30252 + C30253;
    const double C1999 = 3 * (C30131 + C29874 * C29915) +
                         C29721 * (2 * C30254 + C29721 * C30257);
    const double C341 = C113 * C309;
    const double C527 = C30749 * C495;
    const double C18626 = C18611 * C495;
    const double C4851 = C113 * C1159;
    const double C5314 = C30749 * C1301;
    const double C24380 = C18611 * C1301;
    const double C152 = C113 * C118;
    const double C339 = C113 * C296;
    const double C526 = C113 * C483;
    const double C4849 = C113 * C1152;
    const double C5313 = C113 * C1289;
    const double C29784 = C29728 * C29783;
    const double C29788 = 3 * C29783;
    const double C29868 = ae * C29783;
    const double C29867 = C29720 * C29783;
    const double C30268 = C29721 * C29783;
    const double C29865 = C29778 + C29863;
    const double C30019 = 2 * C30013;
    const double C30017 = ae * C30013;
    const double C30381 = C29721 * C30013;
    const double C29942 = C29720 * C29939;
    const double C29951 = 3 * C29939;
    const double C29947 = ae * C29939;
    const double C30348 = C29721 * C29939;
    const double C29958 = C29744 + C29954;
    const double C29823 = C29728 * C29822;
    const double C29827 = 3 * C29822;
    const double C29907 = be * C29822;
    const double C29923 = C29721 * C29822;
    const double C30211 = C29720 * C29822;
    const double C29921 = C29817 + C29920;
    const double C30072 = be * C30068;
    const double C30100 = 2 * C30068;
    const double C30002 = C29744 + C29998;
    const double C30078 = be * C30058;
    const double C30084 = C29721 * C30058;
    const double C30087 = 3 * C30058;
    const double C29892 = C29720 * C29891;
    const double C29896 = C29728 * C29891;
    const double C30214 = C29891 * C29855;
    const double C30271 = C29891 * C29915;
    const double C30064 = C29972 + C30061;
    const double C30004 = C29720 * C30000;
    const double C30351 = C30000 * C29915;
    const double C30039 = C29886 + C30036;
    const double C30384 = C30070 * C29915;
    const double C30097 = C29886 + C30095;
    const double C30105 = C29721 * C30065;
    const double C104 = (2 * C30821 * C30822) / C29681;
    const double C13128 = C30822 / C29681;
    const double C30528 = C30527 * C30521;
    const double C30535 = C30527 / C30534;
    const double C30793 = C30533 * C30527;
    const double C30791 = C30527 / C30516;
    const double C291 = (C30525 * std::pow(C30521, 2)) / C30519 + C30526;
    const double C30537 = C30536 * C30521;
    const double C30797 = C30518 * C30536;
    const double C30795 = 2 * C30536;
    const double C30840 = C30536 / C30799;
    const double C112 = C30536 / C30833;
    const double C2871 = C30536 / C30520;
    const double C30826 = C30792 / C30516;
    const double C292 = (-2 * C30533 * C30792) / C30516;
    const double C30855 = C30824 / C30519;
    const double C1078 = (C30553 * std::pow(C30608, 2)) / C30519 + C30607;
    const double C30610 = C30609 * C30608;
    const double C30615 = C30609 / C30534;
    const double C30805 = C30609 / C30516;
    const double C30802 = C30533 * C30609;
    const double C30617 = C30616 * C30608;
    const double C30811 = C30606 * C30616;
    const double C30810 = 2 * C30616;
    const double C30846 = C30616 / C30799;
    const double C1150 = C30616 / C30833;
    const double C2868 = C30616 / C30520;
    const double C30842 = C30807 / C30516;
    const double C1079 = (-2 * C30533 * C30807) / C30516;
    const double C30860 = C30834 / C30519;
    const double C1816 = (C30571 * std::pow(C30650, 2)) / C30519 + C30649;
    const double C30652 = C30651 * C30650;
    const double C30657 = C30651 / C30534;
    const double C30806 = C30651 / C30516;
    const double C30804 = C30533 * C30651;
    const double C30659 = C30658 * C30650;
    const double C30817 = C30648 * C30658;
    const double C30816 = 2 * C30658;
    const double C30852 = C30658 / C30799;
    const double C1995 = C30658 / C30833;
    const double C3770 = C30658 / C30520;
    const double C30848 = C30813 / C30516;
    const double C1817 = (-2 * C30533 * C30813) / C30516;
    const double C30862 = C30837 / C30519;
    const double C4727 =
        (((0 - (C29679 * C29680) / C29681) * ae) / C29681 - (0 * be) / C29685) /
            (2 * C29681) +
        ((C29679 * (((C30736 - (C29679 * 2 * C29686) / C29681) * ae) / C29681 -
                    C29680 / C29685) +
          C13126) *
         ae) /
            C29681 +
        (0 * ae) / C29681 - C29686 / C29683;
    const double C18636 = C18612 * C129;
    const double C18632 = C18612 * C118;
    const double C18627 = C18612 * C127;
    const double C18623 = C18612 * C117;
    const double C18620 = C18612 * C125;
    const double C18616 = C18612 * C116;
    const double C18814 = C18612 * C309;
    const double C18810 = C18612 * C296;
    const double C18797 = C18612 * C307;
    const double C18793 = C18612 * C295;
    const double C18992 = C18612 * C496;
    const double C18988 = C18612 * C483;
    const double C18984 = C18612 * C500;
    const double C18975 = C18612 * C494;
    const double C18971 = C18612 * C482;
    const double C24381 = C18612 * C311;
    const double C24377 = C18612 * C297;
    const double C24374 = C18612 * C305;
    const double C24370 = C18612 * C294;
    const double C24989 = C18612 * C937;
    const double C24985 = C18612 * C931;
    const double C25226 = C18612 * C1159;
    const double C25222 = C18612 * C1152;
    const double C25392 = C18612 * C1289;
    const double C18629 = C18613 * C496;
    const double C18625 = C18613 * C483;
    const double C18622 = C18613 * C494;
    const double C18618 = C18613 * C482;
    const double C18977 = C18613 * C500;
    const double C24379 = C18613 * C1289;
    const double C24376 = C18613 * C937;
    const double C24372 = C18613 * C931;
    const double C18644 = C18610 * C140;
    const double C18635 = C18610 * C139;
    const double C18631 = C18610 * C128;
    const double C18628 = C18610 * C138;
    const double C18624 = C18610 * C126;
    const double C18619 = C18610 * C137;
    const double C18615 = C18610 * C124;
    const double C18813 = C18610 * C326;
    const double C18809 = C18610 * C308;
    const double C18805 = C18610 * C328;
    const double C18801 = C18610 * C312;
    const double C18798 = C18610 * C325;
    const double C18794 = C18610 * C306;
    const double C18991 = C18610 * C513;
    const double C18987 = C18610 * C495;
    const double C18983 = C18610 * C515;
    const double C18976 = C18610 * C512;
    const double C18972 = C18610 * C493;
    const double C19477 = C18610 * C947;
    const double C24382 = C18610 * C327;
    const double C24378 = C18610 * C310;
    const double C24373 = C18610 * C324;
    const double C24369 = C18610 * C304;
    const double C24990 = C18610 * C946;
    const double C24986 = C18610 * C936;
    const double C25225 = C18610 * C1170;
    const double C25221 = C18610 * C1158;
    const double C25404 = C18610 * C1319;
    const double C25395 = C18610 * C1316;
    const double C25391 = C18610 * C1301;
    const double C25387 = C18610 * C1313;
    const double C8979 =
        (((0 - (C29698 * C29699) / C29681) * ae) / C29681 - (0 * be) / C29685) /
            (2 * C29681) +
        ((C29698 * (((C30749 - (C29698 * 2 * C29701) / C29681) * ae) / C29681 -
                    C29699 / C29685) +
          C18610) *
         ae) /
            C29681 +
        (0 * ae) / C29681 - C29701 / C29683;
    const double C141 =
        (4 * (2 * C29728 * C29739 + C29728 * C29746) +
         C29728 * (3 * C29746 +
                   C29728 * (2 * C29728 * C29744 +
                             C29728 * (C29744 + std::pow(C29734, 7) * bs[7] *
                                                    C29726 * C29736)))) /
        C29683;
    const double C2014 =
        (2 * (be * C29805 + C29721 * C29732) +
         be * (C29805 + C29808 * std::pow(C29721, 2)) +
         C29721 * (C29732 + be * C29721 * C29808 + C29721 * C29901)) /
        C29683;
    const double C329 = (C29732 + C29739 * C29736 + ae * C29720 * C29775 +
                         C29720 * (ae * C29775 + C29720 * C29746)) /
                        C29683;
    const double C330 = (ae * (2 * C29770 + C29728 * C29775) +
                         C29720 * (2 * C29728 * C29739 + C29728 * C29746)) /
                        C29683;
    const double C130 = (3 * (C29766 + C29769 * C29736) +
                         C29728 * (2 * C29770 + C29728 * C29775)) /
                        C29681;
    const double C314 = (C29766 + C29769 * C29736 + C29775 * C29855) / C29681;
    const double C316 = (C29720 * (2 * C29770 + C29728 * C29775)) / C29681;
    const double C501 =
        (C29766 + C29769 * C29736 + C29721 * (C29721 * C29775 + C30138 * be) +
         C29721 * C30138 * be) /
        C29681;
    const double C503 = (C29721 * (2 * C29770 + C29728 * C29775) +
                         (2 * C30134 + C29728 * C30138) * be) /
                        C29681;
    const double C940 =
        (C29721 * C29720 * C29775 + C29720 * C30138 * be) / C29681;
    const double C1162 =
        (2 * C29720 * C29775 + C29720 * (C29775 + C29783 * C29855)) / C29681;
    const double C29864 = C29861 + C29862;
    const double C1317 = (be * C29809 + C29721 * C29849 +
                          ae * (C29721 * C29860 + C29720 * C29876 * be) +
                          C29720 * (ae * (C29721 * C29778 + C29876 * be) +
                                    C29720 * (be * C29817 + C29721 * C29748))) /
                         C29683;
    const double C1297 =
        (C29720 * C29770 + C29721 * (C29721 * C29860 + C30205 * be) +
         C29721 * C30205 * be) /
        C29681;
    const double C1434 = C30749 * C1171;
    const double C19998 = C18610 * C1171;
    const double C30264 = C30260 + C30261;
    const double C1432 = C30749 * C1160;
    const double C19994 = C18610 * C1160;
    const double C1173 =
        (3 * (C29732 + ae * C29852 + C29720 * C29856) +
         ae * (2 * C29852 + C29720 * C29858) +
         C29720 * (2 * C29856 + ae * C29858 +
                   C29720 * (C29739 + ae * C29720 * C29773 +
                             C29720 * (ae * C29773 + C29720 * C29744)))) /
        C29683;
    const double C1703 =
        (2 * (ae * (C29721 * C29769 + C29874 * be) + C29720 * C29901) +
         ae * (C29721 * C29858 + (C29874 + C29844 * C29855) * be) +
         C29720 * (C29901 + ae * (C29721 * C29720 * C29773 + C29884 * be) +
                   C29720 * (ae * (C29721 * C29773 + C29844 * be) +
                             C29720 * (be * C29812 + C29721 * C29744)))) /
        C29683;
    const double C1164 = (3 * (C29766 + C29769 * C29855) +
                          C29720 * (2 * C29852 + C29720 * C29858)) /
                         C29681;
    const double C1307 =
        (C29766 + C29769 * C29855 + C29721 * (C29721 * C29858 + C30200 * be) +
         C29721 * C30200 * be) /
        C29681;
    const double C1697 = (C29721 * (2 * C29852 + C29720 * C29858) +
                          (2 * C30197 + C29720 * C30200) * be) /
                         C29681;
    const double C29941 = C29720 * C29937;
    const double C29946 = 2 * C29937;
    const double C29940 = C29739 + C29936;
    const double C30344 = C30340 + C30341;
    const double C29984 = ae * C29983;
    const double C30362 = C29721 * C29983;
    const double C30371 = 2 * C29983;
    const double C516 = (C29732 + C29739 * C29736 + be * C29721 * C29814 +
                         C29721 * (be * C29814 + C29721 * C29746)) /
                        C29683;
    const double C517 = (be * (2 * C29809 + C29728 * C29814) +
                         C29721 * (2 * C29728 * C29739 + C29728 * C29746)) /
                        C29683;
    const double C948 =
        (ae * (C29721 * C29775 +
               (C29764 * C29763 + C29730 * C29729 * C29736) * be) +
         C29720 * (be * C29814 + C29721 * C29746)) /
        C29683;
    const double C131 = (3 * (C29805 + C29808 * C29736) +
                         C29728 * (2 * C29809 + C29728 * C29814)) /
                        C29681;
    const double C315 =
        (C29805 + C29808 * C29736 + C29720 * (C29720 * C29814 + C30138 * ae) +
         C29720 * C30138 * ae) /
        C29681;
    const double C317 = (C29720 * (2 * C29809 + C29728 * C29814) +
                         (2 * C30134 + C29728 * C30138) * ae) /
                        C29681;
    const double C502 = (C29805 + C29808 * C29736 + C29814 * C29915) / C29681;
    const double C504 = (C29721 * (2 * C29809 + C29728 * C29814)) / C29681;
    const double C941 = (C29721 * (C29720 * C29814 + C30138 * ae)) / C29681;
    const double C2007 =
        (2 * C29721 * C29814 + C29721 * (C29814 + C29822 * C29915)) / C29681;
    const double C29905 = C29903 + C29904;
    const double C2174 = C30749 * C1314;
    const double C19479 = C18611 * C1314;
    const double C20906 = C18610 * C1314;
    const double C30207 = C30203 + C30204;
    const double C2287 = C113 * C2005;
    const double C18986 = C18613 * C2005;
    const double C21043 = C18612 * C2005;
    const double C2017 =
        (3 * (C29732 + be * C29914 + C29721 * C29901) +
         be * (2 * C29914 + C29721 * C29917) +
         C29721 * (2 * C29901 + be * C29917 +
                   C29721 * (C29739 + be * C29721 * C29812 +
                             C29721 * (be * C29812 + C29721 * C29744)))) /
        C29683;
    const double C2399 =
        (ae * (2 * (C29721 * C29769 + C29874 * be) +
               C29721 * (C29769 + C29721 * (C29721 * C29773 + C29844 * be) +
                         C29721 * C29844 * be) +
               (C29874 + C29844 * C29915) * be) +
         C29720 * (2 * C29901 + be * C29917 +
                   C29721 * (C29739 + be * C29721 * C29812 +
                             C29721 * (be * C29812 + C29721 * C29744)))) /
        C29683;
    const double C2009 = (3 * (C29805 + C29808 * C29915) +
                          C29721 * (2 * C29914 + C29721 * C29917)) /
                         C29681;
    const double C29977 = C29721 * C29974;
    const double C29982 = C29720 * C29974;
    const double C30077 = 2 * C29974;
    const double C29976 = C29739 + C29973;
    const double C30295 = C29720 * C30293;
    const double C30300 = 2 * C30293;
    const double C30144 = C29728 * C29879;
    const double C30150 = 3 * C29879;
    const double C30213 = C29720 * C29879;
    const double C30212 = C29879 * ae;
    const double C30270 = C29721 * C29879;
    const double C30269 = C29879 * be;
    const double C1163 =
        (2 * (C29720 * C29814 + C30138 * ae) +
         C29720 * (C29814 + C29720 * (C29720 * C29822 + C29879 * ae) +
                   C29720 * C29879 * ae) +
         (C30138 + C29879 * C29855) * ae) /
        C29681;
    const double C1305 = (C29721 * (C29775 + C29783 * C29855) +
                          (C30138 + C29879 * C29855) * be) /
                         C29681;
    const double C2006 =
        (2 * (C29721 * C29775 + C30138 * be) +
         C29721 * (C29775 + C29721 * (C29721 * C29783 + C29879 * be) +
                   C29721 * C29879 * be) +
         (C30138 + C29879 * C29915) * be) /
        C29681;
    const double C1154 =
        2 * C29720 * C30138 + C29720 * (C30138 + C29879 * C29855);
    const double C1291 = C29721 * (C30138 + C29879 * C29855);
    const double C1998 =
        2 * C29721 * C30138 + C29721 * (C30138 + C29879 * C29915);
    const double C1320 =
        (C29849 + be * C29721 * C29817 +
         C29721 * (be * C29817 + C29721 * C29748) +
         ae * (C29860 + C29721 * (C29721 * C29720 * C29789 + C29887 * be) +
               C29721 * C29887 * be) +
         C29720 *
             (ae * (C29778 + C29721 * (C29721 * C29789 + C29886 * be) +
                    C29721 * C29886 * be) +
              C29720 * (C29748 + be * C29721 * C29828 +
                        C29721 * (be * C29828 + C29721 * C29728 * C29753)))) /
        C29683;
    const double C30326 = 2 * C29887;
    const double C30325 = C29887 * ae;
    const double C30383 = C29721 * C29887;
    const double C30382 = C29887 * be;
    const double C2395 =
        (2 * (C29721 * C29860 + C30205 * be) +
         C29721 * (C29860 + C29721 * (C29721 * C30013 + C29887 * be) +
                   C29721 * C29887 * be) +
         (C30205 + C29887 * C29915) * be) /
        C29681;
    const double C2391 =
        2 * C29721 * C30205 + C29721 * (C30205 + C29887 * C29915);
    const double C30034 = C30029 + C30030;
    const double C30391 = 2 * C30094;
    const double C30390 = C30094 * be;
    const double C30208 = C29876 + C30206;
    const double C30265 = C29876 + C30263;
    const double C30328 = C30323 + C30324;
    const double C30046 = C30042 + C30043;
    const double C30400 = 2 * C30060;
    const double C30399 = C30060 * be;
    const double C30345 = C29884 + C30343;
    const double C30292 = C29720 * C29975;
    const double C30305 = 3 * C29975;
    const double C30304 = C29975 * ae;
    const double C30350 = C29721 * C29975;
    const double C30349 = C29975 * be;
    const double C6307 =
        (2 * (C29721 * C29858 + C30200 * be) +
         C29721 * (C29858 + C29721 * (C29721 * C29939 + C29975 * be) +
                   C29721 * C29975 * be) +
         (C30200 + C29975 * C29915) * be) /
        C29681;
    const double C6304 =
        2 * C29721 * C30200 + C29721 * (C30200 + C29975 * C29915);
    const double C30001 = C29721 * C29996;
    const double C30044 = ae * C29996;
    const double C30365 = C29721 * C30057;
    const double C30374 = 3 * C30057;
    const double C30373 = C30057 * be;
    const double C30309 = C29720 * C30307;
    const double C30406 = C30307 * C29915;
    const double C29756 = C29728 * C29755;
    const double C29869 = C29720 * C29755;
    const double C29908 = C29721 * C29755;
    const double C1172 = (2 * (ae * C29775 + C29720 * C29746) +
                          ae * (C29775 + C29783 * std::pow(C29720, 2)) +
                          C29720 * (C29746 + ae * C29720 * C29783 +
                                    C29720 * (ae * C29783 + C29720 * C29755))) /
                         C29683;
    const double C1315 =
        (ae * (C29775 + C29721 * (C29721 * C29783 + C29879 * be) +
               C29721 * C29879 * be) +
         C29720 * (C29746 + be * C29721 * C29822 +
                   C29721 * (be * C29822 + C29721 * C29755))) /
        C29683;
    const double C29959 = C29720 * C29955;
    const double C30003 = C29721 * C29999;
    const double C30045 = C29720 * C29999;
    const double C30022 = C30014 + C30018;
    const double C30035 = C30031 + C30032;
    const double C29795 = C29728 * C29794;
    const double C29870 = C29794 * C29855;
    const double C29960 = C29720 * C29957;
    const double C30023 = C29789 + C30020;
    const double C29834 = C29728 * C29833;
    const double C29924 = C29833 * C29915;
    const double C30089 = C29721 * C30066;
    const double C30098 = C29828 + C30096;
    const double C164 = C148 - C149;
    const double C13281 = C335 - C336;
    const double C13279 = C336 - C335;
    const double C4855 = C4845 - C4846;
    const double C165 = C150 - C151;
    const double C167 = C154 - C155;
    const double C13282 = C337 - C338;
    const double C13280 = C338 - C337;
    const double C4856 = C4847 - C4848;
    const double C547 = C528 - C529;
    const double C346 = C113 * C313;
    const double C18806 = C18612 * C313;
    const double C530 = C30749 * C499;
    const double C18979 = C18610 * C499;
    const double C18974 = C18611 * C499;
    const double C952 = C30749 * C938;
    const double C18796 = C18611 * C938;
    const double C19473 = C18610 * C938;
    const double C955 = C113 * C939;
    const double C18799 = C18613 * C939;
    const double C19478 = C18612 * C939;
    const double C1433 = C113 * C1161;
    const double C19997 = C18612 * C1161;
    const double C1590 = C30749 * C1303;
    const double C18803 = C18611 * C1303;
    const double C20196 = C18610 * C1303;
    const double C2286 = C30749 * C2004;
    const double C18981 = C18611 * C2004;
    const double C21040 = C18610 * C2004;
    const double C344 = C113 * C298;
    const double C18802 = C18612 * C298;
    const double C531 = C113 * C485;
    const double C18980 = C18612 * C485;
    const double C18973 = C18613 * C485;
    const double C953 = C113 * C932;
    const double C18795 = C18613 * C932;
    const double C19474 = C18612 * C932;
    const double C1431 = C113 * C1153;
    const double C19993 = C18612 * C1153;
    const double C2171 = C113 * C1287;
    const double C19476 = C18613 * C1287;
    const double C20901 = C18612 * C1287;
    const double C1589 = C113 * C1290;
    const double C18804 = C18613 * C1290;
    const double C20195 = C18612 * C1290;
    const double C2285 = C113 * C1997;
    const double C18982 = C18613 * C1997;
    const double C21039 = C18612 * C1997;
    const double C157 = C113 * C119;
    const double C18639 = C18612 * C119;
    const double C348 = C113 * C299;
    const double C18817 = C18612 * C299;
    const double C352 = C113 * C300;
    const double C19133 = C18612 * C300;
    const double C535 = C113 * C486;
    const double C18995 = C18612 * C486;
    const double C18990 = C18613 * C486;
    const double C539 = C113 * C487;
    const double C18634 = C18613 * C487;
    const double C19271 = C18612 * C487;
    const double C957 = C113 * C933;
    const double C18812 = C18613 * C933;
    const double C19481 = C18612 * C933;
    const double C5633 = C30749 * C1295;
    const double C24988 = C18611 * C1295;
    const double C25383 = C18610 * C1295;
    const double C6676 = C30749 * C2393;
    const double C25385 = C18611 * C2393;
    const double C26698 = C18610 * C2393;
    const double C5634 = C113 * C1286;
    const double C24987 = C18613 * C1286;
    const double C25384 = C18612 * C1286;
    const double C6675 = C113 * C2390;
    const double C25386 = C18613 * C2390;
    const double C26697 = C18612 * C2390;
    const double C1165 =
        (3 * (C29805 + C29720 * C30199 + C30197 * ae) +
         C29720 * (2 * C30199 +
                   C29720 * (C29808 + C29720 * (C29720 * C29812 + C29844 * ae) +
                             C29884 * ae) +
                   C30200 * ae) +
         (2 * C30197 + C29720 * C30200) * ae) /
        C29681;
    const double C1296 =
        (C29720 * C29805 + C30131 * ae + C30199 * C29915) / C29681;
    const double C1302 =
        (C29721 * (C29805 + C29720 * C30199 + C30197 * ae)) / C29681;
    const double C1308 =
        (C29805 + C29720 * C30199 + C30197 * ae +
         (C29808 + C29720 * (C29720 * C29812 + C29844 * ae) + C29884 * ae) *
             C29915) /
        C29681;
    const double C1698 =
        (C29721 * (2 * C30199 +
                   C29720 * (C29808 + C29720 * (C29720 * C29812 + C29844 * ae) +
                             C29884 * ae) +
                   C30200 * ae)) /
        C29681;
    const double C2394 =
        (2 * C29721 * C30199 +
         C29721 * (C30199 + (C29720 * C29812 + C29844 * ae) * C29915)) /
        C29681;
    const double C6310 =
        (3 * (C30199 + C30293 * C29915) +
         C29721 * (2 * C29721 * C30293 + C29721 * (C30293 + C30307 * C29915))) /
        C29681;
    const double C5500 = C113 * C1155;
    const double C25229 = C18612 * C1155;
    const double C5638 = C113 * C1292;
    const double C25399 = C18612 * C1292;
    const double C25394 = C18613 * C1292;
    const double C5642 = C113 * C1694;
    const double C25224 = C18613 * C1694;
    const double C25861 = C18612 * C1694;
    const double C2008 =
        (3 * (C29766 + C29721 * C30256 + C30254 * be) +
         C29721 *
             (2 * C30256 + C29721 * (C29769 + C29721 * C29983 + C30054 * be) +
              C30257 * be) +
         (2 * C30254 + C29721 * C30257) * be) /
        C29681;
    const double C360 = C341 - C342;
    const double C13286 = C342 - C341;
    const double C5498 = C4851 - C4852;
    const double C166 = C152 - C153;
    const double C359 = C339 - C340;
    const double C13285 = C340 - C339;
    const double C546 = C526 - C527;
    const double C5497 = C4849 - C4850;
    const double C5631 = C5313 - C5314;
    const double C29785 = C29780 + C29784;
    const double C1318 = (be * C29814 + C29721 * C29746 +
                          ae * (C29721 * C29867 + C29720 * C29879 * be) +
                          C29720 * (ae * (C29721 * C29783 + C29879 * be) +
                                    C29720 * (be * C29822 + C29721 * C29755))) /
                         C29683;
    const double C1166 = (3 * (C29770 + C29778 * C29855) +
                          C29720 * (2 * C29860 + C29720 * C29865)) /
                         C29681;
    const double C30021 = C29748 + C30017;
    const double C29944 = C29938 + C29942;
    const double C29824 = C29819 + C29823;
    const double C2011 = (3 * (C29809 + C29817 * C29915) +
                          C29721 * (2 * C29919 + C29721 * C29921)) /
                         C29681;
    const double C30073 = C29748 + C30072;
    const double C30085 = C30083 + C30084;
    const double C1321 =
        (C29746 + be * C29721 * C29822 +
         C29721 * (be * C29822 + C29721 * C29755) +
         ae * (C29867 + C29721 * (C29721 * C29720 * C29794 + C29892 * be) +
               C29721 * C29892 * be) +
         C29720 * (ae * (C29783 + C29721 * (C29721 * C29794 + C29891 * be) +
                         C29721 * C29891 * be) +
                   C29720 * (C29755 + be * C29721 * C29833 +
                             C29721 * (be * C29833 +
                                       C29721 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C29897 = C29895 + C29896;
    const double C30216 = C29879 + C30214;
    const double C30273 = C29879 + C30271;
    const double C30401 = C29721 * C30064;
    const double C30007 = C29993 + C30004;
    const double C30353 = C29975 + C30351;
    const double C30327 = C29720 * C30039;
    const double C30386 = C29887 + C30384;
    const double C30392 = C29721 * C30097;
    const double C30106 = C30104 + C30105;
    const double C30529 = C30528 / C30519;
    const double C30827 = 2 * C30793;
    const double C30538 = C30537 / C30516;
    const double C30831 = C30797 / C30534;
    const double C30856 = C30791 - C30826;
    const double C2608 = -C30826;
    const double C30870 = C30855 + C30526;
    const double C30611 = C30610 / C30519;
    const double C30835 = 2 * C30802;
    const double C30618 = C30617 / C30516;
    const double C30845 = C30811 / C30534;
    const double C30864 = C30805 - C30842;
    const double C2500 = -C30842;
    const double C30873 = C30860 + C30607;
    const double C30653 = C30652 / C30519;
    const double C30838 = 2 * C30804;
    const double C30660 = C30659 / C30516;
    const double C30851 = C30817 / C30534;
    const double C30867 = C30806 - C30848;
    const double C3262 = -C30848;
    const double C30874 = C30862 + C30649;
    const double C163 = C30749 * C141;
    const double C349 = C30749 * C329;
    const double C18822 = C18610 * C329;
    const double C353 = C30749 * C330;
    const double C19138 = C18610 * C330;
    const double C156 = C30749 * C130;
    const double C18640 = C18610 * C130;
    const double C347 = C30749 * C314;
    const double C18818 = C18610 * C314;
    const double C351 = C30749 * C316;
    const double C19134 = C18610 * C316;
    const double C534 = C30749 * C501;
    const double C18996 = C18610 * C501;
    const double C18989 = C18611 * C501;
    const double C538 = C30749 * C503;
    const double C18633 = C18611 * C503;
    const double C19272 = C18610 * C503;
    const double C956 = C30749 * C940;
    const double C18811 = C18611 * C940;
    const double C19482 = C18610 * C940;
    const double C1436 = C30749 * C1162;
    const double C1174 =
        (3 * (C29849 + ae * C29860 + C29720 * C29864) +
         ae * (2 * C29860 + C29720 * C29865) +
         C29720 *
             (2 * C29864 + ae * C29865 +
              C29720 * (C29748 + ae * C29720 * C29789 +
                        C29720 * (ae * C29789 + C29720 * C29728 * C29753)))) /
        C29683;
    const double C1592 = C30749 * C1317;
    const double C18807 = C18611 * C1317;
    const double C20200 = C18610 * C1317;
    const double C2172 = C30749 * C1297;
    const double C19475 = C18611 * C1297;
    const double C20902 = C18610 * C1297;
    const double C5501 = C30749 * C1173;
    const double C25234 = C18610 * C1173;
    const double C5643 = C30749 * C1703;
    const double C25227 = C18611 * C1703;
    const double C25866 = C18610 * C1703;
    const double C5499 = C30749 * C1164;
    const double C25230 = C18610 * C1164;
    const double C5637 = C30749 * C1307;
    const double C25400 = C18610 * C1307;
    const double C25393 = C18611 * C1307;
    const double C5641 = C30749 * C1697;
    const double C25223 = C18611 * C1697;
    const double C25862 = C18610 * C1697;
    const double C29953 = C29946 + C29947;
    const double C29943 = C29940 + C29941;
    const double C30366 = C29769 + C30362;
    const double C536 = C30749 * C516;
    const double C19000 = C18610 * C516;
    const double C18993 = C18611 * C516;
    const double C540 = C30749 * C517;
    const double C18637 = C18611 * C517;
    const double C19276 = C18610 * C517;
    const double C958 = C30749 * C948;
    const double C18815 = C18611 * C948;
    const double C19486 = C18610 * C948;
    const double C159 = C113 * C131;
    const double C18643 = C18612 * C131;
    const double C350 = C113 * C315;
    const double C18821 = C18612 * C315;
    const double C354 = C113 * C317;
    const double C19137 = C18612 * C317;
    const double C537 = C113 * C502;
    const double C18999 = C18612 * C502;
    const double C18994 = C18613 * C502;
    const double C541 = C113 * C504;
    const double C18638 = C18613 * C504;
    const double C19275 = C18612 * C504;
    const double C959 = C113 * C941;
    const double C18816 = C18613 * C941;
    const double C19485 = C18612 * C941;
    const double C2291 = C113 * C2007;
    const double C19001 = C18613 * C2007;
    const double C1704 =
        (2 * (ae * (C29721 * C29778 + C29876 * be) + C29720 * C29905) +
         ae * (C29721 * C29865 + (C29876 + C29886 * C29855) * be) +
         C29720 *
             (C29905 + ae * (C29721 * C29720 * C29789 + C29887 * be) +
              C29720 * (ae * (C29721 * C29789 + C29886 * be) +
                        C29720 * (be * C29828 + C29721 * C29728 * C29753)))) /
        C29683;
    const double C2015 =
        (2 * (be * C29809 + C29721 * C29849) +
         be * (C29809 + C29817 * std::pow(C29721, 2)) +
         C29721 * (C29849 + be * C29721 * C29817 + C29721 * C29905)) /
        C29683;
    const double C2018 =
        (3 * (C29849 + be * C29919 + C29721 * C29905) +
         be * (2 * C29919 + C29721 * C29921) +
         C29721 *
             (2 * C29905 + be * C29921 +
              C29721 * (C29748 + be * C29721 * C29828 +
                        C29721 * (be * C29828 + C29721 * C29728 * C29753)))) /
        C29683;
    const double C2400 =
        (ae * (2 * (C29721 * C29778 + C29876 * be) +
               C29721 * (C29778 + C29721 * (C29721 * C29789 + C29886 * be) +
                         C29721 * C29886 * be) +
               (C29876 + C29886 * C29915) * be) +
         C29720 *
             (2 * C29905 + be * C29921 +
              C29721 * (C29748 + be * C29721 * C29828 +
                        C29721 * (be * C29828 + C29721 * C29728 * C29753)))) /
        C29683;
    const double C1298 =
        (C29720 * C29809 + C30134 * ae + C30207 * C29915) / C29681;
    const double C1304 =
        (C29721 * (C29809 + C29720 * C30207 + C30205 * ae)) / C29681;
    const double C1310 =
        (C29809 + C29720 * C30207 + C30205 * ae +
         (C29817 + C29720 * (C29720 * C29828 + C29886 * ae) + C29887 * ae) *
             C29915) /
        C29681;
    const double C2396 =
        (2 * C29721 * C30207 +
         C29721 * (C30207 + (C29720 * C29828 + C29886 * ae) * C29915)) /
        C29681;
    const double C6678 = C30749 * C2399;
    const double C25389 = C18611 * C2399;
    const double C26702 = C18610 * C2399;
    const double C29985 = C29984 + C29982;
    const double C30080 = C30077 + C30078;
    const double C29978 = C29976 + C29977;
    const double C30296 = C29808 + C30295;
    const double C30145 = C30143 + C30144;
    const double C1299 =
        (C29720 * C29775 + C29721 * (C29721 * C29867 + C30213 * be) +
         C29721 * C30213 * be) /
        C29681;
    const double C2397 =
        (2 * (C29721 * C29867 + C30213 * be) +
         C29721 * (C29867 + C29721 * (C29721 * C29720 * C29794 + C29892 * be) +
                   C29721 * C29892 * be) +
         (C30213 + C29892 * C29915) * be) /
        C29681;
    const double C1288 = C29720 * C30138 + C30213 * C29915;
    const double C2392 =
        2 * C29721 * C30213 + C29721 * (C30213 + C29892 * C29915);
    const double C30215 = C30211 + C30212;
    const double C30272 = C30268 + C30269;
    const double C1437 = C113 * C1163;
    const double C1594 = C30749 * C1305;
    const double C18820 = C18611 * C1305;
    const double C2290 = C30749 * C2006;
    const double C18998 = C18611 * C2006;
    const double C1435 = C113 * C1154;
    const double C1593 = C113 * C1291;
    const double C18819 = C18613 * C1291;
    const double C2289 = C113 * C1998;
    const double C18997 = C18613 * C1998;
    const double C6470 = C30749 * C1320;
    const double C20202 = C18611 * C1320;
    const double C30385 = C30381 + C30382;
    const double C15432 = C30749 * C2395;
    const double C20904 = C18611 * C2395;
    const double C15431 = C113 * C2391;
    const double C20903 = C18613 * C2391;
    const double C30037 = ae * C30034;
    const double C30389 = C29721 * C30034;
    const double C1167 =
        (3 * (C29809 + C29720 * C30207 + C30205 * ae) +
         C29720 * (2 * C30207 +
                   C29720 * (C29817 + C29720 * (C29720 * C29828 + C29886 * ae) +
                             C29887 * ae) +
                   C30208 * ae) +
         (2 * C30205 + C29720 * C30208) * ae) /
        C29681;
    const double C1309 =
        (C29770 + C29778 * C29855 + C29721 * (C29721 * C29865 + C30208 * be) +
         C29721 * C30208 * be) /
        C29681;
    const double C1699 = (C29721 * (2 * C29860 + C29720 * C29865) +
                          (2 * C30205 + C29720 * C30208) * be) /
                         C29681;
    const double C1700 =
        (C29721 * (2 * C30207 +
                   C29720 * (C29817 + C29720 * (C29720 * C29828 + C29886 * ae) +
                             C29887 * ae) +
                   C30208 * ae)) /
        C29681;
    const double C1156 = 3 * (C30134 + C29876 * C29855) +
                         C29720 * (2 * C30205 + C29720 * C30208);
    const double C1293 = C30134 + C29876 * C29855 + C30208 * C29915;
    const double C1695 = C29721 * (2 * C30205 + C29720 * C30208);
    const double C6568 =
        2 * C29721 * C30208 + C29721 * (C30208 + C30039 * C29915);
    const double C2010 =
        (3 * (C29770 + C29721 * C30264 + C30262 * be) +
         C29721 *
             (2 * C30264 + C29721 * (C29778 + C29721 * C30034 + C30094 * be) +
              C30265 * be) +
         (2 * C30262 + C29721 * C30265) * be) /
        C29681;
    const double C2000 = 3 * (C30134 + C29876 * C29915) +
                         C29721 * (2 * C30262 + C29721 * C30265);
    const double C30330 = C29720 * C30328;
    const double C10606 =
        (3 * (C30207 + C30328 * C29915) +
         C29721 *
             (2 * C29721 * C30328 +
              C29721 * (C30328 + (C29720 * C30071 + C30033 * ae) * C29915))) /
        C29681;
    const double C30048 = ae * C30046;
    const double C30398 = C29721 * C30046;
    const double C6309 =
        (3 * (C29852 + C29721 * C30344 + C30342 * be) +
         C29721 *
             (2 * C30344 + C29721 * (C29932 + C29721 * C30046 + C30060 * be) +
              C30345 * be) +
         (2 * C30342 + C29721 * C30345) * be) /
        C29681;
    const double C6305 = 3 * (C30197 + C29884 * C29915) +
                         C29721 * (2 * C30342 + C29721 * C30345);
    const double C30294 = C30291 + C30292;
    const double C30352 = C30348 + C30349;
    const double C6680 = C30749 * C6307;
    const double C25402 = C18611 * C6307;
    const double C6679 = C113 * C6304;
    const double C25401 = C18613 * C6304;
    const double C30005 = C29773 + C30001;
    const double C30367 = C30364 + C30365;
    const double C30310 = C29812 + C30309;
    const double C30407 = C30293 + C30406;
    const double C29757 = C29751 + C29756;
    const double C29871 = C29868 + C29869;
    const double C29909 = C29907 + C29908;
    const double C1438 = C30749 * C1172;
    const double C2178 = C30749 * C1315;
    const double C19488 = C18611 * C1315;
    const double C29961 = C29958 + C29959;
    const double C30006 = C30002 + C30003;
    const double C30047 = C30044 + C30045;
    const double C30024 = C29720 * C30022;
    const double C30038 = C29720 * C30035;
    const double C30069 = C29721 * C30035;
    const double C29796 = C29791 + C29795;
    const double C29872 = C29783 + C29870;
    const double C29962 = C29956 + C29960;
    const double C30025 = C29720 * C30023;
    const double C6569 =
        (2 * (C29721 * C29865 + C30208 * be) +
         C29721 * (C29865 + C29721 * (C29721 * C30023 + C30039 * be) +
                   C29721 * C30039 * be) +
         (C30208 + C30039 * C29915) * be) /
        C29681;
    const double C29835 = C29830 + C29834;
    const double C29925 = C29822 + C29924;
    const double C30090 = C30088 + C30089;
    const double C30101 = C29721 * C30098;
    const double C170 = C164 * C114;
    const double C171 = C165 * C30736;
    const double C173 = C167 * C30736;
    const double C551 = C547 * C30736;
    const double C4854 = C346 - C345;
    const double C13284 = C345 - C346;
    const double C13894 = C954 - C955;
    const double C13892 = C955 - C954;
    const double C5754 = C1434 - C1433;
    const double C14402 = C1433 - C1434;
    const double C4853 = C344 - C343;
    const double C13283 = C343 - C344;
    const double C13893 = C952 - C953;
    const double C13891 = C953 - C952;
    const double C5753 = C1432 - C1431;
    const double C14401 = C1431 - C1432;
    const double C5909 = C1590 - C1589;
    const double C14597 = C1589 - C1590;
    const double C5502 = C113 * C1165;
    const double C25233 = C18612 * C1165;
    const double C5636 = C113 * C1296;
    const double C24991 = C18613 * C1296;
    const double C25388 = C18612 * C1296;
    const double C5315 = C113 * C1302;
    const double C24383 = C18613 * C1302;
    const double C25396 = C18612 * C1302;
    const double C5640 = C113 * C1308;
    const double C25403 = C18612 * C1308;
    const double C25398 = C18613 * C1308;
    const double C5644 = C113 * C1698;
    const double C25228 = C18613 * C1698;
    const double C25865 = C18612 * C1698;
    const double C6677 = C113 * C2394;
    const double C25390 = C18613 * C2394;
    const double C26701 = C18612 * C2394;
    const double C26703 = C18613 * C6310;
    const double C364 = C360 * C30736;
    const double C172 = C166 * C114;
    const double C363 = C359 * C114;
    const double C550 = C546 * C114;
    const double C132 = (4 * (2 * C29770 + C29728 * C29775) +
                         C29728 * (3 * C29775 + C29728 * C29785)) /
                        C29681;
    const double C318 =
        (2 * C29770 + C29728 * C29775 + C29785 * C29855) / C29681;
    const double C320 = (C29720 * (3 * C29775 + C29728 * C29785)) / C29681;
    const double C1596 = C30749 * C1318;
    const double C18824 = C18611 * C1318;
    const double C5756 = C30749 * C1166;
    const double C5490 = (4 * (2 * C29852 + C29720 * C29858) +
                          C29720 * (3 * C29858 + C29720 * C29944)) /
                         C29681;
    const double C133 = (4 * (2 * C29809 + C29728 * C29814) +
                         C29728 * (3 * C29814 + C29728 * C29824)) /
                        C29681;
    const double C506 =
        (2 * C29809 + C29728 * C29814 + C29824 * C29915) / C29681;
    const double C508 = (C29721 * (3 * C29814 + C29728 * C29824)) / C29681;
    const double C21045 = C18613 * C2011;
    const double C10453 = (4 * (2 * C29914 + C29721 * C29917) +
                           C29721 * (3 * C29917 + C29721 * C30085)) /
                          C29681;
    const double C30151 = C29728 * C29897;
    const double C30276 = C29720 * C29897;
    const double C1157 = 3 * (C30138 + C29879 * C29855) +
                         C29720 * (2 * C30213 + C29720 * C30216);
    const double C1294 = C30138 + C29879 * C29855 + C30216 * C29915;
    const double C1696 = C29721 * (2 * C30213 + C29720 * C30216);
    const double C2001 = 3 * (C30138 + C29879 * C29915) +
                         C29721 * (2 * C30270 + C29721 * C30273);
    const double C30403 = C30400 + C30401;
    const double C30306 = C29720 * C30007;
    const double C6306 = 3 * (C30200 + C29975 * C29915) +
                         C29721 * (2 * C30350 + C29721 * C30353);
    const double C30329 = C30326 + C30327;
    const double C10604 = 3 * (C30205 + C29887 * C29915) +
                          C29721 * (2 * C30383 + C29721 * C30386);
    const double C30394 = C30391 + C30392;
    const double C30375 = C29721 * C30106;
    const double C30530 = C30526 - C30529;
    const double C30857 = C30827 / C30516;
    const double C30539 = C30535 - C30538;
    const double C30871 = C30856 / C30520;
    const double C30612 = C30607 - C30611;
    const double C30861 = C30835 / C30516;
    const double C30619 = C30615 - C30618;
    const double C30875 = C30864 / C30520;
    const double C30654 = C30649 - C30653;
    const double C30863 = C30838 / C30516;
    const double C30661 = C30657 - C30660;
    const double C30877 = C30867 / C30520;
    const double C168 = C156 - C157;
    const double C361 = C347 - C348;
    const double C13287 = C348 - C347;
    const double C664 = C351 - C352;
    const double C13565 = C352 - C351;
    const double C548 = C534 - C535;
    const double C777 = C538 - C539;
    const double C964 = C956 - C957;
    const double C13895 = C957 - C956;
    const double C5758 = C30749 * C1174;
    const double C15299 = C2171 - C2172;
    const double C15297 = C2172 - C2171;
    const double C5507 = C5499 - C5500;
    const double C5649 = C5637 - C5638;
    const double C6017 = C5641 - C5642;
    const double C5494 =
        (4 * (2 * C29856 + ae * C29858 + C29720 * C29943) +
         ae * (3 * C29858 + C29720 * C29944) +
         C29720 *
             (3 * C29943 + ae * C29944 +
              C29720 * (2 * C29937 + ae * C29939 +
                        C29720 * (C29744 + ae * C29720 * C29781 +
                                  C29720 * (ae * C29781 + C29720 * C29753))))) /
        C29683;
    const double C30368 = C30366 + C30363;
    const double C169 = C158 - C159;
    const double C362 = C349 - C350;
    const double C13288 = C350 - C349;
    const double C665 = C353 - C354;
    const double C13566 = C354 - C353;
    const double C549 = C536 - C537;
    const double C778 = C540 - C541;
    const double C965 = C958 - C959;
    const double C13896 = C959 - C958;
    const double C5914 = C30749 * C1704;
    const double C20000 = C18611 * C1704;
    const double C2288 = C30749 * C2015;
    const double C18985 = C18611 * C2015;
    const double C21044 = C18610 * C2015;
    const double C21046 = C18611 * C2018;
    const double C15434 = C30749 * C2400;
    const double C20908 = C18611 * C2400;
    const double C2173 = C113 * C1298;
    const double C19480 = C18613 * C1298;
    const double C20905 = C18612 * C1298;
    const double C1591 = C113 * C1304;
    const double C18808 = C18613 * C1304;
    const double C20199 = C18612 * C1304;
    const double C6469 = C113 * C1310;
    const double C20201 = C18613 * C1310;
    const double C15433 = C113 * C2396;
    const double C20907 = C18613 * C2396;
    const double C5628 =
        (3 * (C29901 + ae * (C29721 * C29932 + C29884 * be) + C29720 * C29985) +
         ae * (C29721 * C29944 + (2 * C29884 + C29720 * C29975) * be) +
         C29720 *
             (2 * C29985 + ae * (C29721 * C29939 + C29975 * be) +
              C29720 * (C29974 + ae * (C29721 * C29948 + C29972 * be) +
                        C29720 * (ae * (C29721 * C29781 + C29846 * be) +
                                  C29720 * (be * C29820 + C29721 * C29753))))) /
        C29683;
    const double C5627 =
        (2 * (ae * (C29769 + C29721 * (C29721 * C29773 + C29844 * be) +
                    C29721 * C29844 * be) +
              C29720 * C29978) +
         ae * (C29858 + C29721 * (C29721 * C29939 + C29975 * be) +
               C29721 * C29975 * be) +
         C29720 *
             (C29978 +
              ae * (C29932 + C29721 * (C29721 * C29948 + C29972 * be) +
                    C29721 * C29972 * be) +
              C29720 *
                  (ae * (C29773 + C29721 * (C29721 * C29781 + C29846 * be) +
                         C29721 * C29846 * be) +
                   C29720 * (C29744 + be * C29721 * C29820 +
                             C29721 * (be * C29820 + C29721 * C29753))))) /
        C29683;
    const double C30297 = C30296 + C30290;
    const double C319 =
        (2 * C29809 + C29728 * C29814 +
         C29720 * (C29720 * C29824 + C30145 * ae) + C29720 * C30145 * ae) /
        C29681;
    const double C321 = (C29720 * (3 * C29814 + C29728 * C29824) +
                         (3 * C30138 + C29728 * C30145) * ae) /
                        C29681;
    const double C505 =
        (2 * C29770 + C29728 * C29775 +
         C29721 * (C29721 * C29785 + C30145 * be) + C29721 * C30145 * be) /
        C29681;
    const double C507 = (C29721 * (3 * C29775 + C29728 * C29785) +
                         (3 * C30138 + C29728 * C30145) * be) /
                        C29681;
    const double C942 =
        (C29721 * C29720 * C29785 + C29720 * C30145 * be) / C29681;
    const double C943 = (C29721 * (C29720 * C29824 + C30145 * ae)) / C29681;
    const double C120 = 4 * (2 * C30134 + C29728 * C30138) +
                        C29728 * (3 * C30138 + C29728 * C30145);
    const double C301 = 2 * C30134 + C29728 * C30138 + C30145 * C29855;
    const double C302 = C29720 * (3 * C30138 + C29728 * C30145);
    const double C488 = 2 * C30134 + C29728 * C30138 + C30145 * C29915;
    const double C489 = C29721 * (3 * C30138 + C29728 * C30145);
    const double C934 = C29721 * C29720 * C30145;
    const double C1426 =
        2 * C29720 * C30145 + C29720 * (C30145 + C29897 * C29855);
    const double C1584 = C29721 * (C30145 + C29897 * C29855);
    const double C2280 =
        2 * C29721 * C30145 + C29721 * (C30145 + C29897 * C29915);
    const double C2176 = C30749 * C1299;
    const double C19484 = C18611 * C1299;
    const double C2175 = C113 * C1288;
    const double C19483 = C18613 * C1288;
    const double C1169 =
        (3 * (C29814 + C29720 * C30215 + C30213 * ae) +
         C29720 * (2 * C30215 +
                   C29720 * (C29822 + C29720 * (C29720 * C29833 + C29891 * ae) +
                             C29892 * ae) +
                   C30216 * ae) +
         (2 * C30213 + C29720 * C30216) * ae) /
        C29681;
    const double C1300 =
        (C29720 * C29814 + C30138 * ae + C30215 * C29915) / C29681;
    const double C1306 =
        (C29721 * (C29814 + C29720 * C30215 + C30213 * ae)) / C29681;
    const double C1312 =
        (C29814 + C29720 * C30215 + C30213 * ae +
         (C29822 + C29720 * (C29720 * C29833 + C29891 * ae) + C29892 * ae) *
             C29915) /
        C29681;
    const double C1702 =
        (C29721 * (2 * C30215 +
                   C29720 * (C29822 + C29720 * (C29720 * C29833 + C29891 * ae) +
                             C29892 * ae) +
                   C30216 * ae)) /
        C29681;
    const double C2398 =
        (2 * C29721 * C30215 +
         C29721 * (C30215 + (C29720 * C29833 + C29891 * ae) * C29915)) /
        C29681;
    const double C2012 =
        (3 * (C29775 + C29721 * C30272 + C30270 * be) +
         C29721 * (2 * C30272 +
                   C29721 * (C29783 + C29721 * (C29721 * C29794 + C29891 * be) +
                             C29721 * C29891 * be) +
                   C30273 * be) +
         (2 * C30270 + C29721 * C30273) * be) /
        C29681;
    const double C10605 =
        (3 * (C29860 + C29721 * C30385 + C30383 * be) +
         C29721 * (2 * C30385 +
                   C29721 * (C30013 +
                             C29721 * (C29721 * C29720 * C30016 + C30070 * be) +
                             C29721 * C30070 * be) +
                   C30386 * be) +
         (2 * C30383 + C29721 * C30386) * be) /
        C29681;
    const double C30393 = C29778 + C30389;
    const double C5757 = C113 * C1167;
    const double C6468 = C30749 * C1309;
    const double C20198 = C18611 * C1309;
    const double C5912 = C30749 * C1699;
    const double C19996 = C18611 * C1699;
    const double C5913 = C113 * C1700;
    const double C19999 = C18613 * C1700;
    const double C5755 = C113 * C1156;
    const double C6467 = C113 * C1293;
    const double C20197 = C18613 * C1293;
    const double C5911 = C113 * C1695;
    const double C19995 = C18613 * C1695;
    const double C21042 = C18611 * C2010;
    const double C21041 = C18613 * C2000;
    const double C30331 = C29817 + C30330;
    const double C30050 = C29974 + C30048;
    const double C30402 = C29932 + C30398;
    const double C26700 = C18611 * C6309;
    const double C26699 = C18613 * C6305;
    const double C5621 =
        (2 * C29852 + C29720 * C29858 +
         C29721 * (C29721 * C29944 + C30294 * be) + C29721 * C30294 * be) /
        C29681;
    const double C5623 = (C29721 * (3 * C29858 + C29720 * C29944) +
                          (3 * C30200 + C29720 * C30294) * be) /
                         C29681;
    const double C5488 = 4 * (2 * C30197 + C29720 * C30200) +
                         C29720 * (3 * C30200 + C29720 * C30294);
    const double C5618 = 2 * C30197 + C29720 * C30200 + C30294 * C29915;
    const double C5619 = C29721 * (3 * C30200 + C29720 * C30294);
    const double C6670 =
        2 * C29721 * C30294 + C29721 * (C30294 + C30007 * C29915);
    const double C6311 =
        (3 * (C29858 + C29721 * C30352 + C30350 * be) +
         C29721 * (2 * C30352 +
                   C29721 * (C29939 + C29721 * (C29721 * C29957 + C30000 * be) +
                             C29721 * C30000 * be) +
                   C30353 * be) +
         (2 * C30350 + C29721 * C30353) * be) /
        C29681;
    const double C30008 = C30005 + C29997;
    const double C10450 = 4 * (2 * C30254 + C29721 * C30257) +
                          C29721 * (3 * C30257 + C29721 * C30367);
    const double C30311 = C30310 + C30303;
    const double C10810 =
        (4 * (2 * C29721 * C30293 + C29721 * C30407) +
         C29721 * (3 * C30407 + C29721 * (2 * C29721 * C30307 +
                                          C29721 * (C30307 + (C29720 * C29831 +
                                                              C29889 * ae) *
                                                                 C29915)))) /
        C29681;
    const double C142 =
        (5 * (3 * C29746 + C29728 * C29757) +
         C29728 * (4 * C29757 +
                   C29728 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C331 =
        (2 * C29728 * C29739 + C29728 * C29746 + ae * C29720 * C29785 +
         C29720 * (ae * C29785 + C29720 * C29757)) /
        C29683;
    const double C332 = (ae * (3 * C29775 + C29728 * C29785) +
                         C29720 * (3 * C29746 + C29728 * C29757)) /
                        C29683;
    const double C518 =
        (2 * C29728 * C29739 + C29728 * C29746 + be * C29721 * C29824 +
         C29721 * (be * C29824 + C29721 * C29757)) /
        C29683;
    const double C519 = (be * (3 * C29814 + C29728 * C29824) +
                         C29721 * (3 * C29746 + C29728 * C29757)) /
                        C29683;
    const double C949 = (ae * (C29721 * C29785 +
                               (2 * C29728 * C29844 +
                                C29728 * (C29844 + C29735 * C29737 * C29736)) *
                                   be) +
                         C29720 * (be * C29824 + C29721 * C29757)) /
                        C29683;
    const double C2016 =
        (2 * (be * C29814 + C29721 * C29746) +
         be * (C29814 + C29822 * std::pow(C29721, 2)) +
         C29721 * (C29746 + be * C29721 * C29822 + C29721 * C29909)) /
        C29683;
    const double C29963 = C29720 * C29961;
    const double C30009 = C29720 * C30006;
    const double C30079 = C29721 * C30006;
    const double C30049 = C29720 * C30047;
    const double C30026 = C30021 + C30024;
    const double C30040 = C30037 + C30038;
    const double C30074 = C30073 + C30069;
    const double C29797 = C29728 * C29796;
    const double C1429 =
        (2 * (ae * C29785 + C29720 * C29757) + ae * (C29785 + C29796 * C29855) +
         C29720 * (C29757 + ae * C29720 * C29796 +
                   C29720 * (ae * C29796 +
                             C29720 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C1427 =
        (2 * C29720 * C29785 + C29720 * (C29785 + C29796 * C29855)) / C29681;
    const double C1585 = (C29721 * (C29785 + C29796 * C29855) +
                          (C30145 + C29897 * C29855) * be) /
                         C29681;
    const double C2281 =
        (2 * (C29721 * C29785 + C30145 * be) +
         C29721 * (C29785 + C29721 * (C29721 * C29796 + C29897 * be) +
                   C29721 * C29897 * be) +
         (C30145 + C29897 * C29915) * be) /
        C29681;
    const double C1175 =
        (3 * (C29746 + ae * C29867 + C29720 * C29871) +
         ae * (2 * C29867 + C29720 * C29872) +
         C29720 * (2 * C29871 + ae * C29872 +
                   C29720 * (C29755 + ae * C29720 * C29794 +
                             C29720 * (ae * C29794 +
                                       C29720 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C1705 =
        (2 * (ae * (C29721 * C29783 + C29879 * be) + C29720 * C29909) +
         ae * (C29721 * C29872 + (C29879 + C29891 * C29855) * be) +
         C29720 * (C29909 + ae * (C29721 * C29720 * C29794 + C29892 * be) +
                   C29720 * (ae * (C29721 * C29794 + C29891 * be) +
                             C29720 * (be * C29833 +
                                       C29721 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C1168 = (3 * (C29775 + C29783 * C29855) +
                          C29720 * (2 * C29867 + C29720 * C29872)) /
                         C29681;
    const double C1311 =
        (C29775 + C29783 * C29855 + C29721 * (C29721 * C29872 + C30216 * be) +
         C29721 * C30216 * be) /
        C29681;
    const double C1701 = (C29721 * (2 * C29867 + C29720 * C29872) +
                          (2 * C30213 + C29720 * C30216) * be) /
                         C29681;
    const double C29964 = C29720 * C29962;
    const double C6671 =
        (2 * (C29721 * C29944 + C30294 * be) +
         C29721 * (C29944 + C29721 * (C29721 * C29962 + C30007 * be) +
                   C29721 * C30007 * be) +
         (C30294 + C30007 * C29915) * be) /
        C29681;
    const double C30027 = C30019 + C30025;
    const double C29836 = C29728 * C29835;
    const double C1587 =
        (be * C29824 + C29721 * C29757 +
         ae * (C29721 * C29720 * C29796 + C29720 * C29897 * be) +
         C29720 * (ae * (C29721 * C29796 + C29897 * be) +
                   C29720 * (be * C29835 +
                             C29721 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C2169 =
        (ae * (C29785 + C29721 * (C29721 * C29796 + C29897 * be) +
               C29721 * C29897 * be) +
         C29720 * (C29757 + be * C29721 * C29835 +
                   C29721 * (be * C29835 +
                             C29721 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C2283 =
        (2 * (be * C29824 + C29721 * C29757) + be * (C29824 + C29835 * C29915) +
         C29721 * (C29757 + be * C29721 * C29835 +
                   C29721 * (be * C29835 +
                             C29721 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C1428 =
        (2 * (C29720 * C29824 + C30145 * ae) +
         C29720 * (C29824 + C29720 * (C29720 * C29835 + C29897 * ae) +
                   C29720 * C29897 * ae) +
         (C30145 + C29897 * C29855) * ae) /
        C29681;
    const double C1586 =
        (C29721 * (C29824 + C29720 * (C29720 * C29835 + C29897 * ae) +
                   C29720 * C29897 * ae)) /
        C29681;
    const double C2168 = (C29720 * C29824 + C30145 * ae +
                          (C29720 * C29835 + C29897 * ae) * C29915) /
                         C29681;
    const double C2282 =
        (2 * C29721 * C29824 + C29721 * (C29824 + C29835 * C29915)) / C29681;
    const double C2019 =
        (3 * (C29746 + be * C29923 + C29721 * C29909) +
         be * (2 * C29923 + C29721 * C29925) +
         C29721 * (2 * C29909 + be * C29925 +
                   C29721 * (C29755 + be * C29721 * C29833 +
                             C29721 * (be * C29833 +
                                       C29721 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C2401 =
        (ae * (2 * (C29721 * C29783 + C29879 * be) +
               C29721 * (C29783 + C29721 * (C29721 * C29794 + C29891 * be) +
                         C29721 * C29891 * be) +
               (C29879 + C29891 * C29915) * be) +
         C29720 * (2 * C29909 + be * C29925 +
                   C29721 * (C29755 + be * C29721 * C29833 +
                             C29721 * (be * C29833 +
                                       C29721 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C2013 = (3 * (C29814 + C29822 * C29915) +
                          C29721 * (2 * C29923 + C29721 * C29925)) /
                         C29681;
    const double C30091 = C29721 * C30090;
    const double C30102 = C30100 + C30101;
    const double C176 = C170 + C171;
    const double C5508 = C5501 - C5502;
    const double C5632 = C5315 - C5316;
    const double C5650 = C5639 - C5640;
    const double C6018 = C5643 - C5644;
    const double C177 = C172 + C173;
    const double C367 = C363 + C364;
    const double C554 = C550 + C551;
    const double C161 = C30749 * C132;
    const double C356 = C30749 * C318;
    const double C667 = C30749 * C320;
    const double C5504 = C30749 * C5490;
    const double C162 = C113 * C133;
    const double C544 = C113 * C506;
    const double C19277 = C18613 * C506;
    const double C781 = C113 * C508;
    const double C18645 = C18613 * C508;
    const double C30152 = C30150 + C30151;
    const double C2167 =
        (C29720 * C29785 + C29721 * (C29721 * C29720 * C29796 + C30276 * be) +
         C29721 * C30276 * be) /
        C29681;
    const double C2166 = C29720 * C30145 + C30276 * C29915;
    const double C10808 = 4 * (2 * C30342 + C29721 * C30345) +
                          C29721 * (3 * C30345 + C29721 * C30403);
    const double C30308 = C30305 + C30306;
    const double C5748 = 4 * (2 * C30205 + C29720 * C30208) +
                         C29720 * (3 * C30208 + C29720 * C30329);
    const double C5904 = C29721 * (3 * C30208 + C29720 * C30329);
    const double C6462 = 2 * C30205 + C29720 * C30208 + C30329 * C29915;
    const double C10706 = 4 * (2 * C30262 + C29721 * C30265) +
                          C29721 * (3 * C30265 + C29721 * C30394);
    const double C30377 = C30374 + C30375;
    const double C30790 = C30530 * C30518;
    const double C30829 = C30795 + C30530;
    const double C30798 = C30539 / C30520;
    const double C30794 = C30539 * C30518;
    const double C655 = C30871 - (C30530 * C30521) / C30516;
    const double C30808 = C30612 * C30606;
    const double C30844 = C30810 + C30612;
    const double C30812 = C30619 / C30520;
    const double C30809 = C30619 * C30606;
    const double C1420 = C30875 - (C30612 * C30608) / C30516;
    const double C30814 = C30654 * C30648;
    const double C30850 = C30816 + C30654;
    const double C30818 = C30661 / C30520;
    const double C30815 = C30661 * C30648;
    const double C2276 = C30877 - (C30654 * C30650) / C30516;
    const double C174 = C168 * C114;
    const double C365 = C361 * C114;
    const double C670 = C664 * C114;
    const double C552 = C548 * C114;
    const double C783 = C777 * C114;
    const double C966 = C964 * C114;
    const double C5506 = C30749 * C5494;
    const double C175 = C169 * C30736;
    const double C366 = C362 * C30736;
    const double C671 = C665 * C30736;
    const double C553 = C549 * C30736;
    const double C784 = C778 * C30736;
    const double C967 = C965 * C30736;
    const double C15300 = C2173 - C2174;
    const double C15298 = C2174 - C2173;
    const double C5910 = C1592 - C1591;
    const double C14598 = C1591 - C1592;
    const double C6022 = C30749 * C5628;
    const double C25236 = C18611 * C5628;
    const double C5648 = C30749 * C5627;
    const double C25868 = C18611 * C5627;
    const double C5491 =
        (4 * (2 * C30199 + C29720 * C30297 + C30200 * ae) +
         C29720 *
             (3 * C30297 +
              C29720 *
                  (2 * C30293 +
                   C29720 * (C29812 + C29720 * (C29720 * C29820 + C29846 * ae) +
                             C29972 * ae) +
                   C29975 * ae) +
              C30294 * ae) +
         (3 * C30200 + C29720 * C30294) * ae) /
        C29681;
    const double C357 = C113 * C319;
    const double C668 = C113 * C321;
    const double C543 = C30749 * C505;
    const double C19274 = C18611 * C505;
    const double C780 = C30749 * C507;
    const double C18642 = C18611 * C507;
    const double C961 = C30749 * C942;
    const double C19136 = C18611 * C942;
    const double C962 = C113 * C943;
    const double C19139 = C18613 * C943;
    const double C160 = C113 * C120;
    const double C355 = C113 * C301;
    const double C666 = C113 * C302;
    const double C542 = C113 * C488;
    const double C19273 = C18613 * C488;
    const double C779 = C113 * C489;
    const double C18641 = C18613 * C489;
    const double C960 = C113 * C934;
    const double C19135 = C18613 * C934;
    const double C2177 = C113 * C1300;
    const double C19487 = C18613 * C1300;
    const double C1595 = C113 * C1306;
    const double C18823 = C18613 * C1306;
    const double C30395 = C30393 + C30390;
    const double C30332 = C30331 + C30325;
    const double C30404 = C30402 + C30399;
    const double C5646 = C30749 * C5621;
    const double C25864 = C18611 * C5621;
    const double C6020 = C30749 * C5623;
    const double C25232 = C18611 * C5623;
    const double C5503 = C113 * C5488;
    const double C5645 = C113 * C5618;
    const double C25863 = C18613 * C5618;
    const double C6019 = C113 * C5619;
    const double C25231 = C18613 * C5619;
    const double C30010 = ae * C30008;
    const double C6313 =
        (2 * C29901 + be * C29917 + C29721 * C29978 +
         ae * (2 * (C29721 * C29932 + C29884 * be) +
               C29721 * (C29932 + C29721 * C30046 + C29721 * C29972 * be) +
               (C29884 + C29972 * C29915) * be) +
         C29720 * (ae * (2 * C29983 + C29721 * C30008 +
                         (C29844 + C29846 * C29915) * be) +
                   C29720 * (2 * C29974 + be * (C29812 + C29820 * C29915) +
                             C29721 * C30006))) /
        C29683;
    const double C6314 =
        (ae * (3 * (C29769 + C29721 * C29983 + C30054 * be) +
               C29721 * (2 * C29983 + C29721 * C30008 + C30057 * be) +
               (2 * C30054 + C29721 * C30057) * be) +
         C29720 * (3 * C29978 + be * (2 * C29968 + C29721 * C30058) +
                   C29721 * (2 * C29974 + be * C30058 + C29721 * C30006))) /
        C29683;
    const double C6315 =
        (3 * C29978 + be * (2 * C29968 + C29721 * C30058) +
         C29721 * (2 * C29974 + be * C30058 + C29721 * C30006) +
         ae * (3 * (C29932 + C29721 * C30046 + C30060 * be) +
               C29721 * (2 * C30046 +
                         C29721 * (C29948 +
                                   C29721 * (C29721 * C29720 * C29792 +
                                             C29995 * be) +
                                   C29721 * C29995 * be) +
                         C30064 * be) +
               (2 * C30060 + C29721 * C30064) * be) +
         C29720 *
             (ae * (3 * C30008 +
                    C29721 *
                        (2 * C29996 +
                         C29721 * (C29781 +
                                   C29721 * (C29721 * C29792 + C29889 * be) +
                                   C29721 * C29889 * be) +
                         C30065 * be) +
                    (2 * C29989 + C29721 * C30065) * be) +
              C29720 *
                  (3 * C30006 + be * (2 * C29990 + C29721 * C30066) +
                   C29721 * (2 * C29999 + be * C30066 +
                             C29721 * (C29753 + be * C29721 * C29831 +
                                       C29721 * (be * C29831 +
                                                 C29721 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C30372 = C29721 * C30008;
    const double C10452 =
        (4 * (2 * C30256 + C29721 * C30368 + C30257 * be) +
         C29721 * (3 * C30368 +
                   C29721 * (2 * C29983 + C29721 * C30008 + C30057 * be) +
                   C30367 * be) +
         (3 * C30257 + C29721 * C30367) * be) /
        C29681;
    const double C30312 = C29720 * C30311;
    const double C6308 =
        (2 * C29721 * C30297 + C29721 * (C30297 + C30311 * C29915)) / C29681;
    const double C6312 =
        (3 * (C30297 + C30311 * C29915) +
         C29721 *
             (2 * C29721 * C30311 +
              C29721 *
                  (C30311 + (C29820 + C29720 * (C29720 * C29831 + C29889 * ae) +
                             C29995 * ae) *
                                C29915))) /
        C29681;
    const double C358 = C30749 * C331;
    const double C669 = C30749 * C332;
    const double C545 = C30749 * C518;
    const double C19278 = C18611 * C518;
    const double C782 = C30749 * C519;
    const double C18646 = C18611 * C519;
    const double C963 = C30749 * C949;
    const double C19140 = C18611 * C949;
    const double C2292 = C30749 * C2016;
    const double C19002 = C18611 * C2016;
    const double C29965 = C29953 + C29963;
    const double C30081 = C30080 + C30079;
    const double C30051 = C30050 + C30049;
    const double C6465 =
        (2 * (ae * (C29778 + C29721 * C30034 + C29721 * C29886 * be) +
              C29720 * C30074) +
         ae * (C29865 + C29721 * (C29721 * C30023 + C30039 * be) +
               C29721 * C30039 * be) +
         C29720 *
             (C30074 +
              ae * (C30013 + C29721 * (C29721 * C29720 * C30016 + C30070 * be) +
                    C29721 * C30070 * be) +
              C29720 *
                  (ae * (C29789 + C29721 * (C29721 * C30016 + C30033 * be) +
                         C29721 * C30033 * be) +
                   C29720 * (C30015 + be * C29721 * C30071 +
                             C29721 * (be * C30071 + C29721 * C29728 *
                                                         std::pow(C29724, 8) *
                                                         bs[8] * C29726))))) /
        C29683;
    const double C6571 =
        (2 * C29905 + be * C29921 + C29721 * C30074 +
         ae * (2 * (C29721 * C30013 + C29887 * be) +
               C29721 *
                   (C30013 + C29721 * (C29721 * C29720 * C30016 + C30070 * be) +
                    C29721 * C30070 * be) +
               (C29887 + C30070 * C29915) * be) +
         C29720 *
             (ae *
                  (2 * C30034 +
                   C29721 * (C29789 + C29721 * (C29721 * C30016 + C30033 * be) +
                             C29721 * C30033 * be) +
                   (C29886 + C30033 * C29915) * be) +
              C29720 *
                  (2 * C30035 + be * (C29828 + C30071 * C29915) +
                   C29721 * (C30015 + be * C29721 * C30071 +
                             C29721 * (be * C30071 + C29721 * C29728 *
                                                         std::pow(C29724, 8) *
                                                         bs[8] * C29726))))) /
        C29683;
    const double C10607 =
        (ae * (3 * (C29778 + C29721 * C30034 + C30094 * be) +
               C29721 * (2 * C30034 +
                         C29721 * (C29789 +
                                   C29721 * (C29721 * C30016 + C30033 * be) +
                                   C29721 * C30033 * be) +
                         C30097 * be) +
               (2 * C30094 + C29721 * C30097) * be) +
         C29720 * (3 * C30074 + be * (2 * C30068 + C29721 * C30098) +
                   C29721 * (2 * C30035 + be * C30098 +
                             C29721 * (C30015 + be * C29721 * C30071 +
                                       C29721 * (be * C30071 +
                                                 C29721 * C29728 *
                                                     std::pow(C29724, 8) *
                                                     bs[8] * C29726))))) /
        C29683;
    const double C29798 = C29788 + C29797;
    const double C29966 = C29951 + C29964;
    const double C5751 =
        (4 * (2 * C29864 + ae * C29865 + C29720 * C30026) +
         ae * (3 * C29865 + C29720 * C30027) +
         C29720 * (3 * C30026 + ae * C30027 +
                   C29720 * (2 * C30022 + ae * C30023 +
                             C29720 * (C30015 + ae * C29720 * C30016 +
                                       C29720 * (ae * C30016 +
                                                 C29720 * C29728 *
                                                     std::pow(C29724, 8) *
                                                     bs[8] * C29726))))) /
        C29683;
    const double C5907 =
        (3 * (C29905 + ae * (C29721 * C30013 + C29887 * be) + C29720 * C30040) +
         ae * (C29721 * C30027 + (2 * C29887 + C29720 * C30039) * be) +
         C29720 *
             (2 * C30040 + ae * (C29721 * C30023 + C30039 * be) +
              C29720 *
                  (C30035 +
                   ae * (C29721 * C29720 * C30016 + C29720 * C30033 * be) +
                   C29720 * (ae * (C29721 * C30016 + C30033 * be) +
                             C29720 * (be * C29728 * C29831 +
                                       C29721 * C29728 * std::pow(C29724, 8) *
                                           bs[8] * C29726))))) /
        C29683;
    const double C5749 = (4 * (2 * C29860 + C29720 * C29865) +
                          C29720 * (3 * C29865 + C29720 * C30027)) /
                         C29681;
    const double C5905 = (C29721 * (3 * C29865 + C29720 * C30027) +
                          (3 * C30208 + C29720 * C30329) * be) /
                         C29681;
    const double C6463 =
        (2 * C29860 + C29720 * C29865 +
         C29721 * (C29721 * C30027 + C30329 * be) + C29721 * C30329 * be) /
        C29681;
    const double C29837 = C29827 + C29836;
    const double C30092 = C30087 + C30091;
    const double C10709 =
        (4 * (2 * C29905 + be * C29921 + C29721 * C30074) +
         be * (3 * C29921 + C29721 * C30102) +
         C29721 * (3 * C30074 + be * C30102 +
                   C29721 * (2 * C30035 + be * C30098 +
                             C29721 * (C30015 + be * C29721 * C30071 +
                                       C29721 * (be * C30071 +
                                                 C29721 * C29728 *
                                                     std::pow(C29724, 8) *
                                                     bs[8] * C29726))))) /
        C29683;
    const double C10708 = (4 * (2 * C29919 + C29721 * C29921) +
                           C29721 * (3 * C29921 + C29721 * C30102)) /
                          C29681;
    const double C121 = 5 * (3 * C30138 + C29728 * C30145) +
                        C29728 * (4 * C30145 + C29728 * C30152);
    const double C303 = 3 * C30138 + C29728 * C30145 + C30152 * C29855;
    const double C490 = 3 * C30138 + C29728 * C30145 + C30152 * C29915;
    const double C659 = C29720 * (4 * C30145 + C29728 * C30152);
    const double C772 = C29721 * (4 * C30145 + C29728 * C30152);
    const double C935 = C29721 * C29720 * C30152;
    const double C5489 = 5 * (3 * C30200 + C29720 * C30294) +
                         C29720 * (4 * C30294 + C29720 * C30308);
    const double C5620 = 3 * C30200 + C29720 * C30294 + C30308 * C29915;
    const double C6012 = C29721 * (4 * C30294 + C29720 * C30308);
    const double C10451 = 5 * (3 * C30257 + C29721 * C30367) +
                          C29721 * (4 * C30367 + C29721 * C30377);
    const double C30825 = C30790 / C30516;
    const double C30858 = C30829 / C30520;
    const double C30859 = C30831 + C30798;
    const double C657 = C30798 - C30537 / C30534;
    const double C30828 = C30794 / C30516;
    const double C30841 = C30808 / C30516;
    const double C30865 = C30844 / C30520;
    const double C30866 = C30845 + C30812;
    const double C1422 = C30812 - C30617 / C30534;
    const double C30843 = C30809 / C30516;
    const double C30847 = C30814 / C30516;
    const double C30868 = C30850 / C30520;
    const double C30869 = C30851 + C30818;
    const double C2278 = C30818 - C30659 / C30534;
    const double C30849 = C30815 / C30516;
    const double C178 = C174 + C175;
    const double C368 = C365 + C366;
    const double C672 = C670 + C671;
    const double C555 = C552 + C553;
    const double C785 = C783 + C784;
    const double C968 = C966 + C967;
    const double C5505 = C113 * C5491;
    const double C10707 =
        (4 * (2 * C30264 + C29721 * C30395 + C30265 * be) +
         C29721 *
             (3 * C30395 +
              C29721 *
                  (2 * C30034 +
                   C29721 * (C29789 + C29721 * (C29721 * C30016 + C30033 * be) +
                             C29721 * C30033 * be) +
                   C30097 * be) +
              C30394 * be) +
         (3 * C30265 + C29721 * C30394) * be) /
        C29681;
    const double C5750 =
        (4 * (2 * C30207 + C29720 * C30332 + C30208 * ae) +
         C29720 *
             (3 * C30332 +
              C29720 *
                  (2 * C30328 +
                   C29720 * (C29828 + C29720 * (C29720 * C30071 + C30033 * ae) +
                             C30070 * ae) +
                   C30039 * ae) +
              C30329 * ae) +
         (3 * C30208 + C29720 * C30329) * ae) /
        C29681;
    const double C5906 =
        (C29721 *
         (3 * C30332 +
          C29720 *
              (2 * C30328 +
               C29720 * (C29828 + C29720 * (C29720 * C30071 + C30033 * ae) +
                         C30070 * ae) +
               C30039 * ae) +
          C30329 * ae)) /
        C29681;
    const double C6464 =
        (2 * C30207 + C29720 * C30332 + C30208 * ae +
         (2 * C30328 +
          C29720 * (C29828 + C29720 * (C29720 * C30071 + C30033 * ae) +
                    C30070 * ae) +
          C30039 * ae) *
             C29915) /
        C29681;
    const double C6570 =
        (2 * C29721 * C30332 +
         C29721 * (C30332 + (C29828 + C29720 * (C29720 * C30071 + C30033 * ae) +
                             C30070 * ae) *
                                C29915)) /
        C29681;
    const double C10809 =
        (4 * (2 * C30344 + C29721 * C30404 + C30345 * be) +
         C29721 * (3 * C30404 +
                   C29721 * (2 * C30046 +
                             C29721 * (C29948 +
                                       C29721 * (C29721 * C29720 * C29792 +
                                                 C29995 * be) +
                                       C29721 * C29995 * be) +
                             C30064 * be) +
                   C30403 * be) +
         (3 * C30345 + C29721 * C30403) * be) /
        C29681;
    const double C30011 = C30010 + C30009;
    const double C6682 = C30749 * C6313;
    const double C25406 = C18611 * C6313;
    const double C26704 = C18611 * C6314;
    const double C30376 = C30371 + C30372;
    const double C30313 = C30300 + C30312;
    const double C6681 = C113 * C6308;
    const double C25405 = C18613 * C6308;
    const double C6673 =
        (2 * (ae * (2 * C29983 + C29721 * C30008 + C30057 * be) +
              C29720 * C30081) +
         ae * (2 * (C29721 * C29939 + C29975 * be) +
               C29721 * (C29939 + C29721 * (C29721 * C29957 + C30000 * be) +
                         C29721 * C30000 * be) +
               (C29975 + C30000 * C29915) * be) +
         C29720 *
             (C30081 +
              ae *
                  (2 * C30046 +
                   C29721 * (C29948 +
                             C29721 * (C29721 * C29720 * C29792 + C29995 * be) +
                             C29721 * C29995 * be) +
                   C30064 * be) +
              C29720 *
                  (ae * (2 * C29996 +
                         C29721 * (C29781 +
                                   C29721 * (C29721 * C29792 + C29889 * be) +
                                   C29721 * C29889 * be) +
                         C30065 * be) +
                   C29720 * (2 * C29999 + be * C30066 +
                             C29721 * (C29753 + be * C29721 * C29831 +
                                       C29721 * (be * C29831 +
                                                 C29721 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C10456 =
        (4 * (2 * C29901 + be * C29917 + C29721 * C29978) +
         be * (3 * C29917 + C29721 * C30085) +
         C29721 * (3 * C29978 + be * C30085 + C29721 * C30081)) /
        C29683;
    const double C333 =
        (3 * C29746 + C29728 * C29757 + ae * C29720 * C29798 +
         C29720 * (ae * C29798 +
                   C29720 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C662 =
        (ae * (4 * C29785 + C29728 * C29798) +
         C29720 * (4 * C29757 +
                   C29728 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C134 = (5 * (3 * C29775 + C29728 * C29785) +
                         C29728 * (4 * C29785 + C29728 * C29798)) /
                        C29681;
    const double C322 =
        (3 * C29775 + C29728 * C29785 + C29798 * C29855) / C29681;
    const double C509 =
        (3 * C29775 + C29728 * C29785 +
         C29721 * (C29721 * C29798 + C30152 * be) + C29721 * C30152 * be) /
        C29681;
    const double C660 = (C29720 * (4 * C29785 + C29728 * C29798)) / C29681;
    const double C773 = (C29721 * (4 * C29785 + C29728 * C29798) +
                         (4 * C30145 + C29728 * C30152) * be) /
                        C29681;
    const double C944 =
        (C29721 * C29720 * C29798 + C29720 * C30152 * be) / C29681;
    const double C5495 =
        (5 * (3 * C29943 + ae * C29944 + C29720 * C29965) +
         ae * (4 * C29944 + C29720 * C29966) +
         C29720 *
             (4 * C29965 + ae * C29966 +
              C29720 *
                  (3 * C29961 + ae * C29962 +
                   C29720 * (2 * C29955 + ae * C29957 +
                             C29720 * (C29753 + ae * C29720 * C29792 +
                                       C29720 * (ae * C29792 +
                                                 C29720 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C6015 =
        (4 * (2 * C29985 + ae * (C29721 * C29939 + C29975 * be) +
              C29720 * C30051) +
         ae * (C29721 * C29966 + (3 * C29975 + C29720 * C30007) * be) +
         C29720 *
             (3 * C30051 + ae * (C29721 * C29962 + C30007 * be) +
              C29720 *
                  (2 * C30047 + ae * (C29721 * C29957 + C30000 * be) +
                   C29720 *
                       (C29999 + ae * (C29721 * C29720 * C29792 + C29995 * be) +
                        C29720 * (ae * (C29721 * C29792 + C29889 * be) +
                                  C29720 * (be * C29831 +
                                            C29721 * std::pow(C29724, 8) *
                                                bs[8] * C29726)))))) /
        C29683;
    const double C5492 = (5 * (3 * C29858 + C29720 * C29944) +
                          C29720 * (4 * C29944 + C29720 * C29966)) /
                         C29681;
    const double C5625 =
        (3 * C29858 + C29720 * C29944 +
         C29721 * (C29721 * C29966 + C30308 * be) + C29721 * C30308 * be) /
        C29681;
    const double C6013 = (C29721 * (4 * C29944 + C29720 * C29966) +
                          (4 * C30294 + C29720 * C30308) * be) /
                         C29681;
    const double C520 =
        (3 * C29746 + C29728 * C29757 + be * C29721 * C29837 +
         C29721 * (be * C29837 +
                   C29721 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C775 =
        (be * (4 * C29824 + C29728 * C29837) +
         C29721 * (4 * C29757 +
                   C29728 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C950 =
        (ae * (C29721 * C29798 +
               (3 * (C29844 + C29846 * C29736) +
                C29728 * (2 * C29728 * C29846 +
                          C29728 * (C29846 + C29742 * C29741 * C29736))) *
                   be) +
         C29720 * (be * C29837 +
                   C29721 * (3 * C29755 +
                             C29728 * (2 * C29728 * C29753 +
                                       C29728 * (C29753 + std::pow(C29724, 8) *
                                                              bs[8] * C29726 *
                                                              C29736))))) /
        C29683;
    const double C135 = (5 * (3 * C29814 + C29728 * C29824) +
                         C29728 * (4 * C29824 + C29728 * C29837)) /
                        C29681;
    const double C323 =
        (3 * C29814 + C29728 * C29824 +
         C29720 * (C29720 * C29837 + C30152 * ae) + C29720 * C30152 * ae) /
        C29681;
    const double C510 =
        (3 * C29814 + C29728 * C29824 + C29837 * C29915) / C29681;
    const double C661 = (C29720 * (4 * C29824 + C29728 * C29837) +
                         (4 * C30145 + C29728 * C30152) * ae) /
                        C29681;
    const double C774 = (C29721 * (4 * C29824 + C29728 * C29837)) / C29681;
    const double C945 = (C29721 * (C29720 * C29837 + C30152 * ae)) / C29681;
    const double C10457 =
        (5 * (3 * C29978 + be * C30085 + C29721 * C30081) +
         be * (4 * C30085 + C29721 * C30092) +
         C29721 *
             (4 * C30081 + be * C30092 +
              C29721 *
                  (3 * C30006 + be * C30090 +
                   C29721 * (2 * C29999 + be * C30066 +
                             C29721 * (C29753 + be * C29721 * C29831 +
                                       C29721 * (be * C29831 +
                                                 C29721 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C10811 =
        (ae * (4 * (2 * C29983 + C29721 * C30008 + C30057 * be) +
               C29721 * (3 * C30008 +
                         C29721 * (2 * C29996 +
                                   C29721 * (C29781 +
                                             C29721 * (C29721 * C29792 +
                                                       C29889 * be) +
                                             C29721 * C29889 * be) +
                                   C30065 * be) +
                         C30106 * be) +
               (3 * C30057 + C29721 * C30106) * be) +
         C29720 *
             (4 * C30081 + be * C30092 +
              C29721 *
                  (3 * C30006 + be * C30090 +
                   C29721 * (2 * C29999 + be * C30066 +
                             C29721 * (C29753 + be * C29721 * C29831 +
                                       C29721 * (be * C29831 +
                                                 C29721 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C10455 = (5 * (3 * C29917 + C29721 * C30085) +
                           C29721 * (4 * C30085 + C29721 * C30092)) /
                          C29681;
    const double C30879 = C30825 + C30871;
    const double C656 = C30858 - (C30539 * C30521) / C30516;
    const double C111 = C30859 / C30520 - C30537 / C30832;
    const double C30872 = C30828 + C30858;
    const double C30880 = C30841 + C30875;
    const double C1421 = C30865 - (C30619 * C30608) / C30516;
    const double C1149 = C30866 / C30520 - C30617 / C30832;
    const double C30876 = C30843 + C30865;
    const double C30881 = C30847 + C30877;
    const double C2277 = C30868 - (C30661 * C30650) / C30516;
    const double C1994 = C30869 / C30520 - C30659 / C30832;
    const double C30878 = C30849 + C30868;
    const double C5629 =
        (3 * (C29978 +
              ae * (C29932 + C29721 * (C29721 * C29948 + C29972 * be) +
                    C29721 * C29972 * be) +
              C29720 * C30011) +
         ae * (C29944 + C29721 * (C29721 * C29962 + C30007 * be) +
               C29721 * C30007 * be) +
         C29720 *
             (2 * C30011 +
              ae * (C29939 + C29721 * (C29721 * C29957 + C30000 * be) +
                    C29721 * C30000 * be) +
              C29720 *
                  (C30006 +
                   ae * (C29948 +
                         C29721 * (C29721 * C29720 * C29792 + C29995 * be) +
                         C29721 * C29995 * be) +
                   C29720 * (ae * (C29781 +
                                   C29721 * (C29721 * C29792 + C29889 * be) +
                                   C29721 * C29889 * be) +
                             C29720 * (C29753 + be * C29721 * C29831 +
                                       C29721 * (be * C29831 +
                                                 C29721 * std::pow(C29724, 8) *
                                                     bs[8] * C29726)))))) /
        C29683;
    const double C30378 = C30376 + C30373;
    const double C30314 = C30313 + C30304;
    const double C108 =
        (C30870 + 2 * C30530) / C30520 - (C30879 * C30521) / C30516;
    const double C109 =
        (C30857 + 2 * C30539 + C30879) / C30520 - (C30872 * C30521) / C30516;
    const double C110 = (C30830 + C30536 / C30516 + C30872) / C30520 -
                        (C30859 * C30521) / C30516;
    const double C1146 =
        (C30873 + 2 * C30612) / C30520 - (C30880 * C30608) / C30516;
    const double C1147 =
        (C30861 + 2 * C30619 + C30880) / C30520 - (C30876 * C30608) / C30516;
    const double C1148 = (C30836 + C30616 / C30516 + C30876) / C30520 -
                         (C30866 * C30608) / C30516;
    const double C1991 =
        (C30874 + 2 * C30654) / C30520 - (C30881 * C30650) / C30516;
    const double C1992 =
        (C30863 + 2 * C30661 + C30881) / C30520 - (C30878 * C30650) / C30516;
    const double C1993 = (C30839 + C30658 / C30516 + C30878) / C30520 -
                         (C30869 * C30650) / C30516;
    const double C10454 =
        (5 * (3 * C30368 + C29721 * C30378 + C30367 * be) +
         C29721 * (4 * C30378 +
                   C29721 * (3 * C30008 +
                             C29721 * (2 * C29996 +
                                       C29721 * (C29781 +
                                                 C29721 * (C29721 * C29792 +
                                                           C29889 * be) +
                                                 C29721 * C29889 * be) +
                                       C30065 * be) +
                             C30106 * be) +
                   C30377 * be) +
         (4 * C30367 + C29721 * C30377) * be) /
        C29681;
    const double C5493 =
        (5 * (3 * C30297 + C29720 * C30314 + C30294 * ae) +
         C29720 * (4 * C30314 +
                   C29720 * (3 * C30311 +
                             C29720 * (2 * C30307 +
                                       C29720 * (C29820 +
                                                 C29720 * (C29720 * C29831 +
                                                           C29889 * ae) +
                                                 C29995 * ae) +
                                       C30000 * ae) +
                             C30007 * ae) +
                   C30308 * ae) +
         (4 * C30294 + C29720 * C30308) * ae) /
        C29681;
    const double C5622 =
        (2 * C30199 + C29720 * C30297 + C30200 * ae + C30314 * C29915) / C29681;
    const double C5624 =
        (C29721 * (3 * C30297 + C29720 * C30314 + C30294 * ae)) / C29681;
    const double C5626 =
        (3 * C30297 + C29720 * C30314 + C30294 * ae +
         (3 * C30311 +
          C29720 *
              (2 * C30307 +
               C29720 * (C29820 + C29720 * (C29720 * C29831 + C29889 * ae) +
                         C29995 * ae) +
               C30000 * ae) +
          C30007 * ae) *
             C29915) /
        C29681;
    const double C6014 =
        (C29721 *
         (4 * C30314 +
          C29720 *
              (3 * C30311 +
               C29720 * (2 * C30307 +
                         C29720 * (C29820 +
                                   C29720 * (C29720 * C29831 + C29889 * ae) +
                                   C29995 * ae) +
                         C30000 * ae) +
               C30007 * ae) +
          C30308 * ae)) /
        C29681;
    const double C6672 =
        (2 * C29721 * C30314 +
         C29721 *
             (C30314 +
              (2 * C30307 +
               C29720 * (C29820 + C29720 * (C29720 * C29831 + C29889 * ae) +
                         C29995 * ae) +
               C30000 * ae) *
                  C29915)) /
        C29681;
    const double C5647 = C113 * C5622;
    const double C25867 = C18613 * C5622;
    const double C6021 = C113 * C5624;
    const double C25235 = C18613 * C5624;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C30612 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C30619 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C2868) *
                     C30530 +
                 ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30612 +
                  ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                    C362 * C13127) *
                       C13129) *
                      C30571 * C30619 +
                  ((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 +
                    (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                       C13129) *
                      C30571 * C2868) *
                     C30539 +
                 (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C30612 +
                  ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C13565 * C13130 + C13566 * C13126 + (C355 - C356) * C13131 +
                    (C357 - C358) * C13127) *
                       C13129) *
                      C30571 * C30619 +
                  ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                    (C1438 - C1437) * C13127) *
                       C13128 +
                   ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                    (C30749 * C1427 - C113 * C1426) * C13131 +
                    (C30749 * C1429 - C113 * C1428) * C13127) *
                       C13129) *
                      C30571 * C2868) *
                     C2871)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C30612 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30806 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C30619 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30806 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30658) *
                      C2868) *
                     C2608 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30806 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30612 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30806 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30658) *
                      C30619 +
                  (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30806 +
                   ((C5909 * C13130 + C5910 * C13126 +
                     (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                        C13128 +
                    ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                     (C30749 * C1701 - C113 * C1696) * C13131 +
                     (C30749 * C1705 - C113 * C1702) * C13127) *
                        C13129) *
                       C30658) *
                      C2868) *
                     C30536)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C30880 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C30876 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C30866 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C30846) *
                     C2608 +
                 ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30880 +
                  ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                    C362 * C13127) *
                       C13129) *
                      C30571 * C30876 +
                  ((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 +
                    (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                       C13129) *
                      C30571 * C30866 +
                  ((C5753 * C13130 + C5754 * C13126 + (C5756 - C5755) * C13131 +
                    (C5758 - C5757) * C13127) *
                       C13128 +
                   ((C1436 - C1435) * C13130 + (C1438 - C1437) * C13126 +
                    (C30749 * C1168 - C113 * C1157) * C13131 +
                    (C30749 * C1175 - C113 * C1169) * C13127) *
                       C13129) *
                      C30571 * C30846) *
                     C30536)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30879 +
                 ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                    C362 * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30872 +
                 (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C13565 * C13130 + C13566 * C13126 + (C355 - C356) * C13131 +
                    (C357 - C358) * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30859 +
                 (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                    C13566 * C13127) *
                       C13128 +
                   ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                    (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C664 * C13130 + C665 * C13126 + (C356 - C355) * C13131 +
                    (C358 - C357) * C13127) *
                       C13128 +
                   ((C667 - C666) * C13130 + (C669 - C668) * C13126 +
                    (C30749 * C322 - C113 * C303) * C13131 +
                    (C30749 * C333 - C113 * C323) * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30840)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30874 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30863 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C30839) *
                      C2500 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30874 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30863 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30839) *
                      C30616) *
                     C2608 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30874 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30863 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30839) *
                      C2500 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30874 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30863 +
                   ((C15297 * C13130 + C15298 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C2176 - C2175) * C13130 + (C2178 - C2177) * C13126 +
                     (C30749 * C1311 - C113 * C1294) * C13131 +
                     (C30749 * C1321 - C113 * C1312) * C13127) *
                        C13129) *
                       C30839) *
                      C30616) *
                     C30536)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30806 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30530 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30806 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30806 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30539 +
                 ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30806 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30806 +
                   ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                     (C1596 - C1595) * C13127) *
                        C13128 +
                    ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                     (C30749 * C1585 - C113 * C1584) * C13131 +
                     (C30749 * C1587 - C113 * C1586) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C2871)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30879 +
                 ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                    C362 * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30872 +
                 (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                    C13286 * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                    C13288 * C13127) *
                       C13128 +
                   (C13565 * C13130 + C13566 * C13126 + (C355 - C356) * C13131 +
                    (C357 - C358) * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30859 +
                 (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                    C13566 * C13127) *
                       C13128 +
                   ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                    (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                       C13129) *
                      C30571 * C2500 +
                  ((C664 * C13130 + C665 * C13126 + (C356 - C355) * C13131 +
                    (C358 - C357) * C13127) *
                       C13128 +
                   ((C667 - C666) * C13130 + (C669 - C668) * C13126 +
                    (C30749 * C322 - C113 * C303) * C13131 +
                    (C30749 * C333 - C113 * C323) * C13127) *
                       C13129) *
                      C30571 * C30616) *
                     C30840)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C30880 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C30876 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C30866 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C30846) *
                     C2608 +
                 ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    C13281 * C13131 + C13282 * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30880 +
                  ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                    C13284 * C13127) *
                       C13128 +
                   (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                    C362 * C13127) *
                       C13129) *
                      C30571 * C30876 +
                  ((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                    C14402 * C13127) *
                       C13128 +
                   (C13287 * C13130 + C13288 * C13126 +
                    (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                       C13129) *
                      C30571 * C30866 +
                  ((C5753 * C13130 + C5754 * C13126 + (C5756 - C5755) * C13131 +
                    (C5758 - C5757) * C13127) *
                       C13128 +
                   ((C1436 - C1435) * C13130 + (C1438 - C1437) * C13126 +
                    (C30749 * C1168 - C113 * C1157) * C13131 +
                    (C30749 * C1175 - C113 * C1169) * C13127) *
                       C13129) *
                      C30571 * C30846) *
                     C30536)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3262 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C30612 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C3262 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C30619 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C3262 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30658) *
                      C2868) *
                     C30791 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C3262 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30612 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C3262 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30658) *
                      C30619 +
                  (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C3262 +
                   ((C5909 * C13130 + C5910 * C13126 +
                     (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                        C13128 +
                    ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                     (C30749 * C1701 - C113 * C1696) * C13131 +
                     (C30749 * C1705 - C113 * C1702) * C13127) *
                        C13129) *
                       C30658) *
                      C2868) *
                     C30536)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30654 +
                  (((C113 * C481 - C30749 * C491) * C13130 +
                    (C113 * C492 - C30749 * C511) * C13126 +
                    (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                       C13128 +
                   ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30661 +
                  (((C30749 * C497 - C113 * C484) * C13130 +
                    (C30749 * C514 - C113 * C498) * C13126 +
                    (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                       C13128 +
                   ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                    C15297 * C13131 + C15298 * C13127) *
                       C13129) *
                      C3770) *
                     C30612 +
                 ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30654 +
                  (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                    (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                       C13128 +
                   (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                    C5910 * C13127) *
                       C13129) *
                      C30661 +
                  (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                    (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                       C13128 +
                   (C15299 * C13130 + C15300 * C13126 +
                    (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                       C13129) *
                      C3770) *
                     C30619 +
                 (((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30654 +
                  ((C5631 * C13130 + C5632 * C13126 + (C5642 - C5641) * C13131 +
                    (C5644 - C5643) * C13127) *
                       C13128 +
                   (C14597 * C13130 + C14598 * C13126 +
                    (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                       C13129) *
                      C30661 +
                  ((C5649 * C13130 + C5650 * C13126 + (C5646 - C5645) * C13131 +
                    (C5648 - C5647) * C13127) *
                       C13128 +
                   ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                    (C30749 * C6463 - C113 * C6462) * C13131 +
                    (C30749 * C6465 - C113 * C6464) * C13127) *
                       C13129) *
                      C3770) *
                     C2868) *
                C30525) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C3262 +
                  (((C113 * C481 - C30749 * C491) * C13130 +
                    (C113 * C492 - C30749 * C511) * C13126 +
                    (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                       C13128 +
                   ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30658) *
                     C30880 +
                 ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C3262 +
                  (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                    (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                       C13128 +
                   (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                    C5910 * C13127) *
                       C13129) *
                      C30658) *
                     C30876 +
                 (((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C3262 +
                  ((C5631 * C13130 + C5632 * C13126 + (C5642 - C5641) * C13131 +
                    (C5644 - C5643) * C13127) *
                       C13128 +
                   (C14597 * C13130 + C14598 * C13126 +
                    (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                       C13129) *
                      C30658) *
                     C30866 +
                 (((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C3262 +
                  ((C6017 * C13130 + C6018 * C13126 + (C6020 - C6019) * C13131 +
                    (C6022 - C6021) * C13127) *
                       C13128 +
                   ((C5912 - C5911) * C13130 + (C5914 - C5913) * C13126 +
                    (C30749 * C5905 - C113 * C5904) * C13131 +
                    (C30749 * C5907 - C113 * C5906) * C13127) *
                       C13129) *
                      C30658) *
                     C30846) *
                C30525) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3262 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C3262 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30870 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C3262 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C3262 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30857 +
                 ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C3262 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C3262 +
                   ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                     (C1596 - C1595) * C13127) *
                        C13128 +
                    ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                     (C30749 * C1585 - C113 * C1584) * C13131 +
                     (C30749 * C1587 - C113 * C1586) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30830)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30881 +
                  (((C113 * C481 - C30749 * C491) * C13130 +
                    (C113 * C492 - C30749 * C511) * C13126 +
                    (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                       C13128 +
                   ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30878 +
                  (((C30749 * C497 - C113 * C484) * C13130 +
                    (C30749 * C514 - C113 * C498) * C13126 +
                    (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                       C13128 +
                   ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                    C15297 * C13131 + C15298 * C13127) *
                       C13129) *
                      C30869 +
                  (((C113 * C1996 - C30749 * C2002) * C13130 +
                    (C113 * C2003 - C30749 * C2014) * C13126 +
                    (C6675 - C6676) * C13131 + (C6677 - C6678) * C13127) *
                       C13128 +
                   ((C2285 - C2286) * C13130 + (C2287 - C2288) * C13126 +
                    (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                       C13129) *
                      C30852) *
                     C2500 +
                 ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30881 +
                  (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                    (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                       C13128 +
                   (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                    C5910 * C13127) *
                       C13129) *
                      C30878 +
                  (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                    (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                       C13128 +
                   (C15299 * C13130 + C15300 * C13126 +
                    (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                       C13129) *
                      C30869 +
                  (((C6676 - C6675) * C13130 + (C6678 - C6677) * C13126 +
                    (C6680 - C6679) * C13131 + (C6682 - C6681) * C13127) *
                       C13128 +
                   ((C15432 - C15431) * C13130 + (C15434 - C15433) * C13126 +
                    (C30749 * C6569 - C113 * C6568) * C13131 +
                    (C30749 * C6571 - C113 * C6570) * C13127) *
                       C13129) *
                      C30852) *
                     C30616) *
                C30525) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30654 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30661 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C3770) *
                      C2500 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30654 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30661 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C3770) *
                      C30616) *
                     C30791 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30654 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30661 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C3770) *
                      C2500 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30654 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30661 +
                   ((C15297 * C13130 + C15298 * C13126 +
                     (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                        C13128 +
                    ((C2176 - C2175) * C13130 + (C2178 - C2177) * C13126 +
                     (C30749 * C1311 - C113 * C1294) * C13131 +
                     (C30749 * C1321 - C113 * C1312) * C13127) *
                        C13129) *
                       C3770) *
                      C30616) *
                     C30536)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3262 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C3262 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30870 +
                 (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C3262 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C3262 +
                   ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                     C14598 * C13127) *
                        C13128 +
                    (C13895 * C13130 + C13896 * C13126 +
                     (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30857 +
                 ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C3262 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C2500 +
                  (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C3262 +
                   ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                     (C1596 - C1595) * C13127) *
                        C13128 +
                    ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                     (C30749 * C1585 - C113 * C1584) * C13131 +
                     (C30749 * C1587 - C113 * C1586) * C13127) *
                        C13129) *
                       C30658) *
                      C30616) *
                     C30830)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C3262 +
                  (((C113 * C481 - C30749 * C491) * C13130 +
                    (C113 * C492 - C30749 * C511) * C13126 +
                    (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                       C13128 +
                   ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C30658) *
                     C30880 +
                 ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C3262 +
                  (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                    (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                       C13128 +
                   (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                    C5910 * C13127) *
                       C13129) *
                      C30658) *
                     C30876 +
                 (((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C3262 +
                  ((C5631 * C13130 + C5632 * C13126 + (C5642 - C5641) * C13131 +
                    (C5644 - C5643) * C13127) *
                       C13128 +
                   (C14597 * C13130 + C14598 * C13126 +
                    (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                       C13129) *
                      C30658) *
                     C30866 +
                 (((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   (C14401 * C13130 + C14402 * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C3262 +
                  ((C6017 * C13130 + C6018 * C13126 + (C6020 - C6019) * C13131 +
                    (C6022 - C6021) * C13127) *
                       C13128 +
                   ((C5912 - C5911) * C13130 + (C5914 - C5913) * C13126 +
                    (C30749 * C5905 - C113 * C5904) * C13131 +
                    (C30749 * C5907 - C113 * C5906) * C13127) *
                       C13129) *
                      C30658) *
                     C30846) *
                C30525) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1420 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1421 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C1422 +
                   ((C5497 * C13130 + C5498 * C13126 +
                     (C5500 - C5499) * C13131 + (C5502 - C5501) * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                        C13129) *
                       C30571 * C30846) *
                      C30791 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1420 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1421 +
                   ((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C1422 +
                   ((C5753 * C13130 + C5754 * C13126 +
                     (C5756 - C5755) * C13131 + (C5758 - C5757) * C13127) *
                        C13128 +
                    ((C1436 - C1435) * C13130 + (C1438 - C1437) * C13126 +
                     (C30749 * C1168 - C113 * C1157) * C13131 +
                     (C30749 * C1175 - C113 * C1169) * C13127) *
                        C13129) *
                       C30571 * C30846) *
                      C30536)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C655 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C656 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C657 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C664 * C13130 + C665 * C13126 + (C356 - C355) * C13131 +
                     (C358 - C357) * C13127) *
                        C13128 +
                    ((C667 - C666) * C13130 + (C669 - C668) * C13126 +
                     (C30749 * C322 - C113 * C303) * C13131 +
                     (C30749 * C333 - C113 * C323) * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C30840)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C1816 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C1817 +
                    (((C30749 * C497 - C113 * C484) * C13130 +
                      (C30749 * C514 - C113 * C498) * C13126 +
                      (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                         C13128 +
                     ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                      C15297 * C13131 + C15298 * C13127) *
                         C13129) *
                        C30839) *
                       C30805 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C1816 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C1817 +
                    (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                      (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                         C13128 +
                     (C15299 * C13130 + C15300 * C13126 +
                      (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                         C13129) *
                        C30839) *
                       C30616) *
                      C30791 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C1816 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C1817 +
                    (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                      C15299 * C13131 + C15300 * C13127) *
                         C13128 +
                     ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                      (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                         C13129) *
                        C30839) *
                       C30805 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C1816 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C1817 +
                    ((C15297 * C13130 + C15298 * C13126 +
                      (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                         C13128 +
                     ((C2176 - C2175) * C13130 + (C2178 - C2177) * C13126 +
                      (C30749 * C1311 - C113 * C1294) * C13131 +
                      (C30749 * C1321 - C113 * C1312) * C13127) *
                         C13129) *
                        C30839) *
                       C30616) *
                      C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C1420 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30806 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C1421 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30806 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30658) *
                      C1422 +
                  (((C5497 * C13130 + C5498 * C13126 +
                     (C5500 - C5499) * C13131 + (C5502 - C5501) * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                        C13129) *
                       C30806 +
                   ((C6017 * C13130 + C6018 * C13126 +
                     (C6020 - C6019) * C13131 + (C6022 - C6021) * C13127) *
                        C13128 +
                    ((C5912 - C5911) * C13130 + (C5914 - C5913) * C13126 +
                     (C30749 * C5905 - C113 * C5904) * C13131 +
                     (C30749 * C5907 - C113 * C5906) * C13127) *
                        C13129) *
                       C30658) *
                      C30846) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30806 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C30806 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C291 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C30806 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C30806 +
                    ((C13891 * C13130 + C13892 * C13126 +
                      (C1589 - C1590) * C13131 + (C1591 - C1592) * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C292 +
                  ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                      C664 * C13131 + C665 * C13127) *
                         C13129) *
                        C30806 +
                    ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                      (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C13565 * C13130 + C13566 * C13126 +
                      (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                         C13129) *
                        C30806 +
                    ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                      (C1596 - C1595) * C13127) *
                         C13128 +
                     ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                      (C30749 * C1585 - C113 * C1584) * C13131 +
                      (C30749 * C1587 - C113 * C1586) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C2276 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C2277 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C2278 +
                   (((C113 * C1996 - C30749 * C2002) * C13130 +
                     (C113 * C2003 - C30749 * C2014) * C13126 +
                     (C6675 - C6676) * C13131 + (C6677 - C6678) * C13127) *
                        C13128 +
                    ((C2285 - C2286) * C13130 + (C2287 - C2288) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30852) *
                      C30805 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C2276 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C2277 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    (C15299 * C13130 + C15300 * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C2278 +
                   (((C6676 - C6675) * C13130 + (C6678 - C6677) * C13126 +
                     (C6680 - C6679) * C13131 + (C6682 - C6681) * C13127) *
                        C13128 +
                    ((C15432 - C15431) * C13130 + (C15434 - C15433) * C13126 +
                     (C30749 * C6569 - C113 * C6568) * C13131 +
                     (C30749 * C6571 - C113 * C6570) * C13127) *
                        C13129) *
                       C30852) *
                      C30616) *
                 C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C30749 * C122 - C113 * C115) * C13130 +
                        (C30749 * C136 - C113 * C123) * C13126 +
                        (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                           C13128 +
                       ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                        (C336 - C335) * C13131 + (C338 - C337) * C13127) *
                           C13129) *
                          C30571 * C30553 * C108 +
                      (((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                        (C335 - C336) * C13131 + (C337 - C338) * C13127) *
                           C13128 +
                       ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                        C359 * C13131 + C360 * C13127) *
                           C13129) *
                          C30571 * C30553 * C109 +
                      ((C164 * C13130 + C165 * C13126 + (C340 - C339) * C13131 +
                        (C342 - C341) * C13127) *
                           C13128 +
                       ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                        C664 * C13131 + C665 * C13127) *
                           C13129) *
                          C30571 * C30553 * C110 +
                      ((C166 * C13130 + C167 * C13126 + (C352 - C351) * C13131 +
                        (C354 - C353) * C13127) *
                           C13128 +
                       ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                        (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                           C13129) *
                          C30571 * C30553 * C111 +
                      ((C168 * C13130 + C169 * C13126 + (C667 - C666) * C13131 +
                        (C669 - C668) * C13127) *
                           C13128 +
                       ((C161 - C160) * C13130 + (C163 - C162) * C13126 +
                        (C30749 * C660 - C113 * C659) * C13131 +
                        (C30749 * C662 - C113 * C661) * C13127) *
                           C13129) *
                          C30571 * C30553 * C112) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((((C30749 * C122 - C113 * C115) * C13130 +
                         (C30749 * C136 - C113 * C123) * C13126 +
                         (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                            C13128 +
                        ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                         C13279 * C13131 + C13280 * C13127) *
                            C13129) *
                           C30571 * C30873 +
                       (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                         (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                            C13128 +
                        (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                         C4854 * C13127) *
                            C13129) *
                           C30571 * C30861 +
                       ((C4855 * C13130 + C4856 * C13126 +
                         (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                            C13128 +
                        (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                         C5754 * C13127) *
                            C13129) *
                           C30571 * C30836) *
                          C291 +
                      ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                         C13281 * C13131 + C13282 * C13127) *
                            C13128 +
                        ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                         C359 * C13131 + C360 * C13127) *
                            C13129) *
                           C30571 * C30873 +
                       ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                         C13284 * C13127) *
                            C13128 +
                        (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                         C362 * C13127) *
                            C13129) *
                           C30571 * C30861 +
                       ((C4853 * C13130 + C4854 * C13126 +
                         (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                            C13128 +
                        (C13287 * C13130 + C13288 * C13126 +
                         (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                            C13129) *
                           C30571 * C30836) *
                          C292 +
                      (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                         C13286 * C13127) *
                            C13128 +
                        ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                         C664 * C13131 + C665 * C13127) *
                            C13129) *
                           C30571 * C30873 +
                       ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                         C13288 * C13127) *
                            C13128 +
                        ((C352 - C351) * C13130 + (C354 - C353) * C13126 +
                         (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                            C13129) *
                           C30571 * C30861 +
                       ((C361 * C13130 + C362 * C13126 +
                         (C1436 - C1435) * C13131 + (C1438 - C1437) * C13127) *
                            C13128 +
                        ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                         (C30749 * C1427 - C113 * C1426) * C13131 +
                         (C30749 * C1429 - C113 * C1428) * C13127) *
                            C13129) *
                           C30571 * C30836) *
                          C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30874 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     (C953 - C952) * C13131 + (C955 - C954) * C13127) *
                        C13129) *
                       C30863 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C291 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30874 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     (C952 - C953) * C13131 + (C954 - C955) * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30863 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     (C2171 - C2172) * C13131 + (C2173 - C2174) * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C292 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30874 +
                   ((C546 * C13130 + C547 * C13126 + (C957 - C956) * C13131 +
                     (C959 - C958) * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30863 +
                   ((C548 * C13130 + C549 * C13126 + (C2176 - C2175) * C13131 +
                     (C2178 - C2177) * C13127) *
                        C13128 +
                    ((C543 - C542) * C13130 + (C545 - C544) * C13126 +
                     (C30749 * C2167 - C113 * C2166) * C13131 +
                     (C30749 * C2169 - C113 * C2168) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C1146 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C1147 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C1148 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   ((C1431 - C1432) * C13130 + (C1433 - C1434) * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C1149 +
                  ((C5507 * C13130 + C5508 * C13126 + (C5504 - C5503) * C13131 +
                    (C5506 - C5505) * C13127) *
                       C13128 +
                   ((C5756 - C5755) * C13130 + (C5758 - C5757) * C13126 +
                    (C30749 * C5749 - C113 * C5748) * C13131 +
                    (C30749 * C5751 - C113 * C5750) * C13127) *
                       C13129) *
                      C30571 * C1150) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30874 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30863 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C1078 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30874 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30863 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    ((C2171 - C2172) * C13130 + (C2173 - C2174) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30839) *
                      C1079 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30874 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    ((C1589 - C1590) * C13130 + (C1591 - C1592) * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30863 +
                   ((C5649 * C13130 + C5650 * C13126 +
                     (C5646 - C5645) * C13131 + (C5648 - C5647) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30749 * C6463 - C113 * C6462) * C13131 +
                     (C30749 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30839) *
                      C30836) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1816 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1817 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C1816 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C1817 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     (C2171 - C2172) * C13131 + (C2173 - C2174) * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C1816 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C1817 +
                   ((C548 * C13130 + C549 * C13126 + (C2176 - C2175) * C13131 +
                     (C2178 - C2177) * C13127) *
                        C13128 +
                    ((C543 - C542) * C13130 + (C545 - C544) * C13126 +
                     (C30749 * C2167 - C113 * C2166) * C13131 +
                     (C30749 * C2169 - C113 * C2168) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1816 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1817 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30873 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C1816 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C1817 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    ((C2171 - C2172) * C13130 + (C2173 - C2174) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30839) *
                      C30861 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C1816 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C1817 +
                   ((C5649 * C13130 + C5650 * C13126 +
                     (C5646 - C5645) * C13131 + (C5648 - C5647) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30749 * C6463 - C113 * C6462) * C13131 +
                     (C30749 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30839) *
                      C30836) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C1991 +
                  (((C113 * C481 - C30749 * C491) * C13130 +
                    (C113 * C492 - C30749 * C511) * C13126 +
                    (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                       C13128 +
                   ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                    C13891 * C13131 + C13892 * C13127) *
                       C13129) *
                      C1992 +
                  (((C30749 * C497 - C113 * C484) * C13130 +
                    (C30749 * C514 - C113 * C498) * C13126 +
                    (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                       C13128 +
                   ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                    (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                       C13129) *
                      C1993 +
                  (((C113 * C1996 - C30749 * C2002) * C13130 +
                    (C113 * C2003 - C30749 * C2014) * C13126 +
                    (C6675 - C6676) * C13131 + (C6677 - C6678) * C13127) *
                       C13128 +
                   ((C2285 - C2286) * C13130 + (C2287 - C2288) * C13126 +
                    (C113 * C2391 - C30749 * C2395) * C13131 +
                    (C113 * C2396 - C30749 * C2400) * C13127) *
                       C13129) *
                      C1994 +
                  (((C30749 * C2008 - C113 * C1999) * C13130 +
                    (C30749 * C2017 - C113 * C2009) * C13126 +
                    (C30749 * C6309 - C113 * C6305) * C13131 +
                    (C30749 * C6314 - C113 * C6310) * C13127) *
                       C13128 +
                   ((C30749 * C2010 - C113 * C2000) * C13130 +
                    (C30749 * C2018 - C113 * C2011) * C13126 +
                    (C30749 * C10605 - C113 * C10604) * C13131 +
                    (C30749 * C10607 - C113 * C10606) * C13127) *
                       C13129) *
                      C1995) *
                 C30553 * C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30806 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C1078 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C30806 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C1079 +
                   (((C4855 * C13130 + C4856 * C13126 +
                      (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                      C5754 * C13127) *
                         C13129) *
                        C30806 +
                    ((C5631 * C13130 + C5632 * C13126 +
                      (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30791 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C30806 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C1078 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C30806 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C1079 +
                   (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                      C14402 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                         C13129) *
                        C30806 +
                    ((C5909 * C13130 + C5910 * C13126 +
                      (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                         C13128 +
                     ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                      (C30749 * C1701 - C113 * C1696) * C13131 +
                      (C30749 * C1705 - C113 * C1702) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30536)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     (C953 - C952) * C13131 + (C955 - C954) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C655 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30806 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     (C952 - C953) * C13131 + (C954 - C955) * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C656 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30806 +
                   ((C546 * C13130 + C547 * C13126 + (C957 - C956) * C13131 +
                     (C959 - C958) * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C657 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C30806 +
                   ((C777 * C13130 + C778 * C13126 + (C961 - C960) * C13131 +
                     (C963 - C962) * C13127) *
                        C13128 +
                    ((C780 - C779) * C13130 + (C782 - C781) * C13126 +
                     (C30749 * C944 - C113 * C935) * C13131 +
                     (C30749 * C950 - C113 * C945) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30840)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C2276 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C2277 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C2278 +
                   (((C113 * C1996 - C30749 * C2002) * C13130 +
                     (C113 * C2003 - C30749 * C2014) * C13126 +
                     (C6675 - C6676) * C13131 + (C6677 - C6678) * C13127) *
                        C13128 +
                    ((C2285 - C2286) * C13130 + (C2287 - C2288) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30852) *
                      C30553 * C30791 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C2276 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C2277 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C2278 +
                   (((C2286 - C2285) * C13130 + (C2288 - C2287) * C13126 +
                     (C15432 - C15431) * C13131 + (C15434 - C15433) * C13127) *
                        C13128 +
                    ((C2290 - C2289) * C13130 + (C2292 - C2291) * C13126 +
                     (C30749 * C2397 - C113 * C2392) * C13131 +
                     (C30749 * C2401 - C113 * C2398) * C13127) *
                        C13129) *
                       C30852) *
                      C30553 * C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C291 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C292 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C352 - C351) * C13130 + (C354 - C353) * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    (C336 - C335) * C13131 + (C338 - C337) * C13127) *
                       C13129) *
                      C30571 * C30553 * C108 +
                  (((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    (C335 - C336) * C13131 + (C337 - C338) * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30553 * C109 +
                  ((C164 * C13130 + C165 * C13126 + (C340 - C339) * C13131 +
                    (C342 - C341) * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C30553 * C110 +
                  ((C166 * C13130 + C167 * C13126 + (C352 - C351) * C13131 +
                    (C354 - C353) * C13127) *
                       C13128 +
                   ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                    (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                       C13129) *
                      C30571 * C30553 * C111 +
                  ((C168 * C13130 + C169 * C13126 + (C667 - C666) * C13131 +
                    (C669 - C668) * C13127) *
                       C13128 +
                   ((C161 - C160) * C13130 + (C163 - C162) * C13126 +
                    (C30749 * C660 - C113 * C659) * C13131 +
                    (C30749 * C662 - C113 * C661) * C13127) *
                       C13129) *
                      C30571 * C30553 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C1146 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C1147 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C1148 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   ((C1431 - C1432) * C13130 + (C1433 - C1434) * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C1149 +
                  ((C5507 * C13130 + C5508 * C13126 + (C5504 - C5503) * C13131 +
                    (C5506 - C5505) * C13127) *
                       C13128 +
                   ((C5756 - C5755) * C13130 + (C5758 - C5757) * C13126 +
                    (C30749 * C5749 - C113 * C5748) * C13131 +
                    (C30749 * C5751 - C113 * C5750) * C13127) *
                       C13129) *
                      C30571 * C1150) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1816 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1817 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C1816 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C1817 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     (C2171 - C2172) * C13131 + (C2173 - C2174) * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C1816 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C1817 +
                   ((C548 * C13130 + C549 * C13126 + (C2176 - C2175) * C13131 +
                     (C2178 - C2177) * C13127) *
                        C13128 +
                    ((C543 - C542) * C13130 + (C545 - C544) * C13126 +
                     (C30749 * C2167 - C113 * C2166) * C13131 +
                     (C30749 * C2169 - C113 * C2168) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C1816 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C1817 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30873 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C1816 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C1817 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    ((C2171 - C2172) * C13130 + (C2173 - C2174) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30839) *
                      C30861 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C1816 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C1817 +
                   ((C5649 * C13130 + C5650 * C13126 +
                     (C5646 - C5645) * C13131 + (C5648 - C5647) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30749 * C6463 - C113 * C6462) * C13131 +
                     (C30749 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30839) *
                      C30836) *
                 C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3262 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C3262 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C30530 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C3262 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C3262 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C30539 +
                  ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                      C664 * C13131 + C665 * C13127) *
                         C13129) *
                        C3262 +
                    ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                      (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C13565 * C13130 + C13566 * C13126 +
                      (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                         C13129) *
                        C3262 +
                    ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                      (C1596 - C1595) * C13127) *
                         C13128 +
                     ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                      (C30749 * C1585 - C113 * C1584) * C13131 +
                      (C30749 * C1587 - C113 * C1586) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C2871)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30654 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30661 +
                    (((C30749 * C497 - C113 * C484) * C13130 +
                      (C30749 * C514 - C113 * C498) * C13126 +
                      (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                         C13128 +
                     ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                      C15297 * C13131 + C15298 * C13127) *
                         C13129) *
                        C3770) *
                       C30805 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C30654 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30661 +
                    (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                      (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                         C13128 +
                     (C15299 * C13130 + C15300 * C13126 +
                      (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                         C13129) *
                        C3770) *
                       C30616) *
                      C2608 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C30654 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30661 +
                    (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                      C15299 * C13131 + C15300 * C13127) *
                         C13128 +
                     ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                      (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                         C13129) *
                        C3770) *
                       C30805 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C30654 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30661 +
                    ((C15297 * C13130 + C15298 * C13126 +
                      (C6468 - C6467) * C13131 + (C6470 - C6469) * C13127) *
                         C13128 +
                     ((C2176 - C2175) * C13130 + (C2178 - C2177) * C13126 +
                      (C30749 * C1311 - C113 * C1294) * C13131 +
                      (C30749 * C1321 - C113 * C1312) * C13127) *
                         C13129) *
                        C3770) *
                       C30616) *
                      C30536)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3262 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C30873 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C3262 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C30861 +
                   (((C4855 * C13130 + C4856 * C13126 +
                      (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                      C5754 * C13127) *
                         C13129) *
                        C3262 +
                    ((C5631 * C13130 + C5632 * C13126 +
                      (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C2608 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C3262 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C30873 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C3262 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C30861 +
                   (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                      C14402 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                         C13129) *
                        C3262 +
                    ((C5909 * C13130 + C5910 * C13126 +
                      (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                         C13128 +
                     ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                      (C30749 * C1701 - C113 * C1696) * C13131 +
                      (C30749 * C1705 - C113 * C1702) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30536)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3262 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30879 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C3262 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30872 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C3262 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30859 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C3262 +
                   ((C777 * C13130 + C778 * C13126 + (C961 - C960) * C13131 +
                     (C963 - C962) * C13127) *
                        C13128 +
                    ((C780 - C779) * C13130 + (C782 - C781) * C13126 +
                     (C30749 * C944 - C113 * C935) * C13131 +
                     (C30749 * C950 - C113 * C945) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30840)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30881 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30878 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C30869 +
                   (((C113 * C1996 - C30749 * C2002) * C13130 +
                     (C113 * C2003 - C30749 * C2014) * C13126 +
                     (C6675 - C6676) * C13131 + (C6677 - C6678) * C13127) *
                        C13128 +
                    ((C2285 - C2286) * C13130 + (C2287 - C2288) * C13126 +
                     (C15431 - C15432) * C13131 + (C15433 - C15434) * C13127) *
                        C13129) *
                       C30852) *
                      C30553 * C2608 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30881 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30878 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30869 +
                   (((C2286 - C2285) * C13130 + (C2288 - C2287) * C13126 +
                     (C15432 - C15431) * C13131 + (C15434 - C15433) * C13127) *
                        C13128 +
                    ((C2290 - C2289) * C13130 + (C2292 - C2291) * C13126 +
                     (C30749 * C2397 - C113 * C2392) * C13131 +
                     (C30749 * C2401 - C113 * C2398) * C13127) *
                        C13129) *
                       C30852) *
                      C30553 * C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30654 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30661 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     C15297 * C13131 + C15298 * C13127) *
                        C13129) *
                       C3770) *
                      C30553 * C30530 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30654 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30661 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     C15299 * C13131 + C15300 * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C3770) *
                      C30553 * C30539 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30654 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30661 +
                   ((C548 * C13130 + C549 * C13126 + (C2176 - C2175) * C13131 +
                     (C2178 - C2177) * C13127) *
                        C13128 +
                    ((C543 - C542) * C13130 + (C545 - C544) * C13126 +
                     (C30749 * C2167 - C113 * C2166) * C13131 +
                     (C30749 * C2169 - C113 * C2168) * C13127) *
                        C13129) *
                       C3770) *
                      C30553 * C2871)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C3262 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30879 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C3262 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     C13893 * C13131 + C13894 * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30872 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C3262 +
                   ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                     C13896 * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30859 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C3262 +
                   ((C777 * C13130 + C778 * C13126 + (C961 - C960) * C13131 +
                     (C963 - C962) * C13127) *
                        C13128 +
                    ((C780 - C779) * C13130 + (C782 - C781) * C13126 +
                     (C30749 * C944 - C113 * C935) * C13131 +
                     (C30749 * C950 - C113 * C945) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30840)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C3262 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C30873 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C3262 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C30861 +
                   (((C4855 * C13130 + C4856 * C13126 +
                      (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                      C5754 * C13127) *
                         C13129) *
                        C3262 +
                    ((C5631 * C13130 + C5632 * C13126 +
                      (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C2608 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C3262 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C30873 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C3262 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C30861 +
                   (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                      C14402 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                         C13129) *
                        C3262 +
                    ((C5909 * C13130 + C5910 * C13126 +
                      (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                         C13128 +
                     ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                      (C30749 * C1701 - C113 * C1696) * C13131 +
                      (C30749 * C1705 - C113 * C1702) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C655 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C656 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C657 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C30571 * C30805 +
                   ((C664 * C13130 + C665 * C13126 + (C356 - C355) * C13131 +
                     (C358 - C357) * C13127) *
                        C13128 +
                    ((C667 - C666) * C13130 + (C669 - C668) * C13126 +
                     (C30749 * C322 - C113 * C303) * C13131 +
                     (C30749 * C333 - C113 * C323) * C13127) *
                        C13129) *
                       C30571 * C30616) *
                      C30840)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1420 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1421 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C1422 +
                   ((C5497 * C13130 + C5498 * C13126 +
                     (C5500 - C5499) * C13131 + (C5502 - C5501) * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                        C13129) *
                       C30571 * C30846) *
                      C30791 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1420 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1421 +
                   ((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                     C14402 * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C1422 +
                   ((C5753 * C13130 + C5754 * C13126 +
                     (C5756 - C5755) * C13131 + (C5758 - C5757) * C13127) *
                        C13128 +
                    ((C1436 - C1435) * C13130 + (C1438 - C1437) * C13126 +
                     (C30749 * C1168 - C113 * C1157) * C13131 +
                     (C30749 * C1175 - C113 * C1169) * C13127) *
                        C13129) *
                       C30571 * C30846) *
                      C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30806 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C30806 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C291 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C30806 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C30806 +
                    ((C13891 * C13130 + C13892 * C13126 +
                      (C1589 - C1590) * C13131 + (C1591 - C1592) * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C292 +
                  ((((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                      C13286 * C13127) *
                         C13128 +
                     ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                      C664 * C13131 + C665 * C13127) *
                         C13129) *
                        C30806 +
                    ((C546 * C13130 + C547 * C13126 + C13895 * C13131 +
                      C13896 * C13127) *
                         C13128 +
                     ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                      (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                         C13129) *
                        C30658) *
                       C30805 +
                   (((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                      C13288 * C13127) *
                         C13128 +
                     (C13565 * C13130 + C13566 * C13126 +
                      (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                         C13129) *
                        C30806 +
                    ((C964 * C13130 + C965 * C13126 + (C1594 - C1593) * C13131 +
                      (C1596 - C1595) * C13127) *
                         C13128 +
                     ((C961 - C960) * C13130 + (C963 - C962) * C13126 +
                      (C30749 * C1585 - C113 * C1584) * C13131 +
                      (C30749 * C1587 - C113 * C1586) * C13127) *
                         C13129) *
                        C30658) *
                       C30616) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30658) *
                      C1420 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30806 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30658) *
                      C1421 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30806 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    (C14597 * C13130 + C14598 * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30658) *
                      C1422 +
                  (((C5497 * C13130 + C5498 * C13126 +
                     (C5500 - C5499) * C13131 + (C5502 - C5501) * C13127) *
                        C13128 +
                    (C14401 * C13130 + C14402 * C13126 +
                     (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                        C13129) *
                       C30806 +
                   ((C6017 * C13130 + C6018 * C13126 +
                     (C6020 - C6019) * C13131 + (C6022 - C6021) * C13127) *
                        C13128 +
                    ((C5912 - C5911) * C13130 + (C5914 - C5913) * C13126 +
                     (C30749 * C5905 - C113 * C5904) * C13131 +
                     (C30749 * C5907 - C113 * C5906) * C13127) *
                        C13129) *
                       C30658) *
                      C30846) *
                 C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C291 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C292 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C352 - C351) * C13130 + (C354 - C353) * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    (C336 - C335) * C13131 + (C338 - C337) * C13127) *
                       C13129) *
                      C30571 * C30553 * C108 +
                  (((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    (C335 - C336) * C13131 + (C337 - C338) * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30553 * C109 +
                  ((C164 * C13130 + C165 * C13126 + (C340 - C339) * C13131 +
                    (C342 - C341) * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C30553 * C110 +
                  ((C166 * C13130 + C167 * C13126 + (C352 - C351) * C13131 +
                    (C354 - C353) * C13127) *
                       C13128 +
                   ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                    (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                       C13129) *
                      C30571 * C30553 * C111 +
                  ((C168 * C13130 + C169 * C13126 + (C667 - C666) * C13131 +
                    (C669 - C668) * C13127) *
                       C13128 +
                   ((C161 - C160) * C13130 + (C163 - C162) * C13126 +
                    (C30749 * C660 - C113 * C659) * C13131 +
                    (C30749 * C662 - C113 * C661) * C13127) *
                       C13129) *
                      C30571 * C30553 * C112)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30874 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     (C953 - C952) * C13131 + (C955 - C954) * C13127) *
                        C13129) *
                       C30863 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C291 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30874 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     (C952 - C953) * C13131 + (C954 - C955) * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30863 +
                   (((C531 - C530) * C13130 + (C533 - C532) * C13126 +
                     (C2171 - C2172) * C13131 + (C2173 - C2174) * C13127) *
                        C13128 +
                    ((C535 - C534) * C13130 + (C537 - C536) * C13126 +
                     (C2175 - C2176) * C13131 + (C2177 - C2178) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C292 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30874 +
                   ((C546 * C13130 + C547 * C13126 + (C957 - C956) * C13131 +
                     (C959 - C958) * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30863 +
                   ((C548 * C13130 + C549 * C13126 + (C2176 - C2175) * C13131 +
                     (C2178 - C2177) * C13127) *
                        C13128 +
                    ((C543 - C542) * C13130 + (C545 - C544) * C13126 +
                     (C30749 * C2167 - C113 * C2166) * C13131 +
                     (C30749 * C2169 - C113 * C2168) * C13127) *
                        C13129) *
                       C30839) *
                      C30553 * C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C1146 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C1147 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C1148 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   ((C1431 - C1432) * C13130 + (C1433 - C1434) * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C1149 +
                  ((C5507 * C13130 + C5508 * C13126 + (C5504 - C5503) * C13131 +
                    (C5506 - C5505) * C13127) *
                       C13128 +
                   ((C5756 - C5755) * C13130 + (C5758 - C5757) * C13126 +
                    (C30749 * C5749 - C113 * C5748) * C13131 +
                    (C30749 * C5751 - C113 * C5750) * C13127) *
                       C13129) *
                      C30571 * C1150) *
                 C30525) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30874 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     C13891 * C13131 + C13892 * C13127) *
                        C13129) *
                       C30863 +
                   (((C30749 * C497 - C113 * C484) * C13130 +
                     (C30749 * C514 - C113 * C498) * C13126 +
                     (C5633 - C5634) * C13131 + (C5635 - C5636) * C13127) *
                        C13128 +
                    ((C530 - C531) * C13130 + (C532 - C533) * C13126 +
                     (C2172 - C2171) * C13131 + (C2174 - C2173) * C13127) *
                        C13129) *
                       C30839) *
                      C1078 +
                  ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30874 +
                   (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                     (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                        C13128 +
                    (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                     C5910 * C13127) *
                        C13129) *
                       C30863 +
                   (((C5634 - C5633) * C13130 + (C5636 - C5635) * C13126 +
                     (C5638 - C5637) * C13131 + (C5640 - C5639) * C13127) *
                        C13128 +
                    ((C2171 - C2172) * C13130 + (C2173 - C2174) * C13126 +
                     (C6467 - C6468) * C13131 + (C6469 - C6470) * C13127) *
                        C13129) *
                       C30839) *
                      C1079 +
                  (((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30874 +
                   ((C5631 * C13130 + C5632 * C13126 +
                     (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                        C13128 +
                    ((C1589 - C1590) * C13130 + (C1591 - C1592) * C13126 +
                     (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                        C13129) *
                       C30863 +
                   ((C5649 * C13130 + C5650 * C13126 +
                     (C5646 - C5645) * C13131 + (C5648 - C5647) * C13127) *
                        C13128 +
                    ((C6468 - C6467) * C13130 + (C6470 - C6469) * C13126 +
                     (C30749 * C6463 - C113 * C6462) * C13131 +
                     (C30749 * C6465 - C113 * C6464) * C13127) *
                        C13129) *
                       C30839) *
                      C30836) *
                 C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30806 +
                   (((C113 * C481 - C30749 * C491) * C13130 +
                     (C113 * C492 - C30749 * C511) * C13126 +
                     (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                        C13128 +
                    ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                     (C953 - C952) * C13131 + (C955 - C954) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C655 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30806 +
                   (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                     (C952 - C953) * C13131 + (C954 - C955) * C13127) *
                        C13128 +
                    ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                     C964 * C13131 + C965 * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C656 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30806 +
                   ((C546 * C13130 + C547 * C13126 + (C957 - C956) * C13131 +
                     (C959 - C958) * C13127) *
                        C13128 +
                    ((C539 - C538) * C13130 + (C541 - C540) * C13126 +
                     (C960 - C961) * C13131 + (C962 - C963) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C657 +
                  (((C166 * C13130 + C167 * C13126 + C13565 * C13131 +
                     C13566 * C13127) *
                        C13128 +
                    ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                     (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                        C13129) *
                       C30806 +
                   ((C777 * C13130 + C778 * C13126 + (C961 - C960) * C13131 +
                     (C963 - C962) * C13127) *
                        C13128 +
                    ((C780 - C779) * C13130 + (C782 - C781) * C13126 +
                     (C30749 * C944 - C113 * C935) * C13131 +
                     (C30749 * C950 - C113 * C945) * C13127) *
                        C13129) *
                       C30658) *
                      C30553 * C30840)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((((C30749 * C122 - C113 * C115) * C13130 +
                      (C30749 * C136 - C113 * C123) * C13126 +
                      (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                         C13128 +
                     ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                      C13279 * C13131 + C13280 * C13127) *
                         C13129) *
                        C30806 +
                    (((C113 * C481 - C30749 * C491) * C13130 +
                      (C113 * C492 - C30749 * C511) * C13126 +
                      (C5309 - C5310) * C13131 + (C5311 - C5312) * C13127) *
                         C13128 +
                     ((C522 - C523) * C13130 + (C524 - C525) * C13126 +
                      C13891 * C13131 + C13892 * C13127) *
                         C13129) *
                        C30658) *
                       C1078 +
                   ((((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                      (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                         C13128 +
                     (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                      C4854 * C13127) *
                         C13129) *
                        C30806 +
                    (((C5310 - C5309) * C13130 + (C5312 - C5311) * C13126 +
                      (C5314 - C5313) * C13131 + (C5316 - C5315) * C13127) *
                         C13128 +
                     (C13893 * C13130 + C13894 * C13126 + C5909 * C13131 +
                      C5910 * C13127) *
                         C13129) *
                        C30658) *
                       C1079 +
                   (((C4855 * C13130 + C4856 * C13126 +
                      (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                         C13128 +
                     (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                      C5754 * C13127) *
                         C13129) *
                        C30806 +
                    ((C5631 * C13130 + C5632 * C13126 +
                      (C5642 - C5641) * C13131 + (C5644 - C5643) * C13127) *
                         C13128 +
                     (C14597 * C13130 + C14598 * C13126 +
                      (C5911 - C5912) * C13131 + (C5913 - C5914) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30791 +
                  (((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                      C13281 * C13131 + C13282 * C13127) *
                         C13128 +
                     ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                      C359 * C13131 + C360 * C13127) *
                         C13129) *
                        C30806 +
                    (((C523 - C522) * C13130 + (C525 - C524) * C13126 +
                      C13893 * C13131 + C13894 * C13127) *
                         C13128 +
                     ((C527 - C526) * C13130 + (C529 - C528) * C13126 +
                      C964 * C13131 + C965 * C13127) *
                         C13129) *
                        C30658) *
                       C1078 +
                   (((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                      C13284 * C13127) *
                         C13128 +
                     (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                      C362 * C13127) *
                         C13129) *
                        C30806 +
                    ((C13891 * C13130 + C13892 * C13126 + C14597 * C13131 +
                      C14598 * C13127) *
                         C13128 +
                     (C13895 * C13130 + C13896 * C13126 +
                      (C1593 - C1594) * C13131 + (C1595 - C1596) * C13127) *
                         C13129) *
                        C30658) *
                       C1079 +
                   (((C4853 * C13130 + C4854 * C13126 + C14401 * C13131 +
                      C14402 * C13127) *
                         C13128 +
                     (C13287 * C13130 + C13288 * C13126 +
                      (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                         C13129) *
                        C30806 +
                    ((C5909 * C13130 + C5910 * C13126 +
                      (C5912 - C5911) * C13131 + (C5914 - C5913) * C13127) *
                         C13128 +
                     ((C1594 - C1593) * C13130 + (C1596 - C1595) * C13126 +
                      (C30749 * C1701 - C113 * C1696) * C13131 +
                      (C30749 * C1705 - C113 * C1702) * C13127) *
                         C13129) *
                        C30658) *
                       C30836) *
                      C30536)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    (C336 - C335) * C13131 + (C338 - C337) * C13127) *
                       C13129) *
                      C30571 * C30553 * C108 +
                  (((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                    (C335 - C336) * C13131 + (C337 - C338) * C13127) *
                       C13128 +
                   ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                    C359 * C13131 + C360 * C13127) *
                       C13129) *
                      C30571 * C30553 * C109 +
                  ((C164 * C13130 + C165 * C13126 + (C340 - C339) * C13131 +
                    (C342 - C341) * C13127) *
                       C13128 +
                   ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                    C664 * C13131 + C665 * C13127) *
                       C13129) *
                      C30571 * C30553 * C110 +
                  ((C166 * C13130 + C167 * C13126 + (C352 - C351) * C13131 +
                    (C354 - C353) * C13127) *
                       C13128 +
                   ((C157 - C156) * C13130 + (C159 - C158) * C13126 +
                    (C666 - C667) * C13131 + (C668 - C669) * C13127) *
                       C13129) *
                      C30571 * C30553 * C111 +
                  ((C168 * C13130 + C169 * C13126 + (C667 - C666) * C13131 +
                    (C669 - C668) * C13127) *
                       C13128 +
                   ((C161 - C160) * C13130 + (C163 - C162) * C13126 +
                    (C30749 * C660 - C113 * C659) * C13131 +
                    (C30749 * C662 - C113 * C661) * C13127) *
                       C13129) *
                      C30571 * C30553 * C112)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C291 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C292 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C30873 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    ((C352 - C351) * C13130 + (C354 - C353) * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C30861 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C30749 * C122 - C113 * C115) * C13130 +
                     (C30749 * C136 - C113 * C123) * C13126 +
                     (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                        C13128 +
                    ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                     C13279 * C13131 + C13280 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                     (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                        C13128 +
                    (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                     C4854 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4855 * C13130 + C4856 * C13126 +
                     (C4850 - C4849) * C13131 + (C4852 - C4851) * C13127) *
                        C13128 +
                    (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                     C5754 * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30870 +
                  ((((C145 - C144) * C13130 + (C147 - C146) * C13126 +
                     C13281 * C13131 + C13282 * C13127) *
                        C13128 +
                    ((C149 - C148) * C13130 + (C151 - C150) * C13126 +
                     C359 * C13131 + C360 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C13279 * C13130 + C13280 * C13126 + C13283 * C13131 +
                     C13284 * C13127) *
                        C13128 +
                    (C13285 * C13130 + C13286 * C13126 + C361 * C13131 +
                     C362 * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C4853 * C13130 + C4854 * C13126 +
                     (C1431 - C1432) * C13131 + (C1433 - C1434) * C13127) *
                        C13128 +
                    (C13287 * C13130 + C13288 * C13126 +
                     (C1435 - C1436) * C13131 + (C1437 - C1438) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30857 +
                  (((C164 * C13130 + C165 * C13126 + C13285 * C13131 +
                     C13286 * C13127) *
                        C13128 +
                    ((C153 - C152) * C13130 + (C155 - C154) * C13126 +
                     C664 * C13131 + C665 * C13127) *
                        C13129) *
                       C30571 * C1078 +
                   ((C359 * C13130 + C360 * C13126 + C13287 * C13131 +
                     C13288 * C13127) *
                        C13128 +
                    (C13565 * C13130 + C13566 * C13126 +
                     (C355 - C356) * C13131 + (C357 - C358) * C13127) *
                        C13129) *
                       C30571 * C1079 +
                   ((C361 * C13130 + C362 * C13126 + (C1436 - C1435) * C13131 +
                     (C1438 - C1437) * C13127) *
                        C13128 +
                    ((C356 - C355) * C13130 + (C358 - C357) * C13126 +
                     (C30749 * C1427 - C113 * C1426) * C13131 +
                     (C30749 * C1429 - C113 * C1428) * C13127) *
                        C13129) *
                       C30571 * C30836) *
                      C30830)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C30749 * C122 - C113 * C115) * C13130 +
                    (C30749 * C136 - C113 * C123) * C13126 +
                    (C4841 - C4842) * C13131 + (C4843 - C4844) * C13127) *
                       C13128 +
                   ((C144 - C145) * C13130 + (C146 - C147) * C13126 +
                    C13279 * C13131 + C13280 * C13127) *
                       C13129) *
                      C30571 * C1146 +
                  (((C4842 - C4841) * C13130 + (C4844 - C4843) * C13126 +
                    (C4846 - C4845) * C13131 + (C4848 - C4847) * C13127) *
                       C13128 +
                   (C13281 * C13130 + C13282 * C13126 + C4853 * C13131 +
                    C4854 * C13127) *
                       C13129) *
                      C30571 * C1147 +
                  ((C4855 * C13130 + C4856 * C13126 + (C4850 - C4849) * C13131 +
                    (C4852 - C4851) * C13127) *
                       C13128 +
                   (C13283 * C13130 + C13284 * C13126 + C5753 * C13131 +
                    C5754 * C13127) *
                       C13129) *
                      C30571 * C1148 +
                  ((C5497 * C13130 + C5498 * C13126 + (C5500 - C5499) * C13131 +
                    (C5502 - C5501) * C13127) *
                       C13128 +
                   ((C1431 - C1432) * C13130 + (C1433 - C1434) * C13126 +
                    (C5755 - C5756) * C13131 + (C5757 - C5758) * C13127) *
                       C13129) *
                      C30571 * C1149 +
                  ((C5507 * C13130 + C5508 * C13126 + (C5504 - C5503) * C13131 +
                    (C5506 - C5505) * C13127) *
                       C13128 +
                   ((C5756 - C5755) * C13130 + (C5758 - C5757) * C13126 +
                    (C30749 * C5749 - C113 * C5748) * C13131 +
                    (C30749 * C5751 - C113 * C5750) * C13127) *
                       C13129) *
                      C30571 * C1150) *
                 C30525) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30612 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30619 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30571 * C2868) *
              C30530 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30612 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30619 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C2868) *
              C30539 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30612 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30619 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C2868) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30612 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30619 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C30806 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C25861 - C25862 + C25863 - C25864) * C13131 +
             (C25865 - C25866 + C25867 - C25868) * C13127) *
                C30503 * C30658) *
               C2868) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30612 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30619 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C30806 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30880 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30876 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30571 * C30866 +
           ((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30880 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30876 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30866 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C13131 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C13127) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C2500 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C2500 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30616) *
              C30872 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C2500 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30616) *
              C30859 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30571 * C2500 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                C13131 +
            (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                C13127) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30874 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30863 +
            ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C13130 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C13126 +
             (C25383 - C25384 + C25385 - C25386) * C13131 +
             (C25387 - C25388 + C25389 - C25390) * C13127) *
                C30503 * C30839) *
               C2500 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30874 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30863 +
            ((C25384 - C25383 + C25386 - C25385) * C13130 +
             (C25388 - C25387 + C25390 - C25389) * C13126 +
             (C25399 - C25400 + C25401 - C25402) * C13131 +
             (C25403 - C25404 + C25405 - C25406) * C13127) *
                C30503 * C30839) *
               C30616) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30874 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30863 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30503 * C30839) *
               C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30874 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30863 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C13131 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C13127) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C30806 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C30806 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C2500 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C2500 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30616) *
              C30872 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C2500 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30616) *
              C30859 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30571 * C2500 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                C13131 +
            (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                C13127) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30880 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30876 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30571 * C30866 +
           ((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30880 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30876 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30866 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C13131 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C13127) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30612 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30619 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C3262 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C25861 - C25862 + C25863 - C25864) * C13131 +
             (C25865 - C25866 + C25867 - C25868) * C13127) *
                C30503 * C30658) *
               C2868) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30612 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30619 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C3262 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30654 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30661 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C3770) *
              C30612 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30654 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30661 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C3770) *
              C30619 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30654 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C30661 +
           ((C25400 - C25399 + C25402 - C25401) * C13130 +
            (C25404 - C25403 + C25406 - C25405) * C13126 +
            (C18610 * C5621 - C18612 * C5618 + C18611 * C6671 -
             C18613 * C6670) *
                C13131 +
            (C18610 * C5627 - C18612 * C5622 + C18611 * C6673 -
             C18613 * C6672) *
                C13127) *
               C30503 * C3770) *
              C2868) *
         C30525) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C3262 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C30880 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C3262 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30658) *
              C30876 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C3262 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C30658) *
              C30866 +
          (((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C3262 +
           ((C25862 - C25861 + C25864 - C25863) * C13130 +
            (C25866 - C25865 + C25868 - C25867) * C13126 +
            (C18610 * C5623 - C18612 * C5619 + C18611 * C5625 -
             C18613 * C5620) *
                C13131 +
            (C18610 * C5628 - C18612 * C5624 + C18611 * C5629 -
             C18613 * C5626) *
                C13127) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C3262 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C3262 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30881 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30878 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30869 +
           ((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
             C18611 * C2008) *
                C13130 +
            (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
             C18611 * C2017) *
                C13126 +
            (C26697 - C26698 + C26699 - C26700) * C13131 +
            (C26701 - C26702 + C26703 - C26704) * C13127) *
               C30503 * C30852) *
              C2500 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30881 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30878 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C30869 +
           ((C26698 - C26697 + C26700 - C26699) * C13130 +
            (C26702 - C26701 + C26704 - C26703) * C13126 +
            (C18610 * C6307 - C18612 * C6304 + C18611 * C6311 -
             C18613 * C6306) *
                C13131 +
            (C18610 * C6313 - C18612 * C6308 + C18611 * C6315 -
             C18613 * C6312) *
                C13127) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30654 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30661 +
            ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C13130 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C13126 +
             (C25383 - C25384 + C25385 - C25386) * C13131 +
             (C25387 - C25388 + C25389 - C25390) * C13127) *
                C30503 * C3770) *
               C2500 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30654 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30661 +
            ((C25384 - C25383 + C25386 - C25385) * C13130 +
             (C25388 - C25387 + C25390 - C25389) * C13126 +
             (C25399 - C25400 + C25401 - C25402) * C13131 +
             (C25403 - C25404 + C25405 - C25406) * C13127) *
                C30503 * C3770) *
               C30616) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30654 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30661 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30503 * C3770) *
               C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30654 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30661 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C13131 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C13127) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C3262 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C2500 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C3262 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C3262 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C30880 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C3262 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30658) *
              C30876 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C3262 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C30658) *
              C30866 +
          (((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C3262 +
           ((C25862 - C25861 + C25864 - C25863) * C13130 +
            (C25866 - C25865 + C25868 - C25867) * C13126 +
            (C18610 * C5623 - C18612 * C5619 + C18611 * C5625 -
             C18613 * C5620) *
                C13131 +
            (C18610 * C5628 - C18612 * C5624 + C18611 * C5629 -
             C18613 * C5626) *
                C13127) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1420 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1421 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30571 * C1422 +
           ((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1420 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1421 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C1422 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C13131 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C13127) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30805 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30805 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30616) *
              C656 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30805 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30616) *
              C657 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30571 * C30805 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                C13131 +
            (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                C13127) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C1816 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C1817 +
            ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C13130 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C13126 +
             (C25383 - C25384 + C25385 - C25386) * C13131 +
             (C25387 - C25388 + C25389 - C25390) * C13127) *
                C30503 * C30839) *
               C30805 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C1816 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C1817 +
            ((C25384 - C25383 + C25386 - C25385) * C13130 +
             (C25388 - C25387 + C25390 - C25389) * C13126 +
             (C25399 - C25400 + C25401 - C25402) * C13131 +
             (C25403 - C25404 + C25405 - C25406) * C13127) *
                C30503 * C30839) *
               C30616) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C1816 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C1817 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30503 * C30839) *
               C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C1816 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C1817 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C13131 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C13127) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30806 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C1420 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30806 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30658) *
              C1421 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30806 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C30658) *
              C1422 +
          (((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30806 +
           ((C25862 - C25861 + C25864 - C25863) * C13130 +
            (C25866 - C25865 + C25868 - C25867) * C13126 +
            (C18610 * C5623 - C18612 * C5619 + C18611 * C5625 -
             C18613 * C5620) *
                C13131 +
            (C18610 * C5628 - C18612 * C5624 + C18611 * C5629 -
             C18613 * C5626) *
                C13127) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C18610 * C1301 - C18612 * C1289 + C18611 * C1307 -
              C18613 * C1292) *
                 C13131 +
             (C18610 * C1316 - C18612 * C1302 + C18611 * C1319 -
              C18613 * C1308) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C30806 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C30806 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C2276 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C2277 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C2278 +
           ((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
             C18611 * C2008) *
                C13130 +
            (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
             C18611 * C2017) *
                C13126 +
            (C26697 - C26698 + C26699 - C26700) * C13131 +
            (C26701 - C26702 + C26703 - C26704) * C13127) *
               C30503 * C30852) *
              C30805 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C2276 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C2277 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C2278 +
           ((C26698 - C26697 + C26700 - C26699) * C13130 +
            (C26702 - C26701 + C26704 - C26703) * C13126 +
            (C18610 * C6307 - C18612 * C6304 + C18611 * C6311 -
             C18613 * C6306) *
                C13131 +
            (C18610 * C6313 - C18612 * C6308 + C18611 * C6315 -
             C18613 * C6312) *
                C13127) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                   C13130 +
               (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                   C13126 +
               (C18610 * C304 - C18612 * C294 + C18611 * C936 - C18613 * C931) *
                   C13131 +
               (C18610 * C324 - C18612 * C305 + C18611 * C946 - C18613 * C937) *
                   C13127) *
                  C30503 * C30571 * C30553 * C108 +
              ((C18616 - C18615 + C18618 - C18617) * C13130 +
               (C18620 - C18619 + C18622 - C18621) * C13126 +
               (C18793 - C18794 + C18795 - C18796) * C13131 +
               (C18797 - C18798 + C18799 - C18800) * C13127) *
                  C30503 * C30571 * C30553 * C109 +
              ((C18624 - C18623 + C18626 - C18625) * C13130 +
               (C18628 - C18627 + C18630 - C18629) * C13126 +
               (C18809 - C18810 + C18811 - C18812) * C13131 +
               (C18813 - C18814 + C18815 - C18816) * C13127) *
                  C30503 * C30571 * C30553 * C110 +
              ((C18632 - C18631 + C18634 - C18633) * C13130 +
               (C18636 - C18635 + C18638 - C18637) * C13126 +
               (C19133 - C19134 + C19135 - C19136) * C13131 +
               (C19137 - C19138 + C19139 - C19140) * C13127) *
                  C30503 * C30571 * C30553 * C111 +
              ((C18640 - C18639 + C18642 - C18641) * C13130 +
               (C18644 - C18643 + C18646 - C18645) * C13126 +
               (C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
                   C13131 +
               (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
                   C13127) *
                  C30503 * C30571 * C30553 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18610 * C122 - C18612 * C115 + C18611 * C491 -
                 C18613 * C481) *
                    C13130 +
                (C18610 * C136 - C18612 * C123 + C18611 * C511 -
                 C18613 * C492) *
                    C13126 +
                (C24369 - C24370 + C24371 - C24372) * C13131 +
                (C24373 - C24374 + C24375 - C24376) * C13127) *
                   C30503 * C30571 * C30873 +
               ((C24370 - C24369 + C24372 - C24371) * C13130 +
                (C24374 - C24373 + C24376 - C24375) * C13126 +
                (C24377 - C24378 + C24379 - C24380) * C13131 +
                (C24381 - C24382 + C24383 - C24384) * C13127) *
                   C30503 * C30571 * C30861 +
               ((C24378 - C24377 + C24380 - C24379) * C13130 +
                (C24382 - C24381 + C24384 - C24383) * C13126 +
                (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
                 C18613 * C1694) *
                    C13131 +
                (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
                 C18613 * C1698) *
                    C13127) *
                   C30503 * C30571 * C30836) *
                  C291 +
              (((C18616 - C18615 + C18618 - C18617) * C13130 +
                (C18620 - C18619 + C18622 - C18621) * C13126 +
                (C18793 - C18794 + C18795 - C18796) * C13131 +
                (C18797 - C18798 + C18799 - C18800) * C13127) *
                   C30503 * C30571 * C30873 +
               ((C18794 - C18793 + C18796 - C18795) * C13130 +
                (C18798 - C18797 + C18800 - C18799) * C13126 +
                (C18801 - C18802 + C18803 - C18804) * C13131 +
                (C18805 - C18806 + C18807 - C18808) * C13127) *
                   C30503 * C30571 * C30861 +
               ((C18802 - C18801 + C18804 - C18803) * C13130 +
                (C18806 - C18805 + C18808 - C18807) * C13126 +
                (C19993 - C19994 + C19995 - C19996) * C13131 +
                (C19997 - C19998 + C19999 - C20000) * C13127) *
                   C30503 * C30571 * C30836) *
                  C292 +
              (((C18624 - C18623 + C18626 - C18625) * C13130 +
                (C18628 - C18627 + C18630 - C18629) * C13126 +
                (C18809 - C18810 + C18811 - C18812) * C13131 +
                (C18813 - C18814 + C18815 - C18816) * C13127) *
                   C30503 * C30571 * C30873 +
               ((C18810 - C18809 + C18812 - C18811) * C13130 +
                (C18814 - C18813 + C18816 - C18815) * C13126 +
                (C18817 - C18818 + C18819 - C18820) * C13131 +
                (C18821 - C18822 + C18823 - C18824) * C13127) *
                   C30503 * C30571 * C30861 +
               ((C18818 - C18817 + C18820 - C18819) * C13130 +
                (C18822 - C18821 + C18824 - C18823) * C13126 +
                (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
                 C18613 * C1696) *
                    C13131 +
                (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
                 C18613 * C1702) *
                    C13127) *
                   C30503 * C30571 * C30836) *
                  C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30874 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C18612 * C931 - C18610 * C936 + C18613 * C1286 - C18611 * C1295) *
                C13131 +
            (C18612 * C937 - C18610 * C946 + C18613 * C1296 - C18611 * C1313) *
                C13127) *
               C30503 * C30863 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C18610 * C1295 - C18612 * C1286 + C18611 * C2393 -
             C18613 * C2390) *
                C13131 +
            (C18610 * C1313 - C18612 * C1296 + C18611 * C2399 -
             C18613 * C2394) *
                C13127) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30874 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30863 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C30839) *
              C30553 * C292 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30874 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30863 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
             C18613 * C2392) *
                C13131 +
            (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
             C18613 * C2398) *
                C13127) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1078 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1079 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C24369 - C24370 + C24371 - C24372) * C13131 +
           (C24373 - C24374 + C24375 - C24376) * C13127) *
              C30503 * C30571 * C1146 +
          ((C24370 - C24369 + C24372 - C24371) * C13130 +
           (C24374 - C24373 + C24376 - C24375) * C13126 +
           (C24377 - C24378 + C24379 - C24380) * C13131 +
           (C24381 - C24382 + C24383 - C24384) * C13127) *
              C30503 * C30571 * C1147 +
          ((C24378 - C24377 + C24380 - C24379) * C13130 +
           (C24382 - C24381 + C24384 - C24383) * C13126 +
           (C25221 - C25222 + C25223 - C25224) * C13131 +
           (C25225 - C25226 + C25227 - C25228) * C13127) *
              C30503 * C30571 * C1148 +
          ((C25222 - C25221 + C25224 - C25223) * C13130 +
           (C25226 - C25225 + C25228 - C25227) * C13126 +
           (C25229 - C25230 + C25231 - C25232) * C13131 +
           (C25233 - C25234 + C25235 - C25236) * C13127) *
              C30503 * C30571 * C1149 +
          ((C25230 - C25229 + C25232 - C25231) * C13130 +
           (C25234 - C25233 + C25236 - C25235) * C13126 +
           (C18610 * C5490 - C18612 * C5488 + C18611 * C6013 - C18613 * C6012) *
               C13131 +
           (C18610 * C5494 - C18612 * C5491 + C18611 * C6015 - C18613 * C6014) *
               C13127) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30874 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30863 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C1078 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30874 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30863 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C30839) *
              C1079 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30874 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C18612 * C1694 - C18610 * C1697 + C18613 * C5618 -
             C18611 * C5621) *
                C13131 +
            (C18612 * C1698 - C18610 * C1703 + C18613 * C5622 -
             C18611 * C5627) *
                C13127) *
               C30503 * C30863 +
           ((C25400 - C25399 + C25402 - C25401) * C13130 +
            (C25404 - C25403 + C25406 - C25405) * C13126 +
            (C18610 * C5621 - C18612 * C5618 + C18611 * C6671 -
             C18613 * C6670) *
                C13131 +
            (C18610 * C5627 - C18612 * C5622 + C18611 * C6673 -
             C18613 * C6672) *
                C13127) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C1816 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C1817 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C1816 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C1817 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C30839) *
              C30553 * C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C1816 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C1817 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
             C18613 * C2392) *
                C13131 +
            (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
             C18613 * C2398) *
                C13127) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C1816 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C1817 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C30873 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C1816 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C1817 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C30839) *
              C30861 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C1816 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C1817 +
           ((C25400 - C25399 + C25402 - C25401) * C13130 +
            (C25404 - C25403 + C25406 - C25405) * C13126 +
            (C18610 * C5621 - C18612 * C5618 + C18611 * C6671 -
             C18613 * C6670) *
                C13131 +
            (C18610 * C5627 - C18612 * C5622 + C18611 * C6673 -
             C18613 * C6672) *
                C13127) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C24369 - C24370 + C24371 - C24372) * C13131 +
           (C24373 - C24374 + C24375 - C24376) * C13127) *
              C30503 * C1991 +
          ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
               C13130 +
           (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
               C13126 +
           (C24985 - C24986 + C24987 - C24988) * C13131 +
           (C24989 - C24990 + C24991 - C24992) * C13127) *
              C30503 * C1992 +
          ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
               C13130 +
           (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
               C13126 +
           (C25383 - C25384 + C25385 - C25386) * C13131 +
           (C25387 - C25388 + C25389 - C25390) * C13127) *
              C30503 * C1993 +
          ((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 - C18611 * C2008) *
               C13130 +
           (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 - C18611 * C2017) *
               C13126 +
           (C18612 * C2390 - C18610 * C2393 + C18613 * C6305 - C18611 * C6309) *
               C13131 +
           (C18612 * C2394 - C18610 * C2399 + C18613 * C6310 - C18611 * C6314) *
               C13127) *
              C30503 * C1994 +
          ((C18610 * C2008 - C18612 * C1999 + C18611 * C10452 -
            C18613 * C10450) *
               C13130 +
           (C18610 * C2017 - C18612 * C2009 + C18611 * C10456 -
            C18613 * C10453) *
               C13126 +
           (C18610 * C6309 - C18612 * C6305 + C18611 * C10809 -
            C18613 * C10808) *
               C13131 +
           (C18610 * C6314 - C18612 * C6310 + C18611 * C10811 -
            C18613 * C10810) *
               C13127) *
              C30503 * C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C1078 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C1079 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C30806 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C18612 * C1694 - C18610 * C1697 + C18613 * C5618 -
              C18611 * C5621) *
                 C13131 +
             (C18612 * C1698 - C18610 * C1703 + C18613 * C5622 -
              C18611 * C5627) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C30806 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30806 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C18612 * C931 - C18610 * C936 + C18613 * C1286 - C18611 * C1295) *
                C13131 +
            (C18612 * C937 - C18610 * C946 + C18613 * C1296 - C18611 * C1313) *
                C13127) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30806 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30658) *
              C30553 * C656 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30806 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30658) *
              C30553 * C657 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30806 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C942 - C18612 * C934 + C18611 * C2167 - C18613 * C2166) *
                C13131 +
            (C18610 * C949 - C18612 * C943 + C18611 * C2169 - C18613 * C2168) *
                C13127) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C2276 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C2277 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C2278 +
           ((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
             C18611 * C2008) *
                C13130 +
            (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
             C18611 * C2017) *
                C13126 +
            (C18612 * C2390 - C18610 * C2393 + C18613 * C6305 -
             C18611 * C6309) *
                C13131 +
            (C18612 * C2394 - C18610 * C2399 + C18613 * C6310 -
             C18611 * C6314) *
                C13127) *
               C30503 * C30852) *
              C30553 * C30791 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C2276 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C2277 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C2278 +
           ((C21040 - C21039 + C21042 - C21041) * C13130 +
            (C21044 - C21043 + C21046 - C21045) * C13126 +
            (C18610 * C2395 - C18612 * C2391 + C18611 * C10605 -
             C18613 * C10604) *
                C13131 +
            (C18610 * C2400 - C18612 * C2396 + C18611 * C10607 -
             C18613 * C10606) *
                C13127) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30873 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30861 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C18610 * C304 - C18612 * C294 + C18611 * C936 - C18613 * C931) *
               C13131 +
           (C18610 * C324 - C18612 * C305 + C18611 * C946 - C18613 * C937) *
               C13127) *
              C30503 * C30571 * C30553 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30503 * C30571 * C30553 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18809 - C18810 + C18811 - C18812) * C13131 +
           (C18813 - C18814 + C18815 - C18816) * C13127) *
              C30503 * C30571 * C30553 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C19133 - C19134 + C19135 - C19136) * C13131 +
           (C19137 - C19138 + C19139 - C19140) * C13127) *
              C30503 * C30571 * C30553 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
               C13131 +
           (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
               C13127) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1078 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1079 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C24369 - C24370 + C24371 - C24372) * C13131 +
           (C24373 - C24374 + C24375 - C24376) * C13127) *
              C30503 * C30571 * C1146 +
          ((C24370 - C24369 + C24372 - C24371) * C13130 +
           (C24374 - C24373 + C24376 - C24375) * C13126 +
           (C24377 - C24378 + C24379 - C24380) * C13131 +
           (C24381 - C24382 + C24383 - C24384) * C13127) *
              C30503 * C30571 * C1147 +
          ((C24378 - C24377 + C24380 - C24379) * C13130 +
           (C24382 - C24381 + C24384 - C24383) * C13126 +
           (C25221 - C25222 + C25223 - C25224) * C13131 +
           (C25225 - C25226 + C25227 - C25228) * C13127) *
              C30503 * C30571 * C1148 +
          ((C25222 - C25221 + C25224 - C25223) * C13130 +
           (C25226 - C25225 + C25228 - C25227) * C13126 +
           (C25229 - C25230 + C25231 - C25232) * C13131 +
           (C25233 - C25234 + C25235 - C25236) * C13127) *
              C30503 * C30571 * C1149 +
          ((C25230 - C25229 + C25232 - C25231) * C13130 +
           (C25234 - C25233 + C25236 - C25235) * C13126 +
           (C18610 * C5490 - C18612 * C5488 + C18611 * C6013 - C18613 * C6012) *
               C13131 +
           (C18610 * C5494 - C18612 * C5491 + C18611 * C6015 - C18613 * C6014) *
               C13127) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C1816 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C1817 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C1816 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C1817 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C30839) *
              C30553 * C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C1816 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C1817 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
             C18613 * C2392) *
                C13131 +
            (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
             C18613 * C2398) *
                C13127) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C1816 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C1817 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C30873 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C1816 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C1817 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C30839) *
              C30861 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C1816 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C1817 +
           ((C25400 - C25399 + C25402 - C25401) * C13130 +
            (C25404 - C25403 + C25406 - C25405) * C13126 +
            (C18610 * C5621 - C18612 * C5618 + C18611 * C6671 -
             C18613 * C6670) *
                C13131 +
            (C18610 * C5627 - C18612 * C5622 + C18611 * C6673 -
             C18613 * C6672) *
                C13127) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C3262 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C3262 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30654 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30661 +
            ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C13130 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C13126 +
             (C25383 - C25384 + C25385 - C25386) * C13131 +
             (C25387 - C25388 + C25389 - C25390) * C13127) *
                C30503 * C3770) *
               C30805 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30654 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30661 +
            ((C25384 - C25383 + C25386 - C25385) * C13130 +
             (C25388 - C25387 + C25390 - C25389) * C13126 +
             (C25399 - C25400 + C25401 - C25402) * C13131 +
             (C25403 - C25404 + C25405 - C25406) * C13127) *
                C30503 * C3770) *
               C30616) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30654 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30661 +
            ((C18980 - C18979 + C18982 - C18981) * C13130 +
             (C18984 - C18983 + C18986 - C18985) * C13126 +
             (C20901 - C20902 + C20903 - C20904) * C13131 +
             (C20905 - C20906 + C20907 - C20908) * C13127) *
                C30503 * C3770) *
               C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30654 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30661 +
            ((C20902 - C20901 + C20904 - C20903) * C13130 +
             (C20906 - C20905 + C20908 - C20907) * C13126 +
             (C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C13131 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C13127) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30873 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30861 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C3262 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C25861 - C25862 + C25863 - C25864) * C13131 +
             (C25865 - C25866 + C25867 - C25868) * C13127) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30873 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30861 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C3262 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C3262 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C3262 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30658) *
              C30553 * C30872 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C3262 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30658) *
              C30553 * C30859 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C3262 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C942 - C18612 * C934 + C18611 * C2167 - C18613 * C2166) *
                C13131 +
            (C18610 * C949 - C18612 * C943 + C18611 * C2169 - C18613 * C2168) *
                C13127) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30881 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30878 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30869 +
           ((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
             C18611 * C2008) *
                C13130 +
            (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
             C18611 * C2017) *
                C13126 +
            (C26697 - C26698 + C26699 - C26700) * C13131 +
            (C26701 - C26702 + C26703 - C26704) * C13127) *
               C30503 * C30852) *
              C30553 * C2608 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30881 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30878 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C30869 +
           ((C21040 - C21039 + C21042 - C21041) * C13130 +
            (C21044 - C21043 + C21046 - C21045) * C13126 +
            (C18610 * C2395 - C18612 * C2391 + C18611 * C10605 -
             C18613 * C10604) *
                C13131 +
            (C18610 * C2400 - C18612 * C2396 + C18611 * C10607 -
             C18613 * C10606) *
                C13127) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30654 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30661 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C3770) *
              C30553 * C30530 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30654 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30661 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C3770) *
              C30553 * C30539 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30654 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30661 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
             C18613 * C2392) *
                C13131 +
            (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
             C18613 * C2398) *
                C13127) *
               C30503 * C3770) *
              C30553 * C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C3262 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C3262 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30658) *
              C30553 * C30872 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C3262 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30658) *
              C30553 * C30859 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C3262 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C942 - C18612 * C934 + C18611 * C2167 - C18613 * C2166) *
                C13131 +
            (C18610 * C949 - C18612 * C943 + C18611 * C2169 - C18613 * C2168) *
                C13127) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C3262 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30873 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C3262 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C30861 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C3262 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C25861 - C25862 + C25863 - C25864) * C13131 +
             (C25865 - C25866 + C25867 - C25868) * C13127) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C3262 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30873 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C3262 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30861 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C3262 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30805 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30805 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30616) *
              C656 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30805 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30616) *
              C657 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30571 * C30805 +
           ((C19134 - C19133 + C19136 - C19135) * C13130 +
            (C19138 - C19137 + C19140 - C19139) * C13126 +
            (C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                C13131 +
            (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                C13127) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1420 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1421 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30571 * C1422 +
           ((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1420 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1421 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C1422 +
           ((C19994 - C19993 + C19996 - C19995) * C13130 +
            (C19998 - C19997 + C20000 - C19999) * C13126 +
            (C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C13131 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C13127) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C18610 * C1301 - C18612 * C1289 + C18611 * C1307 -
              C18613 * C1292) *
                 C13131 +
             (C18610 * C1316 - C18612 * C1302 + C18611 * C1319 -
              C18613 * C1308) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C30616) *
              C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C13130 +
             (C18628 - C18627 + C18630 - C18629) * C13126 +
             (C18809 - C18810 + C18811 - C18812) * C13131 +
             (C18813 - C18814 + C18815 - C18816) * C13127) *
                C30503 * C30806 +
            ((C18988 - C18987 + C18990 - C18989) * C13130 +
             (C18992 - C18991 + C18994 - C18993) * C13126 +
             (C19481 - C19482 + C19483 - C19484) * C13131 +
             (C19485 - C19486 + C19487 - C19488) * C13127) *
                C30503 * C30658) *
               C30805 +
           (((C18810 - C18809 + C18812 - C18811) * C13130 +
             (C18814 - C18813 + C18816 - C18815) * C13126 +
             (C18817 - C18818 + C18819 - C18820) * C13131 +
             (C18821 - C18822 + C18823 - C18824) * C13127) *
                C30503 * C30806 +
            ((C19482 - C19481 + C19484 - C19483) * C13130 +
             (C19486 - C19485 + C19488 - C19487) * C13126 +
             (C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
              C18613 * C1294) *
                 C13131 +
             (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
              C18613 * C1312) *
                 C13127) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30806 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30658) *
              C1420 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30806 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30658) *
              C1421 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30806 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C25861 - C25862 + C25863 - C25864) * C13131 +
            (C25865 - C25866 + C25867 - C25868) * C13127) *
               C30503 * C30658) *
              C1422 +
          (((C25222 - C25221 + C25224 - C25223) * C13130 +
            (C25226 - C25225 + C25228 - C25227) * C13126 +
            (C25229 - C25230 + C25231 - C25232) * C13131 +
            (C25233 - C25234 + C25235 - C25236) * C13127) *
               C30503 * C30806 +
           ((C25862 - C25861 + C25864 - C25863) * C13130 +
            (C25866 - C25865 + C25868 - C25867) * C13126 +
            (C18610 * C5623 - C18612 * C5619 + C18611 * C5625 -
             C18613 * C5620) *
                C13131 +
            (C18610 * C5628 - C18612 * C5624 + C18611 * C5629 -
             C18613 * C5626) *
                C13127) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30873 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30861 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C18610 * C304 - C18612 * C294 + C18611 * C936 - C18613 * C931) *
               C13131 +
           (C18610 * C324 - C18612 * C305 + C18611 * C946 - C18613 * C937) *
               C13127) *
              C30503 * C30571 * C30553 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30503 * C30571 * C30553 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18809 - C18810 + C18811 - C18812) * C13131 +
           (C18813 - C18814 + C18815 - C18816) * C13127) *
              C30503 * C30571 * C30553 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C19133 - C19134 + C19135 - C19136) * C13131 +
           (C19137 - C19138 + C19139 - C19140) * C13127) *
              C30503 * C30571 * C30553 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
               C13131 +
           (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
               C13127) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30874 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C18612 * C931 - C18610 * C936 + C18613 * C1286 - C18611 * C1295) *
                C13131 +
            (C18612 * C937 - C18610 * C946 + C18613 * C1296 - C18611 * C1313) *
                C13127) *
               C30503 * C30863 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C18610 * C1295 - C18612 * C1286 + C18611 * C2393 -
             C18613 * C2390) *
                C13131 +
            (C18610 * C1313 - C18612 * C1296 + C18611 * C2399 -
             C18613 * C2394) *
                C13127) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30874 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30863 +
           ((C18980 - C18979 + C18982 - C18981) * C13130 +
            (C18984 - C18983 + C18986 - C18985) * C13126 +
            (C20901 - C20902 + C20903 - C20904) * C13131 +
            (C20905 - C20906 + C20907 - C20908) * C13127) *
               C30503 * C30839) *
              C30553 * C292 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30874 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30863 +
           ((C18996 - C18995 + C18998 - C18997) * C13130 +
            (C19000 - C18999 + C19002 - C19001) * C13126 +
            (C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
             C18613 * C2392) *
                C13131 +
            (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
             C18613 * C2398) *
                C13127) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1078 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1079 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C24369 - C24370 + C24371 - C24372) * C13131 +
           (C24373 - C24374 + C24375 - C24376) * C13127) *
              C30503 * C30571 * C1146 +
          ((C24370 - C24369 + C24372 - C24371) * C13130 +
           (C24374 - C24373 + C24376 - C24375) * C13126 +
           (C24377 - C24378 + C24379 - C24380) * C13131 +
           (C24381 - C24382 + C24383 - C24384) * C13127) *
              C30503 * C30571 * C1147 +
          ((C24378 - C24377 + C24380 - C24379) * C13130 +
           (C24382 - C24381 + C24384 - C24383) * C13126 +
           (C25221 - C25222 + C25223 - C25224) * C13131 +
           (C25225 - C25226 + C25227 - C25228) * C13127) *
              C30503 * C30571 * C1148 +
          ((C25222 - C25221 + C25224 - C25223) * C13130 +
           (C25226 - C25225 + C25228 - C25227) * C13126 +
           (C25229 - C25230 + C25231 - C25232) * C13131 +
           (C25233 - C25234 + C25235 - C25236) * C13127) *
              C30503 * C30571 * C1149 +
          ((C25230 - C25229 + C25232 - C25231) * C13130 +
           (C25234 - C25233 + C25236 - C25235) * C13126 +
           (C18610 * C5490 - C18612 * C5488 + C18611 * C6013 - C18613 * C6012) *
               C13131 +
           (C18610 * C5494 - C18612 * C5491 + C18611 * C6015 - C18613 * C6014) *
               C13127) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30874 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C24985 - C24986 + C24987 - C24988) * C13131 +
            (C24989 - C24990 + C24991 - C24992) * C13127) *
               C30503 * C30863 +
           ((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C13130 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C13126 +
            (C25383 - C25384 + C25385 - C25386) * C13131 +
            (C25387 - C25388 + C25389 - C25390) * C13127) *
               C30503 * C30839) *
              C1078 +
          (((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30874 +
           ((C24986 - C24985 + C24988 - C24987) * C13130 +
            (C24990 - C24989 + C24992 - C24991) * C13126 +
            (C25391 - C25392 + C25393 - C25394) * C13131 +
            (C25395 - C25396 + C25397 - C25398) * C13127) *
               C30503 * C30863 +
           ((C25384 - C25383 + C25386 - C25385) * C13130 +
            (C25388 - C25387 + C25390 - C25389) * C13126 +
            (C25399 - C25400 + C25401 - C25402) * C13131 +
            (C25403 - C25404 + C25405 - C25406) * C13127) *
               C30503 * C30839) *
              C1079 +
          (((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C25221 - C25222 + C25223 - C25224) * C13131 +
            (C25225 - C25226 + C25227 - C25228) * C13127) *
               C30503 * C30874 +
           ((C25392 - C25391 + C25394 - C25393) * C13130 +
            (C25396 - C25395 + C25398 - C25397) * C13126 +
            (C18612 * C1694 - C18610 * C1697 + C18613 * C5618 -
             C18611 * C5621) *
                C13131 +
            (C18612 * C1698 - C18610 * C1703 + C18613 * C5622 -
             C18611 * C5627) *
                C13127) *
               C30503 * C30863 +
           ((C25400 - C25399 + C25402 - C25401) * C13130 +
            (C25404 - C25403 + C25406 - C25405) * C13126 +
            (C18610 * C5621 - C18612 * C5618 + C18611 * C6671 -
             C18613 * C6670) *
                C13131 +
            (C18610 * C5627 - C18612 * C5622 + C18611 * C6673 -
             C18613 * C6672) *
                C13127) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30806 +
           ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C13130 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C13126 +
            (C18612 * C931 - C18610 * C936 + C18613 * C1286 - C18611 * C1295) *
                C13131 +
            (C18612 * C937 - C18610 * C946 + C18613 * C1296 - C18611 * C1313) *
                C13127) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30806 +
           ((C18972 - C18971 + C18974 - C18973) * C13130 +
            (C18976 - C18975 + C18978 - C18977) * C13126 +
            (C19473 - C19474 + C19475 - C19476) * C13131 +
            (C19477 - C19478 + C19479 - C19480) * C13127) *
               C30503 * C30658) *
              C30553 * C656 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30806 +
           ((C18988 - C18987 + C18990 - C18989) * C13130 +
            (C18992 - C18991 + C18994 - C18993) * C13126 +
            (C19481 - C19482 + C19483 - C19484) * C13131 +
            (C19485 - C19486 + C19487 - C19488) * C13127) *
               C30503 * C30658) *
              C30553 * C657 +
          (((C18632 - C18631 + C18634 - C18633) * C13130 +
            (C18636 - C18635 + C18638 - C18637) * C13126 +
            (C19133 - C19134 + C19135 - C19136) * C13131 +
            (C19137 - C19138 + C19139 - C19140) * C13127) *
               C30503 * C30806 +
           ((C19272 - C19271 + C19274 - C19273) * C13130 +
            (C19276 - C19275 + C19278 - C19277) * C13126 +
            (C18610 * C942 - C18612 * C934 + C18611 * C2167 - C18613 * C2166) *
                C13131 +
            (C18610 * C949 - C18612 * C943 + C18611 * C2169 - C18613 * C2168) *
                C13127) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C13130 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C13126 +
             (C24369 - C24370 + C24371 - C24372) * C13131 +
             (C24373 - C24374 + C24375 - C24376) * C13127) *
                C30503 * C30806 +
            ((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C13130 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C13126 +
             (C24985 - C24986 + C24987 - C24988) * C13131 +
             (C24989 - C24990 + C24991 - C24992) * C13127) *
                C30503 * C30658) *
               C1078 +
           (((C24370 - C24369 + C24372 - C24371) * C13130 +
             (C24374 - C24373 + C24376 - C24375) * C13126 +
             (C24377 - C24378 + C24379 - C24380) * C13131 +
             (C24381 - C24382 + C24383 - C24384) * C13127) *
                C30503 * C30806 +
            ((C24986 - C24985 + C24988 - C24987) * C13130 +
             (C24990 - C24989 + C24992 - C24991) * C13126 +
             (C25391 - C25392 + C25393 - C25394) * C13131 +
             (C25395 - C25396 + C25397 - C25398) * C13127) *
                C30503 * C30658) *
               C1079 +
           (((C24378 - C24377 + C24380 - C24379) * C13130 +
             (C24382 - C24381 + C24384 - C24383) * C13126 +
             (C25221 - C25222 + C25223 - C25224) * C13131 +
             (C25225 - C25226 + C25227 - C25228) * C13127) *
                C30503 * C30806 +
            ((C25392 - C25391 + C25394 - C25393) * C13130 +
             (C25396 - C25395 + C25398 - C25397) * C13126 +
             (C18612 * C1694 - C18610 * C1697 + C18613 * C5618 -
              C18611 * C5621) *
                 C13131 +
             (C18612 * C1698 - C18610 * C1703 + C18613 * C5622 -
              C18611 * C5627) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C13130 +
             (C18620 - C18619 + C18622 - C18621) * C13126 +
             (C18793 - C18794 + C18795 - C18796) * C13131 +
             (C18797 - C18798 + C18799 - C18800) * C13127) *
                C30503 * C30806 +
            ((C18972 - C18971 + C18974 - C18973) * C13130 +
             (C18976 - C18975 + C18978 - C18977) * C13126 +
             (C19473 - C19474 + C19475 - C19476) * C13131 +
             (C19477 - C19478 + C19479 - C19480) * C13127) *
                C30503 * C30658) *
               C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C13130 +
             (C18798 - C18797 + C18800 - C18799) * C13126 +
             (C18801 - C18802 + C18803 - C18804) * C13131 +
             (C18805 - C18806 + C18807 - C18808) * C13127) *
                C30503 * C30806 +
            ((C19474 - C19473 + C19476 - C19475) * C13130 +
             (C19478 - C19477 + C19480 - C19479) * C13126 +
             (C20195 - C20196 + C20197 - C20198) * C13131 +
             (C20199 - C20200 + C20201 - C20202) * C13127) *
                C30503 * C30658) *
               C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C13130 +
             (C18806 - C18805 + C18808 - C18807) * C13126 +
             (C19993 - C19994 + C19995 - C19996) * C13131 +
             (C19997 - C19998 + C19999 - C20000) * C13127) *
                C30503 * C30806 +
            ((C20196 - C20195 + C20198 - C20197) * C13130 +
             (C20200 - C20199 + C20202 - C20201) * C13126 +
             (C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C13131 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C13127) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C18610 * C304 - C18612 * C294 + C18611 * C936 - C18613 * C931) *
               C13131 +
           (C18610 * C324 - C18612 * C305 + C18611 * C946 - C18613 * C937) *
               C13127) *
              C30503 * C30571 * C30553 * C108 +
          ((C18616 - C18615 + C18618 - C18617) * C13130 +
           (C18620 - C18619 + C18622 - C18621) * C13126 +
           (C18793 - C18794 + C18795 - C18796) * C13131 +
           (C18797 - C18798 + C18799 - C18800) * C13127) *
              C30503 * C30571 * C30553 * C109 +
          ((C18624 - C18623 + C18626 - C18625) * C13130 +
           (C18628 - C18627 + C18630 - C18629) * C13126 +
           (C18809 - C18810 + C18811 - C18812) * C13131 +
           (C18813 - C18814 + C18815 - C18816) * C13127) *
              C30503 * C30571 * C30553 * C110 +
          ((C18632 - C18631 + C18634 - C18633) * C13130 +
           (C18636 - C18635 + C18638 - C18637) * C13126 +
           (C19133 - C19134 + C19135 - C19136) * C13131 +
           (C19137 - C19138 + C19139 - C19140) * C13127) *
              C30503 * C30571 * C30553 * C111 +
          ((C18640 - C18639 + C18642 - C18641) * C13130 +
           (C18644 - C18643 + C18646 - C18645) * C13126 +
           (C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
               C13131 +
           (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
               C13127) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C30873 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C30861 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C30873 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C30861 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C13130 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C13126 +
            (C24369 - C24370 + C24371 - C24372) * C13131 +
            (C24373 - C24374 + C24375 - C24376) * C13127) *
               C30503 * C30571 * C1078 +
           ((C24370 - C24369 + C24372 - C24371) * C13130 +
            (C24374 - C24373 + C24376 - C24375) * C13126 +
            (C24377 - C24378 + C24379 - C24380) * C13131 +
            (C24381 - C24382 + C24383 - C24384) * C13127) *
               C30503 * C30571 * C1079 +
           ((C24378 - C24377 + C24380 - C24379) * C13130 +
            (C24382 - C24381 + C24384 - C24383) * C13126 +
            (C18610 * C1158 - C18612 * C1152 + C18611 * C1697 -
             C18613 * C1694) *
                C13131 +
            (C18610 * C1170 - C18612 * C1159 + C18611 * C1703 -
             C18613 * C1698) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C18616 - C18615 + C18618 - C18617) * C13130 +
            (C18620 - C18619 + C18622 - C18621) * C13126 +
            (C18793 - C18794 + C18795 - C18796) * C13131 +
            (C18797 - C18798 + C18799 - C18800) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18794 - C18793 + C18796 - C18795) * C13130 +
            (C18798 - C18797 + C18800 - C18799) * C13126 +
            (C18801 - C18802 + C18803 - C18804) * C13131 +
            (C18805 - C18806 + C18807 - C18808) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18802 - C18801 + C18804 - C18803) * C13130 +
            (C18806 - C18805 + C18808 - C18807) * C13126 +
            (C19993 - C19994 + C19995 - C19996) * C13131 +
            (C19997 - C19998 + C19999 - C20000) * C13127) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C18624 - C18623 + C18626 - C18625) * C13130 +
            (C18628 - C18627 + C18630 - C18629) * C13126 +
            (C18809 - C18810 + C18811 - C18812) * C13131 +
            (C18813 - C18814 + C18815 - C18816) * C13127) *
               C30503 * C30571 * C1078 +
           ((C18810 - C18809 + C18812 - C18811) * C13130 +
            (C18814 - C18813 + C18816 - C18815) * C13126 +
            (C18817 - C18818 + C18819 - C18820) * C13131 +
            (C18821 - C18822 + C18823 - C18824) * C13127) *
               C30503 * C30571 * C1079 +
           ((C18818 - C18817 + C18820 - C18819) * C13130 +
            (C18822 - C18821 + C18824 - C18823) * C13126 +
            (C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
             C18613 * C1696) *
                C13131 +
            (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
             C18613 * C1702) *
                C13127) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
               C13130 +
           (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
               C13126 +
           (C24369 - C24370 + C24371 - C24372) * C13131 +
           (C24373 - C24374 + C24375 - C24376) * C13127) *
              C30503 * C30571 * C1146 +
          ((C24370 - C24369 + C24372 - C24371) * C13130 +
           (C24374 - C24373 + C24376 - C24375) * C13126 +
           (C24377 - C24378 + C24379 - C24380) * C13131 +
           (C24381 - C24382 + C24383 - C24384) * C13127) *
              C30503 * C30571 * C1147 +
          ((C24378 - C24377 + C24380 - C24379) * C13130 +
           (C24382 - C24381 + C24384 - C24383) * C13126 +
           (C25221 - C25222 + C25223 - C25224) * C13131 +
           (C25225 - C25226 + C25227 - C25228) * C13127) *
              C30503 * C30571 * C1148 +
          ((C25222 - C25221 + C25224 - C25223) * C13130 +
           (C25226 - C25225 + C25228 - C25227) * C13126 +
           (C25229 - C25230 + C25231 - C25232) * C13131 +
           (C25233 - C25234 + C25235 - C25236) * C13127) *
              C30503 * C30571 * C1149 +
          ((C25230 - C25229 + C25232 - C25231) * C13130 +
           (C25234 - C25233 + C25236 - C25235) * C13126 +
           (C18610 * C5490 - C18612 * C5488 + C18611 * C6013 - C18613 * C6012) *
               C13131 +
           (C18610 * C5494 - C18612 * C5491 + C18611 * C6015 - C18613 * C6014) *
               C13127) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30612 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30619 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C2868) *
              C30530 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30612 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30619 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C2868) *
              C30539 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30612 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30619 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C2868) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30612 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30619 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C2868) *
              C30530 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30612 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30619 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C2868) *
              C30539 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30612 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30619 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C2868) *
              C2871)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30612 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30619 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C2868) *
              C30530 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30612 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30619 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C2868) *
              C30539 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30612 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30619 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C2868) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C2868) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30612 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30619 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C30806 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C2868) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30612 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30619 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C30806 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30612 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30619 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C2868) *
              C2608 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30612 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30619 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C2500 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30616) *
                  C30879 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C2500 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                C672 * C105) *
                   C30571 * C30616) *
                  C30872 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C2500 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                   C30571 * C30616) *
                  C30859 +
              ((C177 * C103 +
                ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
                ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                   C30571 * C2500 +
               (C672 * C103 +
                ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
                ((C30749 * C660 - C113 * C659) * C114 +
                 (C30749 * C662 - C113 * C661) * C30736) *
                    C105) *
                   C30571 * C30616) *
                  C30840) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C30880 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30876 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C30866 +
               (((C113 * C1152 - C30749 * C1158) * C114 +
                 (C113 * C1159 - C30749 * C1170) * C30736) *
                    C103 +
                ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
                ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
                   C30571 * C30846) *
                  C2608 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C30880 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                C672 * C105) *
                   C30571 * C30876 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C30866 +
               (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
                ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
                ((C30749 * C1427 - C113 * C1426) * C114 +
                 (C30749 * C1429 - C113 * C1428) * C30736) *
                    C105) *
                   C30571 * C30846) *
                  C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30874 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30863 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C30839) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30874 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30863 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C30839) *
               C30616) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30874 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30863 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C30839) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30874 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30863 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C2500 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C2500 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30616) *
              C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C2500 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C2500 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30880 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30876 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C30866 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30880 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30876 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C30866 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30874 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30863 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C30839) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30874 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30863 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C30839) *
               C30616) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30874 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30863 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C30839) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30874 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30863 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30872 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30859 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8976 * C316 - C8979 * C300 + C8977 * C942 - C8980 * C934 +
             C8978 * C2167 - C8981 * C2166) *
                C114 +
            (C8976 * C330 - C8979 * C317 + C8977 * C949 - C8980 * C943 +
             C8978 * C2169 - C8981 * C2168) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30880 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30876 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30866 +
           ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30880 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30876 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30866 +
           ((C8976 * C1160 - C8979 * C1153 + C8977 * C1699 - C8980 * C1695 +
             C8978 * C6463 - C8981 * C6462) *
                C114 +
            (C8976 * C1171 - C8979 * C1161 + C8977 * C1704 - C8980 * C1700 +
             C8978 * C6465 - C8981 * C6464) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30874 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30863 +
            ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
              C8978 * C2008 - C8981 * C1999) *
                 C114 +
             (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
              C8978 * C2017 - C8981 * C2009) *
                 C30736) *
                C30503 * C30839) *
               C2500 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30874 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30863 +
            ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
              C8981 * C6305 - C8978 * C6309) *
                 C114 +
             (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
              C8981 * C6310 - C8978 * C6314) *
                 C30736) *
                C30503 * C30839) *
               C30616) *
              C2608 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30874 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30863 +
            ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
              C8981 * C2000 - C8978 * C2010) *
                 C114 +
             (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
              C8981 * C2011 - C8978 * C2018) *
                 C30736) *
                C30503 * C30839) *
               C2500 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30874 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30863 +
            ((C8976 * C1297 - C8979 * C1287 + C8977 * C2395 - C8980 * C2391 +
              C8978 * C10605 - C8981 * C10604) *
                 C114 +
             (C8976 * C1314 - C8979 * C1298 + C8977 * C2400 - C8980 * C2396 +
              C8978 * C10607 - C8981 * C10606) *
                 C30736) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30530 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30539 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C30806 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C2500 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C30806 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30880 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30876 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30866 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C2608 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30880 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30876 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30866 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C2500 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C2500 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C2500 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C2500 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C2500 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C2500 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30616) *
              C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C2500 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C2500 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30880 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30876 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C30866 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30880 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30876 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C30866 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30872 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30859 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30571 * C2500 +
           ((C8976 * C316 - C8979 * C300 + C8977 * C942 - C8980 * C934 +
             C8978 * C2167 - C8981 * C2166) *
                C114 +
            (C8976 * C330 - C8979 * C317 + C8977 * C949 - C8980 * C943 +
             C8978 * C2169 - C8981 * C2168) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30880 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30876 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30866 +
           ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30880 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30876 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30866 +
           ((C8976 * C1160 - C8979 * C1153 + C8977 * C1699 - C8980 * C1695 +
             C8978 * C6463 - C8981 * C6462) *
                C114 +
            (C8976 * C1171 - C8979 * C1161 + C8977 * C1704 - C8980 * C1700 +
             C8978 * C6465 - C8981 * C6464) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30612 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30619 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C3262 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C2868) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30612 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30619 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C3262 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30612 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30619 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C2868) *
              C30791 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30612 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30619 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30654 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30661 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C3770) *
              C30612 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30654 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30661 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C3770) *
              C30619 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30654 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30661 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C3770) *
              C2868) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30654 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30661 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C3770) *
              C30612 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30654 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30661 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C3770) *
              C30619 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30654 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30661 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C3770) *
              C2868) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30654 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30661 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C3770) *
              C30612 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30654 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30661 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C3770) *
              C30619 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30654 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30661 +
           ((C8976 * C1307 - C8979 * C1292 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C114 +
            (C8976 * C1319 - C8979 * C1308 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30736) *
               C30503 * C3770) *
              C2868) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C30749 * C122 - C113 * C115) * C114 +
                  (C30749 * C136 - C113 * C123) * C30736) *
                     C103 +
                 ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                 C176 * C105) *
                    C3262 +
                (((C113 * C481 - C30749 * C491) * C114 +
                  (C113 * C492 - C30749 * C511) * C30736) *
                     C103 +
                 ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                 C554 * C105) *
                    C30658) *
                   C2500 +
               ((((C113 * C294 - C30749 * C304) * C114 +
                  (C113 * C305 - C30749 * C324) * C30736) *
                     C103 +
                 ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                 C367 * C105) *
                    C3262 +
                (((C30749 * C936 - C113 * C931) * C114 +
                  (C30749 * C946 - C113 * C937) * C30736) *
                     C103 +
                 ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                 C968 * C105) *
                    C30658) *
                   C30616) *
                  C30870 +
              (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                 ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                 C177 * C105) *
                    C3262 +
                (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                 ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                 C785 * C105) *
                    C30658) *
                   C2500 +
               ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                 ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                 C672 * C105) *
                    C3262 +
                (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
                 ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
                 ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                    C30658) *
                   C30616) *
                  C30857 +
              (((C176 * C103 +
                 ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                 C178 * C105) *
                    C3262 +
                (C554 * C103 +
                 ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                 ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                    C30658) *
                   C2500 +
               ((C367 * C103 +
                 ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                 ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                    C3262 +
                (C968 * C103 +
                 ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
                 ((C30749 * C944 - C113 * C935) * C114 +
                  (C30749 * C950 - C113 * C945) * C30736) *
                     C105) *
                    C30658) *
                   C30616) *
                  C30830) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C3262 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30658) *
                  C30880 +
              ((((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C3262 +
               (((C30749 * C936 - C113 * C931) * C114 +
                 (C30749 * C946 - C113 * C937) * C30736) *
                    C103 +
                ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                C968 * C105) *
                   C30658) *
                  C30876 +
              ((((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C3262 +
               (((C113 * C1289 - C30749 * C1301) * C114 +
                 (C113 * C1302 - C30749 * C1316) * C30736) *
                    C103 +
                ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
                ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                   C30658) *
                  C30866 +
              ((((C113 * C1152 - C30749 * C1158) * C114 +
                 (C113 * C1159 - C30749 * C1170) * C30736) *
                    C103 +
                ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
                ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
                   C3262 +
               (((C30749 * C1697 - C113 * C1694) * C114 +
                 (C30749 * C1703 - C113 * C1698) * C30736) *
                    C103 +
                ((C30749 * C1699 - C113 * C1695) * C114 +
                 (C30749 * C1704 - C113 * C1700) * C30736) *
                    C104 +
                ((C30749 * C1701 - C113 * C1696) * C114 +
                 (C30749 * C1705 - C113 * C1702) * C30736) *
                    C105) *
                   C30658) *
                  C30846) *
             C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30881 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30878 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30869 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C2500 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30881 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30878 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C30869 +
           (((C30749 * C2393 - C113 * C2390) * C114 +
             (C30749 * C2399 - C113 * C2394) * C30736) *
                C103 +
            ((C30749 * C2395 - C113 * C2391) * C114 +
             (C30749 * C2400 - C113 * C2396) * C30736) *
                C104 +
            ((C30749 * C2397 - C113 * C2392) * C114 +
             (C30749 * C2401 - C113 * C2398) * C30736) *
                C105) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30880 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C3262 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C30876 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C3262 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C30866 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C3262 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30881 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30878 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30869 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C2500 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30881 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30878 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30869 +
           ((C6676 - C6675) * C4727 + (C6678 - C6677) * C4723 +
            (C6680 - C6679) * C4728 + (C6682 - C6681) * C4724 +
            (C30749 * C6671 - C113 * C6670) * C4729 +
            (C30749 * C6673 - C113 * C6672) * C4725) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30880 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30658) *
              C30876 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30658) *
              C30866 +
          (((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C1697 - C8979 * C1694 + C8977 * C5621 - C8980 * C5618 +
             C8978 * C6671 - C8981 * C6670) *
                C114 +
            (C8976 * C1703 - C8979 * C1698 + C8977 * C5627 - C8980 * C5622 +
             C8978 * C6673 - C8981 * C6672) *
                C30736) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30881 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30878 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30869 +
           ((C8979 * C1996 - C8976 * C2002 + C8980 * C1999 - C8977 * C2008 +
             C8981 * C10450 - C8978 * C10452) *
                C114 +
            (C8979 * C2003 - C8976 * C2014 + C8980 * C2009 - C8977 * C2017 +
             C8981 * C10453 - C8978 * C10456) *
                C30736) *
               C30503 * C30852) *
              C2500 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30881 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30878 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C30869 +
           ((C8976 * C2393 - C8979 * C2390 + C8977 * C6309 - C8980 * C6305 +
             C8978 * C10809 - C8981 * C10808) *
                C114 +
            (C8976 * C2399 - C8979 * C2394 + C8977 * C6314 - C8980 * C6310 +
             C8978 * C10811 - C8981 * C10810) *
                C30736) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30654 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30661 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C3770) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30654 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30661 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30654 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30661 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C3770) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30654 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30661 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30654 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30661 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C3770) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30654 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30661 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C3770) *
               C30616) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30654 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30661 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C3770) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30654 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30661 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30654 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30661 +
            ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
              C8978 * C2008 - C8981 * C1999) *
                 C114 +
             (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
              C8978 * C2017 - C8981 * C2009) *
                 C30736) *
                C30503 * C3770) *
               C2500 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30654 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30661 +
            ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
              C8981 * C6305 - C8978 * C6309) *
                 C114 +
             (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
              C8981 * C6310 - C8978 * C6314) *
                 C30736) *
                C30503 * C3770) *
               C30616) *
              C30791 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30654 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30661 +
            ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
              C8981 * C2000 - C8978 * C2010) *
                 C114 +
             (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
              C8981 * C2011 - C8978 * C2018) *
                 C30736) *
                C30503 * C3770) *
               C2500 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30654 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30661 +
            ((C8976 * C1297 - C8979 * C1287 + C8977 * C2395 - C8980 * C2391 +
              C8978 * C10605 - C8981 * C10604) *
                 C114 +
             (C8976 * C1314 - C8979 * C1298 + C8977 * C2400 - C8980 * C2396 +
              C8978 * C10607 - C8981 * C10606) *
                 C30736) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30880 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C3262 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C30876 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C3262 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C30866 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C3262 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30870 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30857 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C3262 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C2500 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C3262 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30880 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C3262 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C30876 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C3262 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C30866 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C3262 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C2500 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30880 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30658) *
              C30876 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30658) *
              C30866 +
          (((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C1697 - C8979 * C1694 + C8977 * C5621 - C8980 * C5618 +
             C8978 * C6671 - C8981 * C6670) *
                C114 +
            (C8976 * C1703 - C8979 * C1698 + C8977 * C5627 - C8980 * C5622 +
             C8978 * C6673 - C8981 * C6672) *
                C30736) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C30805 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30616) *
                  C655 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C30805 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                C672 * C105) *
                   C30571 * C30616) *
                  C656 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C30805 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                   C30571 * C30616) *
                  C657 +
              ((C177 * C103 +
                ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
                ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                   C30571 * C30805 +
               (C672 * C103 +
                ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
                ((C30749 * C660 - C113 * C659) * C114 +
                 (C30749 * C662 - C113 * C661) * C30736) *
                    C105) *
                   C30571 * C30616) *
                  C30840) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C1420 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C1421 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C1422 +
               (((C113 * C1152 - C30749 * C1158) * C114 +
                 (C113 * C1159 - C30749 * C1170) * C30736) *
                    C103 +
                ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
                ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
                   C30571 * C30846) *
                  C30791 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C1420 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                C672 * C105) *
                   C30571 * C1421 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C1422 +
               (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
                ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
                ((C30749 * C1427 - C113 * C1426) * C114 +
                 (C30749 * C1429 - C113 * C1428) * C30736) *
                    C105) *
                   C30571 * C30846) *
                  C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C1816 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C1817 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C30839) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C1816 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C1817 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C30839) *
               C30616) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C1816 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C1817 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C30839) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C1816 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C1817 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30805 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30805 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30616) *
              C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30805 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C30805 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1420 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C1421 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C1422 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1420 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C1421 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C1422 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C1816 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C1817 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C30839) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C1816 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C1817 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C1816 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C1817 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C30839) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C1816 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C1817 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30616) *
              C656 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30616) *
              C657 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8976 * C316 - C8979 * C300 + C8977 * C942 - C8980 * C934 +
             C8978 * C2167 - C8981 * C2166) *
                C114 +
            (C8976 * C330 - C8979 * C317 + C8977 * C949 - C8980 * C943 +
             C8978 * C2169 - C8981 * C2168) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1420 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1421 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C1422 +
           ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1420 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1421 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C1422 +
           ((C8976 * C1160 - C8979 * C1153 + C8977 * C1699 - C8980 * C1695 +
             C8978 * C6463 - C8981 * C6462) *
                C114 +
            (C8976 * C1171 - C8979 * C1161 + C8977 * C1704 - C8980 * C1700 +
             C8978 * C6465 - C8981 * C6464) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C1816 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C1817 +
            ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
              C8978 * C2008 - C8981 * C1999) *
                 C114 +
             (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
              C8978 * C2017 - C8981 * C2009) *
                 C30736) *
                C30503 * C30839) *
               C30805 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C1816 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C1817 +
            ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
              C8981 * C6305 - C8978 * C6309) *
                 C114 +
             (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
              C8981 * C6310 - C8978 * C6314) *
                 C30736) *
                C30503 * C30839) *
               C30616) *
              C30791 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C1816 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C1817 +
            ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
              C8981 * C2000 - C8978 * C2010) *
                 C114 +
             (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
              C8981 * C2011 - C8978 * C2018) *
                 C30736) *
                C30503 * C30839) *
               C30805 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C1816 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C1817 +
            ((C8976 * C1297 - C8979 * C1287 + C8977 * C2395 - C8980 * C2391 +
              C8978 * C10605 - C8981 * C10604) *
                 C114 +
             (C8976 * C1314 - C8979 * C1298 + C8977 * C2400 - C8980 * C2396 +
              C8978 * C10607 - C8981 * C10606) *
                 C30736) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C30749 * C122 - C113 * C115) * C114 +
                  (C30749 * C136 - C113 * C123) * C30736) *
                     C103 +
                 ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                 C176 * C105) *
                    C30806 +
                (((C113 * C481 - C30749 * C491) * C114 +
                  (C113 * C492 - C30749 * C511) * C30736) *
                     C103 +
                 ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                 C554 * C105) *
                    C30658) *
                   C30805 +
               ((((C113 * C294 - C30749 * C304) * C114 +
                  (C113 * C305 - C30749 * C324) * C30736) *
                     C103 +
                 ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                 C367 * C105) *
                    C30806 +
                (((C30749 * C936 - C113 * C931) * C114 +
                  (C30749 * C946 - C113 * C937) * C30736) *
                     C103 +
                 ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                 C968 * C105) *
                    C30658) *
                   C30616) *
                  C291 +
              (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                 ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                 C177 * C105) *
                    C30806 +
                (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                 ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                 C785 * C105) *
                    C30658) *
                   C30805 +
               ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                 ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                 C672 * C105) *
                    C30806 +
                (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
                 ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
                 ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                    C30658) *
                   C30616) *
                  C292 +
              (((C176 * C103 +
                 ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                 C178 * C105) *
                    C30806 +
                (C554 * C103 +
                 ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                 ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                    C30658) *
                   C30805 +
               ((C367 * C103 +
                 ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                 ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                    C30806 +
                (C968 * C103 +
                 ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
                 ((C30749 * C944 - C113 * C935) * C114 +
                  (C30749 * C950 - C113 * C945) * C30736) *
                     C105) *
                    C30658) *
                   C30616) *
                  C30830) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30806 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30658) *
                  C1420 +
              ((((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30806 +
               (((C30749 * C936 - C113 * C931) * C114 +
                 (C30749 * C946 - C113 * C937) * C30736) *
                    C103 +
                ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                C968 * C105) *
                   C30658) *
                  C1421 +
              ((((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30806 +
               (((C113 * C1289 - C30749 * C1301) * C114 +
                 (C113 * C1302 - C30749 * C1316) * C30736) *
                    C103 +
                ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
                ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                   C30658) *
                  C1422 +
              ((((C113 * C1152 - C30749 * C1158) * C114 +
                 (C113 * C1159 - C30749 * C1170) * C30736) *
                    C103 +
                ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
                ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
                   C30806 +
               (((C30749 * C1697 - C113 * C1694) * C114 +
                 (C30749 * C1703 - C113 * C1698) * C30736) *
                    C103 +
                ((C30749 * C1699 - C113 * C1695) * C114 +
                 (C30749 * C1704 - C113 * C1700) * C30736) *
                    C104 +
                ((C30749 * C1701 - C113 * C1696) * C114 +
                 (C30749 * C1705 - C113 * C1702) * C30736) *
                    C105) *
                   C30658) *
                  C30846) *
             C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C2276 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C2277 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C2278 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30805 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C2276 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C2277 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C2278 +
           (((C30749 * C2393 - C113 * C2390) * C114 +
             (C30749 * C2399 - C113 * C2394) * C30736) *
                C103 +
            ((C30749 * C2395 - C113 * C2391) * C114 +
             (C30749 * C2400 - C113 * C2396) * C30736) *
                C104 +
            ((C30749 * C2397 - C113 * C2392) * C114 +
             (C30749 * C2401 - C113 * C2398) * C30736) *
                C105) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + (C5313 - C5314) * C4729 +
             (C5315 - C5316) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
             (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C30749 * C1697 - C113 * C1694) * C4729 +
             (C30749 * C1703 - C113 * C1698) * C4725) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 +
             (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 +
             (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C113 * C1695 - C30749 * C1699) * C4729 +
             (C113 * C1700 - C30749 * C1704) * C4725) *
                C30503 * C30658) *
               C30616) *
              C292 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C1420 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30806 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C1421 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30806 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C1422 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30806 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C2276 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C2277 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C2278 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C30805 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C2276 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C2277 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C2278 +
           ((C6676 - C6675) * C4727 + (C6678 - C6677) * C4723 +
            (C6680 - C6679) * C4728 + (C6682 - C6681) * C4724 +
            (C30749 * C6671 - C113 * C6670) * C4729 +
            (C30749 * C6673 - C113 * C6672) * C4725) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C292 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C1420 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30658) *
              C1421 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30658) *
              C1422 +
          (((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C1697 - C8979 * C1694 + C8977 * C5621 - C8980 * C5618 +
             C8978 * C6671 - C8981 * C6670) *
                C114 +
            (C8976 * C1703 - C8979 * C1698 + C8977 * C5627 - C8980 * C5622 +
             C8978 * C6673 - C8981 * C6672) *
                C30736) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C2276 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C2277 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C2278 +
           ((C8979 * C1996 - C8976 * C2002 + C8980 * C1999 - C8977 * C2008 +
             C8981 * C10450 - C8978 * C10452) *
                C114 +
            (C8979 * C2003 - C8976 * C2014 + C8980 * C2009 - C8977 * C2017 +
             C8981 * C10453 - C8978 * C10456) *
                C30736) *
               C30503 * C30852) *
              C30805 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C2276 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C2277 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C2278 +
           ((C8976 * C2393 - C8979 * C2390 + C8977 * C6309 - C8980 * C6305 +
             C8978 * C10809 - C8981 * C10808) *
                C114 +
            (C8976 * C2399 - C8979 * C2394 + C8977 * C6314 - C8980 * C6310 +
             C8978 * C10811 - C8981 * C10810) *
                C30736) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C30749 * C122 - C113 * C115) * C114 +
                (C30749 * C136 - C113 * C123) * C30736) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
               C176 * C105) *
                  C30571 * C30553 * C108 +
              (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
               C177 * C105) *
                  C30571 * C30553 * C109 +
              (C176 * C103 +
               ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
               C178 * C105) *
                  C30571 * C30553 * C110 +
              (C177 * C103 +
               ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
               ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                  C30571 * C30553 * C111 +
              (C178 * C103 +
               ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
               ((C30749 * C134 - C113 * C121) * C114 +
                (C30749 * C142 - C113 * C135) * C30736) *
                   C105) *
                  C30571 * C30553 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C30873 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30861 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C30836) *
                  C291 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C30873 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
                   C30571 * C30861 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C30836) *
                  C292 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C30873 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C113 * C302 - C30749 * C320) * C114 +
                 (C113 * C321 - C30749 * C332) * C30736) *
                    C105) *
                   C30571 * C30861 +
               (C368 * C103 +
                ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
                ((C30749 * C322 - C113 * C303) * C114 +
                 (C30749 * C333 - C113 * C323) * C30736) *
                    C105) *
                   C30571 * C30836) *
                  C30830) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30874 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30863 +
               (((C30749 * C497 - C113 * C484) * C114 +
                 (C30749 * C514 - C113 * C498) * C30736) *
                    C103 +
                ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
                C555 * C105) *
                   C30839) *
                  C30553 * C291 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30874 +
               (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                ((C538 - C539) * C114 + (C540 - C541) * C30736) * C105) *
                   C30863 +
               (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
                ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
                ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                   C30839) *
                  C30553 * C292 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30874 +
               (C554 * C103 +
                ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                ((C113 * C489 - C30749 * C507) * C114 +
                 (C113 * C508 - C30749 * C519) * C30736) *
                    C105) *
                   C30863 +
               (C555 * C103 +
                ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
                ((C30749 * C509 - C113 * C490) * C114 +
                 (C30749 * C520 - C113 * C510) * C30736) *
                    C105) *
                   C30839) *
                  C30553 * C30830) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C1078 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C1079 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C30836) *
                  C30870 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C1078 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                C672 * C105) *
                   C30571 * C1079 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C30836) *
                  C30857 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C1078 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                   C30571 * C1079 +
               (C368 * C103 +
                ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
                ((C30749 * C322 - C113 * C303) * C114 +
                 (C30749 * C333 - C113 * C323) * C30736) *
                    C105) *
                   C30571 * C30836) *
                  C30830) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C30749 * C122 - C113 * C115) * C114 +
                (C30749 * C136 - C113 * C123) * C30736) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
               C176 * C105) *
                  C30571 * C1146 +
              (((C113 * C294 - C30749 * C304) * C114 +
                (C113 * C305 - C30749 * C324) * C30736) *
                   C103 +
               ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
               C367 * C105) *
                  C30571 * C1147 +
              (((C30749 * C310 - C113 * C297) * C114 +
                (C30749 * C327 - C113 * C311) * C30736) *
                   C103 +
               ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
               C368 * C105) *
                  C30571 * C1148 +
              (((C113 * C1152 - C30749 * C1158) * C114 +
                (C113 * C1159 - C30749 * C1170) * C30736) *
                   C103 +
               ((C113 * C1153 - C30749 * C1160) * C114 +
                (C113 * C1161 - C30749 * C1171) * C30736) *
                   C104 +
               ((C113 * C1154 - C30749 * C1162) * C114 +
                (C113 * C1163 - C30749 * C1172) * C30736) *
                   C105) *
                  C30571 * C1149 +
              (((C30749 * C1164 - C113 * C1155) * C114 +
                (C30749 * C1173 - C113 * C1165) * C30736) *
                   C103 +
               ((C30749 * C1166 - C113 * C1156) * C114 +
                (C30749 * C1174 - C113 * C1167) * C30736) *
                   C104 +
               ((C30749 * C1168 - C113 * C1157) * C114 +
                (C30749 * C1175 - C113 * C1169) * C30736) *
                   C105) *
                  C30571 * C1150) *
             C30525 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30874 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30863 +
               (((C30749 * C497 - C113 * C484) * C114 +
                 (C30749 * C514 - C113 * C498) * C30736) *
                    C103 +
                ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
                C555 * C105) *
                   C30839) *
                  C1078 +
              ((((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30874 +
               (((C30749 * C936 - C113 * C931) * C114 +
                 (C30749 * C946 - C113 * C937) * C30736) *
                    C103 +
                ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                C968 * C105) *
                   C30863 +
               (((C113 * C1286 - C30749 * C1295) * C114 +
                 (C113 * C1296 - C30749 * C1313) * C30736) *
                    C103 +
                ((C113 * C1287 - C30749 * C1297) * C114 +
                 (C113 * C1298 - C30749 * C1314) * C30736) *
                    C104 +
                ((C113 * C1288 - C30749 * C1299) * C114 +
                 (C113 * C1300 - C30749 * C1315) * C30736) *
                    C105) *
                   C30839) *
                  C1079 +
              ((((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30874 +
               (((C113 * C1289 - C30749 * C1301) * C114 +
                 (C113 * C1302 - C30749 * C1316) * C30736) *
                    C103 +
                ((C113 * C1290 - C30749 * C1303) * C114 +
                 (C113 * C1304 - C30749 * C1317) * C30736) *
                    C104 +
                ((C113 * C1291 - C30749 * C1305) * C114 +
                 (C113 * C1306 - C30749 * C1318) * C30736) *
                    C105) *
                   C30863 +
               (((C30749 * C1307 - C113 * C1292) * C114 +
                 (C30749 * C1319 - C113 * C1308) * C30736) *
                    C103 +
                ((C30749 * C1309 - C113 * C1293) * C114 +
                 (C30749 * C1320 - C113 * C1310) * C30736) *
                    C104 +
                ((C30749 * C1311 - C113 * C1294) * C114 +
                 (C30749 * C1321 - C113 * C1312) * C30736) *
                    C105) *
                   C30839) *
                  C30836) *
             C30525 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C1816 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C1817 +
               (((C30749 * C497 - C113 * C484) * C114 +
                 (C30749 * C514 - C113 * C498) * C30736) *
                    C103 +
                ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
                C555 * C105) *
                   C30839) *
                  C30553 * C30870 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C1816 +
               (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                C785 * C105) *
                   C1817 +
               (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
                ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
                ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                   C30839) *
                  C30553 * C30857 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C1816 +
               (C554 * C103 +
                ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                   C1817 +
               (C555 * C103 +
                ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
                ((C30749 * C509 - C113 * C490) * C114 +
                 (C30749 * C520 - C113 * C510) * C30736) *
                    C105) *
                   C30839) *
                  C30553 * C30830) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C1816 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C1817 +
               (((C30749 * C497 - C113 * C484) * C114 +
                 (C30749 * C514 - C113 * C498) * C30736) *
                    C103 +
                ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
                C555 * C105) *
                   C30839) *
                  C30873 +
              ((((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C1816 +
               (((C30749 * C936 - C113 * C931) * C114 +
                 (C30749 * C946 - C113 * C937) * C30736) *
                    C103 +
                ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                C968 * C105) *
                   C1817 +
               (((C113 * C1286 - C30749 * C1295) * C114 +
                 (C113 * C1296 - C30749 * C1313) * C30736) *
                    C103 +
                ((C113 * C1287 - C30749 * C1297) * C114 +
                 (C113 * C1298 - C30749 * C1314) * C30736) *
                    C104 +
                ((C113 * C1288 - C30749 * C1299) * C114 +
                 (C113 * C1300 - C30749 * C1315) * C30736) *
                    C105) *
                   C30839) *
                  C30861 +
              ((((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C1816 +
               (((C113 * C1289 - C30749 * C1301) * C114 +
                 (C113 * C1302 - C30749 * C1316) * C30736) *
                    C103 +
                ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
                ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                   C1817 +
               (((C30749 * C1307 - C113 * C1292) * C114 +
                 (C30749 * C1319 - C113 * C1308) * C30736) *
                    C103 +
                ((C30749 * C1309 - C113 * C1293) * C114 +
                 (C30749 * C1320 - C113 * C1310) * C30736) *
                    C104 +
                ((C30749 * C1311 - C113 * C1294) * C114 +
                 (C30749 * C1321 - C113 * C1312) * C30736) *
                    C105) *
                   C30839) *
                  C30836) *
             C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C1991 +
          (((C113 * C481 - C30749 * C491) * C114 +
            (C113 * C492 - C30749 * C511) * C30736) *
               C103 +
           ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
           C554 * C105) *
              C1992 +
          (((C30749 * C497 - C113 * C484) * C114 +
            (C30749 * C514 - C113 * C498) * C30736) *
               C103 +
           ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
           C555 * C105) *
              C1993 +
          (((C113 * C1996 - C30749 * C2002) * C114 +
            (C113 * C2003 - C30749 * C2014) * C30736) *
               C103 +
           ((C113 * C1997 - C30749 * C2004) * C114 +
            (C113 * C2005 - C30749 * C2015) * C30736) *
               C104 +
           ((C113 * C1998 - C30749 * C2006) * C114 +
            (C113 * C2007 - C30749 * C2016) * C30736) *
               C105) *
              C1994 +
          (((C30749 * C2008 - C113 * C1999) * C114 +
            (C30749 * C2017 - C113 * C2009) * C30736) *
               C103 +
           ((C30749 * C2010 - C113 * C2000) * C114 +
            (C30749 * C2018 - C113 * C2011) * C30736) *
               C104 +
           ((C30749 * C2012 - C113 * C2001) * C114 +
            (C30749 * C2019 - C113 * C2013) * C30736) *
               C105) *
              C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 +
            (C30749 * C1295 - C113 * C1286) * C4728 +
            (C30749 * C1313 - C113 * C1296) * C4724 +
            (C30749 * C1307 - C113 * C1292) * C4729 +
            (C30749 * C1319 - C113 * C1308) * C4725) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30874 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30863 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30874 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30863 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C1078 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30874 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
            (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
               C30503 * C30863 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C1079 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30874 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
            (C113 * C5624 - C30749 * C5628) * C4725) *
               C30503 * C30863 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C1816 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C1817 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C1816 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C1817 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30873 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C1816 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C1817 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C30861 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C1816 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C1817 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C1991 +
          ((C113 * C481 - C30749 * C491) * C4727 +
           (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
           (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
              C30503 * C1992 +
          ((C30749 * C497 - C113 * C484) * C4727 +
           (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
           (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
              C30503 * C1993 +
          ((C113 * C1996 - C30749 * C2002) * C4727 +
           (C113 * C2003 - C30749 * C2014) * C4723 +
           (C113 * C2390 - C30749 * C2393) * C4728 +
           (C113 * C2394 - C30749 * C2399) * C4724 +
           (C113 * C6304 - C30749 * C6307) * C4729 +
           (C113 * C6308 - C30749 * C6313) * C4725) *
              C30503 * C1994 +
          ((C30749 * C2008 - C113 * C1999) * C4727 +
           (C30749 * C2017 - C113 * C2009) * C4723 +
           (C30749 * C6309 - C113 * C6305) * C4728 +
           (C30749 * C6314 - C113 * C6310) * C4724 +
           (C30749 * C6311 - C113 * C6306) * C4729 +
           (C30749 * C6315 - C113 * C6312) * C4725) *
              C30503 * C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C30553 * C108 +
          ((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
            C8981 * C485 - C8978 * C499) *
               C114 +
           (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
            C8981 * C500 - C8978 * C515) *
               C30736) *
              C30503 * C30571 * C30553 * C109 +
          ((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
            C8978 * C501 - C8981 * C486) *
               C114 +
           (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
            C8978 * C516 - C8981 * C502) *
               C30736) *
              C30503 * C30571 * C30553 * C110 +
          ((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
            C8981 * C488 - C8978 * C505) *
               C114 +
           (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
            C8981 * C506 - C8978 * C518) *
               C30736) *
              C30503 * C30571 * C30553 * C111 +
          ((C8976 * C130 - C8979 * C119 + C8977 * C507 - C8980 * C489 +
            C8978 * C509 - C8981 * C490) *
               C114 +
           (C8976 * C140 - C8979 * C131 + C8977 * C519 - C8980 * C508 +
            C8978 * C520 - C8981 * C510) *
               C30736) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30874 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30863 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C30839) *
              C30553 * C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C501 - C8979 * C486 + C8977 * C2006 - C8980 * C1998 +
             C8978 * C2012 - C8981 * C2001) *
                C114 +
            (C8976 * C516 - C8979 * C502 + C8977 * C2016 - C8980 * C2007 +
             C8978 * C2019 - C8981 * C2013) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C1146 +
          ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
            C8981 * C1286 - C8978 * C1295) *
               C114 +
           (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
            C8981 * C1296 - C8978 * C1313) *
               C30736) *
              C30503 * C30571 * C1147 +
          ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
            C8978 * C1307 - C8981 * C1292) *
               C114 +
           (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
            C8978 * C1319 - C8981 * C1308) *
               C30736) *
              C30503 * C30571 * C1148 +
          ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
            C8981 * C5618 - C8978 * C5621) *
               C114 +
           (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
            C8981 * C5622 - C8978 * C5627) *
               C30736) *
              C30503 * C30571 * C1149 +
          ((C8976 * C1164 - C8979 * C1155 + C8977 * C5623 - C8980 * C5619 +
            C8978 * C5625 - C8981 * C5620) *
               C114 +
           (C8976 * C1173 - C8979 * C1165 + C8977 * C5628 - C8980 * C5624 +
            C8978 * C5629 - C8981 * C5626) *
               C30736) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C1078 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30874 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30863 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C30839) *
              C1079 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C1307 - C8979 * C1292 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C114 +
            (C8976 * C1319 - C8979 * C1308 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30736) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C1816 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C1817 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C501 - C8979 * C486 + C8977 * C2006 - C8980 * C1998 +
             C8978 * C2012 - C8981 * C2001) *
                C114 +
            (C8976 * C516 - C8979 * C502 + C8977 * C2016 - C8980 * C2007 +
             C8978 * C2019 - C8981 * C2013) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30873 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C1816 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C1817 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C30839) *
              C30861 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C1307 - C8979 * C1292 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C114 +
            (C8976 * C1319 - C8979 * C1308 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30736) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C1991 +
          ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
            C8981 * C1996 - C8978 * C2002) *
               C114 +
           (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
            C8981 * C2003 - C8978 * C2014) *
               C30736) *
              C30503 * C1992 +
          ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
            C8978 * C2008 - C8981 * C1999) *
               C114 +
           (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
            C8978 * C2017 - C8981 * C2009) *
               C30736) *
              C30503 * C1993 +
          ((C8979 * C1996 - C8976 * C2002 + C8980 * C1999 - C8977 * C2008 +
            C8981 * C10450 - C8978 * C10452) *
               C114 +
           (C8979 * C2003 - C8976 * C2014 + C8980 * C2009 - C8977 * C2017 +
            C8981 * C10453 - C8978 * C10456) *
               C30736) *
              C30503 * C1994 +
          ((C8976 * C2008 - C8979 * C1999 + C8977 * C10452 - C8980 * C10450 +
            C8978 * C10454 - C8981 * C10451) *
               C114 +
           (C8976 * C2017 - C8979 * C2009 + C8977 * C10456 - C8980 * C10453 +
            C8978 * C10457 - C8981 * C10455) *
               C30736) *
              C30503 * C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30806 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30658) *
                  C30553 * C655 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30806 +
               (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                C785 * C105) *
                   C30658) *
                  C30553 * C656 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30806 +
               (C554 * C103 +
                ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                   C30658) *
                  C30553 * C657 +
              ((C177 * C103 +
                ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
                ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                   C30806 +
               (C785 * C103 +
                ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
                ((C30749 * C773 - C113 * C772) * C114 +
                 (C30749 * C775 - C113 * C774) * C30736) *
                    C105) *
                   C30658) *
                  C30553 * C30840) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C30749 * C122 - C113 * C115) * C114 +
                  (C30749 * C136 - C113 * C123) * C30736) *
                     C103 +
                 ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                 C176 * C105) *
                    C30806 +
                (((C113 * C481 - C30749 * C491) * C114 +
                  (C113 * C492 - C30749 * C511) * C30736) *
                     C103 +
                 ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                 C554 * C105) *
                    C30658) *
                   C1078 +
               ((((C113 * C294 - C30749 * C304) * C114 +
                  (C113 * C305 - C30749 * C324) * C30736) *
                     C103 +
                 ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                 C367 * C105) *
                    C30806 +
                (((C30749 * C936 - C113 * C931) * C114 +
                  (C30749 * C946 - C113 * C937) * C30736) *
                     C103 +
                 ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                 C968 * C105) *
                    C30658) *
                   C1079 +
               ((((C30749 * C310 - C113 * C297) * C114 +
                  (C30749 * C327 - C113 * C311) * C30736) *
                     C103 +
                 ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                 C368 * C105) *
                    C30806 +
                (((C113 * C1289 - C30749 * C1301) * C114 +
                  (C113 * C1302 - C30749 * C1316) * C30736) *
                     C103 +
                 ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
                 ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                    C30658) *
                   C30836) *
                  C30791 +
              (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                 ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                 C177 * C105) *
                    C30806 +
                (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                 ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                 C785 * C105) *
                    C30658) *
                   C1078 +
               ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                 ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                 C672 * C105) *
                    C30806 +
                (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
                 ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
                 ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                    C30658) *
                   C1079 +
               ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                 ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                 ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                    C30806 +
                (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
                 ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
                 ((C30749 * C1585 - C113 * C1584) * C114 +
                  (C30749 * C1587 - C113 * C1586) * C30736) *
                     C105) *
                    C30658) *
                   C30836) *
                  C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C2276 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C2277 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C2278 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30553 * C30791 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C2276 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C2277 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C2278 +
           (((C2286 - C2285) * C114 + (C2288 - C2287) * C30736) * C103 +
            ((C2290 - C2289) * C114 + (C2292 - C2291) * C30736) * C104 +
            ((C30749 * C2281 - C113 * C2280) * C114 +
             (C30749 * C2283 - C113 * C2282) * C30736) *
                C105) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30806 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30658) *
              C30553 * C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30806 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30806 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
             (C113 * C5624 - C30749 * C5628) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C2276 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C2277 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C2278 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 +
            (C113 * C2390 - C30749 * C2393) * C4728 +
            (C113 * C2394 - C30749 * C2399) * C4724 +
            (C113 * C6304 - C30749 * C6307) * C4729 +
            (C113 * C6308 - C30749 * C6313) * C4725) *
               C30503 * C30852) *
              C30553 * C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C2276 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C2277 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C2278 +
           ((C2286 - C2285) * C4727 + (C2288 - C2287) * C4723 +
            (C30749 * C2395 - C113 * C2391) * C4728 +
            (C30749 * C2400 - C113 * C2396) * C4724 +
            (C30749 * C6569 - C113 * C6568) * C4729 +
            (C30749 * C6571 - C113 * C6570) * C4725) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30658) *
              C30553 * C656 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30658) *
              C30553 * C657 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C503 - C8979 * C487 + C8977 * C505 - C8980 * C488 +
             C8978 * C2281 - C8981 * C2280) *
                C114 +
            (C8976 * C517 - C8979 * C504 + C8977 * C518 - C8980 * C506 +
             C8978 * C2283 - C8981 * C2282) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C1078 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C1079 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C1078 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C1079 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C2276 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C2277 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C2278 +
           ((C8979 * C1996 - C8976 * C2002 + C8980 * C1999 - C8977 * C2008 +
             C8981 * C10450 - C8978 * C10452) *
                C114 +
            (C8979 * C2003 - C8976 * C2014 + C8980 * C2009 - C8977 * C2017 +
             C8981 * C10453 - C8978 * C10456) *
                C30736) *
               C30503 * C30852) *
              C30553 * C30791 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C2276 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C2277 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C2278 +
           ((C8976 * C2004 - C8979 * C1997 + C8977 * C2010 - C8980 * C2000 +
             C8978 * C10707 - C8981 * C10706) *
                C114 +
            (C8976 * C2015 - C8979 * C2005 + C8977 * C2018 - C8980 * C2011 +
             C8978 * C10709 - C8981 * C10708) *
                C30736) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C30553 * C108 +
          (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
           C177 * C105) *
              C30571 * C30553 * C109 +
          (C176 * C103 +
           ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
           C178 * C105) *
              C30571 * C30553 * C110 +
          (C177 * C103 +
           ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
           ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
              C30571 * C30553 * C111 +
          (C178 * C103 +
           ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
           ((C30749 * C134 - C113 * C121) * C114 +
            (C30749 * C142 - C113 * C135) * C30736) *
               C105) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30873 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30861 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30873 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
               C30571 * C30861 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30873 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C113 * C302 - C30749 * C320) * C114 +
             (C113 * C321 - C30749 * C332) * C30736) *
                C105) *
               C30571 * C30861 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C1816 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C1817 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C1816 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C1817 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30873 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C1816 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C1817 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C30861 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C1816 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C1817 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C1816 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C1817 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C1816 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C1817 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30873 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C1816 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C1817 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C30861 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C1816 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C1817 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C30553 * C108 +
          ((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
            C8981 * C485 - C8978 * C499) *
               C114 +
           (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
            C8981 * C500 - C8978 * C515) *
               C30736) *
              C30503 * C30571 * C30553 * C109 +
          ((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
            C8978 * C501 - C8981 * C486) *
               C114 +
           (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
            C8978 * C516 - C8981 * C502) *
               C30736) *
              C30503 * C30571 * C30553 * C110 +
          ((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
            C8981 * C488 - C8978 * C505) *
               C114 +
           (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
            C8981 * C506 - C8978 * C518) *
               C30736) *
              C30503 * C30571 * C30553 * C111 +
          ((C8976 * C130 - C8979 * C119 + C8977 * C507 - C8980 * C489 +
            C8978 * C509 - C8981 * C490) *
               C114 +
           (C8976 * C140 - C8979 * C131 + C8977 * C519 - C8980 * C508 +
            C8978 * C520 - C8981 * C510) *
               C30736) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C1146 +
          ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
            C8981 * C1286 - C8978 * C1295) *
               C114 +
           (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
            C8981 * C1296 - C8978 * C1313) *
               C30736) *
              C30503 * C30571 * C1147 +
          ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
            C8978 * C1307 - C8981 * C1292) *
               C114 +
           (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
            C8978 * C1319 - C8981 * C1308) *
               C30736) *
              C30503 * C30571 * C1148 +
          ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
            C8981 * C5618 - C8978 * C5621) *
               C114 +
           (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
            C8981 * C5622 - C8978 * C5627) *
               C30736) *
              C30503 * C30571 * C1149 +
          ((C8976 * C1164 - C8979 * C1155 + C8977 * C5623 - C8980 * C5619 +
            C8978 * C5625 - C8981 * C5620) *
               C114 +
           (C8976 * C1173 - C8979 * C1165 + C8977 * C5628 - C8980 * C5624 +
            C8978 * C5629 - C8981 * C5626) *
               C30736) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C1816 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C1817 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C501 - C8979 * C486 + C8977 * C2006 - C8980 * C1998 +
             C8978 * C2012 - C8981 * C2001) *
                C114 +
            (C8976 * C516 - C8979 * C502 + C8977 * C2016 - C8980 * C2007 +
             C8978 * C2019 - C8981 * C2013) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30873 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C1816 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C1817 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C30839) *
              C30861 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C1816 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C1817 +
           ((C8976 * C1307 - C8979 * C1292 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C114 +
            (C8976 * C1319 - C8979 * C1308 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30736) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30530 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30539 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C3262 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C30805 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C3262 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30654 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30661 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C3770) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30654 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30661 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C3770) *
               C30616) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30654 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30661 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C3770) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30654 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30661 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30654 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30661 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C3770) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30654 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30661 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C3770) *
               C30616) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30654 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30661 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C3770) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30654 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30661 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30654 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30661 +
            ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
              C8978 * C2008 - C8981 * C1999) *
                 C114 +
             (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
              C8978 * C2017 - C8981 * C2009) *
                 C30736) *
                C30503 * C3770) *
               C30805 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30654 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30661 +
            ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
              C8981 * C6305 - C8978 * C6309) *
                 C114 +
             (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
              C8981 * C6310 - C8978 * C6314) *
                 C30736) *
                C30503 * C3770) *
               C30616) *
              C2608 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30654 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30661 +
            ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
              C8981 * C2000 - C8978 * C2010) *
                 C114 +
             (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
              C8981 * C2011 - C8978 * C2018) *
                 C30736) *
                C30503 * C3770) *
               C30805 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30654 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30661 +
            ((C8976 * C1297 - C8979 * C1287 + C8977 * C2395 - C8980 * C2391 +
              C8978 * C10605 - C8981 * C10604) *
                 C114 +
             (C8976 * C1314 - C8979 * C1298 + C8977 * C2400 - C8980 * C2396 +
              C8978 * C10607 - C8981 * C10606) *
                 C30736) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C3262 +
               (((C113 * C481 - C30749 * C491) * C114 +
                 (C113 * C492 - C30749 * C511) * C30736) *
                    C103 +
                ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                C554 * C105) *
                   C30658) *
                  C30553 * C30879 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C3262 +
               (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                C785 * C105) *
                   C30658) *
                  C30553 * C30872 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C3262 +
               (C554 * C103 +
                ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
                ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                   C30658) *
                  C30553 * C30859 +
              ((C177 * C103 +
                ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
                ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                   C3262 +
               (C785 * C103 +
                ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
                ((C30749 * C773 - C113 * C772) * C114 +
                 (C30749 * C775 - C113 * C774) * C30736) *
                    C105) *
                   C30658) *
                  C30553 * C30840) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C30749 * C122 - C113 * C115) * C114 +
                  (C30749 * C136 - C113 * C123) * C30736) *
                     C103 +
                 ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                 C176 * C105) *
                    C3262 +
                (((C113 * C481 - C30749 * C491) * C114 +
                  (C113 * C492 - C30749 * C511) * C30736) *
                     C103 +
                 ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
                 C554 * C105) *
                    C30658) *
                   C30873 +
               ((((C113 * C294 - C30749 * C304) * C114 +
                  (C113 * C305 - C30749 * C324) * C30736) *
                     C103 +
                 ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                 C367 * C105) *
                    C3262 +
                (((C30749 * C936 - C113 * C931) * C114 +
                  (C30749 * C946 - C113 * C937) * C30736) *
                     C103 +
                 ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
                 C968 * C105) *
                    C30658) *
                   C30861 +
               ((((C30749 * C310 - C113 * C297) * C114 +
                  (C30749 * C327 - C113 * C311) * C30736) *
                     C103 +
                 ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                 C368 * C105) *
                    C3262 +
                (((C113 * C1289 - C30749 * C1301) * C114 +
                  (C113 * C1302 - C30749 * C1316) * C30736) *
                     C103 +
                 ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
                 ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                    C30658) *
                   C30836) *
                  C2608 +
              (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                 ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                 C177 * C105) *
                    C3262 +
                (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
                 ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
                 C785 * C105) *
                    C30658) *
                   C30873 +
               ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                 ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                 C672 * C105) *
                    C3262 +
                (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
                 ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
                 ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                    C30658) *
                   C30861 +
               ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                 ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                 ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                    C3262 +
                (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
                 ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
                 ((C30749 * C1585 - C113 * C1584) * C114 +
                  (C30749 * C1587 - C113 * C1586) * C30736) *
                     C105) *
                    C30658) *
                   C30836) *
                  C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30881 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30878 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30869 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30553 * C2608 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30881 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30878 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30869 +
           (((C2286 - C2285) * C114 + (C2288 - C2287) * C30736) * C103 +
            ((C2290 - C2289) * C114 + (C2292 - C2291) * C30736) * C104 +
            ((C30749 * C2281 - C113 * C2280) * C114 +
             (C30749 * C2283 - C113 * C2282) * C30736) *
                C105) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C3262 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30658) *
              C30553 * C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C3262 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C3262 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30881 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30878 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30869 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C30553 * C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30881 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30878 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C30869 +
           ((C2286 - C2285) * C4727 + (C2288 - C2287) * C4723 +
            (C30749 * C2395 - C113 * C2391) * C4728 +
            (C30749 * C2400 - C113 * C2396) * C4724 +
            (C30749 * C6569 - C113 * C6568) * C4729 +
            (C30749 * C6571 - C113 * C6570) * C4725) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30872 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30859 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C503 - C8979 * C487 + C8977 * C505 - C8980 * C488 +
             C8978 * C2281 - C8981 * C2280) *
                C114 +
            (C8976 * C517 - C8979 * C504 + C8977 * C518 - C8980 * C506 +
             C8978 * C2283 - C8981 * C2282) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30873 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30861 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30873 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30861 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30881 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30878 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30869 +
           ((C8979 * C1996 - C8976 * C2002 + C8980 * C1999 - C8977 * C2008 +
             C8981 * C10450 - C8978 * C10452) *
                C114 +
            (C8979 * C2003 - C8976 * C2014 + C8980 * C2009 - C8977 * C2017 +
             C8981 * C10453 - C8978 * C10456) *
                C30736) *
               C30503 * C30852) *
              C30553 * C2608 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30881 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30878 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C30869 +
           ((C8976 * C2004 - C8979 * C1997 + C8977 * C2010 - C8980 * C2000 +
             C8978 * C10707 - C8981 * C10706) *
                C114 +
            (C8976 * C2015 - C8979 * C2005 + C8977 * C2018 - C8980 * C2011 +
             C8978 * C10709 - C8981 * C10708) *
                C30736) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30654 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30661 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C3770) *
              C30553 * C30530 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30654 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30661 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C3770) *
              C30553 * C30539 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30654 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30661 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C3770) *
              C30553 * C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30654 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30661 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C3770) *
              C30553 * C30530 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30654 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30661 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C3770) *
              C30553 * C30539 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30654 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30661 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C3770) *
              C30553 * C2871)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30654 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30661 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C3770) *
              C30553 * C30530 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30654 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30661 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C3770) *
              C30553 * C30539 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30654 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30661 +
           ((C8976 * C501 - C8979 * C486 + C8977 * C2006 - C8980 * C1998 +
             C8978 * C2012 - C8981 * C2001) *
                C114 +
            (C8976 * C516 - C8979 * C502 + C8977 * C2016 - C8980 * C2007 +
             C8978 * C2019 - C8981 * C2013) *
                C30736) *
               C30503 * C3770) *
              C30553 * C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30873 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30861 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C3262 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30873 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30861 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C3262 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C3262 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C3262 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C3262 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C3262 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30658) *
              C30553 * C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C3262 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C3262 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30872 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C3262 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30859 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C3262 +
           ((C8976 * C503 - C8979 * C487 + C8977 * C505 - C8980 * C488 +
             C8978 * C2281 - C8981 * C2280) *
                C114 +
            (C8976 * C517 - C8979 * C504 + C8977 * C518 - C8980 * C506 +
             C8978 * C2283 - C8981 * C2282) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30873 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30861 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30873 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C3262 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30861 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C3262 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1420 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1421 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C1422 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C30791 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1420 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1421 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C1422 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30805 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30805 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30805 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C30805 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30805 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30805 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30616) *
              C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30805 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C30805 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1420 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C1421 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C1422 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1420 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C1421 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C1422 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30616) *
              C656 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30616) *
              C657 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30571 * C30805 +
           ((C8976 * C316 - C8979 * C300 + C8977 * C942 - C8980 * C934 +
             C8978 * C2167 - C8981 * C2166) *
                C114 +
            (C8976 * C330 - C8979 * C317 + C8977 * C949 - C8980 * C943 +
             C8978 * C2169 - C8981 * C2168) *
                C30736) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1420 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1421 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C1422 +
           ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1420 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1421 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C1422 +
           ((C8976 * C1160 - C8979 * C1153 + C8977 * C1699 - C8980 * C1695 +
             C8978 * C6463 - C8981 * C6462) *
                C114 +
            (C8976 * C1171 - C8979 * C1161 + C8977 * C1704 - C8980 * C1700 +
             C8978 * C6465 - C8981 * C6464) *
                C30736) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C1420 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30806 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C1421 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30806 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C1422 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30806 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C291 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C292 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C30806 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C30805 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C30806 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + (C5313 - C5314) * C4729 +
             (C5315 - C5316) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
             (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C30749 * C1697 - C113 * C1694) * C4729 +
             (C30749 * C1703 - C113 * C1698) * C4725) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 +
             (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 +
             (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C113 * C1695 - C30749 * C1699) * C4729 +
             (C113 * C1700 - C30749 * C1704) * C4725) *
                C30503 * C30658) *
               C30616) *
              C292 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C1420 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30806 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C1421 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30806 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C1422 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30806 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C292 +
          ((((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
              C8978 * C501 - C8981 * C486) *
                 C114 +
             (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
              C8978 * C516 - C8981 * C502) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
              C8981 * C1998 - C8978 * C2006) *
                 C114 +
             (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
              C8981 * C2007 - C8978 * C2016) *
                 C30736) *
                C30503 * C30658) *
               C30805 +
           (((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
              C8981 * C1288 - C8978 * C1299) *
                 C114 +
             (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
              C8981 * C1300 - C8978 * C1315) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C940 - C8979 * C933 + C8977 * C1299 - C8980 * C1288 +
              C8978 * C2397 - C8981 * C2392) *
                 C114 +
             (C8976 * C948 - C8979 * C941 + C8977 * C1315 - C8980 * C1300 +
              C8978 * C2401 - C8981 * C2398) *
                 C30736) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C1420 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30658) *
              C1421 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30658) *
              C1422 +
          (((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
             C8981 * C5618 - C8978 * C5621) *
                C114 +
            (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
             C8981 * C5622 - C8978 * C5627) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C1697 - C8979 * C1694 + C8977 * C5621 - C8980 * C5618 +
             C8978 * C6671 - C8981 * C6670) *
                C114 +
            (C8976 * C1703 - C8979 * C1698 + C8977 * C5627 - C8980 * C5622 +
             C8978 * C6673 - C8981 * C6672) *
                C30736) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C30749 * C122 - C113 * C115) * C114 +
                (C30749 * C136 - C113 * C123) * C30736) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
               C176 * C105) *
                  C30571 * C30553 * C108 +
              (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
               C177 * C105) *
                  C30571 * C30553 * C109 +
              (C176 * C103 +
               ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
               C178 * C105) *
                  C30571 * C30553 * C110 +
              (C177 * C103 +
               ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
               ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                  C30571 * C30553 * C111 +
              (C178 * C103 +
               ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
               ((C30749 * C134 - C113 * C121) * C114 +
                (C30749 * C142 - C113 * C135) * C30736) *
                   C105) *
                  C30571 * C30553 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C30873 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30861 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C30836) *
                  C291 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C30873 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
                   C30571 * C30861 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C30836) *
                  C292 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C30873 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C113 * C302 - C30749 * C320) * C114 +
                 (C113 * C321 - C30749 * C332) * C30736) *
                    C105) *
                   C30571 * C30861 +
               (C368 * C103 +
                ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
                ((C30749 * C322 - C113 * C303) * C114 +
                 (C30749 * C333 - C113 * C323) * C30736) *
                    C105) *
                   C30571 * C30836) *
                  C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30874 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            ((C538 - C539) * C114 + (C540 - C541) * C30736) * C105) *
               C30863 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30874 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C113 * C489 - C30749 * C507) * C114 +
             (C113 * C508 - C30749 * C519) * C30736) *
                C105) *
               C30863 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C1078 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30874 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30863 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C1079 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30874 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C113 * C1290 - C30749 * C1303) * C114 +
             (C113 * C1304 - C30749 * C1317) * C30736) *
                C104 +
            ((C113 * C1291 - C30749 * C1305) * C114 +
             (C113 * C1306 - C30749 * C1318) * C30736) *
                C105) *
               C30863 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 +
            (C30749 * C1295 - C113 * C1286) * C4728 +
            (C30749 * C1313 - C113 * C1296) * C4724 +
            (C30749 * C1307 - C113 * C1292) * C4729 +
            (C30749 * C1319 - C113 * C1308) * C4725) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30874 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30863 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30874 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30863 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C1078 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30874 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
            (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
               C30503 * C30863 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C1079 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30874 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
            (C113 * C5624 - C30749 * C5628) * C4725) *
               C30503 * C30863 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C30553 * C108 +
          ((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
            C8981 * C485 - C8978 * C499) *
               C114 +
           (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
            C8981 * C500 - C8978 * C515) *
               C30736) *
              C30503 * C30571 * C30553 * C109 +
          ((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
            C8978 * C501 - C8981 * C486) *
               C114 +
           (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
            C8978 * C516 - C8981 * C502) *
               C30736) *
              C30503 * C30571 * C30553 * C110 +
          ((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
            C8981 * C488 - C8978 * C505) *
               C114 +
           (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
            C8981 * C506 - C8978 * C518) *
               C30736) *
              C30503 * C30571 * C30553 * C111 +
          ((C8976 * C130 - C8979 * C119 + C8977 * C507 - C8980 * C489 +
            C8978 * C509 - C8981 * C490) *
               C114 +
           (C8976 * C140 - C8979 * C131 + C8977 * C519 - C8980 * C508 +
            C8978 * C520 - C8981 * C510) *
               C30736) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30874 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30863 +
           ((C8979 * C485 - C8976 * C499 + C8980 * C1997 - C8977 * C2004 +
             C8981 * C2000 - C8978 * C2010) *
                C114 +
            (C8979 * C500 - C8976 * C515 + C8980 * C2005 - C8977 * C2015 +
             C8981 * C2011 - C8978 * C2018) *
                C30736) *
               C30503 * C30839) *
              C30553 * C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C501 - C8979 * C486 + C8977 * C2006 - C8980 * C1998 +
             C8978 * C2012 - C8981 * C2001) *
                C114 +
            (C8976 * C516 - C8979 * C502 + C8977 * C2016 - C8980 * C2007 +
             C8978 * C2019 - C8981 * C2013) *
                C30736) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C1146 +
          ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
            C8981 * C1286 - C8978 * C1295) *
               C114 +
           (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
            C8981 * C1296 - C8978 * C1313) *
               C30736) *
              C30503 * C30571 * C1147 +
          ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
            C8978 * C1307 - C8981 * C1292) *
               C114 +
           (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
            C8978 * C1319 - C8981 * C1308) *
               C30736) *
              C30503 * C30571 * C1148 +
          ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
            C8981 * C5618 - C8978 * C5621) *
               C114 +
           (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
            C8981 * C5622 - C8978 * C5627) *
               C30736) *
              C30503 * C30571 * C1149 +
          ((C8976 * C1164 - C8979 * C1155 + C8977 * C5623 - C8980 * C5619 +
            C8978 * C5625 - C8981 * C5620) *
               C114 +
           (C8976 * C1173 - C8979 * C1165 + C8977 * C5628 - C8980 * C5624 +
            C8978 * C5629 - C8981 * C5626) *
               C30736) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C497 - C8979 * C484 + C8977 * C2002 - C8980 * C1996 +
             C8978 * C2008 - C8981 * C1999) *
                C114 +
            (C8976 * C514 - C8979 * C498 + C8977 * C2014 - C8980 * C2003 +
             C8978 * C2017 - C8981 * C2009) *
                C30736) *
               C30503 * C30839) *
              C1078 +
          (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30874 +
           ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
             C8978 * C2393 - C8981 * C2390) *
                C114 +
            (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
             C8978 * C2399 - C8981 * C2394) *
                C30736) *
               C30503 * C30863 +
           ((C8979 * C1286 - C8976 * C1295 + C8980 * C2390 - C8977 * C2393 +
             C8981 * C6305 - C8978 * C6309) *
                C114 +
            (C8979 * C1296 - C8976 * C1313 + C8980 * C2394 - C8977 * C2399 +
             C8981 * C6310 - C8978 * C6314) *
                C30736) *
               C30503 * C30839) *
              C1079 +
          (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30874 +
           ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
             C8981 * C6304 - C8978 * C6307) *
                C114 +
            (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
             C8981 * C6308 - C8978 * C6313) *
                C30736) *
               C30503 * C30863 +
           ((C8976 * C1307 - C8979 * C1292 + C8977 * C6307 - C8980 * C6304 +
             C8978 * C6311 - C8981 * C6306) *
                C114 +
            (C8976 * C1319 - C8979 * C1308 + C8977 * C6313 - C8980 * C6308 +
             C8978 * C6315 - C8981 * C6312) *
                C30736) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C1078 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C1079 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C30806 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C1078 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C1079 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C30806 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30806 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30806 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30806 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30806 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30658) *
              C30553 * C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30806 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30806 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
             (C113 * C5624 - C30749 * C5628) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
             C8981 * C1996 - C8978 * C2002) *
                C114 +
            (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
             C8981 * C2003 - C8978 * C2014) *
                C30736) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
             C8978 * C2004 - C8981 * C1997) *
                C114 +
            (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
             C8978 * C2015 - C8981 * C2005) *
                C30736) *
               C30503 * C30658) *
              C30553 * C656 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30806 +
           ((C8979 * C483 - C8976 * C495 + C8980 * C486 - C8977 * C501 +
             C8981 * C1998 - C8978 * C2006) *
                C114 +
            (C8979 * C496 - C8976 * C513 + C8980 * C502 - C8977 * C516 +
             C8981 * C2007 - C8978 * C2016) *
                C30736) *
               C30503 * C30658) *
              C30553 * C657 +
          (((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
             C8981 * C488 - C8978 * C505) *
                C114 +
            (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
             C8981 * C506 - C8978 * C518) *
                C30736) *
               C30503 * C30806 +
           ((C8976 * C503 - C8979 * C487 + C8977 * C505 - C8980 * C488 +
             C8978 * C2281 - C8981 * C2280) *
                C114 +
            (C8976 * C517 - C8979 * C504 + C8977 * C518 - C8980 * C506 +
             C8978 * C2283 - C8981 * C2282) *
                C30736) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
              C8978 * C497 - C8981 * C484) *
                 C114 +
             (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
              C8978 * C514 - C8981 * C498) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C481 - C8976 * C491 + C8980 * C484 - C8977 * C497 +
              C8981 * C1996 - C8978 * C2002) *
                 C114 +
             (C8979 * C492 - C8976 * C511 + C8980 * C498 - C8977 * C514 +
              C8981 * C2003 - C8978 * C2014) *
                 C30736) *
                C30503 * C30658) *
               C1078 +
           (((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
              C8981 * C1286 - C8978 * C1295) *
                 C114 +
             (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
              C8981 * C1296 - C8978 * C1313) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C936 - C8979 * C931 + C8977 * C1295 - C8980 * C1286 +
              C8978 * C2393 - C8981 * C2390) *
                 C114 +
             (C8976 * C946 - C8979 * C937 + C8977 * C1313 - C8980 * C1296 +
              C8978 * C2399 - C8981 * C2394) *
                 C30736) *
                C30503 * C30658) *
               C1079 +
           (((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
              C8978 * C1307 - C8981 * C1292) *
                 C114 +
             (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
              C8978 * C1319 - C8981 * C1308) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C1289 - C8976 * C1301 + C8980 * C1292 - C8977 * C1307 +
              C8981 * C6304 - C8978 * C6307) *
                 C114 +
             (C8979 * C1302 - C8976 * C1316 + C8980 * C1308 - C8977 * C1319 +
              C8981 * C6308 - C8978 * C6313) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
              C8981 * C485 - C8978 * C499) *
                 C114 +
             (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
              C8981 * C500 - C8978 * C515) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C493 - C8979 * C482 + C8977 * C499 - C8980 * C485 +
              C8978 * C2004 - C8981 * C1997) *
                 C114 +
             (C8976 * C512 - C8979 * C494 + C8977 * C515 - C8980 * C500 +
              C8978 * C2015 - C8981 * C2005) *
                 C30736) *
                C30503 * C30658) *
               C1078 +
           (((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
              C8978 * C1297 - C8981 * C1287) *
                 C114 +
             (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
              C8978 * C1314 - C8981 * C1298) *
                 C30736) *
                C30503 * C30806 +
            ((C8979 * C932 - C8976 * C938 + C8980 * C1287 - C8977 * C1297 +
              C8981 * C2391 - C8978 * C2395) *
                 C114 +
             (C8979 * C939 - C8976 * C947 + C8980 * C1298 - C8977 * C1314 +
              C8981 * C2396 - C8978 * C2400) *
                 C30736) *
                C30503 * C30658) *
               C1079 +
           (((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
              C8981 * C1293 - C8978 * C1309) *
                 C114 +
             (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
              C8981 * C1310 - C8978 * C1320) *
                 C30736) *
                C30503 * C30806 +
            ((C8976 * C1303 - C8979 * C1290 + C8977 * C1309 - C8980 * C1293 +
              C8978 * C6569 - C8981 * C6568) *
                 C114 +
             (C8976 * C1317 - C8979 * C1304 + C8977 * C1320 - C8980 * C1310 +
              C8978 * C6571 - C8981 * C6570) *
                 C30736) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30873 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30861 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30873 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
               C30571 * C30861 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30873 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C113 * C302 - C30749 * C320) * C114 +
             (C113 * C321 - C30749 * C332) * C30736) *
                C105) *
               C30571 * C30861 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C30553 * C108 +
          (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
           C177 * C105) *
              C30571 * C30553 * C109 +
          (C176 * C103 +
           ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
           C178 * C105) *
              C30571 * C30553 * C110 +
          (C177 * C103 +
           ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
           ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
              C30571 * C30553 * C111 +
          (C178 * C103 +
           ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
           ((C30749 * C134 - C113 * C121) * C114 +
            (C30749 * C142 - C113 * C135) * C30736) *
               C105) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C30553 * C108 +
          ((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
            C8981 * C485 - C8978 * C499) *
               C114 +
           (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
            C8981 * C500 - C8978 * C515) *
               C30736) *
              C30503 * C30571 * C30553 * C109 +
          ((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
            C8978 * C501 - C8981 * C486) *
               C114 +
           (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
            C8978 * C516 - C8981 * C502) *
               C30736) *
              C30503 * C30571 * C30553 * C110 +
          ((C8979 * C118 - C8976 * C128 + C8980 * C487 - C8977 * C503 +
            C8981 * C488 - C8978 * C505) *
               C114 +
           (C8979 * C129 - C8976 * C139 + C8980 * C504 - C8977 * C517 +
            C8981 * C506 - C8978 * C518) *
               C30736) *
              C30503 * C30571 * C30553 * C111 +
          ((C8976 * C130 - C8979 * C119 + C8977 * C507 - C8980 * C489 +
            C8978 * C509 - C8981 * C490) *
               C114 +
           (C8976 * C140 - C8979 * C131 + C8977 * C519 - C8980 * C508 +
            C8978 * C520 - C8981 * C510) *
               C30736) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C292 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C30873 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C30861 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
             C8978 * C497 - C8981 * C484) *
                C114 +
            (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
             C8978 * C514 - C8981 * C498) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
             C8981 * C1286 - C8978 * C1295) *
                C114 +
            (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
             C8981 * C1296 - C8978 * C1313) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
             C8978 * C1307 - C8981 * C1292) *
                C114 +
            (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
             C8978 * C1319 - C8981 * C1308) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C8979 * C116 - C8976 * C124 + C8980 * C482 - C8977 * C493 +
             C8981 * C485 - C8978 * C499) *
                C114 +
            (C8979 * C125 - C8976 * C137 + C8980 * C494 - C8977 * C512 +
             C8981 * C500 - C8978 * C515) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8976 * C306 - C8979 * C295 + C8977 * C938 - C8980 * C932 +
             C8978 * C1297 - C8981 * C1287) *
                C114 +
            (C8976 * C325 - C8979 * C307 + C8977 * C947 - C8980 * C939 +
             C8978 * C1314 - C8981 * C1298) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8979 * C298 - C8976 * C312 + C8980 * C1290 - C8977 * C1303 +
             C8981 * C1293 - C8978 * C1309) *
                C114 +
            (C8979 * C313 - C8976 * C328 + C8980 * C1304 - C8977 * C1317 +
             C8981 * C1310 - C8978 * C1320) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30857 +
          (((C8976 * C126 - C8979 * C117 + C8977 * C495 - C8980 * C483 +
             C8978 * C501 - C8981 * C486) *
                C114 +
            (C8976 * C138 - C8979 * C127 + C8977 * C513 - C8980 * C496 +
             C8978 * C516 - C8981 * C502) *
                C30736) *
               C30503 * C30571 * C1078 +
           ((C8979 * C296 - C8976 * C308 + C8980 * C933 - C8977 * C940 +
             C8981 * C1288 - C8978 * C1299) *
                C114 +
            (C8979 * C309 - C8976 * C326 + C8980 * C941 - C8977 * C948 +
             C8981 * C1300 - C8978 * C1315) *
                C30736) *
               C30503 * C30571 * C1079 +
           ((C8976 * C314 - C8979 * C299 + C8977 * C1305 - C8980 * C1291 +
             C8978 * C1311 - C8981 * C1294) *
                C114 +
            (C8976 * C329 - C8979 * C315 + C8977 * C1318 - C8980 * C1306 +
             C8978 * C1321 - C8981 * C1312) *
                C30736) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8976 * C122 - C8979 * C115 + C8977 * C491 - C8980 * C481 +
            C8978 * C497 - C8981 * C484) *
               C114 +
           (C8976 * C136 - C8979 * C123 + C8977 * C511 - C8980 * C492 +
            C8978 * C514 - C8981 * C498) *
               C30736) *
              C30503 * C30571 * C1146 +
          ((C8979 * C294 - C8976 * C304 + C8980 * C931 - C8977 * C936 +
            C8981 * C1286 - C8978 * C1295) *
               C114 +
           (C8979 * C305 - C8976 * C324 + C8980 * C937 - C8977 * C946 +
            C8981 * C1296 - C8978 * C1313) *
               C30736) *
              C30503 * C30571 * C1147 +
          ((C8976 * C310 - C8979 * C297 + C8977 * C1301 - C8980 * C1289 +
            C8978 * C1307 - C8981 * C1292) *
               C114 +
           (C8976 * C327 - C8979 * C311 + C8977 * C1316 - C8980 * C1302 +
            C8978 * C1319 - C8981 * C1308) *
               C30736) *
              C30503 * C30571 * C1148 +
          ((C8979 * C1152 - C8976 * C1158 + C8980 * C1694 - C8977 * C1697 +
            C8981 * C5618 - C8978 * C5621) *
               C114 +
           (C8979 * C1159 - C8976 * C1170 + C8980 * C1698 - C8977 * C1703 +
            C8981 * C5622 - C8978 * C5627) *
               C30736) *
              C30503 * C30571 * C1149 +
          ((C8976 * C1164 - C8979 * C1155 + C8977 * C5623 - C8980 * C5619 +
            C8978 * C5625 - C8981 * C5620) *
               C114 +
           (C8976 * C1173 - C8979 * C1165 + C8977 * C5628 - C8980 * C5624 +
            C8978 * C5629 - C8981 * C5626) *
               C30736) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30612 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30619 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C2868) *
              C30530 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30612 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30619 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C2868) *
              C30539 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30612 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C30619 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C2868) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30612 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30619 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C2868) *
              C2608 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30612 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30619 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C30806 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C2868) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30880 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30876 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30866 +
           (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30571 * C30846) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30880 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30876 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30866 +
           (((C19994 - C19993 + C19996 - C19995) * C114 +
             (C19998 - C19997 + C20000 - C19999) * C30736) *
                C13128 +
            ((C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
              C18613 * C1696) *
                 C114 +
             (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
              C18613 * C1702) *
                 C30736) *
                C13129) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30879 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30872 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30859 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C19134 - C19133 + C19136 - C19135) * C114 +
             (C19138 - C19137 + C19140 - C19139) * C30736) *
                C13128 +
            ((C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
                 C114 +
             (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
                 C30736) *
                C13129) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30874 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30863 +
            (((C18610 * C497 - C18612 * C484 + C18611 * C2002 -
               C18613 * C1996) *
                  C114 +
              (C18610 * C514 - C18612 * C498 + C18611 * C2014 -
               C18613 * C2003) *
                  C30736) *
                 C13128 +
             ((C18979 - C18980 + C18981 - C18982) * C114 +
              (C18983 - C18984 + C18985 - C18986) * C30736) *
                 C13129) *
                C30839) *
               C2500 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30874 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30863 +
            (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
               C18611 * C2393) *
                  C114 +
              (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
               C18611 * C2399) *
                  C30736) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C114 +
              (C20905 - C20906 + C20907 - C20908) * C30736) *
                 C13129) *
                C30839) *
               C30616) *
              C2608 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30874 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30863 +
            (((C18980 - C18979 + C18982 - C18981) * C114 +
              (C18984 - C18983 + C18986 - C18985) * C30736) *
                 C13128 +
             ((C18995 - C18996 + C18997 - C18998) * C114 +
              (C18999 - C19000 + C19001 - C19002) * C30736) *
                 C13129) *
                C30839) *
               C2500 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30874 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30863 +
            (((C20902 - C20901 + C20904 - C20903) * C114 +
              (C20906 - C20905 + C20908 - C20907) * C30736) *
                 C13128 +
             ((C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
               C18613 * C2392) *
                  C114 +
              (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
               C18613 * C2398) *
                  C30736) *
                 C13129) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30530 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30539 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C30806 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C30806 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30879 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30872 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C30616) *
              C30859 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30571 * C2500 +
           (((C19134 - C19133 + C19136 - C19135) * C114 +
             (C19138 - C19137 + C19140 - C19139) * C30736) *
                C13128 +
            ((C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
                 C114 +
             (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
                 C30736) *
                C13129) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30880 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30876 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30866 +
           (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30571 * C30846) *
              C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30880 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30876 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30866 +
           (((C19994 - C19993 + C19996 - C19995) * C114 +
             (C19998 - C19997 + C20000 - C19999) * C30736) *
                C13128 +
            ((C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
              C18613 * C1696) *
                 C114 +
             (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
              C18613 * C1702) *
                 C30736) *
                C13129) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30612 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30619 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C2868) *
              C30791 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30612 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30619 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C3262 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C2868) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30654 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30661 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C3770) *
              C30612 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30654 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30661 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C114 +
             (C20905 - C20906 + C20907 - C20908) * C30736) *
                C13129) *
               C3770) *
              C30619 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30654 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C30661 +
           (((C18610 * C1307 - C18612 * C1292 + C18611 * C6307 -
              C18613 * C6304) *
                 C114 +
             (C18610 * C1319 - C18612 * C1308 + C18611 * C6313 -
              C18613 * C6308) *
                 C30736) *
                C13128 +
            ((C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C114 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C30736) *
                C13129) *
               C3770) *
              C2868) *
         C30525) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30880 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C3262 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30658) *
              C30876 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C30658) *
              C30866 +
          ((((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C3262 +
           (((C18610 * C1697 - C18612 * C1694 + C18611 * C5621 -
              C18613 * C5618) *
                 C114 +
             (C18610 * C1703 - C18612 * C1698 + C18611 * C5627 -
              C18613 * C5622) *
                 C30736) *
                C13128 +
            ((C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C114 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C30736) *
                C13129) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30870 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30857 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C3262 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C3262 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30881 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30878 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30869 +
           (((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
              C18611 * C2008) *
                 C114 +
             (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
              C18611 * C2017) *
                 C30736) *
                C13128 +
            ((C21039 - C21040 + C21041 - C21042) * C114 +
             (C21043 - C21044 + C21045 - C21046) * C30736) *
                C13129) *
               C30852) *
              C2500 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30881 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30878 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C114 +
             (C20905 - C20906 + C20907 - C20908) * C30736) *
                C13129) *
               C30869 +
           (((C18610 * C2393 - C18612 * C2390 + C18611 * C6309 -
              C18613 * C6305) *
                 C114 +
             (C18610 * C2399 - C18612 * C2394 + C18611 * C6314 -
              C18613 * C6310) *
                 C30736) *
                C13128 +
            ((C18610 * C2395 - C18612 * C2391 + C18611 * C10605 -
              C18613 * C10604) *
                 C114 +
             (C18610 * C2400 - C18612 * C2396 + C18611 * C10607 -
              C18613 * C10606) *
                 C30736) *
                C13129) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30654 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30661 +
            (((C18610 * C497 - C18612 * C484 + C18611 * C2002 -
               C18613 * C1996) *
                  C114 +
              (C18610 * C514 - C18612 * C498 + C18611 * C2014 -
               C18613 * C2003) *
                  C30736) *
                 C13128 +
             ((C18979 - C18980 + C18981 - C18982) * C114 +
              (C18983 - C18984 + C18985 - C18986) * C30736) *
                 C13129) *
                C3770) *
               C2500 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30654 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30661 +
            (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
               C18611 * C2393) *
                  C114 +
              (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
               C18611 * C2399) *
                  C30736) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C114 +
              (C20905 - C20906 + C20907 - C20908) * C30736) *
                 C13129) *
                C3770) *
               C30616) *
              C30791 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30654 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30661 +
            (((C18980 - C18979 + C18982 - C18981) * C114 +
              (C18984 - C18983 + C18986 - C18985) * C30736) *
                 C13128 +
             ((C18995 - C18996 + C18997 - C18998) * C114 +
              (C18999 - C19000 + C19001 - C19002) * C30736) *
                 C13129) *
                C3770) *
               C2500 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30654 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30661 +
            (((C20902 - C20901 + C20904 - C20903) * C114 +
              (C20906 - C20905 + C20908 - C20907) * C30736) *
                 C13128 +
             ((C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
               C18613 * C2392) *
                  C114 +
              (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
               C18613 * C2398) *
                  C30736) *
                 C13129) *
                C3770) *
               C30616) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30870 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30857 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C3262 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C2500 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C3262 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30880 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C3262 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30658) *
              C30876 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C30658) *
              C30866 +
          ((((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C3262 +
           (((C18610 * C1697 - C18612 * C1694 + C18611 * C5621 -
              C18613 * C5618) *
                 C114 +
             (C18610 * C1703 - C18612 * C1698 + C18611 * C5627 -
              C18613 * C5622) *
                 C30736) *
                C13128 +
            ((C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C114 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C30736) *
                C13129) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1420 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1421 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C1422 +
           (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30571 * C30846) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1420 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1421 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C1422 +
           (((C19994 - C19993 + C19996 - C19995) * C114 +
             (C19998 - C19997 + C20000 - C19999) * C30736) *
                C13128 +
            ((C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
              C18613 * C1696) *
                 C114 +
             (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
              C18613 * C1702) *
                 C30736) *
                C13129) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30616) *
              C655 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30616) *
              C656 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C30616) *
              C657 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C19134 - C19133 + C19136 - C19135) * C114 +
             (C19138 - C19137 + C19140 - C19139) * C30736) *
                C13128 +
            ((C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
                 C114 +
             (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
                 C30736) *
                C13129) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C1816 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C1817 +
            (((C18610 * C497 - C18612 * C484 + C18611 * C2002 -
               C18613 * C1996) *
                  C114 +
              (C18610 * C514 - C18612 * C498 + C18611 * C2014 -
               C18613 * C2003) *
                  C30736) *
                 C13128 +
             ((C18979 - C18980 + C18981 - C18982) * C114 +
              (C18983 - C18984 + C18985 - C18986) * C30736) *
                 C13129) *
                C30839) *
               C30805 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C1816 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C1817 +
            (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
               C18611 * C2393) *
                  C114 +
              (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
               C18611 * C2399) *
                  C30736) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C114 +
              (C20905 - C20906 + C20907 - C20908) * C30736) *
                 C13129) *
                C30839) *
               C30616) *
              C30791 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C1816 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C1817 +
            (((C18980 - C18979 + C18982 - C18981) * C114 +
              (C18984 - C18983 + C18986 - C18985) * C30736) *
                 C13128 +
             ((C18995 - C18996 + C18997 - C18998) * C114 +
              (C18999 - C19000 + C19001 - C19002) * C30736) *
                 C13129) *
                C30839) *
               C30805 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C1816 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C1817 +
            (((C20902 - C20901 + C20904 - C20903) * C114 +
              (C20906 - C20905 + C20908 - C20907) * C30736) *
                 C13128 +
             ((C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
               C18613 * C2392) *
                  C114 +
              (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
               C18613 * C2398) *
                  C30736) *
                 C13129) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C1420 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30806 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30658) *
              C1421 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C30658) *
              C1422 +
          ((((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30806 +
           (((C18610 * C1697 - C18612 * C1694 + C18611 * C5621 -
              C18613 * C5618) *
                 C114 +
             (C18610 * C1703 - C18612 * C1698 + C18611 * C5627 -
              C18613 * C5622) *
                 C30736) *
                C13128 +
            ((C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C114 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C30736) *
                C13129) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C291 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C292 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C30806 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C30806 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C2276 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C2277 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C2278 +
           (((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
              C18611 * C2008) *
                 C114 +
             (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
              C18611 * C2017) *
                 C30736) *
                C13128 +
            ((C21039 - C21040 + C21041 - C21042) * C114 +
             (C21043 - C21044 + C21045 - C21046) * C30736) *
                C13129) *
               C30852) *
              C30805 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C2276 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C2277 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C20901 - C20902 + C20903 - C20904) * C114 +
             (C20905 - C20906 + C20907 - C20908) * C30736) *
                C13129) *
               C2278 +
           (((C18610 * C2393 - C18612 * C2390 + C18611 * C6309 -
              C18613 * C6305) *
                 C114 +
             (C18610 * C2399 - C18612 * C2394 + C18611 * C6314 -
              C18613 * C6310) *
                 C30736) *
                C13128 +
            ((C18610 * C2395 - C18612 * C2391 + C18611 * C10605 -
              C18613 * C10604) *
                 C114 +
             (C18610 * C2400 - C18612 * C2396 + C18611 * C10607 -
              C18613 * C10606) *
                 C30736) *
                C13129) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18610 * C122 - C18612 * C115 + C18611 * C491 -
                 C18613 * C481) *
                    C114 +
                (C18610 * C136 - C18612 * C123 + C18611 * C511 -
                 C18613 * C492) *
                    C30736) *
                   C13128 +
               ((C18615 - C18616 + C18617 - C18618) * C114 +
                (C18619 - C18620 + C18621 - C18622) * C30736) *
                   C13129) *
                  C30571 * C30553 * C108 +
              (((C18616 - C18615 + C18618 - C18617) * C114 +
                (C18620 - C18619 + C18622 - C18621) * C30736) *
                   C13128 +
               ((C18623 - C18624 + C18625 - C18626) * C114 +
                (C18627 - C18628 + C18629 - C18630) * C30736) *
                   C13129) *
                  C30571 * C30553 * C109 +
              (((C18624 - C18623 + C18626 - C18625) * C114 +
                (C18628 - C18627 + C18630 - C18629) * C30736) *
                   C13128 +
               ((C18631 - C18632 + C18633 - C18634) * C114 +
                (C18635 - C18636 + C18637 - C18638) * C30736) *
                   C13129) *
                  C30571 * C30553 * C110 +
              (((C18632 - C18631 + C18634 - C18633) * C114 +
                (C18636 - C18635 + C18638 - C18637) * C30736) *
                   C13128 +
               ((C18639 - C18640 + C18641 - C18642) * C114 +
                (C18643 - C18644 + C18645 - C18646) * C30736) *
                   C13129) *
                  C30571 * C30553 * C111 +
              (((C18640 - C18639 + C18642 - C18641) * C114 +
                (C18644 - C18643 + C18646 - C18645) * C30736) *
                   C13128 +
               ((C18610 * C132 - C18612 * C120 + C18611 * C773 -
                 C18613 * C772) *
                    C114 +
                (C18610 * C141 - C18612 * C133 + C18611 * C775 -
                 C18613 * C774) *
                    C30736) *
                   C13129) *
                  C30571 * C30553 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C18610 * C122 - C18612 * C115 + C18611 * C491 -
                  C18613 * C481) *
                     C114 +
                 (C18610 * C136 - C18612 * C123 + C18611 * C511 -
                  C18613 * C492) *
                     C30736) *
                    C13128 +
                ((C18615 - C18616 + C18617 - C18618) * C114 +
                 (C18619 - C18620 + C18621 - C18622) * C30736) *
                    C13129) *
                   C30571 * C30873 +
               (((C18612 * C294 - C18610 * C304 + C18613 * C931 -
                  C18611 * C936) *
                     C114 +
                 (C18612 * C305 - C18610 * C324 + C18613 * C937 -
                  C18611 * C946) *
                     C30736) *
                    C13128 +
                ((C18793 - C18794 + C18795 - C18796) * C114 +
                 (C18797 - C18798 + C18799 - C18800) * C30736) *
                    C13129) *
                   C30571 * C30861 +
               (((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
                  C18613 * C1289) *
                     C114 +
                 (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
                  C18613 * C1302) *
                     C30736) *
                    C13128 +
                ((C18801 - C18802 + C18803 - C18804) * C114 +
                 (C18805 - C18806 + C18807 - C18808) * C30736) *
                    C13129) *
                   C30571 * C30836) *
                  C291 +
              ((((C18616 - C18615 + C18618 - C18617) * C114 +
                 (C18620 - C18619 + C18622 - C18621) * C30736) *
                    C13128 +
                ((C18623 - C18624 + C18625 - C18626) * C114 +
                 (C18627 - C18628 + C18629 - C18630) * C30736) *
                    C13129) *
                   C30571 * C30873 +
               (((C18794 - C18793 + C18796 - C18795) * C114 +
                 (C18798 - C18797 + C18800 - C18799) * C30736) *
                    C13128 +
                ((C18809 - C18810 + C18811 - C18812) * C114 +
                 (C18813 - C18814 + C18815 - C18816) * C30736) *
                    C13129) *
                   C30571 * C30861 +
               (((C18802 - C18801 + C18804 - C18803) * C114 +
                 (C18806 - C18805 + C18808 - C18807) * C30736) *
                    C13128 +
                ((C18817 - C18818 + C18819 - C18820) * C114 +
                 (C18821 - C18822 + C18823 - C18824) * C30736) *
                    C13129) *
                   C30571 * C30836) *
                  C292 +
              ((((C18624 - C18623 + C18626 - C18625) * C114 +
                 (C18628 - C18627 + C18630 - C18629) * C30736) *
                    C13128 +
                ((C18631 - C18632 + C18633 - C18634) * C114 +
                 (C18635 - C18636 + C18637 - C18638) * C30736) *
                    C13129) *
                   C30571 * C30873 +
               (((C18810 - C18809 + C18812 - C18811) * C114 +
                 (C18814 - C18813 + C18816 - C18815) * C30736) *
                    C13128 +
                ((C18612 * C300 - C18610 * C316 + C18613 * C934 -
                  C18611 * C942) *
                     C114 +
                 (C18612 * C317 - C18610 * C330 + C18613 * C943 -
                  C18611 * C949) *
                     C30736) *
                    C13129) *
                   C30571 * C30861 +
               (((C18818 - C18817 + C18820 - C18819) * C114 +
                 (C18822 - C18821 + C18824 - C18823) * C30736) *
                    C13128 +
                ((C18610 * C318 - C18612 * C301 + C18611 * C1585 -
                  C18613 * C1584) *
                     C114 +
                 (C18610 * C331 - C18612 * C319 + C18611 * C1587 -
                  C18613 * C1586) *
                     C30736) *
                    C13129) *
                   C30571 * C30836) *
                  C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30863 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30553 * C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30874 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30863 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C30839) *
              C30553 * C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30874 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C18612 * C487 - C18610 * C503 + C18613 * C488 - C18611 * C505) *
                 C114 +
             (C18612 * C504 - C18610 * C517 + C18613 * C506 - C18611 * C518) *
                 C30736) *
                C13129) *
               C30863 +
           (((C18996 - C18995 + C18998 - C18997) * C114 +
             (C19000 - C18999 + C19002 - C19001) * C30736) *
                C13128 +
            ((C18610 * C505 - C18612 * C488 + C18611 * C2281 - C18613 * C2280) *
                 C114 +
             (C18610 * C518 - C18612 * C506 + C18611 * C2283 - C18613 * C2282) *
                 C30736) *
                C13129) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C1146 +
          (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                C114 +
            (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                C30736) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C114 +
            (C18797 - C18798 + C18799 - C18800) * C30736) *
               C13129) *
              C30571 * C1147 +
          (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                C114 +
            (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                C30736) *
               C13128 +
           ((C18801 - C18802 + C18803 - C18804) * C114 +
            (C18805 - C18806 + C18807 - C18808) * C30736) *
               C13129) *
              C30571 * C1148 +
          (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
             C18611 * C1697) *
                C114 +
            (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
             C18611 * C1703) *
                C30736) *
               C13128 +
           ((C18612 * C1153 - C18610 * C1160 + C18613 * C1695 -
             C18611 * C1699) *
                C114 +
            (C18612 * C1161 - C18610 * C1171 + C18613 * C1700 -
             C18611 * C1704) *
                C30736) *
               C13129) *
              C30571 * C1149 +
          (((C18610 * C1164 - C18612 * C1155 + C18611 * C5623 -
             C18613 * C5619) *
                C114 +
            (C18610 * C1173 - C18612 * C1165 + C18611 * C5628 -
             C18613 * C5624) *
                C30736) *
               C13128 +
           ((C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C114 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C30736) *
               C13129) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30863 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C1078 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30874 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30863 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C18612 * C1287 - C18610 * C1297 + C18613 * C2391 -
              C18611 * C2395) *
                 C114 +
             (C18612 * C1298 - C18610 * C1314 + C18613 * C2396 -
              C18611 * C2400) *
                 C30736) *
                C13129) *
               C30839) *
              C1079 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C18612 * C1290 - C18610 * C1303 + C18613 * C1293 -
              C18611 * C1309) *
                 C114 +
             (C18612 * C1304 - C18610 * C1317 + C18613 * C1310 -
              C18611 * C1320) *
                 C30736) *
                C13129) *
               C30863 +
           (((C18610 * C1307 - C18612 * C1292 + C18611 * C6307 -
              C18613 * C6304) *
                 C114 +
             (C18610 * C1319 - C18612 * C1308 + C18611 * C6313 -
              C18613 * C6308) *
                 C30736) *
                C13128 +
            ((C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C114 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C30736) *
                C13129) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30553 * C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C1816 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C1817 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C30839) *
              C30553 * C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C1816 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C1817 +
           (((C18996 - C18995 + C18998 - C18997) * C114 +
             (C19000 - C18999 + C19002 - C19001) * C30736) *
                C13128 +
            ((C18610 * C505 - C18612 * C488 + C18611 * C2281 - C18613 * C2280) *
                 C114 +
             (C18610 * C518 - C18612 * C506 + C18611 * C2283 - C18613 * C2282) *
                 C30736) *
                C13129) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30873 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C1816 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C1817 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C18612 * C1287 - C18610 * C1297 + C18613 * C2391 -
              C18611 * C2395) *
                 C114 +
             (C18612 * C1298 - C18610 * C1314 + C18613 * C2396 -
              C18611 * C2400) *
                 C30736) *
                C13129) *
               C30839) *
              C30861 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C1307 - C18612 * C1292 + C18611 * C6307 -
              C18613 * C6304) *
                 C114 +
             (C18610 * C1319 - C18612 * C1308 + C18611 * C6313 -
              C18613 * C6308) *
                 C30736) *
                C13128 +
            ((C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C114 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C30736) *
                C13129) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C1991 +
          (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                C114 +
            (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                C30736) *
               C13128 +
           ((C18971 - C18972 + C18973 - C18974) * C114 +
            (C18975 - C18976 + C18977 - C18978) * C30736) *
               C13129) *
              C1992 +
          (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                C114 +
            (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                C30736) *
               C13128 +
           ((C18979 - C18980 + C18981 - C18982) * C114 +
            (C18983 - C18984 + C18985 - C18986) * C30736) *
               C13129) *
              C1993 +
          (((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
             C18611 * C2008) *
                C114 +
            (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
             C18611 * C2017) *
                C30736) *
               C13128 +
           ((C18612 * C1997 - C18610 * C2004 + C18613 * C2000 -
             C18611 * C2010) *
                C114 +
            (C18612 * C2005 - C18610 * C2015 + C18613 * C2011 -
             C18611 * C2018) *
                C30736) *
               C13129) *
              C1994 +
          (((C18610 * C2008 - C18612 * C1999 + C18611 * C10452 -
             C18613 * C10450) *
                C114 +
            (C18610 * C2017 - C18612 * C2009 + C18611 * C10456 -
             C18613 * C10453) *
                C30736) *
               C13128 +
           ((C18610 * C2010 - C18612 * C2000 + C18611 * C10707 -
             C18613 * C10706) *
                C114 +
            (C18610 * C2018 - C18612 * C2011 + C18611 * C10709 -
             C18613 * C10708) *
                C30736) *
               C13129) *
              C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C1078 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C1079 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30791 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C1078 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C1079 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C30806 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30553 * C655 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30806 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30658) *
              C30553 * C656 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30806 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C30658) *
              C30553 * C657 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30806 +
           (((C19272 - C19271 + C19274 - C19273) * C114 +
             (C19276 - C19275 + C19278 - C19277) * C30736) *
                C13128 +
            ((C18610 * C507 - C18612 * C489 + C18611 * C509 - C18613 * C490) *
                 C114 +
             (C18610 * C519 - C18612 * C508 + C18611 * C520 - C18613 * C510) *
                 C30736) *
                C13129) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C2276 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C2277 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C2278 +
           (((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
              C18611 * C2008) *
                 C114 +
             (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
              C18611 * C2017) *
                 C30736) *
                C13128 +
            ((C21039 - C21040 + C21041 - C21042) * C114 +
             (C21043 - C21044 + C21045 - C21046) * C30736) *
                C13129) *
               C30852) *
              C30553 * C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C2276 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C2277 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C2278 +
           (((C21040 - C21039 + C21042 - C21041) * C114 +
             (C21044 - C21043 + C21046 - C21045) * C30736) *
                C13128 +
            ((C18610 * C2006 - C18612 * C1998 + C18611 * C2012 -
              C18613 * C2001) *
                 C114 +
             (C18610 * C2016 - C18612 * C2007 + C18611 * C2019 -
              C18613 * C2013) *
                 C30736) *
                C13129) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C18612 * C300 - C18610 * C316 + C18613 * C934 - C18611 * C942) *
                 C114 +
             (C18612 * C317 - C18610 * C330 + C18613 * C943 - C18611 * C949) *
                 C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C30553 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C114 +
            (C18620 - C18619 + C18622 - C18621) * C30736) *
               C13128 +
           ((C18623 - C18624 + C18625 - C18626) * C114 +
            (C18627 - C18628 + C18629 - C18630) * C30736) *
               C13129) *
              C30571 * C30553 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C114 +
            (C18628 - C18627 + C18630 - C18629) * C30736) *
               C13128 +
           ((C18631 - C18632 + C18633 - C18634) * C114 +
            (C18635 - C18636 + C18637 - C18638) * C30736) *
               C13129) *
              C30571 * C30553 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C114 +
            (C18636 - C18635 + C18638 - C18637) * C30736) *
               C13128 +
           ((C18639 - C18640 + C18641 - C18642) * C114 +
            (C18643 - C18644 + C18645 - C18646) * C30736) *
               C13129) *
              C30571 * C30553 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C114 +
            (C18644 - C18643 + C18646 - C18645) * C30736) *
               C13128 +
           ((C18610 * C132 - C18612 * C120 + C18611 * C773 - C18613 * C772) *
                C114 +
            (C18610 * C141 - C18612 * C133 + C18611 * C775 - C18613 * C774) *
                C30736) *
               C13129) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C1146 +
          (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                C114 +
            (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                C30736) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C114 +
            (C18797 - C18798 + C18799 - C18800) * C30736) *
               C13129) *
              C30571 * C1147 +
          (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                C114 +
            (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                C30736) *
               C13128 +
           ((C18801 - C18802 + C18803 - C18804) * C114 +
            (C18805 - C18806 + C18807 - C18808) * C30736) *
               C13129) *
              C30571 * C1148 +
          (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
             C18611 * C1697) *
                C114 +
            (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
             C18611 * C1703) *
                C30736) *
               C13128 +
           ((C18612 * C1153 - C18610 * C1160 + C18613 * C1695 -
             C18611 * C1699) *
                C114 +
            (C18612 * C1161 - C18610 * C1171 + C18613 * C1700 -
             C18611 * C1704) *
                C30736) *
               C13129) *
              C30571 * C1149 +
          (((C18610 * C1164 - C18612 * C1155 + C18611 * C5623 -
             C18613 * C5619) *
                C114 +
            (C18610 * C1173 - C18612 * C1165 + C18611 * C5628 -
             C18613 * C5624) *
                C30736) *
               C13128 +
           ((C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C114 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C30736) *
               C13129) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30553 * C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C1816 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C1817 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C30839) *
              C30553 * C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C1816 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C1817 +
           (((C18996 - C18995 + C18998 - C18997) * C114 +
             (C19000 - C18999 + C19002 - C19001) * C30736) *
                C13128 +
            ((C18610 * C505 - C18612 * C488 + C18611 * C2281 - C18613 * C2280) *
                 C114 +
             (C18610 * C518 - C18612 * C506 + C18611 * C2283 - C18613 * C2282) *
                 C30736) *
                C13129) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30873 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C1816 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C1817 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C18612 * C1287 - C18610 * C1297 + C18613 * C2391 -
              C18611 * C2395) *
                 C114 +
             (C18612 * C1298 - C18610 * C1314 + C18613 * C2396 -
              C18611 * C2400) *
                 C30736) *
                C13129) *
               C30839) *
              C30861 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C1816 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C1817 +
           (((C18610 * C1307 - C18612 * C1292 + C18611 * C6307 -
              C18613 * C6304) *
                 C114 +
             (C18610 * C1319 - C18612 * C1308 + C18611 * C6313 -
              C18613 * C6308) *
                 C30736) *
                C13128 +
            ((C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C114 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C30736) *
                C13129) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30530 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30539 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C3262 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C3262 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30654 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30661 +
            (((C18610 * C497 - C18612 * C484 + C18611 * C2002 -
               C18613 * C1996) *
                  C114 +
              (C18610 * C514 - C18612 * C498 + C18611 * C2014 -
               C18613 * C2003) *
                  C30736) *
                 C13128 +
             ((C18979 - C18980 + C18981 - C18982) * C114 +
              (C18983 - C18984 + C18985 - C18986) * C30736) *
                 C13129) *
                C3770) *
               C30805 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30654 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30661 +
            (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
               C18611 * C2393) *
                  C114 +
              (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
               C18611 * C2399) *
                  C30736) *
                 C13128 +
             ((C20901 - C20902 + C20903 - C20904) * C114 +
              (C20905 - C20906 + C20907 - C20908) * C30736) *
                 C13129) *
                C3770) *
               C30616) *
              C2608 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30654 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30661 +
            (((C18980 - C18979 + C18982 - C18981) * C114 +
              (C18984 - C18983 + C18986 - C18985) * C30736) *
                 C13128 +
             ((C18995 - C18996 + C18997 - C18998) * C114 +
              (C18999 - C19000 + C19001 - C19002) * C30736) *
                 C13129) *
                C3770) *
               C30805 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30654 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30661 +
            (((C20902 - C20901 + C20904 - C20903) * C114 +
              (C20906 - C20905 + C20908 - C20907) * C30736) *
                 C13128 +
             ((C18610 * C1299 - C18612 * C1288 + C18611 * C2397 -
               C18613 * C2392) *
                  C114 +
              (C18610 * C1315 - C18612 * C1300 + C18611 * C2401 -
               C18613 * C2398) *
                  C30736) *
                 C13129) *
                C3770) *
               C30616) *
              C30536)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30873 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30861 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C2608 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30873 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30861 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C3262 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30879 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C3262 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30872 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C3262 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30859 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C3262 +
           (((C19272 - C19271 + C19274 - C19273) * C114 +
             (C19276 - C19275 + C19278 - C19277) * C30736) *
                C13128 +
            ((C18610 * C507 - C18612 * C489 + C18611 * C509 - C18613 * C490) *
                 C114 +
             (C18610 * C519 - C18612 * C508 + C18611 * C520 - C18613 * C510) *
                 C30736) *
                C13129) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30881 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30878 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30869 +
           (((C18612 * C1996 - C18610 * C2002 + C18613 * C1999 -
              C18611 * C2008) *
                 C114 +
             (C18612 * C2003 - C18610 * C2014 + C18613 * C2009 -
              C18611 * C2017) *
                 C30736) *
                C13128 +
            ((C21039 - C21040 + C21041 - C21042) * C114 +
             (C21043 - C21044 + C21045 - C21046) * C30736) *
                C13129) *
               C30852) *
              C30553 * C2608 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30881 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30878 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C30869 +
           (((C21040 - C21039 + C21042 - C21041) * C114 +
             (C21044 - C21043 + C21046 - C21045) * C30736) *
                C13128 +
            ((C18610 * C2006 - C18612 * C1998 + C18611 * C2012 -
              C18613 * C2001) *
                 C114 +
             (C18610 * C2016 - C18612 * C2007 + C18611 * C2019 -
              C18613 * C2013) *
                 C30736) *
                C13129) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30654 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30661 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C3770) *
              C30553 * C30530 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30654 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30661 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C3770) *
              C30553 * C30539 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30654 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C30661 +
           (((C18996 - C18995 + C18998 - C18997) * C114 +
             (C19000 - C18999 + C19002 - C19001) * C30736) *
                C13128 +
            ((C18610 * C505 - C18612 * C488 + C18611 * C2281 - C18613 * C2280) *
                 C114 +
             (C18610 * C518 - C18612 * C506 + C18611 * C2283 - C18613 * C2282) *
                 C30736) *
                C13129) *
               C3770) *
              C30553 * C2871)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C3262 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30879 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C3262 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30872 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C3262 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C30658) *
              C30553 * C30859 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C3262 +
           (((C19272 - C19271 + C19274 - C19273) * C114 +
             (C19276 - C19275 + C19278 - C19277) * C30736) *
                C13128 +
            ((C18610 * C507 - C18612 * C489 + C18611 * C509 - C18613 * C490) *
                 C114 +
             (C18610 * C519 - C18612 * C508 + C18611 * C520 - C18613 * C510) *
                 C30736) *
                C13129) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30873 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C3262 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30861 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C3262 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C2608 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C3262 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30873 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C3262 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30861 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C3262 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30616) *
              C655 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30616) *
              C656 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C30616) *
              C657 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30571 * C30805 +
           (((C19134 - C19133 + C19136 - C19135) * C114 +
             (C19138 - C19137 + C19140 - C19139) * C30736) *
                C13128 +
            ((C18610 * C320 - C18612 * C302 + C18611 * C944 - C18613 * C935) *
                 C114 +
             (C18610 * C332 - C18612 * C321 + C18611 * C950 - C18613 * C945) *
                 C30736) *
                C13129) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1420 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1421 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C1422 +
           (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30571 * C30846) *
              C30791 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1420 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1421 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C1422 +
           (((C19994 - C19993 + C19996 - C19995) * C114 +
             (C19998 - C19997 + C20000 - C19999) * C30736) *
                C13128 +
            ((C18610 * C1162 - C18612 * C1154 + C18611 * C1701 -
              C18613 * C1696) *
                 C114 +
             (C18610 * C1172 - C18612 * C1163 + C18611 * C1705 -
              C18613 * C1702) *
                 C30736) *
                C13129) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C291 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C292 +
          (((((C18624 - C18623 + C18626 - C18625) * C114 +
              (C18628 - C18627 + C18630 - C18629) * C30736) *
                 C13128 +
             ((C18631 - C18632 + C18633 - C18634) * C114 +
              (C18635 - C18636 + C18637 - C18638) * C30736) *
                 C13129) *
                C30806 +
            (((C18988 - C18987 + C18990 - C18989) * C114 +
              (C18992 - C18991 + C18994 - C18993) * C30736) *
                 C13128 +
             ((C19271 - C19272 + C19273 - C19274) * C114 +
              (C19275 - C19276 + C19277 - C19278) * C30736) *
                 C13129) *
                C30658) *
               C30805 +
           ((((C18810 - C18809 + C18812 - C18811) * C114 +
              (C18814 - C18813 + C18816 - C18815) * C30736) *
                 C13128 +
             ((C19133 - C19134 + C19135 - C19136) * C114 +
              (C19137 - C19138 + C19139 - C19140) * C30736) *
                 C13129) *
                C30806 +
            (((C19482 - C19481 + C19484 - C19483) * C114 +
              (C19486 - C19485 + C19488 - C19487) * C30736) *
                 C13128 +
             ((C18610 * C942 - C18612 * C934 + C18611 * C2167 -
               C18613 * C2166) *
                  C114 +
              (C18610 * C949 - C18612 * C943 + C18611 * C2169 -
               C18613 * C2168) *
                  C30736) *
                 C13129) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C1420 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30806 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30658) *
              C1421 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C20195 - C20196 + C20197 - C20198) * C114 +
             (C20199 - C20200 + C20201 - C20202) * C30736) *
                C13129) *
               C30658) *
              C1422 +
          ((((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
              C18611 * C1697) *
                 C114 +
             (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
              C18611 * C1703) *
                 C30736) *
                C13128 +
            ((C19993 - C19994 + C19995 - C19996) * C114 +
             (C19997 - C19998 + C19999 - C20000) * C30736) *
                C13129) *
               C30806 +
           (((C18610 * C1697 - C18612 * C1694 + C18611 * C5621 -
              C18613 * C5618) *
                 C114 +
             (C18610 * C1703 - C18612 * C1698 + C18611 * C5627 -
              C18613 * C5622) *
                 C30736) *
                C13128 +
            ((C18610 * C1699 - C18612 * C1695 + C18611 * C6463 -
              C18613 * C6462) *
                 C114 +
             (C18610 * C1704 - C18612 * C1700 + C18611 * C6465 -
              C18613 * C6464) *
                 C30736) *
                C13129) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C18612 * C300 - C18610 * C316 + C18613 * C934 - C18611 * C942) *
                 C114 +
             (C18612 * C317 - C18610 * C330 + C18613 * C943 - C18611 * C949) *
                 C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C30553 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C114 +
            (C18620 - C18619 + C18622 - C18621) * C30736) *
               C13128 +
           ((C18623 - C18624 + C18625 - C18626) * C114 +
            (C18627 - C18628 + C18629 - C18630) * C30736) *
               C13129) *
              C30571 * C30553 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C114 +
            (C18628 - C18627 + C18630 - C18629) * C30736) *
               C13128 +
           ((C18631 - C18632 + C18633 - C18634) * C114 +
            (C18635 - C18636 + C18637 - C18638) * C30736) *
               C13129) *
              C30571 * C30553 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C114 +
            (C18636 - C18635 + C18638 - C18637) * C30736) *
               C13128 +
           ((C18639 - C18640 + C18641 - C18642) * C114 +
            (C18643 - C18644 + C18645 - C18646) * C30736) *
               C13129) *
              C30571 * C30553 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C114 +
            (C18644 - C18643 + C18646 - C18645) * C30736) *
               C13128 +
           ((C18610 * C132 - C18612 * C120 + C18611 * C773 - C18613 * C772) *
                C114 +
            (C18610 * C141 - C18612 * C133 + C18611 * C775 - C18613 * C774) *
                C30736) *
               C13129) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30863 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C30553 * C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30874 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30863 +
           (((C18980 - C18979 + C18982 - C18981) * C114 +
             (C18984 - C18983 + C18986 - C18985) * C30736) *
                C13128 +
            ((C18995 - C18996 + C18997 - C18998) * C114 +
             (C18999 - C19000 + C19001 - C19002) * C30736) *
                C13129) *
               C30839) *
              C30553 * C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30874 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C18612 * C487 - C18610 * C503 + C18613 * C488 - C18611 * C505) *
                 C114 +
             (C18612 * C504 - C18610 * C517 + C18613 * C506 - C18611 * C518) *
                 C30736) *
                C13129) *
               C30863 +
           (((C18996 - C18995 + C18998 - C18997) * C114 +
             (C19000 - C18999 + C19002 - C19001) * C30736) *
                C13128 +
            ((C18610 * C505 - C18612 * C488 + C18611 * C2281 - C18613 * C2280) *
                 C114 +
             (C18610 * C518 - C18612 * C506 + C18611 * C2283 - C18613 * C2282) *
                 C30736) *
                C13129) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C1146 +
          (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                C114 +
            (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                C30736) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C114 +
            (C18797 - C18798 + C18799 - C18800) * C30736) *
               C13129) *
              C30571 * C1147 +
          (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                C114 +
            (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                C30736) *
               C13128 +
           ((C18801 - C18802 + C18803 - C18804) * C114 +
            (C18805 - C18806 + C18807 - C18808) * C30736) *
               C13129) *
              C30571 * C1148 +
          (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
             C18611 * C1697) *
                C114 +
            (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
             C18611 * C1703) *
                C30736) *
               C13128 +
           ((C18612 * C1153 - C18610 * C1160 + C18613 * C1695 -
             C18611 * C1699) *
                C114 +
            (C18612 * C1161 - C18610 * C1171 + C18613 * C1700 -
             C18611 * C1704) *
                C30736) *
               C13129) *
              C30571 * C1149 +
          (((C18610 * C1164 - C18612 * C1155 + C18611 * C5623 -
             C18613 * C5619) *
                C114 +
            (C18610 * C1173 - C18612 * C1165 + C18611 * C5628 -
             C18613 * C5624) *
                C30736) *
               C13128 +
           ((C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C114 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C30736) *
               C13129) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30863 +
           (((C18610 * C497 - C18612 * C484 + C18611 * C2002 - C18613 * C1996) *
                 C114 +
             (C18610 * C514 - C18612 * C498 + C18611 * C2014 - C18613 * C2003) *
                 C30736) *
                C13128 +
            ((C18979 - C18980 + C18981 - C18982) * C114 +
             (C18983 - C18984 + C18985 - C18986) * C30736) *
                C13129) *
               C30839) *
              C1078 +
          ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30874 +
           (((C18610 * C936 - C18612 * C931 + C18611 * C1295 - C18613 * C1286) *
                 C114 +
             (C18610 * C946 - C18612 * C937 + C18611 * C1313 - C18613 * C1296) *
                 C30736) *
                C13128 +
            ((C19473 - C19474 + C19475 - C19476) * C114 +
             (C19477 - C19478 + C19479 - C19480) * C30736) *
                C13129) *
               C30863 +
           (((C18612 * C1286 - C18610 * C1295 + C18613 * C2390 -
              C18611 * C2393) *
                 C114 +
             (C18612 * C1296 - C18610 * C1313 + C18613 * C2394 -
              C18611 * C2399) *
                 C30736) *
                C13128 +
            ((C18612 * C1287 - C18610 * C1297 + C18613 * C2391 -
              C18611 * C2395) *
                 C114 +
             (C18612 * C1298 - C18610 * C1314 + C18613 * C2396 -
              C18611 * C2400) *
                 C30736) *
                C13129) *
               C30839) *
              C1079 +
          ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30874 +
           (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
              C18611 * C1307) *
                 C114 +
             (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
              C18611 * C1319) *
                 C30736) *
                C13128 +
            ((C18612 * C1290 - C18610 * C1303 + C18613 * C1293 -
              C18611 * C1309) *
                 C114 +
             (C18612 * C1304 - C18610 * C1317 + C18613 * C1310 -
              C18611 * C1320) *
                 C30736) *
                C13129) *
               C30863 +
           (((C18610 * C1307 - C18612 * C1292 + C18611 * C6307 -
              C18613 * C6304) *
                 C114 +
             (C18610 * C1319 - C18612 * C1308 + C18611 * C6313 -
              C18613 * C6308) *
                 C30736) *
                C13128 +
            ((C18610 * C1309 - C18612 * C1293 + C18611 * C6569 -
              C18613 * C6568) *
                 C114 +
             (C18610 * C1320 - C18612 * C1310 + C18611 * C6571 -
              C18613 * C6570) *
                 C30736) *
                C13129) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30806 +
           (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                 C114 +
             (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                 C30736) *
                C13128 +
            ((C18971 - C18972 + C18973 - C18974) * C114 +
             (C18975 - C18976 + C18977 - C18978) * C30736) *
                C13129) *
               C30658) *
              C30553 * C655 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30806 +
           (((C18972 - C18971 + C18974 - C18973) * C114 +
             (C18976 - C18975 + C18978 - C18977) * C30736) *
                C13128 +
            ((C18987 - C18988 + C18989 - C18990) * C114 +
             (C18991 - C18992 + C18993 - C18994) * C30736) *
                C13129) *
               C30658) *
              C30553 * C656 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30806 +
           (((C18988 - C18987 + C18990 - C18989) * C114 +
             (C18992 - C18991 + C18994 - C18993) * C30736) *
                C13128 +
            ((C19271 - C19272 + C19273 - C19274) * C114 +
             (C19275 - C19276 + C19277 - C19278) * C30736) *
                C13129) *
               C30658) *
              C30553 * C657 +
          ((((C18632 - C18631 + C18634 - C18633) * C114 +
             (C18636 - C18635 + C18638 - C18637) * C30736) *
                C13128 +
            ((C18639 - C18640 + C18641 - C18642) * C114 +
             (C18643 - C18644 + C18645 - C18646) * C30736) *
                C13129) *
               C30806 +
           (((C19272 - C19271 + C19274 - C19273) * C114 +
             (C19276 - C19275 + C19278 - C19277) * C30736) *
                C13128 +
            ((C18610 * C507 - C18612 * C489 + C18611 * C509 - C18613 * C490) *
                 C114 +
             (C18610 * C519 - C18612 * C508 + C18611 * C520 - C18613 * C510) *
                 C30736) *
                C13129) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                  C114 +
              (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                  C30736) *
                 C13128 +
             ((C18615 - C18616 + C18617 - C18618) * C114 +
              (C18619 - C18620 + C18621 - C18622) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C481 - C18610 * C491 + C18613 * C484 - C18611 * C497) *
                  C114 +
              (C18612 * C492 - C18610 * C511 + C18613 * C498 - C18611 * C514) *
                  C30736) *
                 C13128 +
             ((C18971 - C18972 + C18973 - C18974) * C114 +
              (C18975 - C18976 + C18977 - C18978) * C30736) *
                 C13129) *
                C30658) *
               C1078 +
           ((((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                  C114 +
              (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                  C30736) *
                 C13128 +
             ((C18793 - C18794 + C18795 - C18796) * C114 +
              (C18797 - C18798 + C18799 - C18800) * C30736) *
                 C13129) *
                C30806 +
            (((C18610 * C936 - C18612 * C931 + C18611 * C1295 -
               C18613 * C1286) *
                  C114 +
              (C18610 * C946 - C18612 * C937 + C18611 * C1313 -
               C18613 * C1296) *
                  C30736) *
                 C13128 +
             ((C19473 - C19474 + C19475 - C19476) * C114 +
              (C19477 - C19478 + C19479 - C19480) * C30736) *
                 C13129) *
                C30658) *
               C1079 +
           ((((C18610 * C310 - C18612 * C297 + C18611 * C1301 -
               C18613 * C1289) *
                  C114 +
              (C18610 * C327 - C18612 * C311 + C18611 * C1316 -
               C18613 * C1302) *
                  C30736) *
                 C13128 +
             ((C18801 - C18802 + C18803 - C18804) * C114 +
              (C18805 - C18806 + C18807 - C18808) * C30736) *
                 C13129) *
                C30806 +
            (((C18612 * C1289 - C18610 * C1301 + C18613 * C1292 -
               C18611 * C1307) *
                  C114 +
              (C18612 * C1302 - C18610 * C1316 + C18613 * C1308 -
               C18611 * C1319) *
                  C30736) *
                 C13128 +
             ((C20195 - C20196 + C20197 - C20198) * C114 +
              (C20199 - C20200 + C20201 - C20202) * C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30791 +
          (((((C18616 - C18615 + C18618 - C18617) * C114 +
              (C18620 - C18619 + C18622 - C18621) * C30736) *
                 C13128 +
             ((C18623 - C18624 + C18625 - C18626) * C114 +
              (C18627 - C18628 + C18629 - C18630) * C30736) *
                 C13129) *
                C30806 +
            (((C18972 - C18971 + C18974 - C18973) * C114 +
              (C18976 - C18975 + C18978 - C18977) * C30736) *
                 C13128 +
             ((C18987 - C18988 + C18989 - C18990) * C114 +
              (C18991 - C18992 + C18993 - C18994) * C30736) *
                 C13129) *
                C30658) *
               C1078 +
           ((((C18794 - C18793 + C18796 - C18795) * C114 +
              (C18798 - C18797 + C18800 - C18799) * C30736) *
                 C13128 +
             ((C18809 - C18810 + C18811 - C18812) * C114 +
              (C18813 - C18814 + C18815 - C18816) * C30736) *
                 C13129) *
                C30806 +
            (((C19474 - C19473 + C19476 - C19475) * C114 +
              (C19478 - C19477 + C19480 - C19479) * C30736) *
                 C13128 +
             ((C19481 - C19482 + C19483 - C19484) * C114 +
              (C19485 - C19486 + C19487 - C19488) * C30736) *
                 C13129) *
                C30658) *
               C1079 +
           ((((C18802 - C18801 + C18804 - C18803) * C114 +
              (C18806 - C18805 + C18808 - C18807) * C30736) *
                 C13128 +
             ((C18817 - C18818 + C18819 - C18820) * C114 +
              (C18821 - C18822 + C18823 - C18824) * C30736) *
                 C13129) *
                C30806 +
            (((C20196 - C20195 + C20198 - C20197) * C114 +
              (C20200 - C20199 + C20202 - C20201) * C30736) *
                 C13128 +
             ((C18610 * C1305 - C18612 * C1291 + C18611 * C1311 -
               C18613 * C1294) *
                  C114 +
              (C18610 * C1318 - C18612 * C1306 + C18611 * C1321 -
               C18613 * C1312) *
                  C30736) *
                 C13129) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C30553 * C108 +
          (((C18616 - C18615 + C18618 - C18617) * C114 +
            (C18620 - C18619 + C18622 - C18621) * C30736) *
               C13128 +
           ((C18623 - C18624 + C18625 - C18626) * C114 +
            (C18627 - C18628 + C18629 - C18630) * C30736) *
               C13129) *
              C30571 * C30553 * C109 +
          (((C18624 - C18623 + C18626 - C18625) * C114 +
            (C18628 - C18627 + C18630 - C18629) * C30736) *
               C13128 +
           ((C18631 - C18632 + C18633 - C18634) * C114 +
            (C18635 - C18636 + C18637 - C18638) * C30736) *
               C13129) *
              C30571 * C30553 * C110 +
          (((C18632 - C18631 + C18634 - C18633) * C114 +
            (C18636 - C18635 + C18638 - C18637) * C30736) *
               C13128 +
           ((C18639 - C18640 + C18641 - C18642) * C114 +
            (C18643 - C18644 + C18645 - C18646) * C30736) *
               C13129) *
              C30571 * C30553 * C111 +
          (((C18640 - C18639 + C18642 - C18641) * C114 +
            (C18644 - C18643 + C18646 - C18645) * C30736) *
               C13128 +
           ((C18610 * C132 - C18612 * C120 + C18611 * C773 - C18613 * C772) *
                C114 +
            (C18610 * C141 - C18612 * C133 + C18611 * C775 - C18613 * C774) *
                C30736) *
               C13129) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C291 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C292 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C30873 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C18612 * C300 - C18610 * C316 + C18613 * C934 - C18611 * C942) *
                 C114 +
             (C18612 * C317 - C18610 * C330 + C18613 * C943 - C18611 * C949) *
                 C30736) *
                C13129) *
               C30571 * C30861 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                 C114 +
             (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                 C30736) *
                C13128 +
            ((C18615 - C18616 + C18617 - C18618) * C114 +
             (C18619 - C18620 + C18621 - C18622) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                 C114 +
             (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                 C30736) *
                C13128 +
            ((C18793 - C18794 + C18795 - C18796) * C114 +
             (C18797 - C18798 + C18799 - C18800) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                 C114 +
             (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                 C30736) *
                C13128 +
            ((C18801 - C18802 + C18803 - C18804) * C114 +
             (C18805 - C18806 + C18807 - C18808) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30870 +
          ((((C18616 - C18615 + C18618 - C18617) * C114 +
             (C18620 - C18619 + C18622 - C18621) * C30736) *
                C13128 +
            ((C18623 - C18624 + C18625 - C18626) * C114 +
             (C18627 - C18628 + C18629 - C18630) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18794 - C18793 + C18796 - C18795) * C114 +
             (C18798 - C18797 + C18800 - C18799) * C30736) *
                C13128 +
            ((C18809 - C18810 + C18811 - C18812) * C114 +
             (C18813 - C18814 + C18815 - C18816) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18802 - C18801 + C18804 - C18803) * C114 +
             (C18806 - C18805 + C18808 - C18807) * C30736) *
                C13128 +
            ((C18817 - C18818 + C18819 - C18820) * C114 +
             (C18821 - C18822 + C18823 - C18824) * C30736) *
                C13129) *
               C30571 * C30836) *
              C30857 +
          ((((C18624 - C18623 + C18626 - C18625) * C114 +
             (C18628 - C18627 + C18630 - C18629) * C30736) *
                C13128 +
            ((C18631 - C18632 + C18633 - C18634) * C114 +
             (C18635 - C18636 + C18637 - C18638) * C30736) *
                C13129) *
               C30571 * C1078 +
           (((C18810 - C18809 + C18812 - C18811) * C114 +
             (C18814 - C18813 + C18816 - C18815) * C30736) *
                C13128 +
            ((C19133 - C19134 + C19135 - C19136) * C114 +
             (C19137 - C19138 + C19139 - C19140) * C30736) *
                C13129) *
               C30571 * C1079 +
           (((C18818 - C18817 + C18820 - C18819) * C114 +
             (C18822 - C18821 + C18824 - C18823) * C30736) *
                C13128 +
            ((C18610 * C318 - C18612 * C301 + C18611 * C1585 - C18613 * C1584) *
                 C114 +
             (C18610 * C331 - C18612 * C319 + C18611 * C1587 - C18613 * C1586) *
                 C30736) *
                C13129) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18610 * C122 - C18612 * C115 + C18611 * C491 - C18613 * C481) *
                C114 +
            (C18610 * C136 - C18612 * C123 + C18611 * C511 - C18613 * C492) *
                C30736) *
               C13128 +
           ((C18615 - C18616 + C18617 - C18618) * C114 +
            (C18619 - C18620 + C18621 - C18622) * C30736) *
               C13129) *
              C30571 * C1146 +
          (((C18612 * C294 - C18610 * C304 + C18613 * C931 - C18611 * C936) *
                C114 +
            (C18612 * C305 - C18610 * C324 + C18613 * C937 - C18611 * C946) *
                C30736) *
               C13128 +
           ((C18793 - C18794 + C18795 - C18796) * C114 +
            (C18797 - C18798 + C18799 - C18800) * C30736) *
               C13129) *
              C30571 * C1147 +
          (((C18610 * C310 - C18612 * C297 + C18611 * C1301 - C18613 * C1289) *
                C114 +
            (C18610 * C327 - C18612 * C311 + C18611 * C1316 - C18613 * C1302) *
                C30736) *
               C13128 +
           ((C18801 - C18802 + C18803 - C18804) * C114 +
            (C18805 - C18806 + C18807 - C18808) * C30736) *
               C13129) *
              C30571 * C1148 +
          (((C18612 * C1152 - C18610 * C1158 + C18613 * C1694 -
             C18611 * C1697) *
                C114 +
            (C18612 * C1159 - C18610 * C1170 + C18613 * C1698 -
             C18611 * C1703) *
                C30736) *
               C13128 +
           ((C18612 * C1153 - C18610 * C1160 + C18613 * C1695 -
             C18611 * C1699) *
                C114 +
            (C18612 * C1161 - C18610 * C1171 + C18613 * C1700 -
             C18611 * C1704) *
                C30736) *
               C13129) *
              C30571 * C1149 +
          (((C18610 * C1164 - C18612 * C1155 + C18611 * C5623 -
             C18613 * C5619) *
                C114 +
            (C18610 * C1173 - C18612 * C1165 + C18611 * C5628 -
             C18613 * C5624) *
                C30736) *
               C13128 +
           ((C18610 * C1166 - C18612 * C1156 + C18611 * C5905 -
             C18613 * C5904) *
                C114 +
            (C18610 * C1174 - C18612 * C1167 + C18611 * C5907 -
             C18613 * C5906) *
                C30736) *
               C13129) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30612 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30619 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C2868) *
              C30530 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30612 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30619 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C2868) *
              C30539 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30612 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30619 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C2868) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30612 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30619 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C2868) *
              C30530 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30612 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30619 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C2868) *
              C30539 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30612 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30619 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C2868) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30612 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30619 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C30806 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C2868) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30612 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30619 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C30806 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C2868) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30880 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30876 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30866 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C2608 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30880 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30876 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30866 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C2500 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C2500 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C2500 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C2500 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30874 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30863 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C30839) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30874 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30863 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C30839) *
               C30616) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30874 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30863 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C30839) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30874 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30863 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C2500 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C2500 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30616) *
              C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C2500 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C2500 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30880 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30876 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C30866 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30880 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30876 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C30866 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30874 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30863 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C30839) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30874 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30863 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C30839) *
               C30616) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30874 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30863 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C30839) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30874 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30863 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30530 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30539 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C30806 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C2500 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C30806 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C2500 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C2500 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C2500 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C2500 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30880 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30876 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30866 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C2608 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30880 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30876 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30866 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C2500 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30616) *
              C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C2500 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30616) *
              C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C2500 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C2500 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30880 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C30876 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C30866 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30880 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C30876 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C30866 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30612 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30619 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C3262 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C2868) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30612 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30619 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C3262 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30612 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30619 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C2868) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30654 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30661 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C3770) *
              C30612 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30654 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30661 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C3770) *
              C30619 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30654 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30661 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C3770) *
              C2868) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30654 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30661 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C3770) *
              C30612 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30654 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30661 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C3770) *
              C30619 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30654 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30661 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C3770) *
              C2868) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30880 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C3262 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C30876 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C3262 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C30866 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C3262 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30870 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30857 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C3262 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C2500 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C3262 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30881 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30878 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30869 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C2500 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30881 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30878 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C30869 +
           (((C30749 * C2393 - C113 * C2390) * C114 +
             (C30749 * C2399 - C113 * C2394) * C30736) *
                C103 +
            ((C30749 * C2395 - C113 * C2391) * C114 +
             (C30749 * C2400 - C113 * C2396) * C30736) *
                C104 +
            ((C30749 * C2397 - C113 * C2392) * C114 +
             (C30749 * C2401 - C113 * C2398) * C30736) *
                C105) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30880 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C3262 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C30876 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C3262 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C30866 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C3262 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30881 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30878 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30869 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C2500 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30881 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30878 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30869 +
           ((C6676 - C6675) * C4727 + (C6678 - C6677) * C4723 +
            (C6680 - C6679) * C4728 + (C6682 - C6681) * C4724 +
            (C30749 * C6671 - C113 * C6670) * C4729 +
            (C30749 * C6673 - C113 * C6672) * C4725) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30654 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30661 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C3770) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30654 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30661 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C3770) *
               C30616) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30654 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30661 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C3770) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30654 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30661 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30654 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30661 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C3770) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30654 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30661 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30654 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30661 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C3770) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30654 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30661 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C2500 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30870 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C2500 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30857 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C3262 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C2500 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C3262 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30880 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C3262 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C30876 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C3262 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C30866 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C3262 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30870 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C2500 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30857 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C2500 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30880 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C3262 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C30876 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C3262 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C30866 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C3262 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1420 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1421 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C1422 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C30791 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1420 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1421 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C1422 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30805 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30805 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30805 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C30805 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C1816 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C1817 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C30839) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C1816 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C1817 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C30839) *
               C30616) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C1816 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C1817 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C30839) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C1816 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C1817 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30805 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30805 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30616) *
              C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30805 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C30805 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1420 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C1421 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C1422 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1420 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C1421 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C1422 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C1816 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C1817 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C30839) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C1816 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C1817 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C1816 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C1817 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C30839) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C1816 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C1817 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C30839) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C1420 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30806 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C1421 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30806 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C1422 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30806 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C291 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C292 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C30806 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C30805 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C30806 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C2276 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C2277 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C2278 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30805 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C2276 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C2277 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
            ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
               C2278 +
           (((C30749 * C2393 - C113 * C2390) * C114 +
             (C30749 * C2399 - C113 * C2394) * C30736) *
                C103 +
            ((C30749 * C2395 - C113 * C2391) * C114 +
             (C30749 * C2400 - C113 * C2396) * C30736) *
                C104 +
            ((C30749 * C2397 - C113 * C2392) * C114 +
             (C30749 * C2401 - C113 * C2398) * C30736) *
                C105) *
               C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + (C5313 - C5314) * C4729 +
             (C5315 - C5316) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
             (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C30749 * C1697 - C113 * C1694) * C4729 +
             (C30749 * C1703 - C113 * C1698) * C4725) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 +
             (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 +
             (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C113 * C1695 - C30749 * C1699) * C4729 +
             (C113 * C1700 - C30749 * C1704) * C4725) *
                C30503 * C30658) *
               C30616) *
              C292 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C1420 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30806 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C1421 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30806 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C1422 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30806 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C2276 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C2277 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C2278 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C30805 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C2276 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C2277 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C2278 +
           ((C6676 - C6675) * C4727 + (C6678 - C6677) * C4723 +
            (C6680 - C6679) * C4728 + (C6682 - C6681) * C4724 +
            (C30749 * C6671 - C113 * C6670) * C4729 +
            (C30749 * C6673 - C113 * C6672) * C4725) *
               C30503 * C30852) *
              C30616) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C30749 * C122 - C113 * C115) * C114 +
                (C30749 * C136 - C113 * C123) * C30736) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
               C176 * C105) *
                  C30571 * C30553 * C108 +
              (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
               C177 * C105) *
                  C30571 * C30553 * C109 +
              (C176 * C103 +
               ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
               C178 * C105) *
                  C30571 * C30553 * C110 +
              (C177 * C103 +
               ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
               ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
                  C30571 * C30553 * C111 +
              (C178 * C103 +
               ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
               ((C30749 * C134 - C113 * C121) * C114 +
                (C30749 * C142 - C113 * C135) * C30736) *
                   C105) *
                  C30571 * C30553 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C30749 * C122 - C113 * C115) * C114 +
                 (C30749 * C136 - C113 * C123) * C30736) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
                C176 * C105) *
                   C30571 * C30873 +
               (((C113 * C294 - C30749 * C304) * C114 +
                 (C113 * C305 - C30749 * C324) * C30736) *
                    C103 +
                ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
                C367 * C105) *
                   C30571 * C30861 +
               (((C30749 * C310 - C113 * C297) * C114 +
                 (C30749 * C327 - C113 * C311) * C30736) *
                    C103 +
                ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
                C368 * C105) *
                   C30571 * C30836) *
                  C291 +
              ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
                C177 * C105) *
                   C30571 * C30873 +
               (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
                ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
                ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
                   C30571 * C30861 +
               (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
                ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
                ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                   C30571 * C30836) *
                  C292 +
              ((C176 * C103 +
                ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
                C178 * C105) *
                   C30571 * C30873 +
               (C367 * C103 +
                ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
                ((C113 * C302 - C30749 * C320) * C114 +
                 (C113 * C321 - C30749 * C332) * C30736) *
                    C105) *
                   C30571 * C30861 +
               (C368 * C103 +
                ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
                ((C30749 * C322 - C113 * C303) * C114 +
                 (C30749 * C333 - C113 * C323) * C30736) *
                    C105) *
                   C30571 * C30836) *
                  C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30874 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            ((C538 - C539) * C114 + (C540 - C541) * C30736) * C105) *
               C30863 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30874 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C113 * C489 - C30749 * C507) * C114 +
             (C113 * C508 - C30749 * C519) * C30736) *
                C105) *
               C30863 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C1078 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30874 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30863 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C1079 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30874 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C113 * C1290 - C30749 * C1303) * C114 +
             (C113 * C1304 - C30749 * C1317) * C30736) *
                C104 +
            ((C113 * C1291 - C30749 * C1305) * C114 +
             (C113 * C1306 - C30749 * C1318) * C30736) *
                C105) *
               C30863 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C1816 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C1817 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C1816 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C1817 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30873 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C1816 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C1817 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C30861 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C1816 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C1817 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C1991 +
          (((C113 * C481 - C30749 * C491) * C114 +
            (C113 * C492 - C30749 * C511) * C30736) *
               C103 +
           ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
           C554 * C105) *
              C1992 +
          (((C30749 * C497 - C113 * C484) * C114 +
            (C30749 * C514 - C113 * C498) * C30736) *
               C103 +
           ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
           C555 * C105) *
              C1993 +
          (((C113 * C1996 - C30749 * C2002) * C114 +
            (C113 * C2003 - C30749 * C2014) * C30736) *
               C103 +
           ((C113 * C1997 - C30749 * C2004) * C114 +
            (C113 * C2005 - C30749 * C2015) * C30736) *
               C104 +
           ((C113 * C1998 - C30749 * C2006) * C114 +
            (C113 * C2007 - C30749 * C2016) * C30736) *
               C105) *
              C1994 +
          (((C30749 * C2008 - C113 * C1999) * C114 +
            (C30749 * C2017 - C113 * C2009) * C30736) *
               C103 +
           ((C30749 * C2010 - C113 * C2000) * C114 +
            (C30749 * C2018 - C113 * C2011) * C30736) *
               C104 +
           ((C30749 * C2012 - C113 * C2001) * C114 +
            (C30749 * C2019 - C113 * C2013) * C30736) *
               C105) *
              C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 +
            (C30749 * C1295 - C113 * C1286) * C4728 +
            (C30749 * C1313 - C113 * C1296) * C4724 +
            (C30749 * C1307 - C113 * C1292) * C4729 +
            (C30749 * C1319 - C113 * C1308) * C4725) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30874 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30863 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30874 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30863 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C1078 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30874 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
            (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
               C30503 * C30863 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C1079 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30874 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
            (C113 * C5624 - C30749 * C5628) * C4725) *
               C30503 * C30863 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C1816 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C1817 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C1816 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C1817 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30873 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C1816 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C1817 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C30861 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C1816 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C1817 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C1991 +
          ((C113 * C481 - C30749 * C491) * C4727 +
           (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
           (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
              C30503 * C1992 +
          ((C30749 * C497 - C113 * C484) * C4727 +
           (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
           (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
              C30503 * C1993 +
          ((C113 * C1996 - C30749 * C2002) * C4727 +
           (C113 * C2003 - C30749 * C2014) * C4723 +
           (C113 * C2390 - C30749 * C2393) * C4728 +
           (C113 * C2394 - C30749 * C2399) * C4724 +
           (C113 * C6304 - C30749 * C6307) * C4729 +
           (C113 * C6308 - C30749 * C6313) * C4725) *
              C30503 * C1994 +
          ((C30749 * C2008 - C113 * C1999) * C4727 +
           (C30749 * C2017 - C113 * C2009) * C4723 +
           (C30749 * C6309 - C113 * C6305) * C4728 +
           (C30749 * C6314 - C113 * C6310) * C4724 +
           (C30749 * C6311 - C113 * C6306) * C4729 +
           (C30749 * C6315 - C113 * C6312) * C4725) *
              C30503 * C1995) *
         C30553 * C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C1078 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C1079 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C30806 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C1078 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C1079 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C30806 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30806 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30806 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30806 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C2276 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C2277 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C2278 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30553 * C30791 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C2276 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C2277 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C2278 +
           (((C2286 - C2285) * C114 + (C2288 - C2287) * C30736) * C103 +
            ((C2290 - C2289) * C114 + (C2292 - C2291) * C30736) * C104 +
            ((C30749 * C2281 - C113 * C2280) * C114 +
             (C30749 * C2283 - C113 * C2282) * C30736) *
                C105) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30806 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30658) *
              C30553 * C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30806 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30806 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
             (C113 * C5624 - C30749 * C5628) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C2276 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C2277 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C2278 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 +
            (C113 * C2390 - C30749 * C2393) * C4728 +
            (C113 * C2394 - C30749 * C2399) * C4724 +
            (C113 * C6304 - C30749 * C6307) * C4729 +
            (C113 * C6308 - C30749 * C6313) * C4725) *
               C30503 * C30852) *
              C30553 * C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C2276 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C2277 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C2278 +
           ((C2286 - C2285) * C4727 + (C2288 - C2287) * C4723 +
            (C30749 * C2395 - C113 * C2391) * C4728 +
            (C30749 * C2400 - C113 * C2396) * C4724 +
            (C30749 * C6569 - C113 * C6568) * C4729 +
            (C30749 * C6571 - C113 * C6570) * C4725) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30873 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30861 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30873 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
               C30571 * C30861 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30873 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C113 * C302 - C30749 * C320) * C114 +
             (C113 * C321 - C30749 * C332) * C30736) *
                C105) *
               C30571 * C30861 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C30553 * C108 +
          (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
           C177 * C105) *
              C30571 * C30553 * C109 +
          (C176 * C103 +
           ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
           C178 * C105) *
              C30571 * C30553 * C110 +
          (C177 * C103 +
           ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
           ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
              C30571 * C30553 * C111 +
          (C178 * C103 +
           ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
           ((C30749 * C134 - C113 * C121) * C114 +
            (C30749 * C142 - C113 * C135) * C30736) *
               C105) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C1816 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C1817 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C1816 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C1817 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C1816 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C1817 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30873 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C1816 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C1817 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C30861 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C1816 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C1817 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30553 * C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C1816 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C1817 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C1816 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C1817 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C1816 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C1817 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C30873 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C1816 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C1817 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C30861 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C1816 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C1817 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C30530 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C30539 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C3262 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C30805 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C3262 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30616) *
              C30530 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30539 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C3262 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C3262 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30654 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30661 +
            (((C30749 * C497 - C113 * C484) * C114 +
              (C30749 * C514 - C113 * C498) * C30736) *
                 C103 +
             ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
             C555 * C105) *
                C3770) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30654 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30661 +
            (((C113 * C1286 - C30749 * C1295) * C114 +
              (C113 * C1296 - C30749 * C1313) * C30736) *
                 C103 +
             ((C2171 - C2172) * C114 + (C2173 - C2174) * C30736) * C104 +
             ((C2175 - C2176) * C114 + (C2177 - C2178) * C30736) * C105) *
                C3770) *
               C30616) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30654 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30661 +
            (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
             ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
             ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
                C3770) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30654 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30661 +
            (((C2172 - C2171) * C114 + (C2174 - C2173) * C30736) * C103 +
             ((C2176 - C2175) * C114 + (C2178 - C2177) * C30736) * C104 +
             ((C30749 * C2167 - C113 * C2166) * C114 +
              (C30749 * C2169 - C113 * C2168) * C30736) *
                 C105) *
                C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30654 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30661 +
            ((C30749 * C497 - C113 * C484) * C4727 +
             (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
             (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
                C30503 * C3770) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30654 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30661 +
            ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
             (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
             (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
                C30503 * C3770) *
               C30616) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30654 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30661 +
            ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
             (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
             (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
                C30503 * C3770) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30654 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30661 +
            ((C2172 - C2171) * C4727 + (C2174 - C2173) * C4723 +
             (C6468 - C6467) * C4728 + (C6470 - C6469) * C4724 +
             (C30749 * C6463 - C113 * C6462) * C4729 +
             (C30749 * C6465 - C113 * C6464) * C4725) *
                C30503 * C3770) *
               C30616) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30873 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30861 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C3262 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30873 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30861 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C3262 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C3262 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C3262 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C3262 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30881 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30878 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30869 +
           (((C113 * C1996 - C30749 * C2002) * C114 +
             (C113 * C2003 - C30749 * C2014) * C30736) *
                C103 +
            ((C2285 - C2286) * C114 + (C2287 - C2288) * C30736) * C104 +
            ((C2289 - C2290) * C114 + (C2291 - C2292) * C30736) * C105) *
               C30852) *
              C30553 * C2608 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30881 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30878 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30869 +
           (((C2286 - C2285) * C114 + (C2288 - C2287) * C30736) * C103 +
            ((C2290 - C2289) * C114 + (C2292 - C2291) * C30736) * C104 +
            ((C30749 * C2281 - C113 * C2280) * C114 +
             (C30749 * C2283 - C113 * C2282) * C30736) *
                C105) *
               C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C3262 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30658) *
              C30553 * C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C3262 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C3262 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30881 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30878 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30869 +
           ((C113 * C1996 - C30749 * C2002) * C4727 +
            (C113 * C2003 - C30749 * C2014) * C4723 + (C6675 - C6676) * C4728 +
            (C6677 - C6678) * C4724 + (C6679 - C6680) * C4729 +
            (C6681 - C6682) * C4725) *
               C30503 * C30852) *
              C30553 * C2608 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30881 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30878 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C30869 +
           ((C2286 - C2285) * C4727 + (C2288 - C2287) * C4723 +
            (C30749 * C2395 - C113 * C2391) * C4728 +
            (C30749 * C2400 - C113 * C2396) * C4724 +
            (C30749 * C6569 - C113 * C6568) * C4729 +
            (C30749 * C6571 - C113 * C6570) * C4725) *
               C30503 * C30852) *
              C30553 * C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30654 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30661 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C3770) *
              C30553 * C30530 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30654 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30661 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C3770) *
              C30553 * C30539 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30654 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30661 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C3770) *
              C30553 * C2871)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30654 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30661 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C3770) *
              C30553 * C30530 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30654 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30661 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C6467 - C6468) * C4729 + (C6469 - C6470) * C4725) *
               C30503 * C3770) *
              C30553 * C30539 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30654 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30661 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C3770) *
              C30553 * C2871)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C3262 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C30879 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C3262 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C30872 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C3262 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C30859 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C3262 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C3262 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30873 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C3262 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30861 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C3262 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C2608 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C3262 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30873 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C3262 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30861 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C3262 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C3262 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C30553 * C30879 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C3262 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
            C5910 * C4725) *
               C30503 * C30658) *
              C30553 * C30872 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C3262 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C30859 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C3262 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C3262 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C3262 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
             C6018 * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C3262 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
             (C6021 - C6022) * C4725) *
                C30503 * C30658) *
               C30836) *
              C2608 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C3262 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C30873 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C3262 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C30861 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C3262 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30805 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30616) *
              C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30805 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C30616) *
              C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30805 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C30616) *
              C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30571 * C30805 +
           (C672 * C103 +
            ((C667 - C666) * C114 + (C669 - C668) * C30736) * C104 +
            ((C30749 * C660 - C113 * C659) * C114 +
             (C30749 * C662 - C113 * C661) * C30736) *
                C105) *
               C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1420 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1421 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C1422 +
           (((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30571 * C30846) *
              C30791 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1420 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1421 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C1422 +
           (((C1432 - C1431) * C114 + (C1434 - C1433) * C30736) * C103 +
            ((C1436 - C1435) * C114 + (C1438 - C1437) * C30736) * C104 +
            ((C30749 * C1427 - C113 * C1426) * C114 +
             (C30749 * C1429 - C113 * C1428) * C30736) *
                C105) *
               C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30805 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30616) *
              C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30805 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30616) *
              C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30805 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30616) *
              C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30571 * C30805 +
           (C664 * C4727 + C665 * C4723 + (C356 - C355) * C4728 +
            (C358 - C357) * C4724 + (C30749 * C1427 - C113 * C1426) * C4729 +
            (C30749 * C1429 - C113 * C1428) * C4725) *
               C30503 * C30571 * C30616) *
              C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1420 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30571 * C1421 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30571 * C1422 +
           (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30571 * C30846) *
              C30791 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1420 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
            C5754 * C4725) *
               C30503 * C30571 * C1421 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
            (C5757 - C5758) * C4725) *
               C30503 * C30571 * C1422 +
           (C5753 * C4727 + C5754 * C4723 + (C5756 - C5755) * C4728 +
            (C5758 - C5757) * C4724 + (C30749 * C5749 - C113 * C5748) * C4729 +
            (C30749 * C5751 - C113 * C5750) * C4725) *
               C30503 * C30571 * C30846) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C30805 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C30616) *
              C291 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C30805 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C30616) *
              C292 +
          (((C176 * C103 +
             ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
             C178 * C105) *
                C30806 +
            (C554 * C103 +
             ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
             ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
                C30658) *
               C30805 +
           ((C367 * C103 +
             ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
             ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
                C30806 +
            (C968 * C103 +
             ((C961 - C960) * C114 + (C963 - C962) * C30736) * C104 +
             ((C30749 * C944 - C113 * C935) * C114 +
              (C30749 * C950 - C113 * C945) * C30736) *
                 C105) *
                C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C1420 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30806 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30658) *
              C1421 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30806 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
            ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
               C30658) *
              C1422 +
          ((((C113 * C1152 - C30749 * C1158) * C114 +
             (C113 * C1159 - C30749 * C1170) * C30736) *
                C103 +
            ((C1431 - C1432) * C114 + (C1433 - C1434) * C30736) * C104 +
            ((C1435 - C1436) * C114 + (C1437 - C1438) * C30736) * C105) *
               C30806 +
           (((C30749 * C1697 - C113 * C1694) * C114 +
             (C30749 * C1703 - C113 * C1698) * C30736) *
                C103 +
            ((C30749 * C1699 - C113 * C1695) * C114 +
             (C30749 * C1704 - C113 * C1700) * C30736) *
                C104 +
            ((C30749 * C1701 - C113 * C1696) * C114 +
             (C30749 * C1705 - C113 * C1702) * C30736) *
                C105) *
               C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + (C5313 - C5314) * C4729 +
             (C5315 - C5316) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
             (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C30749 * C1697 - C113 * C1694) * C4729 +
             (C30749 * C1703 - C113 * C1698) * C4725) *
                C30503 * C30658) *
               C30616) *
              C291 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 +
             (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
                C30503 * C30658) *
               C30805 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 +
             (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C113 * C1695 - C30749 * C1699) * C4729 +
             (C113 * C1700 - C30749 * C1704) * C4725) *
                C30503 * C30658) *
               C30616) *
              C292 +
          (((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
             (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
                C30503 * C30806 +
            (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
             (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
             (C1595 - C1596) * C4725) *
                C30503 * C30658) *
               C30805 +
           ((C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
             (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
             (C1437 - C1438) * C4725) *
                C30503 * C30806 +
            (C964 * C4727 + C965 * C4723 + (C1594 - C1593) * C4728 +
             (C1596 - C1595) * C4724 + (C30749 * C1701 - C113 * C1696) * C4729 +
             (C30749 * C1705 - C113 * C1702) * C4725) *
                C30503 * C30658) *
               C30616) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30658) *
              C1420 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30806 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 + C6017 * C4729 +
            C6018 * C4725) *
               C30503 * C30658) *
              C1421 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30806 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C6019 - C6020) * C4729 +
            (C6021 - C6022) * C4725) *
               C30503 * C30658) *
              C1422 +
          ((C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
            (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
            (C5505 - C5506) * C4725) *
               C30503 * C30806 +
           (C6017 * C4727 + C6018 * C4723 + (C6020 - C6019) * C4728 +
            (C6022 - C6021) * C4724 + (C30749 * C6013 - C113 * C6012) * C4729 +
            (C30749 * C6015 - C113 * C6014) * C4725) *
               C30503 * C30658) *
              C30846) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30873 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30861 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30873 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
               C30571 * C30861 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30873 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C113 * C302 - C30749 * C320) * C114 +
             (C113 * C321 - C30749 * C332) * C30736) *
                C105) *
               C30571 * C30861 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C30553 * C108 +
          (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
           C177 * C105) *
              C30571 * C30553 * C109 +
          (C176 * C103 +
           ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
           C178 * C105) *
              C30571 * C30553 * C110 +
          (C177 * C103 +
           ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
           ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
              C30571 * C30553 * C111 +
          (C178 * C103 +
           ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
           ((C30749 * C134 - C113 * C121) * C114 +
            (C30749 * C142 - C113 * C135) * C30736) *
               C105) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C30553 * C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30874 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            ((C538 - C539) * C114 + (C540 - C541) * C30736) * C105) *
               C30863 +
           (((C531 - C530) * C114 + (C533 - C532) * C30736) * C103 +
            ((C535 - C534) * C114 + (C537 - C536) * C30736) * C104 +
            ((C542 - C543) * C114 + (C544 - C545) * C30736) * C105) *
               C30839) *
              C30553 * C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30874 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C113 * C489 - C30749 * C507) * C114 +
             (C113 * C508 - C30749 * C519) * C30736) *
                C105) *
               C30863 +
           (C555 * C103 +
            ((C543 - C542) * C114 + (C545 - C544) * C30736) * C104 +
            ((C30749 * C509 - C113 * C490) * C114 +
             (C30749 * C520 - C113 * C510) * C30736) *
                C105) *
               C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30874 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30863 +
           (((C30749 * C497 - C113 * C484) * C114 +
             (C30749 * C514 - C113 * C498) * C30736) *
                C103 +
            ((C530 - C531) * C114 + (C532 - C533) * C30736) * C104 +
            C555 * C105) *
               C30839) *
              C1078 +
          ((((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30874 +
           (((C30749 * C936 - C113 * C931) * C114 +
             (C30749 * C946 - C113 * C937) * C30736) *
                C103 +
            ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
            C968 * C105) *
               C30863 +
           (((C113 * C1286 - C30749 * C1295) * C114 +
             (C113 * C1296 - C30749 * C1313) * C30736) *
                C103 +
            ((C113 * C1287 - C30749 * C1297) * C114 +
             (C113 * C1298 - C30749 * C1314) * C30736) *
                C104 +
            ((C113 * C1288 - C30749 * C1299) * C114 +
             (C113 * C1300 - C30749 * C1315) * C30736) *
                C105) *
               C30839) *
              C1079 +
          ((((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30874 +
           (((C113 * C1289 - C30749 * C1301) * C114 +
             (C113 * C1302 - C30749 * C1316) * C30736) *
                C103 +
            ((C113 * C1290 - C30749 * C1303) * C114 +
             (C113 * C1304 - C30749 * C1317) * C30736) *
                C104 +
            ((C113 * C1291 - C30749 * C1305) * C114 +
             (C113 * C1306 - C30749 * C1318) * C30736) *
                C105) *
               C30863 +
           (((C30749 * C1307 - C113 * C1292) * C114 +
             (C30749 * C1319 - C113 * C1308) * C30736) *
                C103 +
            ((C30749 * C1309 - C113 * C1293) * C114 +
             (C30749 * C1320 - C113 * C1310) * C30736) *
                C104 +
            ((C30749 * C1311 - C113 * C1294) * C114 +
             (C30749 * C1321 - C113 * C1312) * C30736) *
                C105) *
               C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 +
            (C30749 * C1295 - C113 * C1286) * C4728 +
            (C30749 * C1313 - C113 * C1296) * C4724 +
            (C30749 * C1307 - C113 * C1292) * C4729 +
            (C30749 * C1319 - C113 * C1308) * C4725) *
               C30503 * C30839) *
              C30553 * C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30874 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30863 +
           ((C531 - C530) * C4727 + (C533 - C532) * C4723 +
            (C2171 - C2172) * C4728 + (C2173 - C2174) * C4724 +
            (C113 * C1293 - C30749 * C1309) * C4729 +
            (C113 * C1310 - C30749 * C1320) * C4725) *
               C30503 * C30839) *
              C30553 * C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30874 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30863 +
           (C548 * C4727 + C549 * C4723 + (C2176 - C2175) * C4728 +
            (C2178 - C2177) * C4724 + (C30749 * C1311 - C113 * C1294) * C4729 +
            (C30749 * C1321 - C113 * C1312) * C4725) *
               C30503 * C30839) *
              C30553 * C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30874 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
            (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
               C30503 * C30863 +
           ((C30749 * C497 - C113 * C484) * C4727 +
            (C30749 * C514 - C113 * C498) * C4723 + (C5633 - C5634) * C4728 +
            (C5635 - C5636) * C4724 + C5649 * C4729 + C5650 * C4725) *
               C30503 * C30839) *
              C1078 +
          (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
            C5498 * C4725) *
               C30503 * C30874 +
           ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
            (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
            (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
               C30503 * C30863 +
           ((C5634 - C5633) * C4727 + (C5636 - C5635) * C4723 +
            (C5638 - C5637) * C4728 + (C5640 - C5639) * C4724 +
            (C5645 - C5646) * C4729 + (C5647 - C5648) * C4725) *
               C30503 * C30839) *
              C1079 +
          ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
               C30503 * C30874 +
           (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
            (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
            (C113 * C5624 - C30749 * C5628) * C4725) *
               C30503 * C30863 +
           (C5649 * C4727 + C5650 * C4723 + (C5646 - C5645) * C4728 +
            (C5648 - C5647) * C4724 + (C30749 * C5625 - C113 * C5620) * C4729 +
            (C30749 * C5629 - C113 * C5626) * C4725) *
               C30503 * C30839) *
              C30836) *
         C30525) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30806 +
           (((C113 * C481 - C30749 * C491) * C114 +
             (C113 * C492 - C30749 * C511) * C30736) *
                C103 +
            ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
            C554 * C105) *
               C30658) *
              C30553 * C655 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30806 +
           (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
            ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
            C785 * C105) *
               C30658) *
              C30553 * C656 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30806 +
           (C554 * C103 +
            ((C539 - C538) * C114 + (C541 - C540) * C30736) * C104 +
            ((C779 - C780) * C114 + (C781 - C782) * C30736) * C105) *
               C30658) *
              C30553 * C657 +
          ((C177 * C103 +
            ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
            ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
               C30806 +
           (C785 * C103 +
            ((C780 - C779) * C114 + (C782 - C781) * C30736) * C104 +
            ((C30749 * C773 - C113 * C772) * C114 +
             (C30749 * C775 - C113 * C774) * C30736) *
                C105) *
               C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C30749 * C122 - C113 * C115) * C114 +
              (C30749 * C136 - C113 * C123) * C30736) *
                 C103 +
             ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
             C176 * C105) *
                C30806 +
            (((C113 * C481 - C30749 * C491) * C114 +
              (C113 * C492 - C30749 * C511) * C30736) *
                 C103 +
             ((C522 - C523) * C114 + (C524 - C525) * C30736) * C104 +
             C554 * C105) *
                C30658) *
               C1078 +
           ((((C113 * C294 - C30749 * C304) * C114 +
              (C113 * C305 - C30749 * C324) * C30736) *
                 C103 +
             ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
             C367 * C105) *
                C30806 +
            (((C30749 * C936 - C113 * C931) * C114 +
              (C30749 * C946 - C113 * C937) * C30736) *
                 C103 +
             ((C952 - C953) * C114 + (C954 - C955) * C30736) * C104 +
             C968 * C105) *
                C30658) *
               C1079 +
           ((((C30749 * C310 - C113 * C297) * C114 +
              (C30749 * C327 - C113 * C311) * C30736) *
                 C103 +
             ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
             C368 * C105) *
                C30806 +
            (((C113 * C1289 - C30749 * C1301) * C114 +
              (C113 * C1302 - C30749 * C1316) * C30736) *
                 C103 +
             ((C1589 - C1590) * C114 + (C1591 - C1592) * C30736) * C104 +
             ((C1593 - C1594) * C114 + (C1595 - C1596) * C30736) * C105) *
                C30658) *
               C30836) *
              C30791 +
          (((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
             ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
             C177 * C105) *
                C30806 +
            (((C523 - C522) * C114 + (C525 - C524) * C30736) * C103 +
             ((C527 - C526) * C114 + (C529 - C528) * C30736) * C104 +
             C785 * C105) *
                C30658) *
               C1078 +
           ((((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
             ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
             C672 * C105) *
                C30806 +
            (((C953 - C952) * C114 + (C955 - C954) * C30736) * C103 +
             ((C957 - C956) * C114 + (C959 - C958) * C30736) * C104 +
             ((C960 - C961) * C114 + (C962 - C963) * C30736) * C105) *
                C30658) *
               C1079 +
           ((((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
             ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
             ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
                C30806 +
            (((C1590 - C1589) * C114 + (C1592 - C1591) * C30736) * C103 +
             ((C1594 - C1593) * C114 + (C1596 - C1595) * C30736) * C104 +
             ((C30749 * C1585 - C113 * C1584) * C114 +
              (C30749 * C1587 - C113 * C1586) * C30736) *
                 C105) *
                C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30806 +
           ((C113 * C481 - C30749 * C491) * C4727 +
            (C113 * C492 - C30749 * C511) * C4723 +
            (C113 * C931 - C30749 * C936) * C4728 +
            (C113 * C937 - C30749 * C946) * C4724 +
            (C113 * C1289 - C30749 * C1301) * C4729 +
            (C113 * C1302 - C30749 * C1316) * C4725) *
               C30503 * C30658) *
              C30553 * C655 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30806 +
           ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
            (C952 - C953) * C4728 + (C954 - C955) * C4724 +
            (C1590 - C1589) * C4729 + (C1592 - C1591) * C4725) *
               C30503 * C30658) *
              C30553 * C656 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30806 +
           (C546 * C4727 + C547 * C4723 + (C957 - C956) * C4728 +
            (C959 - C958) * C4724 + (C1593 - C1594) * C4729 +
            (C1595 - C1596) * C4725) *
               C30503 * C30658) *
              C30553 * C657 +
          ((C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
            (C354 - C353) * C4724 + (C355 - C356) * C4729 +
            (C357 - C358) * C4725) *
               C30503 * C30806 +
           (C777 * C4727 + C778 * C4723 + (C961 - C960) * C4728 +
            (C963 - C962) * C4724 + (C30749 * C1585 - C113 * C1584) * C4729 +
            (C30749 * C1587 - C113 * C1586) * C4725) *
               C30503 * C30658) *
              C30553 * C30840)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C4727 +
             (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
             (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
                C30503 * C30806 +
            ((C113 * C481 - C30749 * C491) * C4727 +
             (C113 * C492 - C30749 * C511) * C4723 + (C5309 - C5310) * C4728 +
             (C5311 - C5312) * C4724 + C5631 * C4729 + C5632 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
             (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
             C5498 * C4725) *
                C30503 * C30806 +
            ((C5310 - C5309) * C4727 + (C5312 - C5311) * C4723 +
             (C5314 - C5313) * C4728 + (C5316 - C5315) * C4724 +
             (C5641 - C5642) * C4729 + (C5643 - C5644) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
             (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
                C30503 * C30806 +
            (C5631 * C4727 + C5632 * C4723 + (C5642 - C5641) * C4728 +
             (C5644 - C5643) * C4724 + (C113 * C5619 - C30749 * C5623) * C4729 +
             (C113 * C5624 - C30749 * C5628) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30791 +
          ((((C145 - C144) * C4727 + (C147 - C146) * C4723 +
             (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
             C4854 * C4725) *
                C30503 * C30806 +
            ((C523 - C522) * C4727 + (C525 - C524) * C4723 +
             (C952 - C953) * C4728 + (C954 - C955) * C4724 + C5909 * C4729 +
             C5910 * C4725) *
                C30503 * C30658) *
               C1078 +
           (((C336 - C335) * C4727 + (C338 - C337) * C4723 +
             (C343 - C344) * C4728 + (C345 - C346) * C4724 + C5753 * C4729 +
             C5754 * C4725) *
                C30503 * C30806 +
            ((C953 - C952) * C4727 + (C955 - C954) * C4723 +
             (C1589 - C1590) * C4728 + (C1591 - C1592) * C4724 +
             (C5911 - C5912) * C4729 + (C5913 - C5914) * C4725) *
                C30503 * C30658) *
               C1079 +
           ((C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
             (C1433 - C1434) * C4724 + (C5755 - C5756) * C4729 +
             (C5757 - C5758) * C4725) *
                C30503 * C30806 +
            (C5909 * C4727 + C5910 * C4723 + (C5912 - C5911) * C4728 +
             (C5914 - C5913) * C4724 + (C30749 * C5905 - C113 * C5904) * C4729 +
             (C30749 * C5907 - C113 * C5906) * C4725) *
                C30503 * C30658) *
               C30836) *
              C30536)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C30553 * C108 +
          (((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
           C177 * C105) *
              C30571 * C30553 * C109 +
          (C176 * C103 +
           ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
           C178 * C105) *
              C30571 * C30553 * C110 +
          (C177 * C103 +
           ((C157 - C156) * C114 + (C159 - C158) * C30736) * C104 +
           ((C160 - C161) * C114 + (C162 - C163) * C30736) * C105) *
              C30571 * C30553 * C111 +
          (C178 * C103 +
           ((C161 - C160) * C114 + (C163 - C162) * C30736) * C104 +
           ((C30749 * C134 - C113 * C121) * C114 +
            (C30749 * C142 - C113 * C135) * C30736) *
               C105) *
              C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C30873 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C30861 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C291 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C30873 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            ((C351 - C352) * C114 + (C353 - C354) * C30736) * C105) *
               C30571 * C30861 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C292 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C30873 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C113 * C302 - C30749 * C320) * C114 +
             (C113 * C321 - C30749 * C332) * C30736) *
                C105) *
               C30571 * C30861 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C30749 * C122 - C113 * C115) * C114 +
             (C30749 * C136 - C113 * C123) * C30736) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
            C176 * C105) *
               C30571 * C1078 +
           (((C113 * C294 - C30749 * C304) * C114 +
             (C113 * C305 - C30749 * C324) * C30736) *
                C103 +
            ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
            C367 * C105) *
               C30571 * C1079 +
           (((C30749 * C310 - C113 * C297) * C114 +
             (C30749 * C327 - C113 * C311) * C30736) *
                C103 +
            ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
            C368 * C105) *
               C30571 * C30836) *
              C30870 +
          ((((C145 - C144) * C114 + (C147 - C146) * C30736) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C30736) * C104 +
            C177 * C105) *
               C30571 * C1078 +
           (((C336 - C335) * C114 + (C338 - C337) * C30736) * C103 +
            ((C340 - C339) * C114 + (C342 - C341) * C30736) * C104 +
            C672 * C105) *
               C30571 * C1079 +
           (((C344 - C343) * C114 + (C346 - C345) * C30736) * C103 +
            ((C348 - C347) * C114 + (C350 - C349) * C30736) * C104 +
            ((C355 - C356) * C114 + (C357 - C358) * C30736) * C105) *
               C30571 * C30836) *
              C30857 +
          ((C176 * C103 +
            ((C153 - C152) * C114 + (C155 - C154) * C30736) * C104 +
            C178 * C105) *
               C30571 * C1078 +
           (C367 * C103 +
            ((C352 - C351) * C114 + (C354 - C353) * C30736) * C104 +
            ((C666 - C667) * C114 + (C668 - C669) * C30736) * C105) *
               C30571 * C1079 +
           (C368 * C103 +
            ((C356 - C355) * C114 + (C358 - C357) * C30736) * C104 +
            ((C30749 * C322 - C113 * C303) * C114 +
             (C30749 * C333 - C113 * C323) * C30736) *
                C105) *
               C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C114 +
            (C30749 * C136 - C113 * C123) * C30736) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C30736) * C104 +
           C176 * C105) *
              C30571 * C1146 +
          (((C113 * C294 - C30749 * C304) * C114 +
            (C113 * C305 - C30749 * C324) * C30736) *
               C103 +
           ((C335 - C336) * C114 + (C337 - C338) * C30736) * C104 +
           C367 * C105) *
              C30571 * C1147 +
          (((C30749 * C310 - C113 * C297) * C114 +
            (C30749 * C327 - C113 * C311) * C30736) *
               C103 +
           ((C343 - C344) * C114 + (C345 - C346) * C30736) * C104 +
           C368 * C105) *
              C30571 * C1148 +
          (((C113 * C1152 - C30749 * C1158) * C114 +
            (C113 * C1159 - C30749 * C1170) * C30736) *
               C103 +
           ((C113 * C1153 - C30749 * C1160) * C114 +
            (C113 * C1161 - C30749 * C1171) * C30736) *
               C104 +
           ((C113 * C1154 - C30749 * C1162) * C114 +
            (C113 * C1163 - C30749 * C1172) * C30736) *
               C105) *
              C30571 * C1149 +
          (((C30749 * C1164 - C113 * C1155) * C114 +
            (C30749 * C1173 - C113 * C1165) * C30736) *
               C103 +
           ((C30749 * C1166 - C113 * C1156) * C114 +
            (C30749 * C1174 - C113 * C1167) * C30736) *
               C104 +
           ((C30749 * C1168 - C113 * C1157) * C114 +
            (C30749 * C1175 - C113 * C1169) * C30736) *
               C105) *
              C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 +
           (C30749 * C304 - C113 * C294) * C4728 +
           (C30749 * C324 - C113 * C305) * C4724 +
           (C30749 * C310 - C113 * C297) * C4729 +
           (C30749 * C327 - C113 * C311) * C4725) *
              C30503 * C30571 * C30553 * C108 +
          ((C145 - C144) * C4727 + (C147 - C146) * C4723 +
           (C335 - C336) * C4728 + (C337 - C338) * C4724 +
           (C344 - C343) * C4729 + (C346 - C345) * C4725) *
              C30503 * C30571 * C30553 * C109 +
          (C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
           (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
              C30503 * C30571 * C30553 * C110 +
          (C166 * C4727 + C167 * C4723 + (C352 - C351) * C4728 +
           (C354 - C353) * C4724 + (C355 - C356) * C4729 +
           (C357 - C358) * C4725) *
              C30503 * C30571 * C30553 * C111 +
          (C168 * C4727 + C169 * C4723 + (C667 - C666) * C4728 +
           (C669 - C668) * C4724 + (C30749 * C322 - C113 * C303) * C4729 +
           (C30749 * C333 - C113 * C323) * C4725) *
              C30503 * C30571 * C30553 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C30873 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C30861 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C291 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C30873 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C30861 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C292 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C30873 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C30861 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C30749 * C122 - C113 * C115) * C4727 +
            (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
            (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
               C30503 * C30571 * C1078 +
           ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
            (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 +
            (C4849 - C4850) * C4729 + (C4851 - C4852) * C4725) *
               C30503 * C30571 * C1079 +
           (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
            (C4852 - C4851) * C4724 + (C30749 * C1164 - C113 * C1155) * C4729 +
            (C30749 * C1173 - C113 * C1165) * C4725) *
               C30503 * C30571 * C30836) *
              C30870 +
          (((C145 - C144) * C4727 + (C147 - C146) * C4723 +
            (C335 - C336) * C4728 + (C337 - C338) * C4724 + C4853 * C4729 +
            C4854 * C4725) *
               C30503 * C30571 * C1078 +
           ((C336 - C335) * C4727 + (C338 - C337) * C4723 +
            (C343 - C344) * C4728 + (C345 - C346) * C4724 +
            (C1432 - C1431) * C4729 + (C1434 - C1433) * C4725) *
               C30503 * C30571 * C1079 +
           (C4853 * C4727 + C4854 * C4723 + (C1431 - C1432) * C4728 +
            (C1433 - C1434) * C4724 + (C113 * C1156 - C30749 * C1166) * C4729 +
            (C113 * C1167 - C30749 * C1174) * C4725) *
               C30503 * C30571 * C30836) *
              C30857 +
          ((C164 * C4727 + C165 * C4723 + (C340 - C339) * C4728 +
            (C342 - C341) * C4724 + C361 * C4729 + C362 * C4725) *
               C30503 * C30571 * C1078 +
           (C359 * C4727 + C360 * C4723 + (C348 - C347) * C4728 +
            (C350 - C349) * C4724 + (C1435 - C1436) * C4729 +
            (C1437 - C1438) * C4725) *
               C30503 * C30571 * C1079 +
           (C361 * C4727 + C362 * C4723 + (C1436 - C1435) * C4728 +
            (C1438 - C1437) * C4724 + (C30749 * C1168 - C113 * C1157) * C4729 +
            (C30749 * C1175 - C113 * C1169) * C4725) *
               C30503 * C30571 * C30836) *
              C30830)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C30749 * C122 - C113 * C115) * C4727 +
           (C30749 * C136 - C113 * C123) * C4723 + (C4841 - C4842) * C4728 +
           (C4843 - C4844) * C4724 + C4855 * C4729 + C4856 * C4725) *
              C30503 * C30571 * C1146 +
          ((C4842 - C4841) * C4727 + (C4844 - C4843) * C4723 +
           (C4846 - C4845) * C4728 + (C4848 - C4847) * C4724 + C5497 * C4729 +
           C5498 * C4725) *
              C30503 * C30571 * C1147 +
          (C4855 * C4727 + C4856 * C4723 + (C4850 - C4849) * C4728 +
           (C4852 - C4851) * C4724 + C5507 * C4729 + C5508 * C4725) *
              C30503 * C30571 * C1148 +
          (C5497 * C4727 + C5498 * C4723 + (C5500 - C5499) * C4728 +
           (C5502 - C5501) * C4724 + (C5503 - C5504) * C4729 +
           (C5505 - C5506) * C4725) *
              C30503 * C30571 * C1149 +
          (C5507 * C4727 + C5508 * C4723 + (C5504 - C5503) * C4728 +
           (C5506 - C5505) * C4724 + (C30749 * C5492 - C113 * C5489) * C4729 +
           (C30749 * C5495 - C113 * C5493) * C4725) *
              C30503 * C30571 * C1150) *
         C30525) /
            (p * q * std::sqrt(p + q));
}
