/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_sddd_AB_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_0222_12_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C29975 = ae + be;
    const double C29974 = ae * be;
    const double C29973 = zA - zB;
    const double C29982 = 0 * be;
    const double C30015 = p + q;
    const double C30014 = p * q;
    const double C30021 = bs[3];
    const double C30020 = zP - zQ;
    const double C30028 = bs[4];
    const double C30026 = xP - xQ;
    const double C30036 = bs[5];
    const double C30045 = bs[6];
    const double C30056 = bs[7];
    const double C30083 = bs[2];
    const double C30169 = yP - yQ;
    const double C115 = bs[0];
    const double C30991 = xA - xB;
    const double C31009 = ce + de;
    const double C31008 = ce * de;
    const double C31007 = xC - xD;
    const double C31041 = yC - yD;
    const double C31059 = zC - zD;
    const double C31225 = yA - yB;
    const double C29983 = std::pow(C29975, 2);
    const double C31272 = 2 * C29975;
    const double C29990 = 2 * C29974;
    const double C29984 = C29974 * C29973;
    const double C31239 = std::pow(C29973, 2);
    const double C31304 = C29973 * ae;
    const double C30016 = 2 * C30014;
    const double C30023 = std::pow(C30020, 2);
    const double C30079 = C30020 * ae;
    const double C30078 = C30020 * be;
    const double C30038 = std::pow(C30026, 2);
    const double C30179 = std::pow(C30169, 2);
    const double C30992 = std::pow(C30991, 2);
    const double C31271 = C30991 * ae;
    const double C31013 = 2 * C31009;
    const double C31012 = std::pow(C31009, 2);
    const double C31014 = C31007 * de;
    const double C31011 = C31007 * ce;
    const double C31010 = std::pow(C31007, 2);
    const double C31042 = std::pow(C31041, 2);
    const double C31101 = C31041 * de;
    const double C31099 = C31041 * ce;
    const double C31060 = std::pow(C31059, 2);
    const double C31143 = C31059 * de;
    const double C31141 = C31059 * ce;
    const double C31226 = std::pow(C31225, 2);
    const double C31303 = C31225 * ae;
    const double C29985 = 2 * C29983;
    const double C31307 = std::pow(C31272, -2);
    const double C31305 = std::pow(C31272, -1);
    const double C31240 = C31239 * C29974;
    const double C30018 = C30016 / C30015;
    const double C136 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C30016 / C30015, 2) -
          (bs[1] * C30016) / C30015) *
         C29974) /
        C29983;
    const double C116 = -(C30026 * bs[1] * C30016) / C30015;
    const double C301 = -(C30169 * bs[1] * C30016) / C30015;
    const double C502 = -(C30020 * bs[1] * C30016) / C30015;
    const double C30030 = C30023 * C30028;
    const double C30039 = C30023 * C30036;
    const double C30047 = C30023 * C30045;
    const double C30059 = C30023 * C30056;
    const double C30087 = C30021 * C30079;
    const double C30093 = C30028 * C30079;
    const double C30101 = C30036 * C30079;
    const double C30116 = C30045 * C30079;
    const double C30143 = C30056 * C30079;
    const double C123 = (-(bs[1] * C30079 * C30016) / C30015) / C29975;
    const double C30086 = C30021 * C30078;
    const double C30091 = C30028 * C30078;
    const double C30099 = C30036 * C30078;
    const double C30112 = C30045 * C30078;
    const double C30137 = C30056 * C30078;
    const double C122 = (-(bs[1] * C30078 * C30016) / C30015) / C29975;
    const double C30993 = C30992 * C29974;
    const double C31026 = std::pow(C31013, -1);
    const double C31280 = std::pow(C31013, -2);
    const double C31027 = 2 * C31012;
    const double C31284 = C31012 * C31013;
    const double C31283 = 4 * C31012;
    const double C31273 = std::pow(C31011, 2);
    const double C31015 = C31010 * C31008;
    const double C31043 = C31042 * C31008;
    const double C31285 = std::pow(C31099, 2);
    const double C31061 = C31060 * C31008;
    const double C31287 = std::pow(C31141, 2);
    const double C31227 = C31226 * C29974;
    const double C31241 = C31240 / C29975;
    const double C30022 = -C30018;
    const double C30029 = std::pow(C30018, 4);
    const double C30046 = std::pow(C30018, 6);
    const double C30082 = std::pow(C30018, 2);
    const double C137 = ((xP - xQ) *
                         (bs[2] * std::pow(C30018, 2) +
                          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C30018, 3)) *
                         C29974) /
                        C29983;
    const double C30994 = C30993 / C29975;
    const double C31317 = 4 * C31284;
    const double C31316 = C31009 * C31283;
    const double C31016 = C31015 / C31009;
    const double C31044 = C31043 / C31009;
    const double C31062 = C31061 / C31009;
    const double C31228 = C31227 / C29975;
    const double C31242 = -C31241;
    const double C30024 = std::pow(C30022, 3);
    const double C30037 = std::pow(C30022, 5);
    const double C30057 = std::pow(C30022, 7);
    const double C30031 = C30030 * C30029;
    const double C30035 = C30028 * C30029;
    const double C30095 = C30029 * C30093;
    const double C30094 = C30029 * C30091;
    const double C30048 = C30047 * C30046;
    const double C30055 = C30045 * C30046;
    const double C30122 = C30046 * C30116;
    const double C30118 = C30046 * C30112;
    const double C30085 = C30083 * C30082;
    const double C124 = (C30026 * C30082 * C30083 * C30078) / C29975;
    const double C125 = (C30026 * C30082 * C30083 * C30079) / C29975;
    const double C313 = (C30169 * C30082 * C30083 * C30078) / C29975;
    const double C314 = (C30169 * C30082 * C30083 * C30079) / C29975;
    const double C514 = (C30020 * C30082 * C30083 * C30078) / C29975 -
                        (be * bs[1] * C30016) / (C30015 * C29975);
    const double C515 = (C30020 * C30082 * C30083 * C30079) / C29975 -
                        (ae * bs[1] * C30016) / (C30015 * C29975);
    const double C30995 = -C30994;
    const double C31017 = -C31016;
    const double C31045 = -C31044;
    const double C31063 = -C31062;
    const double C31229 = -C31228;
    const double C31243 = std::exp(C31242);
    const double C30027 = C30021 * C30024;
    const double C30089 = C30024 * C30087;
    const double C30088 = C30024 * C30086;
    const double C138 =
        ((bs[2] * std::pow(C30018, 2) + C30023 * C30021 * C30024) * C29974 +
         (C30021 * C30024 + C30023 * bs[4] * std::pow(C30018, 4)) * C29974 *
             std::pow(xP - xQ, 2)) /
        C29983;
    const double C331 =
        ((yP - yQ) * (bs[2] * std::pow(C30018, 2) + C30023 * C30021 * C30024) *
         C29974) /
        C29983;
    const double C532 =
        (ae * C30082 * C30083 * C30078 + be * C30082 * C30083 * C30079 +
         C30020 * (C30083 * C30082 + C30023 * C30021 * C30024) * C29974) /
        C29983;
    const double C30040 = C30039 * C30037;
    const double C30044 = C30036 * C30037;
    const double C30104 = C30037 * C30101;
    const double C30102 = C30037 * C30099;
    const double C30060 = C30059 * C30057;
    const double C30149 = C30057 * C30143;
    const double C30145 = C30057 * C30137;
    const double C30100 = C30035 * C30038;
    const double C30113 = C30026 * C30035;
    const double C30199 = C30035 * C30179;
    const double C30256 = C30035 * ae;
    const double C30254 = C30035 * C30023;
    const double C30253 = C30020 * C30035;
    const double C30252 = C30035 * be;
    const double C30331 = C30169 * C30035;
    const double C30097 = C30026 * C30095;
    const double C30193 = C30169 * C30095;
    const double C30243 = C30020 * C30095;
    const double C30249 = be * C30095;
    const double C30096 = C30026 * C30094;
    const double C30191 = C30169 * C30094;
    const double C30240 = C30020 * C30094;
    const double C30248 = ae * C30094;
    const double C30140 = C30055 * C30038;
    const double C30397 = C30055 * C30179;
    const double C30483 = C30026 * C30055;
    const double C30576 = C30055 * ae;
    const double C30570 = C30055 * C30023;
    const double C30569 = C30020 * C30055;
    const double C30568 = C30055 * be;
    const double C30695 = C30169 * C30055;
    const double C30125 = C30122 * C30038;
    const double C30142 = C30026 * C30122;
    const double C30380 = C30122 * C30179;
    const double C30399 = C30169 * C30122;
    const double C30527 = C30020 * C30122;
    const double C30563 = be * C30122;
    const double C30123 = C30118 * C30038;
    const double C30136 = C30026 * C30118;
    const double C30376 = C30118 * C30179;
    const double C30393 = C30169 * C30118;
    const double C30521 = C30020 * C30118;
    const double C30562 = ae * C30118;
    const double C117 = C30085 * C30038 - (bs[1] * C30016) / C30015;
    const double C300 = C30169 * C30026 * C30085;
    const double C302 = C30085 * C30179 - (bs[1] * C30016) / C30015;
    const double C501 = C30020 * C30026 * C30085;
    const double C503 = C30085 * C30023 - (bs[1] * C30016) / C30015;
    const double C962 = C30020 * C30169 * C30085;
    const double C30996 = std::exp(C30995);
    const double C31018 = std::exp(C31017);
    const double C31046 = std::exp(C31045);
    const double C31064 = std::exp(C31063);
    const double C31230 = std::exp(C31229);
    const double C147 = C31243 * C137;
    const double C29986 = C29984 * C31243;
    const double C113 = -(2 * ae * be * (zA - zB) * C31243) / (ae + be);
    const double C114 =
        -((C31243 - (C29973 * 2 * C29974 * C29973 * C31243) / C29975) * 2 *
          C29974) /
        C29975;
    const double C31338 = C31243 * C31304;
    const double C9076 =
        (C31243 * std::pow(C31304, 2)) / C29983 + C31243 / C31272;
    const double C9078 = C31307 * C31243;
    const double C18729 = C31305 * C31243;
    const double C30032 = C30027 + C30031;
    const double C30092 = C30026 * C30027;
    const double C30192 = C30169 * C30027;
    const double C30244 = C30027 * ae;
    const double C30242 = C30020 * C30027;
    const double C30241 = C30027 * be;
    const double C118 =
        2 * C30026 * C30085 + C30026 * (C30085 + C30027 * C30038);
    const double C299 = C30169 * (C30085 + C30027 * C30038);
    const double C500 = C30020 * (C30085 + C30027 * C30038);
    const double C1192 =
        2 * C30169 * C30085 + C30169 * (C30085 + C30027 * C30179);
    const double C1329 = C30020 * (C30085 + C30027 * C30179);
    const double C2052 =
        2 * C30020 * C30085 + C30020 * (C30085 + C30027 * C30023);
    const double C127 = (C30082 * C30083 * C30079 + C30089 * C30038) / C29975;
    const double C129 =
        (2 * C30026 * C30089 + C30026 * (C30089 + C30095 * C30038)) / C29975;
    const double C310 = (C30169 * (C30089 + C30095 * C30038)) / C29975;
    const double C312 = (C30169 * C30026 * C30089) / C29975;
    const double C316 = (C30082 * C30083 * C30079 + C30089 * C30179) / C29975;
    const double C511 = (C30020 * (C30089 + C30095 * C30038) +
                         (C30085 + C30027 * C30038) * ae) /
                        C29975;
    const double C513 =
        (C30020 * C30026 * C30089 + C30026 * C30085 * ae) / C29975;
    const double C517 =
        (C30082 * C30083 * C30079 + C30020 * (C30020 * C30089 + C30085 * ae) +
         C30020 * C30085 * ae) /
        C29975;
    const double C968 =
        (C30020 * C30169 * C30089 + C30169 * C30085 * ae) / C29975;
    const double C1201 =
        (2 * C30169 * C30089 + C30169 * (C30089 + C30095 * C30179)) / C29975;
    const double C1344 = (C30020 * (C30089 + C30095 * C30179) +
                          (C30085 + C30027 * C30179) * ae) /
                         C29975;
    const double C126 = (C30082 * C30083 * C30078 + C30088 * C30038) / C29975;
    const double C128 =
        (2 * C30026 * C30088 + C30026 * (C30088 + C30094 * C30038)) / C29975;
    const double C309 = (C30169 * (C30088 + C30094 * C30038)) / C29975;
    const double C311 = (C30169 * C30026 * C30088) / C29975;
    const double C315 = (C30082 * C30083 * C30078 + C30088 * C30179) / C29975;
    const double C510 = (C30020 * (C30088 + C30094 * C30038) +
                         (C30085 + C30027 * C30038) * be) /
                        C29975;
    const double C512 =
        (C30020 * C30026 * C30088 + C30026 * C30085 * be) / C29975;
    const double C516 =
        (C30082 * C30083 * C30078 + C30020 * (C30020 * C30088 + C30085 * be) +
         C30020 * C30085 * be) /
        C29975;
    const double C967 =
        (C30020 * C30169 * C30088 + C30169 * C30085 * be) / C29975;
    const double C1200 =
        (2 * C30169 * C30088 + C30169 * (C30088 + C30094 * C30179)) / C29975;
    const double C1343 = (C30020 * (C30088 + C30094 * C30179) +
                          (C30085 + C30027 * C30179) * be) /
                         C29975;
    const double C151 = C31243 * C138;
    const double C4911 = C31243 * C331;
    const double C30041 = C30035 + C30040;
    const double C30049 = C30044 + C30048;
    const double C30114 = C30044 * C30038;
    const double C30139 = C30026 * C30044;
    const double C30378 = C30044 * C30179;
    const double C30396 = C30169 * C30044;
    const double C30528 = C30044 * ae;
    const double C30524 = C30044 * C30023;
    const double C30523 = C30020 * C30044;
    const double C30522 = C30044 * be;
    const double C30106 = C30104 * C30038;
    const double C30115 = C30026 * C30104;
    const double C30200 = C30104 * C30179;
    const double C30255 = C30020 * C30104;
    const double C30332 = C30169 * C30104;
    const double C30518 = be * C30104;
    const double C30105 = C30102 * C30038;
    const double C30111 = C30026 * C30102;
    const double C30198 = C30102 * C30179;
    const double C30251 = C30020 * C30102;
    const double C30330 = C30169 * C30102;
    const double C30517 = ae * C30102;
    const double C30061 = C30055 + C30060;
    const double C30152 = C30149 * C30038;
    const double C30400 = C30149 * C30179;
    const double C30485 = C30026 * C30149;
    const double C30575 = C30020 * C30149;
    const double C30698 = C30169 * C30149;
    const double C30150 = C30145 * C30038;
    const double C30394 = C30145 * C30179;
    const double C30481 = C30026 * C30145;
    const double C30567 = C30020 * C30145;
    const double C30694 = C30169 * C30145;
    const double C30103 = C30027 + C30100;
    const double C30119 = 2 * C30113;
    const double C30188 = C30169 * C30113;
    const double C30236 = C30113 * ae;
    const double C30234 = C30020 * C30113;
    const double C30233 = C30113 * be;
    const double C30202 = C30027 + C30199;
    const double C30260 = C30027 + C30254;
    const double C30262 = C30253 * ae;
    const double C30259 = C30253 * be;
    const double C30525 = 2 * C30253;
    const double C30337 = C30331 * ae;
    const double C30335 = C30020 * C30331;
    const double C30334 = C30331 * be;
    const double C30377 = 2 * C30331;
    const double C318 = (C30026 * C30089 + C30097 * C30179) / C29975;
    const double C317 = (C30026 * C30088 + C30096 * C30179) / C29975;
    const double C30257 = C30248 + C30249;
    const double C30147 = C30044 + C30140;
    const double C30404 = C30044 + C30397;
    const double C30487 = C30483 * C30179;
    const double C30623 = C30169 * C30483;
    const double C30659 = C30483 * ae;
    const double C30655 = C30483 * C30023;
    const double C30654 = C30020 * C30483;
    const double C30653 = C30483 * be;
    const double C30582 = C30044 + C30570;
    const double C30584 = C30569 * ae;
    const double C30581 = C30569 * be;
    const double C30707 = C30695 * ae;
    const double C30705 = C30695 * C30023;
    const double C30704 = C30020 * C30695;
    const double C30703 = C30695 * be;
    const double C30128 = C30104 + C30125;
    const double C30148 = 2 * C30142;
    const double C30207 = C30142 * C30179;
    const double C30278 = C30020 * C30142;
    const double C30344 = C30169 * C30142;
    const double C30649 = be * C30142;
    const double C30383 = C30104 + C30380;
    const double C30405 = 2 * C30399;
    const double C30441 = C30020 * C30399;
    const double C30691 = be * C30399;
    const double C30126 = C30102 + C30123;
    const double C30144 = 2 * C30136;
    const double C30205 = C30136 * C30179;
    const double C30274 = C30020 * C30136;
    const double C30342 = C30169 * C30136;
    const double C30648 = ae * C30136;
    const double C30381 = C30102 + C30376;
    const double C30401 = 2 * C30393;
    const double C30437 = C30020 * C30393;
    const double C30690 = ae * C30393;
    const double C30579 = C30562 + C30563;
    const double C31306 = C30996 * C31271;
    const double C103 =
        (C30996 * std::pow(C31271, 2)) / C29983 + C30996 / C31272;
    const double C105 = C31307 * C30996;
    const double C13232 = C31305 * C30996;
    const double C31020 = C31018 * C31011;
    const double C31019 = C31018 / C31013;
    const double C31029 = C31026 * C31018;
    const double C31276 = C31018 * C31014;
    const double C31314 = C31280 * C31018;
    const double C31308 = C31018 * C31273;
    const double C31100 = C31046 / C31013;
    const double C31102 = C31046 * C31099;
    const double C31109 = C31026 * C31046;
    const double C31291 = C31046 * C31101;
    const double C31320 = C31280 * C31046;
    const double C31318 = C31046 * C31285;
    const double C31142 = C31064 / C31013;
    const double C31144 = C31064 * C31141;
    const double C31151 = C31026 * C31064;
    const double C31297 = C31064 * C31143;
    const double C31323 = C31280 * C31064;
    const double C31321 = C31064 * C31287;
    const double C31337 = C31230 * C31303;
    const double C4793 =
        (C31230 * std::pow(C31303, 2)) / C29983 + C31230 / C31272;
    const double C4795 = C31307 * C31230;
    const double C13230 = C31305 * C31230;
    const double C29989 = 2 * C29986;
    const double C9083 = ((0 * ae) / C29975 - C29986 / C29983) / (2 * C29975) +
                         (0 * ae) / C29975;
    const double C18732 = (0 * ae) / C29975 - C29986 / C29983;
    const double C146 = C113 * C125;
    const double C144 = C113 * C124;
    const double C4910 = C113 * C314;
    const double C4908 = C113 * C313;
    const double C149 = C114 * C117;
    const double C145 = C114 * C116;
    const double C345 = C114 * C300;
    const double C546 = C114 * C501;
    const double C4913 = C114 * C302;
    const double C4909 = C114 * C301;
    const double C5386 = C114 * C962;
    const double C9077 = (2 * C31305 * C31338) / C29975;
    const double C18728 = C31338 / C29975;
    const double C30033 = C30032 * C29974;
    const double C518 =
        (C30026 * C30088 + C30020 * (C30020 * C30096 + C30092 * be) +
         C30020 * C30092 * be) /
        C29975;
    const double C519 =
        (C30026 * C30089 + C30020 * (C30020 * C30097 + C30092 * ae) +
         C30020 * C30092 * ae) /
        C29975;
    const double C969 =
        (C30020 * C30169 * C30096 + C30169 * C30092 * be) / C29975;
    const double C970 =
        (C30020 * C30169 * C30097 + C30169 * C30092 * ae) / C29975;
    const double C303 = C30026 * C30085 + C30092 * C30179;
    const double C504 = C30026 * C30085 + C30092 * C30023;
    const double C963 = C30020 * C30169 * C30092;
    const double C1191 =
        2 * C30169 * C30092 + C30169 * (C30092 + C30113 * C30179);
    const double C1328 = C30020 * (C30092 + C30113 * C30179);
    const double C2051 =
        2 * C30020 * C30092 + C30020 * (C30092 + C30113 * C30023);
    const double C1337 =
        (C30169 * C30088 + C30020 * (C30020 * C30191 + C30192 * be) +
         C30020 * C30192 * be) /
        C29975;
    const double C1338 =
        (C30169 * C30089 + C30020 * (C30020 * C30193 + C30192 * ae) +
         C30020 * C30192 * ae) /
        C29975;
    const double C1326 = C30169 * C30085 + C30192 * C30023;
    const double C2460 =
        2 * C30020 * C30192 + C30020 * (C30192 + C30331 * C30023);
    const double C30246 = C30243 + C30244;
    const double C30245 = C30240 + C30241;
    const double C153 = C114 * C118;
    const double C341 = C114 * C299;
    const double C542 = C114 * C500;
    const double C4917 = C114 * C1192;
    const double C5382 = C114 * C1329;
    const double C150 = C113 * C127;
    const double C154 = C113 * C129;
    const double C342 = C113 * C310;
    const double C346 = C113 * C312;
    const double C4914 = C113 * C316;
    const double C543 = C113 * C511;
    const double C547 = C113 * C513;
    const double C5387 = C113 * C968;
    const double C4918 = C113 * C1201;
    const double C5383 = C113 * C1344;
    const double C148 = C113 * C126;
    const double C152 = C113 * C128;
    const double C340 = C113 * C309;
    const double C344 = C113 * C311;
    const double C4912 = C113 * C315;
    const double C541 = C113 * C510;
    const double C545 = C113 * C512;
    const double C5385 = C113 * C967;
    const double C4916 = C113 * C1200;
    const double C5381 = C113 * C1343;
    const double C30042 = C30041 * C29974;
    const double C30050 = C30049 * C29974;
    const double C30120 = C30035 + C30114;
    const double C30146 = 2 * C30139;
    const double C30206 = C30139 * C30179;
    const double C30279 = C30139 * ae;
    const double C30277 = C30139 * C30023;
    const double C30276 = C30020 * C30139;
    const double C30275 = C30139 * be;
    const double C30343 = C30169 * C30139;
    const double C30382 = C30035 + C30378;
    const double C30403 = 2 * C30396;
    const double C30442 = C30396 * ae;
    const double C30440 = C30396 * C30023;
    const double C30439 = C30020 * C30396;
    const double C30438 = C30396 * be;
    const double C30534 = C30527 + C30528;
    const double C30533 = C30035 + C30524;
    const double C30535 = C30523 * ae;
    const double C30532 = C30523 * be;
    const double C30571 = 2 * C30523;
    const double C30531 = C30521 + C30522;
    const double C30108 = C30095 + C30106;
    const double C30121 = 2 * C30115;
    const double C30189 = C30169 * C30115;
    const double C30235 = C30020 * C30115;
    const double C30272 = be * C30115;
    const double C1199 =
        (2 * C30169 * C30097 + C30169 * (C30097 + C30115 * C30179)) / C29975;
    const double C1342 = (C30020 * (C30097 + C30115 * C30179) +
                          (C30092 + C30113 * C30179) * ae) /
                         C29975;
    const double C30203 = C30095 + C30200;
    const double C30261 = C30255 + C30256;
    const double C30336 = C30020 * C30332;
    const double C30379 = 2 * C30332;
    const double C30435 = be * C30332;
    const double C30107 = C30094 + C30105;
    const double C30117 = 2 * C30111;
    const double C30187 = C30169 * C30111;
    const double C30232 = C30020 * C30111;
    const double C30271 = ae * C30111;
    const double C1198 =
        (2 * C30169 * C30096 + C30169 * (C30096 + C30111 * C30179)) / C29975;
    const double C1341 = (C30020 * (C30096 + C30111 * C30179) +
                          (C30092 + C30113 * C30179) * be) /
                         C29975;
    const double C30201 = C30094 + C30198;
    const double C30258 = C30251 + C30252;
    const double C30333 = C30020 * C30330;
    const double C30375 = 2 * C30330;
    const double C30434 = ae * C30330;
    const double C30530 = C30517 + C30518;
    const double C30062 = C30061 * C29974;
    const double C30155 = C30122 + C30152;
    const double C30406 = C30122 + C30400;
    const double C30488 = C30485 * C30179;
    const double C30624 = C30169 * C30485;
    const double C30658 = C30020 * C30485;
    const double C30583 = C30575 + C30576;
    const double C30706 = C30020 * C30698;
    const double C30153 = C30118 + C30150;
    const double C30402 = C30118 + C30394;
    const double C30486 = C30481 * C30179;
    const double C30622 = C30169 * C30481;
    const double C30652 = C30020 * C30481;
    const double C30580 = C30567 + C30568;
    const double C30702 = C30020 * C30694;
    const double C119 = 3 * (C30085 + C30027 * C30038) +
                        C30026 * (2 * C30092 + C30026 * C30103);
    const double C304 = C30085 + C30027 * C30038 + C30103 * C30179;
    const double C305 = C30169 * (2 * C30092 + C30026 * C30103);
    const double C505 = C30085 + C30027 * C30038 + C30103 * C30023;
    const double C506 = C30020 * (2 * C30092 + C30026 * C30103);
    const double C964 = C30020 * C30169 * C30103;
    const double C1325 = C30169 * C30092 + C30188 * C30023;
    const double C1193 = 3 * (C30085 + C30027 * C30179) +
                         C30169 * (2 * C30192 + C30169 * C30202);
    const double C1330 = C30085 + C30027 * C30179 + C30202 * C30023;
    const double C1748 = C30020 * (2 * C30192 + C30169 * C30202);
    const double C2053 = 3 * (C30085 + C30027 * C30023) +
                         C30020 * (2 * C30242 + C30020 * C30260);
    const double C350 = C113 * C318;
    const double C348 = C113 * C317;
    const double C30151 = C30026 * C30147;
    const double C30213 = C30147 * C30179;
    const double C30302 = C30147 * ae;
    const double C30300 = C30147 * C30023;
    const double C30299 = C30020 * C30147;
    const double C30298 = C30147 * be;
    const double C30355 = C30169 * C30147;
    const double C30408 = C30169 * C30404;
    const double C30465 = C30404 * ae;
    const double C30463 = C30404 * C30023;
    const double C30462 = C30020 * C30404;
    const double C30461 = C30404 * be;
    const double C30490 = C30139 + C30487;
    const double C30632 = C30623 * ae;
    const double C30630 = C30623 * C30023;
    const double C30629 = C30020 * C30623;
    const double C30628 = C30623 * be;
    const double C30664 = C30139 + C30655;
    const double C30666 = C30654 * ae;
    const double C30663 = C30654 * be;
    const double C30592 = C30582 * ae;
    const double C30590 = C30020 * C30582;
    const double C30589 = C30582 * be;
    const double C30712 = C30396 + C30705;
    const double C30714 = C30704 * ae;
    const double C30711 = C30704 * be;
    const double C30130 = C30026 * C30128;
    const double C30141 = 3 * C30128;
    const double C30185 = C30169 * C30128;
    const double C30227 = C30020 * C30128;
    const double C30295 = be * C30128;
    const double C30210 = C30115 + C30207;
    const double C30348 = C30020 * C30344;
    const double C30484 = 2 * C30344;
    const double C30620 = be * C30344;
    const double C30386 = C30169 * C30383;
    const double C30398 = 3 * C30383;
    const double C30429 = C30020 * C30383;
    const double C30458 = be * C30383;
    const double C30129 = C30026 * C30126;
    const double C30135 = 3 * C30126;
    const double C30183 = C30169 * C30126;
    const double C30224 = C30020 * C30126;
    const double C30294 = ae * C30126;
    const double C30208 = C30111 + C30205;
    const double C30345 = C30020 * C30342;
    const double C30480 = 2 * C30342;
    const double C30619 = ae * C30342;
    const double C30661 = C30648 + C30649;
    const double C30384 = C30169 * C30381;
    const double C30392 = 3 * C30381;
    const double C30426 = C30020 * C30381;
    const double C30457 = ae * C30381;
    const double C30700 = C30690 + C30691;
    const double C104 = (2 * C31305 * C31306) / C29975;
    const double C13231 = C31306 / C29975;
    const double C31021 = C31020 * C31014;
    const double C31028 = C31020 / C31027;
    const double C31277 = C31026 * C31020;
    const double C31275 = C31020 / C31009;
    const double C296 = (C31018 * std::pow(C31014, 2)) / C31012 + C31019;
    const double C31030 = C31029 * C31014;
    const double C31281 = C31011 * C31029;
    const double C31279 = 2 * C31029;
    const double C31324 = C31029 / C31283;
    const double C112 = C31029 / C31317;
    const double C2941 = C31029 / C31013;
    const double C31310 = C31276 / C31009;
    const double C297 = (-2 * C31026 * C31276) / C31009;
    const double C31339 = C31308 / C31012;
    const double C1116 = (C31046 * std::pow(C31101, 2)) / C31012 + C31100;
    const double C31103 = C31102 * C31101;
    const double C31108 = C31102 / C31027;
    const double C31289 = C31102 / C31009;
    const double C31286 = C31026 * C31102;
    const double C31110 = C31109 * C31101;
    const double C31295 = C31099 * C31109;
    const double C31294 = 2 * C31109;
    const double C31330 = C31109 / C31283;
    const double C1188 = C31109 / C31317;
    const double C2938 = C31109 / C31013;
    const double C31326 = C31291 / C31009;
    const double C1117 = (-2 * C31026 * C31291) / C31009;
    const double C31344 = C31318 / C31012;
    const double C1870 = (C31064 * std::pow(C31143, 2)) / C31012 + C31142;
    const double C31145 = C31144 * C31143;
    const double C31150 = C31144 / C31027;
    const double C31290 = C31144 / C31009;
    const double C31288 = C31026 * C31144;
    const double C31152 = C31151 * C31143;
    const double C31301 = C31141 * C31151;
    const double C31300 = 2 * C31151;
    const double C31336 = C31151 / C31283;
    const double C2049 = C31151 / C31317;
    const double C3840 = C31151 / C31013;
    const double C31332 = C31297 / C31009;
    const double C1871 = (-2 * C31026 * C31297) / C31009;
    const double C31346 = C31321 / C31012;
    const double C4794 = (2 * C31305 * C31337) / C29975;
    const double C13229 = C31337 / C29975;
    const double C29991 = C29973 * C29989;
    const double C18745 = C18732 * C511;
    const double C18743 = C18732 * C510;
    const double C18741 = C18732 * C513;
    const double C18739 = C18732 * C512;
    const double C24619 = C18732 * C1344;
    const double C24617 = C18732 * C1343;
    const double C24615 = C18732 * C968;
    const double C24613 = C18732 * C967;
    const double C164 = C144 - C145;
    const double C4920 = C4908 - C4909;
    const double C18750 = C18728 * C138;
    const double C18738 = C18728 * C137;
    const double C24612 = C18728 * C331;
    const double C9079 =
        (((0 - (C29973 * C29982) / C29975) * ae) / C29975 - (0 * be) / C29985) /
            (2 * C29975) +
        ((C29973 * (((C31243 - (C29973 * 2 * C29986) / C29975) * ae) / C29975 -
                    C29982 / C29985) +
          C18728) *
         ae) /
            C29975 +
        (0 * ae) / C29975 - C29986 / C29983;
    const double C139 =
        (2 * C30026 * C30033 +
         C30026 * (C30033 +
                   (C30028 * C30029 + C30023 * bs[5] * std::pow(C30022, 5)) *
                       C29974 * std::pow(C30026, 2))) /
        C29983;
    const double C330 = ((yP - yQ) * C30026 * C30033) / C29983;
    const double C332 =
        ((bs[2] * std::pow(C30018, 2) + C30023 * C30021 * C30024) * C29974 +
         C30033 * std::pow(yP - yQ, 2)) /
        C29983;
    const double C531 =
        (ae * C30026 * C30024 * C30021 * C30078 +
         be * C30026 * C30024 * C30021 * C30079 + C30020 * C30026 * C30033) /
        C29983;
    const double C533 =
        ((C30085 + C30023 * C30021 * C30024) * C29974 +
         ae * (C30020 * C30088 + C30085 * be) +
         be * (C30020 * C30089 + C30085 * ae) +
         C30020 * (ae * C30088 + be * C30089 + C30020 * C30033)) /
        C29983;
    const double C977 = (ae * C30169 * C30088 + be * C30169 * C30089 +
                         C30020 * C30169 * C30033) /
                        C29983;
    const double C549 = C113 * C518;
    const double C19139 = C18732 * C518;
    const double C551 = C113 * C519;
    const double C19141 = C18732 * C519;
    const double C983 = C113 * C969;
    const double C18937 = C18732 * C969;
    const double C985 = C113 * C970;
    const double C18939 = C18732 * C970;
    const double C349 = C114 * C303;
    const double C550 = C114 * C504;
    const double C984 = C114 * C963;
    const double C1474 = C114 * C1191;
    const double C1640 = C114 * C1328;
    const double C2352 = C114 * C2051;
    const double C5711 = C113 * C1337;
    const double C25237 = C18732 * C1337;
    const double C5713 = C113 * C1338;
    const double C25239 = C18732 * C1338;
    const double C5712 = C114 * C1326;
    const double C6774 = C114 * C2460;
    const double C2061 = (2 * (C30020 * C30089 + C30085 * ae) +
                          C30020 * (C30089 + C30020 * C30246 + C30242 * ae) +
                          (C30085 + C30027 * C30023) * ae) /
                         C29975;
    const double C2060 = (2 * (C30020 * C30088 + C30085 * be) +
                          C30020 * (C30088 + C30020 * C30245 + C30242 * be) +
                          (C30085 + C30027 * C30023) * be) /
                         C29975;
    const double C165 = C148 - C149;
    const double C166 = C152 - C153;
    const double C364 = C340 - C341;
    const double C365 = C344 - C345;
    const double C4921 = C4912 - C4913;
    const double C565 = C541 - C542;
    const double C566 = C545 - C546;
    const double C5390 = C5385 - C5386;
    const double C4922 = C4916 - C4917;
    const double C5389 = C5381 - C5382;
    const double C30176 = C30026 * C30042;
    const double C30250 = C30020 * C30042;
    const double C30329 = C30169 * C30042;
    const double C140 =
        (3 * (C30033 + C30042 * C30038) +
         C30026 * (2 * C30026 * C30042 +
                   C30026 * (C30042 + (C30036 * C30037 +
                                       C30023 * bs[6] * std::pow(C30018, 6)) *
                                          C29974 * C30038))) /
        C29983;
    const double C329 = ((yP - yQ) * (C30033 + C30042 * C30038)) / C29983;
    const double C333 =
        (C30026 * C30033 + C30026 * C30042 * std::pow(yP - yQ, 2)) / C29983;
    const double C530 =
        (ae * (C30024 * C30021 * C30078 + C30029 * C30028 * C30078 * C30038) +
         be * (C30024 * C30021 * C30079 + C30029 * C30028 * C30079 * C30038) +
         C30020 * (C30033 + C30042 * C30038)) /
        C29983;
    const double C534 =
        (C30026 * C30033 + ae * (C30020 * C30096 + C30092 * be) +
         be * (C30020 * C30097 + C30092 * ae) +
         C30020 * (ae * C30096 + be * C30097 + C30020 * C30026 * C30042)) /
        C29983;
    const double C978 = (ae * C30169 * C30096 + be * C30169 * C30097 +
                         C30020 * C30169 * C30026 * C30042) /
                        C29983;
    const double C1210 = (2 * C30169 * C30033 +
                          C30169 * (C30033 + C30042 * std::pow(C30169, 2))) /
                         C29983;
    const double C1353 =
        (C30169 * C30033 + ae * (C30020 * C30191 + C30192 * be) +
         be * (C30020 * C30193 + C30192 * ae) +
         C30020 * (ae * C30191 + be * C30193 + C30020 * C30169 * C30042)) /
        C29983;
    const double C1356 =
        (ae * (C30088 + C30094 * C30179) + be * (C30089 + C30095 * C30179) +
         C30020 * (C30033 + C30042 * C30179)) /
        C29983;
    const double C2070 =
        (2 * (ae * C30088 + be * C30089 + C30020 * C30033) +
         ae * (C30088 + C30020 * C30245 + C30242 * be) +
         be * (C30089 + C30020 * C30246 + C30242 * ae) +
         C30020 * (C30033 + ae * C30245 + be * C30246 +
                   C30020 * (ae * C30094 + be * C30095 + C30020 * C30042))) /
        C29983;
    const double C30051 = C30050 * C30038;
    const double C30054 = C30026 * C30050;
    const double C30365 = C30050 * C30179;
    const double C30368 = C30169 * C30050;
    const double C30519 = C30020 * C30050;
    const double C1211 =
        (3 * (C30033 + C30042 * C30179) +
         C30169 * (2 * C30169 * C30042 + C30169 * (C30042 + C30050 * C30179))) /
        C29983;
    const double C30124 = C30026 * C30120;
    const double C30138 = 3 * C30120;
    const double C30184 = C30169 * C30120;
    const double C30228 = C30120 * ae;
    const double C30226 = C30020 * C30120;
    const double C30225 = C30120 * be;
    const double C1190 =
        2 * C30169 * C30103 + C30169 * (C30103 + C30120 * C30179);
    const double C1327 = C30020 * (C30103 + C30120 * C30179);
    const double C2050 =
        2 * C30020 * C30103 + C30020 * (C30103 + C30120 * C30023);
    const double C30209 = C30113 + C30206;
    const double C30284 = C30278 + C30279;
    const double C30283 = C30113 + C30277;
    const double C30285 = C30276 * ae;
    const double C30282 = C30276 * be;
    const double C30656 = 2 * C30276;
    const double C30281 = C30274 + C30275;
    const double C30349 = C30343 * ae;
    const double C30347 = C30020 * C30343;
    const double C30346 = C30343 * be;
    const double C30482 = 2 * C30343;
    const double C2461 =
        2 * C30020 * C30188 + C30020 * (C30188 + C30343 * C30023);
    const double C30385 = C30169 * C30382;
    const double C30395 = 3 * C30382;
    const double C30430 = C30382 * ae;
    const double C30428 = C30020 * C30382;
    const double C30427 = C30382 * be;
    const double C6395 =
        2 * C30020 * C30202 + C30020 * (C30202 + C30382 * C30023);
    const double C30447 = C30441 + C30442;
    const double C30446 = C30331 + C30440;
    const double C30448 = C30439 * ae;
    const double C30445 = C30439 * be;
    const double C30696 = 2 * C30439;
    const double C30444 = C30437 + C30438;
    const double C30541 = C30020 * C30534;
    const double C30574 = 2 * C30534;
    const double C30561 = be * C30534;
    const double C30542 = C30533 * ae;
    const double C30540 = C30020 * C30533;
    const double C30539 = C30533 * be;
    const double C30572 = 3 * C30533;
    const double C30538 = C30020 * C30531;
    const double C30566 = 2 * C30531;
    const double C30560 = ae * C30531;
    const double C131 = (3 * (C30089 + C30095 * C30038) +
                         C30026 * (2 * C30097 + C30026 * C30108)) /
                        C29975;
    const double C320 = (C30089 + C30095 * C30038 + C30108 * C30179) / C29975;
    const double C322 = (C30169 * (2 * C30097 + C30026 * C30108)) / C29975;
    const double C521 =
        (C30089 + C30095 * C30038 + C30020 * (C30020 * C30108 + C30103 * ae) +
         C30020 * C30103 * ae) /
        C29975;
    const double C523 = (C30020 * (2 * C30097 + C30026 * C30108) +
                         (2 * C30092 + C30026 * C30103) * ae) /
                        C29975;
    const double C972 =
        (C30020 * C30169 * C30108 + C30169 * C30103 * ae) / C29975;
    const double C1197 =
        (2 * C30169 * C30108 + C30169 * (C30108 + C30128 * C30179)) / C29975;
    const double C1340 = (C30020 * (C30108 + C30128 * C30179) +
                          (C30103 + C30120 * C30179) * ae) /
                         C29975;
    const double C1336 =
        (C30169 * C30097 + C30020 * (C30020 * C30189 + C30188 * ae) +
         C30020 * C30188 * ae) /
        C29975;
    const double C30238 = C30235 + C30236;
    const double C1475 = C113 * C1199;
    const double C1641 = C113 * C1342;
    const double C18951 = C18732 * C1342;
    const double C1203 = (3 * (C30089 + C30095 * C30179) +
                          C30169 * (2 * C30193 + C30169 * C30203)) /
                         C29975;
    const double C1346 =
        (C30089 + C30095 * C30179 + C30020 * (C30020 * C30203 + C30202 * ae) +
         C30020 * C30202 * ae) /
        C29975;
    const double C1752 = (C30020 * (2 * C30193 + C30169 * C30203) +
                          (2 * C30192 + C30169 * C30202) * ae) /
                         C29975;
    const double C30265 = C30020 * C30261;
    const double C30526 = 2 * C30261;
    const double C30516 = be * C30261;
    const double C30339 = C30336 + C30337;
    const double C130 = (3 * (C30088 + C30094 * C30038) +
                         C30026 * (2 * C30096 + C30026 * C30107)) /
                        C29975;
    const double C319 = (C30088 + C30094 * C30038 + C30107 * C30179) / C29975;
    const double C321 = (C30169 * (2 * C30096 + C30026 * C30107)) / C29975;
    const double C520 =
        (C30088 + C30094 * C30038 + C30020 * (C30020 * C30107 + C30103 * be) +
         C30020 * C30103 * be) /
        C29975;
    const double C522 = (C30020 * (2 * C30096 + C30026 * C30107) +
                         (2 * C30092 + C30026 * C30103) * be) /
                        C29975;
    const double C971 =
        (C30020 * C30169 * C30107 + C30169 * C30103 * be) / C29975;
    const double C1196 =
        (2 * C30169 * C30107 + C30169 * (C30107 + C30126 * C30179)) / C29975;
    const double C1339 = (C30020 * (C30107 + C30126 * C30179) +
                          (C30103 + C30120 * C30179) * be) /
                         C29975;
    const double C1335 =
        (C30169 * C30096 + C30020 * (C30020 * C30187 + C30188 * be) +
         C30020 * C30188 * be) /
        C29975;
    const double C30237 = C30232 + C30233;
    const double C30280 = C30271 + C30272;
    const double C1473 = C113 * C1198;
    const double C1639 = C113 * C1341;
    const double C18949 = C18732 * C1341;
    const double C1357 =
        (C30033 + C30042 * C30179 + ae * (C30020 * C30201 + C30202 * be) +
         be * (C30020 * C30203 + C30202 * ae) +
         C30020 * (ae * C30201 + be * C30203 +
                   C30020 * (C30042 + C30050 * C30179))) /
        C29983;
    const double C1757 =
        (ae * (2 * C30191 + C30169 * C30201) +
         be * (2 * C30193 + C30169 * C30203) +
         C30020 * (2 * C30169 * C30042 + C30169 * (C30042 + C30050 * C30179))) /
        C29983;
    const double C1202 = (3 * (C30088 + C30094 * C30179) +
                          C30169 * (2 * C30191 + C30169 * C30201)) /
                         C29975;
    const double C1345 =
        (C30088 + C30094 * C30179 + C30020 * (C30020 * C30201 + C30202 * be) +
         C30020 * C30202 * be) /
        C29975;
    const double C1751 = (C30020 * (2 * C30191 + C30169 * C30201) +
                          (2 * C30192 + C30169 * C30202) * be) /
                         C29975;
    const double C30264 = C30020 * C30258;
    const double C30520 = 2 * C30258;
    const double C30515 = ae * C30258;
    const double C30338 = C30333 + C30334;
    const double C30443 = C30434 + C30435;
    const double C30063 = C30062 * C30038;
    const double C30369 = C30062 * C30179;
    const double C30420 = C30026 * C30062;
    const double C30564 = C30020 * C30062;
    const double C30692 = C30169 * C30062;
    const double C30158 = C30026 * C30155;
    const double C30214 = C30155 * C30179;
    const double C30301 = C30020 * C30155;
    const double C30356 = C30169 * C30155;
    const double C30409 = C30169 * C30406;
    const double C30464 = C30020 * C30406;
    const double C30491 = C30142 + C30488;
    const double C30631 = C30020 * C30624;
    const double C30665 = C30658 + C30659;
    const double C30591 = C30020 * C30583;
    const double C30713 = C30706 + C30707;
    const double C30156 = C30026 * C30153;
    const double C30212 = C30153 * C30179;
    const double C30297 = C30020 * C30153;
    const double C30354 = C30169 * C30153;
    const double C30407 = C30169 * C30402;
    const double C30460 = C30020 * C30402;
    const double C30489 = C30136 + C30486;
    const double C30627 = C30020 * C30622;
    const double C30662 = C30652 + C30653;
    const double C30588 = C30020 * C30580;
    const double C30710 = C30702 + C30703;
    const double C157 = C114 * C119;
    const double C353 = C114 * C304;
    const double C357 = C114 * C305;
    const double C554 = C114 * C505;
    const double C558 = C114 * C506;
    const double C988 = C114 * C964;
    const double C2230 = C114 * C1325;
    const double C5576 = C114 * C1193;
    const double C5716 = C114 * C1330;
    const double C5720 = C114 * C1748;
    const double C30154 = C30146 + C30151;
    const double C30216 = C30120 + C30213;
    const double C30306 = C30120 + C30300;
    const double C30308 = C30299 * ae;
    const double C30305 = C30299 * be;
    const double C30361 = C30355 * ae;
    const double C30359 = C30020 * C30355;
    const double C30358 = C30355 * be;
    const double C30411 = C30403 + C30408;
    const double C30469 = C30382 + C30463;
    const double C30471 = C30462 * ae;
    const double C30468 = C30462 * be;
    const double C30493 = C30169 * C30490;
    const double C30503 = C30490 * ae;
    const double C30501 = C30020 * C30490;
    const double C30500 = C30490 * be;
    const double C30636 = C30343 + C30630;
    const double C30638 = C30629 * ae;
    const double C30635 = C30629 * be;
    const double C30673 = C30664 * ae;
    const double C30671 = C30020 * C30664;
    const double C30670 = C30664 * be;
    const double C30595 = C30571 + C30590;
    const double C30720 = C30712 * ae;
    const double C30718 = C30020 * C30712;
    const double C30717 = C30712 * be;
    const double C30132 = C30121 + C30130;
    const double C1205 = (3 * (C30097 + C30115 * C30179) +
                          C30169 * (2 * C30189 + C30169 * C30210)) /
                         C29975;
    const double C30389 = C30379 + C30386;
    const double C30131 = C30117 + C30129;
    const double C30303 = C30294 + C30295;
    const double C1204 = (3 * (C30096 + C30111 * C30179) +
                          C30169 * (2 * C30187 + C30169 * C30208)) /
                         C29975;
    const double C30625 = C30619 + C30620;
    const double C30387 = C30375 + C30384;
    const double C30466 = C30457 + C30458;
    const double C31022 = C31021 / C31012;
    const double C31311 = 2 * C31277;
    const double C31031 = C31030 / C31009;
    const double C31315 = C31281 / C31027;
    const double C31340 = C31275 - C31310;
    const double C2678 = -C31310;
    const double C31354 = C31339 + C31019;
    const double C31104 = C31103 / C31012;
    const double C31319 = 2 * C31286;
    const double C31111 = C31110 / C31009;
    const double C31329 = C31295 / C31027;
    const double C31348 = C31289 - C31326;
    const double C2570 = -C31326;
    const double C31357 = C31344 + C31100;
    const double C31146 = C31145 / C31012;
    const double C31322 = 2 * C31288;
    const double C31153 = C31152 / C31009;
    const double C31335 = C31301 / C31027;
    const double C31351 = C31290 - C31332;
    const double C3332 = -C31332;
    const double C31358 = C31346 + C31142;
    const double C29992 = C29991 / C29975;
    const double C169 = C164 - C146;
    const double C4923 = C4920 - C4910;
    const double C155 = C31243 * C139;
    const double C18754 = C18728 * C139;
    const double C347 = C31243 * C330;
    const double C18944 = C18728 * C330;
    const double C4915 = C31243 * C332;
    const double C24624 = C18728 * C332;
    const double C548 = C31243 * C531;
    const double C18742 = C18729 * C531;
    const double C19146 = C18728 * C531;
    const double C5388 = C31243 * C977;
    const double C24616 = C18729 * C977;
    const double C25244 = C18728 * C977;
    const double C366 = C348 - C349;
    const double C567 = C549 - C550;
    const double C995 = C983 - C984;
    const double C5727 = C5711 - C5712;
    const double C170 = C165 - C150;
    const double C171 = C166 - C154;
    const double C370 = C364 - C342;
    const double C371 = C365 - C346;
    const double C4924 = C4921 - C4914;
    const double C571 = C565 - C543;
    const double C572 = C566 - C547;
    const double C5392 = C5390 - C5387;
    const double C4925 = C4922 - C4918;
    const double C5391 = C5389 - C5383;
    const double C30263 = C30257 + C30250;
    const double C159 = C31243 * C140;
    const double C18766 = C18728 * C140;
    const double C343 = C31243 * C329;
    const double C18956 = C18728 * C329;
    const double C351 = C31243 * C333;
    const double C18948 = C18728 * C333;
    const double C544 = C31243 * C530;
    const double C18746 = C18729 * C530;
    const double C19158 = C18728 * C530;
    const double C552 = C31243 * C534;
    const double C19150 = C18728 * C534;
    const double C19142 = C18729 * C534;
    const double C986 = C31243 * C978;
    const double C18940 = C18729 * C978;
    const double C19680 = C18728 * C978;
    const double C4919 = C31243 * C1210;
    const double C25482 = C18728 * C1210;
    const double C5714 = C31243 * C1353;
    const double C25240 = C18729 * C1353;
    const double C25656 = C18728 * C1353;
    const double C5384 = C31243 * C1356;
    const double C24620 = C18729 * C1356;
    const double C25664 = C18728 * C1356;
    const double C30052 = C30042 + C30051;
    const double C30058 = 2 * C30054;
    const double C30273 = C30020 * C30054;
    const double C30341 = C30169 * C30054;
    const double C1209 = (2 * C30169 * C30176 +
                          C30169 * (C30176 + C30054 * std::pow(C30169, 2))) /
                         C29983;
    const double C1212 =
        (3 * (C30176 + C30054 * C30179) +
         C30169 * (2 * C30169 * C30054 +
                   C30169 * (C30054 + C30026 * C30062 * C30179))) /
        C29983;
    const double C1352 =
        (C30169 * C30176 + ae * (C30020 * C30187 + C30188 * be) +
         be * (C30020 * C30189 + C30188 * ae) +
         C30020 * (ae * C30187 + be * C30189 + C30020 * C30169 * C30054)) /
        C29983;
    const double C1355 =
        (ae * (C30096 + C30111 * C30179) + be * (C30097 + C30115 * C30179) +
         C30020 * (C30176 + C30054 * C30179)) /
        C29983;
    const double C1758 =
        (ae * (2 * C30187 + C30169 * C30208) +
         be * (2 * C30189 + C30169 * C30210) +
         C30020 * (2 * C30169 * C30054 +
                   C30169 * (C30054 + C30026 * C30062 * C30179))) /
        C29983;
    const double C30366 = C30042 + C30365;
    const double C30370 = 2 * C30368;
    const double C30436 = C30020 * C30368;
    const double C30537 = C30530 + C30519;
    const double C5578 = C31243 * C1211;
    const double C25494 = C18728 * C1211;
    const double C30127 = C30119 + C30124;
    const double C1333 =
        (C30169 * C30107 + C30020 * (C30020 * C30183 + C30184 * be) +
         C30020 * C30184 * be) /
        C29975;
    const double C1334 =
        (C30169 * C30108 + C30020 * (C30020 * C30185 + C30184 * ae) +
         C30020 * C30184 * ae) /
        C29975;
    const double C1324 = C30169 * C30103 + C30184 * C30023;
    const double C2462 =
        2 * C30020 * C30184 + C30020 * (C30184 + C30355 * C30023);
    const double C30230 = C30227 + C30228;
    const double C30229 = C30224 + C30225;
    const double C1470 = C114 * C1190;
    const double C1636 = C114 * C1327;
    const double C2348 = C114 * C2050;
    const double C1358 =
        (C30176 + C30054 * C30179 + ae * (C30020 * C30208 + C30209 * be) +
         be * (C30020 * C30210 + C30209 * ae) +
         C30020 * (ae * C30208 + be * C30210 +
                   C30020 * (C30054 + C30026 * C30062 * C30179))) /
        C29983;
    const double C1347 =
        (C30096 + C30111 * C30179 + C30020 * (C30020 * C30208 + C30209 * be) +
         C30020 * C30209 * be) /
        C29975;
    const double C1348 =
        (C30097 + C30115 * C30179 + C30020 * (C30020 * C30210 + C30209 * ae) +
         C30020 * C30209 * ae) /
        C29975;
    const double C1753 = (C30020 * (2 * C30187 + C30169 * C30208) +
                          (2 * C30188 + C30169 * C30209) * be) /
                         C29975;
    const double C1754 = (C30020 * (2 * C30189 + C30169 * C30210) +
                          (2 * C30188 + C30169 * C30209) * ae) /
                         C29975;
    const double C1194 = 3 * (C30092 + C30113 * C30179) +
                         C30169 * (2 * C30188 + C30169 * C30209);
    const double C1331 = C30092 + C30113 * C30179 + C30209 * C30023;
    const double C1749 = C30020 * (2 * C30188 + C30169 * C30209);
    const double C6662 =
        2 * C30020 * C30209 + C30020 * (C30209 + C30490 * C30023);
    const double C30288 = C30020 * C30284;
    const double C30657 = 2 * C30284;
    const double C30647 = be * C30284;
    const double C2054 = 3 * (C30092 + C30113 * C30023) +
                         C30020 * (2 * C30234 + C30020 * C30283);
    const double C30287 = C30020 * C30281;
    const double C30651 = 2 * C30281;
    const double C30646 = ae * C30281;
    const double C30351 = C30348 + C30349;
    const double C30350 = C30345 + C30346;
    const double C15545 = C114 * C2461;
    const double C30388 = C30377 + C30385;
    const double C30432 = C30429 + C30430;
    const double C30431 = C30426 + C30427;
    const double C6770 = C114 * C6395;
    const double C30451 = C30020 * C30447;
    const double C30697 = 2 * C30447;
    const double C30689 = be * C30447;
    const double C6396 = 3 * (C30192 + C30331 * C30023) +
                         C30020 * (2 * C30335 + C30020 * C30446);
    const double C30450 = C30020 * C30444;
    const double C30693 = 2 * C30444;
    const double C30688 = ae * C30444;
    const double C30546 = C30104 + C30541;
    const double C30545 = C30525 + C30540;
    const double C30544 = C30102 + C30538;
    const double C30578 = C30050 + C30560;
    const double C158 = C113 * C131;
    const double C354 = C113 * C320;
    const double C358 = C113 * C322;
    const double C555 = C113 * C521;
    const double C19161 = C18732 * C521;
    const double C559 = C113 * C523;
    const double C18757 = C18732 * C523;
    const double C989 = C113 * C972;
    const double C18959 = C18732 * C972;
    const double C1471 = C113 * C1197;
    const double C1637 = C113 * C1340;
    const double C18963 = C18732 * C1340;
    const double C2231 = C113 * C1336;
    const double C19683 = C18732 * C1336;
    const double C2059 = (2 * (C30020 * C30097 + C30092 * ae) +
                          C30020 * (C30097 + C30020 * C30238 + C30234 * ae) +
                          (C30092 + C30113 * C30023) * ae) /
                         C29975;
    const double C5577 = C113 * C1203;
    const double C5717 = C113 * C1346;
    const double C25667 = C18732 * C1346;
    const double C5721 = C113 * C1752;
    const double C25485 = C18732 * C1752;
    const double C30267 = C30095 + C30265;
    const double C2464 = (2 * (C30020 * C30193 + C30192 * ae) +
                          C30020 * (C30193 + C30020 * C30339 + C30335 * ae) +
                          (C30192 + C30331 * C30023) * ae) /
                         C29975;
    const double C156 = C113 * C130;
    const double C352 = C113 * C319;
    const double C356 = C113 * C321;
    const double C553 = C113 * C520;
    const double C19159 = C18732 * C520;
    const double C557 = C113 * C522;
    const double C18755 = C18732 * C522;
    const double C987 = C113 * C971;
    const double C18957 = C18732 * C971;
    const double C1469 = C113 * C1196;
    const double C1635 = C113 * C1339;
    const double C18961 = C18732 * C1339;
    const double C2229 = C113 * C1335;
    const double C19681 = C18732 * C1335;
    const double C2069 =
        (2 * (ae * C30096 + be * C30097 + C30020 * C30176) +
         ae * (C30096 + C30020 * C30237 + C30234 * be) +
         be * (C30097 + C30020 * C30238 + C30234 * ae) +
         C30020 * (C30176 + ae * C30237 + be * C30238 +
                   C30020 * (ae * C30111 + be * C30115 + C30020 * C30054))) /
        C29983;
    const double C2058 = (2 * (C30020 * C30096 + C30092 * be) +
                          C30020 * (C30096 + C30020 * C30237 + C30234 * be) +
                          (C30092 + C30113 * C30023) * be) /
                         C29975;
    const double C1478 = C1473 - C1474;
    const double C1644 = C1639 - C1640;
    const double C5718 = C31243 * C1357;
    const double C25676 = C18728 * C1357;
    const double C25668 = C18729 * C1357;
    const double C5722 = C31243 * C1757;
    const double C25486 = C18729 * C1757;
    const double C26156 = C18728 * C1757;
    const double C5575 = C113 * C1202;
    const double C5715 = C113 * C1345;
    const double C25665 = C18732 * C1345;
    const double C5719 = C113 * C1751;
    const double C25483 = C18732 * C1751;
    const double C30266 = C30094 + C30264;
    const double C30529 = C30042 + C30515;
    const double C2469 = (2 * (ae * C30191 + be * C30193 + C30020 * C30329) +
                          ae * (C30191 + C30020 * C30338 + C30335 * be) +
                          be * (C30193 + C30020 * C30339 + C30335 * ae) +
                          C30020 * (C30329 + ae * C30338 + be * C30339 +
                                    C30020 * (ae * C30330 + be * C30332 +
                                              C30020 * C30169 * C30050))) /
                         C29983;
    const double C2463 = (2 * (C30020 * C30191 + C30192 * be) +
                          C30020 * (C30191 + C30020 * C30338 + C30335 * be) +
                          (C30192 + C30331 * C30023) * be) /
                         C29975;
    const double C30064 = C30050 + C30063;
    const double C30371 = C30050 + C30369;
    const double C30421 = C30420 * C30179;
    const double C30621 = C30169 * C30420;
    const double C30650 = C30020 * C30420;
    const double C30587 = C30579 + C30564;
    const double C30701 = C30020 * C30692;
    const double C30161 = C30148 + C30158;
    const double C30217 = C30128 + C30214;
    const double C30307 = C30301 + C30302;
    const double C30360 = C30020 * C30356;
    const double C30412 = C30405 + C30409;
    const double C30470 = C30464 + C30465;
    const double C30494 = C30169 * C30491;
    const double C30502 = C30020 * C30491;
    const double C30637 = C30631 + C30632;
    const double C30672 = C30020 * C30665;
    const double C30596 = C30122 + C30591;
    const double C30719 = C30020 * C30713;
    const double C30159 = C30144 + C30156;
    const double C30215 = C30126 + C30212;
    const double C30304 = C30297 + C30298;
    const double C30357 = C30020 * C30354;
    const double C30410 = C30401 + C30407;
    const double C30467 = C30460 + C30461;
    const double C30492 = C30169 * C30489;
    const double C30499 = C30020 * C30489;
    const double C30634 = C30627 + C30628;
    const double C30669 = C30020 * C30662;
    const double C30594 = C30118 + C30588;
    const double C30716 = C30020 * C30710;
    const double C30157 = C30026 * C30154;
    const double C30318 = C30169 * C30154;
    const double C30325 = C30154 * ae;
    const double C30323 = C30020 * C30154;
    const double C30322 = C30154 * be;
    const double C1195 = 3 * (C30103 + C30120 * C30179) +
                         C30169 * (2 * C30184 + C30169 * C30216);
    const double C1332 = C30103 + C30120 * C30179 + C30216 * C30023;
    const double C1750 = C30020 * (2 * C30184 + C30169 * C30216);
    const double C2055 = 3 * (C30103 + C30120 * C30023) +
                         C30020 * (2 * C30226 + C30020 * C30306);
    const double C30414 = C30169 * C30411;
    const double C30511 = C30411 * ae;
    const double C30509 = C30020 * C30411;
    const double C30508 = C30411 * be;
    const double C6397 = 3 * (C30202 + C30382 * C30023) +
                         C30020 * (2 * C30428 + C30020 * C30469);
    const double C30496 = C30482 + C30493;
    const double C10707 = 3 * (C30188 + C30343 * C30023) +
                          C30020 * (2 * C30347 + C30020 * C30636);
    const double C30676 = C30656 + C30671;
    const double C30602 = C30595 * ae;
    const double C30600 = C30020 * C30595;
    const double C30599 = C30595 * be;
    const double C30723 = C30696 + C30718;
    const double C133 = (4 * (2 * C30097 + C30026 * C30108) +
                         C30026 * (3 * C30108 + C30026 * C30132)) /
                        C29975;
    const double C324 =
        (2 * C30097 + C30026 * C30108 + C30132 * C30179) / C29975;
    const double C326 = (C30169 * (3 * C30108 + C30026 * C30132)) / C29975;
    const double C5843 = C113 * C1205;
    const double C5569 = (4 * (2 * C30193 + C30169 * C30203) +
                          C30169 * (3 * C30203 + C30169 * C30389)) /
                         C29975;
    const double C132 = (4 * (2 * C30096 + C30026 * C30107) +
                         C30026 * (3 * C30107 + C30026 * C30131)) /
                        C29975;
    const double C323 =
        (2 * C30096 + C30026 * C30107 + C30131 * C30179) / C29975;
    const double C325 = (C30169 * (3 * C30107 + C30026 * C30131)) / C29975;
    const double C5841 = C113 * C1204;
    const double C5568 = (4 * (2 * C30191 + C30169 * C30201) +
                          C30169 * (3 * C30201 + C30169 * C30387)) /
                         C29975;
    const double C31023 = C31019 - C31022;
    const double C31341 = C31311 / C31009;
    const double C31032 = C31028 - C31031;
    const double C31355 = C31340 / C31013;
    const double C31105 = C31100 - C31104;
    const double C31345 = C31319 / C31009;
    const double C31112 = C31108 - C31111;
    const double C31359 = C31348 / C31013;
    const double C31147 = C31142 - C31146;
    const double C31347 = C31322 / C31009;
    const double C31154 = C31150 - C31153;
    const double C31361 = C31351 / C31013;
    const double C29993 = C31243 - C29992;
    const double C174 = C169 + C147;
    const double C4926 = C4923 + C4911;
    const double C372 = C366 - C350;
    const double C573 = C567 - C551;
    const double C998 = C995 - C985;
    const double C5731 = C5727 - C5713;
    const double C175 = C170 + C151;
    const double C176 = C171 + C155;
    const double C377 = C371 + C347;
    const double C4927 = C4924 + C4915;
    const double C578 = C572 + C548;
    const double C5394 = C5392 + C5388;
    const double C376 = C370 + C343;
    const double C577 = C571 + C544;
    const double C4928 = C4925 + C4919;
    const double C5393 = C5391 + C5384;
    const double C141 =
        (4 * (2 * C30026 * C30042 + C30026 * C30052) +
         C30026 * (3 * C30052 +
                   C30026 * (2 * C30026 * C30050 +
                             C30026 * (C30050 +
                                       (C30045 * C30046 +
                                        C30023 * bs[7] * std::pow(C30022, 7)) *
                                           C29974 * C30038)))) /
        C29983;
    const double C334 =
        (C30033 + C30042 * C30038 + C30052 * std::pow(yP - yQ, 2)) / C29983;
    const double C335 =
        ((yP - yQ) * (2 * C30026 * C30042 + C30026 * C30052)) / C29983;
    const double C535 =
        (C30033 + C30042 * C30038 + ae * (C30020 * C30107 + C30103 * be) +
         be * (C30020 * C30108 + C30103 * ae) +
         C30020 * (ae * C30107 + be * C30108 + C30020 * C30052)) /
        C29983;
    const double C536 = (ae * (2 * C30096 + C30026 * C30107) +
                         be * (2 * C30097 + C30026 * C30108) +
                         C30020 * (2 * C30026 * C30042 + C30026 * C30052)) /
                        C29983;
    const double C979 = (ae * C30169 * C30107 + be * C30169 * C30108 +
                         C30020 * C30169 * C30052) /
                        C29983;
    const double C30286 = C30280 + C30273;
    const double C1476 = C31243 * C1209;
    const double C20216 = C18728 * C1209;
    const double C5844 = C31243 * C1212;
    const double C2232 = C31243 * C1352;
    const double C19684 = C18729 * C1352;
    const double C21136 = C18728 * C1352;
    const double C1642 = C31243 * C1355;
    const double C18952 = C18729 * C1355;
    const double C20424 = C18728 * C1355;
    const double C6001 = C31243 * C1758;
    const double C20212 = C18729 * C1758;
    const double C5572 =
        (4 * (2 * C30329 + C30169 * C30366) +
         C30169 *
             (3 * C30366 + C30169 * (2 * C30169 * C30050 +
                                     C30169 * (C30050 + C30062 * C30179)))) /
        C29983;
    const double C30449 = C30443 + C30436;
    const double C30543 = C30020 * C30537;
    const double C30557 = 2 * C30537;
    const double C524 =
        (2 * C30096 + C30026 * C30107 +
         C30020 * (C30020 * C30131 + C30127 * be) + C30020 * C30127 * be) /
        C29975;
    const double C525 =
        (2 * C30097 + C30026 * C30108 +
         C30020 * (C30020 * C30132 + C30127 * ae) + C30020 * C30127 * ae) /
        C29975;
    const double C526 = (C30020 * (3 * C30107 + C30026 * C30131) +
                         (3 * C30103 + C30026 * C30127) * be) /
                        C29975;
    const double C527 = (C30020 * (3 * C30108 + C30026 * C30132) +
                         (3 * C30103 + C30026 * C30127) * ae) /
                        C29975;
    const double C973 =
        (C30020 * C30169 * C30131 + C30169 * C30127 * be) / C29975;
    const double C974 =
        (C30020 * C30169 * C30132 + C30169 * C30127 * ae) / C29975;
    const double C120 = 4 * (2 * C30092 + C30026 * C30103) +
                        C30026 * (3 * C30103 + C30026 * C30127);
    const double C306 = 2 * C30092 + C30026 * C30103 + C30127 * C30179;
    const double C307 = C30169 * (3 * C30103 + C30026 * C30127);
    const double C507 = 2 * C30092 + C30026 * C30103 + C30127 * C30023;
    const double C508 = C30020 * (3 * C30103 + C30026 * C30127);
    const double C965 = C30020 * C30169 * C30127;
    const double C1464 =
        2 * C30169 * C30127 + C30169 * (C30127 + C30154 * C30179);
    const double C1630 = C30020 * (C30127 + C30154 * C30179);
    const double C2342 =
        2 * C30020 * C30127 + C30020 * (C30127 + C30154 * C30023);
    const double C2225 = C113 * C1333;
    const double C19685 = C18732 * C1333;
    const double C2227 = C113 * C1334;
    const double C19687 = C18732 * C1334;
    const double C2226 = C114 * C1324;
    const double C2057 = (2 * (C30020 * C30108 + C30103 * ae) +
                          C30020 * (C30108 + C30020 * C30230 + C30226 * ae) +
                          (C30103 + C30120 * C30023) * ae) /
                         C29975;
    const double C2056 = (2 * (C30020 * C30107 + C30103 * be) +
                          C30020 * (C30107 + C30020 * C30229 + C30226 * be) +
                          (C30103 + C30120 * C30023) * be) /
                         C29975;
    const double C6561 = C31243 * C1358;
    const double C20420 = C18729 * C1358;
    const double C6558 = C113 * C1347;
    const double C20417 = C18732 * C1347;
    const double C6560 = C113 * C1348;
    const double C20419 = C18732 * C1348;
    const double C5998 = C113 * C1753;
    const double C20209 = C18732 * C1753;
    const double C6000 = C113 * C1754;
    const double C20211 = C18732 * C1754;
    const double C5842 = C114 * C1194;
    const double C6559 = C114 * C1331;
    const double C5999 = C114 * C1749;
    const double C30290 = C30115 + C30288;
    const double C30289 = C30111 + C30287;
    const double C30660 = C30054 + C30646;
    const double C2466 = (2 * (C30020 * C30189 + C30188 * ae) +
                          C30020 * (C30189 + C30020 * C30351 + C30347 * ae) +
                          (C30188 + C30343 * C30023) * ae) /
                         C29975;
    const double C2470 =
        (2 * (ae * C30187 + be * C30189 + C30020 * C30341) +
         ae * (C30187 + C30020 * C30350 + C30347 * be) +
         be * (C30189 + C30020 * C30351 + C30347 * ae) +
         C30020 * (C30341 + ae * C30350 + be * C30351 +
                   C30020 * (ae * C30342 + be * C30344 +
                             C30020 * C30169 * C30026 * C30062))) /
        C29983;
    const double C2465 = (2 * (C30020 * C30187 + C30188 * be) +
                          C30020 * (C30187 + C30020 * C30350 + C30347 * be) +
                          (C30188 + C30343 * C30023) * be) /
                         C29975;
    const double C5701 =
        (2 * C30191 + C30169 * C30201 +
         C30020 * (C30020 * C30387 + C30388 * be) + C30020 * C30388 * be) /
        C29975;
    const double C5702 =
        (2 * C30193 + C30169 * C30203 +
         C30020 * (C30020 * C30389 + C30388 * ae) + C30020 * C30388 * ae) /
        C29975;
    const double C5703 = (C30020 * (3 * C30201 + C30169 * C30387) +
                          (3 * C30202 + C30169 * C30388) * be) /
                         C29975;
    const double C5704 = (C30020 * (3 * C30203 + C30169 * C30389) +
                          (3 * C30202 + C30169 * C30388) * ae) /
                         C29975;
    const double C5566 = 4 * (2 * C30192 + C30169 * C30202) +
                         C30169 * (3 * C30202 + C30169 * C30388);
    const double C5698 = 2 * C30192 + C30169 * C30202 + C30388 * C30023;
    const double C5699 = C30020 * (3 * C30202 + C30169 * C30388);
    const double C6764 =
        2 * C30020 * C30388 + C30020 * (C30388 + C30411 * C30023);
    const double C6399 = (2 * (C30020 * C30203 + C30202 * ae) +
                          C30020 * (C30203 + C30020 * C30432 + C30428 * ae) +
                          (C30202 + C30382 * C30023) * ae) /
                         C29975;
    const double C6398 = (2 * (C30020 * C30201 + C30202 * be) +
                          C30020 * (C30201 + C30020 * C30431 + C30428 * be) +
                          (C30202 + C30382 * C30023) * be) /
                         C29975;
    const double C30453 = C30332 + C30451;
    const double C30452 = C30330 + C30450;
    const double C30699 = C30368 + C30688;
    const double C30549 = C30546 + C30535;
    const double C10553 = 4 * (2 * C30242 + C30020 * C30260) +
                          C30020 * (3 * C30260 + C30020 * C30545);
    const double C30548 = C30544 + C30532;
    const double C30586 = C30578 + C30561;
    const double C2353 = C113 * C2059;
    const double C19153 = C18732 * C2059;
    const double C30269 = C30267 + C30262;
    const double C6775 = C113 * C2464;
    const double C25659 = C18732 * C2464;
    const double C167 = C156 - C157;
    const double C367 = C352 - C353;
    const double C368 = C356 - C357;
    const double C568 = C553 - C554;
    const double C569 = C557 - C558;
    const double C996 = C987 - C988;
    const double C1477 = C1469 - C1470;
    const double C1643 = C1635 - C1636;
    const double C2234 = C2229 - C2230;
    const double C2354 = C31243 * C2069;
    const double C19154 = C18729 * C2069;
    const double C21280 = C18728 * C2069;
    const double C2351 = C113 * C2058;
    const double C19151 = C18732 * C2058;
    const double C1480 = C1478 - C1475;
    const double C1646 = C1644 - C1641;
    const double C5583 = C5575 - C5576;
    const double C5728 = C5715 - C5716;
    const double C5729 = C5719 - C5720;
    const double C30268 = C30266 + C30259;
    const double C30536 = C30529 + C30516;
    const double C6776 = C31243 * C2469;
    const double C25660 = C18729 * C2469;
    const double C26998 = C18728 * C2469;
    const double C6773 = C113 * C2463;
    const double C25657 = C18732 * C2463;
    const double C30065 = C30026 * C30064;
    const double C30296 = C30020 * C30064;
    const double C30353 = C30169 * C30064;
    const double C1208 = (2 * C30169 * C30052 +
                          C30169 * (C30052 + C30064 * std::pow(C30169, 2))) /
                         C29983;
    const double C1213 =
        (3 * (C30052 + C30064 * C30179) +
         C30169 * (2 * C30169 * C30064 +
                   C30169 * (C30064 +
                             (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038) *
                                 C30179))) /
        C29983;
    const double C1351 =
        (C30169 * C30052 + ae * (C30020 * C30183 + C30184 * be) +
         be * (C30020 * C30185 + C30184 * ae) +
         C30020 * (ae * C30183 + be * C30185 + C30020 * C30169 * C30064)) /
        C29983;
    const double C1354 =
        (ae * (C30107 + C30126 * C30179) + be * (C30108 + C30128 * C30179) +
         C30020 * (C30052 + C30064 * C30179)) /
        C29983;
    const double C2068 =
        (2 * (ae * C30107 + be * C30108 + C30020 * C30052) +
         ae * (C30107 + C30020 * C30229 + C30226 * be) +
         be * (C30108 + C30020 * C30230 + C30226 * ae) +
         C30020 * (C30052 + ae * C30229 + be * C30230 +
                   C30020 * (ae * C30126 + be * C30128 + C30020 * C30064))) /
        C29983;
    const double C30372 = C30169 * C30371;
    const double C30459 = C30020 * C30371;
    const double C6404 =
        (2 * (ae * C30201 + be * C30203 + C30020 * C30366) +
         ae * (C30201 + C30020 * C30431 + C30428 * be) +
         be * (C30203 + C30020 * C30432 + C30428 * ae) +
         C30020 * (C30366 + ae * C30431 + be * C30432 +
                   C30020 * (ae * C30381 + be * C30383 + C30020 * C30371))) /
        C29983;
    const double C30422 = C30054 + C30421;
    const double C30626 = C30020 * C30621;
    const double C30668 = C30661 + C30650;
    const double C30593 = C30020 * C30587;
    const double C30709 = C30700 + C30701;
    const double C30163 = C30026 * C30161;
    const double C30319 = C30169 * C30161;
    const double C30324 = C30020 * C30161;
    const double C1466 =
        (2 * C30169 * C30132 + C30169 * (C30132 + C30161 * C30179)) / C29975;
    const double C1632 = (C30020 * (C30132 + C30161 * C30179) +
                          (C30127 + C30154 * C30179) * ae) /
                         C29975;
    const double C1207 = (3 * (C30108 + C30128 * C30179) +
                          C30169 * (2 * C30185 + C30169 * C30217)) /
                         C29975;
    const double C1350 =
        (C30108 + C30128 * C30179 + C30020 * (C30020 * C30217 + C30216 * ae) +
         C30020 * C30216 * ae) /
        C29975;
    const double C1756 = (C30020 * (2 * C30185 + C30169 * C30217) +
                          (2 * C30184 + C30169 * C30216) * ae) /
                         C29975;
    const double C30311 = C30020 * C30307;
    const double C30363 = C30360 + C30361;
    const double C30415 = C30169 * C30412;
    const double C30510 = C30020 * C30412;
    const double C30474 = C30020 * C30470;
    const double C30497 = C30484 + C30494;
    const double C30505 = C30502 + C30503;
    const double C30640 = C30020 * C30637;
    const double C30677 = C30142 + C30672;
    const double C30601 = C30596 + C30584;
    const double C30724 = C30399 + C30719;
    const double C30162 = C30026 * C30159;
    const double C30317 = C30169 * C30159;
    const double C30321 = C30020 * C30159;
    const double C1465 =
        (2 * C30169 * C30131 + C30169 * (C30131 + C30159 * C30179)) / C29975;
    const double C1631 = (C30020 * (C30131 + C30159 * C30179) +
                          (C30127 + C30154 * C30179) * be) /
                         C29975;
    const double C1359 =
        (C30052 + C30064 * C30179 + ae * (C30020 * C30215 + C30216 * be) +
         be * (C30020 * C30217 + C30216 * ae) +
         C30020 * (ae * C30215 + be * C30217 +
                   C30020 * (C30064 +
                             (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038) *
                                 C30179))) /
        C29983;
    const double C1759 =
        (ae * (2 * C30183 + C30169 * C30215) +
         be * (2 * C30185 + C30169 * C30217) +
         C30020 * (2 * C30169 * C30064 +
                   C30169 * (C30064 +
                             (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038) *
                                 C30179))) /
        C29983;
    const double C1206 = (3 * (C30107 + C30126 * C30179) +
                          C30169 * (2 * C30183 + C30169 * C30215)) /
                         C29975;
    const double C1349 =
        (C30107 + C30126 * C30179 + C30020 * (C30020 * C30215 + C30216 * be) +
         C30020 * C30216 * be) /
        C29975;
    const double C1755 = (C30020 * (2 * C30183 + C30169 * C30215) +
                          (2 * C30184 + C30169 * C30216) * be) /
                         C29975;
    const double C30310 = C30020 * C30304;
    const double C30362 = C30357 + C30358;
    const double C30413 = C30169 * C30410;
    const double C30507 = C30020 * C30410;
    const double C30473 = C30020 * C30467;
    const double C30495 = C30480 + C30492;
    const double C30504 = C30499 + C30500;
    const double C30639 = C30020 * C30634;
    const double C30675 = C30136 + C30669;
    const double C30598 = C30594 + C30581;
    const double C30722 = C30393 + C30716;
    const double C30160 = C30138 + C30157;
    const double C2220 = C30169 * C30127 + C30318 * C30023;
    const double C30417 = C30395 + C30414;
    const double C5836 = 4 * (2 * C30188 + C30169 * C30209) +
                         C30169 * (3 * C30209 + C30169 * C30496);
    const double C5993 = C30020 * (3 * C30209 + C30169 * C30496);
    const double C6553 = 2 * C30188 + C30169 * C30209 + C30496 * C30023;
    const double C10809 = 4 * (2 * C30234 + C30020 * C30283) +
                          C30020 * (3 * C30283 + C30020 * C30676);
    const double C30605 = C30572 + C30600;
    const double C10911 = 4 * (2 * C30335 + C30020 * C30446) +
                          C30020 * (3 * C30446 + C30020 * C30723);
    const double C162 = C113 * C133;
    const double C362 = C113 * C324;
    const double C699 = C113 * C326;
    const double C5581 = C113 * C5569;
    const double C160 = C113 * C132;
    const double C360 = C113 * C323;
    const double C697 = C113 * C325;
    const double C5579 = C113 * C5568;
    const double C31274 = C31023 * C31011;
    const double C31313 = C31279 + C31023;
    const double C31282 = C31032 / C31013;
    const double C31278 = C31032 * C31011;
    const double C688 = C31355 - (C31023 * C31014) / C31009;
    const double C31292 = C31105 * C31099;
    const double C31328 = C31294 + C31105;
    const double C31296 = C31112 / C31013;
    const double C31293 = C31112 * C31099;
    const double C1458 = C31359 - (C31105 * C31101) / C31009;
    const double C31298 = C31147 * C31141;
    const double C31334 = C31300 + C31147;
    const double C31302 = C31154 / C31013;
    const double C31299 = C31154 * C31141;
    const double C2338 = C31361 - (C31147 * C31143) / C31009;
    const double C29994 = C29993 * C29990;
    const double C9081 =
        ((C29993 * ae) / C29975 - C29982 / C29985) / (2 * C29975) +
        ((C29973 * ((0 * ae) / C29975 - C29986 / C29983) + C18729) * ae) /
            C29975;
    const double C18730 = (C29993 * ae) / C29975 - C29982 / C29985;
    const double C179 = C174 * C31230;
    const double C13234 = C174 * C13229;
    const double C378 = C372 + C351;
    const double C579 = C573 + C552;
    const double C1001 = C998 + C986;
    const double C5735 = C5731 + C5714;
    const double C180 = C175 * C31230;
    const double C13237 = C175 * C13229;
    const double C181 = C176 * C31230;
    const double C13238 = C176 * C13229;
    const double C383 = C377 * C31230;
    const double C13235 = C377 * C13230;
    const double C13389 = C377 * C13229;
    const double C584 = C578 * C31230;
    const double C13543 = C578 * C13229;
    const double C382 = C376 * C31230;
    const double C13236 = C376 * C13230;
    const double C13392 = C376 * C13229;
    const double C583 = C577 * C31230;
    const double C13546 = C577 * C13229;
    const double C163 = C31243 * C141;
    const double C355 = C31243 * C334;
    const double C18968 = C18728 * C334;
    const double C359 = C31243 * C335;
    const double C19332 = C18728 * C335;
    const double C556 = C31243 * C535;
    const double C19170 = C18728 * C535;
    const double C19162 = C18729 * C535;
    const double C560 = C31243 * C536;
    const double C18758 = C18729 * C536;
    const double C19476 = C18728 * C536;
    const double C990 = C31243 * C979;
    const double C18960 = C18729 * C979;
    const double C19692 = C18728 * C979;
    const double C5582 = C31243 * C5572;
    const double C561 = C113 * C524;
    const double C19469 = C18732 * C524;
    const double C563 = C113 * C525;
    const double C19471 = C18732 * C525;
    const double C809 = C113 * C526;
    const double C18759 = C18732 * C526;
    const double C811 = C113 * C527;
    const double C18761 = C18732 * C527;
    const double C991 = C113 * C973;
    const double C19325 = C18732 * C973;
    const double C993 = C113 * C974;
    const double C19327 = C18732 * C974;
    const double C161 = C114 * C120;
    const double C361 = C114 * C306;
    const double C698 = C114 * C307;
    const double C562 = C114 * C507;
    const double C810 = C114 * C508;
    const double C992 = C114 * C965;
    const double C2233 = C2225 - C2226;
    const double C2349 = C113 * C2057;
    const double C19165 = C18732 * C2057;
    const double C2347 = C113 * C2056;
    const double C19163 = C18732 * C2056;
    const double C5845 = C5841 - C5842;
    const double C6562 = C6558 - C6559;
    const double C6002 = C5998 - C5999;
    const double C30292 = C30290 + C30285;
    const double C30291 = C30289 + C30282;
    const double C30667 = C30660 + C30647;
    const double C15546 = C113 * C2466;
    const double C21131 = C18732 * C2466;
    const double C15547 = C31243 * C2470;
    const double C21132 = C18729 * C2470;
    const double C15544 = C113 * C2465;
    const double C21129 = C18732 * C2465;
    const double C5723 = C113 * C5701;
    const double C26149 = C18732 * C5701;
    const double C5725 = C113 * C5702;
    const double C26151 = C18732 * C5702;
    const double C6107 = C113 * C5703;
    const double C25487 = C18732 * C5703;
    const double C6109 = C113 * C5704;
    const double C25489 = C18732 * C5704;
    const double C5580 = C114 * C5566;
    const double C5724 = C114 * C5698;
    const double C6108 = C114 * C5699;
    const double C6771 = C113 * C6399;
    const double C25671 = C18732 * C6399;
    const double C6769 = C113 * C6398;
    const double C25669 = C18732 * C6398;
    const double C30455 = C30453 + C30448;
    const double C30454 = C30452 + C30445;
    const double C30708 = C30699 + C30689;
    const double C30551 = C30020 * C30549;
    const double C30573 = 3 * C30549;
    const double C30559 = be * C30549;
    const double C30550 = C30020 * C30548;
    const double C30565 = 3 * C30548;
    const double C30558 = ae * C30548;
    const double C2063 =
        (3 * (C30089 + C30020 * C30246 + C30242 * ae) +
         C30020 * (2 * C30246 + C30020 * C30269 + C30260 * ae) +
         (2 * C30242 + C30020 * C30260) * ae) /
        C29975;
    const double C172 = C167 - C158;
    const double C373 = C367 - C354;
    const double C374 = C368 - C358;
    const double C574 = C568 - C555;
    const double C575 = C569 - C559;
    const double C999 = C996 - C989;
    const double C1479 = C1477 - C1471;
    const double C1645 = C1643 - C1637;
    const double C2236 = C2234 - C2231;
    const double C2356 = C2351 - C2352;
    const double C1482 = C1480 + C1476;
    const double C1648 = C1646 + C1642;
    const double C5585 = C5583 - C5577;
    const double C5732 = C5728 - C5717;
    const double C5733 = C5729 - C5721;
    const double C2071 =
        (3 * (C30033 + ae * C30245 + be * C30246 + C30020 * C30263) +
         ae * (2 * C30245 + C30020 * C30268 + C30260 * be) +
         be * (2 * C30246 + C30020 * C30269 + C30260 * ae) +
         C30020 * (2 * C30263 + ae * C30268 + be * C30269 +
                   C30020 * (C30042 + ae * C30258 + be * C30261 +
                             C30020 * (ae * C30102 + be * C30104 +
                                       C30020 * C30050)))) /
        C29983;
    const double C2062 =
        (3 * (C30088 + C30020 * C30245 + C30242 * be) +
         C30020 * (2 * C30245 + C30020 * C30268 + C30260 * be) +
         (2 * C30242 + C30020 * C30260) * be) /
        C29975;
    const double C30547 = C30536 + C30543;
    const double C6778 = C6773 - C6774;
    const double C30066 = C30058 + C30065;
    const double C30309 = C30303 + C30296;
    const double C1472 = C31243 * C1208;
    const double C2228 = C31243 * C1351;
    const double C19688 = C18729 * C1351;
    const double C1638 = C31243 * C1354;
    const double C18964 = C18729 * C1354;
    const double C2350 = C31243 * C2068;
    const double C19166 = C18729 * C2068;
    const double C30373 = C30370 + C30372;
    const double C30472 = C30466 + C30459;
    const double C6772 = C31243 * C6404;
    const double C25672 = C18729 * C6404;
    const double C5839 =
        (4 * (2 * C30341 + C30169 * C30422) +
         C30169 * (3 * C30422 +
                   C30169 * (2 * C30169 * C30420 +
                             C30169 * (C30420 + C30026 *
                                                    (C30056 * C30057 +
                                                     C30023 * bs[8] *
                                                         std::pow(C30018, 8)) *
                                                    C29974 * C30179)))) /
        C29983;
    const double C5996 =
        (ae * (3 * C30208 +
               C30169 * (2 * C30342 +
                         C30169 * (C30136 + C30026 * C30145 * C30179))) +
         be * (3 * C30210 +
               C30169 * (2 * C30344 +
                         C30169 * (C30142 + C30026 * C30149 * C30179))) +
         C30020 * (3 * C30422 +
                   C30169 * (2 * C30169 * C30420 +
                             C30169 * (C30420 + C30026 *
                                                    (C30056 * C30057 +
                                                     C30023 * bs[8] *
                                                         std::pow(C30018, 8)) *
                                                    C29974 * C30179)))) /
        C29983;
    const double C30633 = C30625 + C30626;
    const double C30674 = C30020 * C30668;
    const double C30597 = C30586 + C30593;
    const double C30715 = C30020 * C30709;
    const double C30165 = C30141 + C30163;
    const double C2222 =
        (C30169 * C30132 + C30020 * (C30020 * C30319 + C30318 * ae) +
         C30020 * C30318 * ae) /
        C29975;
    const double C30327 = C30324 + C30325;
    const double C30313 = C30128 + C30311;
    const double C2468 = (2 * (C30020 * C30185 + C30184 * ae) +
                          C30020 * (C30185 + C30020 * C30363 + C30359 * ae) +
                          (C30184 + C30355 * C30023) * ae) /
                         C29975;
    const double C30418 = C30398 + C30415;
    const double C30513 = C30510 + C30511;
    const double C30476 = C30383 + C30474;
    const double C5838 = (4 * (2 * C30189 + C30169 * C30210) +
                          C30169 * (3 * C30210 + C30169 * C30497)) /
                         C29975;
    const double C5995 = (C30020 * (3 * C30210 + C30169 * C30497) +
                          (3 * C30209 + C30169 * C30496) * ae) /
                         C29975;
    const double C6555 =
        (2 * C30189 + C30169 * C30210 +
         C30020 * (C30020 * C30497 + C30496 * ae) + C30020 * C30496 * ae) /
        C29975;
    const double C6664 = (2 * (C30020 * C30210 + C30209 * ae) +
                          C30020 * (C30210 + C30020 * C30505 + C30501 * ae) +
                          (C30209 + C30490 * C30023) * ae) /
                         C29975;
    const double C30642 = C30344 + C30640;
    const double C30680 = C30677 + C30666;
    const double C30606 = C30020 * C30601;
    const double C30726 = C30724 + C30714;
    const double C30164 = C30135 + C30162;
    const double C2221 =
        (C30169 * C30131 + C30020 * (C30020 * C30317 + C30318 * be) +
         C30020 * C30318 * be) /
        C29975;
    const double C30326 = C30321 + C30322;
    const double C30312 = C30126 + C30310;
    const double C2471 =
        (2 * (ae * C30183 + be * C30185 + C30020 * C30353) +
         ae * (C30183 + C30020 * C30362 + C30359 * be) +
         be * (C30185 + C30020 * C30363 + C30359 * ae) +
         C30020 *
             (C30353 + ae * C30362 + be * C30363 +
              C30020 * (ae * C30354 + be * C30356 +
                        C30020 * C30169 *
                            (C30062 + (C30056 * C30057 +
                                       C30023 * bs[8] * std::pow(C30018, 8)) *
                                          C29974 * C30038)))) /
        C29983;
    const double C2467 = (2 * (C30020 * C30183 + C30184 * be) +
                          C30020 * (C30183 + C30020 * C30362 + C30359 * be) +
                          (C30184 + C30355 * C30023) * be) /
                         C29975;
    const double C30416 = C30392 + C30413;
    const double C30512 = C30507 + C30508;
    const double C30475 = C30381 + C30473;
    const double C6556 =
        (2 * C30341 + C30169 * C30422 + ae * (C30020 * C30495 + C30496 * be) +
         be * (C30020 * C30497 + C30496 * ae) +
         C30020 * (ae * C30495 + be * C30497 +
                   C30020 * (2 * C30169 * C30420 +
                             C30169 * (C30420 + C30026 *
                                                    (C30056 * C30057 +
                                                     C30023 * bs[8] *
                                                         std::pow(C30018, 8)) *
                                                    C29974 * C30179)))) /
        C29983;
    const double C5837 = (4 * (2 * C30187 + C30169 * C30208) +
                          C30169 * (3 * C30208 + C30169 * C30495)) /
                         C29975;
    const double C5994 = (C30020 * (3 * C30208 + C30169 * C30495) +
                          (3 * C30209 + C30169 * C30496) * be) /
                         C29975;
    const double C6554 =
        (2 * C30187 + C30169 * C30208 +
         C30020 * (C30020 * C30495 + C30496 * be) + C30020 * C30496 * be) /
        C29975;
    const double C6665 =
        (2 * (ae * C30208 + be * C30210 + C30020 * C30422) +
         ae * (C30208 + C30020 * C30504 + C30501 * be) +
         be * (C30210 + C30020 * C30505 + C30501 * ae) +
         C30020 * (C30422 + ae * C30504 + be * C30505 +
                   C30020 * (ae * C30489 + be * C30491 +
                             C30020 * (C30420 + C30026 *
                                                    (C30056 * C30057 +
                                                     C30023 * bs[8] *
                                                         std::pow(C30018, 8)) *
                                                    C29974 * C30179)))) /
        C29983;
    const double C6663 = (2 * (C30020 * C30208 + C30209 * be) +
                          C30020 * (C30208 + C30020 * C30504 + C30501 * be) +
                          (C30209 + C30490 * C30023) * be) /
                         C29975;
    const double C30641 = C30342 + C30639;
    const double C30679 = C30675 + C30663;
    const double C30604 = C30020 * C30598;
    const double C30725 = C30722 + C30711;
    const double C121 = 5 * (3 * C30103 + C30026 * C30127) +
                        C30026 * (4 * C30127 + C30026 * C30160);
    const double C308 = 3 * C30103 + C30026 * C30127 + C30160 * C30179;
    const double C509 = 3 * C30103 + C30026 * C30127 + C30160 * C30023;
    const double C692 = C30169 * (4 * C30127 + C30026 * C30160);
    const double C804 = C30020 * (4 * C30127 + C30026 * C30160);
    const double C966 = C30020 * C30169 * C30160;
    const double C5567 = 5 * (3 * C30202 + C30169 * C30388) +
                         C30169 * (4 * C30388 + C30169 * C30417);
    const double C5700 = 3 * C30202 + C30169 * C30388 + C30417 * C30023;
    const double C6102 = C30020 * (4 * C30388 + C30169 * C30417);
    const double C10554 = 5 * (3 * C30260 + C30020 * C30545) +
                          C30020 * (4 * C30545 + C30020 * C30605);
    const double C31309 = C31274 / C31009;
    const double C31342 = C31313 / C31013;
    const double C31343 = C31315 + C31282;
    const double C690 = C31282 - C31030 / C31027;
    const double C31312 = C31278 / C31009;
    const double C31325 = C31292 / C31009;
    const double C31349 = C31328 / C31013;
    const double C31350 = C31329 + C31296;
    const double C1460 = C31296 - C31110 / C31027;
    const double C31327 = C31293 / C31009;
    const double C31331 = C31298 / C31009;
    const double C31352 = C31334 / C31013;
    const double C31353 = C31335 + C31302;
    const double C2340 = C31302 - C31152 / C31027;
    const double C31333 = C31299 / C31009;
    const double C29999 = C29973 * C29994;
    const double C9080 =
        (ae * -2 * C29982) / (C29983 * 2 * C29975) +
        (((C29973 * ((-4 * C29986) / C29975 - (C29973 * C29994) / C29975) *
           ae) /
              C29975 +
          2 * ((C29993 * ae) / C29975 - C29982 / C29985)) *
         ae) /
            C29975 -
        C29994 / C29985;
    const double C9084 = (-C29994 / C29975) / (4 * C29983);
    const double C18733 = (-C29994 / C29975) / (2 * C29975);
    const double C18765 = C18730 * C131;
    const double C18763 = C18730 * C130;
    const double C18753 = C18730 * C129;
    const double C18751 = C18730 * C128;
    const double C18749 = C18730 * C127;
    const double C18747 = C18730 * C126;
    const double C18737 = C18730 * C125;
    const double C18735 = C18730 * C124;
    const double C18967 = C18730 * C320;
    const double C18965 = C18730 * C319;
    const double C18955 = C18730 * C310;
    const double C18953 = C18730 * C309;
    const double C18947 = C18730 * C318;
    const double C18945 = C18730 * C317;
    const double C18943 = C18730 * C312;
    const double C18941 = C18730 * C311;
    const double C19169 = C18730 * C521;
    const double C19167 = C18730 * C520;
    const double C19157 = C18730 * C511;
    const double C19155 = C18730 * C510;
    const double C19149 = C18730 * C519;
    const double C19147 = C18730 * C518;
    const double C19145 = C18730 * C513;
    const double C19143 = C18730 * C512;
    const double C19331 = C18730 * C322;
    const double C19329 = C18730 * C321;
    const double C19475 = C18730 * C523;
    const double C19473 = C18730 * C522;
    const double C19691 = C18730 * C972;
    const double C19689 = C18730 * C971;
    const double C19679 = C18730 * C970;
    const double C19677 = C18730 * C969;
    const double C20215 = C18730 * C1199;
    const double C20213 = C18730 * C1198;
    const double C20423 = C18730 * C1342;
    const double C20421 = C18730 * C1341;
    const double C21135 = C18730 * C1336;
    const double C21133 = C18730 * C1335;
    const double C21279 = C18730 * C2059;
    const double C21277 = C18730 * C2058;
    const double C24623 = C18730 * C316;
    const double C24621 = C18730 * C315;
    const double C24611 = C18730 * C314;
    const double C24609 = C18730 * C313;
    const double C25243 = C18730 * C968;
    const double C25241 = C18730 * C967;
    const double C25493 = C18730 * C1203;
    const double C25491 = C18730 * C1202;
    const double C25481 = C18730 * C1201;
    const double C25479 = C18730 * C1200;
    const double C25675 = C18730 * C1346;
    const double C25673 = C18730 * C1345;
    const double C25663 = C18730 * C1344;
    const double C25661 = C18730 * C1343;
    const double C25655 = C18730 * C1338;
    const double C25653 = C18730 * C1337;
    const double C26155 = C18730 * C1752;
    const double C26153 = C18730 * C1751;
    const double C26997 = C18730 * C2464;
    const double C26995 = C18730 * C2463;
    const double C384 = C378 * C31230;
    const double C13390 = C378 * C13229;
    const double C13388 = C378 * C13230;
    const double C585 = C579 * C31230;
    const double C13544 = C579 * C13229;
    const double C1004 = C1001 * C31230;
    const double C13542 = C1001 * C13230;
    const double C14008 = C1001 * C13229;
    const double C168 = C160 - C161;
    const double C369 = C360 - C361;
    const double C701 = C697 - C698;
    const double C570 = C561 - C562;
    const double C813 = C809 - C810;
    const double C997 = C991 - C992;
    const double C2235 = C2233 - C2227;
    const double C2355 = C2347 - C2348;
    const double C5846 = C5845 - C5843;
    const double C6563 = C6562 - C6560;
    const double C6003 = C6002 - C6000;
    const double C2065 =
        (3 * (C30097 + C30020 * C30238 + C30234 * ae) +
         C30020 * (2 * C30238 + C30020 * C30292 + C30283 * ae) +
         (2 * C30234 + C30020 * C30283) * ae) /
        C29975;
    const double C2072 =
        (3 * (C30176 + ae * C30237 + be * C30238 + C30020 * C30286) +
         ae * (2 * C30237 + C30020 * C30291 + C30283 * be) +
         be * (2 * C30238 + C30020 * C30292 + C30283 * ae) +
         C30020 * (2 * C30286 + ae * C30291 + be * C30292 +
                   C30020 * (C30054 + ae * C30281 + be * C30284 +
                             C30020 * (ae * C30136 + be * C30142 +
                                       C30020 * C30026 * C30062)))) /
        C29983;
    const double C2064 =
        (3 * (C30096 + C30020 * C30237 + C30234 * be) +
         C30020 * (2 * C30237 + C30020 * C30291 + C30283 * be) +
         (2 * C30234 + C30020 * C30283) * be) /
        C29975;
    const double C15549 = C15544 - C15545;
    const double C5584 = C5579 - C5580;
    const double C5730 = C5723 - C5724;
    const double C6111 = C6107 - C6108;
    const double C6777 = C6769 - C6770;
    const double C6401 =
        (3 * (C30193 + C30020 * C30339 + C30335 * ae) +
         C30020 * (2 * C30339 + C30020 * C30455 + C30446 * ae) +
         (2 * C30335 + C30020 * C30446) * ae) /
        C29975;
    const double C6405 =
        (3 * (C30329 + ae * C30338 + be * C30339 + C30020 * C30449) +
         ae * (2 * C30338 + C30020 * C30454 + C30446 * be) +
         be * (2 * C30339 + C30020 * C30455 + C30446 * ae) +
         C30020 * (2 * C30449 + ae * C30454 + be * C30455 +
                   C30020 * (C30368 + ae * C30444 + be * C30447 +
                             C30020 * (ae * C30393 + be * C30399 +
                                       C30020 * C30169 * C30062)))) /
        C29983;
    const double C6400 =
        (3 * (C30191 + C30020 * C30338 + C30335 * be) +
         C30020 * (2 * C30338 + C30020 * C30454 + C30446 * be) +
         (2 * C30335 + C30020 * C30446) * be) /
        C29975;
    const double C30553 = C30526 + C30551;
    const double C30552 = C30520 + C30550;
    const double C30577 = C30557 + C30558;
    const double C177 = C172 + C159;
    const double C379 = C373 + C355;
    const double C380 = C374 + C359;
    const double C580 = C574 + C556;
    const double C581 = C575 + C560;
    const double C1002 = C999 + C990;
    const double C2238 = C2236 + C2232;
    const double C2358 = C2356 - C2353;
    const double C1484 = C1482 * C31230;
    const double C13391 = C1482 * C13230;
    const double C14517 = C1482 * C13229;
    const double C1650 = C1648 * C31230;
    const double C14009 = C1648 * C13230;
    const double C14713 = C1648 * C13229;
    const double C5587 = C5585 + C5578;
    const double C5736 = C5732 + C5718;
    const double C5737 = C5733 + C5722;
    const double C6780 = C6778 - C6775;
    const double C142 =
        (5 * (3 * C30052 + C30026 * C30066) +
         C30026 *
             (4 * C30066 +
              C30026 * (3 * C30064 +
                        C30026 * (2 * C30026 * C30062 +
                                  C30026 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30038))))) /
        C29983;
    const double C336 = (2 * C30026 * C30042 + C30026 * C30052 +
                         C30066 * std::pow(yP - yQ, 2)) /
                        C29983;
    const double C337 = ((yP - yQ) * (3 * C30052 + C30026 * C30066)) / C29983;
    const double C338 =
        (3 * C30052 + C30026 * C30066 +
         (3 * C30064 +
          C30026 * (2 * C30026 * C30062 +
                    C30026 * (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038))) *
             std::pow(yP - yQ, 2)) /
        C29983;
    const double C537 =
        (2 * C30026 * C30042 + C30026 * C30052 +
         ae * (C30020 * C30131 + C30127 * be) +
         be * (C30020 * C30132 + C30127 * ae) +
         C30020 * (ae * C30131 + be * C30132 + C30020 * C30066)) /
        C29983;
    const double C538 = (ae * (3 * C30107 + C30026 * C30131) +
                         be * (3 * C30108 + C30026 * C30132) +
                         C30020 * (3 * C30052 + C30026 * C30066)) /
                        C29983;
    const double C695 =
        ((yP - yQ) *
         (4 * C30066 +
          C30026 * (3 * C30064 +
                    C30026 * (2 * C30026 * C30062 +
                              C30026 * (C30062 +
                                        (C30056 * C30057 +
                                         C30023 * bs[8] * std::pow(C30018, 8)) *
                                            C29974 * C30038))))) /
        C29983;
    const double C980 = (ae * C30169 * C30131 + be * C30169 * C30132 +
                         C30020 * C30169 * C30066) /
                        C29983;
    const double C1467 =
        (2 * C30169 * C30066 +
         C30169 * (C30066 +
                   (2 * C30026 * C30062 +
                    C30026 * (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038)) *
                       C30179)) /
        C29983;
    const double C1633 =
        (ae * (C30131 + C30159 * C30179) + be * (C30132 + C30161 * C30179) +
         C30020 * (C30066 +
                   (2 * C30026 * C30062 +
                    C30026 * (C30062 + (C30056 * C30057 +
                                        C30023 * bs[8] * std::pow(C30018, 8)) *
                                           C29974 * C30038)) *
                       C30179)) /
        C29983;
    const double C2223 =
        (C30169 * C30066 + ae * (C30020 * C30317 + C30318 * be) +
         be * (C30020 * C30319 + C30318 * ae) +
         C30020 *
             (ae * C30317 + be * C30319 +
              C30020 * C30169 *
                  (2 * C30026 * C30062 +
                   C30026 * (C30062 + (C30056 * C30057 +
                                       C30023 * bs[8] * std::pow(C30018, 8)) *
                                          C29974 * C30038)))) /
        C29983;
    const double C1481 = C1479 + C1472;
    const double C1647 = C1645 + C1638;
    const double C5573 =
        (5 * (3 * C30366 + C30169 * C30373) +
         C30169 *
             (4 * C30373 +
              C30169 * (3 * C30371 +
                        C30169 * (2 * C30169 * C30062 +
                                  C30169 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30179))))) /
        C29983;
    const double C5707 =
        (2 * C30329 + C30169 * C30366 + ae * (C30020 * C30387 + C30388 * be) +
         be * (C30020 * C30389 + C30388 * ae) +
         C30020 * (ae * C30387 + be * C30389 + C30020 * C30373)) /
        C29983;
    const double C5708 = (ae * (3 * C30201 + C30169 * C30387) +
                          be * (3 * C30203 + C30169 * C30389) +
                          C30020 * (3 * C30366 + C30169 * C30373)) /
                         C29983;
    const double C30678 = C30667 + C30674;
    const double C30603 = C30020 * C30597;
    const double C30721 = C30708 + C30715;
    const double C135 = (5 * (3 * C30108 + C30026 * C30132) +
                         C30026 * (4 * C30132 + C30026 * C30165)) /
                        C29975;
    const double C328 =
        (3 * C30108 + C30026 * C30132 + C30165 * C30179) / C29975;
    const double C529 =
        (3 * C30108 + C30026 * C30132 +
         C30020 * (C30020 * C30165 + C30160 * ae) + C30020 * C30160 * ae) /
        C29975;
    const double C694 = (C30169 * (4 * C30132 + C30026 * C30165)) / C29975;
    const double C806 = (C30020 * (4 * C30132 + C30026 * C30165) +
                         (4 * C30127 + C30026 * C30160) * ae) /
                        C29975;
    const double C976 =
        (C30020 * C30169 * C30165 + C30169 * C30160 * ae) / C29975;
    const double C2344 = (2 * (C30020 * C30132 + C30127 * ae) +
                          C30020 * (C30132 + C30020 * C30327 + C30323 * ae) +
                          (C30127 + C30154 * C30023) * ae) /
                         C29975;
    const double C30315 = C30313 + C30308;
    const double C5571 = (5 * (3 * C30203 + C30169 * C30389) +
                          C30169 * (4 * C30389 + C30169 * C30418)) /
                         C29975;
    const double C5706 =
        (3 * C30203 + C30169 * C30389 +
         C30020 * (C30020 * C30418 + C30417 * ae) + C30020 * C30417 * ae) /
        C29975;
    const double C6104 = (C30020 * (4 * C30389 + C30169 * C30418) +
                          (4 * C30388 + C30169 * C30417) * ae) /
                         C29975;
    const double C6766 = (2 * (C30020 * C30389 + C30388 * ae) +
                          C30020 * (C30389 + C30020 * C30513 + C30509 * ae) +
                          (C30388 + C30411 * C30023) * ae) /
                         C29975;
    const double C30478 = C30476 + C30471;
    const double C30644 = C30642 + C30638;
    const double C30682 = C30020 * C30680;
    const double C30609 = C30574 + C30606;
    const double C30728 = C30020 * C30726;
    const double C539 =
        (3 * C30052 + C30026 * C30066 + ae * (C30020 * C30164 + C30160 * be) +
         be * (C30020 * C30165 + C30160 * ae) +
         C30020 *
             (ae * C30164 + be * C30165 +
              C30020 * (3 * C30064 +
                        C30026 * (2 * C30026 * C30062 +
                                  C30026 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30038))))) /
        C29983;
    const double C807 =
        (ae * (4 * C30131 + C30026 * C30164) +
         be * (4 * C30132 + C30026 * C30165) +
         C30020 *
             (4 * C30066 +
              C30026 * (3 * C30064 +
                        C30026 * (2 * C30026 * C30062 +
                                  C30026 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30038))))) /
        C29983;
    const double C981 =
        (ae * C30169 * C30164 + be * C30169 * C30165 +
         C30020 * C30169 *
             (3 * C30064 +
              C30026 *
                  (2 * C30026 * C30062 +
                   C30026 * (C30062 + (C30056 * C30057 +
                                       C30023 * bs[8] * std::pow(C30018, 8)) *
                                          C29974 * C30038)))) /
        C29983;
    const double C134 = (5 * (3 * C30107 + C30026 * C30131) +
                         C30026 * (4 * C30131 + C30026 * C30164)) /
                        C29975;
    const double C327 =
        (3 * C30107 + C30026 * C30131 + C30164 * C30179) / C29975;
    const double C528 =
        (3 * C30107 + C30026 * C30131 +
         C30020 * (C30020 * C30164 + C30160 * be) + C30020 * C30160 * be) /
        C29975;
    const double C693 = (C30169 * (4 * C30131 + C30026 * C30164)) / C29975;
    const double C805 = (C30020 * (4 * C30131 + C30026 * C30164) +
                         (4 * C30127 + C30026 * C30160) * be) /
                        C29975;
    const double C975 =
        (C30020 * C30169 * C30164 + C30169 * C30160 * be) / C29975;
    const double C2345 =
        (2 * (ae * C30131 + be * C30132 + C30020 * C30066) +
         ae * (C30131 + C30020 * C30326 + C30323 * be) +
         be * (C30132 + C30020 * C30327 + C30323 * ae) +
         C30020 *
             (C30066 + ae * C30326 + be * C30327 +
              C30020 * (ae * C30159 + be * C30161 +
                        C30020 * (2 * C30026 * C30062 +
                                  C30026 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30038))))) /
        C29983;
    const double C2343 = (2 * (C30020 * C30131 + C30127 * be) +
                          C30020 * (C30131 + C30020 * C30326 + C30323 * be) +
                          (C30127 + C30154 * C30023) * be) /
                         C29975;
    const double C30314 = C30312 + C30305;
    const double C5709 =
        (3 * C30366 + C30169 * C30373 + ae * (C30020 * C30416 + C30417 * be) +
         be * (C30020 * C30418 + C30417 * ae) +
         C30020 *
             (ae * C30416 + be * C30418 +
              C30020 * (3 * C30371 +
                        C30169 * (2 * C30169 * C30062 +
                                  C30169 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30179))))) /
        C29983;
    const double C6105 =
        (ae * (4 * C30387 + C30169 * C30416) +
         be * (4 * C30389 + C30169 * C30418) +
         C30020 *
             (4 * C30373 +
              C30169 * (3 * C30371 +
                        C30169 * (2 * C30169 * C30062 +
                                  C30169 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30179))))) /
        C29983;
    const double C5570 = (5 * (3 * C30201 + C30169 * C30387) +
                          C30169 * (4 * C30387 + C30169 * C30416)) /
                         C29975;
    const double C5705 =
        (3 * C30201 + C30169 * C30387 +
         C30020 * (C30020 * C30416 + C30417 * be) + C30020 * C30417 * be) /
        C29975;
    const double C6103 = (C30020 * (4 * C30387 + C30169 * C30416) +
                          (4 * C30388 + C30169 * C30417) * be) /
                         C29975;
    const double C6767 =
        (2 * (ae * C30387 + be * C30389 + C30020 * C30373) +
         ae * (C30387 + C30020 * C30512 + C30509 * be) +
         be * (C30389 + C30020 * C30513 + C30509 * ae) +
         C30020 *
             (C30373 + ae * C30512 + be * C30513 +
              C30020 * (ae * C30410 + be * C30412 +
                        C30020 * (2 * C30169 * C30062 +
                                  C30169 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30179))))) /
        C29983;
    const double C6765 = (2 * (C30020 * C30387 + C30388 * be) +
                          C30020 * (C30387 + C30020 * C30512 + C30509 * be) +
                          (C30388 + C30411 * C30023) * be) /
                         C29975;
    const double C30477 = C30475 + C30468;
    const double C30643 = C30641 + C30635;
    const double C30681 = C30020 * C30679;
    const double C30608 = C30566 + C30604;
    const double C30727 = C30020 * C30725;
    const double C31363 = C31309 + C31355;
    const double C689 = C31342 - (C31032 * C31014) / C31009;
    const double C111 = C31343 / C31013 - C31030 / C31316;
    const double C31356 = C31312 + C31342;
    const double C31364 = C31325 + C31359;
    const double C1459 = C31349 - (C31112 * C31101) / C31009;
    const double C1187 = C31350 / C31013 - C31110 / C31316;
    const double C31360 = C31327 + C31349;
    const double C31365 = C31331 + C31361;
    const double C2339 = C31352 - (C31154 * C31143) / C31009;
    const double C2048 = C31353 / C31013 - C31152 / C31316;
    const double C31362 = C31333 + C31352;
    const double C9082 =
        (((-4 * C29986) / C29975 - C29999 / C29975) * ae) / C29985 +
        ((2 * ((0 * ae) / C29975 - C29986 / C29983) - C29999 / C29985) * ae) /
            C29975;
    const double C18731 =
        (((-4 * C29986) / C29975 - C29999 / C29975) * ae) / C29975;
    const double C18760 = C18733 * C508;
    const double C18756 = C18733 * C506;
    const double C18744 = C18733 * C500;
    const double C18740 = C18733 * C501;
    const double C18962 = C18733 * C1327;
    const double C18958 = C18733 * C964;
    const double C18950 = C18733 * C1328;
    const double C18938 = C18733 * C963;
    const double C19164 = C18733 * C2050;
    const double C19160 = C18733 * C505;
    const double C19152 = C18733 * C2051;
    const double C19140 = C18733 * C504;
    const double C19326 = C18733 * C965;
    const double C19470 = C18733 * C507;
    const double C19686 = C18733 * C1324;
    const double C19682 = C18733 * C1325;
    const double C20210 = C18733 * C1749;
    const double C20418 = C18733 * C1331;
    const double C21130 = C18733 * C2461;
    const double C21274 = C18733 * C2054;
    const double C24618 = C18733 * C1329;
    const double C24614 = C18733 * C962;
    const double C25238 = C18733 * C1326;
    const double C25488 = C18733 * C5699;
    const double C25484 = C18733 * C1748;
    const double C25670 = C18733 * C6395;
    const double C25666 = C18733 * C1330;
    const double C25658 = C18733 * C2460;
    const double C26150 = C18733 * C5698;
    const double C26992 = C18733 * C6396;
    const double C173 = C168 - C162;
    const double C375 = C369 - C362;
    const double C702 = C701 - C699;
    const double C576 = C570 - C563;
    const double C814 = C813 - C811;
    const double C1000 = C997 - C993;
    const double C2237 = C2235 + C2228;
    const double C2357 = C2355 - C2349;
    const double C5847 = C5846 + C5844;
    const double C6564 = C6563 + C6561;
    const double C6004 = C6003 + C6001;
    const double C21275 = C18732 * C2065;
    const double C21276 = C18729 * C2072;
    const double C21273 = C18732 * C2064;
    const double C15550 = C15549 - C15546;
    const double C5586 = C5584 - C5581;
    const double C5734 = C5730 - C5725;
    const double C6112 = C6111 - C6109;
    const double C6779 = C6777 - C6771;
    const double C26993 = C18732 * C6401;
    const double C26994 = C18729 * C6405;
    const double C26991 = C18732 * C6400;
    const double C30555 = C30553 + C30542;
    const double C30554 = C30552 + C30539;
    const double C30585 = C30577 + C30559;
    const double C182 = C177 * C31230;
    const double C13241 = C177 * C13229;
    const double C385 = C379 * C31230;
    const double C13395 = C379 * C13229;
    const double C13393 = C379 * C13230;
    const double C386 = C380 * C31230;
    const double C13239 = C380 * C13230;
    const double C13681 = C380 * C13229;
    const double C586 = C580 * C31230;
    const double C13549 = C580 * C13229;
    const double C587 = C581 * C31230;
    const double C13813 = C581 * C13229;
    const double C1005 = C1002 * C31230;
    const double C13547 = C1002 * C13230;
    const double C14011 = C1002 * C13229;
    const double C2240 = C2238 * C31230;
    const double C13545 = C2238 * C13230;
    const double C15413 = C2238 * C13229;
    const double C2360 = C2358 + C2354;
    const double C6782 = C6780 + C6776;
    const double C363 = C31243 * C336;
    const double C700 = C31243 * C337;
    const double C564 = C31243 * C537;
    const double C19472 = C18729 * C537;
    const double C812 = C31243 * C538;
    const double C18762 = C18729 * C538;
    const double C994 = C31243 * C980;
    const double C19328 = C18729 * C980;
    const double C1483 = C1481 * C31230;
    const double C13394 = C1481 * C13230;
    const double C1649 = C1647 * C31230;
    const double C14010 = C1647 * C13230;
    const double C5726 = C31243 * C5707;
    const double C26152 = C18729 * C5707;
    const double C6110 = C31243 * C5708;
    const double C25490 = C18729 * C5708;
    const double C2067 =
        (3 * (C30108 + C30020 * C30230 + C30226 * ae) +
         C30020 * (2 * C30230 + C30020 * C30315 + C30306 * ae) +
         (2 * C30226 + C30020 * C30306) * ae) /
        C29975;
    const double C6403 =
        (3 * (C30203 + C30020 * C30432 + C30428 * ae) +
         C30020 * (2 * C30432 + C30020 * C30478 + C30469 * ae) +
         (2 * C30428 + C30020 * C30469) * ae) /
        C29975;
    const double C10709 =
        (3 * (C30189 + C30020 * C30351 + C30347 * ae) +
         C30020 * (2 * C30351 + C30020 * C30644 + C30636 * ae) +
         (2 * C30347 + C30020 * C30636) * ae) /
        C29975;
    const double C30684 = C30657 + C30682;
    const double C30611 = C30609 + C30592;
    const double C30730 = C30697 + C30728;
    const double C2073 =
        (3 * (C30052 + ae * C30229 + be * C30230 + C30020 * C30309) +
         ae * (2 * C30229 + C30020 * C30314 + C30306 * be) +
         be * (2 * C30230 + C30020 * C30315 + C30306 * ae) +
         C30020 *
             (2 * C30309 + ae * C30314 + be * C30315 +
              C30020 * (C30064 + ae * C30304 + be * C30307 +
                        C30020 * (ae * C30153 + be * C30155 +
                                  C30020 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30038))))) /
        C29983;
    const double C2066 =
        (3 * (C30107 + C30020 * C30229 + C30226 * be) +
         C30020 * (2 * C30229 + C30020 * C30314 + C30306 * be) +
         (2 * C30226 + C30020 * C30306) * be) /
        C29975;
    const double C6406 =
        (3 * (C30366 + ae * C30431 + be * C30432 + C30020 * C30472) +
         ae * (2 * C30431 + C30020 * C30477 + C30469 * be) +
         be * (2 * C30432 + C30020 * C30478 + C30469 * ae) +
         C30020 *
             (2 * C30472 + ae * C30477 + be * C30478 +
              C30020 * (C30371 + ae * C30467 + be * C30470 +
                        C30020 * (ae * C30402 + be * C30406 +
                                  C30020 * (C30062 + (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                         C29974 * C30179))))) /
        C29983;
    const double C6402 =
        (3 * (C30201 + C30020 * C30431 + C30428 * be) +
         C30020 * (2 * C30431 + C30020 * C30477 + C30469 * be) +
         (2 * C30428 + C30020 * C30469) * be) /
        C29975;
    const double C10710 =
        (3 * (C30341 + ae * C30350 + be * C30351 + C30020 * C30633) +
         ae * (2 * C30350 + C30020 * C30643 + C30636 * be) +
         be * (2 * C30351 + C30020 * C30644 + C30636 * ae) +
         C30020 *
             (2 * C30633 + ae * C30643 + be * C30644 +
              C30020 * (C30621 + ae * C30634 + be * C30637 +
                        C30020 * (ae * C30622 + be * C30624 +
                                  C30020 * C30169 * C30026 *
                                      (C30056 * C30057 +
                                       C30023 * bs[8] * std::pow(C30018, 8)) *
                                      C29974)))) /
        C29983;
    const double C10708 =
        (3 * (C30187 + C30020 * C30350 + C30347 * be) +
         C30020 * (2 * C30350 + C30020 * C30643 + C30636 * be) +
         (2 * C30347 + C30020 * C30636) * be) /
        C29975;
    const double C30683 = C30651 + C30681;
    const double C30610 = C30608 + C30589;
    const double C30729 = C30693 + C30727;
    const double C108 =
        (C31354 + 2 * C31023) / C31013 - (C31363 * C31014) / C31009;
    const double C109 =
        (C31341 + 2 * C31032 + C31363) / C31013 - (C31356 * C31014) / C31009;
    const double C110 = (C31314 + C31029 / C31009 + C31356) / C31013 -
                        (C31343 * C31014) / C31009;
    const double C1184 =
        (C31357 + 2 * C31105) / C31013 - (C31364 * C31101) / C31009;
    const double C1185 =
        (C31345 + 2 * C31112 + C31364) / C31013 - (C31360 * C31101) / C31009;
    const double C1186 = (C31320 + C31109 / C31009 + C31360) / C31013 -
                         (C31350 * C31101) / C31009;
    const double C2045 =
        (C31358 + 2 * C31147) / C31013 - (C31365 * C31143) / C31009;
    const double C2046 =
        (C31347 + 2 * C31154 + C31365) / C31013 - (C31362 * C31143) / C31009;
    const double C2047 = (C31323 + C31151 / C31009 + C31362) / C31013 -
                         (C31353 * C31143) / C31009;
    const double C18764 = C18731 * C119;
    const double C18752 = C18731 * C118;
    const double C18748 = C18731 * C117;
    const double C18736 = C18731 * C116;
    const double C18966 = C18731 * C304;
    const double C18954 = C18731 * C299;
    const double C18946 = C18731 * C303;
    const double C18942 = C18731 * C300;
    const double C19168 = C18731 * C505;
    const double C19156 = C18731 * C500;
    const double C19148 = C18731 * C504;
    const double C19144 = C18731 * C501;
    const double C19330 = C18731 * C305;
    const double C19474 = C18731 * C506;
    const double C19690 = C18731 * C964;
    const double C19678 = C18731 * C963;
    const double C20214 = C18731 * C1191;
    const double C20422 = C18731 * C1328;
    const double C21134 = C18731 * C1325;
    const double C21278 = C18731 * C2051;
    const double C24622 = C18731 * C302;
    const double C24610 = C18731 * C301;
    const double C25242 = C18731 * C962;
    const double C25492 = C18731 * C1193;
    const double C25480 = C18731 * C1192;
    const double C25674 = C18731 * C1330;
    const double C25662 = C18731 * C1329;
    const double C25654 = C18731 * C1326;
    const double C26154 = C18731 * C1748;
    const double C26996 = C18731 * C2460;
    const double C18773 = C18759 - C18760;
    const double C18772 = C18755 - C18756;
    const double C18769 = C18743 - C18744;
    const double C18768 = C18739 - C18740;
    const double C18975 = C18961 - C18962;
    const double C18974 = C18957 - C18958;
    const double C18972 = C18949 - C18950;
    const double C18969 = C18937 - C18938;
    const double C19177 = C19163 - C19164;
    const double C19176 = C19159 - C19160;
    const double C19174 = C19151 - C19152;
    const double C19171 = C19139 - C19140;
    const double C19333 = C19325 - C19326;
    const double C19477 = C19469 - C19470;
    const double C19695 = C19685 - C19686;
    const double C19694 = C19681 - C19682;
    const double C20217 = C20209 - C20210;
    const double C20425 = C20417 - C20418;
    const double C21137 = C21129 - C21130;
    const double C24627 = C24617 - C24618;
    const double C24626 = C24613 - C24614;
    const double C25245 = C25237 - C25238;
    const double C25497 = C25487 - C25488;
    const double C25496 = C25483 - C25484;
    const double C25681 = C25669 - C25670;
    const double C25680 = C25665 - C25666;
    const double C25678 = C25657 - C25658;
    const double C26157 = C26149 - C26150;
    const double C178 = C173 + C163;
    const double C2239 = C2237 * C31230;
    const double C13548 = C2237 * C13230;
    const double C2359 = C2357 + C2350;
    const double C14516 = C5847 * C13230;
    const double C15412 = C6564 * C13230;
    const double C14712 = C6004 * C13230;
    const double C21281 = C21273 - C21274;
    const double C15551 = C15550 + C15547;
    const double C5588 = C5586 + C5582;
    const double C6781 = C6779 + C6772;
    const double C26999 = C26991 - C26992;
    const double C10556 =
        (4 * (2 * C30246 + C30020 * C30269 + C30260 * ae) +
         C30020 * (3 * C30269 + C30020 * C30555 + C30545 * ae) +
         (3 * C30260 + C30020 * C30545) * ae) /
        C29975;
    const double C10559 =
        (4 * (2 * C30263 + ae * C30268 + be * C30269 + C30020 * C30547) +
         ae * (3 * C30268 + C30020 * C30554 + C30545 * be) +
         be * (3 * C30269 + C30020 * C30555 + C30545 * ae) +
         C30020 * (3 * C30547 + ae * C30554 + be * C30555 +
                   C30020 * (2 * C30537 + ae * C30548 + be * C30549 +
                             C30020 * (C30050 + ae * C30531 + be * C30534 +
                                       C30020 * (ae * C30118 + be * C30122 +
                                                 C30020 * C30062))))) /
        C29983;
    const double C10555 =
        (4 * (2 * C30245 + C30020 * C30268 + C30260 * be) +
         C30020 * (3 * C30268 + C30020 * C30554 + C30545 * be) +
         (3 * C30260 + C30020 * C30545) * be) /
        C29975;
    const double C30607 = C30585 + C30603;
    const double C2362 = C2360 * C31230;
    const double C15548 = C2360 * C13229;
    const double C381 = C375 + C363;
    const double C703 = C702 + C700;
    const double C582 = C576 + C564;
    const double C815 = C814 + C812;
    const double C1003 = C1000 + C994;
    const double C5738 = C5734 + C5726;
    const double C6113 = C6112 + C6110;
    const double C30686 = C30684 + C30673;
    const double C30613 = C30020 * C30611;
    const double C30732 = C30730 + C30720;
    const double C30685 = C30683 + C30670;
    const double C30612 = C30020 * C30610;
    const double C30731 = C30729 + C30717;
    const double C18774 = C18763 - C18764;
    const double C18771 = C18751 - C18752;
    const double C18770 = C18747 - C18748;
    const double C18767 = C18735 - C18736;
    const double C18976 = C18965 - C18966;
    const double C18973 = C18953 - C18954;
    const double C18971 = C18945 - C18946;
    const double C18970 = C18941 - C18942;
    const double C19178 = C19167 - C19168;
    const double C19175 = C19155 - C19156;
    const double C19173 = C19147 - C19148;
    const double C19172 = C19143 - C19144;
    const double C19334 = C19329 - C19330;
    const double C19478 = C19473 - C19474;
    const double C19696 = C19689 - C19690;
    const double C19693 = C19677 - C19678;
    const double C20218 = C20213 - C20214;
    const double C20426 = C20421 - C20422;
    const double C21138 = C21133 - C21134;
    const double C21282 = C21277 - C21278;
    const double C24628 = C24621 - C24622;
    const double C24625 = C24609 - C24610;
    const double C25246 = C25241 - C25242;
    const double C25498 = C25491 - C25492;
    const double C25495 = C25479 - C25480;
    const double C25682 = C25673 - C25674;
    const double C25679 = C25661 - C25662;
    const double C25677 = C25653 - C25654;
    const double C26158 = C26153 - C26154;
    const double C27000 = C26995 - C26996;
    const double C18781 = C18773 - C18761;
    const double C18780 = C18772 - C18757;
    const double C18777 = C18769 - C18745;
    const double C18776 = C18768 - C18741;
    const double C18983 = C18975 - C18963;
    const double C18982 = C18974 - C18959;
    const double C18980 = C18972 - C18951;
    const double C18977 = C18969 - C18939;
    const double C19185 = C19177 - C19165;
    const double C19184 = C19176 - C19161;
    const double C19182 = C19174 - C19153;
    const double C19179 = C19171 - C19141;
    const double C19335 = C19333 - C19327;
    const double C19479 = C19477 - C19471;
    const double C19699 = C19695 - C19687;
    const double C19698 = C19694 - C19683;
    const double C20219 = C20217 - C20211;
    const double C20427 = C20425 - C20419;
    const double C21139 = C21137 - C21131;
    const double C24631 = C24627 - C24619;
    const double C24630 = C24626 - C24615;
    const double C25247 = C25245 - C25239;
    const double C25501 = C25497 - C25489;
    const double C25500 = C25496 - C25485;
    const double C25687 = C25681 - C25671;
    const double C25686 = C25680 - C25667;
    const double C25684 = C25678 - C25659;
    const double C26159 = C26157 - C26151;
    const double C183 = C178 * C31230;
    const double C2361 = C2359 * C31230;
    const double C21283 = C21281 - C21275;
    const double C15552 = C15551 * C13230;
    const double C27001 = C26999 - C26993;
    const double C387 = C381 * C31230;
    const double C13680 = C381 * C13230;
    const double C704 = C703 * C31230;
    const double C13240 = C703 * C13230;
    const double C588 = C582 * C31230;
    const double C816 = C815 * C31230;
    const double C1006 = C1003 * C31230;
    const double C13812 = C1003 * C13230;
    const double C10811 =
        (4 * (2 * C30238 + C30020 * C30292 + C30283 * ae) +
         C30020 * (3 * C30292 + C30020 * C30686 + C30676 * ae) +
         (3 * C30283 + C30020 * C30676) * ae) /
        C29975;
    const double C30615 = C30573 + C30613;
    const double C10913 =
        (4 * (2 * C30339 + C30020 * C30455 + C30446 * ae) +
         C30020 * (3 * C30455 + C30020 * C30732 + C30723 * ae) +
         (3 * C30446 + C30020 * C30723) * ae) /
        C29975;
    const double C10812 =
        (4 * (2 * C30286 + ae * C30291 + be * C30292 + C30020 * C30678) +
         ae * (3 * C30291 + C30020 * C30685 + C30676 * be) +
         be * (3 * C30292 + C30020 * C30686 + C30676 * ae) +
         C30020 * (3 * C30678 + ae * C30685 + be * C30686 +
                   C30020 * (2 * C30668 + ae * C30679 + be * C30680 +
                             C30020 * (C30420 + ae * C30662 + be * C30665 +
                                       C30020 * (ae * C30481 + be * C30485 +
                                                 C30020 * C30026 *
                                                     (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                     C29974))))) /
        C29983;
    const double C10810 =
        (4 * (2 * C30237 + C30020 * C30291 + C30283 * be) +
         C30020 * (3 * C30291 + C30020 * C30685 + C30676 * be) +
         (3 * C30283 + C30020 * C30676) * be) /
        C29975;
    const double C30614 = C30565 + C30612;
    const double C10914 =
        (4 * (2 * C30449 + ae * C30454 + be * C30455 + C30020 * C30721) +
         ae * (3 * C30454 + C30020 * C30731 + C30723 * be) +
         be * (3 * C30455 + C30020 * C30732 + C30723 * ae) +
         C30020 * (3 * C30721 + ae * C30731 + be * C30732 +
                   C30020 * (2 * C30709 + ae * C30725 + be * C30726 +
                             C30020 * (C30692 + ae * C30710 + be * C30713 +
                                       C30020 * (ae * C30694 + be * C30698 +
                                                 C30020 * C30169 *
                                                     (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                     C29974))))) /
        C29983;
    const double C10912 =
        (4 * (2 * C30338 + C30020 * C30454 + C30446 * be) +
         C30020 * (3 * C30454 + C30020 * C30731 + C30723 * be) +
         (3 * C30446 + C30020 * C30723) * be) /
        C29975;
    const double C18782 = C18774 - C18765;
    const double C18779 = C18771 - C18753;
    const double C18778 = C18770 - C18749;
    const double C18775 = C18767 - C18737;
    const double C18984 = C18976 - C18967;
    const double C18981 = C18973 - C18955;
    const double C18979 = C18971 - C18947;
    const double C18978 = C18970 - C18943;
    const double C19186 = C19178 - C19169;
    const double C19183 = C19175 - C19157;
    const double C19181 = C19173 - C19149;
    const double C19180 = C19172 - C19145;
    const double C19336 = C19334 - C19331;
    const double C19480 = C19478 - C19475;
    const double C19700 = C19696 - C19691;
    const double C19697 = C19693 - C19679;
    const double C20220 = C20218 - C20215;
    const double C20428 = C20426 - C20423;
    const double C21140 = C21138 - C21135;
    const double C21284 = C21282 - C21279;
    const double C24632 = C24628 - C24623;
    const double C24629 = C24625 - C24611;
    const double C25248 = C25246 - C25243;
    const double C25502 = C25498 - C25493;
    const double C25499 = C25495 - C25481;
    const double C25688 = C25682 - C25675;
    const double C25685 = C25679 - C25663;
    const double C25683 = C25677 - C25655;
    const double C26160 = C26158 - C26155;
    const double C27002 = C27000 - C26997;
    const double C18789 = C18781 + C18762;
    const double C18788 = C18780 + C18758;
    const double C18785 = C18777 + C18746;
    const double C18784 = C18776 + C18742;
    const double C18991 = C18983 + C18964;
    const double C18990 = C18982 + C18960;
    const double C18988 = C18980 + C18952;
    const double C18985 = C18977 + C18940;
    const double C19193 = C19185 + C19166;
    const double C19192 = C19184 + C19162;
    const double C19190 = C19182 + C19154;
    const double C19187 = C19179 + C19142;
    const double C19337 = C19335 + C19328;
    const double C19481 = C19479 + C19472;
    const double C19703 = C19699 + C19688;
    const double C19702 = C19698 + C19684;
    const double C20221 = C20219 + C20212;
    const double C20429 = C20427 + C20420;
    const double C21141 = C21139 + C21132;
    const double C24635 = C24631 + C24620;
    const double C24634 = C24630 + C24616;
    const double C25249 = C25247 + C25240;
    const double C25505 = C25501 + C25490;
    const double C25504 = C25500 + C25486;
    const double C25693 = C25687 + C25672;
    const double C25692 = C25686 + C25668;
    const double C25690 = C25684 + C25660;
    const double C26161 = C26159 + C26152;
    const double C21285 = C21283 + C21276;
    const double C27003 = C27001 + C26994;
    const double C30617 = C30615 + C30602;
    const double C30616 = C30614 + C30599;
    const double C18790 = C18782 + C18766;
    const double C18787 = C18779 + C18754;
    const double C18786 = C18778 + C18750;
    const double C18783 = C18775 + C18738;
    const double C18992 = C18984 + C18968;
    const double C18989 = C18981 + C18956;
    const double C18987 = C18979 + C18948;
    const double C18986 = C18978 + C18944;
    const double C19194 = C19186 + C19170;
    const double C19191 = C19183 + C19158;
    const double C19189 = C19181 + C19150;
    const double C19188 = C19180 + C19146;
    const double C19338 = C19336 + C19332;
    const double C19482 = C19480 + C19476;
    const double C19704 = C19700 + C19692;
    const double C19701 = C19697 + C19680;
    const double C20222 = C20220 + C20216;
    const double C20430 = C20428 + C20424;
    const double C21142 = C21140 + C21136;
    const double C21286 = C21284 + C21280;
    const double C24636 = C24632 + C24624;
    const double C24633 = C24629 + C24612;
    const double C25250 = C25248 + C25244;
    const double C25506 = C25502 + C25494;
    const double C25503 = C25499 + C25482;
    const double C25694 = C25688 + C25676;
    const double C25691 = C25685 + C25664;
    const double C25689 = C25683 + C25656;
    const double C26162 = C26160 + C26156;
    const double C27004 = C27002 + C26998;
    const double C10558 =
        (5 * (3 * C30269 + C30020 * C30555 + C30545 * ae) +
         C30020 * (4 * C30555 + C30020 * C30617 + C30605 * ae) +
         (4 * C30545 + C30020 * C30605) * ae) /
        C29975;
    const double C10560 =
        (5 * (3 * C30547 + ae * C30554 + be * C30555 + C30020 * C30607) +
         ae * (4 * C30554 + C30020 * C30616 + C30605 * be) +
         be * (4 * C30555 + C30020 * C30617 + C30605 * ae) +
         C30020 *
             (4 * C30607 + ae * C30616 + be * C30617 +
              C30020 *
                  (3 * C30597 + ae * C30610 + be * C30611 +
                   C30020 * (2 * C30587 + ae * C30598 + be * C30601 +
                             C30020 * (C30062 + ae * C30580 + be * C30583 +
                                       C30020 * (ae * C30145 + be * C30149 +
                                                 C30020 *
                                                     (C30056 * C30057 +
                                                      C30023 * bs[8] *
                                                          std::pow(C30018, 8)) *
                                                     C29974)))))) /
        C29983;
    const double C10557 =
        (5 * (3 * C30268 + C30020 * C30554 + C30545 * be) +
         C30020 * (4 * C30554 + C30020 * C30616 + C30605 * be) +
         (4 * C30545 + C30020 * C30605) * be) /
        C29975;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                        C13229 +
                    C4926 * C13230) *
                       C13231 +
                   (C13234 + C13235) * C13232) *
                      C31064 * C31105 -
                  ((C13388 + C13389) * C13232 +
                   (C4927 * C13230 + C4926 * C13229) * C13231) *
                      C31064 * C31112 +
                  ((C4927 * C13229 + C4928 * C13230) * C13231 +
                   (C13390 + C13391) * C13232) *
                      C31064 * C2938) *
                     C31023 +
                 (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                      C31064 * C31112 -
                  ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                      C31064 * C31105 -
                  ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                      C31064 * C2938) *
                     C31032 +
                 (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) *
                      C31064 * C31105 -
                  ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                      C31064 * C31112 +
                  ((C13395 + C13394) * C13231 +
                   (C381 * C13229 + (C113 * C1465 - C114 * C1464 -
                                     C113 * C1466 + C31243 * C1467) *
                                        C13230) *
                       C13232) *
                      C31064 * C2938) *
                     C2941)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31105 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C31112 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C31290 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C2938) *
              C2678 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C31105 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31112 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                C31290) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C31364 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31360 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31350 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C31064 * C31330) *
              C2678 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31360 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C31364 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31350 +
           ((C14517 + C14516) * C13231 +
            (C1481 * C13229 +
             (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                 C13230) *
                C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C2570 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31109) *
              C31363 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31109 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C2570) *
              C31356 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C2570 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C31109) *
              C31343 +
          (((C13681 + C13680) * C13231 +
            (C703 * C13229 +
             (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                 C13230) *
                C13232) *
               C31064 * C31109 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31064 *
               C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31358 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31347 +
            (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                  C13229 +
              C5735 * C13230) *
                 C13231 +
             (C13544 + C13545) * C13232) *
                C31323) *
               C2570 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31347 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31358 -
            ((C15412 + C15413) * C13232 +
             (C5736 * C13230 + C5735 * C13229) * C13231) *
                C31323) *
               C31109) *
              C2678 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31347 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31358 -
            ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) *
                C31323) *
               C2570 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31358 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) * C31347 +
            ((C15413 + C15412) * C13231 +
             (C2237 * C13229 +
              (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                  C13230) *
                 C13232) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C2570 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C31109) *
              C31023 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C2570 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C31032 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31290 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C2570 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                C31290) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                        C13229 +
                    C4926 * C13230) *
                       C13231 +
                   (C13234 + C13235) * C13232) *
                      C31064 * C2570 -
                  ((C13388 + C13389) * C13232 +
                   (C4927 * C13230 + C4926 * C13229) * C13231) *
                      C31064 * C31109) *
                     C31363 +
                 (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                      C31064 * C31109 -
                  ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                      C31064 * C2570) *
                     C31356 +
                 (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) *
                      C31064 * C2570 -
                  ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                      C31064 * C31109) *
                     C31343 +
                 (((C13681 + C13680) * C13231 +
                   (C703 * C13229 +
                    (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                        C13230) *
                       C13232) *
                      C31064 * C31109 -
                  ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) *
                      C31064 * C2570) *
                     C31324)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                        C13229 +
                    C4926 * C13230) *
                       C13231 +
                   (C13234 + C13235) * C13232) *
                      C31064 * C31364 -
                  ((C13388 + C13389) * C13232 +
                   (C4927 * C13230 + C4926 * C13229) * C13231) *
                      C31064 * C31360 +
                  ((C4927 * C13229 + C4928 * C13230) * C13231 +
                   (C13390 + C13391) * C13232) *
                      C31064 * C31350 -
                  ((C14516 + C14517) * C13232 +
                   (C5587 * C13230 + C4928 * C13229) * C13231) *
                      C31064 * C31330) *
                     C2678 +
                 (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                      C31064 * C31360 -
                  ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                      C31064 * C31364 -
                  ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                      C31064 * C31350 +
                  ((C14517 + C14516) * C13231 +
                   (C1481 * C13229 + (C113 * C1206 - C114 * C1195 -
                                      C113 * C1207 + C31243 * C1213) *
                                         C13230) *
                       C13232) *
                      C31064 * C31330) *
                     C31029)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31105 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31112 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C3332 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C2938) *
              C31275 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C31105 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31112 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C3332) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                        C13229 +
                    C4926 * C13230) *
                       C13231 +
                   (C13234 + C13235) * C13232) *
                      C31147 -
                  ((C13542 + C13543) * C13232 +
                   (C5394 * C13230 +
                    (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                        C13229) *
                       C13231) *
                      C31154 +
                  (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                        C13229 +
                    C5735 * C13230) *
                       C13231 +
                   (C13544 + C13545) * C13232) *
                      C3840) *
                     C31105 +
                 (((C5394 * C13229 + C5393 * C13230) * C13231 +
                   (C14008 + C14009) * C13232) *
                      C31154 -
                  ((C13388 + C13389) * C13232 +
                   (C4927 * C13230 + C4926 * C13229) * C13231) *
                      C31147 -
                  ((C15412 + C15413) * C13232 +
                   (C5736 * C13230 + C5735 * C13229) * C13231) *
                      C3840) *
                     C31112 +
                 (((C4927 * C13229 + C4928 * C13230) * C13231 +
                   (C13390 + C13391) * C13232) *
                      C31147 -
                  ((C14712 + C14713) * C13232 +
                   (C5737 * C13230 + C5393 * C13229) * C13231) *
                      C31154 +
                  ((C5736 * C13229 + C5738 * C13230) * C13231 +
                   (C6564 * C13229 + (C113 * C6554 - C114 * C6553 -
                                      C113 * C6555 + C31243 * C6556) *
                                         C13230) *
                       C13232) *
                      C3840) *
                     C2938) *
                C31018) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C3332 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31364 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31151 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C3332) *
              C31360 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C3332 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31151) *
              C31350 +
          (((C5737 * C13229 + C6113 * C13230) * C13231 +
            (C6004 * C13229 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C13230) *
                C13232) *
               C31151 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C2570 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31109) *
              C31354 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C2570 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C31341 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C3332 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C2570 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31365 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31362 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31353 -
           ((C15552 + C15548) * C13232 +
            (C6782 * C13230 +
             (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                 C13229) *
                C13231) *
               C31336) *
              C2570 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31362 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31365 -
           ((C15412 + C15413) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C31353 +
           ((C6782 * C13229 + C6781 * C13230) * C13231 +
            (C15551 * C13229 +
             (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                 C13230) *
                C13232) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31147 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31154 +
            (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                  C13229 +
              C5735 * C13230) *
                 C13231 +
             (C13544 + C13545) * C13232) *
                C3840) *
               C2570 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31154 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31147 -
            ((C15412 + C15413) * C13232 +
             (C5736 * C13230 + C5735 * C13229) * C13231) *
                C3840) *
               C31109) *
              C31275 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31154 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31147 -
            ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C3840) *
               C2570 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31147 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) * C31154 +
            ((C15413 + C15412) * C13231 +
             (C2237 * C13229 +
              (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                  C13230) *
                 C13232) *
                C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C2570 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31109) *
              C31354 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C2570 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C31341 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C3332 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C2570 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C3332 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31364 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31151 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C3332) *
              C31360 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C3332 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31151) *
              C31350 +
          (((C5737 * C13229 + C6113 * C13230) * C13231 +
            (C6004 * C13229 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C13230) *
                C13232) *
               C31151 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C1458 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C1459 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C1460 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C31064 * C31330) *
              C31275 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C1459 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C1458 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C1460 +
           ((C14517 + C14516) * C13231 +
            (C1481 * C13229 +
             (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                 C13230) *
                C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C31289 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31109) *
              C688 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31109 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C31289) *
              C689 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C31289 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C31109) *
              C690 +
          (((C13681 + C13680) * C13231 +
            (C703 * C13229 +
             (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                 C13230) *
                C13232) *
               C31064 * C31109 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31064 *
               C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C1870 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C1871 +
            (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                  C13229 +
              C5735 * C13230) *
                 C13231 +
             (C13544 + C13545) * C13232) *
                C31323) *
               C31289 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C1871 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C1870 -
            ((C15412 + C15413) * C13232 +
             (C5736 * C13230 + C5735 * C13229) * C13231) *
                C31323) *
               C31109) *
              C31275 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C1871 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C1870 -
            ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) *
                C31323) *
               C31289 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C1870 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) * C1871 +
            ((C15413 + C15412) * C13231 +
             (C2237 * C13229 +
              (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                  C13230) *
                 C13232) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31290 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C1458 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31151 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31290) *
              C1459 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31290 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31151) *
              C1460 +
          (((C5737 * C13229 + C6113 * C13230) * C13231 +
            (C6004 * C13229 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C13230) *
                C13232) *
               C31151 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31289 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C31109) *
              C296 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C31289 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C297 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31290 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C31289 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C2338 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C2339 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C2340 -
           ((C15552 + C15548) * C13232 +
            (C6782 * C13230 +
             (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                 C13229) *
                C13231) *
               C31336) *
              C31289 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C2339 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C2338 -
           ((C15412 + C15413) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C2340 +
           ((C6782 * C13229 + C6781 * C13230) * C13231 +
            (C15551 * C13229 +
             (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                 C13230) *
                C13232) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C13229 +
                C4926 * C13230) *
                   C13231 +
               (C13234 + C13235) * C13232) *
                  C31064 * C31046 * C108 -
              ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                  C31064 * C31046 * C109 +
              ((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) *
                  C31064 * C31046 * C110 -
              ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) *
                  C31064 * C31046 * C111 +
              ((C13241 + C13240) * C13231 +
               (C178 * C13229 +
                (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                    C13230) *
                   C13232) *
                  C31064 * C31046 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                     C13229 +
                 C4926 * C13230) *
                    C13231 +
                (C13234 + C13235) * C13232) *
                   C31064 * C31357 -
               ((C13388 + C13389) * C13232 +
                (C4927 * C13230 + C4926 * C13229) * C13231) *
                   C31064 * C31345 +
               ((C4927 * C13229 + C4928 * C13230) * C13231 +
                (C13390 + C13391) * C13232) *
                   C31064 * C31320) *
                  C296 +
              (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                   C31064 * C31345 -
               ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                   C31064 * C31357 -
               ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                   C31064 * C31320) *
                  C297 +
              (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) *
                   C31064 * C31357 -
               ((C381 * C13230 + C380 * C13229) * C13232 +
                (C13393 + C13392) * C13231) *
                   C31064 * C31345 +
               ((C13395 + C13394) * C13231 +
                (C381 * C13229 +
                 (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                     C13230) *
                    C13232) *
                   C31064 * C31320) *
                  C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31358 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31347 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31046 * C296 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31347 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31358 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C31323) *
              C31046 * C297 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31358 -
           ((C1003 * C13230 + C581 * C13229) * C13232 +
            (C13547 + C13546) * C13231) *
               C31347 +
           ((C13549 + C13548) * C13231 +
            (C582 * C13229 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C13230) *
                C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C1116 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C1117 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C1117 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C1116 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C1116 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C1117 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C1184 -
          ((C13388 + C13389) * C13232 +
           (C4927 * C13230 + C4926 * C13229) * C13231) *
              C31064 * C1185 +
          ((C4927 * C13229 + C4928 * C13230) * C13231 +
           (C13390 + C13391) * C13232) *
              C31064 * C1186 -
          ((C5847 * C13230 + C1482 * C13229) * C13232 +
           (C5587 * C13230 + C4928 * C13229) * C13231) *
              C31064 * C1187 +
          ((C5587 * C13229 + C5588 * C13230) * C13231 +
           (C5847 * C13229 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C13230) *
               C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31358 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31347 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C1116 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31347 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31358 -
           ((C6564 * C13230 + C2238 * C13229) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C31323) *
              C1117 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31358 -
           ((C6004 * C13230 + C1648 * C13229) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31347 +
           ((C5736 * C13229 + C5738 * C13230) * C13231 +
            (C6564 * C13229 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C13230) *
                C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C1870 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C1871 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31046 * C31354 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C1871 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C1870 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C31323) *
              C31046 * C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C1870 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C1871 +
           ((C13549 + C13548) * C13231 +
            (C582 * C13229 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C13230) *
                C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C1870 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C1871 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31357 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C1871 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C1870 -
           ((C6564 * C13230 + C2238 * C13229) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C31323) *
              C31345 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C1870 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C1871 +
           ((C5736 * C13229 + C5738 * C13230) * C13231 +
            (C6564 * C13229 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C13230) *
                C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C2045 -
          ((C13542 + C13543) * C13232 +
           (C5394 * C13230 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                C13229) *
               C13231) *
              C2046 +
          (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C13229 +
            C5735 * C13230) *
               C13231 +
           (C13544 + C13545) * C13232) *
              C2047 -
          (((C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C13230 +
            C2360 * C13229) *
               C13232 +
           (C6782 * C13230 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C13229) *
               C13231) *
              C2048 +
          (((C113 * C2062 - C114 * C2053 - C113 * C2063 + C31243 * C2071) *
                C13229 +
            (C113 * C6400 - C114 * C6396 - C113 * C6401 + C31243 * C6405) *
                C13230) *
               C13231 +
           ((C113 * C2064 - C114 * C2054 - C113 * C2065 + C31243 * C2072) *
                C13229 +
            (C113 * C10708 - C114 * C10707 - C113 * C10709 + C31243 * C10710) *
                C13230) *
               C13232) *
              C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C1116 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C1117 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C31290 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C31320) *
              C31275 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C1116 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C1117 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31290 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31046 * C688 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31290) *
              C31046 * C689 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31290 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C31151) *
              C31046 * C690 +
          (((C13813 + C13812) * C13231 +
            (C815 * C13229 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C13230) *
                C13232) *
               C31151 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C2338 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C2339 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C2340 -
           ((C15552 + C15548) * C13232 +
            (C6782 * C13230 +
             (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                 C13229) *
                C13231) *
               C31336) *
              C31046 * C31275 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C2339 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C2338 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C2340 +
           ((C15548 + C15552) * C13231 +
            (C2359 * C13229 +
             (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                 C13230) *
                C13232) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C31357 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31345 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C296 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31345 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C31357 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C297 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C31357 -
           ((C381 * C13230 + C380 * C13229) * C13232 +
            (C13393 + C13392) * C13231) *
               C31064 * C31345 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C31046 * C108 -
          ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
              C31046 * C109 +
          ((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
              C31046 * C110 -
          ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31064 *
              C31046 * C111 +
          ((C13241 + C13240) * C13231 +
           (C178 * C13229 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                C13230) *
               C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C1116 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C1117 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C1117 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C1116 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C1116 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C1117 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C1184 -
          ((C13388 + C13389) * C13232 +
           (C4927 * C13230 + C4926 * C13229) * C13231) *
              C31064 * C1185 +
          ((C4927 * C13229 + C4928 * C13230) * C13231 +
           (C13390 + C13391) * C13232) *
              C31064 * C1186 -
          ((C5847 * C13230 + C1482 * C13229) * C13232 +
           (C5587 * C13230 + C4928 * C13229) * C13231) *
              C31064 * C1187 +
          ((C5587 * C13229 + C5588 * C13230) * C13231 +
           (C5847 * C13229 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C13230) *
               C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C1870 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C1871 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31046 * C31354 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C1871 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C1870 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C31323) *
              C31046 * C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C1870 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C1871 +
           ((C13549 + C13548) * C13231 +
            (C582 * C13229 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C13230) *
                C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C1870 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C1871 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31357 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C1871 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C1870 -
           ((C6564 * C13230 + C2238 * C13229) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C31323) *
              C31345 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C1870 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C1871 +
           ((C5736 * C13229 + C5738 * C13230) * C13231 +
            (C6564 * C13229 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C13230) *
                C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31289 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31109) *
              C31023 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C31289 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C31032 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C3332 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C31289 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C3332) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31147 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31154 +
            (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                  C13229 +
              C5735 * C13230) *
                 C13231 +
             (C13544 + C13545) * C13232) *
                C3840) *
               C31289 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31154 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31147 -
            ((C15412 + C15413) * C13232 +
             (C5736 * C13230 + C5735 * C13229) * C13231) *
                C3840) *
               C31109) *
              C2678 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31154 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31147 -
            ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C3840) *
               C31289 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31147 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) * C31154 +
            ((C15413 + C15412) * C13231 +
             (C2237 * C13229 +
              (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                  C13230) *
                 C13232) *
                C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31357 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31345 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C3332 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C31320) *
              C2678 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C31357 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31345 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C3332 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31046 * C31363 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
              C31046 * C31356 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C3332 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C31151) *
              C31046 * C31343 +
          (((C13813 + C13812) * C13231 +
            (C815 * C13229 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C13230) *
                C13232) *
               C31151 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31365 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31362 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31353 -
           ((C15552 + C15548) * C13232 +
            (C6782 * C13230 +
             (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                 C13229) *
                C13231) *
               C31336) *
              C31046 * C2678 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31362 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31365 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C31353 +
           ((C15548 + C15552) * C13231 +
            (C2359 * C13229 +
             (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                 C13230) *
                C13232) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31147 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31154 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C3840) *
              C31046 * C31023 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31154 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31147 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C3840) *
              C31046 * C31032 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31147 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C31154 +
           ((C13549 + C13548) * C13231 +
            (C582 * C13229 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C13230) *
                C13232) *
               C3840) *
              C31046 * C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C3332 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31046 * C31363 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
              C31046 * C31356 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C3332 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C31151) *
              C31046 * C31343 +
          (((C13813 + C13812) * C13231 +
            (C815 * C13229 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C13230) *
                C13232) *
               C31151 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C3332 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31357 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C3332) *
               C31345 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C3332 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C31320) *
              C2678 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C3332) *
               C31357 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C3332 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31345 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                         C13229 +
                     C4926 * C13230) *
                        C13231 +
                    (C13234 + C13235) * C13232) *
                       C31064 * C31289 -
                   ((C13388 + C13389) * C13232 +
                    (C4927 * C13230 + C4926 * C13229) * C13231) *
                       C31064 * C31109) *
                      C688 +
                  (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                       C31064 * C31109 -
                   ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                       C31064 * C31289) *
                      C689 +
                  (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) *
                       C31064 * C31289 -
                   ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                       C31064 * C31109) *
                      C690 +
                  (((C13681 + C13680) * C13231 +
                    (C703 * C13229 +
                     (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                         C13230) *
                        C13232) *
                       C31064 * C31109 -
                   ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) *
                       C31064 * C31289) *
                      C31324)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                         C13229 +
                     C4926 * C13230) *
                        C13231 +
                    (C13234 + C13235) * C13232) *
                       C31064 * C1458 -
                   ((C13388 + C13389) * C13232 +
                    (C4927 * C13230 + C4926 * C13229) * C13231) *
                       C31064 * C1459 +
                   ((C4927 * C13229 + C4928 * C13230) * C13231 +
                    (C13390 + C13391) * C13232) *
                       C31064 * C1460 -
                   ((C14516 + C14517) * C13232 +
                    (C5587 * C13230 + C4928 * C13229) * C13231) *
                       C31064 * C31330) *
                      C31275 +
                  (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) *
                       C31064 * C1459 -
                   ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                       C31064 * C1458 -
                   ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                       C31064 * C1460 +
                   ((C14517 + C14516) * C13231 +
                    (C1481 * C13229 + (C113 * C1206 - C114 * C1195 -
                                       C113 * C1207 + C31243 * C1213) *
                                          C13230) *
                        C13232) *
                       C31064 * C31330) *
                      C31029)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C31289 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C31109) *
              C296 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C31289 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C31109) *
              C297 +
          ((((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31290 -
            ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) *
                C31151) *
               C31289 +
           (((C14011 + C14010) * C13231 +
             (C1003 * C13229 +
              (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31290 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C1458 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31151 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31290) *
              C1459 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31290 -
           ((C14712 + C14713) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31151) *
              C1460 +
          (((C5737 * C13229 + C6113 * C13230) * C13231 +
            (C6004 * C13229 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C13230) *
                C13232) *
               C31151 -
           ((C14516 + C14517) * C13232 +
            (C5587 * C13230 + C4928 * C13229) * C13231) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C31357 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31345 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C296 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31345 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C31357 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C297 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C31357 -
           ((C381 * C13230 + C380 * C13229) * C13232 +
            (C13393 + C13392) * C13231) *
               C31064 * C31345 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C31046 * C108 -
          ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
              C31046 * C109 +
          ((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
              C31046 * C110 -
          ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31064 *
              C31046 * C111 +
          ((C13241 + C13240) * C13231 +
           (C178 * C13229 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                C13230) *
               C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31358 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31347 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C31046 * C296 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31347 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31358 -
           ((C13548 + C13549) * C13232 + (C13545 + C13544) * C13231) * C31323) *
              C31046 * C297 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31358 -
           ((C1003 * C13230 + C581 * C13229) * C13232 +
            (C13547 + C13546) * C13231) *
               C31347 +
           ((C13549 + C13548) * C13231 +
            (C582 * C13229 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C13230) *
                C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C1116 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C1117 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C1117 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C1116 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C1116 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C1117 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C1184 -
          ((C13388 + C13389) * C13232 +
           (C4927 * C13230 + C4926 * C13229) * C13231) *
              C31064 * C1185 +
          ((C4927 * C13229 + C4928 * C13230) * C13231 +
           (C13390 + C13391) * C13232) *
              C31064 * C1186 -
          ((C5847 * C13230 + C1482 * C13229) * C13232 +
           (C5587 * C13230 + C4928 * C13229) * C13231) *
              C31064 * C1187 +
          ((C5587 * C13229 + C5588 * C13230) * C13231 +
           (C5847 * C13229 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C13230) *
               C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31358 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31347 +
           (((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C13229 +
             C5735 * C13230) *
                C13231 +
            (C13544 + C13545) * C13232) *
               C31323) *
              C1116 +
          (((C5394 * C13229 + C5393 * C13230) * C13231 +
            (C14008 + C14009) * C13232) *
               C31347 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31358 -
           ((C6564 * C13230 + C2238 * C13229) * C13232 +
            (C5736 * C13230 + C5735 * C13229) * C13231) *
               C31323) *
              C1117 +
          (((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31358 -
           ((C6004 * C13230 + C1648 * C13229) * C13232 +
            (C5737 * C13230 + C5393 * C13229) * C13231) *
               C31347 +
           ((C5736 * C13229 + C5738 * C13230) * C13231 +
            (C6564 * C13229 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C13230) *
                C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31290 -
           ((C13542 + C13543) * C13232 +
            (C5394 * C13230 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C13229) *
                C13231) *
               C31151) *
              C31046 * C688 +
          (((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31290) *
              C31046 * C689 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31290 -
           ((C13812 + C13813) * C13232 + (C13547 + C13546) * C13231) * C31151) *
              C31046 * C690 +
          (((C13813 + C13812) * C13231 +
            (C815 * C13229 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C13230) *
                C13232) *
               C31151 -
           ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                  C13229 +
              C4926 * C13230) *
                 C13231 +
             (C13234 + C13235) * C13232) *
                C31290 -
            ((C13542 + C13543) * C13232 +
             (C5394 * C13230 +
              (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                  C13229) *
                 C13231) *
                C31151) *
               C1116 +
           (((C5394 * C13229 + C5393 * C13230) * C13231 +
             (C14008 + C14009) * C13232) *
                C31151 -
            ((C13388 + C13389) * C13232 +
             (C4927 * C13230 + C4926 * C13229) * C13231) *
                C31290) *
               C1117 +
           (((C4927 * C13229 + C4928 * C13230) * C13231 +
             (C13390 + C13391) * C13232) *
                C31290 -
            ((C14712 + C14713) * C13232 +
             (C5737 * C13230 + C5393 * C13229) * C13231) *
                C31151) *
               C31320) *
              C31275 +
          ((((C13543 + C13542) * C13231 + (C13546 + C13547) * C13232) * C31151 -
            ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) *
                C31290) *
               C1116 +
           (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31290 -
            ((C14010 + C14011) * C13232 + (C14009 + C14008) * C13231) *
                C31151) *
               C1117 +
           (((C14713 + C14712) * C13231 +
             (C1647 * C13229 +
              (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                  C13230) *
                 C13232) *
                C31151 -
            ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C31046 * C108 -
          ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
              C31046 * C109 +
          ((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
              C31046 * C110 -
          ((C13240 + C13241) * C13232 + (C13239 + C13238) * C13231) * C31064 *
              C31046 * C111 +
          ((C13241 + C13240) * C13231 +
           (C178 * C13229 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                C13230) *
               C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C31357 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C31345 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C296 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C31345 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C31357 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C297 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C31357 -
           ((C381 * C13230 + C380 * C13229) * C13232 +
            (C13393 + C13392) * C13231) *
               C31064 * C31345 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C13229 +
             C4926 * C13230) *
                C13231 +
            (C13234 + C13235) * C13232) *
               C31064 * C1116 -
           ((C13388 + C13389) * C13232 +
            (C4927 * C13230 + C4926 * C13229) * C13231) *
               C31064 * C1117 +
           ((C4927 * C13229 + C4928 * C13230) * C13231 +
            (C13390 + C13391) * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C13389 + C13388) * C13231 + (C13392 + C13393) * C13232) * C31064 *
               C1117 -
           ((C13236 + C13237) * C13232 + (C13235 + C13234) * C13231) * C31064 *
               C1116 -
           ((C13394 + C13395) * C13232 + (C13391 + C13390) * C13231) * C31064 *
               C31320) *
              C31341 +
          (((C13237 + C13236) * C13231 + (C13238 + C13239) * C13232) * C31064 *
               C1116 -
           ((C13680 + C13681) * C13232 + (C13393 + C13392) * C13231) * C31064 *
               C1117 +
           ((C13395 + C13394) * C13231 +
            (C381 * C13229 +
             (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                 C13230) *
                C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C13229 +
            C4926 * C13230) *
               C13231 +
           (C13234 + C13235) * C13232) *
              C31064 * C1184 -
          ((C13388 + C13389) * C13232 +
           (C4927 * C13230 + C4926 * C13229) * C13231) *
              C31064 * C1185 +
          ((C4927 * C13229 + C4928 * C13230) * C13231 +
           (C13390 + C13391) * C13232) *
              C31064 * C1186 -
          ((C5847 * C13230 + C1482 * C13229) * C13232 +
           (C5587 * C13230 + C4928 * C13229) * C13231) *
              C31064 * C1187 +
          ((C5587 * C13229 + C5588 * C13230) * C13231 +
           (C5847 * C13229 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C13230) *
               C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31105 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31112 +
           ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31064 * C2938) *
              C31023 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31112 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31105 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C2938) *
              C31032 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31105 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31112 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C2938) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31105 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C31112 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C31290 -
            ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
                C31151) *
               C2938) *
              C2678 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C31105 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31112 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C31290) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31364 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31360 +
           ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31064 * C31350 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31064 * C31330) *
              C2678 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31360 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31364 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31350 +
           ((C20222 + C20221) * C13229 +
            (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
             C18732 * C5994 - C18733 * C5993 - C18732 * C5995 +
             C18729 * C5996) *
                C13230) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C2570 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31109) *
              C31363 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31109 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C2570) *
              C31356 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C2570 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31109) *
              C31343 +
          (((C19338 + C19337) * C13229 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C13230) *
               C30996 * C31064 * C31109 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31358 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31347 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C13229 +
             (C25689 + C25690) * C13230) *
                C30996 * C31323) *
               C2570 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31347 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31358 -
            ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
                C31323) *
               C31109) *
              C2678 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31347 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31358 -
            ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
                C31323) *
               C2570 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31358 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31347 +
            ((C21142 + C21141) * C13229 +
             (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 +
              C18728 * C1358 + C18732 * C6663 - C18733 * C6662 -
              C18732 * C6664 + C18729 * C6665) *
                 C13230) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C2570 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C31109) *
              C31023 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C2570 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C31032 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C31290 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C31290) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C2570 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31109) *
              C31363 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31109 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C2570) *
              C31356 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C2570 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31109) *
              C31343 +
          (((C19338 + C19337) * C13229 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C13230) *
               C30996 * C31064 * C31109 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31364 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31360 +
           ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31064 * C31350 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31064 * C31330) *
              C2678 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31360 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31364 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31350 +
           ((C20222 + C20221) * C13229 +
            (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
             C18732 * C5994 - C18733 * C5993 - C18732 * C5995 +
             C18729 * C5996) *
                C13230) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31105 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31112 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C3332 -
            ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
                C31151) *
               C2938) *
              C31275 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C31105 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31112 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C3332) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31147 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31154 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C3840) *
              C31105 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31154 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31147 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C3840) *
              C31112 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31147 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C31154 +
           ((C25694 + C25693) * C13229 +
            (C18730 * C5701 - C18731 * C5698 - C18730 * C5702 + C18728 * C5707 +
             C18732 * C6765 - C18733 * C6764 - C18732 * C6766 +
             C18729 * C6767) *
                C13230) *
               C30996 * C3840) *
              C2938) *
         C31018) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C3332 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31364 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31151 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C3332) *
              C31360 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C3332 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C31151) *
              C31350 +
          (((C26162 + C26161) * C13229 +
            (C18730 * C5703 - C18731 * C5699 - C18730 * C5704 + C18728 * C5708 +
             C18732 * C5705 - C18733 * C5700 - C18732 * C5706 +
             C18729 * C5709) *
                C13230) *
               C30996 * C31151 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C2570 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31109) *
              C31354 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C2570 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C31341 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C3332 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31365 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31362 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31353 -
           ((C27003 + C27004) * C13230 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C13229) *
               C30996 * C31336) *
              C2570 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31362 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31365 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C31353 +
           ((C27004 + C27003) * C13229 +
            (C18730 * C6398 - C18731 * C6395 - C18730 * C6399 + C18728 * C6404 +
             C18732 * C6402 - C18733 * C6397 - C18732 * C6403 +
             C18729 * C6406) *
                C13230) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31147 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31154 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C13229 +
             (C25689 + C25690) * C13230) *
                C30996 * C3840) *
               C2570 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31154 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31147 -
            ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
                C3840) *
               C31109) *
              C31275 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31154 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31147 -
            ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
                C3840) *
               C2570 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31147 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31154 +
            ((C21142 + C21141) * C13229 +
             (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 +
              C18728 * C1358 + C18732 * C6663 - C18733 * C6662 -
              C18732 * C6664 + C18729 * C6665) *
                 C13230) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C2570 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31109) *
              C31354 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C2570 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C31341 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C3332 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C3332 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31364 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31151 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C3332) *
              C31360 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C3332 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C31151) *
              C31350 +
          (((C26162 + C26161) * C13229 +
            (C18730 * C5703 - C18731 * C5699 - C18730 * C5704 + C18728 * C5708 +
             C18732 * C5705 - C18733 * C5700 - C18732 * C5706 +
             C18729 * C5709) *
                C13230) *
               C30996 * C31151 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1458 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1459 +
           ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31064 * C1460 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31064 * C31330) *
              C31275 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1459 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1458 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C1460 +
           ((C20222 + C20221) * C13229 +
            (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
             C18732 * C5994 - C18733 * C5993 - C18732 * C5995 +
             C18729 * C5996) *
                C13230) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31289 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31109) *
              C688 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31109 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31289) *
              C689 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31289 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31109) *
              C690 +
          (((C19338 + C19337) * C13229 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C13230) *
               C30996 * C31064 * C31109 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C1870 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C1871 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C13229 +
             (C25689 + C25690) * C13230) *
                C30996 * C31323) *
               C31289 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C1871 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C1870 -
            ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
                C31323) *
               C31109) *
              C31275 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C1871 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C1870 -
            ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
                C31323) *
               C31289 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C1870 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C1871 +
            ((C21142 + C21141) * C13229 +
             (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 +
              C18728 * C1358 + C18732 * C6663 - C18733 * C6662 -
              C18732 * C6664 + C18729 * C6665) *
                 C13230) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31290 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C1458 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31151 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31290) *
              C1459 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31290 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C31151) *
              C1460 +
          (((C26162 + C26161) * C13229 +
            (C18730 * C5703 - C18731 * C5699 - C18730 * C5704 + C18728 * C5708 +
             C18732 * C5705 - C18733 * C5700 - C18732 * C5706 +
             C18729 * C5709) *
                C13230) *
               C30996 * C31151 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31289 +
           (((C25250 + C25249) * C13229 +
             (C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
              C18728 * C1356 + C18732 * C1345 - C18733 * C1330 -
              C18732 * C1346 + C18729 * C1357) *
                 C13230) *
                C30996 * C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C31109) *
              C296 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C31289 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C297 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C31290 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C2338 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C2339 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C2340 -
           ((C27003 + C27004) * C13230 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C13229) *
               C30996 * C31336) *
              C31289 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C2339 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C2338 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C2340 +
           ((C27004 + C27003) * C13229 +
            (C18730 * C6398 - C18731 * C6395 - C18730 * C6399 + C18728 * C6404 +
             C18732 * C6402 - C18733 * C6397 - C18732 * C6403 +
             C18729 * C6406) *
                C13230) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
                C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                   C13229 +
               (C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331 +
                C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977) *
                   C13230) *
                  C30996 * C31064 * C31046 * C108 -
              ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) *
                  C30996 * C31064 * C31046 * C109 +
              ((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) *
                  C30996 * C31064 * C31046 * C110 -
              ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) *
                  C30996 * C31064 * C31046 * C111 +
              ((C18790 + C18789) * C13229 +
               (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
                C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
                   C13230) *
                  C30996 * C31064 * C31046 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
                 C18732 * C514 - C18733 * C502 - C18732 * C515 +
                 C18729 * C532) *
                    C13229 +
                (C24633 + C24634) * C13230) *
                   C30996 * C31064 * C31357 -
               ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) *
                   C30996 * C31064 * C31345 +
               ((C24636 + C24635) * C13229 +
                (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
                 C18728 * C1210 + C18732 * C1751 - C18733 * C1748 -
                 C18732 * C1752 + C18729 * C1757) *
                    C13230) *
                   C30996 * C31064 * C31320) *
                  C296 +
              (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) *
                   C30996 * C31064 * C31345 -
               ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) *
                   C30996 * C31064 * C31357 -
               ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) *
                   C30996 * C31064 * C31320) *
                  C297 +
              (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) *
                   C30996 * C31064 * C31357 -
               ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) *
                   C30996 * C31064 * C31345 +
               ((C18992 + C18991) * C13229 +
                (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 +
                 C18728 * C1208 + C18732 * C1755 - C18733 * C1750 -
                 C18732 * C1756 + C18729 * C1759) *
                    C13230) *
                   C30996 * C31064 * C31320) *
                  C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31358 -
           ((C18732 * C1337 - C18733 * C1326 - C18732 * C1338 + C18729 * C1353 +
             C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977) *
                C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C18730 * C1337 - C18731 * C1326 - C18730 * C1338 + C18728 * C1353 +
             C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
             C18729 * C2469) *
                C13230) *
               C30996 * C31323) *
              C31046 * C296 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31347 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31358 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C31323) *
              C31046 * C297 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31358 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31347 +
           ((C19194 + C19193) * C13229 +
            (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 + C18728 * C1351 +
             C18732 * C2467 - C18733 * C2462 - C18732 * C2468 +
             C18729 * C2471) *
                C13230) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1116 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1117 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1117 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1116 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C1116 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C1117 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C24633 + C24634) * C13230) *
              C30996 * C31064 * C1184 -
          ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
              C31064 * C1185 +
          ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
              C31064 * C1186 -
          ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
              C31064 * C1187 +
          ((C25506 + C25505) * C13229 +
           (C18730 * C5568 - C18731 * C5566 - C18730 * C5569 + C18728 * C5572 +
            C18732 * C6103 - C18733 * C6102 - C18732 * C6104 + C18729 * C6105) *
               C13230) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31358 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C1116 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31347 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31358 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C31323) *
              C1117 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31358 -
           ((C18732 * C5701 - C18733 * C5698 - C18732 * C5702 + C18729 * C5707 +
             C18730 * C1751 - C18731 * C1748 - C18730 * C1752 +
             C18728 * C1757) *
                C13230 +
            (C25692 + C25691) * C13229) *
               C30996 * C31347 +
           ((C25694 + C25693) * C13229 +
            (C18730 * C5701 - C18731 * C5698 - C18730 * C5702 + C18728 * C5707 +
             C18732 * C6765 - C18733 * C6764 - C18732 * C6766 +
             C18729 * C6767) *
                C13230) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C1870 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C31046 * C31354 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C1871 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C1870 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C31323) *
              C31046 * C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C1870 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C1871 +
           ((C19194 + C19193) * C13229 +
            (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 + C18728 * C1351 +
             C18732 * C2467 - C18733 * C2462 - C18732 * C2468 +
             C18729 * C2471) *
                C13230) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C1870 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C31357 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C1871 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C1870 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C31323) *
              C31345 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C1870 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C1871 +
           ((C25694 + C25693) * C13229 +
            (C18730 * C5701 - C18731 * C5698 - C18730 * C5702 + C18728 * C5707 +
             C18732 * C6765 - C18733 * C6764 - C18732 * C6766 +
             C18729 * C6767) *
                C13230) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C24633 + C24634) * C13230) *
              C30996 * C2045 -
          ((C25249 + C25250) * C13230 +
           (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
            C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
               C13229) *
              C30996 * C2046 +
          ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
            C18732 * C2060 - C18733 * C2052 - C18732 * C2061 + C18729 * C2070) *
               C13229 +
           (C25689 + C25690) * C13230) *
              C30996 * C2047 -
          ((C18732 * C6400 - C18733 * C6396 - C18732 * C6401 + C18729 * C6405 +
            C18730 * C2463 - C18731 * C2460 - C18730 * C2464 + C18728 * C2469) *
               C13230 +
           (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
            C18730 * C2060 - C18731 * C2052 - C18730 * C2061 + C18728 * C2070) *
               C13229) *
              C30996 * C2048 +
          ((C18730 * C2062 - C18731 * C2053 - C18730 * C2063 + C18728 * C2071 +
            C18732 * C10555 - C18733 * C10553 - C18732 * C10556 +
            C18729 * C10559) *
               C13229 +
           (C18730 * C6400 - C18731 * C6396 - C18730 * C6401 + C18728 * C6405 +
            C18732 * C10912 - C18733 * C10911 - C18732 * C10913 +
            C18729 * C10914) *
               C13230) *
              C30996 * C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C1116 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C1117 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C31290 -
            ((C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
              C18729 * C5707 + C18730 * C1751 - C18731 * C1748 -
              C18730 * C1752 + C18728 * C1757) *
                 C13230 +
             (C25692 + C25691) * C13229) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C1116 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C1117 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31290 -
           ((C18732 * C1337 - C18733 * C1326 - C18732 * C1338 + C18729 * C1353 +
             C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977) *
                C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31046 * C688 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31151 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31290) *
              C31046 * C689 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31290 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31151) *
              C31046 * C690 +
          (((C19482 + C19481) * C13229 +
            (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
             C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
             C18729 * C2223) *
                C13230) *
               C30996 * C31151 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C2338 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C2339 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C2340 -
           ((C18732 * C6400 - C18733 * C6396 - C18732 * C6401 + C18729 * C6405 +
             C18730 * C2463 - C18731 * C2460 - C18730 * C2464 +
             C18728 * C2469) *
                C13230 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C13229) *
               C30996 * C31336) *
              C31046 * C31275 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C2339 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C2338 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C2340 +
           ((C21286 + C21285) * C13229 +
            (C18730 * C2465 - C18731 * C2461 - C18730 * C2466 + C18728 * C2470 +
             C18732 * C10708 - C18733 * C10707 - C18732 * C10709 +
             C18729 * C10710) *
                C13230) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31357 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31345 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31345 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31357 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31357 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31345 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331 +
            C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977) *
               C13230) *
              C30996 * C31064 * C31046 * C108 -
          ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
              C31064 * C31046 * C110 -
          ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C13229 +
           (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
            C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
               C13230) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1116 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1117 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1117 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1116 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C1116 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C1117 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C24633 + C24634) * C13230) *
              C30996 * C31064 * C1184 -
          ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
              C31064 * C1185 +
          ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
              C31064 * C1186 -
          ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
              C31064 * C1187 +
          ((C25506 + C25505) * C13229 +
           (C18730 * C5568 - C18731 * C5566 - C18730 * C5569 + C18728 * C5572 +
            C18732 * C6103 - C18733 * C6102 - C18732 * C6104 + C18729 * C6105) *
               C13230) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C1870 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C31046 * C31354 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C1871 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C1870 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C31323) *
              C31046 * C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C1870 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C1871 +
           ((C19194 + C19193) * C13229 +
            (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 + C18728 * C1351 +
             C18732 * C2467 - C18733 * C2462 - C18732 * C2468 +
             C18729 * C2471) *
                C13230) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C1870 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C31357 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C1871 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C1870 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C31323) *
              C31345 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C1870 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C1871 +
           ((C25694 + C25693) * C13229 +
            (C18730 * C5701 - C18731 * C5698 - C18730 * C5702 + C18728 * C5707 +
             C18732 * C6765 - C18733 * C6764 - C18732 * C6766 +
             C18729 * C6767) *
                C13230) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31289 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31109) *
              C31023 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C31289 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C31032 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C3332 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C3332) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31147 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31154 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C13229 +
             (C25689 + C25690) * C13230) *
                C30996 * C3840) *
               C31289 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31154 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31147 -
            ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
                C3840) *
               C31109) *
              C2678 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31154 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31147 -
            ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
                C3840) *
               C31289 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31147 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31154 +
            ((C21142 + C21141) * C13229 +
             (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 +
              C18728 * C1358 + C18732 * C6663 - C18733 * C6662 -
              C18732 * C6664 + C18729 * C6665) *
                 C13230) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31357 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31345 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C3332 -
            ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
                C31151) *
               C31320) *
              C2678 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C31357 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31345 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C3332 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31046 * C31363 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31151 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C3332) *
              C31046 * C31356 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C3332 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31151) *
              C31046 * C31343 +
          (((C19482 + C19481) * C13229 +
            (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
             C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
             C18729 * C2223) *
                C13230) *
               C30996 * C31151 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31365 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31362 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31353 -
           ((C27003 + C27004) * C13230 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C13229) *
               C30996 * C31336) *
              C31046 * C2678 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31362 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31365 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C31353 +
           ((C21286 + C21285) * C13229 +
            (C18730 * C2465 - C18731 * C2461 - C18730 * C2466 + C18728 * C2470 +
             C18732 * C10708 - C18733 * C10707 - C18732 * C10709 +
             C18729 * C10710) *
                C13230) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31147 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31154 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C3840) *
              C31046 * C31023 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31154 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31147 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C3840) *
              C31046 * C31032 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31147 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31154 +
           ((C19194 + C19193) * C13229 +
            (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 + C18728 * C1351 +
             C18732 * C2467 - C18733 * C2462 - C18732 * C2468 +
             C18729 * C2471) *
                C13230) *
               C30996 * C3840) *
              C31046 * C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C3332 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31046 * C31363 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31151 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C3332) *
              C31046 * C31356 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C3332 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31151) *
              C31046 * C31343 +
          (((C19482 + C19481) * C13229 +
            (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
             C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
             C18729 * C2223) *
                C13230) *
               C30996 * C31151 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C3332 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31357 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C3332) *
               C31345 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C3332 -
            ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
                C31151) *
               C31320) *
              C2678 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C3332) *
               C31357 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C3332 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31345 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31289 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31109) *
              C688 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31109 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31289) *
              C689 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31289 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31109) *
              C690 +
          (((C19338 + C19337) * C13229 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C13230) *
               C30996 * C31064 * C31109 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1458 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1459 +
           ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31064 * C1460 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31064 * C31330) *
              C31275 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1459 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1458 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C1460 +
           ((C20222 + C20221) * C13229 +
            (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
             C18732 * C5994 - C18733 * C5993 - C18732 * C5995 +
             C18729 * C5996) *
                C13230) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C31289 +
           (((C25250 + C25249) * C13229 +
             (C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
              C18728 * C1356 + C18732 * C1345 - C18733 * C1330 -
              C18732 * C1346 + C18729 * C1357) *
                 C13230) *
                C30996 * C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C31109) *
              C296 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C31289 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C31109) *
              C297 +
          ((((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
                C31290 -
            ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C13229 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C13230) *
                C30996 * C31151 -
            ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31290 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C1458 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31151 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31290) *
              C1459 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31290 -
           ((C26161 + C26162) * C13230 + (C25692 + C25691) * C13229) * C30996 *
               C31151) *
              C1460 +
          (((C26162 + C26161) * C13229 +
            (C18730 * C5703 - C18731 * C5699 - C18730 * C5704 + C18728 * C5708 +
             C18732 * C5705 - C18733 * C5700 - C18732 * C5706 +
             C18729 * C5709) *
                C13230) *
               C30996 * C31151 -
           ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31357 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31345 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31345 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31357 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31357 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31345 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331 +
            C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977) *
               C13230) *
              C30996 * C31064 * C31046 * C108 -
          ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
              C31064 * C31046 * C110 -
          ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C13229 +
           (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
            C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
               C13230) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31358 -
           ((C18732 * C1337 - C18733 * C1326 - C18732 * C1338 + C18729 * C1353 +
             C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977) *
                C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C18730 * C1337 - C18731 * C1326 - C18730 * C1338 + C18728 * C1353 +
             C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
             C18729 * C2469) *
                C13230) *
               C30996 * C31323) *
              C31046 * C296 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31347 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31358 -
           ((C21141 + C21142) * C13230 + (C19190 + C19189) * C13229) * C30996 *
               C31323) *
              C31046 * C297 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31358 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31347 +
           ((C19194 + C19193) * C13229 +
            (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 + C18728 * C1351 +
             C18732 * C2467 - C18733 * C2462 - C18732 * C2468 +
             C18729 * C2471) *
                C13230) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1116 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1117 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1117 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1116 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C1116 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C1117 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C24633 + C24634) * C13230) *
              C30996 * C31064 * C1184 -
          ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
              C31064 * C1185 +
          ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
              C31064 * C1186 -
          ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
              C31064 * C1187 +
          ((C25506 + C25505) * C13229 +
           (C18730 * C5568 - C18731 * C5566 - C18730 * C5569 + C18728 * C5572 +
            C18732 * C6103 - C18733 * C6102 - C18732 * C6104 + C18729 * C6105) *
               C13230) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31358 -
           ((C25249 + C25250) * C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C13229 +
            (C25689 + C25690) * C13230) *
               C30996 * C31323) *
              C1116 +
          (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
               C31347 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31358 -
           ((C25693 + C25694) * C13230 + (C25690 + C25689) * C13229) * C30996 *
               C31323) *
              C1117 +
          (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
               C31358 -
           ((C18732 * C5701 - C18733 * C5698 - C18732 * C5702 + C18729 * C5707 +
             C18730 * C1751 - C18731 * C1748 - C18730 * C1752 +
             C18728 * C1757) *
                C13230 +
            (C25692 + C25691) * C13229) *
               C30996 * C31347 +
           ((C25694 + C25693) * C13229 +
            (C18730 * C5701 - C18731 * C5698 - C18730 * C5702 + C18728 * C5707 +
             C18732 * C6765 - C18733 * C6764 - C18732 * C6766 +
             C18729 * C6767) *
                C13230) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31290 -
           ((C18732 * C1337 - C18733 * C1326 - C18732 * C1338 + C18729 * C1353 +
             C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977) *
                C13230 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C13229) *
               C30996 * C31151) *
              C31046 * C688 +
          (((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
               C31151 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31290) *
              C31046 * C689 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31290 -
           ((C19703 + C19704) * C13230 + (C19192 + C19191) * C13229) * C30996 *
               C31151) *
              C31046 * C690 +
          (((C19482 + C19481) * C13229 +
            (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
             C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
             C18729 * C2223) *
                C13230) *
               C30996 * C31151 -
           ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
               C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C13229 +
             (C24633 + C24634) * C13230) *
                C30996 * C31290 -
            ((C25249 + C25250) * C13230 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C13229) *
                C30996 * C31151) *
               C1116 +
           (((C25250 + C25249) * C13229 + (C25691 + C25692) * C13230) * C30996 *
                C31151 -
            ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
                C31290) *
               C1117 +
           (((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
                C31290 -
            ((C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
              C18729 * C5707 + C18730 * C1751 - C18731 * C1748 -
              C18730 * C1752 + C18728 * C1757) *
                 C13230 +
             (C25692 + C25691) * C13229) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          ((((C19188 + C19187) * C13229 + (C19701 + C19702) * C13230) * C30996 *
                C31151 -
            ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
                C31290) *
               C1116 +
           (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
                C31290 -
            ((C20429 + C20430) * C13230 + (C19702 + C19701) * C13229) * C30996 *
                C31151) *
               C1117 +
           (((C20430 + C20429) * C13229 +
             (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 +
              C18728 * C1758 + C18732 * C6554 - C18733 * C6553 -
              C18732 * C6555 + C18729 * C6556) *
                 C13230) *
                C30996 * C31151 -
            ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331 +
            C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977) *
               C13230) *
              C30996 * C31064 * C31046 * C108 -
          ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
              C31064 * C31046 * C110 -
          ((C19337 + C19338) * C13230 + (C18788 + C18787) * C13229) * C30996 *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C13229 +
           (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
            C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
               C13230) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C31357 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C31345 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C31345 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C31357 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C31357 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C31345 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C13229 +
            (C24633 + C24634) * C13230) *
               C30996 * C31064 * C1116 -
           ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
               C31064 * C1117 +
           ((C24636 + C24635) * C13229 +
            (C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210 +
             C18732 * C1751 - C18733 * C1748 - C18732 * C1752 +
             C18729 * C1757) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C13229 + (C18987 + C18988) * C13230) * C30996 *
               C31064 * C1117 -
           ((C18985 + C18986) * C13230 + (C18784 + C18783) * C13229) * C30996 *
               C31064 * C1116 -
           ((C20221 + C20222) * C13230 + (C18988 + C18987) * C13229) * C30996 *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C13229 + (C18989 + C18990) * C13230) * C30996 *
               C31064 * C1116 -
           ((C18991 + C18992) * C13230 + (C18990 + C18989) * C13229) * C30996 *
               C31064 * C1117 +
           ((C18992 + C18991) * C13229 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C13230) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C13229 +
           (C24633 + C24634) * C13230) *
              C30996 * C31064 * C1184 -
          ((C24635 + C24636) * C13230 + (C24634 + C24633) * C13229) * C30996 *
              C31064 * C1185 +
          ((C24636 + C24635) * C13229 + (C25503 + C25504) * C13230) * C30996 *
              C31064 * C1186 -
          ((C25505 + C25506) * C13230 + (C25504 + C25503) * C13229) * C30996 *
              C31064 * C1187 +
          ((C25506 + C25505) * C13229 +
           (C18730 * C5568 - C18731 * C5566 - C18730 * C5569 + C18728 * C5572 +
            C18732 * C6103 - C18733 * C6102 - C18732 * C6104 + C18729 * C6105) *
               C13230) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31105 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31112 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C2938) *
              C31023 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31112 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31105 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C2938) *
              C31032 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31105 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31112 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C2938) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31105 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31112 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C2938) *
              C31023 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31112 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31105 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C2938) *
              C31032 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31105 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31112 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C2938) *
              C2941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31105 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31112 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C2938) *
              C31023 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31112 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31105 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C2938) *
              C31032 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31105 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31112 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C2938) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31105 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31112 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C2938) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31105 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31112 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31105 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31112 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C31290 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C2938) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C31105 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31112 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31105 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C31112 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C31290 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C2938) *
              C2678 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C31105 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31112 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C31290) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C2570 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31109) *
                  C31363 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C2570) *
                  C31356 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C2570 -
               (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
                  C31343 +
              ((C386 * C103 + C704 * C104 +
                (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                    C31230 * C105) *
                   C31064 * C31109 -
               (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C2570) *
                  C31324) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C31364 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31360 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C31350 -
               (C1483 * C105 + C1484 * C104 +
                (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                    C31230 * C103) *
                   C31064 * C31330) *
                  C2678 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31360 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31364 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31350 +
               (C1484 * C103 + C1483 * C104 +
                (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                    C31230 * C105) *
                   C31064 * C31330) *
                  C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31358 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31347 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C31323) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31347 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31358 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C31323) *
               C31109) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31358 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31347 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C2570 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C31363 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C2570) *
              C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C2570 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C31343 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31364 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31360 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C31350 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C2678 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31360 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31364 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C31350 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31358 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31347 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C31323) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
               C31109) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31323) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31358 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31347 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C2570 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31109) *
              C31363 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C2570) *
              C31356 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C2570 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31109) *
              C31343 +
          ((C9079 * C321 - C9080 * C305 - C9079 * C322 + C9076 * C335 +
            C9081 * C973 - C9082 * C965 - C9081 * C974 + C9077 * C980 +
            C9083 * C2221 - C9084 * C2220 - C9083 * C2222 + C9078 * C2223) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31364 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31360 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31350 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31064 * C31330) *
              C2678 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31360 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31364 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31350 +
           (C9079 * C1198 - C9080 * C1191 - C9079 * C1199 + C9076 * C1209 +
            C9081 * C1753 - C9082 * C1749 - C9081 * C1754 + C9077 * C1758 +
            C9083 * C6554 - C9084 * C6553 - C9083 * C6555 + C9078 * C6556) *
               C31230 * C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31358 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31347 +
            (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
             C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
             C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
                C31230 * C30996 * C31323) *
               C2570 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31347 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31358 -
            (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
             C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
             C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
                C31230 * C30996 * C31323) *
               C31109) *
              C2678 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31347 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31358 -
            (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
             C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
             C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
                C31230 * C30996 * C31323) *
               C2570 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31358 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31347 +
            (C9079 * C1335 - C9080 * C1325 - C9079 * C1336 + C9076 * C1352 +
             C9081 * C2465 - C9082 * C2461 - C9081 * C2466 + C9077 * C2470 +
             C9083 * C10708 - C9084 * C10707 - C9083 * C10709 +
             C9078 * C10710) *
                C31230 * C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C31023 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31109) *
              C31023 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31032 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C2570 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C31109) *
              C31023 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C2570 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C31290 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C31290) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31364 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31360 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31350 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C2678 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31360 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31364 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31350 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C2570 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C31363 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C2570) *
              C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C2570 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C31343 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C2570 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C31363 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C2570) *
              C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C2570 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C31343 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31364 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31360 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C31350 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C2678 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31360 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31364 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C31350 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C2570 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31109) *
              C31363 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C2570) *
              C31356 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C2570 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31109) *
              C31343 +
          ((C9079 * C321 - C9080 * C305 - C9079 * C322 + C9076 * C335 +
            C9081 * C973 - C9082 * C965 - C9081 * C974 + C9077 * C980 +
            C9083 * C2221 - C9084 * C2220 - C9083 * C2222 + C9078 * C2223) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31364 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31360 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31350 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31064 * C31330) *
              C2678 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31360 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31364 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31350 +
           (C9079 * C1198 - C9080 * C1191 - C9079 * C1199 + C9076 * C1209 +
            C9081 * C1753 - C9082 * C1749 - C9081 * C1754 + C9077 * C1758 +
            C9083 * C6554 - C9084 * C6553 - C9083 * C6555 + C9078 * C6556) *
               C31230 * C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31105 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31112 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C2938) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31105 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31112 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31105 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31112 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C3332 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C2938) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31105 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31112 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31105 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31112 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C3332 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C2938) *
              C31275 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C31105 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31112 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C3332) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31147 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C3840) *
              C31105 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
              C31112 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31147 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31154 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C3840) *
              C2938) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31147 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C3840) *
              C31105 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31154 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31147 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C3840) *
              C31112 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31147 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31154 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C3840) *
              C2938) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31147 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31154 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C3840) *
              C31105 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31154 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31147 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C3840) *
              C31112 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31147 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31154 +
           (C9079 * C1345 - C9080 * C1330 - C9079 * C1346 + C9076 * C1357 +
            C9081 * C6398 - C9082 * C6395 - C9081 * C6399 + C9077 * C6404 +
            C9083 * C6402 - C9084 * C6397 - C9083 * C6403 + C9078 * C6406) *
               C31230 * C30996 * C3840) *
              C2938) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                     C31230 * C103 +
                 C179 * C104 + C180 * C105) *
                    C3332 -
                (C583 * C105 + C584 * C104 +
                 (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                     C31230 * C103) *
                    C31151) *
                   C2570 +
               (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                     C31230 * C103 +
                 C1004 * C104 + C1005 * C105) *
                    C31151 -
                (C382 * C105 + C383 * C104 +
                 (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                     C31230 * C103) *
                    C3332) *
                   C31109) *
                  C31354 +
              (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
                (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
                   C2570 +
               ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
                (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
                   C31109) *
                  C31341 +
              (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
                (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
                   C2570 +
               ((C1005 * C103 + C1006 * C104 +
                 (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                     C31230 * C105) *
                    C31151 -
                (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
                   C31109) *
                  C31314) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C3332 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31151) *
                  C31364 +
              (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                    C31230 * C103 +
                C1004 * C104 + C1005 * C105) *
                   C31151 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C3332) *
                  C31360 +
              (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C3332 -
               (C1649 * C105 + C1650 * C104 +
                (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                    C31230 * C103) *
                   C31151) *
                  C31350 +
              (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                    C31230 * C103 +
                (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                    C31230 * C104 +
                (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                    C31230 * C105) *
                   C31151 -
               (C1483 * C105 + C1484 * C104 +
                (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                    C31230 * C103) *
                   C3332) *
                  C31330) *
             C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31365 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31353 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C2570 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31362 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31365 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31353 +
           ((C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C31230 * C103 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C31230 * C104 +
            (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                C31230 * C105) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31364 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
              C31360 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C31350 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31365 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31353 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C2570 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31362 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31365 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31353 +
           (C6782 * C4793 + C6781 * C4794 +
            (C113 * C6765 - C114 * C6764 - C113 * C6766 + C31243 * C6767) *
                C4795) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C2570 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C3332 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C3332 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31364 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31151 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C3332) *
              C31360 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C3332 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31151) *
              C31350 +
          ((C9079 * C1751 - C9080 * C1748 - C9079 * C1752 + C9076 * C1757 +
            C9081 * C5701 - C9082 * C5698 - C9081 * C5702 + C9077 * C5707 +
            C9083 * C6765 - C9084 * C6764 - C9083 * C6766 + C9078 * C6767) *
               C31230 * C30996 * C31151 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31365 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31362 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31353 -
           (C9083 * C10555 - C9084 * C10553 - C9083 * C10556 + C9078 * C10559 +
            C9081 * C2062 - C9082 * C2053 - C9081 * C2063 + C9077 * C2071 +
            C9079 * C2060 - C9080 * C2052 - C9079 * C2061 + C9076 * C2070) *
               C31230 * C30996 * C31336) *
              C2570 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31362 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31365 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C31353 +
           (C9079 * C2463 - C9080 * C2460 - C9079 * C2464 + C9076 * C2469 +
            C9081 * C6400 - C9082 * C6396 - C9081 * C6401 + C9077 * C6405 +
            C9083 * C10912 - C9084 * C10911 - C9083 * C10913 + C9078 * C10914) *
               C31230 * C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31147 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C3840) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
               C31109) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31147 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31154 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31147 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C3840) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31154 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31147 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C3840) *
               C31109) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31147 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31154 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31147 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31154 +
            (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
             C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
             C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
                C31230 * C30996 * C3840) *
               C2570 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31154 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31147 -
            (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
             C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
             C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
                C31230 * C30996 * C3840) *
               C31109) *
              C31275 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31154 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31147 -
            (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
             C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
             C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
                C31230 * C30996 * C3840) *
               C2570 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31147 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31154 +
            (C9079 * C1335 - C9080 * C1325 - C9079 * C1336 + C9076 * C1352 +
             C9081 * C2465 - C9082 * C2461 - C9081 * C2466 + C9077 * C2470 +
             C9083 * C10708 - C9084 * C10707 - C9083 * C10709 +
             C9078 * C10710) *
                C31230 * C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31364 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C3332) *
              C31360 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C3332 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C31350 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31109) *
              C31354 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31341 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C2570 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31364 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
              C31360 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C31350 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C2570 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C3332 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C2570 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C3332 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31364 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31151 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C3332) *
              C31360 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C3332 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31151) *
              C31350 +
          ((C9079 * C1751 - C9080 * C1748 - C9079 * C1752 + C9076 * C1757 +
            C9081 * C5701 - C9082 * C5698 - C9081 * C5702 + C9077 * C5707 +
            C9083 * C6765 - C9084 * C6764 - C9083 * C6766 + C9078 * C6767) *
               C31230 * C30996 * C31151 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C31289 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31109) *
                  C688 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31289) *
                  C689 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31289 -
               (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
                  C690 +
              ((C386 * C103 + C704 * C104 +
                (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) *
                    C31230 * C105) *
                   C31064 * C31109 -
               (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31289) *
                  C31324) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C1458 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C1459 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C1460 -
               (C1483 * C105 + C1484 * C104 +
                (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                    C31230 * C103) *
                   C31064 * C31330) *
                  C31275 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1459 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1458 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C1460 +
               (C1484 * C103 + C1483 * C104 +
                (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                    C31230 * C105) *
                   C31064 * C31330) *
                  C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C1870 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C1871 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C31323) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C1871 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C1870 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C31323) *
               C31109) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C1870 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C1871 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31289 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C688 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31289) *
              C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31289 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C690 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1458 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1459 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C1460 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C31275 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1459 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1458 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C1460 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C1870 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C1871 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C31323) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
               C31109) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31323) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C1870 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C1871 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31289 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31109) *
              C688 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31289) *
              C689 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31289 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31109) *
              C690 +
          ((C9079 * C321 - C9080 * C305 - C9079 * C322 + C9076 * C335 +
            C9081 * C973 - C9082 * C965 - C9081 * C974 + C9077 * C980 +
            C9083 * C2221 - C9084 * C2220 - C9083 * C2222 + C9078 * C2223) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1458 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1459 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C1460 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31064 * C31330) *
              C31275 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1459 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1458 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C1460 +
           (C9079 * C1198 - C9080 * C1191 - C9079 * C1199 + C9076 * C1209 +
            C9081 * C1753 - C9082 * C1749 - C9081 * C1754 + C9077 * C1758 +
            C9083 * C6554 - C9084 * C6553 - C9083 * C6555 + C9078 * C6556) *
               C31230 * C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C1870 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C1871 +
            (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
             C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
             C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
                C31230 * C30996 * C31323) *
               C31289 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C1871 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C1870 -
            (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
             C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
             C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
                C31230 * C30996 * C31323) *
               C31109) *
              C31275 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C1871 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C1870 -
            (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
             C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
             C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
                C31230 * C30996 * C31323) *
               C31289 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C1870 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C1871 +
            (C9079 * C1335 - C9080 * C1325 - C9079 * C1336 + C9076 * C1352 +
             C9081 * C2465 - C9082 * C2461 - C9081 * C2466 + C9077 * C2470 +
             C9083 * C10708 - C9084 * C10707 - C9083 * C10709 +
             C9078 * C10710) *
                C31230 * C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                     C31230 * C103 +
                 C179 * C104 + C180 * C105) *
                    C31290 -
                (C583 * C105 + C584 * C104 +
                 (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                     C31230 * C103) *
                    C31151) *
                   C31289 +
               (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                     C31230 * C103 +
                 C1004 * C104 + C1005 * C105) *
                    C31151 -
                (C382 * C105 + C383 * C104 +
                 (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                     C31230 * C103) *
                    C31290) *
                   C31109) *
                  C296 +
              (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
                (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
                   C31289 +
               ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
                (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
                   C31109) *
                  C297 +
              (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
                (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
                   C31289 +
               ((C1005 * C103 + C1006 * C104 +
                 (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                     C31230 * C105) *
                    C31151 -
                (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
                   C31109) *
                  C31314) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31290 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31151) *
                  C1458 +
              (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                    C31230 * C103 +
                C1004 * C104 + C1005 * C105) *
                   C31151 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31290) *
                  C1459 +
              (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31290 -
               (C1649 * C105 + C1650 * C104 +
                (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                    C31230 * C103) *
                   C31151) *
                  C1460 +
              (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                    C31230 * C103 +
                (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                    C31230 * C104 +
                (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                    C31230 * C105) *
                   C31151 -
               (C1483 * C105 + C1484 * C104 +
                (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                    C31230 * C103) *
                   C31290) *
                  C31330) *
             C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C2338 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C2340 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31289 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C2339 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C2338 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C2340 +
           ((C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C31230 * C103 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C31230 * C104 +
            (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                C31230 * C105) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 +
             (C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                 C4795) *
                C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C296 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            ((C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                 C4795 +
             C1648 * C4794 + C1001 * C4793) *
                C30996 * C31151) *
               C31109) *
              C297 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C1458 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
              C1459 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C1460 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C2338 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C2340 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31289 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C2339 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C2338 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C2340 +
           (C6782 * C4793 + C6781 * C4794 +
            (C113 * C6765 - C114 * C6764 - C113 * C6766 + C31243 * C6767) *
                C4795) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C31109) *
              C296 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C31289 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C297 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C31290 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31290 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C1458 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31151 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31290) *
              C1459 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31290 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31151) *
              C1460 +
          ((C9079 * C1751 - C9080 * C1748 - C9079 * C1752 + C9076 * C1757 +
            C9081 * C5701 - C9082 * C5698 - C9081 * C5702 + C9077 * C5707 +
            C9083 * C6765 - C9084 * C6764 - C9083 * C6766 + C9078 * C6767) *
               C31230 * C30996 * C31151 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C2338 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C2339 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C2340 -
           (C9083 * C10555 - C9084 * C10553 - C9083 * C10556 + C9078 * C10559 +
            C9081 * C2062 - C9082 * C2053 - C9081 * C2063 + C9077 * C2071 +
            C9079 * C2060 - C9080 * C2052 - C9079 * C2061 + C9076 * C2070) *
               C31230 * C30996 * C31336) *
              C31289 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C2339 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C2338 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C2340 +
           (C9079 * C2463 - C9080 * C2460 - C9079 * C2464 + C9076 * C2469 +
            C9081 * C6400 - C9082 * C6396 - C9081 * C6401 + C9077 * C6405 +
            C9083 * C10912 - C9084 * C10911 - C9083 * C10913 + C9078 * C10914) *
               C31230 * C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                   C31230 * C103 +
               C179 * C104 + C180 * C105) *
                  C31064 * C31046 * C108 -
              (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 *
                  C109 +
              (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 *
                  C110 -
              (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 *
                  C111 +
              (C182 * C103 + C183 * C104 +
               (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) *
                   C31230 * C105) *
                  C31064 * C31046 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C31357 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31345 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C31320) *
                  C296 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
                  C297 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
               ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) *
                    C31230 * C105 +
                C386 * C104 + C382 * C103) *
                   C31064 * C31345 +
               (C385 * C103 + C387 * C104 +
                (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                    C31230 * C105) *
                   C31064 * C31320) *
                  C31314) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31358 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31347 +
               ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                    C31230 * C103 +
                C585 * C104 + C586 * C105) *
                   C31323) *
                  C31046 * C296 +
              ((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
               (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
                  C31046 * C297 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31358 -
               ((C113 * C526 - C114 * C508 - C113 * C527 + C31243 * C538) *
                    C31230 * C105 +
                C587 * C104 + C583 * C103) *
                   C31347 +
               (C586 * C103 + C588 * C104 +
                (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) *
                    C31230 * C105) *
                   C31323) *
                  C31046 * C31314) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C1116 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C1117 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C31320) *
                  C31354 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
                  C31341 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
               (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
               (C385 * C103 + C387 * C104 +
                (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                    C31230 * C105) *
                   C31064 * C31320) *
                  C31314) -
         0.25 * std::pow(Pi, 2.5) *
             (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                   C31230 * C103 +
               C179 * C104 + C180 * C105) *
                  C31064 * C1184 -
              (C382 * C105 + C383 * C104 +
               (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                   C31230 * C103) *
                  C31064 * C1185 +
              ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                   C31230 * C103 +
               C384 * C104 + C385 * C105) *
                  C31064 * C1186 -
              ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
                   C31230 * C105 +
               (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
                   C31230 * C104 +
               (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                   C31230 * C103) *
                  C31064 * C1187 +
              ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                   C31230 * C103 +
               (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                   C31230 * C104 +
               (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                   C31230 * C105) *
                  C31064 * C1188) *
             C31018 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31358 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31347 +
               ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                    C31230 * C103 +
                C585 * C104 + C586 * C105) *
                   C31323) *
                  C1116 +
              (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                    C31230 * C103 +
                C1004 * C104 + C1005 * C105) *
                   C31347 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31358 -
               ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                    C31230 * C105 +
                (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                    C31230 * C104 +
                (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                    C31230 * C103) *
                   C31323) *
                  C1117 +
              (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31358 -
               ((C113 * C1339 - C114 * C1327 - C113 * C1340 + C31243 * C1354) *
                    C31230 * C105 +
                (C113 * C1341 - C114 * C1328 - C113 * C1342 + C31243 * C1355) *
                    C31230 * C104 +
                (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                    C31230 * C103) *
                   C31347 +
               ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                    C31230 * C103 +
                (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                    C31230 * C104 +
                (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                    C31230 * C105) *
                   C31323) *
                  C31320) *
             C31018 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C1870 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C1871 +
               ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                    C31230 * C103 +
                C585 * C104 + C586 * C105) *
                   C31323) *
                  C31046 * C31354 +
              ((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
               (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
                  C31046 * C31341 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C1870 -
               (C816 * C105 + C587 * C104 + C583 * C103) * C1871 +
               (C586 * C103 + C588 * C104 +
                (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) *
                    C31230 * C105) *
                   C31323) *
                  C31046 * C31314) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C1870 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C1871 +
               ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                    C31230 * C103 +
                C585 * C104 + C586 * C105) *
                   C31323) *
                  C31357 +
              (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                    C31230 * C103 +
                C1004 * C104 + C1005 * C105) *
                   C1871 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C1870 -
               ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                    C31230 * C105 +
                (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                    C31230 * C104 +
                (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                    C31230 * C103) *
                   C31323) *
                  C31345 +
              (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C1870 -
               (C1649 * C105 + C1650 * C104 +
                (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                    C31230 * C103) *
                   C1871 +
               ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                    C31230 * C103 +
                (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                    C31230 * C104 +
                (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                    C31230 * C105) *
                   C31323) *
                  C31320) *
             C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C2045 -
          (C583 * C105 + C584 * C104 +
           (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
               C103) *
              C2046 +
          ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
               C103 +
           C585 * C104 + C586 * C105) *
              C2047 -
          ((C113 * C2056 - C114 * C2050 - C113 * C2057 + C31243 * C2068) *
               C31230 * C105 +
           (C113 * C2058 - C114 * C2051 - C113 * C2059 + C31243 * C2069) *
               C31230 * C104 +
           (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
               C31230 * C103) *
              C2048 +
          ((C113 * C2062 - C114 * C2053 - C113 * C2063 + C31243 * C2071) *
               C31230 * C103 +
           (C113 * C2064 - C114 * C2054 - C113 * C2065 + C31243 * C2072) *
               C31230 * C104 +
           (C113 * C2066 - C114 * C2055 - C113 * C2067 + C31243 * C2073) *
               C31230 * C105) *
              C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C4794 +
            (C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C4795) *
               C30996 * C31323) *
              C31046 * C296 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31358 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31347 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C1116 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C1117 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31358 -
           ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                C4795 +
            C5737 * C4794 + C5393 * C4793) *
               C30996 * C31347 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31046 * C31354 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C1870 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C1871 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31357 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C31345 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C1870 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C1871 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C2045 -
          (C5393 * C4795 + C5394 * C4794 +
           (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
              C30996 * C2046 +
          ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
           C5735 * C4794 + C5736 * C4795) *
              C30996 * C2047 -
          ((C113 * C6398 - C114 * C6395 - C113 * C6399 + C31243 * C6404) *
               C4795 +
           (C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
               C4794 +
           (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
               C4793) *
              C30996 * C2048 +
          ((C113 * C2062 - C114 * C2053 - C113 * C2063 + C31243 * C2071) *
               C4793 +
           (C113 * C6400 - C114 * C6396 - C113 * C6401 + C31243 * C6405) *
               C4794 +
           (C113 * C6402 - C114 * C6397 - C113 * C6403 + C31243 * C6406) *
               C4795) *
              C30996 * C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C31046 * C108 -
          (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
           C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
           C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
              C31230 * C30996 * C31064 * C31046 * C109 +
          (C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
           C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
           C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
              C31230 * C30996 * C31064 * C31046 * C110 -
          (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
           C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
           C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
              C31230 * C30996 * C31064 * C31046 * C111 +
          (C9079 * C130 - C9080 * C119 - C9079 * C131 + C9076 * C140 +
           C9081 * C526 - C9082 * C508 - C9081 * C527 + C9077 * C538 +
           C9083 * C528 - C9084 * C509 - C9083 * C529 + C9078 * C539) *
              C31230 * C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C296 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31345 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31358 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31347 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31046 * C296 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31347 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31358 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C31323) *
              C31046 * C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31358 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31347 +
           (C9079 * C520 - C9080 * C505 - C9079 * C521 + C9076 * C535 +
            C9081 * C2056 - C9082 * C2050 - C9081 * C2057 + C9077 * C2068 +
            C9083 * C2066 - C9084 * C2055 - C9083 * C2067 + C9078 * C2073) *
               C31230 * C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C31354 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1117 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C1184 -
          (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
           C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
           C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
              C31230 * C30996 * C31064 * C1185 +
          (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
           C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
           C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
              C31230 * C30996 * C31064 * C1186 -
          (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
           C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
           C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
              C31230 * C30996 * C31064 * C1187 +
          (C9079 * C1202 - C9080 * C1193 - C9079 * C1203 + C9076 * C1211 +
           C9081 * C5703 - C9082 * C5699 - C9081 * C5704 + C9077 * C5708 +
           C9083 * C5705 - C9084 * C5700 - C9083 * C5706 + C9078 * C5709) *
              C31230 * C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31358 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31347 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C1116 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31347 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31358 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C31323) *
              C1117 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31358 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31347 +
           (C9079 * C1345 - C9080 * C1330 - C9079 * C1346 + C9076 * C1357 +
            C9081 * C6398 - C9082 * C6395 - C9081 * C6399 + C9077 * C6404 +
            C9083 * C6402 - C9084 * C6397 - C9083 * C6403 + C9078 * C6406) *
               C31230 * C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C1870 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C1871 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31046 * C31354 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C1871 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C1870 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C31323) *
              C31046 * C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C1870 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C1871 +
           (C9079 * C520 - C9080 * C505 - C9079 * C521 + C9076 * C535 +
            C9081 * C2056 - C9082 * C2050 - C9081 * C2057 + C9077 * C2068 +
            C9083 * C2066 - C9084 * C2055 - C9083 * C2067 + C9078 * C2073) *
               C31230 * C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C1870 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C1871 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31357 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C1871 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C1870 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C31323) *
              C31345 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C1870 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C1871 +
           (C9079 * C1345 - C9080 * C1330 - C9079 * C1346 + C9076 * C1357 +
            C9081 * C6398 - C9082 * C6395 - C9081 * C6399 + C9077 * C6404 +
            C9083 * C6402 - C9084 * C6397 - C9083 * C6403 + C9078 * C6406) *
               C31230 * C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C2045 -
          (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
           C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
           C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
              C31230 * C30996 * C2046 +
          (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
           C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
           C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
              C31230 * C30996 * C2047 -
          (C9083 * C10555 - C9084 * C10553 - C9083 * C10556 + C9078 * C10559 +
           C9081 * C2062 - C9082 * C2053 - C9081 * C2063 + C9077 * C2071 +
           C9079 * C2060 - C9080 * C2052 - C9079 * C2061 + C9076 * C2070) *
              C31230 * C30996 * C2048 +
          (C9079 * C2062 - C9080 * C2053 - C9079 * C2063 + C9076 * C2071 +
           C9081 * C10555 - C9082 * C10553 - C9081 * C10556 + C9077 * C10559 +
           C9083 * C10557 - C9084 * C10554 - C9083 * C10558 + C9078 * C10560) *
              C31230 * C30996 * C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31290 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31151) *
                  C31046 * C688 +
              ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
                  C31046 * C689 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
               (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
                  C31046 * C690 +
              ((C587 * C103 + C816 * C104 +
                (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) *
                    C31230 * C105) *
                   C31151 -
               (C183 * C105 + C182 * C104 + C181 * C103) * C31290) *
                  C31046 * C31324) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                     C31230 * C103 +
                 C179 * C104 + C180 * C105) *
                    C31290 -
                (C583 * C105 + C584 * C104 +
                 (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                     C31230 * C103) *
                    C31151) *
                   C1116 +
               (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                     C31230 * C103 +
                 C1004 * C104 + C1005 * C105) *
                    C31151 -
                (C382 * C105 + C383 * C104 +
                 (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                     C31230 * C103) *
                    C31290) *
                   C1117 +
               (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                     C31230 * C103 +
                 C384 * C104 + C385 * C105) *
                    C31290 -
                (C1649 * C105 + C1650 * C104 +
                 (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                     C31230 * C103) *
                    C31151) *
                   C31320) *
                  C31275 +
              (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
                (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
                   C1116 +
               ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
                (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
                   C1117 +
               ((C1650 * C103 + C1649 * C104 +
                 (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                     C31230 * C105) *
                    C31151 -
                (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
                   C31320) *
                  C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C2338 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C2340 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31046 * C31275 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C2339 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C2338 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C2340 +
           (C2362 * C103 + C2361 * C104 +
            (C113 * C2343 - C114 * C2342 - C113 * C2344 + C31243 * C2345) *
                C31230 * C105) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C688 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
              C31046 * C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C690 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C1116 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C1117 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                 C4795 +
             C5737 * C4794 + C5393 * C4793) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C1116 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C1117 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C2338 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C2340 -
           ((C113 * C6398 - C114 * C6395 - C113 * C6399 + C31243 * C6404) *
                C4795 +
            (C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31046 * C31275 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C2339 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C2338 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C2340 +
           (C2360 * C4793 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C4794 +
            (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                C4795) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31290 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31046 * C688 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31151 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31290) *
              C31046 * C689 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31290 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31151) *
              C31046 * C690 +
          ((C9079 * C522 - C9080 * C506 - C9079 * C523 + C9076 * C536 +
            C9081 * C524 - C9082 * C507 - C9081 * C525 + C9077 * C537 +
            C9083 * C2343 - C9084 * C2342 - C9083 * C2344 + C9078 * C2345) *
               C31230 * C30996 * C31151 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C1116 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C1117 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C31290 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C31320) *
              C31275 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C1116 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C1117 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C2338 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C2339 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C2340 -
           (C9083 * C10555 - C9084 * C10553 - C9083 * C10556 + C9078 * C10559 +
            C9081 * C2062 - C9082 * C2053 - C9081 * C2063 + C9077 * C2071 +
            C9079 * C2060 - C9080 * C2052 - C9079 * C2061 + C9076 * C2070) *
               C31230 * C30996 * C31336) *
              C31046 * C31275 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C2339 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C2338 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C2340 +
           (C9079 * C2058 - C9080 * C2051 - C9079 * C2059 + C9076 * C2069 +
            C9081 * C2064 - C9082 * C2054 - C9081 * C2065 + C9077 * C2072 +
            C9083 * C10810 - C9084 * C10809 - C9083 * C10811 + C9078 * C10812) *
               C31230 * C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C31046 * C108 -
          (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 * C109 +
          (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 * C110 -
          (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 * C111 +
          (C182 * C103 + C183 * C104 +
           (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) * C31230 *
               C105) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31357 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31345 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C296 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
           ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) * C31230 *
                C105 +
            C386 * C104 + C382 * C103) *
               C31064 * C31345 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C31354 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C1870 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C1871 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31357 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C1871 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C1870 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C31345 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C1870 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C1871 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31046 * C31354 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C1870 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C1871 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31357 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C31345 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C1870 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C1871 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C31046 * C108 -
          (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
           C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
           C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
              C31230 * C30996 * C31064 * C31046 * C109 +
          (C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
           C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
           C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
              C31230 * C30996 * C31064 * C31046 * C110 -
          (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
           C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
           C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
              C31230 * C30996 * C31064 * C31046 * C111 +
          (C9079 * C130 - C9080 * C119 - C9079 * C131 + C9076 * C140 +
           C9081 * C526 - C9082 * C508 - C9081 * C527 + C9077 * C538 +
           C9083 * C528 - C9084 * C509 - C9083 * C529 + C9078 * C539) *
              C31230 * C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C296 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31345 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C31354 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1117 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C1184 -
          (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
           C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
           C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
              C31230 * C30996 * C31064 * C1185 +
          (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
           C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
           C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
              C31230 * C30996 * C31064 * C1186 -
          (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
           C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
           C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
              C31230 * C30996 * C31064 * C1187 +
          (C9079 * C1202 - C9080 * C1193 - C9079 * C1203 + C9076 * C1211 +
           C9081 * C5703 - C9082 * C5699 - C9081 * C5704 + C9077 * C5708 +
           C9083 * C5705 - C9084 * C5700 - C9083 * C5706 + C9078 * C5709) *
              C31230 * C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C1870 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C1871 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31046 * C31354 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C1871 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C1870 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C31323) *
              C31046 * C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C1870 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C1871 +
           (C9079 * C520 - C9080 * C505 - C9079 * C521 + C9076 * C535 +
            C9081 * C2056 - C9082 * C2050 - C9081 * C2057 + C9077 * C2068 +
            C9083 * C2066 - C9084 * C2055 - C9083 * C2067 + C9078 * C2073) *
               C31230 * C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C1870 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C1871 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31357 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C1871 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C1870 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C31323) *
              C31345 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C1870 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C1871 +
           (C9079 * C1345 - C9080 * C1330 - C9079 * C1346 + C9076 * C1357 +
            C9081 * C6398 - C9082 * C6395 - C9081 * C6399 + C9077 * C6404 +
            C9083 * C6402 - C9084 * C6397 - C9083 * C6403 + C9078 * C6406) *
               C31230 * C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31023 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31109) *
              C31023 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31032 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C31289 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31109) *
              C31023 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C31289 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C3332 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C3332) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31147 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C3840) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
               C31109) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31147 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31154 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31147 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C3840) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31154 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31147 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C3840) *
               C31109) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31147 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31154 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31147 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31154 +
            (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
             C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
             C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
                C31230 * C30996 * C3840) *
               C31289 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31154 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31147 -
            (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
             C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
             C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
                C31230 * C30996 * C3840) *
               C31109) *
              C2678 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31154 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31147 -
            (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
             C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
             C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
                C31230 * C30996 * C3840) *
               C31289 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31147 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31154 +
            (C9079 * C1335 - C9080 * C1325 - C9079 * C1336 + C9076 * C1352 +
             C9081 * C2465 - C9082 * C2461 - C9081 * C2466 + C9077 * C2470 +
             C9083 * C10708 - C9084 * C10707 - C9083 * C10709 +
             C9078 * C10710) *
                C31230 * C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C3332 -
               (C583 * C105 + C584 * C104 +
                (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                    C31230 * C103) *
                   C31151) *
                  C31046 * C31363 +
              ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
                  C31046 * C31356 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
               (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
                  C31046 * C31343 +
              ((C587 * C103 + C816 * C104 +
                (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) *
                    C31230 * C105) *
                   C31151 -
               (C183 * C105 + C182 * C104 + C181 * C103) * C3332) *
                  C31046 * C31324) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                     C31230 * C103 +
                 C179 * C104 + C180 * C105) *
                    C3332 -
                (C583 * C105 + C584 * C104 +
                 (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                     C31230 * C103) *
                    C31151) *
                   C31357 +
               (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                     C31230 * C103 +
                 C1004 * C104 + C1005 * C105) *
                    C31151 -
                (C382 * C105 + C383 * C104 +
                 (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                     C31230 * C103) *
                    C3332) *
                   C31345 +
               (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                     C31230 * C103 +
                 C384 * C104 + C385 * C105) *
                    C3332 -
                (C1649 * C105 + C1650 * C104 +
                 (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                     C31230 * C103) *
                    C31151) *
                   C31320) *
                  C2678 +
              (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
                (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
                   C31357 +
               ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
                (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
                   C31345 +
               ((C1650 * C103 + C1649 * C104 +
                 (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                     C31230 * C105) *
                    C31151 -
                (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
                   C31320) *
                  C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31365 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31353 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31046 * C2678 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31362 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31365 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31353 +
           (C2362 * C103 + C2361 * C104 +
            (C113 * C2343 - C114 * C2342 - C113 * C2344 + C31243 * C2345) *
                C31230 * C105) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C31363 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
              C31046 * C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C31343 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31357 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31345 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31357 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31345 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31365 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31353 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31046 * C2678 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31362 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31365 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31353 +
           (C2360 * C4793 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C4794 +
            (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                C4795) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C3332 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31046 * C31363 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31151 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C3332) *
              C31046 * C31356 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C3332 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31151) *
              C31046 * C31343 +
          ((C9079 * C522 - C9080 * C506 - C9079 * C523 + C9076 * C536 +
            C9081 * C524 - C9082 * C507 - C9081 * C525 + C9077 * C537 +
            C9083 * C2343 - C9084 * C2342 - C9083 * C2344 + C9078 * C2345) *
               C31230 * C30996 * C31151 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31357 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31345 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C3332 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C31357 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31345 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31365 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31362 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31353 -
           (C9083 * C10555 - C9084 * C10553 - C9083 * C10556 + C9078 * C10559 +
            C9081 * C2062 - C9082 * C2053 - C9081 * C2063 + C9077 * C2071 +
            C9079 * C2060 - C9080 * C2052 - C9079 * C2061 + C9076 * C2070) *
               C31230 * C30996 * C31336) *
              C31046 * C2678 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31362 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31365 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C31353 +
           (C9079 * C2058 - C9080 * C2051 - C9079 * C2059 + C9076 * C2069 +
            C9081 * C2064 - C9082 * C2054 - C9081 * C2065 + C9077 * C2072 +
            C9083 * C10810 - C9084 * C10809 - C9083 * C10811 + C9078 * C10812) *
               C31230 * C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31147 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C3840) *
              C31046 * C31023 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
              C31046 * C31032 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31147 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31154 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C3840) *
              C31046 * C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31147 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C3840) *
              C31046 * C31023 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
              C31046 * C31032 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31147 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31154 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C3840) *
              C31046 * C2941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31147 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31154 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C3840) *
              C31046 * C31023 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31154 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31147 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C3840) *
              C31046 * C31032 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31147 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31154 +
           (C9079 * C520 - C9080 * C505 - C9079 * C521 + C9076 * C535 +
            C9081 * C2056 - C9082 * C2050 - C9081 * C2057 + C9077 * C2068 +
            C9083 * C2066 - C9084 * C2055 - C9083 * C2067 + C9078 * C2073) *
               C31230 * C30996 * C3840) *
              C31046 * C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31357 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31345 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C3332 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31357 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31345 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C31363 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
              C31046 * C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C31343 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C31363 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
              C31046 * C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C31343 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31357 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31345 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31357 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31345 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C3332 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31046 * C31363 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31151 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C3332) *
              C31046 * C31356 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C3332 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31151) *
              C31046 * C31343 +
          ((C9079 * C522 - C9080 * C506 - C9079 * C523 + C9076 * C536 +
            C9081 * C524 - C9082 * C507 - C9081 * C525 + C9077 * C537 +
            C9083 * C2343 - C9084 * C2342 - C9083 * C2344 + C9078 * C2345) *
               C31230 * C30996 * C31151 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C3332 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31357 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C3332) *
               C31345 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C3332 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C3332) *
               C31357 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C3332 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31345 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1458 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1459 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C1460 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C31275 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1459 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1458 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C1460 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31289 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C688 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31289) *
              C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31289 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C690 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31289 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C688 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31289) *
              C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31289 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C690 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1458 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1459 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C1460 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C31275 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1459 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1458 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C1460 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31289 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31109) *
              C688 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31289) *
              C689 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31289 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31109) *
              C690 +
          ((C9079 * C321 - C9080 * C305 - C9079 * C322 + C9076 * C335 +
            C9081 * C973 - C9082 * C965 - C9081 * C974 + C9077 * C980 +
            C9083 * C2221 - C9084 * C2220 - C9083 * C2222 + C9078 * C2223) *
               C31230 * C30996 * C31064 * C31109 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1458 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1459 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C1460 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31064 * C31330) *
              C31275 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1459 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1458 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C1460 +
           (C9079 * C1198 - C9080 * C1191 - C9079 * C1199 + C9076 * C1209 +
            C9081 * C1753 - C9082 * C1749 - C9081 * C1754 + C9077 * C1758 +
            C9083 * C6554 - C9084 * C6553 - C9083 * C6555 + C9078 * C6556) *
               C31230 * C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C1458 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31290) *
              C1459 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31290 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C1460 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31109) *
              C296 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C297 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C31289 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 +
             (C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                 C4795) *
                C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C296 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            ((C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                 C4795 +
             C1648 * C4794 + C1001 * C4793) *
                C30996 * C31151) *
               C31109) *
              C297 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C1458 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
              C1459 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C1460 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C31109) *
              C296 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C31289 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C31109) *
              C297 +
          (((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
             C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
             C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
                C31230 * C30996 * C31290 -
            (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
             C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
             C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
                C31230 * C30996 * C31151) *
               C31289 +
           ((C9079 * C971 - C9080 * C964 - C9079 * C972 + C9076 * C979 +
             C9081 * C1333 - C9082 * C1324 - C9081 * C1334 + C9077 * C1351 +
             C9083 * C2467 - C9084 * C2462 - C9083 * C2468 + C9078 * C2471) *
                C31230 * C30996 * C31151 -
            (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
             C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
             C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
                C31230 * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31290 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C1458 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31151 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31290) *
              C1459 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31290 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31151) *
              C1460 +
          ((C9079 * C1751 - C9080 * C1748 - C9079 * C1752 + C9076 * C1757 +
            C9081 * C5701 - C9082 * C5698 - C9081 * C5702 + C9077 * C5707 +
            C9083 * C6765 - C9084 * C6764 - C9083 * C6766 + C9078 * C6767) *
               C31230 * C30996 * C31151 -
           (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
            C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
            C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
               C31230 * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                   C31230 * C103 +
               C179 * C104 + C180 * C105) *
                  C31064 * C31046 * C108 -
              (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 *
                  C109 +
              (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 *
                  C110 -
              (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 *
                  C111 +
              (C182 * C103 + C183 * C104 +
               (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) *
                   C31230 * C105) *
                  C31064 * C31046 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C31357 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31345 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C31320) *
                  C296 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
                  C297 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
               ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) *
                    C31230 * C105 +
                C386 * C104 + C382 * C103) *
                   C31064 * C31345 +
               (C385 * C103 + C387 * C104 +
                (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                    C31230 * C105) *
                   C31064 * C31320) *
                  C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C296 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31358 -
           ((C113 * C526 - C114 * C508 - C113 * C527 + C31243 * C538) * C31230 *
                C105 +
            C587 * C104 + C583 * C103) *
               C31347 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C1116 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31347 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31358 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C1117 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31358 -
           ((C113 * C1339 - C114 * C1327 - C113 * C1340 + C31243 * C1354) *
                C31230 * C105 +
            (C113 * C1341 - C114 * C1328 - C113 * C1342 + C31243 * C1355) *
                C31230 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31347 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C4794 +
            (C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C4795) *
               C30996 * C31323) *
              C31046 * C296 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31358 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31347 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C1116 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C1117 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31358 -
           ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                C4795 +
            C5737 * C4794 + C5393 * C4793) *
               C30996 * C31347 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C31046 * C108 -
          (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
           C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
           C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
              C31230 * C30996 * C31064 * C31046 * C109 +
          (C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
           C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
           C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
              C31230 * C30996 * C31064 * C31046 * C110 -
          (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
           C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
           C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
              C31230 * C30996 * C31064 * C31046 * C111 +
          (C9079 * C130 - C9080 * C119 - C9079 * C131 + C9076 * C140 +
           C9081 * C526 - C9082 * C508 - C9081 * C527 + C9077 * C538 +
           C9083 * C528 - C9084 * C509 - C9083 * C529 + C9078 * C539) *
              C31230 * C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C296 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31345 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31358 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31347 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C31046 * C296 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31347 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31358 -
           (C9083 * C2064 - C9084 * C2054 - C9083 * C2065 + C9078 * C2072 +
            C9081 * C2058 - C9082 * C2051 - C9081 * C2059 + C9077 * C2069 +
            C9079 * C518 - C9080 * C504 - C9079 * C519 + C9076 * C534) *
               C31230 * C30996 * C31323) *
              C31046 * C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31358 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31347 +
           (C9079 * C520 - C9080 * C505 - C9079 * C521 + C9076 * C535 +
            C9081 * C2056 - C9082 * C2050 - C9081 * C2057 + C9077 * C2068 +
            C9083 * C2066 - C9084 * C2055 - C9083 * C2067 + C9078 * C2073) *
               C31230 * C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C31354 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1117 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C1184 -
          (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
           C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
           C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
              C31230 * C30996 * C31064 * C1185 +
          (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
           C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
           C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
              C31230 * C30996 * C31064 * C1186 -
          (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
           C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
           C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
              C31230 * C30996 * C31064 * C1187 +
          (C9079 * C1202 - C9080 * C1193 - C9079 * C1203 + C9076 * C1211 +
           C9081 * C5703 - C9082 * C5699 - C9081 * C5704 + C9077 * C5708 +
           C9083 * C5705 - C9084 * C5700 - C9083 * C5706 + C9078 * C5709) *
              C31230 * C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31358 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31347 +
           (C9079 * C516 - C9080 * C503 - C9079 * C517 + C9076 * C533 +
            C9081 * C2060 - C9082 * C2052 - C9081 * C2061 + C9077 * C2070 +
            C9083 * C2062 - C9084 * C2053 - C9083 * C2063 + C9078 * C2071) *
               C31230 * C30996 * C31323) *
              C1116 +
          ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
            C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
            C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
               C31230 * C30996 * C31347 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31358 -
           (C9083 * C6400 - C9084 * C6396 - C9083 * C6401 + C9078 * C6405 +
            C9081 * C2463 - C9082 * C2460 - C9081 * C2464 + C9077 * C2469 +
            C9079 * C1337 - C9080 * C1326 - C9079 * C1338 + C9076 * C1353) *
               C31230 * C30996 * C31323) *
              C1117 +
          ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31358 -
           (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
            C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
            C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
               C31230 * C30996 * C31347 +
           (C9079 * C1345 - C9080 * C1330 - C9079 * C1346 + C9076 * C1357 +
            C9081 * C6398 - C9082 * C6395 - C9081 * C6399 + C9077 * C6404 +
            C9083 * C6402 - C9084 * C6397 - C9083 * C6403 + C9078 * C6406) *
               C31230 * C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C1116 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C1117 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C31290 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C1116 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C1117 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C688 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
              C31046 * C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C690 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C688 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
              C31046 * C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C690 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C1116 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C1117 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                 C4795 +
             C5737 * C4794 + C5393 * C4793) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C1116 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C1117 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31290 -
           (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
            C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
            C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
               C31230 * C30996 * C31151) *
              C31046 * C688 +
          ((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
            C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
            C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
               C31230 * C30996 * C31151 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31290) *
              C31046 * C689 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31290 -
           (C9083 * C2056 - C9084 * C2050 - C9083 * C2057 + C9078 * C2068 +
            C9081 * C520 - C9082 * C505 - C9081 * C521 + C9077 * C535 +
            C9079 * C510 - C9080 * C500 - C9079 * C511 + C9076 * C530) *
               C31230 * C30996 * C31151) *
              C31046 * C690 +
          ((C9079 * C522 - C9080 * C506 - C9079 * C523 + C9076 * C536 +
            C9081 * C524 - C9082 * C507 - C9081 * C525 + C9077 * C537 +
            C9083 * C2343 - C9084 * C2342 - C9083 * C2344 + C9078 * C2345) *
               C31230 * C30996 * C31151 -
           (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
            C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
            C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
               C31230 * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
             C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
             C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
                C31230 * C30996 * C31290 -
            (C9083 * C2060 - C9084 * C2052 - C9083 * C2061 + C9078 * C2070 +
             C9081 * C516 - C9082 * C503 - C9081 * C517 + C9077 * C533 +
             C9079 * C514 - C9080 * C502 - C9079 * C515 + C9076 * C532) *
                C31230 * C30996 * C31151) *
               C1116 +
           ((C9079 * C967 - C9080 * C962 - C9079 * C968 + C9076 * C977 +
             C9081 * C1337 - C9082 * C1326 - C9081 * C1338 + C9077 * C1353 +
             C9083 * C2463 - C9084 * C2460 - C9083 * C2464 + C9078 * C2469) *
                C31230 * C30996 * C31151 -
            (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
             C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
             C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
                C31230 * C30996 * C31290) *
               C1117 +
           ((C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
             C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
             C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
                C31230 * C30996 * C31290 -
            (C9083 * C6398 - C9084 * C6395 - C9083 * C6399 + C9078 * C6404 +
             C9081 * C1345 - C9082 * C1330 - C9081 * C1346 + C9077 * C1357 +
             C9079 * C1343 - C9080 * C1329 - C9079 * C1344 + C9076 * C1356) *
                C31230 * C30996 * C31151) *
               C31320) *
              C31275 +
          (((C9079 * C512 - C9080 * C501 - C9079 * C513 + C9076 * C531 +
             C9081 * C518 - C9082 * C504 - C9081 * C519 + C9077 * C534 +
             C9083 * C2058 - C9084 * C2051 - C9083 * C2059 + C9078 * C2069) *
                C31230 * C30996 * C31151 -
            (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
             C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
             C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
                C31230 * C30996 * C31290) *
               C1116 +
           ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
             C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
             C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
                C31230 * C30996 * C31290 -
            (C9083 * C2465 - C9084 * C2461 - C9083 * C2466 + C9078 * C2470 +
             C9081 * C1335 - C9082 * C1325 - C9081 * C1336 + C9077 * C1352 +
             C9079 * C969 - C9080 * C963 - C9079 * C970 + C9076 * C978) *
                C31230 * C30996 * C31151) *
               C1117 +
           ((C9079 * C1341 - C9080 * C1328 - C9079 * C1342 + C9076 * C1355 +
             C9081 * C1347 - C9082 * C1331 - C9081 * C1348 + C9077 * C1358 +
             C9083 * C6663 - C9084 * C6662 - C9083 * C6664 + C9078 * C6665) *
                C31230 * C30996 * C31151 -
            (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
             C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
             C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
                C31230 * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31357 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31345 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C296 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
           ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) * C31230 *
                C105 +
            C386 * C104 + C382 * C103) *
               C31064 * C31345 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C31046 * C108 -
          (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 * C109 +
          (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 * C110 -
          (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 * C111 +
          (C182 * C103 + C183 * C104 +
           (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) * C31230 *
               C105) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C31046 * C108 -
          (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
           C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
           C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
              C31230 * C30996 * C31064 * C31046 * C109 +
          (C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
           C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
           C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
              C31230 * C30996 * C31064 * C31046 * C110 -
          (C9083 * C524 - C9084 * C507 - C9083 * C525 + C9078 * C537 +
           C9081 * C522 - C9082 * C506 - C9081 * C523 + C9077 * C536 +
           C9079 * C128 - C9080 * C118 - C9079 * C129 + C9076 * C139) *
              C31230 * C30996 * C31064 * C31046 * C111 +
          (C9079 * C130 - C9080 * C119 - C9079 * C131 + C9076 * C140 +
           C9081 * C526 - C9082 * C508 - C9081 * C527 + C9077 * C538 +
           C9083 * C528 - C9084 * C509 - C9083 * C529 + C9078 * C539) *
              C31230 * C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C296 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C31345 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C297 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C31357 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C31345 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
            C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
            C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
            C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
            C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
            C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
            C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
               C31230 * C30996 * C31064 * C31320) *
              C31354 +
          ((C9079 * C311 - C9080 * C300 - C9079 * C312 + C9076 * C330 +
            C9081 * C969 - C9082 * C963 - C9081 * C970 + C9077 * C978 +
            C9083 * C1335 - C9084 * C1325 - C9083 * C1336 + C9078 * C1352) *
               C31230 * C30996 * C31064 * C1117 -
           (C9083 * C518 - C9084 * C504 - C9083 * C519 + C9078 * C534 +
            C9081 * C512 - C9082 * C501 - C9081 * C513 + C9077 * C531 +
            C9079 * C124 - C9080 * C116 - C9079 * C125 + C9076 * C137) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1347 - C9084 * C1331 - C9083 * C1348 + C9078 * C1358 +
            C9081 * C1341 - C9082 * C1328 - C9081 * C1342 + C9077 * C1355 +
            C9079 * C317 - C9080 * C303 - C9079 * C318 + C9076 * C333) *
               C31230 * C30996 * C31064 * C31320) *
              C31341 +
          ((C9079 * C126 - C9080 * C117 - C9079 * C127 + C9076 * C138 +
            C9081 * C510 - C9082 * C500 - C9081 * C511 + C9077 * C530 +
            C9083 * C520 - C9084 * C505 - C9083 * C521 + C9078 * C535) *
               C31230 * C30996 * C31064 * C1116 -
           (C9083 * C1333 - C9084 * C1324 - C9083 * C1334 + C9078 * C1351 +
            C9081 * C971 - C9082 * C964 - C9081 * C972 + C9077 * C979 +
            C9079 * C309 - C9080 * C299 - C9079 * C310 + C9076 * C329) *
               C31230 * C30996 * C31064 * C1117 +
           (C9079 * C319 - C9080 * C304 - C9079 * C320 + C9076 * C334 +
            C9081 * C1339 - C9082 * C1327 - C9081 * C1340 + C9077 * C1354 +
            C9083 * C1349 - C9084 * C1332 - C9083 * C1350 + C9078 * C1359) *
               C31230 * C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C9079 * C122 - C9080 * C115 - C9079 * C123 + C9076 * C136 +
           C9081 * C514 - C9082 * C502 - C9081 * C515 + C9077 * C532 +
           C9083 * C516 - C9084 * C503 - C9083 * C517 + C9078 * C533) *
              C31230 * C30996 * C31064 * C1184 -
          (C9083 * C1337 - C9084 * C1326 - C9083 * C1338 + C9078 * C1353 +
           C9081 * C967 - C9082 * C962 - C9081 * C968 + C9077 * C977 +
           C9079 * C313 - C9080 * C301 - C9079 * C314 + C9076 * C331) *
              C31230 * C30996 * C31064 * C1185 +
          (C9079 * C315 - C9080 * C302 - C9079 * C316 + C9076 * C332 +
           C9081 * C1343 - C9082 * C1329 - C9081 * C1344 + C9077 * C1356 +
           C9083 * C1345 - C9084 * C1330 - C9083 * C1346 + C9078 * C1357) *
              C31230 * C30996 * C31064 * C1186 -
          (C9083 * C5701 - C9084 * C5698 - C9083 * C5702 + C9078 * C5707 +
           C9081 * C1751 - C9082 * C1748 - C9081 * C1752 + C9077 * C1757 +
           C9079 * C1200 - C9080 * C1192 - C9079 * C1201 + C9076 * C1210) *
              C31230 * C30996 * C31064 * C1187 +
          (C9079 * C1202 - C9080 * C1193 - C9079 * C1203 + C9076 * C1211 +
           C9081 * C5703 - C9082 * C5699 - C9081 * C5704 + C9077 * C5708 +
           C9083 * C5705 - C9084 * C5700 - C9083 * C5706 + C9078 * C5709) *
              C31230 * C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31105 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31112 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C2938) *
              C31023 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31112 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31105 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C2938) *
              C31032 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31105 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31112 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C2938) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31105 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C31112 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C31290 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C2938) *
              C2678 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C31105 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31112 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C31290) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31364 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31360 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31350 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31064 * C31330) *
              C2678 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31360 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31364 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31350 +
           ((C20222 + C20221) * C31230 * C13231 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C31230 * C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C2570 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31109) *
              C31363 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31109 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C2570) *
              C31356 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C2570 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31109) *
              C31343 +
          (((C19338 + C19337) * C31230 * C13231 +
            (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
             C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
                C31230 * C13232) *
               C31064 * C31109 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31358 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31347 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C31230 * C13231 +
             (C19189 + C19190) * C31230 * C13232) *
                C31323) *
               C2570 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31347 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31358 -
            ((C21141 + C21142) * C31230 * C13232 +
             (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
              C18729 * C2469 + C18730 * C1337 - C18731 * C1326 -
              C18730 * C1338 + C18728 * C1353) *
                 C31230 * C13231) *
                C31323) *
               C31109) *
              C2678 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31347 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31358 -
            ((C19193 + C19194) * C31230 * C13232 +
             (C19190 + C19189) * C31230 * C13231) *
                C31323) *
               C2570 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31358 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31347 +
            ((C21142 + C21141) * C31230 * C13231 +
             (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 +
              C18728 * C1351 + C18732 * C2467 - C18733 * C2462 -
              C18732 * C2468 + C18729 * C2471) *
                 C31230 * C13232) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C2570 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C31109) *
              C31023 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C2570 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C31032 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C31290 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C31290) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C2570 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31109) *
              C31363 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31109 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C2570) *
              C31356 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C2570 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31109) *
              C31343 +
          (((C19338 + C19337) * C31230 * C13231 +
            (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
             C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
                C31230 * C13232) *
               C31064 * C31109 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31364 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31360 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31350 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31064 * C31330) *
              C2678 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31360 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31364 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31350 +
           ((C20222 + C20221) * C31230 * C13231 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C31230 * C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31105 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31112 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C3332 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C2938) *
              C31275 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C31105 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31112 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C3332) *
               C2938) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31147 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31154 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C3840) *
              C31105 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31154 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31147 -
           ((C21141 + C21142) * C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C3840) *
              C31112 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31147 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31154 +
           ((C18730 * C1345 - C18731 * C1330 - C18730 * C1346 + C18728 * C1357 +
             C18732 * C6398 - C18733 * C6395 - C18732 * C6399 +
             C18729 * C6404) *
                C31230 * C13231 +
            (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 + C18728 * C1358 +
             C18732 * C6663 - C18733 * C6662 - C18732 * C6664 +
             C18729 * C6665) *
                C31230 * C13232) *
               C3840) *
              C2938) *
         C31018) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C3332 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31364 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31151 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C3332) *
              C31360 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C3332 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31151) *
              C31350 +
          (((C18730 * C1751 - C18731 * C1748 - C18730 * C1752 + C18728 * C1757 +
             C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
             C18729 * C5707) *
                C31230 * C13231 +
            (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 + C18728 * C1758 +
             C18732 * C6554 - C18733 * C6553 - C18732 * C6555 +
             C18729 * C6556) *
                C31230 * C13232) *
               C31151 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C2570 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31109) *
              C31354 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C2570 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C31341 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C3332 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31365 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31362 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31353 -
           ((C21285 + C21286) * C31230 * C13232 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C31230 * C13231) *
               C31336) *
              C2570 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31362 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31365 -
           ((C21141 + C21142) * C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C31353 +
           ((C18730 * C2463 - C18731 * C2460 - C18730 * C2464 + C18728 * C2469 +
             C18732 * C6400 - C18733 * C6396 - C18732 * C6401 +
             C18729 * C6405) *
                C31230 * C13231 +
            (C18730 * C2465 - C18731 * C2461 - C18730 * C2466 + C18728 * C2470 +
             C18732 * C10708 - C18733 * C10707 - C18732 * C10709 +
             C18729 * C10710) *
                C31230 * C13232) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31147 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31154 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C31230 * C13231 +
             (C19189 + C19190) * C31230 * C13232) *
                C3840) *
               C2570 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31154 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31147 -
            ((C21141 + C21142) * C31230 * C13232 +
             (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
              C18729 * C2469 + C18730 * C1337 - C18731 * C1326 -
              C18730 * C1338 + C18728 * C1353) *
                 C31230 * C13231) *
                C3840) *
               C31109) *
              C31275 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31154 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31147 -
            ((C19193 + C19194) * C31230 * C13232 +
             (C19190 + C19189) * C31230 * C13231) *
                C3840) *
               C2570 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31147 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31154 +
            ((C21142 + C21141) * C31230 * C13231 +
             (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 +
              C18728 * C1351 + C18732 * C2467 - C18733 * C2462 -
              C18732 * C2468 + C18729 * C2471) *
                 C31230 * C13232) *
                C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C2570 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31109) *
              C31354 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C2570 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C31341 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C3332 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C2570 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C3332 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31364 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31151 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C3332) *
              C31360 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C3332 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31151) *
              C31350 +
          (((C18730 * C1751 - C18731 * C1748 - C18730 * C1752 + C18728 * C1757 +
             C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
             C18729 * C5707) *
                C31230 * C13231 +
            (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 + C18728 * C1758 +
             C18732 * C6554 - C18733 * C6553 - C18732 * C6555 +
             C18729 * C6556) *
                C31230 * C13232) *
               C31151 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1458 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1459 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C1460 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31064 * C31330) *
              C31275 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1459 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1458 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C1460 +
           ((C20222 + C20221) * C31230 * C13231 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C31230 * C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31289 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31109) *
              C688 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31109 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31289) *
              C689 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31289 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31109) *
              C690 +
          (((C19338 + C19337) * C31230 * C13231 +
            (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
             C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
                C31230 * C13232) *
               C31064 * C31109 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C1870 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C1871 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C31230 * C13231 +
             (C19189 + C19190) * C31230 * C13232) *
                C31323) *
               C31289 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C1871 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C1870 -
            ((C21141 + C21142) * C31230 * C13232 +
             (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
              C18729 * C2469 + C18730 * C1337 - C18731 * C1326 -
              C18730 * C1338 + C18728 * C1353) *
                 C31230 * C13231) *
                C31323) *
               C31109) *
              C31275 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C1871 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C1870 -
            ((C19193 + C19194) * C31230 * C13232 +
             (C19190 + C19189) * C31230 * C13231) *
                C31323) *
               C31289 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C1870 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C1871 +
            ((C21142 + C21141) * C31230 * C13231 +
             (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 +
              C18728 * C1351 + C18732 * C2467 - C18733 * C2462 -
              C18732 * C2468 + C18729 * C2471) *
                 C31230 * C13232) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31290 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C1458 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31151 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31290) *
              C1459 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31290 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31151) *
              C1460 +
          (((C18730 * C1751 - C18731 * C1748 - C18730 * C1752 + C18728 * C1757 +
             C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
             C18729 * C5707) *
                C31230 * C13231 +
            (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 + C18728 * C1758 +
             C18732 * C6554 - C18733 * C6553 - C18732 * C6555 +
             C18729 * C6556) *
                C31230 * C13232) *
               C31151 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31289 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C31109) *
              C296 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C31289 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C297 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C31290 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C2338 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C2339 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C2340 -
           ((C21285 + C21286) * C31230 * C13232 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C31230 * C13231) *
               C31336) *
              C31289 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C2339 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C2338 -
           ((C21141 + C21142) * C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C2340 +
           ((C18730 * C2463 - C18731 * C2460 - C18730 * C2464 + C18728 * C2469 +
             C18732 * C6400 - C18733 * C6396 - C18732 * C6401 +
             C18729 * C6405) *
                C31230 * C13231 +
            (C18730 * C2465 - C18731 * C2461 - C18730 * C2466 + C18728 * C2470 +
             C18732 * C10708 - C18733 * C10707 - C18732 * C10709 +
             C18729 * C10710) *
                C31230 * C13232) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
                C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                   C31230 * C13231 +
               (C18783 + C18784) * C31230 * C13232) *
                  C31064 * C31046 * C108 -
              ((C18785 + C18786) * C31230 * C13232 +
               (C18784 + C18783) * C31230 * C13231) *
                  C31064 * C31046 * C109 +
              ((C18786 + C18785) * C31230 * C13231 +
               (C18787 + C18788) * C31230 * C13232) *
                  C31064 * C31046 * C110 -
              ((C18789 + C18790) * C31230 * C13232 +
               (C18788 + C18787) * C31230 * C13231) *
                  C31064 * C31046 * C111 +
              ((C18790 + C18789) * C31230 * C13231 +
               (C18730 * C132 - C18731 * C120 - C18730 * C133 + C18728 * C141 +
                C18732 * C805 - C18733 * C804 - C18732 * C806 + C18729 * C807) *
                   C31230 * C13232) *
                  C31064 * C31046 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
                 C18732 * C514 - C18733 * C502 - C18732 * C515 +
                 C18729 * C532) *
                    C31230 * C13231 +
                (C18783 + C18784) * C31230 * C13232) *
                   C31064 * C31357 -
               ((C18985 + C18986) * C31230 * C13232 +
                (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
                 C18730 * C313 - C18731 * C301 - C18730 * C314 +
                 C18728 * C331) *
                    C31230 * C13231) *
                   C31064 * C31345 +
               ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
                 C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
                 C18729 * C1356) *
                    C31230 * C13231 +
                (C18987 + C18988) * C31230 * C13232) *
                   C31064 * C31320) *
                  C296 +
              (((C18986 + C18985) * C31230 * C13231 +
                (C18989 + C18990) * C31230 * C13232) *
                   C31064 * C31345 -
               ((C18785 + C18786) * C31230 * C13232 +
                (C18784 + C18783) * C31230 * C13231) *
                   C31064 * C31357 -
               ((C18991 + C18992) * C31230 * C13232 +
                (C18988 + C18987) * C31230 * C13231) *
                   C31064 * C31320) *
                  C297 +
              (((C18786 + C18785) * C31230 * C13231 +
                (C18787 + C18788) * C31230 * C13232) *
                   C31064 * C31357 -
               ((C18732 * C973 - C18733 * C965 - C18732 * C974 + C18729 * C980 +
                 C18730 * C321 - C18731 * C305 - C18730 * C322 +
                 C18728 * C335) *
                    C31230 * C13232 +
                (C18990 + C18989) * C31230 * C13231) *
                   C31064 * C31345 +
               ((C18992 + C18991) * C31230 * C13231 +
                (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
                 C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
                 C18729 * C1633) *
                    C31230 * C13232) *
                   C31064 * C31320) *
                  C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31358 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31046 * C296 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31347 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31358 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C31323) *
              C31046 * C297 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31358 -
           ((C18732 * C524 - C18733 * C507 - C18732 * C525 + C18729 * C537 +
             C18730 * C522 - C18731 * C506 - C18730 * C523 + C18728 * C536) *
                C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31347 +
           ((C19194 + C19193) * C31230 * C13231 +
            (C18730 * C524 - C18731 * C507 - C18730 * C525 + C18728 * C537 +
             C18732 * C2343 - C18733 * C2342 - C18732 * C2344 +
             C18729 * C2345) *
                C31230 * C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1116 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1117 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1117 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1116 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C1116 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C1117 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C1184 -
          ((C18985 + C18986) * C31230 * C13232 +
           (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
            C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
               C31230 * C13231) *
              C31064 * C1185 +
          ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
            C18732 * C1343 - C18733 * C1329 - C18732 * C1344 + C18729 * C1356) *
               C31230 * C13231 +
           (C18987 + C18988) * C31230 * C13232) *
              C31064 * C1186 -
          ((C18732 * C1753 - C18733 * C1749 - C18732 * C1754 + C18729 * C1758 +
            C18730 * C1198 - C18731 * C1191 - C18730 * C1199 + C18728 * C1209) *
               C31230 * C13232 +
           (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
            C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210) *
               C31230 * C13231) *
              C31064 * C1187 +
          ((C18730 * C1202 - C18731 * C1193 - C18730 * C1203 + C18728 * C1211 +
            C18732 * C5703 - C18733 * C5699 - C18732 * C5704 + C18729 * C5708) *
               C31230 * C13231 +
           (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
            C18732 * C5994 - C18733 * C5993 - C18732 * C5995 + C18729 * C5996) *
               C31230 * C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31358 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C1116 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31347 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31358 -
           ((C18732 * C2465 - C18733 * C2461 - C18732 * C2466 + C18729 * C2470 +
             C18730 * C1335 - C18731 * C1325 - C18730 * C1336 +
             C18728 * C1352) *
                C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C31323) *
              C1117 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31358 -
           ((C18732 * C1347 - C18733 * C1331 - C18732 * C1348 + C18729 * C1358 +
             C18730 * C1341 - C18731 * C1328 - C18730 * C1342 +
             C18728 * C1355) *
                C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C1345 - C18731 * C1330 - C18730 * C1346 + C18728 * C1357 +
             C18732 * C6398 - C18733 * C6395 - C18732 * C6399 +
             C18729 * C6404) *
                C31230 * C13231 +
            (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 + C18728 * C1358 +
             C18732 * C6663 - C18733 * C6662 - C18732 * C6664 +
             C18729 * C6665) *
                C31230 * C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C1870 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31046 * C31354 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C1871 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C1870 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C31323) *
              C31046 * C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C1870 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C1871 +
           ((C19194 + C19193) * C31230 * C13231 +
            (C18730 * C524 - C18731 * C507 - C18730 * C525 + C18728 * C537 +
             C18732 * C2343 - C18733 * C2342 - C18732 * C2344 +
             C18729 * C2345) *
                C31230 * C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C1870 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31357 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C1871 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C1870 -
           ((C18732 * C2465 - C18733 * C2461 - C18732 * C2466 + C18729 * C2470 +
             C18730 * C1335 - C18731 * C1325 - C18730 * C1336 +
             C18728 * C1352) *
                C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C31323) *
              C31345 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C1870 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C1345 - C18731 * C1330 - C18730 * C1346 + C18728 * C1357 +
             C18732 * C6398 - C18733 * C6395 - C18732 * C6399 +
             C18729 * C6404) *
                C31230 * C13231 +
            (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 + C18728 * C1358 +
             C18732 * C6663 - C18733 * C6662 - C18732 * C6664 +
             C18729 * C6665) *
                C31230 * C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C2045 -
          ((C19187 + C19188) * C31230 * C13232 +
           (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
            C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
               C31230 * C13231) *
              C2046 +
          ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
            C18732 * C2060 - C18733 * C2052 - C18732 * C2061 + C18729 * C2070) *
               C31230 * C13231 +
           (C19189 + C19190) * C31230 * C13232) *
              C2047 -
          ((C18732 * C2064 - C18733 * C2054 - C18732 * C2065 + C18729 * C2072 +
            C18730 * C2058 - C18731 * C2051 - C18730 * C2059 + C18728 * C2069) *
               C31230 * C13232 +
           (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
            C18730 * C2060 - C18731 * C2052 - C18730 * C2061 + C18728 * C2070) *
               C31230 * C13231) *
              C2048 +
          ((C18730 * C2062 - C18731 * C2053 - C18730 * C2063 + C18728 * C2071 +
            C18732 * C10555 - C18733 * C10553 - C18732 * C10556 +
            C18729 * C10559) *
               C31230 * C13231 +
           (C18730 * C2064 - C18731 * C2054 - C18730 * C2065 + C18728 * C2072 +
            C18732 * C10810 - C18733 * C10809 - C18732 * C10811 +
            C18729 * C10812) *
               C31230 * C13232) *
              C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C1116 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C1117 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C31290 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C31320) *
              C31275 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C1116 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C1117 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31290 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31046 * C688 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31151 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31290) *
              C31046 * C689 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31290 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31151) *
              C31046 * C690 +
          (((C19482 + C19481) * C31230 * C13231 +
            (C18730 * C526 - C18731 * C508 - C18730 * C527 + C18728 * C538 +
             C18732 * C528 - C18733 * C509 - C18732 * C529 + C18729 * C539) *
                C31230 * C13232) *
               C31151 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C2338 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C2339 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C2340 -
           ((C21285 + C21286) * C31230 * C13232 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C31230 * C13231) *
               C31336) *
              C31046 * C31275 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C2339 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C2338 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C2340 +
           ((C21286 + C21285) * C31230 * C13231 +
            (C18730 * C2056 - C18731 * C2050 - C18730 * C2057 + C18728 * C2068 +
             C18732 * C2066 - C18733 * C2055 - C18732 * C2067 +
             C18729 * C2073) *
                C31230 * C13232) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31345 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31345 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31357 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18732 * C973 - C18733 * C965 - C18732 * C974 + C18729 * C980 +
             C18730 * C321 - C18731 * C305 - C18730 * C322 + C18728 * C335) *
                C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31345 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C31046 * C108 -
          ((C18785 + C18786) * C31230 * C13232 +
           (C18784 + C18783) * C31230 * C13231) *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C31230 * C13231 +
           (C18787 + C18788) * C31230 * C13232) *
              C31064 * C31046 * C110 -
          ((C18789 + C18790) * C31230 * C13232 +
           (C18788 + C18787) * C31230 * C13231) *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C31230 * C13231 +
           (C18730 * C132 - C18731 * C120 - C18730 * C133 + C18728 * C141 +
            C18732 * C805 - C18733 * C804 - C18732 * C806 + C18729 * C807) *
               C31230 * C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1116 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1117 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1117 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1116 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C1116 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C1117 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C1184 -
          ((C18985 + C18986) * C31230 * C13232 +
           (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
            C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
               C31230 * C13231) *
              C31064 * C1185 +
          ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
            C18732 * C1343 - C18733 * C1329 - C18732 * C1344 + C18729 * C1356) *
               C31230 * C13231 +
           (C18987 + C18988) * C31230 * C13232) *
              C31064 * C1186 -
          ((C18732 * C1753 - C18733 * C1749 - C18732 * C1754 + C18729 * C1758 +
            C18730 * C1198 - C18731 * C1191 - C18730 * C1199 + C18728 * C1209) *
               C31230 * C13232 +
           (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
            C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210) *
               C31230 * C13231) *
              C31064 * C1187 +
          ((C18730 * C1202 - C18731 * C1193 - C18730 * C1203 + C18728 * C1211 +
            C18732 * C5703 - C18733 * C5699 - C18732 * C5704 + C18729 * C5708) *
               C31230 * C13231 +
           (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
            C18732 * C5994 - C18733 * C5993 - C18732 * C5995 + C18729 * C5996) *
               C31230 * C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C1870 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31046 * C31354 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C1871 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C1870 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C31323) *
              C31046 * C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C1870 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C1871 +
           ((C19194 + C19193) * C31230 * C13231 +
            (C18730 * C524 - C18731 * C507 - C18730 * C525 + C18728 * C537 +
             C18732 * C2343 - C18733 * C2342 - C18732 * C2344 +
             C18729 * C2345) *
                C31230 * C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C1870 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31357 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C1871 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C1870 -
           ((C18732 * C2465 - C18733 * C2461 - C18732 * C2466 + C18729 * C2470 +
             C18730 * C1335 - C18731 * C1325 - C18730 * C1336 +
             C18728 * C1352) *
                C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C31323) *
              C31345 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C1870 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C1871 +
           ((C18730 * C1345 - C18731 * C1330 - C18730 * C1346 + C18728 * C1357 +
             C18732 * C6398 - C18733 * C6395 - C18732 * C6399 +
             C18729 * C6404) *
                C31230 * C13231 +
            (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 + C18728 * C1358 +
             C18732 * C6663 - C18733 * C6662 - C18732 * C6664 +
             C18729 * C6665) *
                C31230 * C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31289 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31109) *
              C31023 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C31289 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C31032 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C3332 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C3332) *
               C31109) *
              C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31147 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31154 +
            ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
              C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
              C18729 * C2070) *
                 C31230 * C13231 +
             (C19189 + C19190) * C31230 * C13232) *
                C3840) *
               C31289 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31154 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31147 -
            ((C21141 + C21142) * C31230 * C13232 +
             (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 +
              C18729 * C2469 + C18730 * C1337 - C18731 * C1326 -
              C18730 * C1338 + C18728 * C1353) *
                 C31230 * C13231) *
                C3840) *
               C31109) *
              C2678 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31154 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31147 -
            ((C19193 + C19194) * C31230 * C13232 +
             (C19190 + C19189) * C31230 * C13231) *
                C3840) *
               C31289 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31147 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31154 +
            ((C21142 + C21141) * C31230 * C13231 +
             (C18730 * C1333 - C18731 * C1324 - C18730 * C1334 +
              C18728 * C1351 + C18732 * C2467 - C18733 * C2462 -
              C18732 * C2468 + C18729 * C2471) *
                 C31230 * C13232) *
                C3840) *
               C31109) *
              C31029)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31357 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31345 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C3332 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C31320) *
              C2678 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C31357 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31345 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C3332 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31046 * C31363 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31151 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C3332) *
              C31046 * C31356 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C3332 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31151) *
              C31046 * C31343 +
          (((C19482 + C19481) * C31230 * C13231 +
            (C18730 * C526 - C18731 * C508 - C18730 * C527 + C18728 * C538 +
             C18732 * C528 - C18733 * C509 - C18732 * C529 + C18729 * C539) *
                C31230 * C13232) *
               C31151 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31365 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31362 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31353 -
           ((C21285 + C21286) * C31230 * C13232 +
            (C18732 * C2062 - C18733 * C2053 - C18732 * C2063 + C18729 * C2071 +
             C18730 * C2060 - C18731 * C2052 - C18730 * C2061 +
             C18728 * C2070) *
                C31230 * C13231) *
               C31336) *
              C31046 * C2678 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31362 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31365 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C31353 +
           ((C21286 + C21285) * C31230 * C13231 +
            (C18730 * C2056 - C18731 * C2050 - C18730 * C2057 + C18728 * C2068 +
             C18732 * C2066 - C18733 * C2055 - C18732 * C2067 +
             C18729 * C2073) *
                C31230 * C13232) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31147 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31154 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C3840) *
              C31046 * C31023 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31154 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31147 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C3840) *
              C31046 * C31032 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31147 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31154 +
           ((C19194 + C19193) * C31230 * C13231 +
            (C18730 * C524 - C18731 * C507 - C18730 * C525 + C18728 * C537 +
             C18732 * C2343 - C18733 * C2342 - C18732 * C2344 +
             C18729 * C2345) *
                C31230 * C13232) *
               C3840) *
              C31046 * C2941)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C3332 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31046 * C31363 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31151 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C3332) *
              C31046 * C31356 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C3332 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31151) *
              C31046 * C31343 +
          (((C19482 + C19481) * C31230 * C13231 +
            (C18730 * C526 - C18731 * C508 - C18730 * C527 + C18728 * C538 +
             C18732 * C528 - C18733 * C509 - C18732 * C529 + C18729 * C539) *
                C31230 * C13232) *
               C31151 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C3332 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31357 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C3332) *
               C31345 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C3332 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C31320) *
              C2678 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C3332) *
               C31357 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C3332 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31345 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31289 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31109) *
              C688 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31109 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31289) *
              C689 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31289 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31109) *
              C690 +
          (((C19338 + C19337) * C31230 * C13231 +
            (C18730 * C325 - C18731 * C307 - C18730 * C326 + C18728 * C337 +
             C18732 * C975 - C18733 * C966 - C18732 * C976 + C18729 * C981) *
                C31230 * C13232) *
               C31064 * C31109 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1458 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1459 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C1460 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31064 * C31330) *
              C31275 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1459 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1458 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C1460 +
           ((C20222 + C20221) * C31230 * C13231 +
            (C18730 * C1196 - C18731 * C1190 - C18730 * C1197 + C18728 * C1208 +
             C18732 * C1755 - C18733 * C1750 - C18732 * C1756 +
             C18729 * C1759) *
                C31230 * C13232) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C31289 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C31109) *
              C296 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C31289 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C31109) *
              C297 +
          ((((C18786 + C18785) * C31230 * C13231 +
             (C18787 + C18788) * C31230 * C13232) *
                C31290 -
            ((C19481 + C19482) * C31230 * C13232 +
             (C19192 + C19191) * C31230 * C13231) *
                C31151) *
               C31289 +
           (((C19704 + C19703) * C31230 * C13231 +
             (C18730 * C973 - C18731 * C965 - C18730 * C974 + C18728 * C980 +
              C18732 * C2221 - C18733 * C2220 - C18732 * C2222 +
              C18729 * C2223) *
                 C31230 * C13232) *
                C31151 -
            ((C19337 + C19338) * C31230 * C13232 +
             (C18990 + C18989) * C31230 * C13231) *
                C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31290 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C1458 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31151 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31290) *
              C1459 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31290 -
           ((C20429 + C20430) * C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31151) *
              C1460 +
          (((C18730 * C1751 - C18731 * C1748 - C18730 * C1752 + C18728 * C1757 +
             C18732 * C5701 - C18733 * C5698 - C18732 * C5702 +
             C18729 * C5707) *
                C31230 * C13231 +
            (C18730 * C1753 - C18731 * C1749 - C18730 * C1754 + C18728 * C1758 +
             C18732 * C6554 - C18733 * C6553 - C18732 * C6555 +
             C18729 * C6556) *
                C31230 * C13232) *
               C31151 -
           ((C20221 + C20222) * C31230 * C13232 +
            (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
             C18730 * C1200 - C18731 * C1192 - C18730 * C1201 +
             C18728 * C1210) *
                C31230 * C13231) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31345 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31345 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31357 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18732 * C973 - C18733 * C965 - C18732 * C974 + C18729 * C980 +
             C18730 * C321 - C18731 * C305 - C18730 * C322 + C18728 * C335) *
                C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31345 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C31046 * C108 -
          ((C18785 + C18786) * C31230 * C13232 +
           (C18784 + C18783) * C31230 * C13231) *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C31230 * C13231 +
           (C18787 + C18788) * C31230 * C13232) *
              C31064 * C31046 * C110 -
          ((C18789 + C18790) * C31230 * C13232 +
           (C18788 + C18787) * C31230 * C13231) *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C31230 * C13231 +
           (C18730 * C132 - C18731 * C120 - C18730 * C133 + C18728 * C141 +
            C18732 * C805 - C18733 * C804 - C18732 * C806 + C18729 * C807) *
               C31230 * C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31358 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C31046 * C296 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31347 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31358 -
           ((C19193 + C19194) * C31230 * C13232 +
            (C19190 + C19189) * C31230 * C13231) *
               C31323) *
              C31046 * C297 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31358 -
           ((C18732 * C524 - C18733 * C507 - C18732 * C525 + C18729 * C537 +
             C18730 * C522 - C18731 * C506 - C18730 * C523 + C18728 * C536) *
                C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31347 +
           ((C19194 + C19193) * C31230 * C13231 +
            (C18730 * C524 - C18731 * C507 - C18730 * C525 + C18728 * C537 +
             C18732 * C2343 - C18733 * C2342 - C18732 * C2344 +
             C18729 * C2345) *
                C31230 * C13232) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1116 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1117 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1117 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1116 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C1116 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C1117 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C1184 -
          ((C18985 + C18986) * C31230 * C13232 +
           (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
            C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
               C31230 * C13231) *
              C31064 * C1185 +
          ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
            C18732 * C1343 - C18733 * C1329 - C18732 * C1344 + C18729 * C1356) *
               C31230 * C13231 +
           (C18987 + C18988) * C31230 * C13232) *
              C31064 * C1186 -
          ((C18732 * C1753 - C18733 * C1749 - C18732 * C1754 + C18729 * C1758 +
            C18730 * C1198 - C18731 * C1191 - C18730 * C1199 + C18728 * C1209) *
               C31230 * C13232 +
           (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
            C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210) *
               C31230 * C13231) *
              C31064 * C1187 +
          ((C18730 * C1202 - C18731 * C1193 - C18730 * C1203 + C18728 * C1211 +
            C18732 * C5703 - C18733 * C5699 - C18732 * C5704 + C18729 * C5708) *
               C31230 * C13231 +
           (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
            C18732 * C5994 - C18733 * C5993 - C18732 * C5995 + C18729 * C5996) *
               C31230 * C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31358 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C516 - C18731 * C503 - C18730 * C517 + C18728 * C533 +
             C18732 * C2060 - C18733 * C2052 - C18732 * C2061 +
             C18729 * C2070) *
                C31230 * C13231 +
            (C19189 + C19190) * C31230 * C13232) *
               C31323) *
              C1116 +
          (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
             C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
             C18729 * C1353) *
                C31230 * C13231 +
            (C19701 + C19702) * C31230 * C13232) *
               C31347 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31358 -
           ((C18732 * C2465 - C18733 * C2461 - C18732 * C2466 + C18729 * C2470 +
             C18730 * C1335 - C18731 * C1325 - C18730 * C1336 +
             C18728 * C1352) *
                C31230 * C13232 +
            (C18732 * C2463 - C18733 * C2460 - C18732 * C2464 + C18729 * C2469 +
             C18730 * C1337 - C18731 * C1326 - C18730 * C1338 +
             C18728 * C1353) *
                C31230 * C13231) *
               C31323) *
              C1117 +
          (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31358 -
           ((C18732 * C1347 - C18733 * C1331 - C18732 * C1348 + C18729 * C1358 +
             C18730 * C1341 - C18731 * C1328 - C18730 * C1342 +
             C18728 * C1355) *
                C31230 * C13232 +
            (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 + C18729 * C1357 +
             C18730 * C1343 - C18731 * C1329 - C18730 * C1344 +
             C18728 * C1356) *
                C31230 * C13231) *
               C31347 +
           ((C18730 * C1345 - C18731 * C1330 - C18730 * C1346 + C18728 * C1357 +
             C18732 * C6398 - C18733 * C6395 - C18732 * C6399 +
             C18729 * C6404) *
                C31230 * C13231 +
            (C18730 * C1347 - C18731 * C1331 - C18730 * C1348 + C18728 * C1358 +
             C18732 * C6663 - C18733 * C6662 - C18732 * C6664 +
             C18729 * C6665) *
                C31230 * C13232) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31290 -
           ((C19187 + C19188) * C31230 * C13232 +
            (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
             C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                C31230 * C13231) *
               C31151) *
              C31046 * C688 +
          (((C19188 + C19187) * C31230 * C13231 +
            (C19191 + C19192) * C31230 * C13232) *
               C31151 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31290) *
              C31046 * C689 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31290 -
           ((C19481 + C19482) * C31230 * C13232 +
            (C19192 + C19191) * C31230 * C13231) *
               C31151) *
              C31046 * C690 +
          (((C19482 + C19481) * C31230 * C13231 +
            (C18730 * C526 - C18731 * C508 - C18730 * C527 + C18728 * C538 +
             C18732 * C528 - C18733 * C509 - C18732 * C529 + C18729 * C539) *
                C31230 * C13232) *
               C31151 -
           ((C18789 + C18790) * C31230 * C13232 +
            (C18788 + C18787) * C31230 * C13231) *
               C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
              C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                 C31230 * C13231 +
             (C18783 + C18784) * C31230 * C13232) *
                C31290 -
            ((C19187 + C19188) * C31230 * C13232 +
             (C18732 * C516 - C18733 * C503 - C18732 * C517 + C18729 * C533 +
              C18730 * C514 - C18731 * C502 - C18730 * C515 + C18728 * C532) *
                 C31230 * C13231) *
                C31151) *
               C1116 +
           (((C18730 * C967 - C18731 * C962 - C18730 * C968 + C18728 * C977 +
              C18732 * C1337 - C18733 * C1326 - C18732 * C1338 +
              C18729 * C1353) *
                 C31230 * C13231 +
             (C19701 + C19702) * C31230 * C13232) *
                C31151 -
            ((C18985 + C18986) * C31230 * C13232 +
             (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
              C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                 C31230 * C13231) *
                C31290) *
               C1117 +
           (((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
              C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
              C18729 * C1356) *
                 C31230 * C13231 +
             (C18987 + C18988) * C31230 * C13232) *
                C31290 -
            ((C20429 + C20430) * C31230 * C13232 +
             (C18732 * C1345 - C18733 * C1330 - C18732 * C1346 +
              C18729 * C1357 + C18730 * C1343 - C18731 * C1329 -
              C18730 * C1344 + C18728 * C1356) *
                 C31230 * C13231) *
                C31151) *
               C31320) *
              C31275 +
          ((((C19188 + C19187) * C31230 * C13231 +
             (C19191 + C19192) * C31230 * C13232) *
                C31151 -
            ((C18785 + C18786) * C31230 * C13232 +
             (C18784 + C18783) * C31230 * C13231) *
                C31290) *
               C1116 +
           (((C18986 + C18985) * C31230 * C13231 +
             (C18989 + C18990) * C31230 * C13232) *
                C31290 -
            ((C19703 + C19704) * C31230 * C13232 +
             (C19702 + C19701) * C31230 * C13231) *
                C31151) *
               C1117 +
           (((C20430 + C20429) * C31230 * C13231 +
             (C18730 * C1339 - C18731 * C1327 - C18730 * C1340 +
              C18728 * C1354 + C18732 * C1349 - C18733 * C1332 -
              C18732 * C1350 + C18729 * C1359) *
                 C31230 * C13232) *
                C31151 -
            ((C18991 + C18992) * C31230 * C13232 +
             (C18988 + C18987) * C31230 * C13231) *
                C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C31046 * C108 -
          ((C18785 + C18786) * C31230 * C13232 +
           (C18784 + C18783) * C31230 * C13231) *
              C31064 * C31046 * C109 +
          ((C18786 + C18785) * C31230 * C13231 +
           (C18787 + C18788) * C31230 * C13232) *
              C31064 * C31046 * C110 -
          ((C18789 + C18790) * C31230 * C13232 +
           (C18788 + C18787) * C31230 * C13231) *
              C31064 * C31046 * C111 +
          ((C18790 + C18789) * C31230 * C13231 +
           (C18730 * C132 - C18731 * C120 - C18730 * C133 + C18728 * C141 +
            C18732 * C805 - C18733 * C804 - C18732 * C806 + C18729 * C807) *
               C31230 * C13232) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C31345 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C296 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C31345 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C31357 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C297 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C31357 -
           ((C18732 * C973 - C18733 * C965 - C18732 * C974 + C18729 * C980 +
             C18730 * C321 - C18731 * C305 - C18730 * C322 + C18728 * C335) *
                C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C31345 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
             C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
                C31230 * C13231 +
            (C18783 + C18784) * C31230 * C13232) *
               C31064 * C1116 -
           ((C18985 + C18986) * C31230 * C13232 +
            (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
             C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
                C31230 * C13231) *
               C31064 * C1117 +
           ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
             C18732 * C1343 - C18733 * C1329 - C18732 * C1344 +
             C18729 * C1356) *
                C31230 * C13231 +
            (C18987 + C18988) * C31230 * C13232) *
               C31064 * C31320) *
              C31354 +
          (((C18986 + C18985) * C31230 * C13231 +
            (C18989 + C18990) * C31230 * C13232) *
               C31064 * C1117 -
           ((C18785 + C18786) * C31230 * C13232 +
            (C18784 + C18783) * C31230 * C13231) *
               C31064 * C1116 -
           ((C18991 + C18992) * C31230 * C13232 +
            (C18988 + C18987) * C31230 * C13231) *
               C31064 * C31320) *
              C31341 +
          (((C18786 + C18785) * C31230 * C13231 +
            (C18787 + C18788) * C31230 * C13232) *
               C31064 * C1116 -
           ((C19337 + C19338) * C31230 * C13232 +
            (C18990 + C18989) * C31230 * C13231) *
               C31064 * C1117 +
           ((C18992 + C18991) * C31230 * C13231 +
            (C18730 * C323 - C18731 * C306 - C18730 * C324 + C18728 * C336 +
             C18732 * C1631 - C18733 * C1630 - C18732 * C1632 +
             C18729 * C1633) *
                C31230 * C13232) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C18730 * C122 - C18731 * C115 - C18730 * C123 + C18728 * C136 +
            C18732 * C514 - C18733 * C502 - C18732 * C515 + C18729 * C532) *
               C31230 * C13231 +
           (C18783 + C18784) * C31230 * C13232) *
              C31064 * C1184 -
          ((C18985 + C18986) * C31230 * C13232 +
           (C18732 * C967 - C18733 * C962 - C18732 * C968 + C18729 * C977 +
            C18730 * C313 - C18731 * C301 - C18730 * C314 + C18728 * C331) *
               C31230 * C13231) *
              C31064 * C1185 +
          ((C18730 * C315 - C18731 * C302 - C18730 * C316 + C18728 * C332 +
            C18732 * C1343 - C18733 * C1329 - C18732 * C1344 + C18729 * C1356) *
               C31230 * C13231 +
           (C18987 + C18988) * C31230 * C13232) *
              C31064 * C1186 -
          ((C18732 * C1753 - C18733 * C1749 - C18732 * C1754 + C18729 * C1758 +
            C18730 * C1198 - C18731 * C1191 - C18730 * C1199 + C18728 * C1209) *
               C31230 * C13232 +
           (C18732 * C1751 - C18733 * C1748 - C18732 * C1752 + C18729 * C1757 +
            C18730 * C1200 - C18731 * C1192 - C18730 * C1201 + C18728 * C1210) *
               C31230 * C13231) *
              C31064 * C1187 +
          ((C18730 * C1202 - C18731 * C1193 - C18730 * C1203 + C18728 * C1211 +
            C18732 * C5703 - C18733 * C5699 - C18732 * C5704 + C18729 * C5708) *
               C31230 * C13231 +
           (C18730 * C1204 - C18731 * C1194 - C18730 * C1205 + C18728 * C1212 +
            C18732 * C5994 - C18733 * C5993 - C18732 * C5995 + C18729 * C5996) *
               C31230 * C13232) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31105 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31112 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C2938) *
              C31023 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31112 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31105 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C2938) *
              C31032 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31105 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31112 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C2938) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31105 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31112 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C2938) *
              C31023 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31112 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31105 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C2938) *
              C31032 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31105 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31112 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C2938) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31105 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31112 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C31290 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C2938) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C31105 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31112 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31105 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31112 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C2938) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31105 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31112 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31364 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31360 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31350 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C2678 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31360 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31364 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31350 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C2570 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C31363 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C2570) *
              C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C2570 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C31343 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31358 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31347 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C31323) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31347 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31358 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C31323) *
               C31109) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31358 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31347 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C2570 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C31363 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C2570) *
              C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C2570 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C31343 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31364 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31360 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C31350 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C2678 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31360 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31364 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C31350 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31358 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31347 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C31323) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
               C31109) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31323) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31358 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31347 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31109) *
              C31023 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31032 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C2570 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C31023 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C2570 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C31363 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C2570) *
              C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C2570 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C31343 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31364 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31360 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31350 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C2678 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31360 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31364 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31350 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C2570 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C31363 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C2570) *
              C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C2570 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C31343 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C2570) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31364 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31360 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C31350 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C2678 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31360 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31364 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C31350 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31105 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31112 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C3332 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C2938) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31105 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31112 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31105 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31112 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C2938) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31105 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31112 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C2938) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31147 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C3840) *
              C31105 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31154 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31147 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C3840) *
              C31112 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31147 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31154 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C3840) *
              C2938) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31147 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C3840) *
              C31105 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
              C31112 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31147 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31154 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C3840) *
              C2938) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31364 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C3332) *
              C31360 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C3332 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C31350 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31109) *
              C31354 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31341 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C2570 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31365 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31353 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C2570 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31362 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31365 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31353 +
           ((C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C31230 * C103 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C31230 * C104 +
            (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                C31230 * C105) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31364 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
              C31360 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C31350 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31365 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31353 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C2570 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31362 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31365 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31353 +
           (C6782 * C4793 + C6781 * C4794 +
            (C113 * C6765 - C114 * C6764 - C113 * C6766 + C31243 * C6767) *
                C4795) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31147 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C3840) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31154 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31147 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C3840) *
               C31109) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31147 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31154 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31147 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C3840) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
               C31109) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31147 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31154 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C2570 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31109) *
              C31354 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C2570 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31341 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C2570 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31364 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C3332) *
              C31360 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C3332 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C31350 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C2570 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31354 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C2570 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31341 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C2570 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31364 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
              C31360 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C31350 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C3332) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1458 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1459 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C1460 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C31275 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1459 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1458 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C1460 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31289 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C688 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31289) *
              C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31289 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C690 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C1870 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C1871 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C31323) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C1871 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C1870 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C31323) *
               C31109) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C1870 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C1871 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31289 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C688 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31289) *
              C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31289 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C690 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1458 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1459 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C1460 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C31275 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1459 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1458 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C1460 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C1870 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C1871 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C31323) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
               C31109) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31323) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C1870 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C1871 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C31323) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C1458 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31290) *
              C1459 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31290 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C1460 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31109) *
              C296 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C297 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C31289 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C2338 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C2340 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31289 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C2339 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C2338 -
           (C2239 * C105 + C2240 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C2340 +
           ((C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C31230 * C103 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C31230 * C104 +
            (C113 * C2467 - C114 * C2462 - C113 * C2468 + C31243 * C2471) *
                C31230 * C105) *
               C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 +
             (C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                 C4795) *
                C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C296 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            ((C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                 C4795 +
             C1648 * C4794 + C1001 * C4793) *
                C30996 * C31151) *
               C31109) *
              C297 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C1458 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
              C1459 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C1460 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C2338 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C2340 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31289 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C2339 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C2338 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C2340 +
           (C6782 * C4793 + C6781 * C4794 +
            (C113 * C6765 - C114 * C6764 - C113 * C6766 + C31243 * C6767) *
                C4795) *
               C30996 * C31336) *
              C31109) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                   C31230 * C103 +
               C179 * C104 + C180 * C105) *
                  C31064 * C31046 * C108 -
              (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 *
                  C109 +
              (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 *
                  C110 -
              (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 *
                  C111 +
              (C182 * C103 + C183 * C104 +
               (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) *
                   C31230 * C105) *
                  C31064 * C31046 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                    C31230 * C103 +
                C179 * C104 + C180 * C105) *
                   C31064 * C31357 -
               (C382 * C105 + C383 * C104 +
                (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                    C31230 * C103) *
                   C31064 * C31345 +
               ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                    C31230 * C103 +
                C384 * C104 + C385 * C105) *
                   C31064 * C31320) *
                  C296 +
              ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
               (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
               (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
                  C297 +
              ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
               ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) *
                    C31230 * C105 +
                C386 * C104 + C382 * C103) *
                   C31064 * C31345 +
               (C385 * C103 + C387 * C104 +
                (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) *
                    C31230 * C105) *
                   C31064 * C31320) *
                  C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C296 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31358 -
           ((C113 * C526 - C114 * C508 - C113 * C527 + C31243 * C538) * C31230 *
                C105 +
            C587 * C104 + C583 * C103) *
               C31347 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C1116 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31347 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31358 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C1117 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31358 -
           ((C113 * C1339 - C114 * C1327 - C113 * C1340 + C31243 * C1354) *
                C31230 * C105 +
            (C113 * C1341 - C114 * C1328 - C113 * C1342 + C31243 * C1355) *
                C31230 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31347 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C31354 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C1870 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C1871 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31357 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C1871 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C1870 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C31345 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C1870 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C1871 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C2045 -
          (C583 * C105 + C584 * C104 +
           (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
               C103) *
              C2046 +
          ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
               C103 +
           C585 * C104 + C586 * C105) *
              C2047 -
          ((C113 * C2056 - C114 * C2050 - C113 * C2057 + C31243 * C2068) *
               C31230 * C105 +
           (C113 * C2058 - C114 * C2051 - C113 * C2059 + C31243 * C2069) *
               C31230 * C104 +
           (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
               C31230 * C103) *
              C2048 +
          ((C113 * C2062 - C114 * C2053 - C113 * C2063 + C31243 * C2071) *
               C31230 * C103 +
           (C113 * C2064 - C114 * C2054 - C113 * C2065 + C31243 * C2072) *
               C31230 * C104 +
           (C113 * C2066 - C114 * C2055 - C113 * C2067 + C31243 * C2073) *
               C31230 * C105) *
              C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C4794 +
            (C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C4795) *
               C30996 * C31323) *
              C31046 * C296 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31358 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31347 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C1116 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C1117 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31358 -
           ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                C4795 +
            C5737 * C4794 + C5393 * C4793) *
               C30996 * C31347 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31046 * C31354 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C1870 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C1871 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31357 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C31345 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C1870 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C1871 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C2045 -
          (C5393 * C4795 + C5394 * C4794 +
           (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
              C30996 * C2046 +
          ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
           C5735 * C4794 + C5736 * C4795) *
              C30996 * C2047 -
          ((C113 * C6398 - C114 * C6395 - C113 * C6399 + C31243 * C6404) *
               C4795 +
           (C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
               C4794 +
           (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
               C4793) *
              C30996 * C2048 +
          ((C113 * C2062 - C114 * C2053 - C113 * C2063 + C31243 * C2071) *
               C4793 +
           (C113 * C6400 - C114 * C6396 - C113 * C6401 + C31243 * C6405) *
               C4794 +
           (C113 * C6402 - C114 * C6397 - C113 * C6403 + C31243 * C6406) *
               C4795) *
              C30996 * C2049) *
         C31046 * C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C1116 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C1117 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C31290 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C1116 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C1117 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C688 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
              C31046 * C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C690 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C2338 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C2340 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31046 * C31275 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C2339 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C2338 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C2340 +
           (C2362 * C103 + C2361 * C104 +
            (C113 * C2343 - C114 * C2342 - C113 * C2344 + C31243 * C2345) *
                C31230 * C105) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C688 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
              C31046 * C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C690 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C1116 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C1117 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                 C4795 +
             C5737 * C4794 + C5393 * C4793) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C1116 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C1117 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C2338 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C2339 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C2340 -
           ((C113 * C6398 - C114 * C6395 - C113 * C6399 + C31243 * C6404) *
                C4795 +
            (C113 * C2463 - C114 * C2460 - C113 * C2464 + C31243 * C2469) *
                C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31046 * C31275 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C2339 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C2338 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C2340 +
           (C2360 * C4793 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C4794 +
            (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                C4795) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31357 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31345 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C296 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
           ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) * C31230 *
                C105 +
            C386 * C104 + C382 * C103) *
               C31064 * C31345 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C31046 * C108 -
          (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 * C109 +
          (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 * C110 -
          (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 * C111 +
          (C182 * C103 + C183 * C104 +
           (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) * C31230 *
               C105) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C31354 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C1871 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C1870 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C1870 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C1871 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C1870 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31357 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C1871 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C1870 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C31345 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C1870 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C1871 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31046 * C31354 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C1871 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C1870 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C1870 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C1871 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C1870 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C1871 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C31357 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C1871 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C1870 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C31345 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C1870 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C1871 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31109) *
              C31023 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C31032 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C31289 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C3332) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31109) *
              C31023 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31109) *
              C31032 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C3332) *
               C31109) *
              C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31147 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) *
                 C31230 * C103 +
             C585 * C104 + C586 * C105) *
                C3840) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31154 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31147 -
            (C2239 * C105 + C2240 * C104 +
             (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                 C31230 * C103) *
                C3840) *
               C31109) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
            (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31147 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31154 +
            (C2240 * C103 + C2239 * C104 +
             (C113 * C2221 - C114 * C2220 - C113 * C2222 + C31243 * C2223) *
                 C31230 * C105) *
                C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31147 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31154 +
            ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
             C5735 * C4794 + C5736 * C4795) *
                C30996 * C3840) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31154 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31147 -
            (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C3840) *
               C31109) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
            (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31147 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31154 +
            (C2238 * C4793 + C6564 * C4794 +
             (C113 * C6554 - C114 * C6553 - C113 * C6555 + C31243 * C6556) *
                 C4795) *
                C30996 * C3840) *
               C31109) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31357 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31345 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C3332 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31357 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31345 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C31363 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
              C31046 * C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C31343 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31365 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31353 -
           (C2361 * C105 + C2362 * C104 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C31230 * C103) *
               C31336) *
              C31046 * C2678 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31362 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31365 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31353 +
           (C2362 * C103 + C2361 * C104 +
            (C113 * C2343 - C114 * C2342 - C113 * C2344 + C31243 * C2345) *
                C31230 * C105) *
               C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C31363 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
              C31046 * C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C31343 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31357 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31345 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31357 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31345 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31365 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31362 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31353 -
           (C6781 * C4795 + C6782 * C4794 +
            (C113 * C2060 - C114 * C2052 - C113 * C2061 + C31243 * C2070) *
                C4793) *
               C30996 * C31336) *
              C31046 * C2678 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31362 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31365 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C31353 +
           (C2360 * C4793 +
            (C113 * C2465 - C114 * C2461 - C113 * C2466 + C31243 * C2470) *
                C4794 +
            (C113 * C6663 - C114 * C6662 - C113 * C6664 + C31243 * C6665) *
                C4795) *
               C30996 * C31336) *
              C31046 * C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31147 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C3840) *
              C31046 * C31023 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31154 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31147 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C3840) *
              C31046 * C31032 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31147 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31154 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C3840) *
              C31046 * C2941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31147 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31154 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C3840) *
              C31046 * C31023 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31154 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31147 -
           (C6564 * C4795 + C2238 * C4794 + C579 * C4793) * C30996 * C3840) *
              C31046 * C31032 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31147 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31154 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C3840) *
              C31046 * C2941)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C3332 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C31363 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
              C31046 * C31356 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C3332 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C31343 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C3332 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31357 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C3332) *
               C31345 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C3332 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C2678 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C3332) *
               C31357 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C3332 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31345 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C3332 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C31363 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
              C31046 * C31356 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C3332 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C31343 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C3332) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C3332 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31357 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C3332) *
               C31345 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C3332 -
            (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
               C31320) *
              C2678 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C3332) *
               C31357 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C3332 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C31345 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C3332) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31289 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31109) *
              C688 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31109 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31289) *
              C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31289 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C31109) *
              C690 +
          ((C386 * C103 + C704 * C104 +
            (C113 * C693 - C114 * C692 - C113 * C694 + C31243 * C695) * C31230 *
                C105) *
               C31064 * C31109 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1458 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1459 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C1460 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31064 * C31330) *
              C31275 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1459 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1458 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C1460 +
           (C1484 * C103 + C1483 * C104 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C31230 * C105) *
               C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31289 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31109) *
              C688 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31109 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31289) *
              C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31289 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31109) *
              C690 +
          ((C380 * C4793 + C381 * C4794 +
            (C113 * C1465 - C114 * C1464 - C113 * C1466 + C31243 * C1467) *
                C4795) *
               C30996 * C31064 * C31109 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
               C31289) *
              C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1458 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1459 +
           (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
               C1460 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
               C31330) *
              C31275 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1459 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1458 -
           (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31064 *
               C1460 +
           (C1482 * C4793 + C5847 * C4794 +
            (C113 * C5837 - C114 * C5836 - C113 * C5838 + C31243 * C5839) *
                C4795) *
               C30996 * C31064 * C31330) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C31289 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C31109) *
              C296 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C31289 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C31109) *
              C297 +
          (((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
            (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
               C31289 +
           ((C1005 * C103 + C1006 * C104 +
             (C113 * C975 - C114 * C966 - C113 * C976 + C31243 * C981) *
                 C31230 * C105) *
                C31151 -
            (C704 * C105 + C386 * C104 + C382 * C103) * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C1458 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31151 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31290) *
              C1459 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31290 -
           (C1649 * C105 + C1650 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31151) *
              C1460 +
          (((C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                C31230 * C103 +
            (C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                C31230 * C104 +
            (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                C31230 * C105) *
               C31151 -
           (C1483 * C105 + C1484 * C104 +
            (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
                C31230 * C103) *
               C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C31289 +
           ((C5394 * C4793 + C5393 * C4794 +
             (C113 * C1751 - C114 * C1748 - C113 * C1752 + C31243 * C1757) *
                 C4795) *
                C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C31109) *
              C296 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C31289 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            ((C113 * C1753 - C114 * C1749 - C113 * C1754 + C31243 * C1758) *
                 C4795 +
             C1648 * C4794 + C1001 * C4793) *
                C30996 * C31151) *
               C31109) *
              C297 +
          (((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
            (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
               C31289 +
           ((C1002 * C4793 + C1647 * C4794 +
             (C113 * C1755 - C114 * C1750 - C113 * C1756 + C31243 * C1759) *
                 C4795) *
                C30996 * C31151 -
            (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31290) *
               C31109) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C1458 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
              C1459 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
           (C6113 * C4795 + C5737 * C4794 + C5393 * C4793) * C30996 * C31151) *
              C1460 +
          ((C5737 * C4793 + C6113 * C4794 +
            (C113 * C6103 - C114 * C6102 - C113 * C6104 + C31243 * C6105) *
                C4795) *
               C30996 * C31151 -
           (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31290) *
              C31330) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31357 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31345 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C296 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
           ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) * C31230 *
                C105 +
            C386 * C104 + C382 * C103) *
               C31064 * C31345 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C31046 * C108 -
          (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 * C109 +
          (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 * C110 -
          (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 * C111 +
          (C182 * C103 + C183 * C104 +
           (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) * C31230 *
               C105) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C31046 * C296 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31347 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31358 -
           (C588 * C105 + C586 * C104 + C585 * C103) * C31323) *
              C31046 * C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31358 -
           ((C113 * C526 - C114 * C508 - C113 * C527 + C31243 * C538) * C31230 *
                C105 +
            C587 * C104 + C583 * C103) *
               C31347 +
           (C586 * C103 + C588 * C104 +
            (C113 * C528 - C114 * C509 - C113 * C529 + C31243 * C539) * C31230 *
                C105) *
               C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31358 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C31230 *
                C103 +
            C585 * C104 + C586 * C105) *
               C31323) *
              C1116 +
          (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C31230 *
                C103 +
            C1004 * C104 + C1005 * C105) *
               C31347 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31358 -
           ((C113 * C1333 - C114 * C1324 - C113 * C1334 + C31243 * C1351) *
                C31230 * C105 +
            (C113 * C1335 - C114 * C1325 - C113 * C1336 + C31243 * C1352) *
                C31230 * C104 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C31230 * C103) *
               C31323) *
              C1117 +
          (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31358 -
           ((C113 * C1339 - C114 * C1327 - C113 * C1340 + C31243 * C1354) *
                C31230 * C105 +
            (C113 * C1341 - C114 * C1328 - C113 * C1342 + C31243 * C1355) *
                C31230 * C104 +
            (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C31230 * C103) *
               C31347 +
           ((C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C31230 * C103 +
            (C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C31230 * C104 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C31230 * C105) *
               C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            (C113 * C1337 - C114 * C1326 - C113 * C1338 + C31243 * C1353) *
                C4794 +
            (C113 * C1345 - C114 * C1330 - C113 * C1346 + C31243 * C1357) *
                C4795) *
               C30996 * C31323) *
              C31046 * C296 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31347 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31358 -
           ((C113 * C1347 - C114 * C1331 - C113 * C1348 + C31243 * C1358) *
                C4795 +
            C2238 * C4794 + C579 * C4793) *
               C30996 * C31323) *
              C31046 * C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31358 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31347 +
           (C580 * C4793 + C2237 * C4794 +
            (C113 * C1349 - C114 * C1332 - C113 * C1350 + C31243 * C1359) *
                C4795) *
               C30996 * C31323) *
              C31046 * C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31358 -
           (C5393 * C4795 + C5394 * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31347 +
           ((C113 * C516 - C114 * C503 - C113 * C517 + C31243 * C533) * C4793 +
            C5735 * C4794 + C5736 * C4795) *
               C30996 * C31323) *
              C1116 +
          ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31347 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31358 -
           (C5738 * C4795 + C5736 * C4794 + C5735 * C4793) * C30996 * C31323) *
              C1117 +
          ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31358 -
           ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                C4795 +
            C5737 * C4794 + C5393 * C4793) *
               C30996 * C31347 +
           (C5736 * C4793 + C5738 * C4794 +
            (C113 * C5705 - C114 * C5700 - C113 * C5706 + C31243 * C5709) *
                C4795) *
               C30996 * C31323) *
              C31320) *
         C31018) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31290 -
           (C583 * C105 + C584 * C104 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C31230 *
                C103) *
               C31151) *
              C31046 * C688 +
          ((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
              C31046 * C689 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31290 -
           (C816 * C105 + C587 * C104 + C583 * C103) * C31151) *
              C31046 * C690 +
          ((C587 * C103 + C816 * C104 +
            (C113 * C805 - C114 * C804 - C113 * C806 + C31243 * C807) * C31230 *
                C105) *
               C31151 -
           (C183 * C105 + C182 * C104 + C181 * C103) * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) *
                 C31230 * C103 +
             C179 * C104 + C180 * C105) *
                C31290 -
            (C583 * C105 + C584 * C104 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C31230 * C103) *
                C31151) *
               C1116 +
           (((C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) *
                 C31230 * C103 +
             C1004 * C104 + C1005 * C105) *
                C31151 -
            (C382 * C105 + C383 * C104 +
             (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) *
                 C31230 * C103) *
                C31290) *
               C1117 +
           (((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) *
                 C31230 * C103 +
             C384 * C104 + C385 * C105) *
                C31290 -
            (C1649 * C105 + C1650 * C104 +
             (C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                 C31230 * C103) *
                C31151) *
               C31320) *
              C31275 +
          (((C584 * C103 + C583 * C104 + C587 * C105) * C31151 -
            (C181 * C105 + C180 * C104 + C179 * C103) * C31290) *
               C1116 +
           ((C383 * C103 + C382 * C104 + C386 * C105) * C31290 -
            (C1006 * C105 + C1005 * C104 + C1004 * C103) * C31151) *
               C1117 +
           ((C1650 * C103 + C1649 * C104 +
             (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                 C31230 * C105) *
                C31151 -
            (C387 * C105 + C385 * C104 + C384 * C103) * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31290 -
           ((C113 * C1343 - C114 * C1329 - C113 * C1344 + C31243 * C1356) *
                C4795 +
            (C113 * C967 - C114 * C962 - C113 * C968 + C31243 * C977) * C4794 +
            (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) * C4793) *
               C30996 * C31151) *
              C31046 * C688 +
          ((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
              C31046 * C689 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31290 -
           (C1647 * C4795 + C1002 * C4794 + C577 * C4793) * C30996 * C31151) *
              C31046 * C690 +
          ((C581 * C4793 + C1003 * C4794 +
            (C113 * C1631 - C114 * C1630 - C113 * C1632 + C31243 * C1633) *
                C4795) *
               C30996 * C31151 -
           (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31290) *
              C31046 * C31324)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
             C4926 * C4794 + C4927 * C4795) *
                C30996 * C31290 -
            (C5393 * C4795 + C5394 * C4794 +
             (C113 * C514 - C114 * C502 - C113 * C515 + C31243 * C532) *
                 C4793) *
                C30996 * C31151) *
               C1116 +
           ((C5394 * C4793 + C5393 * C4794 + C5737 * C4795) * C30996 * C31151 -
            (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31290) *
               C1117 +
           ((C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31290 -
            ((C113 * C5703 - C114 * C5699 - C113 * C5704 + C31243 * C5708) *
                 C4795 +
             C5737 * C4794 + C5393 * C4793) *
                C30996 * C31151) *
               C31320) *
              C31275 +
          (((C578 * C4793 + C1001 * C4794 + C1648 * C4795) * C30996 * C31151 -
            (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31290) *
               C1116 +
           ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31290 -
            (C6004 * C4795 + C1648 * C4794 + C1001 * C4793) * C30996 * C31151) *
               C1117 +
           ((C1648 * C4793 + C6004 * C4794 +
             (C113 * C5994 - C114 * C5993 - C113 * C5995 + C31243 * C5996) *
                 C4795) *
                C30996 * C31151 -
            (C5847 * C4795 + C1482 * C4794 + C378 * C4793) * C30996 * C31290) *
               C31320) *
              C31029)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C31046 * C108 -
          (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31046 * C109 +
          (C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31046 * C110 -
          (C183 * C105 + C182 * C104 + C181 * C103) * C31064 * C31046 * C111 +
          (C182 * C103 + C183 * C104 +
           (C113 * C134 - C114 * C121 - C113 * C135 + C31243 * C142) * C31230 *
               C105) *
              C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C31357 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C31345 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C296 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C31345 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C31357 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C297 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C31357 -
           ((C113 * C325 - C114 * C307 - C113 * C326 + C31243 * C337) * C31230 *
                C105 +
            C386 * C104 + C382 * C103) *
               C31064 * C31345 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
                C103 +
            C179 * C104 + C180 * C105) *
               C31064 * C1116 -
           (C382 * C105 + C383 * C104 +
            (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
                C103) *
               C31064 * C1117 +
           ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
                C103 +
            C384 * C104 + C385 * C105) *
               C31064 * C31320) *
              C31354 +
          ((C383 * C103 + C382 * C104 + C386 * C105) * C31064 * C1117 -
           (C181 * C105 + C180 * C104 + C179 * C103) * C31064 * C1116 -
           (C387 * C105 + C385 * C104 + C384 * C103) * C31064 * C31320) *
              C31341 +
          ((C180 * C103 + C181 * C104 + C182 * C105) * C31064 * C1116 -
           (C704 * C105 + C386 * C104 + C382 * C103) * C31064 * C1117 +
           (C385 * C103 + C387 * C104 +
            (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C31230 *
                C105) *
               C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C31230 *
               C103 +
           C179 * C104 + C180 * C105) *
              C31064 * C1184 -
          (C382 * C105 + C383 * C104 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C31230 *
               C103) *
              C31064 * C1185 +
          ((C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C31230 *
               C103 +
           C384 * C104 + C385 * C105) *
              C31064 * C1186 -
          ((C113 * C1196 - C114 * C1190 - C113 * C1197 + C31243 * C1208) *
               C31230 * C105 +
           (C113 * C1198 - C114 * C1191 - C113 * C1199 + C31243 * C1209) *
               C31230 * C104 +
           (C113 * C1200 - C114 * C1192 - C113 * C1201 + C31243 * C1210) *
               C31230 * C103) *
              C31064 * C1187 +
          ((C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
               C31230 * C103 +
           (C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
               C31230 * C104 +
           (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
               C31230 * C105) *
              C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           (C113 * C313 - C114 * C301 - C113 * C314 + C31243 * C331) * C4794 +
           (C113 * C315 - C114 * C302 - C113 * C316 + C31243 * C332) * C4795) *
              C30996 * C31064 * C31046 * C108 -
          (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
              C31046 * C109 +
          (C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
              C31046 * C110 -
          (C381 * C4795 + C380 * C4794 + C176 * C4793) * C30996 * C31064 *
              C31046 * C111 +
          (C177 * C4793 + C703 * C4794 +
           (C113 * C327 - C114 * C308 - C113 * C328 + C31243 * C338) * C4795) *
              C30996 * C31064 * C31046 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C31357 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C31345 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C296 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C31345 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C31357 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C297 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C31357 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C31345 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
            C4926 * C4794 + C4927 * C4795) *
               C30996 * C31064 * C1116 -
           (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
               C1117 +
           (C4927 * C4793 + C4928 * C4794 +
            (C113 * C1202 - C114 * C1193 - C113 * C1203 + C31243 * C1211) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31354 +
          ((C377 * C4793 + C378 * C4794 + C1482 * C4795) * C30996 * C31064 *
               C1117 -
           (C378 * C4795 + C377 * C4794 + C174 * C4793) * C30996 * C31064 *
               C1116 -
           ((C113 * C1204 - C114 * C1194 - C113 * C1205 + C31243 * C1212) *
                C4795 +
            C1482 * C4794 + C378 * C4793) *
               C30996 * C31064 * C31320) *
              C31341 +
          ((C175 * C4793 + C376 * C4794 + C379 * C4795) * C30996 * C31064 *
               C1116 -
           (C1481 * C4795 + C379 * C4794 + C376 * C4793) * C30996 * C31064 *
               C1117 +
           (C379 * C4793 + C1481 * C4794 +
            (C113 * C1206 - C114 * C1195 - C113 * C1207 + C31243 * C1213) *
                C4795) *
               C30996 * C31064 * C31320) *
              C31314)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C113 * C122 - C114 * C115 - C113 * C123 + C31243 * C136) * C4793 +
           C4926 * C4794 + C4927 * C4795) *
              C30996 * C31064 * C1184 -
          (C4928 * C4795 + C4927 * C4794 + C4926 * C4793) * C30996 * C31064 *
              C1185 +
          (C4927 * C4793 + C4928 * C4794 + C5587 * C4795) * C30996 * C31064 *
              C1186 -
          (C5588 * C4795 + C5587 * C4794 + C4928 * C4793) * C30996 * C31064 *
              C1187 +
          (C5587 * C4793 + C5588 * C4794 +
           (C113 * C5570 - C114 * C5567 - C113 * C5571 + C31243 * C5573) *
               C4795) *
              C30996 * C31064 * C1188) *
         C31018) /
            (p * q * std::sqrt(p + q));
}
